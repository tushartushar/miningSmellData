Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,FindByName,The length of the statement  "            userManager.Create(new ApplicationUser() { UserName = "test"' Email = "aaa@bbb.com"' EmailConfirmed = true }' "Welcome"); " is 121.
Long Statement,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,FindByEmail,The length of the statement  "            userManager.Create(new ApplicationUser() { UserName = "test"' Email = "aaa@bbb.com"' EmailConfirmed = true }' "Welcome"); " is 121.
Long Statement,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,EmailConfirmationToken,The length of the statement  "            userManager.UserTokenProvider = new EmailTokenProvider<ApplicationUser' string>() { BodyFormat = "xxxx {0}"' Subject = "Reset password" }; " is 138.
Long Statement,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,EmailConfirmationToken,The length of the statement  "            userManager.Create(new ApplicationUser() { UserName = "test"' Email = "aaa@bbb.com"' EmailConfirmed = false }' "Welcome"); " is 122.
Long Statement,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,FindByEmailAggregated,The length of the statement  "            userManager.Create(new ApplicationUser() { UserName = "test"' Email = "aaa@bbb.com"' EmailConfirmed = true }' "Welcome"); " is 121.
Long Statement,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,CreateWithoutCommitingTransactionScopeShouldNotInsertRows,The length of the statement  "                userManager.Create(new ApplicationUser() { UserName = "test"' Email = "aaa@bbb.com"' EmailConfirmed = true }' "Welcome1"); " is 122.
Long Statement,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,CreateWithoutCommitingNHibernateTransactionShouldNotInsertRows,The length of the statement  "                userManager.Create(new ApplicationUser() { UserName = "test"' Email = "aaa@bbb.com"' EmailConfirmed = true }' "Welcome1"); " is 122.
Long Statement,NHibernate.AspNet.Identity.Tests,MapTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\MapTest.cs,CanCorrectlyMapCascadeLogins,The length of the statement  "                //.CheckList(l => l.Logins' new[] { new IdentityUserLogin { LoginProvider = "Provider"' ProviderKey = "Key" } }' (user' login) => user.Logins.Add(login)) " is 153.
Magic Number,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,GetAllUsers,The following statement contains a magic number: Assert.AreEqual(4' resul.Count());
Magic Number,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,GetAllRoles,The following statement contains a magic number: Assert.AreEqual(2' resul.Count());
Magic Number,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,LockoutAccount,The following statement contains a magic number: userManager.MaxFailedAccessAttemptsBeforeLockout = 3;
Magic Number,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,LockoutAccount,The following statement contains a magic number: userManager.DefaultAccountLockoutTimeSpan = new TimeSpan(0' 10' 0);
Magic Number,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,LockoutAccount,The following statement contains a magic number: Assert.AreEqual(2' userManager.GetAccessFailedCount(user.Id));
Magic Number,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,FindByNameWithRoles,The following statement contains a magic number: Assert.AreEqual(2' x.Roles.Count);
Magic Number,NHibernate.AspNet.Identity.Tests,UserStoreTest,D:\research\architectureSmells\repos\milesibastos_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity.Tests\UserStoreTest.cs,FindByEmailAggregated,The following statement contains a magic number: Assert.AreEqual(2' x.Claims.Count);
