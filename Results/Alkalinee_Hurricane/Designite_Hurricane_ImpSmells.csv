Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hurricane.Designer.Data.ThemeData,AppThemeData,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\ThemeData\AppThemeData.cs,AppThemeData,The method has 173 lines of code.
Long Method,Hurricane.Music.Track,PlayableBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\PlayableBase.cs,StringToGenre,The method has 103 lines of code.
Long Method,Hurricane.GUI.Extensions.ListViewLayoutManager,ListViewLayoutManager,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Extensions\ListViewLayoutManager\ListViewLayoutManager.cs,ResizeColumns,The method has 100 lines of code.
Long Method,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,AboutView,The method has 169 lines of code.
Long Method,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,The method has 126 lines of code.
Long Method,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The method has 112 lines of code.
Complex Method,Hurricane.DragDrop.DropTargetAdorners,DropTargetInsertionAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\DropTargetAdorners\DropTargetInsertionAdorner.cs,OnRender,Cyclomatic complexity of the method is 8
Complex Method,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,ItemsSourceChanged,Cyclomatic complexity of the method is 8
Complex Method,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,Hurricane.Music.Playlist,ImportCueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportCueSheet.cs,Import,Cyclomatic complexity of the method is 8
Complex Method,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,OpenTrack,Cyclomatic complexity of the method is 9
Complex Method,Hurricane.GUI.Extensions.ListViewLayoutManager,ListViewLayoutManager,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Extensions\ListViewLayoutManager\ListViewLayoutManager.cs,InitColumns,Cyclomatic complexity of the method is 10
Complex Method,Hurricane.GUI.Extensions.ListViewLayoutManager,ListViewLayoutManager,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Extensions\ListViewLayoutManager\ListViewLayoutManager.cs,ResizeColumns,Cyclomatic complexity of the method is 21
Complex Method,Hurricane.GUI.Extensions.ListViewLayoutManager,ListViewLayoutManager,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Extensions\ListViewLayoutManager\ListViewLayoutManager.cs,ThumbPreviewMouseMove,Cyclomatic complexity of the method is 8
Complex Method,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,HookManager_MouseMove,Cyclomatic complexity of the method is 10
Complex Method,Hurricane.Music,AsyncTrackLoader,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AsyncTrackLoader.cs,LoadTracks,Cyclomatic complexity of the method is 8
Complex Method,Hurricane.Music.API,Commander,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\Commander.cs,ExecuteCommand,Cyclomatic complexity of the method is 8
Complex Method,Hurricane.Settings.Themes,ApplicationThemeManager,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\ApplicationThemeManager.cs,Refresh,Cyclomatic complexity of the method is 15
Complex Method,Hurricane.ViewModels,MainViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\MainViewModelCommands.cs,OpenFile,Cyclomatic complexity of the method is 8
Complex Method,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ApplyHostWindow,Cyclomatic complexity of the method is 10
Complex Method,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,Cyclomatic complexity of the method is 9
Complex Method,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,Cyclomatic complexity of the method is 13
Complex Method,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,KeyboardHookProc,Cyclomatic complexity of the method is 8
Long Parameter List,Hurricane.AppMainWindow.Messages,WindowDialogService,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\Messages\WindowDialogService.cs,ShowMessage,The method has 6 parameters. Parameters: message' title' cancancel' mode' affirmativeButtonText' negativeButtonText
Long Parameter List,Hurricane.AppMainWindow.Messages,WindowDialogService,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\Messages\WindowDialogService.cs,ShowInputDialog,The method has 5 parameters. Parameters: title' message' buttonok' defaulttext' mode
Long Parameter List,Hurricane.Music.Download,DownloadManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\DownloadManager.cs,DownloadAndConfigureTrack,The method has 5 parameters. Parameters: downloadInformation' musicInformation' fileName' progressChangedAction' settings
Long Parameter List,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,AddIndex,The method has 5 parameters. Parameters: trackIndex' indexNum' minutes' seconds' frames
Long Parameter List,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,Fade,The method has 5 parameters. Parameters: from' to' duration' getLouder' soundout
Long Parameter List,Hurricane.Settings,LanguageInfo,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\LanguageInfo.cs,LanguageInfo,The method has 5 parameters. Parameters: name' path' icon' translator' code
Long Parameter List,Hurricane.Settings,LanguageInfo,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\LanguageInfo.cs,LanguageInfo,The method has 5 parameters. Parameters: name' path' iconPath' translator' code
Long Parameter List,Hurricane.GUI.Extensions.ListViewLayoutManager,RangeColumn,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Extensions\ListViewLayoutManager\RangeColumn.cs,ApplyWidth,The method has 5 parameters. Parameters: gridViewColumn' minWidth' width' maxWidth' isFillColumn
Long Parameter List,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The method has 10 parameters. Parameters: zero' one' two' three' four' five' six' seven' eight' nine
Long Parameter List,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The method has 6 parameters. Parameters: imagequality' saveimage' directory' track' trimtrackname' useArtist
Long Parameter List,Hurricane.Notification.WindowMessages,WindowMessanger,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\WindowMessages\WindowMessanger.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,Hurricane.Settings.RegistryManager,RegistryContextMenuItem,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\RegistryManager\RegistryContextMenuItem.cs,RegistryContextMenuItem,The method has 5 parameters. Parameters: extension' standardname' header' apppath' iconpath
Long Parameter List,Hurricane.Settings.RegistryManager,RegistryRegister,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\RegistryManager\RegistryRegister.cs,RegisterExtension,The method has 5 parameters. Parameters: extension' header' name' applicationpath' iconpath
Long Parameter List,Hurricane.Utilities,ActiveWindowHook,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\ActiveWindowHook.cs,WinEventProc,The method has 7 parameters. Parameters: hWinEventHook' eventType' hwnd' idObject' idChild' dwEventThread' dwmsEventTime
Long Parameter List,Hurricane.Utilities.Native,UnsafeNativeMethods,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\Native\UnsafeNativeMethods.cs,SetWinEventHook,The method has 7 parameters. Parameters: eventMin' eventMax' hmodWinEventProc' lpfnWinEventProc' idProcess' idThread' dwFlags
Long Parameter List,Hurricane.Utilities.Native,UnsafeNativeMethods,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\Native\UnsafeNativeMethods.cs,PeekMessage,The method has 5 parameters. Parameters: msg' hWnd' messageFilterMin' messageFilterMax' flags
Long Parameter List,Hurricane.Views,MessageWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MessageWindow.xaml.cs,MessageWindow,The method has 5 parameters. Parameters: message' title' cancancel' affirmativeButtonText' negativeButtonText
Long Parameter List,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,ToAscii,The method has 5 parameters. Parameters: uVirtKey' uScanCode' lpbKeyState' lpwTransKey' fuState
Long Parameter List,Hurricane.Utilities.HookManager,MouseEventExtArgs,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\MouseEventExtArgs.cs,MouseEventExtArgs,The method has 5 parameters. Parameters: buttons' clicks' x' y' delta
Long Identifier,Hurricane.Designer.Data,ThemePack,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\ThemePack.cs,,The length of the parameter _accentColorResourceDictionary is 30.
Long Identifier,Hurricane.GUI.Behaviors,FrameworkElementBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\FrameworkElementBehavior.cs,PropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,PropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,AudioVisualisationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\AudioVisualisationBehavior.cs,AudioVisualisationForAdvancedWindowChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,AudioVisualisationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\AudioVisualisationBehavior.cs,AudioVisualisationForSmartWindowChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,AudioVisualisationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\AudioVisualisationBehavior.cs,AudioVisualisationChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,AudioVisualisationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\AudioVisualisationBehavior.cs,,The length of the parameter AudioVisualisationForAdvancedWindowProperty is 43.
Long Identifier,Hurricane.GUI.Behaviors,AudioVisualisationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\AudioVisualisationBehavior.cs,,The length of the parameter AudioVisualisationForSmartWindowProperty is 40.
Long Identifier,Hurricane.GUI.Behaviors,TransitioningContentControlBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TransitioningContentControlBehavior.cs,DisplayTextPropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,TransitioningContentControlBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TransitioningContentControlBehavior.cs,DisplayImagePropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,ContentControlBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ContentControlBehavior.cs,PropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,TaskbarItemInfoBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TaskbarItemInfoBehavior.cs,ProgressUpdate,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,TextBlockBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TextBlockBehavior.cs,PropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Behaviors,ButtonBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ButtonBehavior.cs,DialogPropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Controls,VolumeIcon,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\VolumeIcon.xaml.cs,PropertyChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.GUI.Controls,TrackImagePreseter,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\TrackImagePreseter.xaml.cs,TrackChangedCallback,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowBackInScreen,The length of the parameter moveWindowBackInScreenStoryboard is 32.
Long Identifier,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,,The length of the parameter _singleBlockNotificationStream is 30.
Long Identifier,Hurricane.Music.Track,PlayableBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\PlayableBase.cs,,The length of the parameter _disposeImageCancellationToken is 30.
Long Identifier,Hurricane.Settings.Themes.AudioVisualisation.RectangleVisualisation,AudioVisualisationPlugin,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\RectangleVisualisation\RectangleAudioVisualisation.cs,,The length of the parameter _smartWindowAudioVisualisation is 30.
Long Identifier,Hurricane.Settings.Themes.AudioVisualisation.BarAudioVisualisation,AudioVisualisationPlugin,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\BarAudioVisualisation\BarAudioVisualisation.cs,,The length of the parameter _smartWindowAudioVisualisation is 30.
Long Identifier,Hurricane.Settings.Themes.AudioVisualisation.SquareAudioVisualisation,AudioVisualisationPlugin,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\SquareAudioVisualisation\SquareAudioVisualisation.cs,,The length of the parameter _smartWindowAudioVisualisation is 30.
Long Identifier,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,,The length of the parameter _openedTrackWithStandardBackward is 32.
Long Identifier,Hurricane.Music.Track.WebApi,TrackSearcher,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\TrackSearcher.cs,,The length of the parameter _addPlaylistToExisitingPlaylist is 31.
Long Identifier,Hurricane.ViewModels,QueueManagerViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\QueueManagerViewModel.cs,,The length of the parameter _removeSelectedTracksFromQueue is 30.
Long Identifier,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,,The length of the parameter AppConnectionInformationStackPanel is 34.
Long Identifier,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,,The length of the parameter AudioVisualisationContentControl is 32.
Long Identifier,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,,The length of the parameter AudioVisualisationContentControl is 32.
Long Statement,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,AdvancedInputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/appmainwindow/mahappsextensions/dialogs/advancedinputdialog." + " is 129.
Long Statement,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,AdvancedInputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml.cs,Connect,The length of the statement  "            ((Hurricane.AppMainWindow.MahAppsExtensions.Dialogs.AdvancedInputDialog)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Dialog_Loaded); " is 150.
Long Statement,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,EqualizerDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\EqualizerDialog.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/appmainwindow/mahappsextensions/dialogs/equalizerdialog.xaml" + " is 129.
Long Statement,Hurricane.AppMainWindow.Messages,WindowDialogService,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\Messages\WindowDialogService.cs,ShowMessage,The length of the statement  "                var messageWindow = new MessageWindow(message' title' cancancel' affirmativeButtonText' negativeButtonText) { Owner = BaseWindow }; " is 131.
Long Statement,Hurricane.AppMainWindow.Messages,WindowDialogService,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\Messages\WindowDialogService.cs,ShowMessage,The length of the statement  "                await Application.Current.Dispatcher.BeginInvoke(DispatcherPriority.Normal' new Action(() => result = messageWindow.ShowDialog() == true)); " is 139.
Long Statement,Hurricane.AppMainWindow.Messages,WindowDialogService,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\Messages\WindowDialogService.cs,ShowInputDialog,The length of the statement  "                await Application.Current.Dispatcher.BeginInvoke(DispatcherPriority.Normal' new Action(() => inputdialog.ShowDialog())); " is 120.
Long Statement,Hurricane.Designer.Data.ThemeData,AppThemeData,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\ThemeData\AppThemeData.cs,LoadDefault,The length of the statement  "            appTheme.LoadFromResourceDictionary(ApplicationThemeManager.Instance.AppThemes.First(x => x.Name == "BaseLight").ResourceDictionary); " is 133.
Long Statement,Hurricane.Designer.Data.ThemeData,AccentColorData,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\ThemeData\AccentColorData.cs,LoadDefault,The length of the statement  "            accentColor.LoadFromResourceDictionary(ApplicationThemeManager.Instance.AccentColors.First(x => x.Name == "Cyan").ResourceDictionary); " is 134.
Long Statement,Hurricane.Designer.Data,ThemeColor,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\ThemeColor.cs,ColorToString,The length of the statement  "            return withTransparencyValue ? string.Format("#{0:X2}{1:X2}{2:X2}{3:X2}"' c.A' c.R' c.G' c.B) : string.Format("{0:X2}{1:X2}{2:X2}"' c.R' c.G' c.B); " is 147.
Long Statement,Hurricane.Designer,DesignerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\DesignerWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/designer/designerwindow.xaml"' System.UriKind.Relative); " is 122.
Long Statement,Hurricane.Designer.Pages,HomePage,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\HomePage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/designer/pages/homepage.xaml"' System.UriKind.Relative); " is 122.
Long Statement,Hurricane.Designer.Pages,LivePreview,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\LivePreview.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/designer/pages/livepreview.xaml"' System.UriKind.Relative); " is 125.
Long Statement,Hurricane.Designer.Pages,ThemeEditControl,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\ThemeEditControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/designer/pages/themeeditcontrol.xaml"' System.UriKind.Relative); " is 130.
Long Statement,Hurricane.Designer.Pages,ThemePackPage,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\ThemePackPage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/designer/pages/themepackpage.xaml"' System.UriKind.Relative); " is 127.
Long Statement,Hurricane.Designer.Pages,ThemePage,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\ThemePage.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/designer/pages/themepage.xaml"' System.UriKind.Relative); " is 123.
Long Statement,Hurricane.DragDrop.DropTargetAdorners,DropTargetInsertionAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\DropTargetAdorners\DropTargetInsertionAdorner.cs,OnRender,The length of the statement  "                if (targetGroup != null && targetGroup.IsBottomLevel && this.DropInfo.InsertPosition.HasFlag(RelativeInsertPosition.AfterTargetItem)) " is 133.
Long Statement,Hurricane.DragDrop.DropTargetAdorners,DropTargetInsertionAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\DropTargetAdorners\DropTargetInsertionAdorner.cs,OnRender,The length of the statement  "                        if (this.DropInfo.VisualTargetFlowDirection == FlowDirection.LeftToRight && this.DropInfo.InsertIndex == itemParent.Items.Count) " is 128.
Long Statement,Hurricane.DragDrop.DropTargetAdorners,DropTargetInsertionAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\DropTargetAdorners\DropTargetInsertionAdorner.cs,OnRender,The length of the statement  "                        else if (this.DropInfo.VisualTargetFlowDirection == FlowDirection.RightToLeft && this.DropInfo.InsertIndex != itemParent.Items.Count) " is 133.
Long Statement,Hurricane.DragDrop,PlaylistListDropHandler,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\PlaylistListDropHandler.cs,DragOver,The length of the statement  "            if (((dropInfo.Data is PlayableBase || dropInfo.Data is IEnumerable<PlayableBase>) && dropInfo.TargetItem is IPlaylist && dropInfo.DragInfo.SourceCollection != MainViewModel.Instance.MusicManager.FavoritePlaylist.ViewSource)) " is 225.
Long Statement,Hurricane.DragDrop,PlaylistListDropHandler,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\PlaylistListDropHandler.cs,Drop,The length of the statement  "                ((ObservableCollection<PlayableBase>)((CollectionView)dropInfo.DragInfo.SourceCollection).SourceCollection).Remove(track); " is 122.
Long Statement,Hurricane.DragDrop,PlaylistListDropHandler,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\PlaylistListDropHandler.cs,Drop,The length of the statement  "                    ((ObservableCollection<PlayableBase>)((CollectionView)dropInfo.DragInfo.SourceCollection).SourceCollection).Remove(track); " is 122.
Long Statement,Hurricane.GUI.Behaviors,FrameworkElementBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\FrameworkElementBehavior.cs,PropertyChangedCallback,The length of the statement  "            ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' 0' 10' 0)' new Thickness(0)' TimeSpan.FromSeconds(0.4)); " is 122.
Long Statement,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,PropertyChangedCallback,The length of the statement  "            var dependencyPropertyDescriptor = DependencyPropertyDescriptor.FromProperty(ItemsControl.ItemsSourceProperty' typeof(ItemsControl)); " is 133.
Long Statement,Hurricane.GUI.Behaviors,AudioVisualisationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\AudioVisualisationBehavior.cs,AudioVisualisationChanged,The length of the statement  "            var visualisation = advancedVisualisation ? audioVisualisation.AdvancedWindowVisualisation : audioVisualisation.SmartWindowVisualisation; " is 137.
Long Statement,Hurricane.GUI.Behaviors,TextBlockBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TextBlockBehavior.cs,SetPlaceHolderText,The length of the statement  "            DependencyPropertyDescriptor.FromProperty(TextBlock.TextProperty' typeof(TextBlock)).RemoveValueChanged(txt' TextChangedHandler); " is 129.
Long Statement,Hurricane.GUI.Behaviors,TextBlockBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TextBlockBehavior.cs,SetPlaceHolderText,The length of the statement  "            DependencyPropertyDescriptor.FromProperty(TextBlock.TextProperty' typeof(TextBlock)).AddValueChanged(txt' TextChangedHandler); " is 126.
Long Statement,Hurricane.GUI.Behaviors,TextBlockBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TextBlockBehavior.cs,PropertyChangedCallback,The length of the statement  "            foreach (var line in dependencyPropertyChangedEventArgs.NewValue.ToString().Split(new[] { "\r\n"' "\n" }' StringSplitOptions.None)) " is 131.
Long Statement,Hurricane.GUI.Behaviors,TextBlockBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TextBlockBehavior.cs,PropertyChangedCallback,The length of the statement  "                foreach (var collection in from rule in rules let regex = new Regex(rule.RegexPattern) let match = regex.Match(tmpLine) where match.Success select rule.GetRun(match)) " is 166.
Long Statement,Hurricane.GUI.Controls,AnimatedStackPanel,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\AnimatedStackPanel.cs,PropertyCallback,The length of the statement  "            stackPanel.FadeAnimationStoryboard = FadeInAnimation(stackPanel.AnimationInterval' stackPanel.Children.OfType<FrameworkElement>().Where(x => (x.Visibility == Visibility.Visible && (!(x is TextBlock) || !string.IsNullOrEmpty(((TextBlock)x).Text)))).ToArray()); " is 259.
Long Statement,Hurricane.GUI.Controls,AnimatedStackPanel,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\AnimatedStackPanel.cs,FadeInAnimation,The length of the statement  "                ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' control.Margin.Top' 10' 0)' new Thickness(0' control.Margin.Top' 0' 0)' TimeSpan.FromMilliseconds(400)); " is 170.
Long Statement,Hurricane.GUI.Controls,PlayPauseButton,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\PlayPauseButton.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/gui/controls/playpausebutton.xaml"' System.UriKind.Relative); " is 127.
Long Statement,Hurricane.GUI.Controls,VolumeIcon,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\VolumeIcon.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/gui/controls/volumeicon.xaml"' System.UriKind.Relative); " is 122.
Long Statement,Hurricane.GUI.Controls,TrackImagePreseter,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\TrackImagePreseter.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/gui/controls/trackimagepreseter.xaml"' System.UriKind.Relative); " is 130.
Long Statement,Hurricane.MagicArrow,StrokeWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\StrokeWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/magicarrow/strokewindow.xaml"' System.UriKind.Relative); " is 122.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,Application_Deactivated,The length of the statement  "            if (first && secound) //(BaseWindow.ActualHeight == WpfScreen.GetScreenFrom(new Point(BaseWindow.Left' 0)).WorkingArea.Height && (BaseWindow.Left == 0 || BaseWindow.Left == maxwidth - 300) && BaseWindow.Top == 0) " is 212.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowBackInScreen,The length of the statement  "            if (_movedOutSide == Side.Left) { newleft = WpfScreen.MostLeftX; } else { newleft = WpfScreen.MostRightX - BaseWindow.Width; } " is 126.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowBackInScreen,The length of the statement  "            DoubleAnimation inanimation = new DoubleAnimation(BaseWindow.Left' newleft' TimeSpan.FromMilliseconds(150)' FillBehavior.Stop); " is 127.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,StartMagic,The length of the statement  "            _strokeWindow = new StrokeWindow(screen.WorkingArea.Height' _movedOutSide == Side.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX' screen.WorkingArea.Top' _movedOutSide); " is 172.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,StartMagic,The length of the statement  "            _activewindowhook.RaiseOne(); //If the current window is fullscreen' the event wouldn't be raised (because nothing changed) " is 123.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,StrokeWindowMouseDown,The length of the statement  "                if (cursorposition.Y > MagicWindow.Top && cursorposition.Y < MagicWindow.Top + MagicWindow.Height && (_movedOutSide == Side.Left ? cursorposition.X < MagicWindow.Width + WpfScreen.MostLeftX : cursorposition.X > WpfScreen.MostRightX - MagicWindow.Width)) " is 253.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,StrokeWindowMouseMove,The length of the statement  "            if (!_magicArrowIsShown && !_isInZone && StrokeWindow.PositionIsOk(_movedOutSide' Cursor.Position.X' WpfScreen.MostLeftX - 2' WpfScreen.MostRightX)) " is 148.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,StrokeWindowMouseLeave,The length of the statement  "                //if (_movedOutSide == Side.Left ? cursorX > 2 - WpfScreen.MostLeftX : cursorX < WpfScreen.MostRightX - 3 || WpfScreen.GetScreenFrom(new Point(cursorX' 0)).WorkingArea.Height > cursorX) " is 185.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The length of the statement  "            MagicWindow = new MagicArrowWindow(top' side == Side.Left ? WpfScreen.MostLeftX - 10 : WpfScreen.MostRightX' side == Side.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX - 10' side); " is 184.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The length of the statement  "                        Views.Test.TestWindow.AddMessage(string.Format("-> MAP: {0}; _movedOutSide: {1}; cursorX: {2}; MLX: {3}"' ""' _movedOutSide' cursorX' WpfScreen.MostLeftX)); " is 156.
Long Statement,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MagicWindow_MouseLeave,The length of the statement  "            else { _strokeWindow.SetLeft(_movedOutSide == Side.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX - 1' _movedOutSide); } " is 123.
Long Statement,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/magicarrow/magicarrowwindow.xaml"' System.UriKind.Relative); " is 126.
Long Statement,Hurricane.Music.Download,ffmpeg,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\ffmpeg.cs,GetParameter,The length of the statement  "            return string.Format("-i \"{0}\" -c:a {1} -vn -b:a {2}k \"{3}\""' inputFile' GetAudioLibraryFromFormat(format)' bitrate.ToString().Remove(0' 1)' outputFile); " is 157.
Long Statement,Hurricane.Music.Download,DownloadManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\DownloadManager.cs,DownloadTracks,The length of the statement  "                    await DownloadAndConfigureTrack(entry' entry.MusicInformation' entry.DownloadFilename' d => currentEntry.Progress = d' entry.DownloadSettings); " is 143.
Long Statement,Hurricane.Music.Download,DownloadManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\DownloadManager.cs,DownloadAndConfigureTrack,The length of the statement  "                oldFile.MoveTo(GeneralHelper.GetFreeFileName(oldFile.Directory' oldFile.Extension).FullName); //We move the downloaded file to a temp location " is 142.
Long Statement,Hurricane.Music.Download,youtube_dl,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\youtube-dl.cs,Load,The length of the statement  "                var controller = await metrowindow.ShowProgressAsync(Application.Current.Resources["UpdateYoutubedl"].ToString()' string.Format(Application.Current.Resources["UpdateYoutubedlMessage"].ToString()' match.Groups["version"].Value)); " is 228.
Long Statement,Hurricane.Music.Download,youtube_dl,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\youtube-dl.cs,GetGroovesharkStream,The length of the statement  "                    Arguments = string.Format("-g {0}{1} -j"' groovesharkUrl' proxy != null ? string.Format(" --proxy \"{0}\""' proxy) : null) " is 122.
Long Statement,Hurricane.Music.Download,youtube_dl,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\youtube-dl.cs,Download,The length of the statement  "                    Arguments = string.Format("{0} --extract-audio --ffmpeg-location \"{1}\" --output \"{2}\""' link' HurricaneSettings.Paths.FFmpegPath' fileName) " is 143.
Long Statement,Hurricane.Music.Download,youtube_dl,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\youtube-dl.cs,Download,The length of the statement  "                var regex = new Regex(@"^\[download\].*?(?<percentage>(.*?))% of"); //[download]   2.7% of 4.62MiB at 200.00KiB/s ETA 00:23 " is 123.
Long Statement,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ParseIndex,The length of the statement  "            seconds = Convert.ToInt32(tempString.Substring(tempString.IndexOf(':') + 1' tempString.LastIndexOf(':') - tempString.IndexOf(':') - 1)); " is 136.
Long Statement,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ParseIndex,The length of the statement  "            frames = Convert.ToInt32(tempString.Substring(tempString.LastIndexOf(':') + 1' tempString.Length - tempString.LastIndexOf(':') - 1)); " is 133.
Long Statement,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,CalculateCDDBdiscID,The length of the statement  "            t = ((lastTrackIndex(m_Tracks[m_Tracks.Length - 1]).Minutes * 60) + lastTrackIndex(m_Tracks[m_Tracks.Length - 1]).Seconds) - " is 124.
Long Statement,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The length of the statement  "            output.Append("  TRACK " + m_TrackNumber.ToString().PadLeft(2' '0') + " " + m_TrackDataType.ToString().Replace('_'' '/')); " is 122.
Long Statement,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The length of the statement  "                output.Append(Environment.NewLine + "    PREGAP " + m_PreGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PreGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PreGap.Frames.ToString().PadLeft(2' '0')); " is 200.
Long Statement,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The length of the statement  "                output.Append(Environment.NewLine + "    INDEX " + this[j].Number.ToString().PadLeft(2' '0') + " " + this[j].Minutes.ToString().PadLeft(2' '0') + ":" + this[j].Seconds.ToString().PadLeft(2' '0') + ":" + this[j].Frames.ToString().PadLeft(2' '0')); " is 246.
Long Statement,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The length of the statement  "                output.Append(Environment.NewLine + "    POSTGAP " + m_PostGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PostGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PostGap.Frames.ToString().PadLeft(2' '0')); " is 204.
Long Statement,Hurricane.Music.Playlist,ImportCueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportCueSheet.cs,IsSupported,The length of the statement  "            return line.StartsWith("REM") || line.StartsWith("PERFORMER") || line.StartsWith("TITLE") || line.StartsWith("FILE") || line.StartsWith("CATALOG") || LocalTrack.IsSupported(new FileInfo(line)); " is 193.
Long Statement,Hurricane.Music.Playlist,Playlists,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\Playlists.cs,RunRegistration,The length of the statement  "            var formats = typeof(Playlists).Assembly.GetTypes().Where(t => t.GetCustomAttributes(typeof(PlaylistFormatAttribute)' false).Length > 0); " is 137.
Long Statement,Hurricane.Music.Playlist,Playlists,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\Playlists.cs,Register,The length of the statement  "                Debug.Assert(Formats.Find(f => f.SupportedExtensions.Contains(ext)) == null' "File extensions are already registered. New format: " + format.Name); " is 147.
Long Statement,Hurricane.Music.Playlist,PlaylistBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\PlaylistBase.cs,LoadList,The length of the statement  "                ViewSource.Filter = item => string.IsNullOrWhiteSpace(SearchText) || item.ToString().ToUpper().Contains(SearchText.ToUpper()); " is 126.
Long Statement,Hurricane.Music.Playlist,NormalPlaylist,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\NormalPlaylist.cs,ReloadTrackInformation,The length of the statement  "                if (progresschanged != null) progresschanged(this' new TrackImportProgressChangedEventArgs(Tracks.IndexOf(t)' Tracks.Count' t.ToString())); " is 139.
Long Statement,Hurricane.Music.Proxy,ProxyManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Proxy\ProxyManager.cs,GetProxies,The length of the statement  "                var content = await wc.DownloadStringTaskAsync("http://www.cool-proxy.net/proxies/http_proxy_list/sort:score/direction:desc"); " is 126.
Long Statement,Hurricane.Music.Proxy,ProxyManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Proxy\ProxyManager.cs,GetProxies,The length of the statement  "                var regex = new Regex(@"document.write\(Base64.decode\(str_rot13\(""(?<ip>(.*?))""\)\)\)<\/script><\/td>\s+<td>(?<port>([0-9]+))<\/td>.*?<td>.*?<td>(?<country>(.*?))<\/td>.*?;"">(?<working>([0-9]+))<\/span><\/div><\/td>.*?#.{6};"">(?<responsetime>(.*?))<\/span><\/div><\/td>.*?>(?<speed>([0-9]+))<\/span><\/div><\/td>"); " is 320.
Long Statement,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,TryLoadWithTagLibSharp,The length of the statement  "                Artist = RemoveInvalidXmlChars(!string.IsNullOrWhiteSpace(info.Tag.FirstPerformer) ? info.Tag.FirstPerformer : info.Tag.FirstAlbumArtist); " is 138.
Long Statement,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,TryLoadWithTagLibSharp,The length of the statement  "                Title = !string.IsNullOrWhiteSpace(info.Tag.Title) ? RemoveInvalidXmlChars(info.Tag.Title) : System.IO.Path.GetFileNameWithoutExtension(filename.FullName); " is 155.
Long Statement,Hurricane.Music.Track,SoundCloudTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\SoundCloudTrack.cs,LoadInformation,The length of the statement  "                var result = JsonConvert.DeserializeObject<ApiResult>(await web.DownloadStringTaskAsync(string.Format("https://api.soundcloud.com/tracks/{0}.json?client_id={1}"' SoundCloudID' SensitiveInformation.SoundCloudKey))); " is 214.
Long Statement,Hurricane.Music.Track,SoundCloudTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\SoundCloudTrack.cs,LoadImage,The length of the statement  "                        Image = await SoundCloudApi.LoadBitmapImage(this' HurricaneSettings.Instance.Config.DownloadAlbumCoverQuality' albumCoverDirectory); " is 132.
Long Statement,Hurricane.Music.Track,YouTubeTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\YouTubeTrack.cs,LoadInformation,The length of the statement  "                return await LoadInformation(JsonConvert.DeserializeObject<SingleVideoSearchResult>(await client.DownloadStringTaskAsync(string.Format("http://gdata.youtube.com/feeds/api/videos/{0}?v=2&alt=jsonc"' YouTubeId)))); " is 212.
Long Statement,Hurricane.Settings,ConfigSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\ConfigSettings.cs,LoadLanguage,The length of the statement  "            _lastLanguage = new ResourceDictionary { Source = new Uri(Languages.First(x => x.Code == Language).Path' UriKind.Relative) }; " is 125.
Long Statement,Hurricane.Settings,UpdateService,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\UpdateService.cs,updController_updateFound,The length of the statement  "                var releaseDateTimeString = DateTime.TryParse(package.ReleaseDate' out releaseDateTime) ? releaseDateTime.ToString(Application.Current.Resources["DateFormat"].ToString()) : package.ReleaseDate; " is 193.
Long Statement,Hurricane.Settings,UpdateService,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\UpdateService.cs,updController_updateFound,The length of the statement  "                sb.AppendLine("[i]" + string.Format(Application.Current.Resources["UpdateChangelogText"].ToString()' package.releaseInfo.Version' releaseDateTimeString)); " is 154.
Long Statement,Hurricane.Settings,UpdateService,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\UpdateService.cs,updController_updateFound,The length of the statement  "                sb.AppendLine(_language == Language.English ? _updController.currentUpdateResult.Changelogs[package].englishChanges : _updController.currentUpdateResult.Changelogs[package].germanChanges); " is 188.
Long Statement,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,HookManager_MouseMove,The length of the statement  "            if (Mouse.LeftButton == MouseButtonState.Released) //If the user doubleclicks the window' relocates the window and releases the mouse' it doesn't get stopped " is 157.
Long Statement,Hurricane.MagicArrow.DockManager,DockRangeWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockRangeWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/magicarrow/dockmanager/dockrangewindow.xaml"' System.UriKind.Relative); " is 137.
Long Statement,Hurricane.Music,AsyncTrackLoader,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AsyncTrackLoader.cs,RunAsync,The length of the statement  "            PlaylistsToCheck.AddRange(lst.Where(p => !PlaylistsToCheck.Contains(p))); //We only add tracks which aren't already in our queue " is 128.
Long Statement,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,GoBackward,The length of the statement  "            if (Lasttracks.Count > 1) //Check if there are more than two tracks' because the current track is the last one in the list " is 122.
Long Statement,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,SaveToSettings,The length of the statement  "            currentState.LastTrackIndex = (CSCoreEngine.CurrentTrack == null || CurrentPlaylist == null) ? -1 : CurrentPlaylist.Tracks.IndexOf(CSCoreEngine.CurrentTrack); " is 158.
Long Statement,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,SaveToSettings,The length of the statement  "            currentState.TrackPosition = CSCoreEngine.CurrentTrack == null || (CSCoreEngine.CurrentTrack is StreamableBase && ((StreamableBase)CSCoreEngine.CurrentTrack).IsInfinityStream) ? 0 : CSCoreEngine.Position; " is 204.
Long Statement,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The length of the statement  "            string url = Uri.EscapeUriString(string.Format("http://ws.audioscrobbler.com/2.0/?method=track.search&track={0}{1}&api_key={2}&format=json"' title.ToEscapedUrl()' !string.IsNullOrEmpty(artist) ? "&artist=" + artist.ToEscapedUrl() : string.Empty' apikey)); " is 255.
Long Statement,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The length of the statement  "                    url = Uri.EscapeUriString(string.Format("http://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key={2}&track={0}&artist={1}"' foundtrack.name' foundtrack.artist' apikey)); " is 176.
Long Statement,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The length of the statement  "                            if (imageurl != null && !imageurl.EndsWith("default_album_medium.png") && !imageurl.EndsWith("[unknown].png")) //We don't want the default album art " is 148.
Long Statement,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The length of the statement  "                            url = string.Format("http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&mbid={0}&api_key={1}"' trackinfo.track.artist.mbid' apikey); " is 137.
Long Statement,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The length of the statement  "                            url = string.Format("http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist={0}&api_key={1}"' trackinfo.track.artist.name' apikey); " is 139.
Long Statement,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The length of the statement  "                            url = string.Format("http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist={0}&autocorrect=1&api_key={1}"' artist' apikey); " is 132.
Long Statement,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImage,The length of the statement  "                                if (!imageurl.EndsWith("default_album_medium.png") && !imageurl.EndsWith("[unknown].png")) //We don't want the default album art " is 128.
Long Statement,Hurricane.Music.MusicCover,MusicCoverManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\MusicCoverManager.cs,LoadCoverFromWeb,The length of the statement  "            return await LastfmAPI.GetImage(config.DownloadAlbumCoverQuality' config.SaveCoverLocal' di' track' config.TrimTrackname' useArtist); " is 133.
Long Statement,Hurricane.Music.Track.WebApi,TrackSearcher,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\TrackSearcher.cs,Search,The length of the statement  "            var tasks = MusicApis.Where((t' i) => t.IsEnabled && (_manager.DownloadManager.SelectedService == 0 || _manager.DownloadManager.SelectedService == i + 1)).Select(t => t.Search(SearchText)).ToList(); " is 198.
Long Statement,Hurricane.Music.Track.WebApi,TrackSearcher,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\TrackSearcher.cs,AddTracksToPlaylist,The length of the statement  "            var controller = await _baseWindow.ShowProgressAsync(Application.Current.Resources["ImportTracks"].ToString()' string.Empty' true' new MetroDialogSettings { NegativeButtonText = Application.Current.Resources["Cancel"].ToString() }); " is 232.
Long Statement,Hurricane.Music.Track.WebApi,TrackSearcher,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\TrackSearcher.cs,AddTracksToPlaylist,The length of the statement  "                controller.SetMessage(string.Format(Application.Current.Resources["LoadingTracks"].ToString()' e.CurrentTrackName' e.Value' e.Maximum)); " is 136.
Long Statement,Hurricane.Music.Track.WebApi.SoundCloudApi,SoundCloudApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\SoundCloudApi\SoundCloudApi.cs,LoadBitmapImage,The length of the statement  "                    await ImageHelper.SaveImage(image' string.Format("{0}_{1}"' track.SoundCloudID' GetQualityModifier(quality))' albumDirectory.FullName); " is 135.
Long Statement,Hurricane.Music.Track.WebApi.SoundCloudApi,SoundCloudApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\SoundCloudApi\SoundCloudApi.cs,GetSoundCloudTrack,The length of the statement  "                    var result = JsonConvert.DeserializeObject<ApiResult>(await web.DownloadStringTaskAsync(string.Format("http://api.soundcloud.com/resolve.json?url={0}&client_id={1}"' url' SensitiveInformation.SoundCloudKey))); " is 209.
Long Statement,Hurricane.Music.Track.WebApi.SoundCloudApi,SoundCloudApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\SoundCloudApi\SoundCloudApi.cs,GetSoundCloudTrack,The length of the statement  "                        Year = result.release_year != null ? uint.Parse(result.release_year.ToString()) : (uint)DateTime.Parse(result.created_at).Year' " is 127.
Long Statement,Hurricane.Music.Track.WebApi.SoundCloudApi,SoundCloudApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\SoundCloudApi\SoundCloudApi.cs,Search,The length of the statement  "                var results = JsonConvert.DeserializeObject<List<ApiResult>>(await web.DownloadStringTaskAsync(string.Format("https://api.soundcloud.com/tracks?q={0}&client_id={1}"' searchText.ToEscapedUrl()' SensitiveInformation.SoundCloudKey))); " is 231.
Long Statement,Hurricane.Music.Track.WebApi.YouTubeApi,YouTubeApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\YouTubeApi.cs,GetPlaylist,The length of the statement  "                    $"https://www.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults={maxResults}&playlistId={playlistId}{pageTokenPart}&key={SensitiveInformation.YouTubeApiKey}"; " is 189.
Long Statement,Hurricane.Music.Track.WebApi.YouTubeApi,YouTubeApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\YouTubeApi.cs,GetYouTubeVideoInfo,The length of the statement  "                    $"https://www.googleapis.com/youtube/v3/videos?id={youtubeVideoId}&part=snippet'contentDetails&key={SensitiveInformation.YouTubeApiKey}"; " is 137.
Long Statement,Hurricane.Music.Track.WebApi.YouTubeApi,YouTubeApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\YouTubeApi.cs,CheckForSpecialUrl,The length of the statement  "                return new Tuple<bool' List<WebTrackResultBase>' IPlaylistResult>(true' GetPlaylistTracks(playlist).Cast<WebTrackResultBase>().ToList()' playlist); " is 147.
Long Statement,Hurricane.Music.Track.WebApi.YouTubeApi,YouTubeApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\YouTubeApi.cs,CheckForSpecialUrl,The length of the statement  "                return new Tuple<bool' List<WebTrackResultBase>' IPlaylistResult>(true' new List<WebTrackResultBase> { await GetYouTubeVideoInfo(match.Groups["id"].Value) }' null); " is 164.
Long Statement,Hurricane.Music.Track.WebApi.YouTubeApi,YouTubeApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\YouTubeApi.cs,Search,The length of the statement  "                    $"https://www.googleapis.com/youtube/v3/search?part=snippet&q={searchText.ToEscapedUrl()}&maxResults=50&key={SensitiveInformation.YouTubeApiKey}"; " is 146.
Long Statement,Hurricane.Music.Track.WebApi.YouTubeApi,YouTubeApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\YouTubeApi.cs,Search,The length of the statement  "                                $"https://www.googleapis.com/youtube/v3/videos?id={string.Join("'"' videos.Select(x => x.id.videoId))}&part=contentDetails&key={SensitiveInformation.YouTubeApiKey}")); " is 167.
Long Statement,Hurricane.Notification,NotificationService,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\NotificationService.cs,TrackChanged,The length of the statement  "            if (config.DisableNotificationInGame && WindowHelper.WindowIsFullscreen(UnsafeNativeMethods.GetForegroundWindow())) return; " is 123.
Long Statement,Hurricane.Notification.Views,NotificationRightBottomWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationRightBottomWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/notification/views/notificationrightbottomwindow.xaml"' System.UriKind.Relative); " is 147.
Long Statement,Hurricane.Notification.Views,NotificationTopWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationTopWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/notification/views/notificationtopwindow.xaml"' System.UriKind.Relative); " is 139.
Long Statement,Hurricane.Music.API,Commander,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\Commander.cs,InitalizeCommands,The length of the statement  "                        new CommandFunction("get"'  s => string.Format("{0} {1}"'(int) MusicManager.CSCoreEngine.CurrentTrackPosition.TotalSeconds'(int) MusicManager.CSCoreEngine.CurrentTrackLength.TotalSeconds)) " is 188.
Long Statement,Hurricane.Music.API,Commander,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\Commander.cs,TrackToString,The length of the statement  "            return JsonConvert.SerializeObject(new ShortTrack() { Title = track.Title' Artist = track.Artist' Album = track.Album' Duration = track.Duration' kbps = track.kbps.ToString()' kHz = track.kHz.ToString() }); " is 206.
Long Statement,Hurricane.Music.API,TcpServer,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\TcpServer.cs,ListenerThread,The length of the statement  "                if (parameters.Length < 4 || parameters.Length > 4) { connection.WriteLine("Error: Can't read arguments. Please use \"bool|bool|bool|bool\""); connection.Dispose(); break; } " is 173.
Long Statement,Hurricane.Music.API,TcpServer,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\TcpServer.cs,ListenerThread,The length of the statement  "                    if (!bool.TryParse(item' out temp)) { connection.WriteLine("Error: Can't read arguments. Please use \"bool|bool|bool|bool\""); connection.Dispose(); error = true; break; } " is 171.
Long Statement,Hurricane.Settings.RegistryManager,RegistryContextMenuItem,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\RegistryManager\RegistryContextMenuItem.cs,ToggleRegister,The length of the statement  "                    var info = new ProcessStartInfo(Assembly.GetEntryAssembly().Location' string.Format("/registry \"{0}\""' this.Extension)) " is 121.
Long Statement,Hurricane.Settings.RegistryManager,RegistryRegister,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\RegistryManager\RegistryRegister.cs,CheckIfExtensionExists,The length of the statement  "            using (RegistryKey extensionkey = GetClassesRoot().OpenSubKey(extension' RegistryKeyPermissionCheck.Default' RegistryRights.ReadKey)) " is 133.
Long Statement,Hurricane.Settings.RegistryManager,RegistryRegister,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\RegistryManager\RegistryRegister.cs,CheckIfExtensionExists,The length of the statement  "                using (RegistryKey rootkey = Registry.ClassesRoot.OpenSubKey(keytoadd' RegistryKeyPermissionCheck.Default' RegistryRights.ReadKey)) " is 131.
Long Statement,Hurricane.Utilities,ActiveWindowHook,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\ActiveWindowHook.cs,Hook,The length of the statement  "            m_hhook = UnsafeNativeMethods.SetWinEventHook(EVENT_SYSTEM_FOREGROUND' EVENT_SYSTEM_FOREGROUND' IntPtr.Zero' _winEventProc' 0' 0' WINEVENT_OUTOFCONTEXT); " is 153.
Long Statement,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,IsRunningWithAdministratorRights,The length of the statement  "            return windowsIdentity.Groups.Select(g => (SecurityIdentifier)g.Translate(typeof(SecurityIdentifier))).Any(s => s == localAdminGroupSid); " is 137.
Long Statement,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,GetFileDialogFilterFromArray,The length of the statement  "            stringBuilder.Append(string.Concat(extensions.Select(x => (x.StartsWith("*.") ? null : (x.StartsWith(".") ? "*" : "*.")) + x + ";").ToArray())); " is 144.
Long Statement,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,GetFreeFileName,The length of the statement  "                var file = new FileInfo(Path.Combine(directory.FullName' Guid.NewGuid() + (extension.StartsWith(".") ? null : ".") + extension)); " is 129.
Long Statement,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The length of the statement  "            return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input; " is 229.
Long Statement,Hurricane.Utilities,KeyboardListener,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\Keyboard.cs,LowLevelKeyboardProc,The length of the statement  "                    _hookedKeyboardCallbackAsync.BeginInvoke((InterceptKeys.KeyEvent)wParam.ToUInt32()' Marshal.ReadInt32(lParam)' null' null); " is 123.
Long Statement,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The length of the statement  "            return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input; " is 229.
Long Statement,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The length of the statement  "            return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input; " is 229.
Long Statement,Hurricane.Utilities,WindowHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\WindowHelper.cs,WindowIsFullscreen,The length of the statement  "            return ((placement.showCmd == 1 && placement.minPosition.X == -1 && placement.minPosition.Y == -1 && placement.normalPosition.left == 0 && placement.normalPosition.top == 0 && placement.normalPosition.Width == workarea.Width && !(cname == "Progman" || cname == "WorkerW"))); " is 274.
Long Statement,Hurricane.Utilities,ImageHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\ImageHelper.cs,GetIconFromResource,The length of the statement  "            var streamResourceInfo = Application.GetResourceStream(new Uri(string.Format("pack://application:'''/Hurricane;component/{0}"' path))); " is 135.
Long Statement,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The length of the statement  "            return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input; " is 229.
Long Statement,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The length of the statement  "            return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input; " is 229.
Long Statement,Hurricane.ViewModels,MainViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\MainViewModelCommands.cs,Loaded,The length of the statement  "            Updater = new UpdateService(MySettings.Config.Language == "de" ? UpdateService.Language.German : UpdateService.Language.English); " is 129.
Long Statement,Hurricane.ViewModels,MainViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\MainViewModelCommands.cs,CSCoreEngine_SoundOutErrorOccurred,The length of the statement  "            await _baseWindow.WindowDialogService.ShowMessage(e' Application.Current.Resources["Exception"].ToString()' false' DialogMode.Single); " is 134.
Long Statement,Hurricane.ViewModels,MainViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\MainViewModelCommands.cs,ImportFiles,The length of the statement  "                controller.SetTitle(string.Format(Application.Current.Resources["FilesGetImported"].ToString()' e.FilesImported' e.TotalFiles)); " is 128.
Long Statement,Hurricane.ViewModels,MainViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\MainViewModelCommands.cs,OpenFile,The length of the statement  "                foreach (var track in playlist.Tracks.Where(track => track.GetType() == typeof(LocalTrack) && ((LocalTrack)track).Path == file.FullName)) " is 137.
Long Statement,Hurricane.ViewModels,MainViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\MainViewModelCommands.cs,OpenFile,The length of the statement  "                    var selectedPlaylist = _musicmanager.SelectedPlaylist.CanEdit ? (NormalPlaylist)_musicmanager.SelectedPlaylist : _musicmanager.Playlists[0]; " is 140.
Long Statement,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/downloadtrackwindow.xaml"' System.UriKind.Relative); " is 124.
Long Statement,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged); " is 156.
Long Statement,Hurricane.Views,TagEditorWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\TagEditorWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/tageditorwindow.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Hurricane.Views,EqualizerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\EqualizerWindow.xaml.cs,SetPosition,The length of the statement  "            if (parentRecantgle.left + windowWidth + windowWidth - WpfScreen.MostRightX > 0) //If left from the parent isn't 300 space " is 122.
Long Statement,Hurricane.Views,EqualizerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\EqualizerWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/equalizerwindow.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Hurricane.Views,FolderImportWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\FolderImportWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/folderimportwindow.xaml"' System.UriKind.Relative); " is 123.
Long Statement,Hurricane.Views,QueueManagerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\QueueManagerWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/queuemanagerwindow.xaml"' System.UriKind.Relative); " is 123.
Long Statement,Hurricane.Views,ReportExceptionWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ReportExceptionWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/reportexceptionwindow.xaml"' System.UriKind.Relative); " is 126.
Long Statement,Hurricane.Views,ReportExceptionWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ReportExceptionWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonSendErrorReport_Click); " is 124.
Long Statement,Hurricane.Views,TrackImportWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\TrackImportWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/trackimportwindow.xaml"' System.UriKind.Relative); " is 122.
Long Statement,Hurricane.Views,TrackInformationWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\TrackInformationWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/trackinformationwindow.xaml"' System.UriKind.Relative); " is 127.
Long Statement,Hurricane.Views.Test,PositionTestWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\Test\PositionTestWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/test/positiontestwindow.xaml"' System.UriKind.Relative); " is 128.
Long Statement,Hurricane.Views.Test,TestWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\Test\TestWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/test/testwindow.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Hurricane.Views.Tools,LanguageCreatorWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\Tools\LanguageCreatorWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/tools/languagecreatorwindow.xaml"' System.UriKind.Relative); " is 132.
Long Statement,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/usercontrols/aboutview.xaml"' System.UriKind.Relative); " is 127.
Long Statement,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate); " is 156.
Long Statement,Hurricane.Views.UserControls,EqualizerView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\EqualizerView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/usercontrols/equalizerview.xaml"' System.UriKind.Relative); " is 131.
Long Statement,Hurricane.Views.UserControls,KeyboardShortcutsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\KeyboardShortcutsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/usercontrols/keyboardshortcutsview.xaml"' System.UriKind.Relative); " is 139.
Long Statement,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/usercontrols/settingsview.xaml"' System.UriKind.Relative); " is 130.
Long Statement,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,RefreshTaskbarInfo,The length of the statement  "            TaskbarInfo.ProgressState = playbackState == PlaybackState.Playing ? TaskbarItemProgressState.Normal : TaskbarItemProgressState.Paused; " is 135.
Long Statement,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,MainWindow_Closing,The length of the statement  "                if (HurricaneSettings.Instance.CurrentState.ApplicationState == null) HurricaneSettings.Instance.CurrentState.ApplicationState = new DockingApplicationState(); " is 159.
Long Statement,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ResetAndMoveIn,The length of the statement  "            var outanimation = new ThicknessAnimation(new Thickness(-100' 0' 100' 0)' new Thickness(0)' TimeSpan.FromMilliseconds(350)); " is 124.
Long Statement,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,SetBackground,The length of the statement  "            if (HurricaneSettings.Instance.Config.ApplicationDesign.ApplicationBackground == null || !HurricaneSettings.Instance.Config.ApplicationDesign.ApplicationBackground.IsAvailable) " is 176.
Long Statement,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/appmainwindow/mainwindow.xaml"' System.UriKind.Relative); " is 123.
Long Statement,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The length of the statement  "            this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded); " is 122.
Long Statement,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler); " is 138.
Long Statement,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,The length of the statement  "                            MessageBox.Show("Something went extremly wrong. This application didn't got administrator rights so it can't register anything."); " is 130.
Long Statement,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,The length of the statement  "                    WindowMessanger.SendMessageToWindow(hwnd' WindowMessanger.WM_OPENMUSICFILE' new FileInfo(Environment.GetCommandLineArgs()[1]).FullName); " is 136.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/appmainwindow/windowskins/windowadvancedview.xaml"' System.UriKind.Relative); " is 143.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Grid)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown); " is 148.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Grid)(target)).MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp); " is 144.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Grid)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.Titlebar_OnMouseMove); " is 124.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The length of the statement  "            this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ListView_SelectionChanged); " is 129.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The length of the statement  "            ColorAnimation coloranimation2 = new ColorAnimation(inAnimate ? ((SolidColorBrush)Application.Current.Resources["AccentColorBrush"]).Color : (Color)Application.Current.Resources["BlackColor"]' TimeSpan.FromMilliseconds(250)); " is 225.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The length of the statement  "            ThicknessAnimation thicknessanimation = new ThicknessAnimation(inAnimate ? new Thickness(3' 2' -3' 0) : new Thickness(0' 2' 0' 0)' TimeSpan.FromMilliseconds(250)); " is 163.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,listview_DragEnter,The length of the statement  "            e.Effects = DragDropEffects.Move; //Always move because if we would check if it's a file or not' the drag & drop function for the items wouldn't work " is 149.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/appmainwindow/windowskins/windowsmartview.xaml"' System.UriKind.Relative); " is 140.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The length of the statement  "            this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown); " is 121.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter); " is 120.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave); " is 120.
Long Statement,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The length of the statement  "            this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged); " is 129.
Long Statement,Hurricane.Views.MetroDialogs,AddCustomStreamView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MetroDialogs\AddCustomStreamView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Hurricane;component/views/metrodialogs/addcustomstreamview.xaml"' System.UriKind.Relative); " is 137.
Long Statement,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The length of the statement  "                if ((_mouseMove != null || s_MouseMoveExt != null) && (_oldX != mouseHookStruct.Point.X || _oldY != mouseHookStruct.Point.Y)) " is 125.
Long Statement,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,EnsureSubscribedToGlobalMouseEvents,The length of the statement  "                    //Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,ForceUnsubscribeFromGlobalMouseEvents,The length of the statement  "                    //Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,KeyboardHookProc,The length of the statement  "                KeyboardHookStruct myKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure(lParam' typeof(KeyboardHookStruct)); " is 121.
Long Statement,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,EnsureSubscribedToGlobalKeyboardEvents,The length of the statement  "                    //Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,ForceUnsunscribeFromGlobalKeyboardEvents,The length of the statement  "                    //Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\Alkalinee_Hurricane\Hurricane\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,Hurricane.DragDrop,PlaylistListDropHandler,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\PlaylistListDropHandler.cs,DragOver,The conditional expression  "((dropInfo.Data is PlayableBase || dropInfo.Data is IEnumerable<PlayableBase>) && dropInfo.TargetItem is IPlaylist && dropInfo.DragInfo.SourceCollection != MainViewModel.Instance.MusicManager.FavoritePlaylist.ViewSource)"  is complex.
Complex Conditional,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The conditional expression  "((_movedOutSide == Side.Left && cursorX > 4 - WpfScreen.MostLeftX) ||                          (_movedOutSide == Side.Right && cursorX < WpfScreen.MostRightX - 4)) && !MagicWindow.IsMouseOver"  is complex.
Complex Conditional,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,notifysource_BlockRead,The conditional expression  "Settings.IsCrossfadeEnabled && totalseconds - Settings.CrossfadeDuration > 6 &&                  !_crossfade.IsCrossfading && totalseconds - seconds < Settings.CrossfadeDuration"  is complex.
Complex Conditional,Hurricane.Utilities,KeyboardListener,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\Keyboard.cs,LowLevelKeyboardProc,The conditional expression  "wParam.ToUInt32() == (int)InterceptKeys.KeyEvent.WM_KEYDOWN ||                      wParam.ToUInt32() == (int)InterceptKeys.KeyEvent.WM_KEYUP ||                      wParam.ToUInt32() == (int)InterceptKeys.KeyEvent.WM_SYSKEYDOWN ||                      wParam.ToUInt32() == (int)InterceptKeys.KeyEvent.WM_SYSKEYUP"  is complex.
Complex Conditional,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The conditional expression  "(_mouseMove != null || s_MouseMoveExt != null) && (_oldX != mouseHookStruct.Point.X || _oldY != mouseHookStruct.Point.Y)"  is complex.
Complex Conditional,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,TryUnsubscribeFromGlobalMouseEvents,The conditional expression  "s_MouseClick == null &&                  s_MouseDown == null &&                  _mouseMove == null &&                  s_MouseUp == null &&                  s_MouseClickExt == null &&                  s_MouseMoveExt == null &&                  s_MouseWheel == null"  is complex.
Empty Catch Block,Hurricane.Music.Download,DownloadManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Download\DownloadManager.cs,AddTags,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,WaitForCancel,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,TogglePlayPause,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,LoadImage,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,LoadImage,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.Track,SoundCloudTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\SoundCloudTrack.cs,LoadImage,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.Track,YouTubeTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\YouTubeTrack.cs,LoadImage,The method has an empty catch block.
Empty Catch Block,Hurricane.Settings,SaveLocationManager,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\SaveLocationManager.cs,MoveToAppData,The method has an empty catch block.
Empty Catch Block,Hurricane.Settings,SaveLocationManager,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\SaveLocationManager.cs,MoveToLocalFoler,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.Track.WebApi,WebTrackResultBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\WebTrackResultBase.cs,DownloadImage,The method has an empty catch block.
Empty Catch Block,Hurricane.Music.API,TcpConnection,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\TcpConnection.cs,WriteLine,The method has an empty catch block.
Empty Catch Block,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,skin_DragMoveStart,The method has an empty catch block.
Empty Catch Block,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,skin_TitleBarMouseMove,The method has an empty catch block.
Empty Catch Block,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,The method has an empty catch block.
Magic Number,Hurricane.AppCommunication,AppCommunicationSettings,C:\repos\Alkalinee_Hurricane\Hurricane\AppCommunication\AppCommunicationSettings.cs,SetStandard,The following statement contains a magic number: Port = 10898;
Magic Number,Hurricane.AppCommunication,TCPConnection,C:\repos\Alkalinee_Hurricane\Hurricane\AppCommunication\TCPConnection.cs,TCPConnection,The following statement contains a magic number: client.ReceiveTimeout = 5000;
Magic Number,Hurricane.AppCommunication,TCPConnection,C:\repos\Alkalinee_Hurricane\Hurricane\AppCommunication\TCPConnection.cs,StartListening,The following statement contains a magic number: TcpClient.ReceiveTimeout = 600000;
Magic Number,Hurricane.AppCommunication.Commands,PlaylistCommand,C:\repos\Alkalinee_Hurricane\Hurricane\AppCommunication\Commands\PlaylistCommand.cs,Execute,The following statement contains a magic number: using (var stringWriter = new StringWriter())              using (var xmlWriter = XmlWriter.Create(stringWriter' new XmlWriterSettings { Encoding = Encoding.UTF8 }))              {                  var playlists = musicManager.Playlists.ToList();                  foreach (var playlist in playlists)                  {                      foreach (var track in playlist.Tracks.Where(track => !track.TrackExists))                      {                          playlist.Tracks.Remove(track);                      }                  }                    xmls.Serialize(xmlWriter' playlists);                  var binaryWriter = streams.BinaryWriter;                  var bytesToSend = Encoding.UTF8.GetBytes(stringWriter.ToString());                  binaryWriter.Write(bytesToSend.Length);                  MessageBox.Show(bytesToSend.ToString());                  MessageBox.Show(Encoding.UTF8.GetString(bytesToSend));                    const int bufferSize = 1024;                  int noOfPackets = (int)Math.Ceiling((double)bytesToSend.Length / bufferSize);                  int totalLength = bytesToSend.Length;                    for (int i = 0; i < noOfPackets; i++)                  {                      int currentPacketLength;                      if (totalLength > bufferSize)                      {                          currentPacketLength = bufferSize;                          totalLength -= currentPacketLength;                      }                      else                      {                          currentPacketLength = totalLength;                      }                        var sendingBuffer = new byte[currentPacketLength];                      binaryWriter.Write(sendingBuffer' 0' sendingBuffer.Length);                      binaryWriter.Flush();                  }              }
Magic Number,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,AdvancedInputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 7 "..\..\..\..\..\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml"              ((Hurricane.AppMainWindow.MahAppsExtensions.Dialogs.AdvancedInputDialog)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Dialog_Loaded);                            #line default              #line hidden              return;              case 2:              this.PART_TextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PART_AffirmativeButton = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.PART_NegativeButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,AdvancedInputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 7 "..\..\..\..\..\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml"              ((Hurricane.AppMainWindow.MahAppsExtensions.Dialogs.AdvancedInputDialog)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Dialog_Loaded);                            #line default              #line hidden              return;              case 2:              this.PART_TextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PART_AffirmativeButton = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.PART_NegativeButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,AdvancedInputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 7 "..\..\..\..\..\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml"              ((Hurricane.AppMainWindow.MahAppsExtensions.Dialogs.AdvancedInputDialog)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Dialog_Loaded);                            #line default              #line hidden              return;              case 2:              this.PART_TextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PART_AffirmativeButton = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.PART_NegativeButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.Designer.Data,EditableThemePack,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\EditableThemePack.cs,Save,The following statement contains a magic number: using (var fs = new FileStream(ThemePackPath' FileMode.Create' FileAccess.Write))              using (var zipStream = new ZipOutputStream(fs))              {                  zipStream.SetLevel(3);                  if (ContainsAudioVisualisation)                  {                    }                      var jsonFile = new FileInfo(Path.Combine(folderToCompress.FullName' "info.json"));                    using (var jsonStream = File.Open(jsonFile.FullName' FileMode.CreateNew))                  using (var sw = new StreamWriter(jsonStream))                  using (var jw = new JsonTextWriter(sw))                  {                      jw.Formatting = Formatting.Indented;                        var serializer = new JsonSerializer();                      serializer.Serialize(jw' this);                  }                          var newEntry = new ZipEntry("");                  }
Magic Number,Hurricane.Designer.Data,ThemeColor,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\ThemeColor.cs,ThemeColor,The following statement contains a magic number: Color = Color.FromArgb(255' 0' 0' 0);
Magic Number,Hurricane.Designer.Data,ThemePack,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Data\ThemePack.cs,Load,The following statement contains a magic number: using (var fs = new FileStream(fiSource.FullName' FileMode.Open' FileAccess.Read))              using (var zf = new ZipFile(fs))              {                  if (ContainsAudioVisualisation)                  {                      using (var stream = zf.GetInputStream(zf.GetEntry(ThemePackConsts.AudioVisualisationName)))                      {                          _audioVisualisationPlugin = await Task.Run(() => AudioVisualisationPluginHelper.FromStream(stream));                      }                  }                    if (ContainsBackground)                  {                      var path = "HurricaneBackground" + BackgroundName;                      var backgroundZipEntry = zf.GetEntry(BackgroundName);                      using (var zipStream = zf.GetInputStream(backgroundZipEntry))                      {                          var buffer = new byte[4096];                          var file = new FileInfo(path);                          if (file.Exists) file.Delete();                          using (var streamWriter = File.Create(file.FullName))                          {                              StreamUtils.Copy(zipStream' streamWriter' buffer);                          }                          _backgroundPath = file.FullName;                      }                  }                    if (ContainsAppTheme)                  {                      using (var stream = zf.GetInputStream(zf.GetEntry(ThemePackConsts.AppThemeName)))                      {                          _appThemeResourceDictionary = (ResourceDictionary)XamlReader.Load(stream);                      }                  }                                     if (ContainsAccentColor)                  {                      using (var stream = zf.GetInputStream(zf.GetEntry(ThemePackConsts.AccentColorName)))                      {                          _accentColorResourceDictionary = (ResourceDictionary)XamlReader.Load(stream);                      }                  }              }
Magic Number,Hurricane.Designer.Pages,ThemeEditControl,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\ThemeEditControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MainControl = ((Hurricane.Designer.Pages.ThemeEditControl)(target));              return;              case 2:              this.ThemeSettingsListBox = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,Hurricane.DragDrop.DropTargetAdorners,DropTargetInsertionAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\DropTargetAdorners\DropTargetInsertionAdorner.cs,DropTargetInsertionAdorner,The following statement contains a magic number: const int triangleSize = 5;
Magic Number,Hurricane.DragDrop.DropTargetAdorners,DropTargetInsertionAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\DragDrop\DropTargetAdorners\DropTargetInsertionAdorner.cs,DropTargetInsertionAdorner,The following statement contains a magic number: m_Pen = new Pen(Brushes.LightGray' 2);
Magic Number,Hurricane.GUI.Behaviors,FrameworkElementBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\FrameworkElementBehavior.cs,PropertyChangedCallback,The following statement contains a magic number: DoubleAnimation da = new DoubleAnimation(0.3' 1' TimeSpan.FromMilliseconds(500));
Magic Number,Hurricane.GUI.Behaviors,FrameworkElementBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\FrameworkElementBehavior.cs,PropertyChangedCallback,The following statement contains a magic number: DoubleAnimation da = new DoubleAnimation(0.3' 1' TimeSpan.FromMilliseconds(500));
Magic Number,Hurricane.GUI.Behaviors,FrameworkElementBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\FrameworkElementBehavior.cs,PropertyChangedCallback,The following statement contains a magic number: ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' 0' 10' 0)' new Thickness(0)' TimeSpan.FromSeconds(0.4));
Magic Number,Hurricane.GUI.Behaviors,FrameworkElementBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\FrameworkElementBehavior.cs,PropertyChangedCallback,The following statement contains a magic number: ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' 0' 10' 0)' new Thickness(0)' TimeSpan.FromSeconds(0.4));
Magic Number,Hurricane.GUI.Behaviors,FrameworkElementBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\FrameworkElementBehavior.cs,PropertyChangedCallback,The following statement contains a magic number: ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' 0' 10' 0)' new Thickness(0)' TimeSpan.FromSeconds(0.4));
Magic Number,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,ItemsSourceChanged,The following statement contains a magic number: var opacityAnimation = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(260)' FillBehavior.Stop);
Magic Number,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,ItemsSourceChanged,The following statement contains a magic number: var marginAnimation = new ThicknessAnimation(new Thickness(-20' 0' 20' 0)' new Thickness(0)'                  TimeSpan.FromMilliseconds(240)' FillBehavior.Stop)              {                  EasingFunction = new CircleEase { EasingMode = EasingMode.EaseOut }              };
Magic Number,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,ItemsSourceChanged,The following statement contains a magic number: var marginAnimation = new ThicknessAnimation(new Thickness(-20' 0' 20' 0)' new Thickness(0)'                  TimeSpan.FromMilliseconds(240)' FillBehavior.Stop)              {                  EasingFunction = new CircleEase { EasingMode = EasingMode.EaseOut }              };
Magic Number,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,ItemsSourceChanged,The following statement contains a magic number: var marginAnimation = new ThicknessAnimation(new Thickness(-20' 0' 20' 0)' new Thickness(0)'                  TimeSpan.FromMilliseconds(240)' FillBehavior.Stop)              {                  EasingFunction = new CircleEase { EasingMode = EasingMode.EaseOut }              };
Magic Number,Hurricane.GUI.Behaviors,ItemsControlAnimationBehavior,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\ItemsControlAnimationBehavior.cs,ItemsSourceChanged,The following statement contains a magic number: if (enumerator.MoveNext())              {                  ScrollChangedEventHandler scrollChangedEventHandler = null;                  scrollChangedEventHandler = (o' args) =>                  {                      var handler = scrollChangedEventHandler;                        if (handler != null)                          itemsControl.RemoveHandler(ScrollViewer.ScrollChangedEvent' handler);                        if (!Timers.ContainsKey(itemsControl) || !Timers[itemsControl].IsEnabled)                          return;                        var timer = Timers[itemsControl];                      timer.Stop();                        while (true)                      {                          var item = enumerator.Current;                          if (item == null)                              break;                          item.Opacity = 1;                          if (!enumerator.MoveNext()) break;                      }                  };                    dispatcherTimer = new DispatcherTimer { Interval = TimeSpan.FromMilliseconds(30) };                  dispatcherTimer.Tick += (s' timerE) =>                  {                      var item = enumerator.Current;                      if (item == null) return;                      item.BeginAnimation(FrameworkElement.MarginProperty' marginAnimation);                      item.BeginAnimation(UIElement.OpacityProperty' opacityAnimation);                      item.Opacity = 1;                      if (!enumerator.MoveNext())                      {                          dispatcherTimer.Stop();                          itemsControl.RemoveHandler(ScrollViewer.ScrollChangedEvent' scrollChangedEventHandler);                      }                  };                    if (Timers.ContainsKey(itemsControl)) Timers.Remove(itemsControl);                  Timers.Add(itemsControl' dispatcherTimer);                  dispatcherTimer.Start();                    itemsControl.AddHandler(ScrollViewer.ScrollChangedEvent' scrollChangedEventHandler);              }
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,GetDefaultGlyph,The following statement contains a magic number: double x1 = _columnHeader.ActualWidth - 13;
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,GetDefaultGlyph,The following statement contains a magic number: double x2 = x1 + 10;
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,GetDefaultGlyph,The following statement contains a magic number: double x3 = x1 + 5;
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,GetDefaultGlyph,The following statement contains a magic number: double y1 = _columnHeader.ActualHeight / 2 - 3;
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,GetDefaultGlyph,The following statement contains a magic number: double y1 = _columnHeader.ActualHeight / 2 - 3;
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,GetDefaultGlyph,The following statement contains a magic number: double y2 = y1 + 5;
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,OnRender,The following statement contains a magic number: if (_sortGlyph != null)                  {                      double x = _columnHeader.ActualWidth - 13;                      double y = _columnHeader.ActualHeight / 2 - 5;                      Rect rect = new Rect(x' y' 10' 10);                      drawingContext.DrawImage(_sortGlyph' rect);                  }                  else                  {                      drawingContext.DrawGeometry(Brushes.LightGray' new Pen(Brushes.Gray' 1.0)' GetDefaultGlyph());                  }
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,OnRender,The following statement contains a magic number: if (_sortGlyph != null)                  {                      double x = _columnHeader.ActualWidth - 13;                      double y = _columnHeader.ActualHeight / 2 - 5;                      Rect rect = new Rect(x' y' 10' 10);                      drawingContext.DrawImage(_sortGlyph' rect);                  }                  else                  {                      drawingContext.DrawGeometry(Brushes.LightGray' new Pen(Brushes.Gray' 1.0)' GetDefaultGlyph());                  }
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,OnRender,The following statement contains a magic number: if (_sortGlyph != null)                  {                      double x = _columnHeader.ActualWidth - 13;                      double y = _columnHeader.ActualHeight / 2 - 5;                      Rect rect = new Rect(x' y' 10' 10);                      drawingContext.DrawImage(_sortGlyph' rect);                  }                  else                  {                      drawingContext.DrawGeometry(Brushes.LightGray' new Pen(Brushes.Gray' 1.0)' GetDefaultGlyph());                  }
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,OnRender,The following statement contains a magic number: if (_sortGlyph != null)                  {                      double x = _columnHeader.ActualWidth - 13;                      double y = _columnHeader.ActualHeight / 2 - 5;                      Rect rect = new Rect(x' y' 10' 10);                      drawingContext.DrawImage(_sortGlyph' rect);                  }                  else                  {                      drawingContext.DrawGeometry(Brushes.LightGray' new Pen(Brushes.Gray' 1.0)' GetDefaultGlyph());                  }
Magic Number,Hurricane.GUI.Behaviors,SortGlyphAdorner,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\GridViewSort.cs,OnRender,The following statement contains a magic number: if (_sortGlyph != null)                  {                      double x = _columnHeader.ActualWidth - 13;                      double y = _columnHeader.ActualHeight / 2 - 5;                      Rect rect = new Rect(x' y' 10' 10);                      drawingContext.DrawImage(_sortGlyph' rect);                  }                  else                  {                      drawingContext.DrawGeometry(Brushes.LightGray' new Pen(Brushes.Gray' 1.0)' GetDefaultGlyph());                  }
Magic Number,Hurricane.GUI.Behaviors,HeaderFormatRule,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Behaviors\TextBlockBehavior.cs,GetRun,The following statement contains a magic number: var run = new Run(regexMatch.Groups["text"].Value) { FontSize = 16' FontWeight = FontWeights.Bold };
Magic Number,Hurricane.GUI.Controls,AnimatedStackPanel,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\AnimatedStackPanel.cs,FadeInAnimation,The following statement contains a magic number: foreach (var control in controls)              {                  control.BeginAnimation(OpacityProperty' null);                  control.BeginAnimation(MarginProperty' null);                  control.Opacity = 0;                  control.Margin = new Thickness(0' control.Margin.Top' 0' 0);                  DoubleAnimation da = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(300));                  ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' control.Margin.Top' 10' 0)' new Thickness(0' control.Margin.Top' 0' 0)' TimeSpan.FromMilliseconds(400));                  Storyboard.SetTarget(da' control);                  Storyboard.SetTarget(ta' control);                  Storyboard.SetTargetProperty(da' new PropertyPath(OpacityProperty));                  Storyboard.SetTargetProperty(ta' new PropertyPath(MarginProperty));                  fadeInAnimation.Children.Add(da);                  fadeInAnimation.Children.Add(ta);                  da.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  ta.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  counter++;              }
Magic Number,Hurricane.GUI.Controls,AnimatedStackPanel,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\AnimatedStackPanel.cs,FadeInAnimation,The following statement contains a magic number: foreach (var control in controls)              {                  control.BeginAnimation(OpacityProperty' null);                  control.BeginAnimation(MarginProperty' null);                  control.Opacity = 0;                  control.Margin = new Thickness(0' control.Margin.Top' 0' 0);                  DoubleAnimation da = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(300));                  ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' control.Margin.Top' 10' 0)' new Thickness(0' control.Margin.Top' 0' 0)' TimeSpan.FromMilliseconds(400));                  Storyboard.SetTarget(da' control);                  Storyboard.SetTarget(ta' control);                  Storyboard.SetTargetProperty(da' new PropertyPath(OpacityProperty));                  Storyboard.SetTargetProperty(ta' new PropertyPath(MarginProperty));                  fadeInAnimation.Children.Add(da);                  fadeInAnimation.Children.Add(ta);                  da.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  ta.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  counter++;              }
Magic Number,Hurricane.GUI.Controls,AnimatedStackPanel,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\AnimatedStackPanel.cs,FadeInAnimation,The following statement contains a magic number: foreach (var control in controls)              {                  control.BeginAnimation(OpacityProperty' null);                  control.BeginAnimation(MarginProperty' null);                  control.Opacity = 0;                  control.Margin = new Thickness(0' control.Margin.Top' 0' 0);                  DoubleAnimation da = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(300));                  ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' control.Margin.Top' 10' 0)' new Thickness(0' control.Margin.Top' 0' 0)' TimeSpan.FromMilliseconds(400));                  Storyboard.SetTarget(da' control);                  Storyboard.SetTarget(ta' control);                  Storyboard.SetTargetProperty(da' new PropertyPath(OpacityProperty));                  Storyboard.SetTargetProperty(ta' new PropertyPath(MarginProperty));                  fadeInAnimation.Children.Add(da);                  fadeInAnimation.Children.Add(ta);                  da.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  ta.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  counter++;              }
Magic Number,Hurricane.GUI.Controls,AnimatedStackPanel,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\AnimatedStackPanel.cs,FadeInAnimation,The following statement contains a magic number: foreach (var control in controls)              {                  control.BeginAnimation(OpacityProperty' null);                  control.BeginAnimation(MarginProperty' null);                  control.Opacity = 0;                  control.Margin = new Thickness(0' control.Margin.Top' 0' 0);                  DoubleAnimation da = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(300));                  ThicknessAnimation ta = new ThicknessAnimation(new Thickness(-10' control.Margin.Top' 10' 0)' new Thickness(0' control.Margin.Top' 0' 0)' TimeSpan.FromMilliseconds(400));                  Storyboard.SetTarget(da' control);                  Storyboard.SetTarget(ta' control);                  Storyboard.SetTargetProperty(da' new PropertyPath(OpacityProperty));                  Storyboard.SetTargetProperty(ta' new PropertyPath(MarginProperty));                  fadeInAnimation.Children.Add(da);                  fadeInAnimation.Children.Add(ta);                  da.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  ta.BeginTime = TimeSpan.FromMilliseconds(counter * interval);                  counter++;              }
Magic Number,Hurricane.GUI.Controls,VolumeIcon,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\VolumeIcon.xaml.cs,RefreshCurrentState,The following statement contains a magic number: if (CurrentVolume == 0)              {                  CurrentDisplayState = DisplayState.Mute;              }              else if (CurrentVolume <= 0.5)              {                  CurrentDisplayState = DisplayState.Medium;              }              else if (CurrentVolume > 0.5)              {                  CurrentDisplayState = DisplayState.Loud;              }
Magic Number,Hurricane.GUI.Controls,VolumeIcon,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\VolumeIcon.xaml.cs,RefreshCurrentState,The following statement contains a magic number: if (CurrentVolume == 0)              {                  CurrentDisplayState = DisplayState.Mute;              }              else if (CurrentVolume <= 0.5)              {                  CurrentDisplayState = DisplayState.Medium;              }              else if (CurrentVolume > 0.5)              {                  CurrentDisplayState = DisplayState.Loud;              }
Magic Number,Hurricane.GUI.Controls,TrackImagePreseter,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\TrackImagePreseter.xaml.cs,SetTrack,The following statement contains a magic number: if (newTrack != null)              {                  var counter = 0;                  while (newTrack.Image == null)                  {                      counter++;                      if (counter > 15) break;                      try                      {                          await Task.Delay(100' token);                      }                      catch (TaskCanceledException)                      {                          return;                      }                  }              }
Magic Number,Hurricane.GUI.Controls,TrackImagePreseter,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\TrackImagePreseter.xaml.cs,SetTrack,The following statement contains a magic number: if (newTrack != null)              {                  var counter = 0;                  while (newTrack.Image == null)                  {                      counter++;                      if (counter > 15) break;                      try                      {                          await Task.Delay(100' token);                      }                      catch (TaskCanceledException)                      {                          return;                      }                  }              }
Magic Number,Hurricane.GUI.Converter,FormatLargeNumber,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Converter\FormatLargeNumber.cs,Convert,The following statement contains a magic number: return n >= 10000 ? n.ToString("n0") : n.ToString("d");
Magic Number,Hurricane.GUI.Converter,RoundSizeConverter,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Converter\RoundSizeConverter.cs,SizeSuffix,The following statement contains a magic number: int mag = (int)Math.Log(value' 1024);
Magic Number,Hurricane.GUI.Converter,RoundSizeConverter,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Converter\RoundSizeConverter.cs,SizeSuffix,The following statement contains a magic number: decimal adjustedSize = (decimal)value / (1L << (mag * 10));
Magic Number,Hurricane.MagicArrow,WindowHider,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\WindowHider.cs,HideWindowFromAltTab,The following statement contains a magic number: _helperWindow = new Window              {                  Top = -100'                  Left = -100'                  Width = 1'                  Height = 1'                  WindowStyle = WindowStyle.ToolWindow              };
Magic Number,Hurricane.MagicArrow,WindowHider,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\WindowHider.cs,HideWindowFromAltTab,The following statement contains a magic number: _helperWindow = new Window              {                  Top = -100'                  Left = -100'                  Width = 1'                  Height = 1'                  WindowStyle = WindowStyle.ToolWindow              };
Magic Number,Hurricane.MagicArrow,StrokeWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\StrokeWindow.xaml.cs,StrokeWindow,The following statement contains a magic number: StrokeWidth = 3;
Magic Number,Hurricane.MagicArrow,StrokeWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\StrokeWindow.xaml.cs,SetLeft,The following statement contains a magic number: if (side == Side.Left) { Left = left - (20 - StrokeWidth); } else { Left = left - StrokeWidth; }
Magic Number,Hurricane.MagicArrow,StrokeWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\StrokeWindow.xaml.cs,MoveInvisible,The following statement contains a magic number: Left = -100;
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowOutOfScreen,The following statement contains a magic number: if (side == Side.Left)              {                  for (var i = 0; i > -32; i--)                  {                      await Task.Delay(1);                      BaseWindow.Left = i * 10 + WpfScreen.MostLeftX;                  }              }              else              {                  for (int i = 0; i < 32; i++)                  {                      await Task.Delay(1);                      BaseWindow.Left = WpfScreen.MostRightX - BaseWindow.Width + i * 10;                  }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowOutOfScreen,The following statement contains a magic number: if (side == Side.Left)              {                  for (var i = 0; i > -32; i--)                  {                      await Task.Delay(1);                      BaseWindow.Left = i * 10 + WpfScreen.MostLeftX;                  }              }              else              {                  for (int i = 0; i < 32; i++)                  {                      await Task.Delay(1);                      BaseWindow.Left = WpfScreen.MostRightX - BaseWindow.Width + i * 10;                  }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowOutOfScreen,The following statement contains a magic number: if (side == Side.Left)              {                  for (var i = 0; i > -32; i--)                  {                      await Task.Delay(1);                      BaseWindow.Left = i * 10 + WpfScreen.MostLeftX;                  }              }              else              {                  for (int i = 0; i < 32; i++)                  {                      await Task.Delay(1);                      BaseWindow.Left = WpfScreen.MostRightX - BaseWindow.Width + i * 10;                  }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowOutOfScreen,The following statement contains a magic number: if (side == Side.Left)              {                  for (var i = 0; i > -32; i--)                  {                      await Task.Delay(1);                      BaseWindow.Left = i * 10 + WpfScreen.MostLeftX;                  }              }              else              {                  for (int i = 0; i < 32; i++)                  {                      await Task.Delay(1);                      BaseWindow.Left = WpfScreen.MostRightX - BaseWindow.Width + i * 10;                  }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowBackInScreen,The following statement contains a magic number: BaseWindow.Left = _movedOutSide == Side.Left ? newleft + 10 : newleft - 10;
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowBackInScreen,The following statement contains a magic number: BaseWindow.Left = _movedOutSide == Side.Left ? newleft + 10 : newleft - 10;
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MoveWindowBackInScreen,The following statement contains a magic number: DoubleAnimation inanimation = new DoubleAnimation(BaseWindow.Left' newleft' TimeSpan.FromMilliseconds(150)' FillBehavior.Stop);
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,StrokeWindowMouseMove,The following statement contains a magic number: if (!_magicArrowIsShown && !_isInZone && StrokeWindow.PositionIsOk(_movedOutSide' Cursor.Position.X' WpfScreen.MostLeftX - 2' WpfScreen.MostRightX))              {                  _isInZone = true;                  Point p = e.GetPosition(_strokeWindow);                  var screen = WpfScreen.GetScreenFrom(p);                  ShowMagicArrow(p.Y + screen.WorkingArea.Top' _movedOutSide);              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: if (!HurricaneSettings.Instance.Config.ShowMagicArrowBelowCursor)              {                  if (top + 40 > GetScreenFromSide(_movedOutSide).WorkingArea.Height - 10)                  {                      top -= 40;                  }                  else { top += 40; }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: if (!HurricaneSettings.Instance.Config.ShowMagicArrowBelowCursor)              {                  if (top + 40 > GetScreenFromSide(_movedOutSide).WorkingArea.Height - 10)                  {                      top -= 40;                  }                  else { top += 40; }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: if (!HurricaneSettings.Instance.Config.ShowMagicArrowBelowCursor)              {                  if (top + 40 > GetScreenFromSide(_movedOutSide).WorkingArea.Height - 10)                  {                      top -= 40;                  }                  else { top += 40; }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: if (!HurricaneSettings.Instance.Config.ShowMagicArrowBelowCursor)              {                  if (top + 40 > GetScreenFromSide(_movedOutSide).WorkingArea.Height - 10)                  {                      top -= 40;                  }                  else { top += 40; }              }
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: MagicWindow = new MagicArrowWindow(top' side == Side.Left ? WpfScreen.MostLeftX - 10 : WpfScreen.MostRightX' side == Side.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX - 10' side);
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: MagicWindow = new MagicArrowWindow(top' side == Side.Left ? WpfScreen.MostLeftX - 10 : WpfScreen.MostRightX' side == Side.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX - 10' side);
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: Task.Run(async () =>              {                  while (_magicArrowIsShown)                  {                      await Task.Delay(1000);                      Views.Test.TestWindow.AddMessage("Check Magic Arrow");                      int cursorX = Cursor.Position.X;                      if (((_movedOutSide == Side.Left && cursorX > 4 - WpfScreen.MostLeftX) ||                          (_movedOutSide == Side.Right && cursorX < WpfScreen.MostRightX - 4)) && !MagicWindow.IsMouseOver)                      {                          Application.Current.Dispatcher.Invoke(HideMagicArrow);                      }                      else                      {                            Views.Test.TestWindow.AddMessage(string.Format("-> MAP: {0}; _movedOutSide: {1}; cursorX: {2}; MLX: {3}"' ""' _movedOutSide' cursorX' WpfScreen.MostLeftX));                      }                  }              });
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: Task.Run(async () =>              {                  while (_magicArrowIsShown)                  {                      await Task.Delay(1000);                      Views.Test.TestWindow.AddMessage("Check Magic Arrow");                      int cursorX = Cursor.Position.X;                      if (((_movedOutSide == Side.Left && cursorX > 4 - WpfScreen.MostLeftX) ||                          (_movedOutSide == Side.Right && cursorX < WpfScreen.MostRightX - 4)) && !MagicWindow.IsMouseOver)                      {                          Application.Current.Dispatcher.Invoke(HideMagicArrow);                      }                      else                      {                            Views.Test.TestWindow.AddMessage(string.Format("-> MAP: {0}; _movedOutSide: {1}; cursorX: {2}; MLX: {3}"' ""' _movedOutSide' cursorX' WpfScreen.MostLeftX));                      }                  }              });
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,ShowMagicArrow,The following statement contains a magic number: Task.Run(async () =>              {                  while (_magicArrowIsShown)                  {                      await Task.Delay(1000);                      Views.Test.TestWindow.AddMessage("Check Magic Arrow");                      int cursorX = Cursor.Position.X;                      if (((_movedOutSide == Side.Left && cursorX > 4 - WpfScreen.MostLeftX) ||                          (_movedOutSide == Side.Right && cursorX < WpfScreen.MostRightX - 4)) && !MagicWindow.IsMouseOver)                      {                          Application.Current.Dispatcher.Invoke(HideMagicArrow);                      }                      else                      {                            Views.Test.TestWindow.AddMessage(string.Format("-> MAP: {0}; _movedOutSide: {1}; cursorX: {2}; MLX: {3}"' ""' _movedOutSide' cursorX' WpfScreen.MostLeftX));                      }                  }              });
Magic Number,Hurricane.MagicArrow,MagicArrow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrow.cs,MagicWindow_MouseLeave,The following statement contains a magic number: if (StrokeWindow.PositionIsOk(_movedOutSide' Cursor.Position.X' 2 - WpfScreen.MostLeftX' WpfScreen.MostRightX))              {                  if (_strokeWindow != null)                      _strokeWindow.SetLeft(_movedOutSide == Side.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX - 1' _movedOutSide);                  HideMagicArrow();              }              else { _strokeWindow.SetLeft(_movedOutSide == Side.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX - 1' _movedOutSide); }
Magic Number,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,MagicArrowWindow,The following statement contains a magic number: this.Top = top - this.Height / 2;
Magic Number,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,RotateObject,The following statement contains a magic number: element.RenderTransformOrigin = new Point(0.5' 0.5);
Magic Number,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,RotateObject,The following statement contains a magic number: element.RenderTransformOrigin = new Point(0.5' 0.5);
Magic Number,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,OnClosing,The following statement contains a magic number: DoubleAnimation animation = new DoubleAnimation(FromLeft' TimeSpan.FromMilliseconds(400));
Magic Number,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.window = ((Hurricane.MagicArrow.MagicArrowWindow)(target));                            #line 10 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.DragEnter += new System.Windows.DragEventHandler(this.Window_DragEnter);                            #line default              #line hidden                            #line 11 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.Drop += new System.Windows.DragEventHandler(this.Window_Drop);                            #line default              #line hidden                            #line 13 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.Window_MouseDown);                            #line default              #line hidden              return;              case 2:              this.arrow = ((System.Windows.Shapes.Path)(target));              return;              case 3:              this.arrow2 = ((System.Windows.Shapes.Path)(target));              return;              }
Magic Number,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.window = ((Hurricane.MagicArrow.MagicArrowWindow)(target));                            #line 10 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.DragEnter += new System.Windows.DragEventHandler(this.Window_DragEnter);                            #line default              #line hidden                            #line 11 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.Drop += new System.Windows.DragEventHandler(this.Window_Drop);                            #line default              #line hidden                            #line 13 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.Window_MouseDown);                            #line default              #line hidden              return;              case 2:              this.arrow = ((System.Windows.Shapes.Path)(target));              return;              case 3:              this.arrow2 = ((System.Windows.Shapes.Path)(target));              return;              }
Magic Number,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,CalculateCDDBdiscID,The following statement contains a magic number: while (i < m_Tracks.Length)              {                  n = n + cddb_sum((lastTrackIndex(m_Tracks[i]).Minutes * 60) + lastTrackIndex(m_Tracks[i]).Seconds);                  i++;              }
Magic Number,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,CalculateCDDBdiscID,The following statement contains a magic number: t = ((lastTrackIndex(m_Tracks[m_Tracks.Length - 1]).Minutes * 60) + lastTrackIndex(m_Tracks[m_Tracks.Length - 1]).Seconds) -                  ((lastTrackIndex(m_Tracks[0]).Minutes * 60) + lastTrackIndex(m_Tracks[0]).Seconds);
Magic Number,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,CalculateCDDBdiscID,The following statement contains a magic number: t = ((lastTrackIndex(m_Tracks[m_Tracks.Length - 1]).Minutes * 60) + lastTrackIndex(m_Tracks[m_Tracks.Length - 1]).Seconds) -                  ((lastTrackIndex(m_Tracks[0]).Minutes * 60) + lastTrackIndex(m_Tracks[0]).Seconds);
Magic Number,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,CalculateCDDBdiscID,The following statement contains a magic number: ulong lDiscId = (((uint)n % 0xff) << 24 | (uint)t << 8 | (uint)m_Tracks.Length);
Magic Number,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,CalculateCDDBdiscID,The following statement contains a magic number: ulong lDiscId = (((uint)n % 0xff) << 24 | (uint)t << 8 | (uint)m_Tracks.Length);
Magic Number,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,cddb_sum,The following statement contains a magic number: while (n > 0)              {                  ret = ret + (n % 10);                  n = n / 10;              }
Magic Number,CueSharp,CueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,cddb_sum,The following statement contains a magic number: while (n > 0)              {                  ret = ret + (n % 10);                  n = n / 10;              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: output.Append("  TRACK " + m_TrackNumber.ToString().PadLeft(2' '0') + " " + m_TrackDataType.ToString().Replace('_'' '/'));
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: if (m_PreGap.Number != -1)              {                  output.Append(Environment.NewLine + "    PREGAP " + m_PreGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PreGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PreGap.Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: if (m_PreGap.Number != -1)              {                  output.Append(Environment.NewLine + "    PREGAP " + m_PreGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PreGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PreGap.Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: if (m_PreGap.Number != -1)              {                  output.Append(Environment.NewLine + "    PREGAP " + m_PreGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PreGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PreGap.Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: for (int j = 0; j < m_Indices.Length; j++)              {                  output.Append(Environment.NewLine + "    INDEX " + this[j].Number.ToString().PadLeft(2' '0') + " " + this[j].Minutes.ToString().PadLeft(2' '0') + ":" + this[j].Seconds.ToString().PadLeft(2' '0') + ":" + this[j].Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: for (int j = 0; j < m_Indices.Length; j++)              {                  output.Append(Environment.NewLine + "    INDEX " + this[j].Number.ToString().PadLeft(2' '0') + " " + this[j].Minutes.ToString().PadLeft(2' '0') + ":" + this[j].Seconds.ToString().PadLeft(2' '0') + ":" + this[j].Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: for (int j = 0; j < m_Indices.Length; j++)              {                  output.Append(Environment.NewLine + "    INDEX " + this[j].Number.ToString().PadLeft(2' '0') + " " + this[j].Minutes.ToString().PadLeft(2' '0') + ":" + this[j].Seconds.ToString().PadLeft(2' '0') + ":" + this[j].Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: for (int j = 0; j < m_Indices.Length; j++)              {                  output.Append(Environment.NewLine + "    INDEX " + this[j].Number.ToString().PadLeft(2' '0') + " " + this[j].Minutes.ToString().PadLeft(2' '0') + ":" + this[j].Seconds.ToString().PadLeft(2' '0') + ":" + this[j].Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: if (m_PostGap.Number != -1)              {                  output.Append(Environment.NewLine + "    POSTGAP " + m_PostGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PostGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PostGap.Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: if (m_PostGap.Number != -1)              {                  output.Append(Environment.NewLine + "    POSTGAP " + m_PostGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PostGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PostGap.Frames.ToString().PadLeft(2' '0'));              }
Magic Number,CueSharp,Track,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\CueSharp.cs,ToString,The following statement contains a magic number: if (m_PostGap.Number != -1)              {                  output.Append(Environment.NewLine + "    POSTGAP " + m_PostGap.Minutes.ToString().PadLeft(2' '0') + ":" + m_PostGap.Seconds.ToString().PadLeft(2' '0') + ":" + m_PostGap.Frames.ToString().PadLeft(2' '0'));              }
Magic Number,Hurricane.Music.Playlist,ImportCueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportCueSheet.cs,Import,The following statement contains a magic number: if (cue.Comments != null && cue.Comments.Length > 0)              {                  foreach (var comment in cue.Comments)                      if (comment.StartsWith("GENRE "))                          genre = comment.Substring(6);                      else if (comment.StartsWith("DATE "))                      {                          uint.TryParse(comment.Substring(5)' out year);                          if (year <= 1000 || year >= 3000)                              year = 0;                      }              }
Magic Number,Hurricane.Music.Playlist,ImportCueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportCueSheet.cs,Import,The following statement contains a magic number: if (cue.Comments != null && cue.Comments.Length > 0)              {                  foreach (var comment in cue.Comments)                      if (comment.StartsWith("GENRE "))                          genre = comment.Substring(6);                      else if (comment.StartsWith("DATE "))                      {                          uint.TryParse(comment.Substring(5)' out year);                          if (year <= 1000 || year >= 3000)                              year = 0;                      }              }
Magic Number,Hurricane.Music.Playlist,ImportCueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportCueSheet.cs,Import,The following statement contains a magic number: if (cue.Comments != null && cue.Comments.Length > 0)              {                  foreach (var comment in cue.Comments)                      if (comment.StartsWith("GENRE "))                          genre = comment.Substring(6);                      else if (comment.StartsWith("DATE "))                      {                          uint.TryParse(comment.Substring(5)' out year);                          if (year <= 1000 || year >= 3000)                              year = 0;                      }              }
Magic Number,Hurricane.Music.Playlist,ImportCueSheet,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportCueSheet.cs,Import,The following statement contains a magic number: if (cue.Comments != null && cue.Comments.Length > 0)              {                  foreach (var comment in cue.Comments)                      if (comment.StartsWith("GENRE "))                          genre = comment.Substring(6);                      else if (comment.StartsWith("DATE "))                      {                          uint.TryParse(comment.Substring(5)' out year);                          if (year <= 1000 || year >= 3000)                              year = 0;                      }              }
Magic Number,Hurricane.Music.Playlist,ImportM3uPlaylist,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportM3uPlaylist.cs,Import,The following statement contains a magic number: for (int trackNumber = 1; ; )              {                  var line = reader.ReadLine();                    if (line == null)                      break;                    line = line.Trim();                    if (string.IsNullOrWhiteSpace(line))                      continue;                    // TODO: support http                    if (line.StartsWith("#EXTINF:"))                  {                      try                      {                          var split = line.Substring(8).TrimStart(''');                          var parts = split.Split(new [] { ''' }' 2);                          LocalTrack track;                          if (parts.Length == 2)                          {                              track = new LocalTrack { Title = parts[1].Trim() };                              track.ResetDuration(new TimeSpan(0' 0' int.Parse(parts[0])));                          }                          else                          {                              track = new LocalTrack { Title = split.Trim() };                          }                          playlist.AddTrack(track);                      }                      catch (Exception ex)                      {                          // ignore it                          Debug.WriteLine("M3U ext track import error: " + ex.Message);                      }                  }                  else if (line.StartsWith("http"))                  {                      Uri uri;                      try                      {                          uri = new Uri(line);                      }                      catch (Exception)                      {                          Debug.Print("M3U track import error: invalid uri - '{0}'"' line);                          continue;                      }                      playlist.AddTrack(new CustomStream {StreamUrl = line' Title = uri.Host});                  }                  else if (line[0] != '#')	// skip comments                  {                      playlist.AddTrack(new LocalTrack {Path = Path.Combine(basePath' line)' TrackNumber = trackNumber++});                  }              }
Magic Number,Hurricane.Music.Playlist,ImportM3uPlaylist,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportM3uPlaylist.cs,Import,The following statement contains a magic number: for (int trackNumber = 1; ; )              {                  var line = reader.ReadLine();                    if (line == null)                      break;                    line = line.Trim();                    if (string.IsNullOrWhiteSpace(line))                      continue;                    // TODO: support http                    if (line.StartsWith("#EXTINF:"))                  {                      try                      {                          var split = line.Substring(8).TrimStart(''');                          var parts = split.Split(new [] { ''' }' 2);                          LocalTrack track;                          if (parts.Length == 2)                          {                              track = new LocalTrack { Title = parts[1].Trim() };                              track.ResetDuration(new TimeSpan(0' 0' int.Parse(parts[0])));                          }                          else                          {                              track = new LocalTrack { Title = split.Trim() };                          }                          playlist.AddTrack(track);                      }                      catch (Exception ex)                      {                          // ignore it                          Debug.WriteLine("M3U ext track import error: " + ex.Message);                      }                  }                  else if (line.StartsWith("http"))                  {                      Uri uri;                      try                      {                          uri = new Uri(line);                      }                      catch (Exception)                      {                          Debug.Print("M3U track import error: invalid uri - '{0}'"' line);                          continue;                      }                      playlist.AddTrack(new CustomStream {StreamUrl = line' Title = uri.Host});                  }                  else if (line[0] != '#')	// skip comments                  {                      playlist.AddTrack(new LocalTrack {Path = Path.Combine(basePath' line)' TrackNumber = trackNumber++});                  }              }
Magic Number,Hurricane.Music.Playlist,ImportM3uPlaylist,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\ImportM3uPlaylist.cs,Import,The following statement contains a magic number: for (int trackNumber = 1; ; )              {                  var line = reader.ReadLine();                    if (line == null)                      break;                    line = line.Trim();                    if (string.IsNullOrWhiteSpace(line))                      continue;                    // TODO: support http                    if (line.StartsWith("#EXTINF:"))                  {                      try                      {                          var split = line.Substring(8).TrimStart(''');                          var parts = split.Split(new [] { ''' }' 2);                          LocalTrack track;                          if (parts.Length == 2)                          {                              track = new LocalTrack { Title = parts[1].Trim() };                              track.ResetDuration(new TimeSpan(0' 0' int.Parse(parts[0])));                          }                          else                          {                              track = new LocalTrack { Title = split.Trim() };                          }                          playlist.AddTrack(track);                      }                      catch (Exception ex)                      {                          // ignore it                          Debug.WriteLine("M3U ext track import error: " + ex.Message);                      }                  }                  else if (line.StartsWith("http"))                  {                      Uri uri;                      try                      {                          uri = new Uri(line);                      }                      catch (Exception)                      {                          Debug.Print("M3U track import error: invalid uri - '{0}'"' line);                          continue;                      }                      playlist.AddTrack(new CustomStream {StreamUrl = line' Title = uri.Host});                  }                  else if (line[0] != '#')	// skip comments                  {                      playlist.AddTrack(new LocalTrack {Path = Path.Combine(basePath' line)' TrackNumber = trackNumber++});                  }              }
Magic Number,Hurricane.Music.Playlist,PlaylistBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\PlaylistBase.cs,LoadList,The following statement contains a magic number: if (Tracks != null)              {                  Tracks.CollectionChanged += async (s' e) =>                  {                      if (e.Action != NotifyCollectionChangedAction.Move || e.NewItems == null || e.NewItems.Count <= 0)                          return;                      var track = e.NewItems[0] as PlayableBase;                      if (track == null) return;                      track.IsAdded = true;                      await Task.Delay(500);                      track.IsAdded = false;                  };                  ViewSource = CollectionViewSource.GetDefaultView(Tracks);                  ViewSource.Filter = item => string.IsNullOrWhiteSpace(SearchText) || item.ToString().ToUpper().Contains(SearchText.ToUpper());                  ShuffleList = new List<PlayableBase>(Tracks);              }
Magic Number,Hurricane.Music.Playlist,NormalPlaylist,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\NormalPlaylist.cs,AddTrack,The following statement contains a magic number: var tmr = new DispatcherTimer { Interval = TimeSpan.FromMilliseconds(500) };
Magic Number,Hurricane.Music.Playlist,NormalPlaylist,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Playlist\NormalPlaylist.cs,RemoveTrack,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,Fade,The following statement contains a magic number: float step = different / ((float)duration.TotalMilliseconds / 20);
Magic Number,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,Fade,The following statement contains a magic number: for (int i = 0; i < duration.TotalMilliseconds / 20; i++)              {                  if (_cancel) { _cancel = false; OnCancelled(); break; }                  await Task.Delay(20);                  if (getLouder) { currentvolume += step; } else { currentvolume -= step; }                  if (currentvolume < 0 || currentvolume > 1) break;                  try                  {                      soundout.Volume = currentvolume;                  }                  catch (ObjectDisposedException)                  {                      break;                  }              }
Magic Number,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,Fade,The following statement contains a magic number: for (int i = 0; i < duration.TotalMilliseconds / 20; i++)              {                  if (_cancel) { _cancel = false; OnCancelled(); break; }                  await Task.Delay(20);                  if (getLouder) { currentvolume += step; } else { currentvolume -= step; }                  if (currentvolume < 0 || currentvolume > 1) break;                  try                  {                      soundout.Volume = currentvolume;                  }                  catch (ObjectDisposedException)                  {                      break;                  }              }
Magic Number,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,WaitForCancel,The following statement contains a magic number: if (IsFading)              {                  try                  {                      _canceledWaiter.WaitOne(50);                  }                  catch (ObjectDisposedException)                  {                      //ignore                  }              }
Magic Number,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,FadeIn,The following statement contains a magic number: await Fade(0' toVolume' TimeSpan.FromMilliseconds(300)' true' soundOut);
Magic Number,Hurricane.Music.AudioEngine,VolumeFading,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,FadeOut,The following statement contains a magic number: await Fade(fromVolume' 0' TimeSpan.FromMilliseconds(300)' false' soundOut);
Magic Number,Hurricane.Music.AudioEngine,Crossfade,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,FadeOut,The following statement contains a magic number: var steps = seconds / 0.2;
Magic Number,Hurricane.Music.AudioEngine,Crossfade,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\VolumeFading.cs,FadeOut,The following statement contains a magic number: for (int i = 0; i < steps; i++)              {                  if (_cancel) { _cancel = false; break; }                  await Task.Delay(200);                  try                  {                      var value = soundOut.Volume - soundstep;                      if (0 > value) break;                      soundOut.Volume -= soundstep;                  }                  catch (ObjectDisposedException)                  {                      IsCrossfading = false;                      break;                  }              }
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,SetEqualizerValue,The following statement contains a magic number: var perc = (value/100);
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,OpenTrack,The following statement contains a magic number: if (Settings.SampleRate == -1 && SoundSource.WaveFormat.SampleRate < 44100)              {                  SoundSource = SoundSource.ChangeSampleRate(44100);              }              else if (Settings.SampleRate > -1)              {                  SoundSource = SoundSource.ChangeSampleRate(Settings.SampleRate);              }
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,OpenTrack,The following statement contains a magic number: if (Settings.SampleRate == -1 && SoundSource.WaveFormat.SampleRate < 44100)              {                  SoundSource = SoundSource.ChangeSampleRate(44100);              }              else if (Settings.SampleRate > -1)              {                  SoundSource = SoundSource.ChangeSampleRate(Settings.SampleRate);              }
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,OpenTrack,The following statement contains a magic number: SoundSource = SoundSource                  .AppendSource(x => Equalizer.Create10BandEqualizer(x.ToSampleSource())' out equalizer)                  .AppendSource(x => new SingleBlockNotificationStream(x)' out _singleBlockNotificationStream)                  .AppendSource(x => new SimpleNotificationSource(x) {Interval = 100}' out _simpleNotificationSource)                  .ToWaveSource(Settings.WaveSourceBits);
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,notifysource_BlockRead,The following statement contains a magic number: if (Settings.IsCrossfadeEnabled && totalseconds - Settings.CrossfadeDuration > 6 &&                  !_crossfade.IsCrossfading && totalseconds - seconds < Settings.CrossfadeDuration)              {                  _fader.OutDuration = totalseconds - seconds;                  _crossfade.FadeOut(Settings.CrossfadeDuration' _soundOut);                  _simpleNotificationSource.BlockRead -= notifysource_BlockRead;                  _singleBlockNotificationStream.SingleBlockRead -= notificationSource_SingleBlockRead;                  _soundOut.Stopped -= soundOut_Stopped;                  Application.Current.Dispatcher.Invoke(() =>                  {                      RefreshSoundOut();                      OnTrackFinished();                  });              }
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,GetFFTFrequencyIndex,The following statement contains a magic number: if (SoundSource != null)              {                  f = SoundSource.WaveFormat.SampleRate/2.0;              }              else              {                  f = 22050; //44100 / 2              }
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,GetFFTFrequencyIndex,The following statement contains a magic number: if (SoundSource != null)              {                  f = SoundSource.WaveFormat.SampleRate/2.0;              }              else              {                  f = 22050; //44100 / 2              }
Magic Number,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,GetFFTFrequencyIndex,The following statement contains a magic number: return Convert.ToInt32((frequency/f)*(FFTSize/2));
Magic Number,Hurricane.Music.Track,LocalTrackFragment,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrackFragment.cs,UpdateMetadata,The following statement contains a magic number: kHz = source.WaveFormat.SampleRate / 1000;
Magic Number,Hurricane.Music.Track,LocalTrackFragment,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrackFragment.cs,UpdateMetadata,The following statement contains a magic number: kbps = source.WaveFormat.BytesPerSecond * 8 / 1000;
Magic Number,Hurricane.Music.Track,LocalTrackFragment,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrackFragment.cs,UpdateMetadata,The following statement contains a magic number: kbps = source.WaveFormat.BytesPerSecond * 8 / 1000;
Magic Number,Hurricane.Music.Track,CustomStream,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\CustomStream.cs,CheckTrack,The following statement contains a magic number: try              {                  using (var soundSource = await GetSoundSource())                  {                      SetDuration(soundSource.GetLength());                      kHz = soundSource.WaveFormat.SampleRate / 1000;                      IsInfinityStreamSerializable = soundSource.Length == 0;                  }              }              catch (Exception)              {                  return false;              }
Magic Number,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,TryLoadWithTagLibSharp,The following statement contains a magic number: using (info)              {                  Artist = RemoveInvalidXmlChars(!string.IsNullOrWhiteSpace(info.Tag.FirstPerformer) ? info.Tag.FirstPerformer : info.Tag.FirstAlbumArtist);                  Title = !string.IsNullOrWhiteSpace(info.Tag.Title) ? RemoveInvalidXmlChars(info.Tag.Title) : System.IO.Path.GetFileNameWithoutExtension(filename.FullName);                  Album = RemoveInvalidXmlChars(info.Tag.Album);                  Genres = new List<Genre>(info.Tag.Genres.Select(StringToGenre));                    if (info.Properties.AudioBitrate > 56000) //No idea what TagLib# is thinking' but sometimes it shows the bitrate * 1000                  {                      kbps = (int)Math.Round(info.Properties.AudioBitrate / (double)1000' 0);                  }                  else                  {                      kbps = info.Properties.AudioBitrate;                  }                  kHz = info.Properties.AudioSampleRate / 1000;                  Year = info.Tag.Year;                  SetDuration(info.Properties.Duration);              }
Magic Number,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,TryLoadWithTagLibSharp,The following statement contains a magic number: using (info)              {                  Artist = RemoveInvalidXmlChars(!string.IsNullOrWhiteSpace(info.Tag.FirstPerformer) ? info.Tag.FirstPerformer : info.Tag.FirstAlbumArtist);                  Title = !string.IsNullOrWhiteSpace(info.Tag.Title) ? RemoveInvalidXmlChars(info.Tag.Title) : System.IO.Path.GetFileNameWithoutExtension(filename.FullName);                  Album = RemoveInvalidXmlChars(info.Tag.Album);                  Genres = new List<Genre>(info.Tag.Genres.Select(StringToGenre));                    if (info.Properties.AudioBitrate > 56000) //No idea what TagLib# is thinking' but sometimes it shows the bitrate * 1000                  {                      kbps = (int)Math.Round(info.Properties.AudioBitrate / (double)1000' 0);                  }                  else                  {                      kbps = info.Properties.AudioBitrate;                  }                  kHz = info.Properties.AudioSampleRate / 1000;                  Year = info.Tag.Year;                  SetDuration(info.Properties.Duration);              }
Magic Number,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,TryLoadWithTagLibSharp,The following statement contains a magic number: using (info)              {                  Artist = RemoveInvalidXmlChars(!string.IsNullOrWhiteSpace(info.Tag.FirstPerformer) ? info.Tag.FirstPerformer : info.Tag.FirstAlbumArtist);                  Title = !string.IsNullOrWhiteSpace(info.Tag.Title) ? RemoveInvalidXmlChars(info.Tag.Title) : System.IO.Path.GetFileNameWithoutExtension(filename.FullName);                  Album = RemoveInvalidXmlChars(info.Tag.Album);                  Genres = new List<Genre>(info.Tag.Genres.Select(StringToGenre));                    if (info.Properties.AudioBitrate > 56000) //No idea what TagLib# is thinking' but sometimes it shows the bitrate * 1000                  {                      kbps = (int)Math.Round(info.Properties.AudioBitrate / (double)1000' 0);                  }                  else                  {                      kbps = info.Properties.AudioBitrate;                  }                  kHz = info.Properties.AudioSampleRate / 1000;                  Year = info.Tag.Year;                  SetDuration(info.Properties.Duration);              }
Magic Number,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,TryLoadWithCSCore,The following statement contains a magic number: try              {                  await Task.Run(() =>                  {                      using (FileStream sr = new FileStream(filename.FullName' FileMode.Open' FileAccess.Read))                          frame = Mp3Frame.FromStream(sr);                  });                    if (frame != null) { kbps = (int)Math.Round(frame.BitRate / (double)1000' 0); }                  TimeSpan duration = TimeSpan.Zero;                  int samplerate = 0;                    await Task.Run(() =>                  {                      using (var soundSource = CodecFactory.Instance.GetCodec(filename.FullName))                      {                          samplerate = soundSource.WaveFormat.SampleRate;                          duration = soundSource.GetLength();                      }                  });                    kHz = samplerate / 1000;                  SetDuration(duration);                  IsChecked = true;              }              catch (Exception)              {                  return false;              }
Magic Number,Hurricane.Music.Track,LocalTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\LocalTrack.cs,TryLoadWithCSCore,The following statement contains a magic number: try              {                  await Task.Run(() =>                  {                      using (FileStream sr = new FileStream(filename.FullName' FileMode.Open' FileAccess.Read))                          frame = Mp3Frame.FromStream(sr);                  });                    if (frame != null) { kbps = (int)Math.Round(frame.BitRate / (double)1000' 0); }                  TimeSpan duration = TimeSpan.Zero;                  int samplerate = 0;                    await Task.Run(() =>                  {                      using (var soundSource = CodecFactory.Instance.GetCodec(filename.FullName))                      {                          samplerate = soundSource.WaveFormat.SampleRate;                          duration = soundSource.GetLength();                      }                  });                    kHz = samplerate / 1000;                  SetDuration(duration);                  IsChecked = true;              }              catch (Exception)              {                  return false;              }
Magic Number,Hurricane.Music.Track,PlayableBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\PlayableBase.cs,GetImage,The following statement contains a magic number: if (Image == null)              {                  var waiter = new AutoResetEvent(false);                    ImageLoadedComplete += (s' e) => { waiter.Set(); };                  Load();                  await Task.Run(() => waiter.WaitOne(2000));              }
Magic Number,Hurricane.Music.Track,PlayableBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\PlayableBase.cs,Unload,The following statement contains a magic number: if (Image != null)              {                  _disposeImageCancellationToken = new CancellationTokenSource();                  try                  {                      await Task.Delay(2000' _disposeImageCancellationToken.Token); //Some animations need that                  }                  catch (TaskCanceledException)                  {                      return;                  }                    if (Image.StreamSource != null) Image.StreamSource.Dispose();                  Image = null;              }
Magic Number,Hurricane.Music.Track,PlayableBase,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\PlayableBase.cs,CheckTrack,The following statement contains a magic number: try              {                  using (var soundSource = await GetSoundSource())                  {                      SetDuration(soundSource.GetLength());                      kHz = soundSource.WaveFormat.SampleRate/1000;                  }              }              catch (Exception)              {                  return false;              }
Magic Number,Hurricane.Music.Track,SoundSourceInfo,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\SoundSourceInfo.cs,FromSoundSource,The following statement contains a magic number: return new SoundSourceInfo { kHz = source.WaveFormat.SampleRate / 1000' Duration = source.GetLength() };
Magic Number,Hurricane.Music.Track,YouTubeTrack,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\YouTubeTrack.cs,LoadInformation,The following statement contains a magic number: using (var soundSource = await GetSoundSource())              {                  kHz = soundSource.WaveFormat.SampleRate / 1000;                  SetDuration(soundSource.GetLength());              }
Magic Number,Hurricane.Music.Track.WebApi.YouTubeApi.DataClasses.PlaylistInfo,PlaylistInfo,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\DataClasses\PlaylistInfo\PlaylistInfo.cs,GetTracks,The following statement contains a magic number: for (int i = 0; i < (int)Math.Ceiling((double)TotalTracks / 50); i++)              {                  var tracks = YouTubeApi.GetPlaylistTracks(await YouTubeApi.GetPlaylist(PlaylistId' currentPlaylist.nextPageToken' 50));                  for (int j = 0; j < tracks.Count; j++)                  {                      var track = tracks[j];                      if (LoadingTracksProcessChanged != null)                          LoadingTracksProcessChanged(this' new LoadingTracksEventArgs(i * 50 + j' TotalTracks' track.Title));                      resultList.Add(track.ToPlayable());                      if (controller.IsCanceled) return null;                  }              }
Magic Number,Hurricane.Music.Track.WebApi.YouTubeApi.DataClasses.PlaylistInfo,PlaylistInfo,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\DataClasses\PlaylistInfo\PlaylistInfo.cs,GetTracks,The following statement contains a magic number: for (int i = 0; i < (int)Math.Ceiling((double)TotalTracks / 50); i++)              {                  var tracks = YouTubeApi.GetPlaylistTracks(await YouTubeApi.GetPlaylist(PlaylistId' currentPlaylist.nextPageToken' 50));                  for (int j = 0; j < tracks.Count; j++)                  {                      var track = tracks[j];                      if (LoadingTracksProcessChanged != null)                          LoadingTracksProcessChanged(this' new LoadingTracksEventArgs(i * 50 + j' TotalTracks' track.Title));                      resultList.Add(track.ToPlayable());                      if (controller.IsCanceled) return null;                  }              }
Magic Number,Hurricane.Music.Track.WebApi.YouTubeApi.DataClasses.PlaylistInfo,PlaylistInfo,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\DataClasses\PlaylistInfo\PlaylistInfo.cs,GetTracks,The following statement contains a magic number: for (int i = 0; i < (int)Math.Ceiling((double)TotalTracks / 50); i++)              {                  var tracks = YouTubeApi.GetPlaylistTracks(await YouTubeApi.GetPlaylist(PlaylistId' currentPlaylist.nextPageToken' 50));                  for (int j = 0; j < tracks.Count; j++)                  {                      var track = tracks[j];                      if (LoadingTracksProcessChanged != null)                          LoadingTracksProcessChanged(this' new LoadingTracksEventArgs(i * 50 + j' TotalTracks' track.Title));                      resultList.Add(track.ToPlayable());                      if (controller.IsCanceled) return null;                  }              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,BitrateToIndex,The following statement contains a magic number: switch (waveSourceBits)              {                  case 8:                      return 0;                  case 16:                      return 1;                  case 24:                      return 2;                  case 32:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,BitrateToIndex,The following statement contains a magic number: switch (waveSourceBits)              {                  case 8:                      return 0;                  case 16:                      return 1;                  case 24:                      return 2;                  case 32:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,BitrateToIndex,The following statement contains a magic number: switch (waveSourceBits)              {                  case 8:                      return 0;                  case 16:                      return 1;                  case 24:                      return 2;                  case 32:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,BitrateToIndex,The following statement contains a magic number: switch (waveSourceBits)              {                  case 8:                      return 0;                  case 16:                      return 1;                  case 24:                      return 2;                  case 32:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,BitrateToIndex,The following statement contains a magic number: switch (waveSourceBits)              {                  case 8:                      return 0;                  case 16:                      return 1;                  case 24:                      return 2;                  case 32:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,BitrateToIndex,The following statement contains a magic number: switch (waveSourceBits)              {                  case 8:                      return 0;                  case 16:                      return 1;                  case 24:                      return 2;                  case 32:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,IndexToBitrate,The following statement contains a magic number: switch (index)              {                  case 0:                     return 8;                  case 1:                      return 16;                  case 2:                      return 24;                  case 3:                      return 32;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,IndexToBitrate,The following statement contains a magic number: switch (index)              {                  case 0:                     return 8;                  case 1:                      return 16;                  case 2:                      return 24;                  case 3:                      return 32;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,IndexToBitrate,The following statement contains a magic number: switch (index)              {                  case 0:                     return 8;                  case 1:                      return 16;                  case 2:                      return 24;                  case 3:                      return 32;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,IndexToBitrate,The following statement contains a magic number: switch (index)              {                  case 0:                     return 8;                  case 1:                      return 16;                  case 2:                      return 24;                  case 3:                      return 32;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,IndexToBitrate,The following statement contains a magic number: switch (index)              {                  case 0:                     return 8;                  case 1:                      return 16;                  case 2:                      return 24;                  case 3:                      return 32;              }
Magic Number,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,IndexToBitrate,The following statement contains a magic number: switch (index)              {                  case 0:                     return 8;                  case 1:                      return 16;                  case 2:                      return 24;                  case 3:                      return 32;              }
Magic Number,Hurricane.Settings.Converter,LatencyToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\LatencyToIndexConverter.cs,Convert,The following statement contains a magic number: return ((int) value)/50 - 1;
Magic Number,Hurricane.Settings.Converter,LatencyToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\LatencyToIndexConverter.cs,ConvertBack,The following statement contains a magic number: return (((int) value) + 1)*50;
Magic Number,Hurricane.Settings.Converter,QualityToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\QualityToIndexConverter.cs,Convert,The following statement contains a magic number: switch ((ImageQuality)value)              {                  case ImageQuality.Small:                      return 0;                  case ImageQuality.Medium :                      return 1;                  case ImageQuality.Large:                      return 2;                  case ImageQuality.Maximum:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,QualityToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\QualityToIndexConverter.cs,Convert,The following statement contains a magic number: switch ((ImageQuality)value)              {                  case ImageQuality.Small:                      return 0;                  case ImageQuality.Medium :                      return 1;                  case ImageQuality.Large:                      return 2;                  case ImageQuality.Maximum:                      return 3;              }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following statement contains a magic number: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Magic Number,Hurricane.Settings,PasswordEntry,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\PasswordEntry.cs,DecryptString,The following statement contains a magic number: return                  Rot17.Decrypt(                      (Encoding.BigEndianUnicode.GetString(                          Convert.FromBase64String(                              Enumerable.Range(0' str.Length/2)                                  .Select(i => str.Substring(i*2' 2))                                  .Select(x => (char) Convert.ToInt32(x' 16))                                  .Aggregate(new StringBuilder()' (x' y) => x.Append(y))                                  .ToString()))));
Magic Number,Hurricane.Settings,PasswordEntry,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\PasswordEntry.cs,DecryptString,The following statement contains a magic number: return                  Rot17.Decrypt(                      (Encoding.BigEndianUnicode.GetString(                          Convert.FromBase64String(                              Enumerable.Range(0' str.Length/2)                                  .Select(i => str.Substring(i*2' 2))                                  .Select(x => (char) Convert.ToInt32(x' 16))                                  .Aggregate(new StringBuilder()' (x' y) => x.Append(y))                                  .ToString()))));
Magic Number,Hurricane.Settings,PasswordEntry,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\PasswordEntry.cs,DecryptString,The following statement contains a magic number: return                  Rot17.Decrypt(                      (Encoding.BigEndianUnicode.GetString(                          Convert.FromBase64String(                              Enumerable.Range(0' str.Length/2)                                  .Select(i => str.Substring(i*2' 2))                                  .Select(x => (char) Convert.ToInt32(x' 16))                                  .Aggregate(new StringBuilder()' (x' y) => x.Append(y))                                  .ToString()))));
Magic Number,Hurricane.Settings,PasswordEntry,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\PasswordEntry.cs,DecryptString,The following statement contains a magic number: return                  Rot17.Decrypt(                      (Encoding.BigEndianUnicode.GetString(                          Convert.FromBase64String(                              Enumerable.Range(0' str.Length/2)                                  .Select(i => str.Substring(i*2' 2))                                  .Select(x => (char) Convert.ToInt32(x' 16))                                  .Aggregate(new StringBuilder()' (x' y) => x.Append(y))                                  .ToString()))));
Magic Number,Hurricane.Settings,ConfigSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\ConfigSettings.cs,SetStandardValues,The following statement contains a magic number: WaveSourceBits = 16;
Magic Number,Hurricane.Settings,ConfigSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\ConfigSettings.cs,SetStandardValues,The following statement contains a magic number: NotificationShowTime = 5000;
Magic Number,Hurricane.Settings,ConfigSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\ConfigSettings.cs,SetStandardValues,The following statement contains a magic number: Latency = 100;
Magic Number,Hurricane.Settings,ConfigSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\ConfigSettings.cs,SetStandardValues,The following statement contains a magic number: CrossfadeDuration = 4;
Magic Number,Hurricane.Settings,CurrentState,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\CurrentState.cs,SetStandardValues,The following statement contains a magic number: LastPlaylistIndex = -10;
Magic Number,Hurricane.Settings,UpdateService,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\UpdateService.cs,updController_updateFound,The following statement contains a magic number: NewVersion = version.Substring(0' version.Length - 2);
Magic Number,Hurricane.Settings.Themes.AudioVisualisation.RectangleVisualisation,AdvancedWindowAudioVisualisation,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\RectangleVisualisation\AdvancedWindowAudioVisualisation.cs,Enable,The following statement contains a magic number: if (_spectrumAnalyzer != null) _spectrumAnalyzer.RefreshInterval = 20;
Magic Number,Hurricane.Settings.Themes.AudioVisualisation.RectangleVisualisation,SmartWindowAudioVisualisation,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\RectangleVisualisation\SmartWindowAudioVisualisation.cs,Enable,The following statement contains a magic number: if (_spectrumAnalyzer != null) _spectrumAnalyzer.RefreshInterval = 20;
Magic Number,Hurricane.Settings.Themes.AudioVisualisation.BarAudioVisualisation,AdvancedWindowAudioVisualisation,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\BarAudioVisualisation\AdvancedWindowAudioVisualisation.cs,Enable,The following statement contains a magic number: if (_spectrumAnalyzer != null) _spectrumAnalyzer.RefreshInterval = 20;
Magic Number,Hurricane.Settings.Themes.AudioVisualisation.BarAudioVisualisation,SmartWindowAudioVisualisation,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\BarAudioVisualisation\SmartWindowAudioVisualisation.cs,Enable,The following statement contains a magic number: if (_spectrumAnalyzer != null) _spectrumAnalyzer.RefreshInterval = 20;
Magic Number,Hurricane.Settings.Themes.AudioVisualisation.SquareAudioVisualisation,AdvancedWindowAudioVisualisation,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\SquareAudioVisualisation\AdvancedWindowAudioVisualisation.cs,Enable,The following statement contains a magic number: if (_spectrumAnalyzer != null) _spectrumAnalyzer.RefreshInterval = 20;
Magic Number,Hurricane.Settings.Themes.AudioVisualisation.SquareAudioVisualisation,SmartWindowAudioVisualisation,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Themes\AudioVisualisation\SquareAudioVisualisation\SmartWindowAudioVisualisation.cs,Enable,The following statement contains a magic number: if (_spectrumAnalyzer != null) _spectrumAnalyzer.RefreshInterval = 20;
Magic Number,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,MouseIsLeftRightOrTop,The following statement contains a magic number: if (mouseX < WpfScreen.MostLeftX + 5)              {                  side = WindowPositionSide.Left;                  return true;              }
Magic Number,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,MouseIsLeftRightOrTop,The following statement contains a magic number: if (mouseX >= WpfScreen.MostRightX - 5)              {                  side = WindowPositionSide.Right;                  return true;              }
Magic Number,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,MouseIsLeftRightOrTop,The following statement contains a magic number: if (mouseY < 5)              {                  side = WindowPositionSide.Top;                  return true;              }
Magic Number,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,OpenWindow,The following statement contains a magic number: switch (side)              {                  case WindowPositionSide.Left:                      dockwindowLeft = WpfScreen.MostLeftX;                      dockwindowWidth = 300;                      break;                  case WindowPositionSide.Right:                      dockwindowLeft = WpfScreen.MostRightX - 300;                      dockwindowWidth = 300;                      break;                  case WindowPositionSide.Top:                      return;                  default:                      throw new ArgumentOutOfRangeException("side");              }
Magic Number,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,OpenWindow,The following statement contains a magic number: switch (side)              {                  case WindowPositionSide.Left:                      dockwindowLeft = WpfScreen.MostLeftX;                      dockwindowWidth = 300;                      break;                  case WindowPositionSide.Right:                      dockwindowLeft = WpfScreen.MostRightX - 300;                      dockwindowWidth = 300;                      break;                  case WindowPositionSide.Top:                      return;                  default:                      throw new ArgumentOutOfRangeException("side");              }
Magic Number,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,OpenWindow,The following statement contains a magic number: switch (side)              {                  case WindowPositionSide.Left:                      dockwindowLeft = WpfScreen.MostLeftX;                      dockwindowWidth = 300;                      break;                  case WindowPositionSide.Right:                      dockwindowLeft = WpfScreen.MostRightX - 300;                      dockwindowWidth = 300;                      break;                  case WindowPositionSide.Top:                      return;                  default:                      throw new ArgumentOutOfRangeException("side");              }
Magic Number,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,ApplyCurrentSide,The following statement contains a magic number: if (CurrentSide == DockingSide.Left || CurrentSide == DockingSide.Right)              {                  _basewindow.Left = CurrentSide == DockingSide.Left ? WpfScreen.MostLeftX : WpfScreen.MostRightX - 300;                  var screen = WpfScreen.GetScreenFrom(new Point(_basewindow.Left' 0));                  _basewindow.Top = screen.WorkingArea.Top;                  WindowHeight = screen.WorkingArea.Height;              }
Magic Number,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,LoadFromSettings,The following statement contains a magic number: if (currentState.LastPlaylistIndex > -10)              {                  CurrentPlaylist = IndexToPlaylist(currentState.LastPlaylistIndex);              }
Magic Number,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,CheckIfTracksExists,The following statement contains a magic number: foreach (PlayableBase t in list.Tracks)              {                  t.RefreshTrackExists();                  if (t.TrackExists) { counter++; if (counter == 2) result = true; } //Don't cancel because all tracks need to refresh              }
Magic Number,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,IndexToPlaylist,The following statement contains a magic number: switch (index)              {                  case -1:                      return FavoritePlaylist;                  case -10:                      return Playlists[0];                  default:                      if (index < 0 || index > Playlists.Count - 1) return Playlists[0];                      return Playlists[index];              }
Magic Number,Hurricane.Music,MusicManager,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicManager.cs,PlaylistToIndex,The following statement contains a magic number: return -10;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,CreateNew,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  Bands.Add(new EqualizerBand(Bandlabels[i]));              }
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[2].Value = two;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[3].Value = three;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[4].Value = four;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[5].Value = five;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[6].Value = six;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[7].Value = seven;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[8].Value = eight;
Magic Number,Hurricane.Music.MusicEqualizer,EqualizerSettings,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicEqualizer\EqualizerSettings.cs,LoadPreset,The following statement contains a magic number: Bands[9].Value = nine;
Magic Number,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,TrimTrackTitle,The following statement contains a magic number: if (title.EndsWith("hd")) title = title.Remove(title.Length - 2' 2);
Magic Number,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,TrimTrackTitle,The following statement contains a magic number: if (title.EndsWith("hd")) title = title.Remove(title.Length - 2' 2);
Magic Number,Hurricane.Music.Track.WebApi,TrackSearcher,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\TrackSearcher.cs,AddTracksToPlaylist,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Hurricane.Music.Track.WebApi.YouTubeApi,YouTubeApi,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Track\WebApi\YouTubeApi\YouTubeApi.cs,CheckForSpecialUrl,The following statement contains a magic number: if (match.Success)              {                  var playlist = await GetPlaylist(match.Groups["id"].Value' null' 50);                  await playlist.LoadImage();                  return new Tuple<bool' List<WebTrackResultBase>' IPlaylistResult>(true' GetPlaylistTracks(playlist).Cast<WebTrackResultBase>().ToList()' playlist);              }
Magic Number,Hurricane.Notification,NotificationService,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\NotificationService.cs,Test,The following statement contains a magic number: PlayableBase trackToUse = _lasttrack ?? new LocalTrack              {                  Artist = "Alkaline"'                  Title = "Sample Track"'                  Duration = "03:26"'                  kHz = 44'                  Path = Assembly.GetExecutingAssembly().Location'                  Extension = "MP3"              };
Magic Number,Hurricane.Notification.Views,NotificationRightBottomWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationRightBottomWindow.xaml.cs,NotificationRightBottomWindow,The following statement contains a magic number: Width = SystemParameters.WorkArea.Width / 4;
Magic Number,Hurricane.Notification.Views,NotificationRightBottomWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationRightBottomWindow.xaml.cs,MoveOut,The following statement contains a magic number: DoubleAnimation animation = new DoubleAnimation(0.85' 0' TimeSpan.FromMilliseconds(300));
Magic Number,Hurricane.Notification.Views,NotificationRightBottomWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationRightBottomWindow.xaml.cs,MoveOut,The following statement contains a magic number: DoubleAnimation animation = new DoubleAnimation(0.85' 0' TimeSpan.FromMilliseconds(300));
Magic Number,Hurricane.Notification.Views,NotificationTopWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationTopWindow.xaml.cs,MoveOut,The following statement contains a magic number: DoubleAnimation animation = new DoubleAnimation(0.85' 0' TimeSpan.FromMilliseconds(300));
Magic Number,Hurricane.Notification.Views,NotificationTopWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationTopWindow.xaml.cs,MoveOut,The following statement contains a magic number: DoubleAnimation animation = new DoubleAnimation(0.85' 0' TimeSpan.FromMilliseconds(300));
Magic Number,Hurricane.Notification.WindowMessages,WindowMessanger,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\WindowMessages\WindowMessanger.cs,SendMessageToWindow,The following statement contains a magic number: try              {                  cds.cbData = (parameter.Length + 1) * 2;                  cds.lpData = UnsafeNativeMethods.LocalAlloc(0x40' cds.cbData);                  Marshal.Copy(parameter.ToCharArray()' 0' cds.lpData' parameter.Length);                  cds.dwData = (IntPtr)1;                  UnsafeNativeMethods.SendMessage(hwnd' message' IntPtr.Zero' ref cds);              }              finally              {                  cds.Dispose();              }
Magic Number,Hurricane.Music.API,Commander,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\Commander.cs,ExecuteCommand,The following statement contains a magic number: foreach (var command in this.Commands)              {                  if (command.Token == commandlineArguments[0])                  {                      foreach (var action in command.CommandActions)                      {                          if (action.Token == commandlineArguments[1])                          {                              string parameter = string.Empty;                              if (commandlineArguments.Length > 2) parameter = commandlineArguments[2];                              try                              {                                  if (action.GetType() == typeof(CommandAction))                                  { ((CommandAction)action).Action.Invoke(parameter); }                                  else { return command.Token + " " + ((CommandFunction)action).Function.Invoke(parameter); }                              }                              catch (Exception ex)                              {                                  return "Error: " + ex.Message;                              }                                return string.Empty;                          }                      }                      break;                  }              }
Magic Number,Hurricane.Music.API,Commander,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\Commander.cs,ExecuteCommand,The following statement contains a magic number: foreach (var command in this.Commands)              {                  if (command.Token == commandlineArguments[0])                  {                      foreach (var action in command.CommandActions)                      {                          if (action.Token == commandlineArguments[1])                          {                              string parameter = string.Empty;                              if (commandlineArguments.Length > 2) parameter = commandlineArguments[2];                              try                              {                                  if (action.GetType() == typeof(CommandAction))                                  { ((CommandAction)action).Action.Invoke(parameter); }                                  else { return command.Token + " " + ((CommandFunction)action).Function.Invoke(parameter); }                              }                              catch (Exception ex)                              {                                  return "Error: " + ex.Message;                              }                                return string.Empty;                          }                      }                      break;                  }              }
Magic Number,Hurricane.Music.API,TcpServer,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\TcpServer.cs,ListenerThread,The following statement contains a magic number: while (true)              {                  TcpClient client;                  try                  {                      client = listener.AcceptTcpClient();                  }                  catch (Exception)                  {                      break;                  }                  TcpConnection connection = new TcpConnection(client' MusicManager);                  string openline = connection.Reader.ReadLine();                  if (string.IsNullOrEmpty(openline)) continue;                  string[] parameters = openline.Split('|');                  if (parameters.Length < 4 || parameters.Length > 4) { connection.WriteLine("Error: Can't read arguments. Please use \"bool|bool|bool|bool\""); connection.Dispose(); break; }                  bool error = false;                  foreach (var item in parameters)                  {                      bool temp;                      if (!bool.TryParse(item' out temp)) { connection.WriteLine("Error: Can't read arguments. Please use \"bool|bool|bool|bool\""); connection.Dispose(); error = true; break; }                  }                  if (error) continue;                  SetParameters(parameters' connection);                  connection.WriteLine("welcome");                  this.Connections.Add(connection);                  Thread t = new Thread(ListenToConnetion) { IsBackground = true };                  t.Start(connection);              }
Magic Number,Hurricane.Music.API,TcpServer,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\TcpServer.cs,ListenerThread,The following statement contains a magic number: while (true)              {                  TcpClient client;                  try                  {                      client = listener.AcceptTcpClient();                  }                  catch (Exception)                  {                      break;                  }                  TcpConnection connection = new TcpConnection(client' MusicManager);                  string openline = connection.Reader.ReadLine();                  if (string.IsNullOrEmpty(openline)) continue;                  string[] parameters = openline.Split('|');                  if (parameters.Length < 4 || parameters.Length > 4) { connection.WriteLine("Error: Can't read arguments. Please use \"bool|bool|bool|bool\""); connection.Dispose(); break; }                  bool error = false;                  foreach (var item in parameters)                  {                      bool temp;                      if (!bool.TryParse(item' out temp)) { connection.WriteLine("Error: Can't read arguments. Please use \"bool|bool|bool|bool\""); connection.Dispose(); error = true; break; }                  }                  if (error) continue;                  SetParameters(parameters' connection);                  connection.WriteLine("welcome");                  this.Connections.Add(connection);                  Thread t = new Thread(ListenToConnetion) { IsBackground = true };                  t.Start(connection);              }
Magic Number,Hurricane.Music.API,TcpServer,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\TcpServer.cs,SetParameters,The following statement contains a magic number: if (bool.Parse(parameters[2])) connection.RegisterTrackChanged();
Magic Number,Hurricane.Music.API,TcpServer,C:\repos\Alkalinee_Hurricane\Hurricane\Music\API\TcpServer.cs,SetParameters,The following statement contains a magic number: if (bool.Parse(parameters[3])) connection.RegisterVolumeChanged();
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,GeneralHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\GeneralHelper.cs,ROT13,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Utilities,PasswordGenerator,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\PasswordGenerator.cs,GetSystemSpecificHandshake,The following statement contains a magic number: return _handshake ??                     (_handshake = GetMD5Hash(Environment.UserName + Environment.MachineName).Substring(0' 16));
Magic Number,Hurricane.Utilities,WindowHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\WindowHelper.cs,GetActiveWindowTitle,The following statement contains a magic number: const int nChars = 256;
Magic Number,Hurricane.Utilities,WindowHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\WindowHelper.cs,GetClassName,The following statement contains a magic number: const int maxChars = 256;
Magic Number,Hurricane.Utilities,ImageHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\ImageHelper.cs,GetMinimumSize,The following statement contains a magic number: if (size.Width == size.Height)              {                  newSize = new Size(220' 220);              }              else              {                  bool widthIsHigher = size.Width > size.Height;                  double ratio = size.Width / (double)size.Height;                  double newwidth;                  double newheight;                    if (widthIsHigher)                  {                      newwidth = maxHeight * ratio;                      if (newwidth >= maxWidth)                      {                          newheight = maxHeight;                      }                      else                      {                          newwidth = maxWidth;                          newheight = maxWidth / ratio;                      }                  }                  else                  {                      newheight = maxWidth / ratio;                      if (newheight >= maxHeight)                      {                          newwidth = maxWidth;                      }                      else                      {                          newwidth = maxHeight * ratio;                          newheight = maxHeight;                      }                  }                  newSize = new Size((int)Math.Round(newwidth' 0)' (int)Math.Round(newheight' 0));              }
Magic Number,Hurricane.Utilities,ImageHelper,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\ImageHelper.cs,GetMinimumSize,The following statement contains a magic number: if (size.Width == size.Height)              {                  newSize = new Size(220' 220);              }              else              {                  bool widthIsHigher = size.Width > size.Height;                  double ratio = size.Width / (double)size.Height;                  double newwidth;                  double newheight;                    if (widthIsHigher)                  {                      newwidth = maxHeight * ratio;                      if (newwidth >= maxWidth)                      {                          newheight = maxHeight;                      }                      else                      {                          newwidth = maxWidth;                          newheight = maxWidth / ratio;                      }                  }                  else                  {                      newheight = maxWidth / ratio;                      if (newheight >= maxHeight)                      {                          newwidth = maxWidth;                      }                      else                      {                          newwidth = maxHeight * ratio;                          newheight = maxHeight;                      }                  }                  newSize = new Size((int)Math.Round(newwidth' 0)' (int)Math.Round(newheight' 0));              }
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Encrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,System.Security,Rot17,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\LevenshteinDistance.cs,Decrypt,The following statement contains a magic number: return !string.IsNullOrEmpty(input) ? new string(input.ToCharArray().Select(s => (char)((s >= 97 && s <= 122) ? ((s + 13 > 122) ? s - 13 : s + 13) : (s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s))).ToArray()) : input;
Magic Number,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.DownloadTrackWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 21 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectPath_Click);                            #line default              #line hidden              return;              case 4:              this.ConvertTrackCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:                            #line 66 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged);                            #line default              #line hidden              return;              case 6:                            #line 76 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              case 7:                            #line 77 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.DownloadTrackWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 21 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectPath_Click);                            #line default              #line hidden              return;              case 4:              this.ConvertTrackCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:                            #line 66 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged);                            #line default              #line hidden              return;              case 6:                            #line 76 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              case 7:                            #line 77 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.DownloadTrackWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 21 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectPath_Click);                            #line default              #line hidden              return;              case 4:              this.ConvertTrackCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:                            #line 66 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged);                            #line default              #line hidden              return;              case 6:                            #line 76 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              case 7:                            #line 77 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.DownloadTrackWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 21 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectPath_Click);                            #line default              #line hidden              return;              case 4:              this.ConvertTrackCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:                            #line 66 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged);                            #line default              #line hidden              return;              case 6:                            #line 76 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              case 7:                            #line 77 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.DownloadTrackWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 21 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectPath_Click);                            #line default              #line hidden              return;              case 4:              this.ConvertTrackCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:                            #line 66 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged);                            #line default              #line hidden              return;              case 6:                            #line 76 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              case 7:                            #line 77 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.DownloadTrackWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 21 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectPath_Click);                            #line default              #line hidden              return;              case 4:              this.ConvertTrackCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:                            #line 66 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged);                            #line default              #line hidden              return;              case 6:                            #line 76 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              case 7:                            #line 77 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,EqualizerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\EqualizerWindow.xaml.cs,EqualizerWindow_Closing,The following statement contains a magic number: if (!_canClose)              {                  e.Cancel = true;                  if (!_isClosing)                  {                      _isClosing = true;                      Storyboard story = new Storyboard();                      DoubleAnimation doubleanimation = new DoubleAnimation(_isLeft ? Left - 25 : Left + 25' TimeSpan.FromMilliseconds(100));                      Storyboard.SetTargetProperty(doubleanimation' new PropertyPath(LeftProperty));                      Storyboard.SetTarget(doubleanimation' this);                      story.Children.Add(doubleanimation);                        story.Completed += (s' es) => { _canClose = true; Close(); };                      story.Begin(this);                        if (BeginCloseAnimation != null) BeginCloseAnimation(this' EventArgs.Empty);                  }              }
Magic Number,Hurricane.Views,EqualizerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\EqualizerWindow.xaml.cs,EqualizerWindow_Closing,The following statement contains a magic number: if (!_canClose)              {                  e.Cancel = true;                  if (!_isClosing)                  {                      _isClosing = true;                      Storyboard story = new Storyboard();                      DoubleAnimation doubleanimation = new DoubleAnimation(_isLeft ? Left - 25 : Left + 25' TimeSpan.FromMilliseconds(100));                      Storyboard.SetTargetProperty(doubleanimation' new PropertyPath(LeftProperty));                      Storyboard.SetTarget(doubleanimation' this);                      story.Children.Add(doubleanimation);                        story.Completed += (s' es) => { _canClose = true; Close(); };                      story.Begin(this);                        if (BeginCloseAnimation != null) BeginCloseAnimation(this' EventArgs.Empty);                  }              }
Magic Number,Hurricane.Views,EqualizerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\EqualizerWindow.xaml.cs,EqualizerWindow_Closing,The following statement contains a magic number: if (!_canClose)              {                  e.Cancel = true;                  if (!_isClosing)                  {                      _isClosing = true;                      Storyboard story = new Storyboard();                      DoubleAnimation doubleanimation = new DoubleAnimation(_isLeft ? Left - 25 : Left + 25' TimeSpan.FromMilliseconds(100));                      Storyboard.SetTargetProperty(doubleanimation' new PropertyPath(LeftProperty));                      Storyboard.SetTarget(doubleanimation' this);                      story.Children.Add(doubleanimation);                        story.Completed += (s' es) => { _canClose = true; Close(); };                      story.Begin(this);                        if (BeginCloseAnimation != null) BeginCloseAnimation(this' EventArgs.Empty);                  }              }
Magic Number,Hurricane.Views,EqualizerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\EqualizerWindow.xaml.cs,SetPosition,The following statement contains a magic number: Top = parentRecantgle.top + 25;
Magic Number,Hurricane.Views,FolderImportWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\FolderImportWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.FolderImportWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 14 "..\..\..\Views\FolderImportWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,FolderImportWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\FolderImportWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.FolderImportWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 14 "..\..\..\Views\FolderImportWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,MessageWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MessageWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.PositiveButton = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.NegativeButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.Views,MessageWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MessageWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.PositiveButton = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.NegativeButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.Views,ProgressWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ProgressWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.InfoTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.StatusProgressBar = ((MahApps.Metro.Controls.MetroProgressBar)(target));              return;              }
Magic Number,Hurricane.Views,ReportExceptionWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ReportExceptionWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.ReportExceptionWindow)(target));              return;              case 2:              this.NoteTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 27 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonSendErrorReport_Click);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClose_Click);                            #line default              #line hidden              return;              case 5:              this.StatusProgressBar = ((MahApps.Metro.Controls.MetroProgressBar)(target));              return;              }
Magic Number,Hurricane.Views,ReportExceptionWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ReportExceptionWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.ReportExceptionWindow)(target));              return;              case 2:              this.NoteTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 27 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonSendErrorReport_Click);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClose_Click);                            #line default              #line hidden              return;              case 5:              this.StatusProgressBar = ((MahApps.Metro.Controls.MetroProgressBar)(target));              return;              }
Magic Number,Hurricane.Views,ReportExceptionWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ReportExceptionWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.ReportExceptionWindow)(target));              return;              case 2:              this.NoteTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 27 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonSendErrorReport_Click);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClose_Click);                            #line default              #line hidden              return;              case 5:              this.StatusProgressBar = ((MahApps.Metro.Controls.MetroProgressBar)(target));              return;              }
Magic Number,Hurricane.Views,ReportExceptionWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ReportExceptionWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.ReportExceptionWindow)(target));              return;              case 2:              this.NoteTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 27 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonSendErrorReport_Click);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClose_Click);                            #line default              #line hidden              return;              case 5:              this.StatusProgressBar = ((MahApps.Metro.Controls.MetroProgressBar)(target));              return;              }
Magic Number,Hurricane.Views,TrackImportWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\TrackImportWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.TrackImportWindow)(target));              return;              case 2:              this.RememberCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              }
Magic Number,Hurricane.Views,UpdateWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.UpdateWindow)(target));              return;              case 2:              this.StateGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 54 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 60 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,UpdateWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.UpdateWindow)(target));              return;              case 2:              this.StateGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 54 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 60 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,UpdateWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.UpdateWindow)(target));              return;              case 2:              this.StateGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 54 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 60 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views,InputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\Views\InputDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.InputDialog)(target));              return;              case 2:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.ResultTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.OkButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.Views,InputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\Views\InputDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.InputDialog)(target));              return;              case 2:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.ResultTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.OkButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.Views,InputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\Views\InputDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.InputDialog)(target));              return;              case 2:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.ResultTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.OkButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,Hurricane.Views.Tools,LanguageCreatorWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\Tools\LanguageCreatorWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Window = ((Hurricane.Views.Tools.LanguageCreatorWindow)(target));              return;              case 2:              this.DataGridTextColumn = ((System.Windows.Controls.DataGridTextColumn)(target));              return;              }
Magic Number,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.AboutControl = ((Hurricane.Views.UserControls.AboutView)(target));              return;              case 2:                            #line 56 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonGitHub_Click);                            #line default              #line hidden              return;              case 3:                            #line 95 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonVBP_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.AboutControl = ((Hurricane.Views.UserControls.AboutView)(target));              return;              case 2:                            #line 56 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonGitHub_Click);                            #line default              #line hidden              return;              case 3:                            #line 95 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonVBP_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 4:                            #line 152 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 5:                            #line 173 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 6:                            #line 178 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              }
Magic Number,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 4:                            #line 152 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 5:                            #line 173 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 6:                            #line 178 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              }
Magic Number,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 4:                            #line 152 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 5:                            #line 173 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 6:                            #line 178 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              }
Magic Number,Hurricane.Views.UserControls,EqualizerView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\EqualizerView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserControl = ((Hurricane.Views.UserControls.EqualizerView)(target));              return;              case 2:                            #line 40 "..\..\..\..\Views\UserControls\EqualizerView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PART_CLOSE_Click);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TabControl = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.CrossfadeIsEnabledCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.CrossfadeSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:              this.MinimizeToTrayCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.DownloadCoverCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.AppConnectionInformationStackPanel = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TabControl = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.CrossfadeIsEnabledCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.CrossfadeSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:              this.MinimizeToTrayCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.DownloadCoverCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.AppConnectionInformationStackPanel = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TabControl = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.CrossfadeIsEnabledCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.CrossfadeSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:              this.MinimizeToTrayCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.DownloadCoverCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.AppConnectionInformationStackPanel = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TabControl = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.CrossfadeIsEnabledCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.CrossfadeSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:              this.MinimizeToTrayCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.DownloadCoverCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.AppConnectionInformationStackPanel = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TabControl = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.CrossfadeIsEnabledCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.CrossfadeSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:              this.MinimizeToTrayCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.DownloadCoverCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.AppConnectionInformationStackPanel = ((System.Windows.Controls.StackPanel)(target));              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (appsettings.ApplicationState == null)              {                  WindowStartupLocation = WindowStartupLocation.CenterScreen;                  appsettings.ApplicationState = new DockingApplicationState                  {                      CurrentSide = DockingSide.None'                      Height = 600'                      Width = 1000'                      Left = Left'                      Top = Top                  };              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (appsettings.ApplicationState == null)              {                  WindowStartupLocation = WindowStartupLocation.CenterScreen;                  appsettings.ApplicationState = new DockingApplicationState                  {                      CurrentSide = DockingSide.None'                      Height = 600'                      Width = 1000'                      Left = Left'                      Top = Top                  };              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,CenterWindowOnScreen,The following statement contains a magic number: Left = (screen.Width / 2) - (Width / 2);
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,CenterWindowOnScreen,The following statement contains a magic number: Left = (screen.Width / 2) - (Width / 2);
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,CenterWindowOnScreen,The following statement contains a magic number: Top = (screen.Height / 2) - (Height / 2);
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,CenterWindowOnScreen,The following statement contains a magic number: Top = (screen.Height / 2) - (Height / 2);
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ApplyHostWindow,The following statement contains a magic number: if (skin == SmartWindowSkin)              {                  Width = 300;                  Height = MagicArrow.DockManager.WindowHeight;                  if (MainViewModel.Instance.MusicManager != null)                      MainViewModel.Instance.MusicManager.DownloadManager.IsOpen = false;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ApplyHostWindow,The following statement contains a magic number: var animation = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(200));
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,MoveOut,The following statement contains a magic number: var fadeanimation = new DoubleAnimation(1' 0' TimeSpan.FromMilliseconds(200));
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ResetAndMoveIn,The following statement contains a magic number: var outanimation = new ThicknessAnimation(new Thickness(-100' 0' 100' 0)' new Thickness(0)' TimeSpan.FromMilliseconds(350));
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ResetAndMoveIn,The following statement contains a magic number: var outanimation = new ThicknessAnimation(new Thickness(-100' 0' 100' 0)' new Thickness(0)' TimeSpan.FromMilliseconds(350));
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ResetAndMoveIn,The following statement contains a magic number: var outanimation = new ThicknessAnimation(new Thickness(-100' 0' 100' 0)' new Thickness(0)' TimeSpan.FromMilliseconds(350));
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,ResetAndMoveIn,The following statement contains a magic number: var fadeanimation = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(400));
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,BackgroundChanged,The following statement contains a magic number: var animation = new DoubleAnimation(0' 1' TimeSpan.FromMilliseconds(1000));
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Magic Number,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,The following statement contains a magic number: if (e.Args.Length > 0)              {                  switch (e.Args[0])                  {                      case "/test":                          var view = new TestWindow();                          view.Show();                          break;                      case "/language_creator":                          var languageCreator = new LanguageCreatorWindow();                          languageCreator.ShowDialog();                          return;                      case "/designer":                          var resource = new ResourceDictionary { Source = new Uri("/Resources/Themes/Cyan.xaml"' UriKind.Relative) };                          ApplicationThemeManager.Instance.LoadResource("accentcolor"' resource);                          var designer = new Designer.DesignerWindow();                          designer.ShowDialog();                          return;                      case "/registry":                          var manager = new RegistryManager();                          var item = manager.ContextMenuItems.First(x => x.Extension == Environment.GetCommandLineArgs()[2]);                          try                          {                              if (item != null) item.ToggleRegister(!item.IsRegistered' false);                          }                          catch (SecurityException)                          {                              MessageBox.Show("Something went extremly wrong. This application didn't got administrator rights so it can't register anything.");                          }                            Current.Shutdown();                          return;                      case "/screeninfo":                          var message = new StringBuilder();                          var screens = WpfScreen.AllScreens().ToList();                          message.AppendLine("Hurricane - Detected Screens");                          message.AppendLine("-----------------------------------------------------------------------------------");                          message.AppendFormat("Found screens: {0}"' screens.Count);                          message.AppendLine();                          foreach (var wpfScreen in screens)                          {                              message.AppendFormat("Screen #{0} ({1})"' screens.IndexOf(wpfScreen)' wpfScreen.DeviceName);                              message.AppendFormat("Size: Width {0}' Height {1}"' wpfScreen.WorkingArea.Width' wpfScreen.WorkingArea.Height);                              message.AppendFormat("Position: X {0}' Y {1}"' wpfScreen.WorkingArea.X' wpfScreen.WorkingArea.Y);                              message.AppendFormat("IsPrimary: {0}"' wpfScreen.IsPrimary);                              message.AppendLine();                          }                          message.AppendLine("-----------------------------------------------------------------------------------");                          message.AppendLine();                          message.AppendFormat("Most left x: {0}"' WpfScreen.MostLeftX);                          message.AppendFormat("Most right x: {0}"' WpfScreen.MostRightX);                          MessageBox.Show(message.ToString());                          Current.Shutdown();                          return;                      case "/showlines":                          MagicArrow.StrokeWindow.ShowLines = true;                          break;                      case "/positiontest":                          PositionTestWindow positionTest = new PositionTestWindow();                          positionTest.Show();                          return;                      default:                          openfile = true;                          break;                  }              }
Magic Number,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,The following statement contains a magic number: Resources.MergedDictionaries.RemoveAt(Resources.MergedDictionaries.Count -2);
Magic Number,Hurricane,App,C:\repos\Alkalinee_Hurricane\Hurricane\App.xaml.cs,OnStartup,The following statement contains a magic number: Resources.MergedDictionaries.RemoveAt(Resources.MergedDictionaries.Count - 2);
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,WindowAdvancedView,The following statement contains a magic number: Configuration = new WindowSkinConfiguration()              {                  MaxHeight = double.PositiveInfinity'                  MaxWidth = double.PositiveInfinity'                  MinHeight = 500'                  MinWidth = 850'                  ShowSystemMenuOnRightClick = true'                  ShowTitleBar = false'                  ShowWindowControls = true'                  NeedsMovingHelp = true'                  ShowFullscreenDialogs = true'                  IsResizable = true'                  SupportsCustomBackground = true'                  SupportsMinimizingToTray = true              };
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,WindowAdvancedView,The following statement contains a magic number: Configuration = new WindowSkinConfiguration()              {                  MaxHeight = double.PositiveInfinity'                  MaxWidth = double.PositiveInfinity'                  MinHeight = 500'                  MinWidth = 850'                  ShowSystemMenuOnRightClick = true'                  ShowTitleBar = false'                  ShowWindowControls = true'                  NeedsMovingHelp = true'                  ShowFullscreenDialogs = true'                  IsResizable = true'                  SupportsCustomBackground = true'                  SupportsMinimizingToTray = true              };
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Titlebar_MouseLeftButtonDown,The following statement contains a magic number: if (e.ClickCount == 2)              {                  if (ToggleWindowState != null) ToggleWindowState(this' EventArgs.Empty);                  return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 41 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.Titlebar_OnMouseMove);                            #line default              #line hidden              return;              case 2:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 264 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.ListView_DragEnter);                            #line default              #line hidden                            #line 265 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.ListView_Drop);                            #line default              #line hidden                            #line 268 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ListView_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 5:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 41 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.Titlebar_OnMouseMove);                            #line default              #line hidden              return;              case 2:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 264 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.ListView_DragEnter);                            #line default              #line hidden                            #line 265 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.ListView_Drop);                            #line default              #line hidden                            #line 268 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ListView_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 5:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 41 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.Titlebar_OnMouseMove);                            #line default              #line hidden              return;              case 2:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 264 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.ListView_DragEnter);                            #line default              #line hidden                            #line 265 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.ListView_Drop);                            #line default              #line hidden                            #line 268 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ListView_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 5:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 3:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.Controls.Control.MouseDoubleClickEvent;                            #line 473 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.ListViewItem_MouseDoubleClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,WindowSmartView,The following statement contains a magic number: Configuration = new WindowSkinConfiguration()              {                  MaxHeight = WpfScreen.MaxHeight'                  MaxWidth = 300'                  MinHeight = 400'                  MinWidth = 300'                  ShowSystemMenuOnRightClick = false'                  ShowTitleBar = false'                  ShowWindowControls = false'                  NeedsMovingHelp = true'                  ShowFullscreenDialogs = false'                  IsResizable = false'                  SupportsCustomBackground = false'                  SupportsMinimizingToTray = false              };
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,WindowSmartView,The following statement contains a magic number: Configuration = new WindowSkinConfiguration()              {                  MaxHeight = WpfScreen.MaxHeight'                  MaxWidth = 300'                  MinHeight = 400'                  MinWidth = 300'                  ShowSystemMenuOnRightClick = false'                  ShowTitleBar = false'                  ShowWindowControls = false'                  NeedsMovingHelp = true'                  ShowFullscreenDialogs = false'                  IsResizable = false'                  SupportsCustomBackground = false'                  SupportsMinimizingToTray = false              };
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,WindowSmartView,The following statement contains a magic number: Configuration = new WindowSkinConfiguration()              {                  MaxHeight = WpfScreen.MaxHeight'                  MaxWidth = 300'                  MinHeight = 400'                  MinWidth = 300'                  ShowSystemMenuOnRightClick = false'                  ShowTitleBar = false'                  ShowWindowControls = false'                  NeedsMovingHelp = true'                  ShowFullscreenDialogs = false'                  IsResizable = false'                  SupportsCustomBackground = false'                  SupportsMinimizingToTray = false              };
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The following statement contains a magic number: ColorAnimation coloranimation2 = new ColorAnimation(inAnimate ? ((SolidColorBrush)Application.Current.Resources["AccentColorBrush"]).Color : (Color)Application.Current.Resources["BlackColor"]' TimeSpan.FromMilliseconds(250));
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The following statement contains a magic number: ThicknessAnimation thicknessanimation = new ThicknessAnimation(inAnimate ? new Thickness(3' 2' -3' 0) : new Thickness(0' 2' 0' 0)' TimeSpan.FromMilliseconds(250));
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The following statement contains a magic number: ThicknessAnimation thicknessanimation = new ThicknessAnimation(inAnimate ? new Thickness(3' 2' -3' 0) : new Thickness(0' 2' 0' 0)' TimeSpan.FromMilliseconds(250));
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The following statement contains a magic number: ThicknessAnimation thicknessanimation = new ThicknessAnimation(inAnimate ? new Thickness(3' 2' -3' 0) : new Thickness(0' 2' 0' 0)' TimeSpan.FromMilliseconds(250));
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The following statement contains a magic number: ThicknessAnimation thicknessanimation = new ThicknessAnimation(inAnimate ? new Thickness(3' 2' -3' 0) : new Thickness(0' 2' 0' 0)' TimeSpan.FromMilliseconds(250));
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,CurrentTrackAnimation,The following statement contains a magic number: ThicknessAnimation thicknessanimation = new ThicknessAnimation(inAnimate ? new Thickness(3' 2' -3' 0) : new Thickness(0' 2' 0' 0)' TimeSpan.FromMilliseconds(250));
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views.MetroDialogs,AddCustomStreamView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MetroDialogs\AddCustomStreamView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Dialog = ((Hurricane.Views.MetroDialogs.AddCustomStreamView)(target));              return;              case 2:              this.StreamUrlTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 26 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Check_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 70 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 71 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views.MetroDialogs,AddCustomStreamView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MetroDialogs\AddCustomStreamView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Dialog = ((Hurricane.Views.MetroDialogs.AddCustomStreamView)(target));              return;              case 2:              this.StreamUrlTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 26 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Check_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 70 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 71 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views.MetroDialogs,AddCustomStreamView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MetroDialogs\AddCustomStreamView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Dialog = ((Hurricane.Views.MetroDialogs.AddCustomStreamView)(target));              return;              case 2:              this.StreamUrlTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 26 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Check_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 70 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 71 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Views.MetroDialogs,AddCustomStreamView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MetroDialogs\AddCustomStreamView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Dialog = ((Hurricane.Views.MetroDialogs.AddCustomStreamView)(target));              return;              case 2:              this.StreamUrlTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 26 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Check_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 70 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 71 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The following statement contains a magic number: if (nCode >= 0)              {                  //Marshall the data from callback.                  MouseLLHookStruct mouseHookStruct = (MouseLLHookStruct)Marshal.PtrToStructure(lParam' typeof(MouseLLHookStruct));                    //detect button clicked                  MouseButtons button = MouseButtons.None;                  short mouseDelta = 0;                  int clickCount = 0;                  bool mouseDown = false;                  bool mouseUp = false;                    switch (wParam)                  {                      case WM_LBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONDBLCLK:                          button = MouseButtons.Left;                          clickCount = 2;                          break;                      case WM_RBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONDBLCLK:                          button = MouseButtons.Right;                          clickCount = 2;                          break;                      case WM_MOUSEWHEEL:                          //If the message is WM_MOUSEWHEEL' the high-order word of MouseData member is the wheel delta.                           //One wheel click is defined as WHEEL_DELTA' which is 120.                           //(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value                          mouseDelta = (short)((mouseHookStruct.MouseData >> 16) & 0xffff);                            //TODO: X BUTTONS (I havent them so was unable to test)                          //If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'                           //or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'                           //and the low-order word is reserved. This value can be one or more of the following values.                           //Otherwise' MouseData is not used.                           break;                  }                    //generate event                   MouseEventExtArgs e = new MouseEventExtArgs(                                                     button'                                                     clickCount'                                                     mouseHookStruct.Point.X'                                                     mouseHookStruct.Point.Y'                                                     mouseDelta);                    //Mouse up                  if (s_MouseUp != null && mouseUp)                  {                      s_MouseUp.Invoke(null' e);                  }                    //Mouse down                  if (s_MouseDown != null && mouseDown)                  {                      s_MouseDown.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClick != null && clickCount > 0)                  {                      s_MouseClick.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClickExt != null && clickCount > 0)                  {                      s_MouseClickExt.Invoke(null' e);                  }                    //If someone listens to double click and a click is heppened                  if (s_MouseDoubleClick != null && clickCount == 2)                  {                      s_MouseDoubleClick.Invoke(null' e);                  }                    //Wheel was moved                  if (s_MouseWheel != null && mouseDelta != 0)                  {                      s_MouseWheel.Invoke(null' e);                  }                    //If someone listens to move and there was a change in coordinates raise move event                  if ((_mouseMove != null || s_MouseMoveExt != null) && (_oldX != mouseHookStruct.Point.X || _oldY != mouseHookStruct.Point.Y))                  {                      _oldX = mouseHookStruct.Point.X;                      _oldY = mouseHookStruct.Point.Y;                      if (_mouseMove != null)                      {                          _mouseMove.Invoke(null' e);                      }                        if (s_MouseMoveExt != null)                      {                          s_MouseMoveExt.Invoke(null' e);                      }                  }                    if (e.Handled)                  {                      return -1;                  }              }
Magic Number,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The following statement contains a magic number: if (nCode >= 0)              {                  //Marshall the data from callback.                  MouseLLHookStruct mouseHookStruct = (MouseLLHookStruct)Marshal.PtrToStructure(lParam' typeof(MouseLLHookStruct));                    //detect button clicked                  MouseButtons button = MouseButtons.None;                  short mouseDelta = 0;                  int clickCount = 0;                  bool mouseDown = false;                  bool mouseUp = false;                    switch (wParam)                  {                      case WM_LBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONDBLCLK:                          button = MouseButtons.Left;                          clickCount = 2;                          break;                      case WM_RBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONDBLCLK:                          button = MouseButtons.Right;                          clickCount = 2;                          break;                      case WM_MOUSEWHEEL:                          //If the message is WM_MOUSEWHEEL' the high-order word of MouseData member is the wheel delta.                           //One wheel click is defined as WHEEL_DELTA' which is 120.                           //(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value                          mouseDelta = (short)((mouseHookStruct.MouseData >> 16) & 0xffff);                            //TODO: X BUTTONS (I havent them so was unable to test)                          //If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'                           //or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'                           //and the low-order word is reserved. This value can be one or more of the following values.                           //Otherwise' MouseData is not used.                           break;                  }                    //generate event                   MouseEventExtArgs e = new MouseEventExtArgs(                                                     button'                                                     clickCount'                                                     mouseHookStruct.Point.X'                                                     mouseHookStruct.Point.Y'                                                     mouseDelta);                    //Mouse up                  if (s_MouseUp != null && mouseUp)                  {                      s_MouseUp.Invoke(null' e);                  }                    //Mouse down                  if (s_MouseDown != null && mouseDown)                  {                      s_MouseDown.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClick != null && clickCount > 0)                  {                      s_MouseClick.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClickExt != null && clickCount > 0)                  {                      s_MouseClickExt.Invoke(null' e);                  }                    //If someone listens to double click and a click is heppened                  if (s_MouseDoubleClick != null && clickCount == 2)                  {                      s_MouseDoubleClick.Invoke(null' e);                  }                    //Wheel was moved                  if (s_MouseWheel != null && mouseDelta != 0)                  {                      s_MouseWheel.Invoke(null' e);                  }                    //If someone listens to move and there was a change in coordinates raise move event                  if ((_mouseMove != null || s_MouseMoveExt != null) && (_oldX != mouseHookStruct.Point.X || _oldY != mouseHookStruct.Point.Y))                  {                      _oldX = mouseHookStruct.Point.X;                      _oldY = mouseHookStruct.Point.Y;                      if (_mouseMove != null)                      {                          _mouseMove.Invoke(null' e);                      }                        if (s_MouseMoveExt != null)                      {                          s_MouseMoveExt.Invoke(null' e);                      }                  }                    if (e.Handled)                  {                      return -1;                  }              }
Magic Number,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The following statement contains a magic number: if (nCode >= 0)              {                  //Marshall the data from callback.                  MouseLLHookStruct mouseHookStruct = (MouseLLHookStruct)Marshal.PtrToStructure(lParam' typeof(MouseLLHookStruct));                    //detect button clicked                  MouseButtons button = MouseButtons.None;                  short mouseDelta = 0;                  int clickCount = 0;                  bool mouseDown = false;                  bool mouseUp = false;                    switch (wParam)                  {                      case WM_LBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONDBLCLK:                          button = MouseButtons.Left;                          clickCount = 2;                          break;                      case WM_RBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONDBLCLK:                          button = MouseButtons.Right;                          clickCount = 2;                          break;                      case WM_MOUSEWHEEL:                          //If the message is WM_MOUSEWHEEL' the high-order word of MouseData member is the wheel delta.                           //One wheel click is defined as WHEEL_DELTA' which is 120.                           //(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value                          mouseDelta = (short)((mouseHookStruct.MouseData >> 16) & 0xffff);                            //TODO: X BUTTONS (I havent them so was unable to test)                          //If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'                           //or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'                           //and the low-order word is reserved. This value can be one or more of the following values.                           //Otherwise' MouseData is not used.                           break;                  }                    //generate event                   MouseEventExtArgs e = new MouseEventExtArgs(                                                     button'                                                     clickCount'                                                     mouseHookStruct.Point.X'                                                     mouseHookStruct.Point.Y'                                                     mouseDelta);                    //Mouse up                  if (s_MouseUp != null && mouseUp)                  {                      s_MouseUp.Invoke(null' e);                  }                    //Mouse down                  if (s_MouseDown != null && mouseDown)                  {                      s_MouseDown.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClick != null && clickCount > 0)                  {                      s_MouseClick.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClickExt != null && clickCount > 0)                  {                      s_MouseClickExt.Invoke(null' e);                  }                    //If someone listens to double click and a click is heppened                  if (s_MouseDoubleClick != null && clickCount == 2)                  {                      s_MouseDoubleClick.Invoke(null' e);                  }                    //Wheel was moved                  if (s_MouseWheel != null && mouseDelta != 0)                  {                      s_MouseWheel.Invoke(null' e);                  }                    //If someone listens to move and there was a change in coordinates raise move event                  if ((_mouseMove != null || s_MouseMoveExt != null) && (_oldX != mouseHookStruct.Point.X || _oldY != mouseHookStruct.Point.Y))                  {                      _oldX = mouseHookStruct.Point.X;                      _oldY = mouseHookStruct.Point.Y;                      if (_mouseMove != null)                      {                          _mouseMove.Invoke(null' e);                      }                        if (s_MouseMoveExt != null)                      {                          s_MouseMoveExt.Invoke(null' e);                      }                  }                    if (e.Handled)                  {                      return -1;                  }              }
Magic Number,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The following statement contains a magic number: if (nCode >= 0)              {                  //Marshall the data from callback.                  MouseLLHookStruct mouseHookStruct = (MouseLLHookStruct)Marshal.PtrToStructure(lParam' typeof(MouseLLHookStruct));                    //detect button clicked                  MouseButtons button = MouseButtons.None;                  short mouseDelta = 0;                  int clickCount = 0;                  bool mouseDown = false;                  bool mouseUp = false;                    switch (wParam)                  {                      case WM_LBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONDBLCLK:                          button = MouseButtons.Left;                          clickCount = 2;                          break;                      case WM_RBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONDBLCLK:                          button = MouseButtons.Right;                          clickCount = 2;                          break;                      case WM_MOUSEWHEEL:                          //If the message is WM_MOUSEWHEEL' the high-order word of MouseData member is the wheel delta.                           //One wheel click is defined as WHEEL_DELTA' which is 120.                           //(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value                          mouseDelta = (short)((mouseHookStruct.MouseData >> 16) & 0xffff);                            //TODO: X BUTTONS (I havent them so was unable to test)                          //If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'                           //or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'                           //and the low-order word is reserved. This value can be one or more of the following values.                           //Otherwise' MouseData is not used.                           break;                  }                    //generate event                   MouseEventExtArgs e = new MouseEventExtArgs(                                                     button'                                                     clickCount'                                                     mouseHookStruct.Point.X'                                                     mouseHookStruct.Point.Y'                                                     mouseDelta);                    //Mouse up                  if (s_MouseUp != null && mouseUp)                  {                      s_MouseUp.Invoke(null' e);                  }                    //Mouse down                  if (s_MouseDown != null && mouseDown)                  {                      s_MouseDown.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClick != null && clickCount > 0)                  {                      s_MouseClick.Invoke(null' e);                  }                    //If someone listens to click and a click is heppened                  if (s_MouseClickExt != null && clickCount > 0)                  {                      s_MouseClickExt.Invoke(null' e);                  }                    //If someone listens to double click and a click is heppened                  if (s_MouseDoubleClick != null && clickCount == 2)                  {                      s_MouseDoubleClick.Invoke(null' e);                  }                    //Wheel was moved                  if (s_MouseWheel != null && mouseDelta != 0)                  {                      s_MouseWheel.Invoke(null' e);                  }                    //If someone listens to move and there was a change in coordinates raise move event                  if ((_mouseMove != null || s_MouseMoveExt != null) && (_oldX != mouseHookStruct.Point.X || _oldY != mouseHookStruct.Point.Y))                  {                      _oldX = mouseHookStruct.Point.X;                      _oldY = mouseHookStruct.Point.Y;                      if (_mouseMove != null)                      {                          _mouseMove.Invoke(null' e);                      }                        if (s_MouseMoveExt != null)                      {                          s_MouseMoveExt.Invoke(null' e);                      }                  }                    if (e.Handled)                  {                      return -1;                  }              }
Magic Number,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode >= 0)              {                  //read structure KeyboardHookStruct at lParam                  KeyboardHookStruct myKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure(lParam' typeof(KeyboardHookStruct));                  //raise KeyDown                  if (s_KeyDown != null && (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN))                  {                      Keys keyData = (Keys)myKeyboardHookStruct.VirtualKeyCode;                      KeyEventArgs e = new KeyEventArgs(keyData);                      s_KeyDown.Invoke(null' e);                      handled = e.Handled;                  }                    // raise KeyPress                  if (s_KeyPress != null && wParam == WM_KEYDOWN)                  {                      bool isDownShift = ((GetKeyState(VK_SHIFT) & 0x80) == 0x80);                      bool isDownCapslock = (GetKeyState(VK_CAPITAL) != 0);                        byte[] keyState = new byte[256];                      GetKeyboardState(keyState);                      byte[] inBuffer = new byte[2];                      if (ToAscii(myKeyboardHookStruct.VirtualKeyCode'                                myKeyboardHookStruct.ScanCode'                                keyState'                                inBuffer'                                myKeyboardHookStruct.Flags) == 1)                      {                          char key = (char)inBuffer[0];                          if ((isDownCapslock ^ isDownShift) && Char.IsLetter(key)) key = Char.ToUpper(key);                          KeyPressEventArgs e = new KeyPressEventArgs(key);                          s_KeyPress.Invoke(null' e);                          handled = handled || e.Handled;                      }                  }                    // raise KeyUp                  if (s_KeyUp != null && (wParam == WM_KEYUP || wParam == WM_SYSKEYUP))                  {                      Keys keyData = (Keys)myKeyboardHookStruct.VirtualKeyCode;                      KeyEventArgs e = new KeyEventArgs(keyData);                      s_KeyUp.Invoke(null' e);                      handled = handled || e.Handled;                  }                }
Magic Number,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode >= 0)              {                  //read structure KeyboardHookStruct at lParam                  KeyboardHookStruct myKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure(lParam' typeof(KeyboardHookStruct));                  //raise KeyDown                  if (s_KeyDown != null && (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN))                  {                      Keys keyData = (Keys)myKeyboardHookStruct.VirtualKeyCode;                      KeyEventArgs e = new KeyEventArgs(keyData);                      s_KeyDown.Invoke(null' e);                      handled = e.Handled;                  }                    // raise KeyPress                  if (s_KeyPress != null && wParam == WM_KEYDOWN)                  {                      bool isDownShift = ((GetKeyState(VK_SHIFT) & 0x80) == 0x80);                      bool isDownCapslock = (GetKeyState(VK_CAPITAL) != 0);                        byte[] keyState = new byte[256];                      GetKeyboardState(keyState);                      byte[] inBuffer = new byte[2];                      if (ToAscii(myKeyboardHookStruct.VirtualKeyCode'                                myKeyboardHookStruct.ScanCode'                                keyState'                                inBuffer'                                myKeyboardHookStruct.Flags) == 1)                      {                          char key = (char)inBuffer[0];                          if ((isDownCapslock ^ isDownShift) && Char.IsLetter(key)) key = Char.ToUpper(key);                          KeyPressEventArgs e = new KeyPressEventArgs(key);                          s_KeyPress.Invoke(null' e);                          handled = handled || e.Handled;                      }                  }                    // raise KeyUp                  if (s_KeyUp != null && (wParam == WM_KEYUP || wParam == WM_SYSKEYUP))                  {                      Keys keyData = (Keys)myKeyboardHookStruct.VirtualKeyCode;                      KeyEventArgs e = new KeyEventArgs(keyData);                      s_KeyUp.Invoke(null' e);                      handled = handled || e.Handled;                  }                }
Magic Number,Hurricane.Music.Visualization,SampleAnalyser,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Visualization\SampleAnalyser.cs,Initialize,The following statement contains a magic number: _peaks = new float[waveFormat.Channels' 2];
Magic Number,Hurricane.Music.Visualization,SampleAnalyser,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Visualization\SampleAnalyser.cs,CalculateFFT,The following statement contains a magic number: FastFourierTransformation.Fft(input' Convert.ToInt32(Math.Truncate(Math.Log(_storedSamples.Length' 2))));
Magic Number,Hurricane.Music.Visualization,SampleAnalyser,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Visualization\SampleAnalyser.cs,CalculateFFT,The following statement contains a magic number: for (int i = 0; i <= input.Length / 2 - 1; i++)              {                  var z = input[i];                  resultBuffer[i] = (float)z.Value;              }
Magic Number,Hurricane.Music.Visualization,SampleAnalyser,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Visualization\SampleAnalyser.cs,UpdatePeaks,The following statement contains a magic number: if (channelCount == 2)              {                  _peaks[1' 1] = Math.Max(_peaks[1' 1]' samples[i + 1]);                  _peaks[1' 0] = Math.Min(_peaks[1' 0]' samples[i + 1]);              }
Magic Number,Hurricane.Music.Visualization,SampleAnalyser,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Visualization\SampleAnalyser.cs,UpdatePeaks,The following statement contains a magic number: if (channelCount > 2)              {                  for (int j = 2; j <= channelCount - 1; j++)                  {                      _peaks[i' 1] = Math.Max(_peaks[i' 1]' samples[i + j]);                      _peaks[i' 0] = Math.Min(_peaks[i' 0]' samples[i + j]);                  }              }
Magic Number,Hurricane.Music.Visualization,SampleAnalyser,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Visualization\SampleAnalyser.cs,UpdatePeaks,The following statement contains a magic number: if (channelCount > 2)              {                  for (int j = 2; j <= channelCount - 1; j++)                  {                      _peaks[i' 1] = Math.Max(_peaks[i' 1]' samples[i + j]);                      _peaks[i' 0] = Math.Min(_peaks[i' 0]' samples[i + j]);                  }              }
Magic Number,Hurricane.Music.Visualization,SampleAnalyser,C:\repos\Alkalinee_Hurricane\Hurricane\Music\Visualization\SampleAnalyser.cs,MergeSamples,The following statement contains a magic number: if (channelCount == 2)              {                  return (samples[index] + samples[index + 1]) / 2f;              }              else              {                  float z = 0f;                  for (int i = 0; i <= channelCount - 1; i++)                  {                      z += samples[index + i];                  }                  return z / 2f;              }
Missing Default,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,AdvancedInputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml.cs,Dialog_Loaded,The following switch statement is missing a default case: switch (DialogSettings.ColorScheme)              {                  case MetroDialogColorScheme.Accented:                      PART_NegativeButton.Style = FindResource("HighlightedSquareButtonStyle") as Style;                      PART_TextBox.SetResourceReference(ForegroundProperty' "BlackColorBrush");                      break;              }
Missing Default,Hurricane.AppMainWindow.MahAppsExtensions.Dialogs,AdvancedInputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 7 "..\..\..\..\..\AppMainWindow\MahAppsExtensions\Dialogs\AdvancedInputDialog.xaml"              ((Hurricane.AppMainWindow.MahAppsExtensions.Dialogs.AdvancedInputDialog)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Dialog_Loaded);                            #line default              #line hidden              return;              case 2:              this.PART_TextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.PART_AffirmativeButton = ((System.Windows.Controls.Button)(target));              return;              case 4:              this.PART_NegativeButton = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,Hurricane.Designer.Pages,LivePreview,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\LivePreview.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.VolumeSlider = ((System.Windows.Controls.Slider)(target));              return;              }
Missing Default,Hurricane.Designer.Pages,ThemeEditControl,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\ThemeEditControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MainControl = ((Hurricane.Designer.Pages.ThemeEditControl)(target));              return;              case 2:              this.ThemeSettingsListBox = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,Hurricane.Designer.Pages,ThemePackPage,C:\repos\Alkalinee_Hurricane\Hurricane\Designer\Pages\ThemePackPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserControl = ((Hurricane.Designer.Pages.ThemePackPage)(target));              return;              }
Missing Default,Hurricane.GUI.Controls,VolumeIcon,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\VolumeIcon.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.VolumeIconControl = ((Hurricane.GUI.Controls.VolumeIcon)(target));              return;              }
Missing Default,Hurricane.GUI.Controls,TrackImagePreseter,C:\repos\Alkalinee_Hurricane\Hurricane\GUI\Controls\TrackImagePreseter.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserControl = ((Hurricane.GUI.Controls.TrackImagePreseter)(target));              return;              }
Missing Default,Hurricane.MagicArrow,MagicArrowWindow,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\MagicArrowWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.window = ((Hurricane.MagicArrow.MagicArrowWindow)(target));                            #line 10 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.DragEnter += new System.Windows.DragEventHandler(this.Window_DragEnter);                            #line default              #line hidden                            #line 11 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.Drop += new System.Windows.DragEventHandler(this.Window_Drop);                            #line default              #line hidden                            #line 13 "..\..\..\MagicArrow\MagicArrowWindow.xaml"              this.window.MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.Window_MouseDown);                            #line default              #line hidden              return;              case 2:              this.arrow = ((System.Windows.Shapes.Path)(target));              return;              case 3:              this.arrow2 = ((System.Windows.Shapes.Path)(target));              return;              }
Missing Default,Hurricane.Music.AudioEngine,CSCoreEngine,C:\repos\Alkalinee_Hurricane\Hurricane\Music\AudioEngine\CSCoreEngine.cs,OpenTrack,The following switch statement is missing a default case: switch (result.State)              {                  case State.False:                      track.IsOpened = false;                      return false;                  case State.Exception:                      track.IsOpened = false;                      IsLoading = false;                      CurrentTrack = null;                      if (ExceptionOccurred != null) ExceptionOccurred(this' (Exception) result.CustomState);                      StopPlayback();                      return false;              }
Missing Default,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,BitrateToIndex,The following switch statement is missing a default case: switch (waveSourceBits)              {                  case 8:                      return 0;                  case 16:                      return 1;                  case 24:                      return 2;                  case 32:                      return 3;              }
Missing Default,Hurricane.Settings.Converter,BitrateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\BitrateToIndexConverter.cs,IndexToBitrate,The following switch statement is missing a default case: switch (index)              {                  case 0:                     return 8;                  case 1:                      return 16;                  case 2:                      return 24;                  case 3:                      return 32;              }
Missing Default,Hurricane.Settings.Converter,QualityToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\QualityToIndexConverter.cs,Convert,The following switch statement is missing a default case: switch ((ImageQuality)value)              {                  case ImageQuality.Small:                      return 0;                  case ImageQuality.Medium :                      return 1;                  case ImageQuality.Large:                      return 2;                  case ImageQuality.Maximum:                      return 3;              }
Missing Default,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,Convert,The following switch statement is missing a default case: switch (int.Parse(value.ToString()))              {                  case -1:                      return 0;                   case 44100:                      return 1;                   case 48000:                      return 2;                   case 88200:                      return 3;                   case 96000:                      return 4;                   case 176400:                      return 5;                   case 192000:                      return 6;               }
Missing Default,Hurricane.Settings.Converter,SampleRateToIndexConverter,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\Converter\SampleRateToIndexConverter.cs,ConvertBack,The following switch statement is missing a default case: switch (int.Parse(value.ToString()))              {                  case 0:                      return -1;                   case 1:                      return 44100;                   case 2:                      return 48000;                   case 3:                      return 88200;                   case 4:                      return 96000;                   case 5:                      return 96000;                   case 6:                      return 176400;                   case 7:                      return 192000;               }
Missing Default,Hurricane.Settings,UpdateService,C:\repos\Alkalinee_Hurricane\Hurricane\Settings\UpdateService.cs,UpdateSettings,The following switch statement is missing a default case: switch (GetCurrentAssemblyVersion())              {                  case "0.3.8":                      var configFile = new FileInfo(Path.Combine(baseDirectory' ConfigSettings.Filename));                      if (configFile.Exists)                          File.WriteAllText(configFile.FullName' File.ReadAllText(configFile.FullName).Replace("<AudioVisualisation />"' ""));                        break;              }
Missing Default,Hurricane.MagicArrow.DockManager,DockManager,C:\repos\Alkalinee_Hurricane\Hurricane\MagicArrow\DockManager\DockManager.cs,DragStop,The following switch statement is missing a default case: switch (NewSide)                  {                      case WindowPositionSide.Left:                      case WindowPositionSide.Right:                          CurrentSide = NewSide == WindowPositionSide.Left ? DockingSide.Left : DockingSide.Right;                          ApplyCurrentSide();                          OnDocked();                          return;                      case WindowPositionSide.Top:                          _basewindow.WindowState = WindowState.Maximized;                          break;                      case WindowPositionSide.None:                          break;                  }
Missing Default,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImageLink,The following switch statement is missing a default case: switch (quality)              {                  case ImageQuality.Small:                      return image.First().Value;                  case ImageQuality.Medium:                  case ImageQuality.Large:                      var items = image.Where((x) => x.size == (quality == ImageQuality.Large ? "large" : "medium"));                      if (items.Any()) return items.First().Value;                      break;              }
Missing Default,Hurricane.Music.MusicCover.APIs.Lastfm,LastfmAPI,C:\repos\Alkalinee_Hurricane\Hurricane\Music\MusicCover\APIs\Lastfm\LastfmAPI.cs,GetImageLink,The following switch statement is missing a default case: switch (quality)              {                  case ImageQuality.Small:                      return image.First().Value;                  case ImageQuality.Medium:                  case ImageQuality.Large:                      var items = image.Where((x) => x.size == (quality == ImageQuality.Large ? "large" : "medium"));                      if (items.Any()) return items.First().Value;                      break;              }
Missing Default,Hurricane.Notification.Views,NotificationRightBottomWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationRightBottomWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Notification.Views.NotificationRightBottomWindow)(target));              return;              }
Missing Default,Hurricane.Notification.Views,NotificationTopWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\Views\NotificationTopWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Notification.Views.NotificationTopWindow)(target));              return;              }
Missing Default,Hurricane.Notification.WindowMessages,WindowMessanger,C:\repos\Alkalinee_Hurricane\Hurricane\Notification\WindowMessages\WindowMessanger.cs,WndProc,The following switch statement is missing a default case: switch (msg)              {                  case WM_BRINGTOFRONT:                      if (BringWindowToFront != null) BringWindowToFront(this' EventArgs.Empty);                      break;                  case WM_OPENMUSICFILE:                      if (PlayMusicFile != null)                      {                          CopyDataStruct st = (CopyDataStruct)Marshal.PtrToStructure(lParam' typeof(CopyDataStruct));                          string strData = Marshal.PtrToStringUni(st.lpData);                          PlayMusicFile(this' new PlayTrackEventArgs(strData));                      }                      break;              }
Missing Default,Hurricane.Utilities,KeyboardListener,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\Keyboard.cs,KeyboardListener_KeyboardCallbackAsync,The following switch statement is missing a default case: switch (keyEvent)              {                  // KeyDown events                  case InterceptKeys.KeyEvent.WM_KEYDOWN:                      if (KeyDown != null)                          KeyDown(this' new RawKeyEventArgs(vkCode' false));                      break;                  case InterceptKeys.KeyEvent.WM_SYSKEYDOWN:                      if (KeyDown != null)                          KeyDown(this' new RawKeyEventArgs(vkCode' true));                      break;                    // KeyUp events                  case InterceptKeys.KeyEvent.WM_KEYUP:                      if (KeyUp != null)                          KeyUp(this' new RawKeyEventArgs(vkCode' false));                      break;                  case InterceptKeys.KeyEvent.WM_SYSKEYUP:                      if (KeyUp != null)                          KeyUp(this' new RawKeyEventArgs(vkCode' true));                      break;              }
Missing Default,Hurricane.ViewModels,MainViewModel,C:\repos\Alkalinee_Hurricane\Hurricane\ViewModels\MainViewModelCommands.cs,KListener_KeyDown,The following switch statement is missing a default case: switch (args.Key)              {                  case Key.MediaPlayPause:                      Application.Current.Dispatcher.Invoke(() => MusicManager.CSCoreEngine.TogglePlayPause());                      break;                  case Key.MediaPreviousTrack:                      Application.Current.Dispatcher.Invoke(() => MusicManager.GoBackward());                      break;                  case Key.MediaNextTrack:                      Application.Current.Dispatcher.Invoke(() => MusicManager.GoForward());                      break;              }
Missing Default,Hurricane.Views,DownloadTrackWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\DownloadTrackWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.DownloadTrackWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 21 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SelectPath_Click);                            #line default              #line hidden              return;              case 4:              this.ConvertTrackCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:                            #line 66 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.ComboBox)(target)).SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.Selector_OnSelectionChanged);                            #line default              #line hidden              return;              case 6:                            #line 76 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              case 7:                            #line 77 "..\..\..\Views\DownloadTrackWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.Views,TagEditorWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\TagEditorWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.TagEditorWindow)(target));              return;              }
Missing Default,Hurricane.Views,FolderImportWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\FolderImportWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.FolderImportWindow)(target));              return;              case 2:              this.PathTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 14 "..\..\..\Views\FolderImportWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Button_Click);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.Views,MessageWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MessageWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.PositiveButton = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.NegativeButton = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,Hurricane.Views,ProgressWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ProgressWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.InfoTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.StatusProgressBar = ((MahApps.Metro.Controls.MetroProgressBar)(target));              return;              }
Missing Default,Hurricane.Views,QueueManagerWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\QueueManagerWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.TracksListView = ((System.Windows.Controls.ListView)(target));              return;              }
Missing Default,Hurricane.Views,ReportExceptionWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\ReportExceptionWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.ReportExceptionWindow)(target));              return;              case 2:              this.NoteTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 27 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonSendErrorReport_Click);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\Views\ReportExceptionWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonClose_Click);                            #line default              #line hidden              return;              case 5:              this.StatusProgressBar = ((MahApps.Metro.Controls.MetroProgressBar)(target));              return;              }
Missing Default,Hurricane.Views,TrackImportWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\TrackImportWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.TrackImportWindow)(target));              return;              case 2:              this.RememberCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              }
Missing Default,Hurricane.Views,TrackInformationWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\TrackInformationWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.TrackInformationWindow)(target));              return;              }
Missing Default,Hurricane.Views,UpdateWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UpdateWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.UpdateWindow)(target));              return;              case 2:              this.StateGrid = ((System.Windows.Controls.Grid)(target));              return;              case 3:                            #line 54 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_Click);                            #line default              #line hidden              return;              case 4:                            #line 60 "..\..\..\Views\UpdateWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.UpdateButton_Click);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.Views,InputDialog,C:\repos\Alkalinee_Hurricane\Hurricane\Views\InputDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BaseWindow = ((Hurricane.Views.InputDialog)(target));              return;              case 2:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.ResultTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.OkButton = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,Hurricane.Views.Test,PositionTestWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\Test\PositionTestWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.txt = ((System.Windows.Controls.TextBlock)(target));              return;              }
Missing Default,Hurricane.Views.Test,TestWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\Test\TestWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.InfoListBox = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,Hurricane.Views.Tools,LanguageCreatorWindow,C:\repos\Alkalinee_Hurricane\Hurricane\Views\Tools\LanguageCreatorWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Window = ((Hurricane.Views.Tools.LanguageCreatorWindow)(target));              return;              case 2:              this.DataGridTextColumn = ((System.Windows.Controls.DataGridTextColumn)(target));              return;              }
Missing Default,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.AboutControl = ((Hurricane.Views.UserControls.AboutView)(target));              return;              case 2:                            #line 56 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonGitHub_Click);                            #line default              #line hidden              return;              case 3:                            #line 95 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonVBP_Click);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.Views.UserControls,AboutView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\AboutView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 4:                            #line 152 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 5:                            #line 173 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              case 6:                            #line 178 "..\..\..\..\Views\UserControls\AboutView.xaml"              ((System.Windows.Documents.Hyperlink)(target)).RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.Hyperlink_RequestNavigate);                            #line default              #line hidden              break;              }
Missing Default,Hurricane.Views.UserControls,EqualizerView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\EqualizerView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserControl = ((Hurricane.Views.UserControls.EqualizerView)(target));              return;              case 2:                            #line 40 "..\..\..\..\Views\UserControls\EqualizerView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.PART_CLOSE_Click);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.Views.UserControls,SettingsView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\UserControls\SettingsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.TabControl = ((System.Windows.Controls.TabControl)(target));              return;              case 2:              this.CrossfadeIsEnabledCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.CrossfadeSlider = ((System.Windows.Controls.Slider)(target));              return;              case 4:              this.MinimizeToTrayCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.DownloadCoverCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.AppConnectionInformationStackPanel = ((System.Windows.Controls.StackPanel)(target));              return;              }
Missing Default,Hurricane,MainWindow,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.WindowInstance = ((Hurricane.MainWindow)(target));              return;              case 2:              this.FlyoutControl = ((MahApps.Metro.Controls.FlyoutsControl)(target));              return;              case 3:              this.TaskbarInfo = ((System.Windows.Shell.TaskbarItemInfo)(target));              return;              case 4:              this.ContentGrid = ((System.Windows.Controls.Grid)(target));              return;              case 5:              this.BackgroundContainer = ((System.Windows.Controls.Grid)(target));              return;              case 6:              this.BackgroundImage = ((System.Windows.Controls.Image)(target));              return;              case 7:              this.BackgroundMediaElement = ((System.Windows.Controls.MediaElement)(target));                            #line 148 "..\..\..\AppMainWindow\MainWindow.xaml"              this.BackgroundMediaElement.MediaEnded += new System.Windows.RoutedEventHandler(this.BackgroundMediaElement_OnMediaEnded);                            #line default              #line hidden              return;              case 8:              this.NotifyIcon = ((Hardcodet.Wpf.TaskbarNotification.TaskbarIcon)(target));                            #line 156 "..\..\..\AppMainWindow\MainWindow.xaml"              this.NotifyIcon.TrayMouseDoubleClick += new System.Windows.RoutedEventHandler(this.NotifyIcon_OnTrayMouseDoubleClick);                            #line default              #line hidden              return;              case 9:                            #line 161 "..\..\..\AppMainWindow\MainWindow.xaml"              ((System.Windows.Input.CommandBinding)(target)).Executed += new System.Windows.Input.ExecutedRoutedEventHandler(this.CloseCommandHandler);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 41 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseMove += new System.Windows.Input.MouseEventHandler(this.Titlebar_OnMouseMove);                            #line default              #line hidden              return;              case 2:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 264 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.ListView_DragEnter);                            #line default              #line hidden                            #line 265 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.ListView_Drop);                            #line default              #line hidden                            #line 268 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.ListView_SelectionChanged);                            #line default              #line hidden              return;              case 4:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 5:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              }
Missing Default,Hurricane.AppMainWindow.WindowSkins,WindowAdvancedView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowAdvancedView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 3:              eventSetter = new System.Windows.EventSetter();              eventSetter.Event = System.Windows.Controls.Control.MouseDoubleClickEvent;                            #line 473 "..\..\..\..\AppMainWindow\WindowSkins\WindowAdvancedView.xaml"              eventSetter.Handler = new System.Windows.Input.MouseButtonEventHandler(this.ListViewItem_MouseDoubleClick);                            #line default              #line hidden              ((System.Windows.Style)(target)).Setters.Add(eventSetter);              break;              }
Missing Default,Hurricane.AppMainWindow.WindowSkins,WindowSmartView,C:\repos\Alkalinee_Hurricane\Hurricane\AppMainWindow\WindowSkins\WindowSmartView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Titlebar = ((System.Windows.Controls.Border)(target));                            #line 42 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonDown += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonDown);                            #line default              #line hidden                            #line 43 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.Titlebar.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.Titlebar_MouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 70 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButton_Click);                            #line default              #line hidden              return;              case 3:              this.PlayPolygon = ((System.Windows.Shapes.Polygon)(target));              return;              case 4:                            #line 112 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseEnter += new System.Windows.Input.MouseEventHandler(this.Grid_MouseEnter);                            #line default              #line hidden                            #line 113 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              ((System.Windows.Controls.Grid)(target)).MouseLeave += new System.Windows.Input.MouseEventHandler(this.Grid_MouseLeave);                            #line default              #line hidden              return;              case 5:              this.TitleTransitioningControl = ((MahApps.Metro.Controls.TransitioningContentControl)(target));              return;              case 6:              this.AudioVisualisationContentControl = ((System.Windows.Controls.ContentControl)(target));              return;              case 7:              this.BaseControlGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.VolumeSlider = ((Hurricane.GUI.Controls.SliderWhichMakesMoves)(target));              return;              case 9:              this.TracksListView = ((System.Windows.Controls.ListView)(target));                            #line 431 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.DragEnter += new System.Windows.DragEventHandler(this.listview_DragEnter);                            #line default              #line hidden                            #line 432 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.Drop += new System.Windows.DragEventHandler(this.listview_Drop);                            #line default              #line hidden                            #line 438 "..\..\..\..\AppMainWindow\WindowSkins\WindowSmartView.xaml"              this.TracksListView.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.listview_SelectionChanged);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.Views.MetroDialogs,AddCustomStreamView,C:\repos\Alkalinee_Hurricane\Hurricane\Views\MetroDialogs\AddCustomStreamView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Dialog = ((Hurricane.Views.MetroDialogs.AddCustomStreamView)(target));              return;              case 2:              this.StreamUrlTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 26 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.Check_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 70 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 71 "..\..\..\..\Views\MetroDialogs\AddCustomStreamView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Hurricane.Utilities.HookManager,HookManager,C:\repos\Alkalinee_Hurricane\Hurricane\Utilities\HookManager\HookManager.Callbacks.cs,MouseHookProc,The following switch statement is missing a default case: switch (wParam)                  {                      case WM_LBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Left;                          clickCount = 1;                          break;                      case WM_LBUTTONDBLCLK:                          button = MouseButtons.Left;                          clickCount = 2;                          break;                      case WM_RBUTTONDOWN:                          mouseDown = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONUP:                          mouseUp = true;                          button = MouseButtons.Right;                          clickCount = 1;                          break;                      case WM_RBUTTONDBLCLK:                          button = MouseButtons.Right;                          clickCount = 2;                          break;                      case WM_MOUSEWHEEL:                          //If the message is WM_MOUSEWHEEL' the high-order word of MouseData member is the wheel delta.                           //One wheel click is defined as WHEEL_DELTA' which is 120.                           //(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value                          mouseDelta = (short)((mouseHookStruct.MouseData >> 16) & 0xffff);                            //TODO: X BUTTONS (I havent them so was unable to test)                          //If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'                           //or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'                           //and the low-order word is reserved. This value can be one or more of the following values.                           //Otherwise' MouseData is not used.                           break;                  }
