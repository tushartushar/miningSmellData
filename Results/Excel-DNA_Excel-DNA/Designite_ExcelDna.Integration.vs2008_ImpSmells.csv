Implementation smell,Namespace,Class,File,Method,Description
Long Method,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The method has 168 lines of code.
Long Method,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The method has 121 lines of code.
Long Method,ExcelDna.Integration.CustomUI,ExcelCommandBarUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,ApplyControlAttribute,The method has 127 lines of code.
Long Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The method has 108 lines of code.
Long Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The method has 101 lines of code.
Long Method,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The method has 106 lines of code.
Complex Method,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,IsMethodSupported,Cyclomatic complexity of the method is 8
Complex Method,ExcelDna.Integration,AssemblyLoaderExcelServer,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoaderExcelServer.cs,GetExcelServerInfos,Cyclomatic complexity of the method is 9
Complex Method,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,ResolvePath,Cyclomatic complexity of the method is 9
Complex Method,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,Cyclomatic complexity of the method is 19
Complex Method,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetReferencePaths,Cyclomatic complexity of the method is 15
Complex Method,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,Cyclomatic complexity of the method is 14
Complex Method,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,Cyclomatic complexity of the method is 10
Complex Method,ExcelDna.Integration.CustomUI,ExcelCommandBarUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,ApplyControlAttribute,Cyclomatic complexity of the method is 25
Complex Method,ExcelDna.Integration.CustomUI,ExcelRibbon,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRibbon.cs,GetCustomUI,Cyclomatic complexity of the method is 8
Complex Method,ExcelDna.Integration.Rtd,RtdServerWrapper,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRtd.cs,RtdServerWrapper,Cyclomatic complexity of the method is 10
Complex Method,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,Cyclomatic complexity of the method is 18
Complex Method,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,Cyclomatic complexity of the method is 11
Complex Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,Cyclomatic complexity of the method is 33
Complex Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read6_Image,Cyclomatic complexity of the method is 13
Complex Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,Cyclomatic complexity of the method is 15
Complex Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,Cyclomatic complexity of the method is 25
Complex Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read4_SourceItem,Cyclomatic complexity of the method is 14
Complex Method,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,Cyclomatic complexity of the method is 19
Long Parameter List,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,ProcessAssemblies,The method has 5 parameters. Parameters: assemblies' methods' addIns' rtdServerTypes' comClassTypes
Long Parameter List,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,GetComClassTypes,The method has 5 parameters. Parameters: assembly' type' attributes' isRtdServer' comClassTypes
Long Parameter List,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The method has 5 parameters. Parameters: rowFirst' rowLast' columnFirst' columnLast' sheetId
Long Parameter List,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The method has 5 parameters. Parameters: rowFirst' rowLast' columnFirst' columnLast' sheetName
Long Parameter List,ExcelDna.Integration,ExportedAssembly,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExportedAssembly.cs,ExportedAssembly,The method has 7 parameters. Parameters: assembly' explicitExports' explicitRegistration' comServer' isDynamic' typeLibPath' parentDnaLibrary
Long Parameter List,ExcelDna.Integration,MenuManager,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\MenuManager.cs,AddCommandMenu,The method has 6 parameters. Parameters: commandName' menuName' menuText' description' shortCut' helpTopic
Long Parameter List,ExcelDna.Integration,IMenuManager,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\MenuManager.cs,AddCommandMenu,The method has 6 parameters. Parameters: commandName' menuName' menuText' description' shortCut' helpTopic
Long Parameter List,ExcelDna.Integration,ExcelPre15MenuManager,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\MenuManager.cs,AddCommandMenu,The method has 6 parameters. Parameters: commandName' menuName' menuText' description' shortCut' helpTopic
Long Parameter List,ExcelDna.Integration,Excel15MenuManager,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\MenuManager.cs,AddCommandMenu,The method has 6 parameters. Parameters: commandName' menuName' menuText' description' shortCut' helpTopic
Long Parameter List,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,Project,The method has 7 parameters. Parameters: language' compilerVersion' references' code' defaultReferences' defaultImports' explicitExports
Long Parameter List,ExcelDna.ComInterop,ComAPI,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,CoRegisterClassObject,The method has 5 parameters. Parameters: rclsid' pUnk' dwClsContext' flags' lpdwRegister
Long Parameter List,ExcelDna.ComInterop,ComAPI,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,CoRegisterClassObject,The method has 5 parameters. Parameters: rclsid' pUnk' dwClsContext' flags' lpdwRegister
Long Parameter List,ExcelDna.ComInterop,IDispatch,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,GetIDsOfNames,The method has 5 parameters. Parameters: riid' rgsNames' cNames' lcid' rgDispId
Long Parameter List,ExcelDna.ComInterop,IDispatch,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,Invoke,The method has 8 parameters. Parameters: dispIdMember' riid' lcid' wFlags' pDispParams' pVarResult' pExcepInfo' pArgErr
Long Parameter List,ExcelDna.ComInterop,IDispatch,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,GetIDsOfNames,The method has 5 parameters. Parameters: riid' rgsNames' cNames' lcid' rgDispId
Long Parameter List,ExcelDna.ComInterop,IDispatch,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,Invoke,The method has 8 parameters. Parameters: dispIdMember' riid' lcid' wFlags' pDispParams' pVarResult' pExcepInfo' pArgErr
Long Parameter List,ExcelDna.Integration.CustomUI,CommandBar,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,FindControl,The method has 5 parameters. Parameters: type' id' tag' visible' recursive
Long Parameter List,ExcelDna.Integration.CustomUI,CommandBarControls,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,Add,The method has 5 parameters. Parameters: controlType' Id' Parameter' Before' Temporary
Long Parameter List,ExcelDna.Integration.CustomUI,CommandBarControls,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,FindOrAdd,The method has 6 parameters. Parameters: controlType' name' Id' Parameter' Before' Temporary
Long Parameter List,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write6_Image,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write3_Reference,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write4_SourceItem,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Identifier,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,,The length of the parameter checkForIllegalCrossThreadCalls is 31.
Long Identifier,ExcelDna.Integration,ExcelIntegration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelIntegration.cs,,The length of the parameter registerDelegatesWithAttributes is 31.
Long Identifier,ExcelDna.Integration.CustomUI,_CustomTaskPaneEvents_SinkHelper,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,,The length of the parameter m_DockPositionStateChangeDelegate is 33.
Long Identifier,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,,The length of the parameter id27_UseVersionAsOutputVersion is 30.
Long Statement,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,ProcessAssemblies,The length of the statement  "            List<AssemblyLoaderExcelServer.ExcelServerInfo> excelServerInfos = new List<AssemblyLoaderExcelServer.ExcelServerInfo>(); " is 121.
Long Statement,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,ProcessAssemblies,The length of the statement  "                Logger.Initialization.Verbose("Processing assembly {0}. ExplicitExports {1}' ExplicitRegistration {2}' ComServer {3}' IsDynamic {4}"'  " is 133.
Long Statement,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,ProcessAssemblies,The length of the statement  "                    assembly.Assembly.FullName' assembly.ExplicitExports' assembly.ExplicitRegistration' assembly.ComServer' assembly.IsDynamic); " is 125.
Long Statement,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,IsMethodSupported,The length of the statement  "                Logger.Initialization.Error("Method not registered - unsupported signature' abstract or generic: '{0}.{1}'"' mi.DeclaringType.Name' mi.Name); " is 141.
Long Statement,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,IsMethodSupported,The length of the statement  "                Logger.Initialization.Info("Method not registered - unsupported signature' abstract or generic: '{0}.{1}'"' mi.DeclaringType.Name' mi.Name); " is 140.
Long Statement,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,IsRibbonType,The length of the statement  "            // Ribbon type is one that has ExcelRibbon as an ancestor (but is not ExcelRibbon itself)' is not abstract' and it's parent is not a ribbon type " is 144.
Long Statement,ExcelDna.Integration,AssemblyLoaderExcelServer,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoaderExcelServer.cs,GetExcelServerMethods,The length of the statement  "                new AssemblyName("ExcelDna.ExcelServer.DynamicDelegateAssembly"/*TODO:Add assembly name to disambiguate different add-ins?*/)' " is 126.
Long Statement,ExcelDna.Integration,AssemblyLoaderExcelServer,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoaderExcelServer.cs,GetExcelServerMethods,The length of the statement  "                FieldBuilder fieldBuilder = typeBuilder.DefineField(fieldName' serverInfo.Instance.GetType()' FieldAttributes.Public | FieldAttributes.Static); " is 143.
Long Statement,ExcelDna.Integration,AssemblyLoaderExcelServer,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoaderExcelServer.cs,GetExcelServerMethods,The length of the statement  "                    Type[] paramTypes = Array.ConvertAll<ParameterInfo' Type>(parameterInfos' delegate(ParameterInfo parameterInfo) { return parameterInfo.ParameterType; }); " is 153.
Long Statement,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,GetAssemblies,The length of the statement  "                Logger.Initialization.Error("There was an error in loading the add-in " + DnaLibrary.CurrentLibraryName + " (" + DnaLibrary.XllPath + "):"); " is 140.
Long Statement,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,Initialize,The length of the statement  "                    Logger.Initialization.Warn("SynchonizationManager could not be installed - probably running in HPC host or Regsvr32.exe"); " is 122.
Long Statement,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,LoadFrom,The length of the statement  "                Logger.Initialization.Error("There was an error in loading the .dna file from a Uri:\r\n{0}\r\n{1}\r\nUri:{2}"' e.Message' e.InnerException != null ? e.InnerException.Message : string.Empty' uri.ToString()); " is 207.
Long Statement,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,LoadFrom,The length of the statement  "                Logger.Initialization.Error("There was an error in processing .dna file bytes:\r\n{0}\r\n{1}"' e.Message' e.InnerException != null ? e.InnerException.Message : string.Empty); " is 174.
Long Statement,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,LoadFrom,The length of the statement  "                Logger.Initialization.Error("There was an error during processing of {0}:\r\n{1}\r\n{2}"' fileName' e.Message' e.InnerException != null ? e.InnerException.Message : string.Empty); " is 179.
Long Statement,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,GetImage,The length of the statement  "                            Logger.Initialization.Warn("DnaLibrary.GetImage - For image {0} the path resolution failed: {1}"' image.Name' image.Path); " is 122.
Long Statement,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetWindowHandle15,The length of the statement  "                    hWnd = (IntPtr)(int)_application.GetType().InvokeMember("Hwnd"' BindingFlags.GetProperty' null' _application' null' _enUsCulture); " is 130.
Long Statement,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,IsExcelApiAvailable,The length of the statement  "                // throw new InvalidOperationException("Excel API is unavailable - cannot retrieve Application object. Excel may be shutting down"' ave); " is 137.
Long Statement,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetApplicationNotProtectedNoThrow,The length of the statement  "            _application = application; // Still null due to unexpected failure' or else valid' not protected' and thus safe to cache " is 121.
Long Statement,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetApplicationFromWindow,The length of the statement  "                            // We don't want to continue enumeration in this case - another window might give us an Application' but it will be a protected one anyway " is 138.
Long Statement,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,GetHashCode,The length of the statement  "            // One of the ideas from http://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode " is 137.
Long Statement,ExcelDna.Integration,ExcelRectangle,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,Equals,The length of the statement  "                return other.RowFirst == RowFirst && other.RowLast == RowLast && other.ColumnFirst == ColumnFirst && other.ColumnLast == ColumnLast; " is 132.
Long Statement,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The length of the statement  "                            Logger.Initialization.Error("External library could not be registered - Path: {0}\r\n - Packed DnaLibrary could not be loaded"' Path); " is 134.
Long Statement,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The length of the statement  "						list.Add(new ExportedAssembly(assembly' ExplicitExports' ExplicitRegistration' ComServer' false' typeLibPath' dnaLibrary)); " is 123.
Long Statement,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The length of the statement  "                                    Logger.Initialization.Error("External library could not be registered - Path: {0} - DnaLibrary could not be loaded" + Path); " is 124.
Long Statement,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The length of the statement  "                    Logger.Initialization.Error("External library could not be registered - Path: {0} - The library could not be found at this location" + Path); " is 141.
Long Statement,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The length of the statement  "                        Logger.Initialization.Error("External library could not be registered - Path: {0} - DnaLibrary could not be loaded" + Path); " is 124.
Long Statement,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The length of the statement  "                    list.Add(new ExportedAssembly(assembly' ExplicitExports' ExplicitRegistration' ComServer' false' resolvedTypeLibPath' dnaLibrary)); " is 131.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetReferencePaths,The length of the statement  "                // CONSIDER: Should these be considered more carefully? I'm just putting in what the default templates in Visual Studio 2010 put in. " is 132.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "			// This is attempt to fix the bug reported on the group' where the add-in compilation fails if the add-in is put into c:\ " is 121.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "                    string importsList = "Microsoft.VisualBasic'System'System.Collections'System.Collections.Generic'System.Data'System.Diagnostics'ExcelDna.Integration"; " is 150.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "                cp.CompilerOptions = " --nologo -I " + ProcessedExecutingDirectory; // In F# 2.0' the --nologo is redundant - I leave it because it does no harm. " is 145.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "            // TODO: Consider what to do if we can't resolve some of the Reference paths -- do we try to compile anyway' throw an exception' ...what? " is 137.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "                    Logger.DnaCompilation.Error("There was an error in loading the add-in " + DnaLibrary.CurrentLibraryName + " (" + DnaLibrary.XllPath + "):"); " is 140.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "                              "    Please check that the F# compiler is correctly installed' and that the FSHARP_BIN environment variable is correct\r\n" + " is 125.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "                Logger.DnaCompilation.Error("There was an error in loading the add-in " + DnaLibrary.CurrentLibraryName + " (" + DnaLibrary.XllPath + "):"); " is 140.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The length of the statement  "			list.Add(new ExportedAssembly(cr.CompiledAssembly' ExplicitExports' ExplicitRegistration' ComServer' true' null' dnaLibrary)); " is 126.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The length of the statement  "					return (CodeDomProvider)sys.CreateInstance("Microsoft.CSharp.CSharpCodeProvider"' false' BindingFlags.CreateInstance' null' new object[] {providerOptions}' null' null); " is 168.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The length of the statement  "					return (CodeDomProvider)sys.CreateInstance("Microsoft.VisualBasic.VBCodeProvider"' false' BindingFlags.CreateInstance' null' new object[] {providerOptions}' null' null); " is 169.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The length of the statement  "                        Logger.DnaCompilation.Error("There was an error in loading the add-in " + DnaLibrary.CurrentLibraryName + " (" + DnaLibrary.XllPath + "):"); " is 140.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The length of the statement  "                        Logger.DnaCompilation.Error("        FSharp.Compiler.CodeDom.dll assembly (part of the F# PowerPack) can be loaded by the add-in."); " is 132.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The length of the statement  "                        Logger.DnaCompilation.Error("        (Placing a copy of FSharp.Compiler.CodeDom.dll in the same directory as the .xll file should work.)"); " is 139.
Long Statement,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The length of the statement  "                    Logger.DnaCompilation.Error("There was an error in loading the add-in " + DnaLibrary.CurrentLibraryName + " (" + DnaLibrary.XllPath + "):"); " is 140.
Long Statement,ExcelDna.Integration,ExcelIntegration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelIntegration.cs,UnregisterXLL,The length of the statement  "            object removeId = XlCall.Excel(XlCall.xlfRegister' xllPath' "xlAutoRemove"' "I"' ExcelEmpty.Value' ExcelEmpty.Value' 2); " is 120.
Long Statement,ExcelDna.ComInterop.ComRegistration,RegistrationUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComRegistration.cs,CanWriteMachineHive,The length of the statement  "            // This is not an easy question to answer' due to Registry Virtualization: http://msdn.microsoft.com/en-us/library/aa965884(v=vs.85).aspx " is 137.
Long Statement,ExcelDna.ComInterop.ComRegistration,RegistrationUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComRegistration.cs,CanWriteMachineHive,The length of the statement  "                RegistryKey classesKey = Registry.LocalMachine.CreateSubKey(machineClassesRoot' RegistryKeyPermissionCheck.ReadWriteSubTree); " is 125.
Long Statement,ExcelDna.ComInterop.ComRegistration,RegistrationUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComRegistration.cs,CanWriteMachineHive,The length of the statement  "                    Logger.ComAddIn.Verbose("RegistrationUtil.CanWriteMachineHive - Opening LocalMachineClassesRoot as ReadWrite failed - returning False"); " is 136.
Long Statement,ExcelDna.ComInterop.ComRegistration,RegistrationUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComRegistration.cs,KeySetValue,The length of the statement  "            Logger.ComAddIn.Verbose("RegistrationUtil.KeySetValue({0}' {1}' {2}' {3})"' key.Name' name' value.ToString()' valueKind.ToString()); " is 132.
Long Statement,ExcelDna.ComInterop.ComRegistration,RegistrationUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComRegistration.cs,SetValue,The length of the statement  "            Logger.ComAddIn.Verbose("RegistrationUtil.SetValue({0}' {1}' {2}' {3})"' keyName' valueName' value.ToString()' valueKind.ToString()); " is 133.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterServer,The length of the statement  "            // Registering under the user key is problematic when Excel runs under an elevated account' e.g. when "Run as Administrator"  " is 124.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterServer,The length of the statement  "            // http://blogs.msdn.com/b/cjacks/archive/2007/02/21/per-user-com-registrations-and-elevated-processes-with-uac-on-windows-vista.aspx " is 133.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterServer,The length of the statement  "            // http://blogs.msdn.com/b/cjacks/archive/2008/06/06/per-user-com-registrations-and-elevated-processes-with-uac-on-windows-vista-sp1.aspx " is 137.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterServer,The length of the statement  "            // http://blogs.msdn.com/b/cjacks/archive/2008/07/22/per-user-com-registrations-and-elevated-processes-with-uac-on-windows-vista-sp1-part-2-ole-automation.aspx " is 159.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterServer,The length of the statement  "            Registry.SetValue(rootKeyName + @"\CLSID\" + clsIdString + @"\InProcServer32"' null' DnaLibrary.XllPath' RegistryValueKind.String); " is 131.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterServer,The length of the statement  "            Registry.SetValue(rootKeyName + @"\CLSID\" + clsIdString + @"\InProcServer32"' "ThreadingModel"' "Both"' RegistryValueKind.String); " is 131.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterTypeLibrary,The length of the statement  "            string version = typeLibAttr.wMajorVerNum.ToString(CultureInfo.InvariantCulture) + "." + typeLibAttr.wMinorVerNum.ToString(CultureInfo.InvariantCulture); " is 153.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterTypeLibrary,The length of the statement  "            Registry.SetValue(rootKeyName + @"\TypeLib\" + libIdString + @"\" + version' null' friendlyName' RegistryValueKind.String); " is 123.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterTypeLibrary,The length of the statement  "            Registry.SetValue(rootKeyName + @"\TypeLib\" + libIdString + @"\" + version + @"\" + "FLAGS"' null' typeLibAttr.wLibFlags' RegistryValueKind.DWord); " is 148.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterTypeLibrary,The length of the statement  "                Registry.SetValue(rootKeyName + @"\TypeLib\" + libIdString + @"\" + version + @"\" + "HELPDIR"' null' helpDir' RegistryValueKind.String); " is 137.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterTypeLibrary,The length of the statement  "                Registry.SetValue(rootKeyName + @"\TypeLib\" + libIdString + @"\" + version + @"\" + typeLibAttr.lcid.ToString(CultureInfo.InvariantCulture) + @"\win64"' null' TypeLibPath' RegistryValueKind.String); " is 199.
Long Statement,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterTypeLibrary,The length of the statement  "                Registry.SetValue(rootKeyName + @"\TypeLib\" + libIdString + @"\" + version + @"\" + typeLibAttr.lcid.ToString(CultureInfo.InvariantCulture) + @"\win32"' null' TypeLibPath' RegistryValueKind.String); " is 199.
Long Statement,ExcelDna.Integration.CustomUI,CommandBar,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,FindControl,The length of the statement  "            object result = ComObjectType.InvokeMember("FindControl"' BindingFlags.InvokeMethod' null' ComObject' new object[] { type' id' tag' visible' recursive }); " is 154.
Long Statement,ExcelDna.Integration.CustomUI,CommandBars,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,Add,The length of the statement  "            object commandBar = _type.InvokeMember("Add"' BindingFlags.InvokeMethod' null' _object' new object[] { name' barPosition' Type.Missing' true }); " is 144.
Long Statement,ExcelDna.Integration.CustomUI,CommandBarButton,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCommandBars.cs,SetButtonImage,The length of the statement  "            t.InvokeMember("Style"' BindingFlags.SetProperty' null' ComObject' new object[] { MsoButtonStyle.msoButtonIconAndCaption }); " is 124.
Long Statement,ExcelDna.Integration.CustomUI,CustomTaskPaneFactory,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCustomTaskPane.cs,CreateCustomTaskPane,The length of the statement  "            // Users that want persistent and consistent names' can sort out registration themselves' or use the ExcelComClass support. " is 123.
Long Statement,ExcelDna.Integration.CustomUI,CustomTaskPaneFactory,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelCustomTaskPane.cs,CreateCustomTaskPane,The length of the statement  "                    "The CTP Helper could not be registered.\r\nThis may be due to restricted permissions on the user's HKCU\\Software\\Classes key."); " is 131.
Long Statement,ExcelDna.Integration.CustomUI,ExcelRibbon,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRibbon.cs,RunTagMacro,The length of the statement  "                app.GetType().InvokeMember("Run"' BindingFlags.InvokeMethod' null' app' new object[] { control.Tag }' new CultureInfo(1033)); " is 125.
Long Statement,ExcelDna.Integration.Rtd,RtdRegistration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRtd.cs,TryRTD,The length of the statement  "                Logger.RtdServer.Error("The RTD server of type {0} required by add-in {1} could not be registered.\r\nThis may be due to restricted permissions on the user's HKCU\\Software\\Classes key.\r\nError message: {2}"' rtdServerType.FullName' DnaLibrary.CurrentLibrary.Name' secex.Message); " is 282.
Long Statement,ExcelDna.Integration.Rtd,RtdRegistration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRtd.cs,TryRTD,The length of the statement  "                Logger.RtdServer.Error("The RTD server of type {0} required by add-in {1} could not be registered.\r\nThis is an unexpected error.\r\nError message: {2}"' rtdServerType.FullName' DnaLibrary.CurrentLibrary.Name' ex.Message); " is 223.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write8_DnaLibrary,The length of the statement  "            Write7_DnaLibrary(@"DnaLibrary"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' ((global::ExcelDna.Integration.DnaLibrary)o)' false' false); " is 151.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "            WriteAttribute(@"ShadowCopyFiles"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ShadowCopyFiles))); " is 142.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "            WriteAttribute(@"DefaultReferences"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@DefaultReferences))); " is 146.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "            WriteAttribute(@"DefaultImports"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@DefaultImports))); " is 140.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                global::System.Collections.Generic.List<global::ExcelDna.Integration.ExternalLibrary> a = (global::System.Collections.Generic.List<global::ExcelDna.Integration.ExternalLibrary>)o.@ExternalLibraries; " is 198.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                        Write2_ExternalLibrary(@"ExternalLibrary"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' ((global::ExcelDna.Integration.ExternalLibrary)a[ia])' false' false); " is 170.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                global::System.Collections.Generic.List<global::ExcelDna.Integration.Project> a = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Project>)o.@Projects; " is 173.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                        Write5_Project(@"Project"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' ((global::ExcelDna.Integration.Project)a[ia])' false' false); " is 146.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference> a = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference>)o.@References; " is 179.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                        Write3_Reference(@"Reference"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' ((global::ExcelDna.Integration.Reference)a[ia])' false' false); " is 152.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                global::System.Collections.Generic.List<global::System.Xml.XmlNode> a = (global::System.Collections.Generic.List<global::System.Xml.XmlNode>)o.@CustomUIs; " is 154.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                            WriteElementLiteral((System.Xml.XmlNode)((global::System.Xml.XmlNode)a[ia])' @"CustomUI"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' false' false); " is 162.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                global::System.Collections.Generic.List<global::ExcelDna.Integration.Image> a = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Image>)o.@Images; " is 167.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write7_DnaLibrary,The length of the statement  "                        Write6_Image(@"Image"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' ((global::ExcelDna.Integration.Image)a[ia])' false' false); " is 140.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write6_Image,The length of the statement  "            WriteAttribute(@"Pack"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Pack))); " is 120.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write3_Reference,The length of the statement  "            WriteAttribute(@"Pack"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Pack))); " is 120.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write3_Reference,The length of the statement  "            WriteAttribute(@"IncludePdb"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IncludePdb))); " is 132.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "            WriteAttribute(@"DefaultReferences"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@DefaultReferences))); " is 146.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "            WriteAttribute(@"DefaultImports"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@DefaultImports))); " is 140.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "            WriteAttribute(@"ExplicitExports"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ExplicitExports))); " is 142.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "            WriteAttribute(@"ExplicitRegistration"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ExplicitRegistration))); " is 152.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "            WriteAttribute(@"ComServer"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ComServer))); " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "                global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference> a = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference>)o.@References; " is 179.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "                        Write3_Reference(@"Reference"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' ((global::ExcelDna.Integration.Reference)a[ia])' false' false); " is 152.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "                global::System.Collections.Generic.List<global::ExcelDna.Integration.SourceItem> a = (global::System.Collections.Generic.List<global::ExcelDna.Integration.SourceItem>)o.@SourceItems; " is 182.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write5_Project,The length of the statement  "                        Write4_SourceItem(@"SourceItem"' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary"' ((global::ExcelDna.Integration.SourceItem)a[ia])' false' false); " is 155.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write4_SourceItem,The length of the statement  "            WriteAttribute(@"Pack"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Pack))); " is 120.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The length of the statement  "            WriteAttribute(@"ComServer"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ComServer))); " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The length of the statement  "            WriteAttribute(@"Pack"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Pack))); " is 120.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The length of the statement  "            WriteAttribute(@"LoadFromBytes"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@LoadFromBytes))); " is 138.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The length of the statement  "            WriteAttribute(@"ExplicitExports"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ExplicitExports))); " is 142.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The length of the statement  "            WriteAttribute(@"ExplicitRegistration"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ExplicitRegistration))); " is 152.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The length of the statement  "            WriteAttribute(@"UseVersionAsOutputVersion"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@UseVersionAsOutputVersion))); " is 162.
Long Statement,ExcelDna.Serialization,XmlSerializationWriterDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Write2_ExternalLibrary,The length of the statement  "            WriteAttribute(@"IncludePdb"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IncludePdb))); " is 132.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) { " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            if ((object)(o.@ExternalLibraries) == null) o.@ExternalLibraries = new global::System.Collections.Generic.List<global::ExcelDna.Integration.ExternalLibrary>(); " is 159.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            global::System.Collections.Generic.List<global::ExcelDna.Integration.ExternalLibrary> a_0 = (global::System.Collections.Generic.List<global::ExcelDna.Integration.ExternalLibrary>)o.@ExternalLibraries; " is 200.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            if ((object)(o.@Projects) == null) o.@Projects = new global::System.Collections.Generic.List<global::ExcelDna.Integration.Project>(); " is 133.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            global::System.Collections.Generic.List<global::ExcelDna.Integration.Project> a_1 = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Project>)o.@Projects; " is 175.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            if ((object)(o.@References) == null) o.@References = new global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference>(); " is 139.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference> a_6 = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference>)o.@References; " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            if ((object)(o.@CustomUIs) == null) o.@CustomUIs = new global::System.Collections.Generic.List<global::System.Xml.XmlNode>(); " is 125.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            global::System.Collections.Generic.List<global::System.Xml.XmlNode> a_12 = (global::System.Collections.Generic.List<global::System.Xml.XmlNode>)o.@CustomUIs; " is 157.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            if ((object)(o.@Images) == null) o.@Images = new global::System.Collections.Generic.List<global::ExcelDna.Integration.Image>(); " is 127.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "            global::System.Collections.Generic.List<global::ExcelDna.Integration.Image> a_13 = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Image>)o.@Images; " is 170.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id4_Name && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 124.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id5_RuntimeVersion && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 139.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id6_ShadowCopyFiles && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 140.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id7_CreateSandboxedAppDomain && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 149.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id8_Language && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 133.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id9_CompilerVersion && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 140.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id10_DefaultReferences && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 143.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                else if (!paramsRead[10] && ((object) Reader.LocalName == (object)id11_DefaultImports && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 141.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                    UnknownNode((object)o' @":Name' :RuntimeVersion' :ShadowCopyFiles' :CreateSandboxedAppDomain' :Language' :CompilerVersion' :DefaultReferences' :DefaultImports"); " is 161.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                    if (((object) Reader.LocalName == (object)id12_ExternalLibrary /*&& (object) Reader.NamespaceURI == (object)id2_Item*/)) { " is 122.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                    else if (((object) Reader.LocalName == (object)id14_Reference /*&& (object) Reader.NamespaceURI == (object)id2_Item*/)) { " is 121.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                    else if (((object) Reader.LocalName == (object)id15_CustomUI /*&& (object) Reader.NamespaceURI == (object)id2_Item*/)) { " is 120.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                        UnknownNode((object)o' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary:ExternalLibrary' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Project' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Reference' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:CustomUI' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Image"); " is 350.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The length of the statement  "                    UnknownNode((object)o' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary:ExternalLibrary' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Project' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Reference' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:CustomUI' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Image"); " is 350.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read6_Image,The length of the statement  "            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) { " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read6_Image,The length of the statement  "                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id4_Name && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 124.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read6_Image,The length of the statement  "                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id17_Path && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read6_Image,The length of the statement  "                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id18_Pack && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,The length of the statement  "            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) { " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,The length of the statement  "                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id4_Name && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 124.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,The length of the statement  "                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id19_AssemblyPath && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 138.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,The length of the statement  "                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id18_Pack && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,The length of the statement  "                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id20_IncludePdb && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 136.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,The length of the statement  "                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id17_Path && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) { " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                o = (global::ExcelDna.Integration.Project)System.Activator.CreateInstance(typeof(global::ExcelDna.Integration.Project)' System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.CreateInstance | System.Reflection.BindingFlags.NonPublic' null' new object[0]' null); " is 319.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "            if ((object)(o.@References) == null) o.@References = new global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference>(); " is 139.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "            global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference> a_3 = (global::System.Collections.Generic.List<global::ExcelDna.Integration.Reference>)o.@References; " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "            if ((object)(o.@SourceItems) == null) o.@SourceItems = new global::System.Collections.Generic.List<global::ExcelDna.Integration.SourceItem>(); " is 142.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "            global::System.Collections.Generic.List<global::ExcelDna.Integration.SourceItem> a_9 = (global::System.Collections.Generic.List<global::ExcelDna.Integration.SourceItem>)o.@SourceItems; " is 184.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id4_Name && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 124.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id8_Language && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 133.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id9_CompilerVersion && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 140.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id10_DefaultReferences && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 143.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id11_DefaultImports && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 140.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id21_ExplicitExports && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 141.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id22_ExplicitRegistration && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 146.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id23_ComServer && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 135.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                    UnknownNode((object)o' @":Name' :Language' :CompilerVersion' :DefaultReferences' :DefaultImports' :ExplicitExports' :ExplicitRegistration' :ComServer"); " is 152.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                    else if (((object) Reader.LocalName == (object)id24_SourceItem /*&& (object) Reader.NamespaceURI == (object)id2_Item*/)) { " is 122.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                        UnknownNode((object)o' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Reference' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:SourceItem"); " is 157.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The length of the statement  "                    UnknownNode((object)o' @"http://schemas.excel-dna.net/addin/2018/05/dnalibrary:Reference' http://schemas.excel-dna.net/addin/2018/05/dnalibrary:SourceItem"); " is 157.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read4_SourceItem,The length of the statement  "            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) { " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read4_SourceItem,The length of the statement  "                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id18_Pack && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 125.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read4_SourceItem,The length of the statement  "                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id4_Name && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 129.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read4_SourceItem,The length of the statement  "                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id17_Path && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) { " is 181.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id17_Path && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 125.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id25_TypeLibPath && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 137.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id23_ComServer && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 135.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id18_Pack && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 130.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id26_LoadFromBytes && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 139.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id21_ExplicitExports && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 141.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id22_ExplicitRegistration && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 146.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id27_UseVersionAsOutputVersion && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 151.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id20_IncludePdb && (object) Reader.NamespaceURI == (object)id3_Item)) { " is 136.
Long Statement,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The length of the statement  "                    UnknownNode((object)o' @":Path' :TypeLibPath' :ComServer' :Pack' :LoadFromBytes' :ExplicitExports' :ExplicitRegistration' :UseVersionAsOutputVersion' :IncludePdb"); " is 164.
Long Statement,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The length of the statement  "            this.logMessages.RetrieveVirtualItem += new System.Windows.Forms.RetrieveVirtualItemEventHandler(this.logMessages_RetrieveVirtualItem); " is 135.
Long Statement,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 146.
Complex Conditional,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,GetExcelMethods,The conditional expression  "!t.IsClass || !t.IsPublic ||                  /*t.IsAbstract ||*/ t.IsArray ||                  (t.IsGenericType && t.ContainsGenericParameters) ||                  t.Namespace == "My""  is complex.
Complex Conditional,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The conditional expression  "lang == "cs" || lang == "csharp" || lang == "c#" || lang == "c sharp""  is complex.
Complex Conditional,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetProvider,The conditional expression  "lang == "fs" || lang == "fsharp" || lang == "f#" || lang == "f sharp""  is complex.
Complex Conditional,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The conditional expression  "Reader.NodeType == System.Xml.XmlNodeType.Text ||                   Reader.NodeType == System.Xml.XmlNodeType.CDATA ||                   Reader.NodeType == System.Xml.XmlNodeType.Whitespace ||                   Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace"  is complex.
Complex Conditional,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The conditional expression  "Reader.NodeType == System.Xml.XmlNodeType.Text ||                   Reader.NodeType == System.Xml.XmlNodeType.CDATA ||                   Reader.NodeType == System.Xml.XmlNodeType.Whitespace ||                   Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace"  is complex.
Complex Conditional,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read4_SourceItem,The conditional expression  "Reader.NodeType == System.Xml.XmlNodeType.Text ||                   Reader.NodeType == System.Xml.XmlNodeType.CDATA ||                   Reader.NodeType == System.Xml.XmlNodeType.Whitespace ||                   Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace"  is complex.
Empty Catch Block,ExcelDna.Integration,AssemblyLoaderExcelServer,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoaderExcelServer.cs,GetExcelServerInfos,The method has an empty catch block.
Empty Catch Block,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The method has an empty catch block.
Empty Catch Block,ExcelDna.ComInterop.ComRegistration,Registration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComRegistration.cs,Dispose,The method has an empty catch block.
Empty Catch Block,ExcelDna.Integration.CustomUI,_CustomTaskPaneEvents_EventProvider,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,LogDisplayForm_FormClosing,The method has an empty catch block.
Magic Number,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,ProcessAssemblies,The following statement contains a magic number: bool loadRibbons = (ExcelDnaUtil.ExcelVersion >= 12.0);
Magic Number,ExcelDna.Integration,AssemblyLoader,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\AssemblyLoader.cs,IsParameterTypeSupported,The following statement contains a magic number: return _supportedParameterTypes.Contains(type) ||                      (ExcelDnaUtil.ExcelVersion >= 14.0 && type == typeof(ExcelAsyncHandle));
Magic Number,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,LoadCustomUI,The following statement contains a magic number: ExcelDnaUtil.ExcelVersion >= 12.0
Magic Number,ExcelDna.Integration,DnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrary.cs,GetImage,The following statement contains a magic number: string resourceName = image.Path.Substring(7);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetWindowHandle15,The following statement contains a magic number: StringBuilder buffer = new StringBuilder(256);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetWindowHandleThread,The following statement contains a magic number: StringBuilder buffer = new StringBuilder(255);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetApplicationFromNewWorkbook,The following statement contains a magic number: XlCall.Excel(XlCall.xlcNew' 5);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetApplicationFromNewWorkbook,The following statement contains a magic number: XlCall.Excel(XlCall.xlcWorkbookInsert' 6);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetApplicationFromWindows15,The following statement contains a magic number: StringBuilder buffer = new StringBuilder(256);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,GetApplicationFromWindow,The following statement contains a magic number: StringBuilder cname = new StringBuilder(256);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,IsInFunctionWizard,The following statement contains a magic number: StringBuilder buffer = new StringBuilder(256);
Magic Number,ExcelDna.Integration,ExcelDnaUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Excel.cs,FindAnExcelWindowWithLoWord,The following statement contains a magic number: StringBuilder buffer = new StringBuilder(256);
Magic Number,ExcelDna.Integration,ExcelErrorUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelError.cs,ToComError,The following statement contains a magic number: switch (excelError)              {                  case ExcelError.ExcelErrorNull:                      code = -2146826288;                      break;                  case ExcelError.ExcelErrorDiv0:                      code = -2146826281;                      break;                  case ExcelError.ExcelErrorRef:                      code = -2146826265;                      break;                  case ExcelError.ExcelErrorName:                      code = -2146826259;                      break;                  case ExcelError.ExcelErrorNum:                      code = -2146826252;                      break;                  case ExcelError.ExcelErrorNA:                      code = -2146826246;                      break;                  case ExcelError.ExcelErrorGettingData:                  case ExcelError.ExcelErrorValue:                  default:                      code = -2146826273;                      break;              }
Magic Number,ExcelDna.Integration,ExcelErrorUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelError.cs,ToComError,The following statement contains a magic number: switch (excelError)              {                  case ExcelError.ExcelErrorNull:                      code = -2146826288;                      break;                  case ExcelError.ExcelErrorDiv0:                      code = -2146826281;                      break;                  case ExcelError.ExcelErrorRef:                      code = -2146826265;                      break;                  case ExcelError.ExcelErrorName:                      code = -2146826259;                      break;                  case ExcelError.ExcelErrorNum:                      code = -2146826252;                      break;                  case ExcelError.ExcelErrorNA:                      code = -2146826246;                      break;                  case ExcelError.ExcelErrorGettingData:                  case ExcelError.ExcelErrorValue:                  default:                      code = -2146826273;                      break;              }
Magic Number,ExcelDna.Integration,ExcelErrorUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelError.cs,ToComError,The following statement contains a magic number: switch (excelError)              {                  case ExcelError.ExcelErrorNull:                      code = -2146826288;                      break;                  case ExcelError.ExcelErrorDiv0:                      code = -2146826281;                      break;                  case ExcelError.ExcelErrorRef:                      code = -2146826265;                      break;                  case ExcelError.ExcelErrorName:                      code = -2146826259;                      break;                  case ExcelError.ExcelErrorNum:                      code = -2146826252;                      break;                  case ExcelError.ExcelErrorNA:                      code = -2146826246;                      break;                  case ExcelError.ExcelErrorGettingData:                  case ExcelError.ExcelErrorValue:                  default:                      code = -2146826273;                      break;              }
Magic Number,ExcelDna.Integration,ExcelErrorUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelError.cs,ToComError,The following statement contains a magic number: switch (excelError)              {                  case ExcelError.ExcelErrorNull:                      code = -2146826288;                      break;                  case ExcelError.ExcelErrorDiv0:                      code = -2146826281;                      break;                  case ExcelError.ExcelErrorRef:                      code = -2146826265;                      break;                  case ExcelError.ExcelErrorName:                      code = -2146826259;                      break;                  case ExcelError.ExcelErrorNum:                      code = -2146826252;                      break;                  case ExcelError.ExcelErrorNA:                      code = -2146826246;                      break;                  case ExcelError.ExcelErrorGettingData:                  case ExcelError.ExcelErrorValue:                  default:                      code = -2146826273;                      break;              }
Magic Number,ExcelDna.Integration,ExcelErrorUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelError.cs,ToComError,The following statement contains a magic number: switch (excelError)              {                  case ExcelError.ExcelErrorNull:                      code = -2146826288;                      break;                  case ExcelError.ExcelErrorDiv0:                      code = -2146826281;                      break;                  case ExcelError.ExcelErrorRef:                      code = -2146826265;                      break;                  case ExcelError.ExcelErrorName:                      code = -2146826259;                      break;                  case ExcelError.ExcelErrorNum:                      code = -2146826252;                      break;                  case ExcelError.ExcelErrorNA:                      code = -2146826246;                      break;                  case ExcelError.ExcelErrorGettingData:                  case ExcelError.ExcelErrorValue:                  default:                      code = -2146826273;                      break;              }
Magic Number,ExcelDna.Integration,ExcelErrorUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelError.cs,ToComError,The following statement contains a magic number: switch (excelError)              {                  case ExcelError.ExcelErrorNull:                      code = -2146826288;                      break;                  case ExcelError.ExcelErrorDiv0:                      code = -2146826281;                      break;                  case ExcelError.ExcelErrorRef:                      code = -2146826265;                      break;                  case ExcelError.ExcelErrorName:                      code = -2146826259;                      break;                  case ExcelError.ExcelErrorNum:                      code = -2146826252;                      break;                  case ExcelError.ExcelErrorNA:                      code = -2146826246;                      break;                  case ExcelError.ExcelErrorGettingData:                  case ExcelError.ExcelErrorValue:                  default:                      code = -2146826273;                      break;              }
Magic Number,ExcelDna.Integration,ExcelErrorUtil,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelError.cs,ToComError,The following statement contains a magic number: switch (excelError)              {                  case ExcelError.ExcelErrorNull:                      code = -2146826288;                      break;                  case ExcelError.ExcelErrorDiv0:                      code = -2146826281;                      break;                  case ExcelError.ExcelErrorRef:                      code = -2146826265;                      break;                  case ExcelError.ExcelErrorName:                      code = -2146826259;                      break;                  case ExcelError.ExcelErrorNum:                      code = -2146826252;                      break;                  case ExcelError.ExcelErrorNA:                      code = -2146826246;                      break;                  case ExcelError.ExcelErrorGettingData:                  case ExcelError.ExcelErrorValue:                  default:                      code = -2146826273;                      break;              }
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The following statement contains a magic number: rectangle = new ExcelRectangle(rect[0]' rect[1]' rect[2]' rect[3]);
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The following statement contains a magic number: rectangle = new ExcelRectangle(rect[0]' rect[1]' rect[2]' rect[3]);
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The following statement contains a magic number: Debug.Assert(rect.Length == 4);
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The following statement contains a magic number: furtherRectangles[i] = new ExcelRectangle(rect[0]' rect[1]' rect[2]' rect[3]);
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,ExcelReference,The following statement contains a magic number: furtherRectangles[i] = new ExcelRectangle(rect[0]' rect[1]' rect[2]' rect[3]);
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,GetHashCode,The following statement contains a magic number: const int b = 378551;
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,GetHashCode,The following statement contains a magic number: int a = 63689;
Magic Number,ExcelDna.Integration,ExcelReference,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,GetHashCode,The following statement contains a magic number: hash *= 397;
Magic Number,ExcelDna.Integration,ExcelRectangle,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ RowLast;
Magic Number,ExcelDna.Integration,ExcelRectangle,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ ColumnFirst;
Magic Number,ExcelDna.Integration,ExcelRectangle,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelReference.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ ColumnLast;
Magic Number,ExcelDna.Integration,ExternalLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExternalLibrary.cs,GetAssemblies,The following statement contains a magic number: string resourceName = Path.Substring(7);
Magic Number,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetReferencePaths,The following statement contains a magic number: string assName = rf.Path.Substring(7);
Magic Number,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetReferencePaths,The following statement contains a magic number: Environment.Version.Major >= 4
Magic Number,ExcelDna.Integration,Project,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\Project.cs,GetAssemblies,The following statement contains a magic number: Environment.Version.Major >= 4
Magic Number,ExcelDna.Integration,SourceItem,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\SourceItem.cs,GetSource,The following statement contains a magic number: string resourceName = Path.Substring(7);
Magic Number,ExcelDna.Integration,ExcelIntegration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelIntegration.cs,UnregisterXLL,The following statement contains a magic number: object removeId = XlCall.Excel(XlCall.xlfRegister' xllPath' "xlAutoRemove"' "I"' ExcelEmpty.Value' ExcelEmpty.Value' 2);
Magic Number,ExcelDna.Integration,ExcelIntegration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelIntegration.cs,GetPdbBytes,The following statement contains a magic number: return getResourceBytesDelegate(assemblyName' 4);
Magic Number,ExcelDna.Integration,ExcelIntegration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelIntegration.cs,GetImageBytes,The following statement contains a magic number: return getResourceBytesDelegate(imageName' 2);
Magic Number,ExcelDna.Integration,ExcelIntegration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelIntegration.cs,GetSourceBytes,The following statement contains a magic number: return getResourceBytesDelegate(sourceName' 3);
Magic Number,ExcelDna.ComInterop.ComRegistration,AutomationSecurityOverride,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComRegistration.cs,SetAutomationSecurity,The following statement contains a magic number: CultureInfo ci = new CultureInfo(1033);
Magic Number,ExcelDna.ComInterop,ExcelComClassType,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComServer.cs,RegisterTypeLibrary,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,ExcelDna.Integration.CustomUI,_CustomTaskPaneEvents_EventProvider,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,Init,The following statement contains a magic number: byte[] b = new byte[] { 60' 3' 12' 0' 0' 0' 0' 0' 0xc0' 0' 0' 0' 0' 0' 0' 70 };
Magic Number,ExcelDna.Integration.CustomUI,_CustomTaskPaneEvents_EventProvider,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,Init,The following statement contains a magic number: byte[] b = new byte[] { 60' 3' 12' 0' 0' 0' 0' 0' 0xc0' 0' 0' 0' 0' 0' 0' 70 };
Magic Number,ExcelDna.Integration.CustomUI,_CustomTaskPaneEvents_EventProvider,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,Init,The following statement contains a magic number: byte[] b = new byte[] { 60' 3' 12' 0' 0' 0' 0' 0' 0xc0' 0' 0' 0' 0' 0' 0' 70 };
Magic Number,ExcelDna.Integration.CustomUI,_CustomTaskPaneEvents_EventProvider,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ComInterop.cs,Init,The following statement contains a magic number: byte[] b = new byte[] { 60' 3' 12' 0' 0' 0' 0' 0' 0xc0' 0' 0' 0' 0' 0' 0' 70 };
Magic Number,ExcelDna.Integration.CustomUI,ExcelRibbon,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRibbon.cs,GetCustomUI,The following statement contains a magic number: ExcelDnaUtil.ExcelVersion >= 14.0
Magic Number,ExcelDna.Integration.CustomUI,ExcelRibbon,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRibbon.cs,GetCustomUI,The following statement contains a magic number: ExcelDnaUtil.ExcelVersion >= 12.0
Magic Number,ExcelDna.Integration.CustomUI,ExcelRibbon,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRibbon.cs,RunTagMacro,The following statement contains a magic number: app.GetType().InvokeMember("Run"' BindingFlags.InvokeMethod' null' app' new object[] { control.Tag }' new CultureInfo(1033));
Magic Number,ExcelDna.Integration.Rtd,RtdRegistration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRtd.cs,TryCallRTD,The following statement contains a magic number: object[] args = new object[topics.Length + 2];
Magic Number,ExcelDna.Integration.Rtd,RtdRegistration,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRtd.cs,TryCallRTD,The following statement contains a magic number: topics.CopyTo(args' 2);
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The following statement contains a magic number: bool[] paramsRead = new bool[14];
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The following statement contains a magic number: paramsRead[2] = true;
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read7_DnaLibrary,The following statement contains a magic number: !paramsRead[2] && ((object) Reader.LocalName == (object)id4_Name && (object) Reader.NamespaceURI == (object)id3_Item)
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read6_Image,The following statement contains a magic number: bool[] paramsRead = new bool[3];
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read3_Reference,The following statement contains a magic number: bool[] paramsRead = new bool[5];
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read5_Project,The following statement contains a magic number: bool[] paramsRead = new bool[11];
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read4_SourceItem,The following statement contains a magic number: bool[] paramsRead = new bool[4];
Magic Number,ExcelDna.Serialization,XmlSerializationReaderDnaLibrary,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\DnaLibrarySerialization.cs,Read2_ExternalLibrary,The following statement contains a magic number: bool[] paramsRead = new bool[9];
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,LogDisplayForm,The following statement contains a magic number: updateTimer.Interval = 250;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,MakeItem,The following statement contains a magic number: message = message.Substring(0' 253) + " [...]";
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,MakeItem,The following statement contains a magic number: message.Length > 259
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnClear.Location = new System.Drawing.Point(175' 3);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnClear.Location = new System.Drawing.Point(175' 3);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnClear.Size = new System.Drawing.Size(80' 24);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnClear.Size = new System.Drawing.Size(80' 24);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnClear.TabIndex = 4;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnCount = 4;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.btnClear' 2' 0);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(5' 5);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(5' 5);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowCount = 2;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Absolute' 20F));
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(622' 284);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(622' 284);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.TabIndex = 3;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnCopy.Location = new System.Drawing.Point(89' 3);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnCopy.Location = new System.Drawing.Point(89' 3);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnCopy.Size = new System.Drawing.Size(80' 24);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnCopy.Size = new System.Drawing.Size(80' 24);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnCopy.TabIndex = 3;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.SetColumnSpan(this.logMessages' 4);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.logMessages.Location = new System.Drawing.Point(3' 33);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.logMessages.Location = new System.Drawing.Point(3' 33);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.logMessages.Size = new System.Drawing.Size(616' 248);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.logMessages.Size = new System.Drawing.Size(616' 248);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.logMessageText.Width = 585;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveErrors.Location = new System.Drawing.Point(3' 3);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveErrors.Location = new System.Drawing.Point(3' 3);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveErrors.Size = new System.Drawing.Size(80' 24);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveErrors.Size = new System.Drawing.Size(80' 24);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveErrors.TabIndex = 2;
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(632' 294);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(632' 294);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(450' 270);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(450' 270);
Magic Number,ExcelDna.Logging,LogDisplayForm,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\LogDisplay.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(5);
Missing Default,ExcelDna.Integration.Rtd,RtdServerWrapper,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\ExcelDna.Integration\ExcelRtd.cs,RtdServerWrapper,The following switch statement is missing a default case: switch (mi.Name)                              {                                  case "ConnectData":                                      _ConnectData = (delConnectData)Delegate.CreateDelegate(typeof(delConnectData)' rtdServer' map.TargetMethods[i]);                                      break;                                  case "DisconnectData":                                      _DisconnectData = (delDisconnectData)Delegate.CreateDelegate(typeof(delDisconnectData)' rtdServer' map.TargetMethods[i]);                                      break;                                  case "Heartbeat":                                      _Heartbeat = (delHeartbeat)Delegate.CreateDelegate(typeof(delHeartbeat)' rtdServer' map.TargetMethods[i]);                                      break;                                  case "RefreshData":                                      _RefreshData = (delRefreshData)Delegate.CreateDelegate(typeof(delRefreshData)' rtdServer' map.TargetMethods[i]);                                      break;                                  case "ServerStart":                                      // ServerStart is tricky because of the parameter type mapping.                                      MethodInfo serverStartMethod = map.TargetMethods[i];                                      _ServerStart = delegate(IRTDUpdateEvent updateEvent)                                      {                                          return (int)serverStartMethod.Invoke(rtdServer' new object[] {updateEvent});                                      };                                      break;                                  case "ServerTerminate":                                      _ServerTerminate = (delServerTerminate)Delegate.CreateDelegate(typeof(delServerTerminate)' rtdServer' map.TargetMethods[i]);                                      break;                              }
