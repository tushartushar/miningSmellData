Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,hashErrorToString,Cyclomatic complexity of the method is 8
Long Statement,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,ExcelTest,The length of the statement  "            var testMacros = xlWorkbooks.Open(testMacrosPath' 0' true' 5' ""' ""' true' XlPlatform.xlWindows' "\t"' false' false' 0' true' 1' 0); " is 133.
Long Statement,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,ExcelTest,The length of the statement  "            m_xlWorkbook = xlWorkbooks.Open(workbook' 0' true' 5' ""' ""' true' XlPlatform.xlWindows' "\t"' false' false' 0' true' 1' 0); " is 125.
Long Statement,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,ExcelTest,The length of the statement  "                try { Directory.CreateDirectory(workDir); } catch (Exception) { }; // more than 1 thread might get here' but only 1 will succeed " is 128.
Empty Catch Block,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,ExcelTest,The method has an empty catch block.
Magic Number,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,PrepareXlDna,The following statement contains a magic number: bool is64Bit = (Marshal.SizeOf(m_xlApp.HinstancePtr) == 8);
Magic Number,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,ExcelTest,The following statement contains a magic number: var testMacros = xlWorkbooks.Open(testMacrosPath' 0' true' 5' ""' ""' true' XlPlatform.xlWindows' "\t"' false' false' 0' true' 1' 0);
Magic Number,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,ExcelTest,The following statement contains a magic number: m_xlWorkbook = xlWorkbooks.Open(workbook' 0' true' 5' ""' ""' true' XlPlatform.xlWindows' "\t"' false' false' 0' true' 1' 0);
Magic Number,ExcelDna.Integration.Tests,ExcelBasedTests,D:\research\architectureSmells\repos\Excel-DNA_Excel-DNA\Source\Tests\ExcelDna.IntegrationTests\Tests.cs,TearDown,The following statement contains a magic number: !m_xlProcess.WaitForExit(5000)
