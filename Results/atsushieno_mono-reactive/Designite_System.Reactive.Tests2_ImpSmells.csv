Implementation smell,Namespace,Class,File,Method,Description
Long Statement,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,CancellationWontWork,The length of the statement  "			var dis = Scheduler.CurrentThread.Schedule<object> (null' TimeSpan.FromMilliseconds (100)' (sch' stat) => raised = true); " is 121.
Long Statement,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,RunConcurrencyTest2,The length of the statement  "			var source = stream.ObserveOn (Scheduler.CurrentThread); // Unlike another one' this test runs totally on CurrentThread. " is 120.
Long Statement,System.Reactive.Concurrency.Tests,NewThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\NewThreadSchedulerTest.cs,Cancellation,The length of the statement  "			var dis = new NewThreadScheduler ().Schedule<object> (null' TimeSpan.FromMilliseconds (300)' (sch' stat) => raised = true); " is 123.
Long Statement,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The length of the statement  "			// It is time-dependent test (i.e. lengthy and inconsistent)' which is not very good but we cannot use HistoricalScheduler to test it... " is 136.
Long Statement,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The length of the statement  "			// It is time-dependent test (i.e. lengthy and inconsistent)' which is not very good but we cannot use HistoricalScheduler to test it... " is 136.
Long Statement,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The length of the statement  "			scheduler.AdvanceBy (TimeSpan.FromMilliseconds (200)); // should be enough to raise interval event if it were active (which should *not*) " is 137.
Long Statement,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The length of the statement  "			pdis3.Dispose (); // This should not result in NRE (possibly because of the internal cleanup). Note that this is in reverse order to pdis1 " is 138.
Long Statement,System.Reactive.Linq.Tests,ObservableEventsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableEventsTest.cs,TestAttachAndDetach2,The length of the statement  "			// FromEvent<TDelegate'TEventArgs> (Func<Action<TEventArgs>' TDelegate> conversion' Func<TDelegate> addHandler' Func<TDelegate> removeHandler) " is 142.
Long Statement,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeoutSchedulerTimeout,The length of the statement  "			var o = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (5).Timeout (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ()); " is 135.
Long Statement,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimestampScheduler,The length of the statement  "			var o = Observable.Range (1' 3).Timestamp (new ErrorScheduler ()); // This ensures that Timestamp() does *not* use IScheduler to *schedule* tasks. " is 146.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerableWithInterval,The length of the statement  "			Assert.IsTrue (DateTime.Now - start > TimeSpan.FromMilliseconds (500)' "#2"); // if it enumerates in incorrect time' it will result in false. " is 141.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Materialize,The length of the statement  "			var dis = source.Materialize ().Subscribe (v => l.Add (v.Kind)' () => done = true); // test that Materialize() yields OnCompleted event after yielding OnError. " is 159.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ErrorSubscription,The length of the statement  "			var o = Observable.Create<int> (observer => { try { throw new Exception (); return Disposable.Empty; } finally { done = true; } }); " is 131.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AllPredicateError,The length of the statement  "			source.Subscribe (v => {} ' ex => Assert.Fail ("Should not reach OnError")' () => Assert.Fail ("Should not reach OnCompleted")); " is 128.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AnyPredicateError,The length of the statement  "			source.Subscribe (v => {} ' ex => Assert.Fail ("Should not reach OnError")' () => Assert.Fail ("Should not reach OnCompleted")); " is 128.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans,The length of the statement  "			// This makes notable corner case ... FromMilliseconds (3100) passes the test' while FromSeconds (3) does not. It is because the source is cut at that state. " is 157.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDoEnumerable,The length of the statement  "					// FIXME: this select should work' but it does not give expected "i" or "x" values' likely due to some mcs bug regarding local variable volatility... " is 149.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctError,The length of the statement  "			var source = new int [] {0' 1' 1' 3' 3' 1}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).Distinct (); " is 127.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The length of the statement  "			var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).DistinctUntilChanged<int'int> (i => i); " is 154.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The length of the statement  "			source.Subscribe (v => s += v' ex => s += "error:" + ex.GetType ()' () => Assert.Fail ("Should not reach OnCompleted")); " is 120.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The length of the statement  "			var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => { throw new MyException (); }); " is 126.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The length of the statement  "			source.Subscribe (v => {} ' ex => Assert.Fail ("Should not reach OnError")' () => Assert.Fail ("Should not reach OnCompleted")); " is 128.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GenerateErrorSelector,The length of the statement  "			source.Subscribe (v => {} ' ex => Assert.Fail ("Should not reach OnError")' () => Assert.Fail ("Should not reach OnCompleted")); " is 128.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBySequenceError,The length of the statement  "			var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).GroupBy (k => k); " is 133.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBySelectorError,The length of the statement  "			source.Subscribe (v => {} ' ex => Assert.Fail ("Should not reach OnError")' () => Assert.Fail ("Should not reach OnCompleted")); " is 128.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupByUntilSequenceError,The length of the statement  "			var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).GroupByUntil (k => k' x => Observable.Interval (TimeSpan.FromSeconds (1)' scheduler).Take (1)); " is 211.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupByUntilDurationSequenceError,The length of the statement  "			var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().GroupByUntil (k => k' x => Observable.Throw<int> (new SystemException ())); " is 135.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The length of the statement  "			// almost identical to the previous one' but without delay. And I only test some corner case that could result in difference. " is 125.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,MaxByErrorSelector,The length of the statement  "			source.Subscribe (v => s += v' ex => Assert.Fail ("should not reach OnError")' () => Assert.Fail ("should not reach OnCompleted")); " is 131.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,MinByErrorSelector,The length of the statement  "			source.Subscribe (v => s += v' ex => Assert.Fail ("should not reach OnError")' () => Assert.Fail ("should not reach OnCompleted")); " is 131.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,RangeErrorScheduler,The length of the statement  "			source.Subscribe (v => {} ' ex => Assert.Fail ("Should not reach OnError")' () => Assert.Fail ("Should not reach OnCompleted")); " is 128.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The length of the statement  "			var source = Observable.Interval (TimeSpan.FromMilliseconds (300)' scheduler).Delay (TimeSpan.FromSeconds (2)' scheduler); " is 122.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SelectErrorSelector,The length of the statement  "			source.Subscribe (v => s += v' ex => Assert.Fail ("should not reach OnError")' () => Assert.Fail ("should not reach OnCompleted")); " is 131.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipDuration,The length of the statement  "			Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).Skip (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v)); " is 152.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastDuration,The length of the statement  "			Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipLast (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v)); " is 156.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipUntil,The length of the statement  "			Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipUntil (scheduler.Now.AddMilliseconds (300)' scheduler).Subscribe (v => l.Add (v)); " is 161.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastErrorSequence,The length of the statement  "			var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).SkipLast (3); // note that this could still result in OnError " is 154.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeWhileErrorSelector,The length of the statement  "			var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).TakeWhile (i => { throw new MyException (); }); " is 140.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle,The length of the statement  "			var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (100)' scheduler)).Throttle (TimeSpan.FromMilliseconds (50)' scheduler); " is 172.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TimeoutOutOfTime,The length of the statement  "			var source = Observable.Interval (TimeSpan.FromSeconds (1)' scheduler).Take (2).Timeout (TimeSpan.FromSeconds (1)' scheduler); " is 126.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TimeoutErrorSelector,The length of the statement  "			var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).Timeout (TimeSpan.FromSeconds (1)' scheduler); " is 139.
Long Statement,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts,The length of the statement  "			string expected = "(0'0)(1'0)(2'0)(3'0)(3'1)(4'0)(4'1)(5'1)(6'1)(6'2)(7'1)(7'2)(8'2)(9'2)(9'3)(10'2)(10'3)(11'3)(12'3)(12'4)(13'3)(13'4)(14'4)(15'4)(15'5)(16'4)(16'5)(17'5)(18'5)(18'6)(19'5)(19'6)done"; " is 202.
Long Statement,System.Reactive.Subjects.Tests,SubjectSequenceTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Subjects\SubjectSequenceTest.cs,NoOnNextAfterOnError,The length of the statement  "				sub.Subscribe (v => Assert.Fail ("should not raise OnNext : " + sub)' ex => error = true' () => Assert.Fail ("should not complete : " + sub)); " is 142.
Long Statement,System.Reactive.Subjects.Tests,SubjectSequenceTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Subjects\SubjectSequenceTest.cs,NoOnCompletedAfterOnCompleted,The length of the statement  "				sub.Subscribe (v => {}' () => {if (completed) Assert.Fail ("Should not complete twice : " + sub); else completed = true; }); " is 124.
Long Statement,System.Reactive.Subjects.Tests,SubjectSequenceTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Subjects\SubjectSequenceTest.cs,NoOnErrorAfterOnError,The length of the statement  "				sub.Subscribe (v => {}' ex => { if (error) Assert.Fail ("Should not raise error after OnCompleted"); else error = true; }' () => Assert.Fail ("should not complete : " + sub)); " is 175.
Empty Catch Block,System.Reactive.Linq.Tests,ObservableInvalidSubscriptionTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableInvalidSubscriptionTest.cs,Check,The method has an empty catch block.
Empty Catch Block,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat,The method has an empty catch block.
Magic Number,Mono.Reactive.Testing.Tests,TestSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\Mono.Reactive.Testing\TestSchedulerTest.cs,Clock,The following statement contains a magic number: var dt = new DateTimeOffset (2012' 1' 1' 0' 0' 0' TimeSpan.Zero);
Magic Number,System.Reactive.Tests,NotificationTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive\NotificationTest.cs,Kind,The following statement contains a magic number: var n = Notification.CreateOnNext<int> (5);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,CancellationWontWork,The following statement contains a magic number: var dis = Scheduler.CurrentThread.Schedule<object> (null' TimeSpan.FromMilliseconds (100)' (sch' stat) => raised = true);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,CancellationWontWork,The following statement contains a magic number: Thread.Sleep (200);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,DueTime,The following statement contains a magic number: TimeSpan span = TimeSpan.FromMilliseconds (100);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,Concurrency,The following statement contains a magic number: i < 500
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,RunConcurrencyTest,The following statement contains a magic number: var stream = Observable.Range (0' 9).Do (TextWriter.Null.WriteLine);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,RunConcurrencyTest,The following statement contains a magic number: SpinWait.SpinUntil (() => done == true' 1000);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,Concurrency2,The following statement contains a magic number: i < 100
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,RunConcurrencyTest2,The following statement contains a magic number: var stream = Observable.Range (0' 9).Do (TextWriter.Null.WriteLine);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,RunConcurrencyTest2,The following statement contains a magic number: SpinWait.SpinUntil (() => done == true' 1000);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,ScheduleAbsolute,The following statement contains a magic number: s.Schedule (s.Now.AddMilliseconds (200)' () => flag = true);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,ScheduleAbsolute,The following statement contains a magic number: Thread.Sleep (200);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,ScheduleAbsolute,The following statement contains a magic number: var dis = s.Schedule (s.Now.AddMilliseconds (200)' () => flag = true);
Magic Number,System.Reactive.Concurrency.Tests,CurrentThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\CurrentThreadSchedulerTest.cs,ScheduleAbsolute,The following statement contains a magic number: Thread.Sleep (200);
Magic Number,System.Reactive.Concurrency.Tests,EventSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\EventLoopSchedulerTest.cs,Cancellation,The following statement contains a magic number: var dis = s.Schedule<object> (null' TimeSpan.FromMilliseconds (300)' (sch' stat) => {  				raised = true;  				return Disposable.Empty;  			});
Magic Number,System.Reactive.Concurrency.Tests,EventSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\EventLoopSchedulerTest.cs,Cancellation,The following statement contains a magic number: Thread.Sleep (600);
Magic Number,System.Reactive.Concurrency.Tests,HistoricalSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\HistoricalSchedulerTest.cs,Clock,The following statement contains a magic number: scheduler.AdvanceTo (new DateTimeOffset (2012' 1' 1' 0' 0' 0' TimeSpan.Zero));
Magic Number,System.Reactive.Concurrency.Tests,HistoricalSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\HistoricalSchedulerTest.cs,Clock,The following statement contains a magic number: Assert.AreEqual (2012' scheduler.Clock.Year' "#3");
Magic Number,System.Reactive.Concurrency.Tests,HistoricalSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\HistoricalSchedulerTest.cs,AdvanceByRaisesEvent2,The following statement contains a magic number: Observable.Range (0' 3).Concat (o).Subscribe (v => {}' () => done = true);
Magic Number,System.Reactive.Concurrency.Tests,HistoricalSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\HistoricalSchedulerTest.cs,AdvanceByRaisesEvent2,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (2));
Magic Number,System.Reactive.Concurrency.Tests,NewThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\NewThreadSchedulerTest.cs,Cancellation,The following statement contains a magic number: var dis = new NewThreadScheduler ().Schedule<object> (null' TimeSpan.FromMilliseconds (300)' (sch' stat) => raised = true);
Magic Number,System.Reactive.Concurrency.Tests,NewThreadSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\NewThreadSchedulerTest.cs,Cancellation,The following statement contains a magic number: Thread.Sleep (400);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleAction,The following statement contains a magic number: var dis = sch.Schedule (() => i += 5);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleAction,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleAction,The following statement contains a magic number: Assert.AreEqual (5' i' "#1");
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleActionDateTimeOffset,The following statement contains a magic number: var dis = sch.Schedule (DateTimeOffset.Now' () => i += 5);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleActionDateTimeOffset,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleActionDateTimeOffset,The following statement contains a magic number: Assert.AreEqual (5' i' "#1");
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleActionTimeSpan,The following statement contains a magic number: var dis = sch.Schedule (TimeSpan.Zero' () => i += 5);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleActionTimeSpan,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleActionTimeSpan,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,SimpleActionTimeSpan,The following statement contains a magic number: Assert.AreEqual (5' i' "#1");
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveAction,The following statement contains a magic number: var dis = sch.Schedule ((Action a) => { i++; if (i < 10) a (); else done = true; });
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveAction,The following statement contains a magic number: SpinWait.SpinUntil (() => done' 1000);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveAction,The following statement contains a magic number: Assert.AreEqual (10' i' "#1");
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionTimeSpan,The following statement contains a magic number: var dueTime = TimeSpan.FromMilliseconds (20);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionTimeSpan,The following statement contains a magic number: var dis = sch.Schedule (dueTime' (Action<TimeSpan> a) => { i++; if (i < 10) a (dueTime); else done = true; });
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionTimeSpan,The following statement contains a magic number: SpinWait.SpinUntil (() => done' 1000);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionTimeSpan,The following statement contains a magic number: Assert.AreEqual (10' i' "#1");
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionTimeSpan2,The following statement contains a magic number: var span = TimeSpan.FromMilliseconds (50);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionTimeSpan2,The following statement contains a magic number: Assert.AreEqual (20' i' "#1");
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionDateTimeOffset,The following statement contains a magic number: DateTimeOffset dueTime = DateTimeOffset.Now.AddMilliseconds (20);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionDateTimeOffset,The following statement contains a magic number: var dis = sch.Schedule (dueTime' (Action<DateTimeOffset> a) => { i++; if (i < 10) a (dueTime); else done = true; });
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionDateTimeOffset,The following statement contains a magic number: SpinWait.SpinUntil (() => done' 1000);
Magic Number,System.Reactive.Concurrency.Tests,SchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\SchedulerTest.cs,RecursiveActionDateTimeOffset,The following statement contains a magic number: Assert.AreEqual (10' i' "#1");
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Cancellation,The following statement contains a magic number: var dis = Scheduler.TaskPool.Schedule<object> (null' TimeSpan.FromMilliseconds (100)' (sch' stat) => raised = true);
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Cancellation,The following statement contains a magic number: Thread.Sleep (200);
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (1200); l.Add (1); }));
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (800); l.Add (2); }));
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (800); l.Add (2); }));
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (50); l.Add (3); }));
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (50); l.Add (3); }));
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: Thread.Sleep (1500);
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 2' 1}' l.ToArray ()' "#1");
Magic Number,System.Reactive.Concurrency.Tests,TaskPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\TaskPoolSchedulerTest.cs,Order,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 2' 1}' l.ToArray ()' "#1");
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Cancellation,The following statement contains a magic number: var dis = Scheduler.ThreadPool.Schedule<object> (null' TimeSpan.FromMilliseconds (100)' (sch' stat) => raised = true);
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Cancellation,The following statement contains a magic number: Thread.Sleep (200);
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,ScheduleErrorneousAction,The following statement contains a magic number: SpinWait.SpinUntil (() => done' 1000);
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (1200); l.Add (1); }));
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (800); l.Add (2); }));
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (800); l.Add (2); }));
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (50); l.Add (3); }));
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: dis.Add (s.Schedule (() => { Thread.Sleep (50); l.Add (3); }));
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: Thread.Sleep (1500);
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 2' 1}' l.ToArray ()' "#1");
Magic Number,System.Reactive.Concurrency.Tests,ThreadPoolSchedulerTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Concurrency\ThreadPoolSchedulerTest.cs,Order,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 2' 1}' l.ToArray ()' "#1");
Magic Number,System.Reactive.Disposables.Tests,CompositeDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\CompositeDisposableTest.cs,AddTwice,The following statement contains a magic number: Assert.AreEqual (2' d.Count' "#1");
Magic Number,System.Reactive.Disposables.Tests,CompositeDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\CompositeDisposableTest.cs,AddAfterDisposal,The following statement contains a magic number: Assert.AreEqual (2' i2' "#5");
Magic Number,System.Reactive.Disposables.Tests,ContextDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\ContextDisposableTest.cs,DisposeInAsync,The following statement contains a magic number: var d = new ContextDisposable (new SynchronizationContext ()' Disposable.Create (() => { Thread.Sleep (200); i++; }));
Magic Number,System.Reactive.Disposables.Tests,ContextDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\ContextDisposableTest.cs,DisposeInAsync,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => i != 0' 1000)' "#3");
Magic Number,System.Reactive.Disposables.Tests,ScheduledDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\ScheduledDisposableTest.cs,DisposeOnScheduler,The following statement contains a magic number: var d = new ScheduledDisposable (Scheduler.ThreadPool' Disposable.Create (() => { Thread.Sleep (200); i++; }));
Magic Number,System.Reactive.Disposables.Tests,ScheduledDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\ScheduledDisposableTest.cs,DisposeOnScheduler,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => i != 0' 1000)' "#3");
Magic Number,System.Reactive.Disposables.Tests,ScheduledDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\ScheduledDisposableTest.cs,DisposeOnScheduler,The following statement contains a magic number: d = new ScheduledDisposable (Scheduler.Immediate' Disposable.Create (() => { Thread.Sleep (200); i++; }));
Magic Number,System.Reactive.Disposables.Tests,ScheduledDisposableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Disposables\ScheduledDisposableTest.cs,DisposeOnScheduler,The following statement contains a magic number: Assert.AreEqual (2' i' "#4");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Publish,The following statement contains a magic number: var source = Observable.Range (2' 3' Scheduler.Immediate);
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Publish,The following statement contains a magic number: var source = Observable.Range (2' 3' Scheduler.Immediate);
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Publish,The following statement contains a magic number: Assert.AreEqual (24' result' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Publish,The following statement contains a magic number: Assert.AreEqual (24' result' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishConnectTwice,The following statement contains a magic number: var source = Observable.Range (2' 3' Scheduler.Immediate);
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishConnectTwice,The following statement contains a magic number: var source = Observable.Range (2' 3' Scheduler.Immediate);
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: var source = Observable.Interval (TimeSpan.FromMilliseconds (50)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (200));
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: Assert.AreEqual (4' result' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (200));
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: Assert.AreEqual (4' result' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (200));
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: Assert.AreEqual (4' result ' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (200));
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishReconnect,The following statement contains a magic number: Assert.AreEqual (8' result ' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishLast,The following statement contains a magic number: var hot = Observable.Interval (TimeSpan.FromMilliseconds (20)' scheduler).Skip (4).Take (2).PublishLast ();
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishLast,The following statement contains a magic number: var hot = Observable.Interval (TimeSpan.FromMilliseconds (20)' scheduler).Skip (4).Take (2).PublishLast ();
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishLast,The following statement contains a magic number: var hot = Observable.Interval (TimeSpan.FromMilliseconds (20)' scheduler).Skip (4).Take (2).PublishLast ();
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishLast,The following statement contains a magic number: Assert.AreEqual (5' result' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,PublishLast,The following statement contains a magic number: Assert.AreEqual (10' result' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,RefCount,The following statement contains a magic number: var source = Observable.Interval (TimeSpan.FromMilliseconds (50)' scheduler).Do (i => side++);
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,RefCount,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (400));
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,RefCount,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (400));
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Replay,The following statement contains a magic number: var hot = Observable.Interval (TimeSpan.FromMilliseconds (20)' scheduler).Take (5).Publish ();
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Replay,The following statement contains a magic number: var hot = Observable.Interval (TimeSpan.FromMilliseconds (20)' scheduler).Take (5).Publish ();
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Replay,The following statement contains a magic number: Assert.AreEqual (5' result' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableConnectableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableConnectableTest.cs,Replay,The following statement contains a magic number: Assert.AreEqual (10' result' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableInvalidSubscriptionTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableInvalidSubscriptionTest.cs,Amb,The following statement contains a magic number: Check<int> (o => o.Amb (Observable.Range (1' 3))' null);
Magic Number,System.Reactive.Linq.Tests,ObservableInvalidSubscriptionTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableInvalidSubscriptionTest.cs,Concat,The following statement contains a magic number: Check<int> (o => o.Concat (Observable.Return (5))' null);
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,BufferScheduler,The following statement contains a magic number: var o = Observable.Range (1' 3).Buffer (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,BufferScheduler,The following statement contains a magic number: var o = Observable.Range (1' 3).Buffer (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,BufferSchedulerEmpty,The following statement contains a magic number: var o = Observable.Range (0' 0).Buffer (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,DelayScheduler,The following statement contains a magic number: var o = Observable.Range (1' 3).Delay (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,DelayScheduler,The following statement contains a magic number: var o = Observable.Range (1' 3).Delay (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,DelaySchedulerEmpty,The following statement contains a magic number: var o = Observable.Empty<int> ().Delay (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,GenerateScheduler,The following statement contains a magic number: var o = Observable.Generate<int'int> (0' i => i < 5' i => i + 1' i => i' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,IntervalScheduler,The following statement contains a magic number: var o = Observable.Interval (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,MergeScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Merge (Observable.Range (4' 3)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,MergeScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Merge (Observable.Range (4' 3)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,MergeScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Merge (Observable.Range (4' 3)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,ObserveOnScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).ObserveOn (new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,RangeScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,SampleScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Sample (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,SampleScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Sample (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,SampleSchedulerEmpty,The following statement contains a magic number: var o = Observable.Empty<int> ().Sample (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,StartWithScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).StartWith (new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,SubscribeOnScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).StartWith (new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,ThrottleScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Throttle (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,ThrottleScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Throttle (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,ThrottleSchedulerEmpty,The following statement contains a magic number: var o = Observable.Empty<int> ().Throttle (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeIntervalScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).TimeInterval (new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeoutScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Timeout (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeoutScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Timeout (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeoutSchedulerEmpty,The following statement contains a magic number: var o = Observable.Range (0' 0).Timeout (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeoutSchedulerTimeout,The following statement contains a magic number: var o = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (5).Timeout (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeoutSchedulerTimeout,The following statement contains a magic number: var o = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (5).Timeout (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimeoutSchedulerTimeout,The following statement contains a magic number: var o = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (5).Timeout (TimeSpan.FromMilliseconds (10)' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimestampScheduler,The following statement contains a magic number: var o = Observable.Range (1' 3).Timestamp (new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimestampScheduler,The following statement contains a magic number: Assert.AreEqual (new int [] {1' 2' 3}' a.ToArray ()' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,TimestampScheduler,The following statement contains a magic number: Assert.AreEqual (new int [] {1' 2' 3}' a.ToArray ()' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,ToObservableScheduler,The following statement contains a magic number: var o = Enumerable.Range (0' 3).ToObservable (new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,WindowScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Window (TimeSpan.FromMilliseconds (10)' 2' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,WindowScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Window (TimeSpan.FromMilliseconds (10)' 2' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,WindowScheduler,The following statement contains a magic number: var o = Observable.Range (0' 3).Window (TimeSpan.FromMilliseconds (10)' 2' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,WindowSchedulerEmpty,The following statement contains a magic number: var o = Observable.Range (0' 0).Window (TimeSpan.FromMilliseconds (10)' 2' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableSchedulerArgumentTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableSchedulerArgumentTest.cs,WindowSchedulerEmpty,The following statement contains a magic number: var o = Observable.Range (0' 0).Window (TimeSpan.FromMilliseconds (10)' 2' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerable,The following statement contains a magic number: var e = Observable.Range (0' 3).ToEnumerable ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerable,The following statement contains a magic number: Assert.AreEqual (2' ee.Current' "#6");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerableWithInterval,The following statement contains a magic number: var obs = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (5);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerableWithInterval,The following statement contains a magic number: var obs = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (5);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerableWithInterval,The following statement contains a magic number: Thread.Sleep (200);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerableWithInterval,The following statement contains a magic number: Assert.AreEqual (5' i' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ToEnumerableWithInterval,The following statement contains a magic number: Assert.IsTrue (DateTime.Now - start > TimeSpan.FromMilliseconds (500)' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Materialize,The following statement contains a magic number: var source = Observable.Range (0' 2).Concat (Observable.Throw<int> (new Exception ("failure")));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,ErrorSubscription,The following statement contains a magic number: SpinWait.SpinUntil (() => done' 1000);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Aggregate,The following statement contains a magic number: var source = Observable.Range (1' 4).Aggregate ((v1' v2) => v1 + v2);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Aggregate,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => j != 0' 1000)' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Aggregate,The following statement contains a magic number: Assert.AreEqual (10' i' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AggregateWithSeed,The following statement contains a magic number: var source = Observable.Range (1' 4).Aggregate (5' (v1' v2) => v1 + v2);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AggregateWithSeed,The following statement contains a magic number: var source = Observable.Range (1' 4).Aggregate (5' (v1' v2) => v1 + v2);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AggregateWithSeed,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => j != 0' 1000)' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AggregateWithSeed,The following statement contains a magic number: Assert.AreEqual (15' i' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AggregateEmptyWithSeed,The following statement contains a magic number: var source = Observable.Empty<int> ().Aggregate (5' (v1' v2) => v1 + v2).Do (v => k++);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AggregateEmptyWithSeed,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => j != 0' 1000)' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AggregateEmptyWithSeed,The following statement contains a magic number: Assert.AreEqual (5' i' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,All,The following statement contains a magic number: Assert.IsFalse (Observable.Range (1' 3).All (v => v % 2 == 1).ToEnumerable ().First ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,All,The following statement contains a magic number: Assert.IsFalse (Observable.Range (1' 3).All (v => v % 2 == 1).ToEnumerable ().First ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AllPredicateError,The following statement contains a magic number: var source = Observable.Range (0' 20).All (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Amb,The following statement contains a magic number: var s1 = Observable.Range (1' 3).Delay (TimeSpan.FromMilliseconds (500)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Amb,The following statement contains a magic number: var s1 = Observable.Range (1' 3).Delay (TimeSpan.FromMilliseconds (500)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Amb,The following statement contains a magic number: var s2 = Observable.Range (4' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Amb,The following statement contains a magic number: var s2 = Observable.Range (4' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Amb,The following statement contains a magic number: Assert.AreEqual (new int [] {4' 5' 6}' e' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Amb,The following statement contains a magic number: Assert.AreEqual (new int [] {4' 5' 6}' e' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Amb,The following statement contains a magic number: Assert.AreEqual (new int [] {4' 5' 6}' e' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AndThenWhen,The following statement contains a magic number: var s1 = Observable.Range (1' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AndThenWhen,The following statement contains a magic number: var s2 = Observable.Range (4' 4);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AndThenWhen,The following statement contains a magic number: var s2 = Observable.Range (4' 4);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AndThenWhen,The following statement contains a magic number: Assert.AreEqual (new int [] {5' 7' 9}' e' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AndThenWhen,The following statement contains a magic number: Assert.AreEqual (new int [] {5' 7' 9}' e' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AndThenWhen,The following statement contains a magic number: Assert.AreEqual (new int [] {5' 7' 9}' e' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Any,The following statement contains a magic number: Assert.IsTrue (Observable.Range (1' 3).Any (v => v % 2 == 0).ToEnumerable ().First ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Any,The following statement contains a magic number: Assert.IsTrue (Observable.Range (1' 3).Any (v => v % 2 == 0).ToEnumerable ().First ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,AnyPredicateError,The following statement contains a magic number: var source = Observable.Range (0' 20).Any (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferCountAndSkip,The following statement contains a magic number: var source = Observable.Range (0' 20).Buffer (3' 5);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferCountAndSkip,The following statement contains a magic number: var source = Observable.Range (0' 20).Buffer (3' 5);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferCountAndSkip,The following statement contains a magic number: var source = Observable.Range (0' 20).Buffer (3' 5);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferCountAndSkip2,The following statement contains a magic number: var source = Observable.Range (0' 10).Buffer (5' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferCountAndSkip2,The following statement contains a magic number: var source = Observable.Range (0' 10).Buffer (5' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferCountAndSkip2,The following statement contains a magic number: var source = Observable.Range (0' 10).Buffer (5' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans,The following statement contains a magic number: var interval = TimeSpan.FromMilliseconds (100);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans,The following statement contains a magic number: var span = TimeSpan.FromMilliseconds (300);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans,The following statement contains a magic number: var shift = TimeSpan.FromMilliseconds (500);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans,The following statement contains a magic number: var total = TimeSpan.FromSeconds (3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans,The following statement contains a magic number: var source = Observable.Interval (interval' scheduler).Take (30).Buffer (span' shift' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans2,The following statement contains a magic number: var interval = TimeSpan.FromMilliseconds (100);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans2,The following statement contains a magic number: var span = TimeSpan.FromMilliseconds (500);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans2,The following statement contains a magic number: var shift = TimeSpan.FromMilliseconds (300);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans2,The following statement contains a magic number: var total = TimeSpan.FromSeconds (2);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeSpans2,The following statement contains a magic number: var source = Observable.Interval (interval' scheduler).Take (10).Buffer (span' shift' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var o1 = Observable.Generate<int' int> (0' i => i < 6' i => { Thread.Sleep (i * 50); return i + 1; }' i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var o1 = Observable.Generate<int' int> (0' i => i < 6' i => { Thread.Sleep (i * 50); return i + 1; }' i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var source = o1.Buffer (TimeSpan.FromMilliseconds (500)' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var source = o1.Buffer (TimeSpan.FromMilliseconds (500)' 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var dis = source.Subscribe (l => {  				if (iter == 0) {  					Assert.IsTrue (DateTime.Now - start <= TimeSpan.FromMilliseconds (500)' "#1");  					Assert.AreEqual (3' l.Count' "#2");  				} else if (iter == 1) {  					Assert.IsTrue (l.Count < 3' "#3");  					Assert.IsTrue (DateTime.Now - start >= TimeSpan.FromMilliseconds (500)' "#4");  				}  				else  					Assert.Fail ("Unexpected Generate() iteration");  				iter++;  				}' () => done = true);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var dis = source.Subscribe (l => {  				if (iter == 0) {  					Assert.IsTrue (DateTime.Now - start <= TimeSpan.FromMilliseconds (500)' "#1");  					Assert.AreEqual (3' l.Count' "#2");  				} else if (iter == 1) {  					Assert.IsTrue (l.Count < 3' "#3");  					Assert.IsTrue (DateTime.Now - start >= TimeSpan.FromMilliseconds (500)' "#4");  				}  				else  					Assert.Fail ("Unexpected Generate() iteration");  				iter++;  				}' () => done = true);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var dis = source.Subscribe (l => {  				if (iter == 0) {  					Assert.IsTrue (DateTime.Now - start <= TimeSpan.FromMilliseconds (500)' "#1");  					Assert.AreEqual (3' l.Count' "#2");  				} else if (iter == 1) {  					Assert.IsTrue (l.Count < 3' "#3");  					Assert.IsTrue (DateTime.Now - start >= TimeSpan.FromMilliseconds (500)' "#4");  				}  				else  					Assert.Fail ("Unexpected Generate() iteration");  				iter++;  				}' () => done = true);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: var dis = source.Subscribe (l => {  				if (iter == 0) {  					Assert.IsTrue (DateTime.Now - start <= TimeSpan.FromMilliseconds (500)' "#1");  					Assert.AreEqual (3' l.Count' "#2");  				} else if (iter == 1) {  					Assert.IsTrue (l.Count < 3' "#3");  					Assert.IsTrue (DateTime.Now - start >= TimeSpan.FromMilliseconds (500)' "#4");  				}  				else  					Assert.Fail ("Unexpected Generate() iteration");  				iter++;  				}' () => done = true);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,BufferTimeAndCount,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => done == true' 2000)' "#5");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat,The following statement contains a magic number: var source = Observable.Range (0' 5).Concat (Observable.Range (11' 3));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat,The following statement contains a magic number: var source = Observable.Range (0' 5).Concat (Observable.Range (11' 3));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat,The following statement contains a magic number: var source = Observable.Range (0' 5).Concat (Observable.Range (11' 3));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => j != 0' 1000)' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat,The following statement contains a magic number: Assert.AreEqual (46' i' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat,The following statement contains a magic number: source = Observable.Range (0' 4).Concat (Observable.Throw<int> (new MyException ()));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat2,The following statement contains a magic number: var source = Observable.Range (0' 2).Concat (Observable.Throw<int> (new Exception ("failure")));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat3,The following statement contains a magic number: var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (50)' scheduler));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat3,The following statement contains a magic number: var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (50)' scheduler));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat3,The following statement contains a magic number: var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (50)' scheduler));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat3,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (50));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDoEnumerable,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (150));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDoEnumerable,The following statement contains a magic number: yield return Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  #if false  					.Select (v => x * 10 + v).Take (5)  #else  					// FIXME: this select should work' but it does not give expected "i" or "x" values' likely due to some mcs bug regarding local variable volatility...  					// ... So I used out-of-scope value comparison here.  					.Select (v => (long) ((scheduler.Now - start).TotalMilliseconds / 20) + v).Take (5)  #endif  					.Do (v => l.Add (String.Format ("{0:ss.fff}: {1} {2}"' scheduler.Now' i' v))' () => sw.WriteLine ());
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDoEnumerable,The following statement contains a magic number: yield return Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  #if false  					.Select (v => x * 10 + v).Take (5)  #else  					// FIXME: this select should work' but it does not give expected "i" or "x" values' likely due to some mcs bug regarding local variable volatility...  					// ... So I used out-of-scope value comparison here.  					.Select (v => (long) ((scheduler.Now - start).TotalMilliseconds / 20) + v).Take (5)  #endif  					.Do (v => l.Add (String.Format ("{0:ss.fff}: {1} {2}"' scheduler.Now' i' v))' () => sw.WriteLine ());
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDoEnumerable,The following statement contains a magic number: yield return Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  #if false  					.Select (v => x * 10 + v).Take (5)  #else  					// FIXME: this select should work' but it does not give expected "i" or "x" values' likely due to some mcs bug regarding local variable volatility...  					// ... So I used out-of-scope value comparison here.  					.Select (v => (long) ((scheduler.Now - start).TotalMilliseconds / 20) + v).Take (5)  #endif  					.Do (v => l.Add (String.Format ("{0:ss.fff}: {1} {2}"' scheduler.Now' i' v))' () => sw.WriteLine ());
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDoEnumerable,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (50));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDoEnumerable,The following statement contains a magic number: i < 5
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,IntervalSelectTakeDo,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (3));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Concat4,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (3000));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Delay,The following statement contains a magic number: var source = Observable.Return (2).Delay (TimeSpan.FromMilliseconds (50)' scheduler).Materialize ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Delay,The following statement contains a magic number: var source = Observable.Return (2).Delay (TimeSpan.FromMilliseconds (50)' scheduler).Materialize ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Delay,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (50));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Delay2,The following statement contains a magic number: var source = Observable.Interval (TimeSpan.FromSeconds (1)' scheduler).Take (5).Timestamp ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Delay2,The following statement contains a magic number: var delayed = source.Delay (TimeSpan.FromSeconds (4)' scheduler).Timestamp ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Delay2,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (3));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Delay2,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (10));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Distinct,The following statement contains a magic number: var source = new int [] {0' 1' 1' 3' 3' 1}.ToObservable ().Distinct ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Distinct,The following statement contains a magic number: var source = new int [] {0' 1' 1' 3' 3' 1}.ToObservable ().Distinct ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctError,The following statement contains a magic number: var source = new int [] {0' 1' 1' 3' 3' 1}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).Distinct ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctError,The following statement contains a magic number: var source = new int [] {0' 1' 1' 3' 3' 1}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).Distinct ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: SpinWait.SpinUntil (() => done' 1000);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 5' 4' 3}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 5' 4' 3}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 5' 4' 3}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChanged,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 5' 4' 3}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSequence,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).DistinctUntilChanged<int'int> (i => i);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,DistinctUntilChangedErrorSelector,The following statement contains a magic number: var source = new int [] {3' 3' 5' 5' 4' 3}.ToObservable ().DistinctUntilChanged<int'int> (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Do,The following statement contains a magic number: var source = Observable.Range (0' 5).Do (v => k += v);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Do,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => j != 0' 1000)' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Do,The following statement contains a magic number: Assert.AreEqual (10' i' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Do,The following statement contains a magic number: Assert.AreEqual (10' k' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Generate,The following statement contains a magic number: var source = Observable.Generate (-1' x => x < 5' x => x + 1' x => x);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Generate,The following statement contains a magic number: Enumerable.Range (0' 5)
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Generate,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => done == 5' 1000)' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Generate,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => done == 5' 1000)' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Generate,The following statement contains a magic number: Assert.AreEqual (45' i' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GenerateErrorSelector,The following statement contains a magic number: var source = Observable.Generate<int'int> (-1' x => x < 5' x => x + 1' x => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: var source = Observable.Range (0' 20).GroupBy (i => i / 5);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: var source = Observable.Range (0' 20).GroupBy (i => i / 5);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: SpinWait.SpinUntil (() => done' 1000);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {0' 1' 2' 3' 4}' dic [0].ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {0' 1' 2' 3' 4}' dic [0].ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {0' 1' 2' 3' 4}' dic [0].ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {15' 16' 17' 18' 19}' dic [3].ToArray ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {15' 16' 17' 18' 19}' dic [3].ToArray ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {15' 16' 17' 18' 19}' dic [3].ToArray ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {15' 16' 17' 18' 19}' dic [3].ToArray ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {15' 16' 17' 18' 19}' dic [3].ToArray ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (new int [] {15' 16' 17' 18' 19}' dic [3].ToArray ()' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual (4' dic.Count' "#4");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBySequenceError,The following statement contains a magic number: var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).GroupBy (k => k);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBySequenceError,The following statement contains a magic number: var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).GroupBy (k => k);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupBySelectorError,The following statement contains a magic number: var source = Observable.Range (0' 20).GroupBy<int'int> (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupByUntilSequenceError,The following statement contains a magic number: var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).GroupByUntil (k => k' x => Observable.Interval (TimeSpan.FromSeconds (1)' scheduler).Take (1));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupByUntilSequenceError,The following statement contains a magic number: var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().Concat (Observable.Throw<int> (new SystemException ())).GroupByUntil (k => k' x => Observable.Interval (TimeSpan.FromSeconds (1)' scheduler).Take (1));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupByUntilDurationSequenceError,The following statement contains a magic number: var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().GroupByUntil (k => k' x => Observable.Throw<int> (new SystemException ()));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupByUntilDurationSequenceError,The following statement contains a magic number: var source = new int[] { 0' 1' 1' 3' 3' 1 }.ToObservable ().GroupByUntil (k => k' x => Observable.Throw<int> (new SystemException ()));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: bool ['] results = new bool [10' 10];
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: bool ['] results = new bool [10' 10];
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: bool [] groupDone = new bool [10];
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (15));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rstarts = new int [] {0' 0' 0' 0' 0' 0' 1' 1' 2' 3};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rstarts = new int [] {0' 0' 0' 0' 0' 0' 1' 1' 2' 3};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rends = new int [] {0' 0' 1' 2' 2' 3' 3' 4' 5' 5};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rends = new int [] {0' 0' 1' 2' 2' 3' 3' 4' 5' 5};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rends = new int [] {0' 0' 1' 2' 2' 3' 3' 4' 5' 5};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rends = new int [] {0' 0' 1' 2' 2' 3' 3' 4' 5' 5};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rends = new int [] {0' 0' 1' 2' 2' 3' 3' 4' 5' 5};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rends = new int [] {0' 0' 1' 2' 2' 3' 3' 4' 5' 5};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: int [] rends = new int [] {0' 0' 1' 2' 2' 3' 3' 4' 5' 5};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin,The following statement contains a magic number: l < 10
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Take (10)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: bool ['] results = new bool [10' 10];
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: bool ['] results = new bool [10' 10];
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: bool [] groupDone = new bool [10];
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (15));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: Assert.IsFalse (results [7' 2]' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoin2,The following statement contains a magic number: Assert.IsFalse (results [7' 2]' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftSequenceError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Throw<int> (new SystemException ())'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftSequenceError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Throw<int> (new SystemException ())'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftSequenceError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Throw<int> (new SystemException ())'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftSequenceError,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (15));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightSequenceError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Throw<int> (new SystemException ())'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightSequenceError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Throw<int> (new SystemException ())'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightSequenceError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Throw<int> (new SystemException ())'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1500)' scheduler)'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightSequenceError,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (15));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftDurationError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Throw<int> (new SystemException ())'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftDurationError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Throw<int> (new SystemException ())'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftDurationError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Throw<int> (new SystemException ())'  				r => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinLeftDurationError,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (15));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightDurationError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				r => Observable.Throw<int> (new SystemException ())'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightDurationError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				r => Observable.Throw<int> (new SystemException ())'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightDurationError,The following statement contains a magic number: var source = Observable.GroupJoin (  				Observable.Interval (TimeSpan.FromMilliseconds (500)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				Observable.Interval (TimeSpan.FromMilliseconds (800)' scheduler).Delay (TimeSpan.FromSeconds (1)' scheduler)'  				l => Observable.Interval (TimeSpan.FromMilliseconds (1600)' scheduler)'  				r => Observable.Throw<int> (new SystemException ())'  				(l' rob) => new { Left = l' Rights = rob }  			);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GroupJoinRightDurationError,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (15));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Interval,The following statement contains a magic number: var interval = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (6);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Interval,The following statement contains a magic number: var interval = Observable.Interval (TimeSpan.FromMilliseconds (100)).Take (6);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Interval,The following statement contains a magic number: Thread.Sleep (400);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Interval,The following statement contains a magic number: SpinWait.SpinUntil (() => done == 2' 1000);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Interval,The following statement contains a magic number: SpinWait.SpinUntil (() => done == 2' 1000);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Interval,The following statement contains a magic number: Assert.AreEqual (2' done' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Interval,The following statement contains a magic number: Assert.IsTrue (diff > 2' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,LongCountErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).LongCount ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,MaxByErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).MaxBy (v => v);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,MaxByErrorSelector,The following statement contains a magic number: var source = Observable.Range (0' 3).MaxBy<int'int> (v => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,MinByErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).MinBy (v => v);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,MinByErrorSelector,The following statement contains a magic number: var source = Observable.Range (0' 3).MaxBy<int'int> (v => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,RangeErrorScheduler,The following statement contains a magic number: var source = Observable.Range (0' 3' new ErrorScheduler ());
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Retry,The following statement contains a magic number: var source = Observable.Range (0' 4).Concat (Observable.Throw<int> (new Exception ("failure"))).Retry (2);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Retry,The following statement contains a magic number: var source = Observable.Range (0' 4).Concat (Observable.Throw<int> (new Exception ("failure"))).Retry (2);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Retry,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => done' 500)' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Retry,The following statement contains a magic number: Assert.AreEqual (12' i' "#4");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,RetryZero,The following statement contains a magic number: var source = Observable.Range (0' 4).Concat (Observable.Throw<int> (new Exception ("failure"))).Retry (0);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,RetryZero,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => done' 500)' "#3");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: var source = Observable.Interval (TimeSpan.FromMilliseconds (300)' scheduler).Delay (TimeSpan.FromSeconds (2)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: var source = Observable.Interval (TimeSpan.FromMilliseconds (300)' scheduler).Delay (TimeSpan.FromSeconds (2)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: var sampler = Observable.Interval (TimeSpan.FromMilliseconds (1000)' scheduler).Take (10);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: var sampler = Observable.Interval (TimeSpan.FromMilliseconds (1000)' scheduler).Take (10);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromMilliseconds (300));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: i < 50
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (43' l.Count' "#1");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Sample,The following statement contains a magic number: Assert.AreEqual (new long [] {2' 5' 8' 12' 15' 18' 22' 25}' l2.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SelectErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).Select (v => v);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SelectErrorSelector,The following statement contains a magic number: var source = Observable.Range (0' 3).Select<int'int> (v => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SelectManyObservable,The following statement contains a magic number: var source = Observable.Range (0' 5).SelectMany (n => f (n));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SelectManyObservable,The following statement contains a magic number: Assert.AreEqual (new int [] {0' 1' 2' 3' 4}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SelectManyObservable,The following statement contains a magic number: Assert.AreEqual (new int [] {0' 1' 2' 3' 4}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SelectManyObservable,The following statement contains a magic number: Assert.AreEqual (new int [] {0' 1' 2' 3' 4}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).Skip (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).Skip (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).Skip (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipDuration,The following statement contains a magic number: var array = Enumerable.Range (2' 8).ToArray ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipDuration,The following statement contains a magic number: var array = Enumerable.Range (2' 8).ToArray ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipLast (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipLast (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipLast (TimeSpan.FromMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastDuration,The following statement contains a magic number: var array = Enumerable.Range (0' 7).ToArray ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipUntil,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipUntil (scheduler.Now.AddMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipUntil,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipUntil (scheduler.Now.AddMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipUntil,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler).Take (10).SkipUntil (scheduler.Now.AddMilliseconds (300)' scheduler).Subscribe (v => l.Add (v));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipUntil,The following statement contains a magic number: var array = Enumerable.Range (2' 8).ToArray ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipUntil,The following statement contains a magic number: var array = Enumerable.Range (2' 8).ToArray ();
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).SkipLast (3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,SkipLastErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).SkipLast (3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Start,The following statement contains a magic number: Observable.Start (() => { Thread.Sleep (200); throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).TakeLast (3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).TakeLast (3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeWhile,The following statement contains a magic number: var source = Observable.Range (0' 5).TakeWhile (i => i != 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeWhile,The following statement contains a magic number: var source = Observable.Range (0' 5).TakeWhile (i => i != 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (5)  				.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (5)  				.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 4' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 4' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 4' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 4' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (10)  				.TakeWhile (i => i != 5)  				.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (10)  				.TakeWhile (i => i != 5)  				.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (10)  				.TakeWhile (i => i != 5)  				.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: array = new long [] {0' 1' 2' 3' 4' 600};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: array = new long [] {0' 1' 2' 3' 4' 600};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: array = new long [] {0' 1' 2' 3' 4' 600};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeCannotBeSimplyTakeWhileCount,The following statement contains a magic number: array = new long [] {0' 1' 2' 3' 4' 600};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (TimeSpan.FromMilliseconds (500)' scheduler)  					.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (TimeSpan.FromMilliseconds (500)' scheduler)  					.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeDuration,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeDuration,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeDuration,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (9)  					.TakeLast (TimeSpan.FromMilliseconds (500)' scheduler)  					.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (9)  					.TakeLast (TimeSpan.FromMilliseconds (500)' scheduler)  					.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.Take (9)  					.TakeLast (TimeSpan.FromMilliseconds (500)' scheduler)  					.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: var array = new long [] {4' 5' 6' 7' 8' 900};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: var array = new long [] {4' 5' 6' 7' 8' 900};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: var array = new long [] {4' 5' 6' 7' 8' 900};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: var array = new long [] {4' 5' 6' 7' 8' 900};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: var array = new long [] {4' 5' 6' 7' 8' 900};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeLastDuration,The following statement contains a magic number: var array = new long [] {4' 5' 6' 7' 8' 900};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeUntilDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.TakeUntil (scheduler.Now.AddMilliseconds (500)' scheduler)  					.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeUntilDuration,The following statement contains a magic number: Observable.Interval (TimeSpan.FromMilliseconds (100)' scheduler)  				.TakeUntil (scheduler.Now.AddMilliseconds (500)' scheduler)  					.Subscribe (v => l.Add (v)' () => l.Add (scheduler.Now.Millisecond));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeUntilDuration,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeUntilDuration,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeUntilDuration,The following statement contains a magic number: var array = new long [] {0' 1' 2' 3' 500};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeWhileErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).TakeWhile (i => i < 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeWhileErrorSequence,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).TakeWhile (i => i < 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TakeWhileErrorSelector,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).TakeWhile (i => { throw new MyException (); });
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle,The following statement contains a magic number: var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (100)' scheduler)).Throttle (TimeSpan.FromMilliseconds (50)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle,The following statement contains a magic number: var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (100)' scheduler)).Throttle (TimeSpan.FromMilliseconds (50)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle,The following statement contains a magic number: var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (100)' scheduler)).Throttle (TimeSpan.FromMilliseconds (50)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle,The following statement contains a magic number: var source = Observable.Range (1' 3).Concat (Observable.Return (2).Delay (TimeSpan.FromMilliseconds (100)' scheduler)).Throttle (TimeSpan.FromMilliseconds (50)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 2}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle,The following statement contains a magic number: Assert.AreEqual (new int [] {3' 2}' l.ToArray ()' "#2");
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: var input = (from text in subject select text).Throttle (TimeSpan.FromSeconds (0.5)' scheduler).Timestamp (scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: int [] vals = {100' 600' 300' 600' 400' 900' 500' 800};
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Throttle2,The following statement contains a magic number: i < 10
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TimeoutInTime,The following statement contains a magic number: var source = Observable.Range (0' 3).Timeout (TimeSpan.FromSeconds (1)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TimeoutOutOfTime,The following statement contains a magic number: var source = Observable.Interval (TimeSpan.FromSeconds (1)' scheduler).Take (2).Timeout (TimeSpan.FromSeconds (1)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TimeoutOutOfTime,The following statement contains a magic number: scheduler.AdvanceBy (TimeSpan.FromSeconds (5));
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,TimeoutErrorSelector,The following statement contains a magic number: var source = Observable.Range (0' 3).Concat (Observable.Throw<int> (new SystemException ())).Timeout (TimeSpan.FromSeconds (1)' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Where,The following statement contains a magic number: var source = Observable.Range (0' 5).Where (i => i < 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,Where,The following statement contains a magic number: var source = Observable.Range (0' 5).Where (i => i < 3);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts,The following statement contains a magic number: WindowCounts (5' 3' 7' expected);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts,The following statement contains a magic number: WindowCounts (5' 3' 7' expected);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts,The following statement contains a magic number: WindowCounts (5' 3' 7' expected);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts2,The following statement contains a magic number: WindowCounts (3' 5' 4' expected);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts2,The following statement contains a magic number: WindowCounts (3' 5' 4' expected);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts2,The following statement contains a magic number: WindowCounts (3' 5' 4' expected);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowCounts,The following statement contains a magic number: var sources = Observable.Range (0' 20).Window (count' skip);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans,The following statement contains a magic number: var interval = TimeSpan.FromMilliseconds (100);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans,The following statement contains a magic number: var span = TimeSpan.FromMilliseconds (300);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans,The following statement contains a magic number: var shift = TimeSpan.FromMilliseconds (500);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans,The following statement contains a magic number: var total = TimeSpan.FromMilliseconds (1500);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans,The following statement contains a magic number: var sources = Observable.Interval (interval' scheduler).Take (15).Window (span' shift' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans,The following statement contains a magic number: bool [] windowDone = new bool [4];
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans2,The following statement contains a magic number: var interval = TimeSpan.FromMilliseconds (100);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans2,The following statement contains a magic number: var span = TimeSpan.FromMilliseconds (500);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans2,The following statement contains a magic number: var shift = TimeSpan.FromMilliseconds (300);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans2,The following statement contains a magic number: var total = TimeSpan.FromMilliseconds (1500);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans2,The following statement contains a magic number: var sources = Observable.Interval (interval' scheduler).Take (15).Window (span' shift' scheduler);
Magic Number,System.Reactive.Linq.Tests,ObservableTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,WindowTimeSpans2,The following statement contains a magic number: bool [] windowDone = new bool [6];
Magic Number,System.Reactive.Linq.Tests,Resource,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Linq\ObservableTest.cs,GetObservable,The following statement contains a magic number: return Observable.Range (0' 3);
Magic Number,System.Reactive.Subjects.Tests,SubjectSequenceTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Subjects\SubjectSequenceTest.cs,OnNextAfterOnCompletedIgnored,The following statement contains a magic number: RunTest<int> (Subjects.ProcessAll' sub => {  				int i = 0;  				sub.Subscribe (v => i += v);  				sub.OnNext (3);  				sub.OnNext (4);  				sub.OnCompleted ();  				sub.OnNext (5);  				Assert.AreEqual (7' i' "#1 " + sub);  			});
Magic Number,System.Reactive.Subjects.Tests,SubjectSequenceTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Subjects\SubjectSequenceTest.cs,OnNextAfterOnCompletedIgnored,The following statement contains a magic number: RunTest<int> (Subjects.ProcessAll' sub => {  				int i = 0;  				sub.Subscribe (v => i += v);  				sub.OnNext (3);  				sub.OnNext (4);  				sub.OnCompleted ();  				sub.OnNext (5);  				Assert.AreEqual (7' i' "#1 " + sub);  			});
Magic Number,System.Reactive.Subjects.Tests,SubjectSequenceTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Subjects\SubjectSequenceTest.cs,OnNextAfterOnCompletedIgnored,The following statement contains a magic number: RunTest<int> (Subjects.ProcessAll' sub => {  				int i = 0;  				sub.Subscribe (v => i += v);  				sub.OnNext (3);  				sub.OnNext (4);  				sub.OnCompleted ();  				sub.OnNext (5);  				Assert.AreEqual (7' i' "#1 " + sub);  			});
Magic Number,System.Reactive.Subjects.Tests,SubjectSequenceTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Subjects\SubjectSequenceTest.cs,OnNextAfterOnCompletedIgnored,The following statement contains a magic number: RunTest<int> (Subjects.ProcessAll' sub => {  				int i = 0;  				sub.Subscribe (v => i += v);  				sub.OnNext (3);  				sub.OnNext (4);  				sub.OnCompleted ();  				sub.OnNext (5);  				Assert.AreEqual (7' i' "#1 " + sub);  			});
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToObservable3,The following statement contains a magic number: ToObservable (2);
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToObservable,The following statement contains a magic number: var task = new Task<int> (() => {  				Thread.Sleep (100);  				return 5;  				});
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToObservable,The following statement contains a magic number: var task = new Task<int> (() => {  				Thread.Sleep (100);  				return 5;  				});
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToObservable,The following statement contains a magic number: startStage == 2
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToObservable,The following statement contains a magic number: Assert.IsTrue (SpinWait.SpinUntil (() => done' 200)' "#1");
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToObservable,The following statement contains a magic number: Assert.AreEqual (5' result' "#2");
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToTask,The following statement contains a magic number: var task = Observable.Range (0' 3).ToTask ();
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToTask,The following statement contains a magic number: SpinWait.SpinUntil (() => task.Status == TaskStatus.RanToCompletion' 100);
Magic Number,System.Reactive.Threading.Tasks.Tests,TaskObservableExtensionsTest,D:\research\architectureSmells\repos\atsushieno_mono-reactive\System.Reactive.Tests\System.Reactive.Threading.Tasks\TaskObservableExtensionsTest.cs,ToTask,The following statement contains a magic number: Assert.AreEqual (2' task.Result' "#2");
