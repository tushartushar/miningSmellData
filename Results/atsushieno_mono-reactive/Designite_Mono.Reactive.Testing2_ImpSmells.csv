Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Mono.Reactive.Testing,TestableObservable<T>,D:\research\architectureSmells\repos\atsushieno_mono-reactive\Mono.Reactive.Testing\Mono.Reactive.Testing.cs,Subscribe,The length of the statement  "			// FIXME: I wonder if Subscription records the actual disposal time. If so' this should return IDisposable that involves setting disposal time on the subscription instance. " is 172.
Long Statement,Mono.Reactive.Testing,ReactiveAssert,D:\research\architectureSmells\repos\atsushieno_mono-reactive\Mono.Reactive.Testing\Mono.Reactive.Testing.cs,AreElementsEqual,The length of the statement  "			var source = iex.Zip (iac' (e' a) => { Assert.AreEqual (e.Value' a.Value' String.Format ("{0} (Items differ at index {1})"' message' e.Index)); return Unit.Default; }); " is 168.
Long Statement,Mono.Reactive.Testing,ReactiveAssert,D:\research\architectureSmells\repos\atsushieno_mono-reactive\Mono.Reactive.Testing\Mono.Reactive.Testing.cs,AreElementsEqual,The length of the statement  "			dis.Disposable = source.Finally<Unit> (() => dis.Dispose ()).Subscribe (v => {}' () => Assert.AreEqual (endE' endA' String.Format ("{0} (Items counts differ: expected {1} but got {2})"' endE' endA))); " is 200.
Long Statement,Mono.Reactive.Testing,Subscription,D:\research\architectureSmells\repos\atsushieno_mono-reactive\Mono.Reactive.Testing\Mono.Reactive.Testing.cs,ToString,The length of the statement  "			return String.Format ("({0}' {1})"' sub' unsub == Infinite ? "Infinite" : unsub.ToString (CultureInfo.InvariantCulture)); " is 121.
Magic Number,Mono.Reactive.Testing,Subscription,D:\research\architectureSmells\repos\atsushieno_mono-reactive\Mono.Reactive.Testing\Mono.Reactive.Testing.cs,GetHashCode,The following statement contains a magic number: return (int) ((sub << 17) + unsub);
