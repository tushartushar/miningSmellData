Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WealthLabDataConverter.Library.Core,FundamentalDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\FundamentalDataConverter.cs,CreateItem,Cyclomatic complexity of the method is 20
Complex Method,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ProcessDataFromFile,Cyclomatic complexity of the method is 10
Complex Method,WealthLabDataConverter.Library.Logging,RichTextBoxAppender,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Logging\RichTextBoxAppender.cs,UpdateControl,Cyclomatic complexity of the method is 15
Complex Method,WealthLabDataConverter.Library.Models.Fundamental,InsiderTransaction,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\InsiderTransaction.cs,FormatValue,Cyclomatic complexity of the method is 9
Complex Method,WealthLabDataConverter.Library.Models,TimeFrame,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\TimeFrame.cs,GetTimeFrame,Cyclomatic complexity of the method is 10
Long Parameter List,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,SaveToFile,The method has 5 parameters.
Long Statement,WealthLabDataConverter.Library.Core,FundamentalDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\FundamentalDataConverter.cs,ConstructSavePath,The length of the statement  "	return p.OutputPath + "\\" + dataTypeFolder + "\\" + provider + "\\" + firstLetterOfSymbol + "\\" + securityName + p.FileExtension; " is 131.
Long Statement,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,SaveToFile,The length of the statement  "			streamWriter.WriteLine (dt + p.Delimiter + d.Open.ToString (p.OHLCFormat) + p.Delimiter + d.High.ToString (p.OHLCFormat) + p.Delimiter + d.Low.ToString (p.OHLCFormat) + p.Delimiter + d.Close.ToString (p.OHLCFormat) + p.Delimiter + d.Volume.ToString (p.VFormat)); " is 262.
Long Statement,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ConstructSavePath,The length of the statement  "	return pathToFolder + "\\" + dataTypeFolder + "\\" + timeFramePath + "\\" + firstLetterOfSymbol + "\\" + symbolName + fileExtension; " is 132.
Magic Number,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ProcessDataFromFile,The following statement contains a magic number: using (var input = File.Open (fileName' FileMode.Open' FileAccess.Read' FileShare.Read)) {  	using (var reader = new BinaryReader (input)) {  		var value1 = reader.ReadDouble ();  		securityName = reader.ReadString ();  		var fullSecurityName = reader.ReadString ();  		timeFrameName = TimeFrame.GetTimeFrame (reader.ReadInt32 ());  		timeFrameInterval = reader.ReadInt32 ();  		var value2 = reader.ReadInt32 ();  		var value3 = reader.ReadInt32 ();  		for (var i = 0; i < value3; i++) {  			var seriesName = reader.ReadString ();  			var sumOnCollapse = reader.ReadBoolean ();  		}  		if (value1 >= 2.0) {  			var securityType = reader.ReadInt32 ();  		}  		if (value1 >= 3.0) {  			var value6 = reader.ReadInt32 ();  			while (value6 > 0) {  				value6--;  				_listDateTime.Add (new DateTime (reader.ReadInt64 ()));  			}  		}  		while (value2 > 0) {  			var md = new QuotesData ();  			md.DateTime = new DateTime (reader.ReadInt64 ());  			md.Open = reader.ReadDouble ();  			md.High = reader.ReadDouble ();  			md.Low = reader.ReadDouble ();  			md.Close = reader.ReadDouble ();  			md.Volume = reader.ReadDouble ();  			value2--;  			data.Add (md);  		}  	}  }  
Magic Number,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ProcessDataFromFile,The following statement contains a magic number: using (var input = File.Open (fileName' FileMode.Open' FileAccess.Read' FileShare.Read)) {  	using (var reader = new BinaryReader (input)) {  		var value1 = reader.ReadDouble ();  		securityName = reader.ReadString ();  		var fullSecurityName = reader.ReadString ();  		timeFrameName = TimeFrame.GetTimeFrame (reader.ReadInt32 ());  		timeFrameInterval = reader.ReadInt32 ();  		var value2 = reader.ReadInt32 ();  		var value3 = reader.ReadInt32 ();  		for (var i = 0; i < value3; i++) {  			var seriesName = reader.ReadString ();  			var sumOnCollapse = reader.ReadBoolean ();  		}  		if (value1 >= 2.0) {  			var securityType = reader.ReadInt32 ();  		}  		if (value1 >= 3.0) {  			var value6 = reader.ReadInt32 ();  			while (value6 > 0) {  				value6--;  				_listDateTime.Add (new DateTime (reader.ReadInt64 ()));  			}  		}  		while (value2 > 0) {  			var md = new QuotesData ();  			md.DateTime = new DateTime (reader.ReadInt64 ());  			md.Open = reader.ReadDouble ();  			md.High = reader.ReadDouble ();  			md.Low = reader.ReadDouble ();  			md.Close = reader.ReadDouble ();  			md.Volume = reader.ReadDouble ();  			value2--;  			data.Add (md);  		}  	}  }  
Magic Number,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ProcessDataFromFile,The following statement contains a magic number: using (var reader = new BinaryReader (input)) {  	var value1 = reader.ReadDouble ();  	securityName = reader.ReadString ();  	var fullSecurityName = reader.ReadString ();  	timeFrameName = TimeFrame.GetTimeFrame (reader.ReadInt32 ());  	timeFrameInterval = reader.ReadInt32 ();  	var value2 = reader.ReadInt32 ();  	var value3 = reader.ReadInt32 ();  	for (var i = 0; i < value3; i++) {  		var seriesName = reader.ReadString ();  		var sumOnCollapse = reader.ReadBoolean ();  	}  	if (value1 >= 2.0) {  		var securityType = reader.ReadInt32 ();  	}  	if (value1 >= 3.0) {  		var value6 = reader.ReadInt32 ();  		while (value6 > 0) {  			value6--;  			_listDateTime.Add (new DateTime (reader.ReadInt64 ()));  		}  	}  	while (value2 > 0) {  		var md = new QuotesData ();  		md.DateTime = new DateTime (reader.ReadInt64 ());  		md.Open = reader.ReadDouble ();  		md.High = reader.ReadDouble ();  		md.Low = reader.ReadDouble ();  		md.Close = reader.ReadDouble ();  		md.Volume = reader.ReadDouble ();  		value2--;  		data.Add (md);  	}  }  
Magic Number,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ProcessDataFromFile,The following statement contains a magic number: using (var reader = new BinaryReader (input)) {  	var value1 = reader.ReadDouble ();  	securityName = reader.ReadString ();  	var fullSecurityName = reader.ReadString ();  	timeFrameName = TimeFrame.GetTimeFrame (reader.ReadInt32 ());  	timeFrameInterval = reader.ReadInt32 ();  	var value2 = reader.ReadInt32 ();  	var value3 = reader.ReadInt32 ();  	for (var i = 0; i < value3; i++) {  		var seriesName = reader.ReadString ();  		var sumOnCollapse = reader.ReadBoolean ();  	}  	if (value1 >= 2.0) {  		var securityType = reader.ReadInt32 ();  	}  	if (value1 >= 3.0) {  		var value6 = reader.ReadInt32 ();  		while (value6 > 0) {  			value6--;  			_listDateTime.Add (new DateTime (reader.ReadInt64 ()));  		}  	}  	while (value2 > 0) {  		var md = new QuotesData ();  		md.DateTime = new DateTime (reader.ReadInt64 ());  		md.Open = reader.ReadDouble ();  		md.High = reader.ReadDouble ();  		md.Low = reader.ReadDouble ();  		md.Close = reader.ReadDouble ();  		md.Volume = reader.ReadDouble ();  		value2--;  		data.Add (md);  	}  }  
Magic Number,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ProcessDataFromFile,The following statement contains a magic number: if (value1 >= 2.0) {  	var securityType = reader.ReadInt32 ();  }  
Magic Number,WealthLabDataConverter.Library.Core,QuotesDataConverter,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Core\QuotesDataConverter.cs,ProcessDataFromFile,The following statement contains a magic number: if (value1 >= 3.0) {  	var value6 = reader.ReadInt32 ();  	while (value6 > 0) {  		value6--;  		_listDateTime.Add (new DateTime (reader.ReadInt64 ()));  	}  }  
Magic Number,WealthLabDataConverter.Library.Logging,RichTextBoxAppender,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Logging\RichTextBoxAppender.cs,UpdateControl,The following statement contains a magic number: if (RichTextBox.TextLength > 100000) {  	RichTextBox.Clear ();  	RichTextBox.SelectionColor = Color.Gray;  	RichTextBox.AppendText ("(earlier messages cleared because of log length)\n\n");  }  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental,Split,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\Split.cs,FormatValue,The following statement contains a magic number: while ((num3 * num3) > 0.00025) {  	num++;  	num3 = (num * num2) - ((int)((num * num2) + 0.5));  	if (num > 0x3e8) {  		break;  	}  }  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental,Split,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\Split.cs,FormatValue,The following statement contains a magic number: while ((num3 * num3) > 0.00025) {  	num++;  	num3 = (num * num2) - ((int)((num * num2) + 0.5));  	if (num > 0x3e8) {  		break;  	}  }  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental,Split,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\Split.cs,FormatValue,The following statement contains a magic number: num3 = (num * num2) - ((int)((num * num2) + 0.5));  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental,Dividend,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\Dividend.cs,FormatValue,The following statement contains a magic number: if (base.Value < 0.01) {  	result = (base.Value.ToString ("F4") + " per share Dividend");  }  else {  	result = (base.Value.ToString ("F") + " per share Dividend");  }  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental,EarningsPerShare,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\EarningsPerShare.cs,FormatValue,The following statement contains a magic number: if (base.Value < 0.01) {  	builder.Append (base.Value.ToString ("C4"));  }  else {  	builder.Append (base.Value.ToString ("C"));  }  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental,Economics,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\Economics.cs,FormatValue,The following statement contains a magic number: if (base.Value < 0.01) {  	builder.Append (base.Value.ToString ("C4"));  }  else {  	builder.Append (base.Value.ToString ("C"));  }  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental,Fundamentals,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\Fundamentals.cs,FormatValue,The following statement contains a magic number: if (value < 0.01) {  	return (value.ToString ("C4") + " millions (USD)");  }  
Magic Number,WealthLabDataConverter.Library.Models.Fundamental.Base,FundamentalBase,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\Fundamental\Base\FundamentalBase.cs,FormatValue,The following statement contains a magic number: if (Value < 0.01) {  	result = (Name + ":" + Value);  }  else {  	result = (Name + ":" + Value.ToString ("F2"));  }  
Magic Number,WealthLabDataConverter.Library.Models,TimeFrame,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\TimeFrame.cs,GetTimeFrame,The following statement contains a magic number: switch (type) {  case 0:  	return "Daily";  case 1:  	return "Weekly";  case 2:  	return "Monthly";  case 3:  	return "Minute";  case 4:  	return "Second";  case 5:  	return "Tick";  case 6:  	return "Quarterly";  case 7:  	return "Yearly";  default:  	throw new ArgumentOutOfRangeException ("type");  }  
Magic Number,WealthLabDataConverter.Library.Models,TimeFrame,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\TimeFrame.cs,GetTimeFrame,The following statement contains a magic number: switch (type) {  case 0:  	return "Daily";  case 1:  	return "Weekly";  case 2:  	return "Monthly";  case 3:  	return "Minute";  case 4:  	return "Second";  case 5:  	return "Tick";  case 6:  	return "Quarterly";  case 7:  	return "Yearly";  default:  	throw new ArgumentOutOfRangeException ("type");  }  
Magic Number,WealthLabDataConverter.Library.Models,TimeFrame,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\TimeFrame.cs,GetTimeFrame,The following statement contains a magic number: switch (type) {  case 0:  	return "Daily";  case 1:  	return "Weekly";  case 2:  	return "Monthly";  case 3:  	return "Minute";  case 4:  	return "Second";  case 5:  	return "Tick";  case 6:  	return "Quarterly";  case 7:  	return "Yearly";  default:  	throw new ArgumentOutOfRangeException ("type");  }  
Magic Number,WealthLabDataConverter.Library.Models,TimeFrame,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\TimeFrame.cs,GetTimeFrame,The following statement contains a magic number: switch (type) {  case 0:  	return "Daily";  case 1:  	return "Weekly";  case 2:  	return "Monthly";  case 3:  	return "Minute";  case 4:  	return "Second";  case 5:  	return "Tick";  case 6:  	return "Quarterly";  case 7:  	return "Yearly";  default:  	throw new ArgumentOutOfRangeException ("type");  }  
Magic Number,WealthLabDataConverter.Library.Models,TimeFrame,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\TimeFrame.cs,GetTimeFrame,The following statement contains a magic number: switch (type) {  case 0:  	return "Daily";  case 1:  	return "Weekly";  case 2:  	return "Monthly";  case 3:  	return "Minute";  case 4:  	return "Second";  case 5:  	return "Tick";  case 6:  	return "Quarterly";  case 7:  	return "Yearly";  default:  	throw new ArgumentOutOfRangeException ("type");  }  
Magic Number,WealthLabDataConverter.Library.Models,TimeFrame,C:\repos\AnCh7_WealthLabDataConverter\src\WealthLabDataConverter\Models\TimeFrame.cs,GetTimeFrame,The following statement contains a magic number: switch (type) {  case 0:  	return "Daily";  case 1:  	return "Weekly";  case 2:  	return "Monthly";  case 3:  	return "Minute";  case 4:  	return "Second";  case 5:  	return "Tick";  case 6:  	return "Quarterly";  case 7:  	return "Yearly";  default:  	throw new ArgumentOutOfRangeException ("type");  }  
