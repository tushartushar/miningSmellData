Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SubredditPostGrabber.Holders,SaveLoadData,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Holders\SaveLoadData.cs,LoadDirectoryOfComments,Cyclomatic complexity of the method is 9
Complex Method,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,Cyclomatic complexity of the method is 29
Complex Method,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,Cyclomatic complexity of the method is 9
Long Parameter List,SubredditPostGrabber.Holders,SaveLoadData,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Holders\SaveLoadData.cs,LoadDirectoryOfPosts,The method has 5 parameters.
Long Parameter List,SubredditPostGrabber.Holders,SaveLoadData,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Holders\SaveLoadData.cs,LoadDirectoryOfComments,The method has 5 parameters.
Long Parameter List,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsByAuthor,The method has 5 parameters.
Long Parameter List,SubredditPostGrabber.Utils,EmailHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\EmailHelper.cs,SendEmailViaGmail,The method has 6 parameters.
Long Parameter List,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetForPostsLastWeek,The method has 6 parameters.
Long Parameter List,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetForPostsInAYear,The method has 5 parameters.
Long Parameter List,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetWithWorksheetPerTag,The method has 9 parameters.
Long Parameter List,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The method has 7 parameters.
Long Statement,SubredditPostGrabber.Holders,MattPost,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Holders\MattPost.cs,ToRedditString,The length of the statement  "	return string.Format ("{0} | {1} | {2} | {3} | {4} | {5} | {6} | {7}"' Votes' Tag' Title' Description.Length' CommentCount' IsSelfPost' PostDate' Author); " is 154.
Long Statement,SubredditPostGrabber.Holders,MattPost,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Holders\MattPost.cs,ToString,The length of the statement  "	return string.Format ("({0}) [{1}]{2} - [DL: {3}] [CC: {4}] [Self:{5}] [UTC:{6}] by {7}"' Votes' Tag' Title' Description.Length' CommentCount' IsSelfPost' PostDate' Author); " is 173.
Long Statement,SubredditPostGrabber.Holders,SaveLoadData,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Holders\SaveLoadData.cs,LoadDirectoryOfPosts,The length of the statement  "			Console.WriteLine ("File {0} had {1} non-unique posts. That's {2} unique posts."' file' nonUnique' newPosts.Count - nonUnique); " is 127.
Long Statement,SubredditPostGrabber.Holders,SaveLoadData,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Holders\SaveLoadData.cs,LoadDirectoryOfComments,The length of the statement  "			Console.WriteLine ("File {0} had {1} non-unique comments. That's {2} unique comments."' file' nonUnique' newComments.Count - nonUnique); " is 136.
Long Statement,SubredditPostGrabber.Processors,GetCommentsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetCommentsFromReddit.cs,GetCommentsForPosts,The length of the statement  "			Console.WriteLine ("Problem when getting comments for post {0}. Stacktrace: {1}\nURL: {2}"' post.Title' ex.ToString ()' post.URL); " is 130.
Long Statement,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The length of the statement  "			SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' letter' counter))' posts); " is 134.
Long Statement,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPostsByType,The length of the statement  "		SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' getBy' counter))' posts); " is 133.
Long Statement,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsByAuthor,The length of the statement  "			SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' "Authors"' started' posts.Count))' authorPosts); " is 147.
Long Statement,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsByAuthor,The length of the statement  "	SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (SaveFileFormatString' "Authors"' started))' authorPosts); " is 125.
Long Statement,SubredditPostGrabber.Processors,GetSubredditData,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetSubredditData.cs,GetData,The length of the statement  "	SaveLoadData.SaveSubreddit (Path.Combine (SaveDirectory' string.Format ("{0}SubredditData_{1}.xml"' SubredditName' scrapedAt.ToString (DateTimeFormatString)))' mattSubreddit); " is 175.
Long Statement,SubredditPostGrabber.Utils,EmailHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\EmailHelper.cs,SendEmailViaGmail,The length of the statement  "		Console.WriteLine ("Sent email from address {0} to people {1} with subject {2}"' gmailFromAddress' toAddresses' subject); " is 121.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetForPostsLastWeek,The length of the statement  "	var path = SpreadsheetHelper.CreateSpreadsheet (spreadsheetSaveDir' lastWeekByVotes' fileName' "Top by Votes"' DateFormat.NormalWithDayOfWeek); " is 143.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetForPostsLastWeek,The length of the statement  "	SpreadsheetHelper.CreateSpreadsheet (spreadsheetSaveDir' lastWeekByCommentCount' fileName' "Top by Comment Count"' DateFormat.NormalWithDayOfWeek' true); " is 153.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetForPostsLastWeek,The length of the statement  "	SpreadsheetHelper.CreateSpreadsheet (spreadsheetSaveDir' lastWeekByDate' fileName' "Sorted by Date"' DateFormat.NormalWithDayOfWeek' true); " is 139.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetForPostsInAYear,The length of the statement  "	var postsFromThisYear = posts.Where (x => x.PostDate >= yearStartDate && x.PostDate < yearStartDate.AddYears (1)).ToList (); " is 124.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetForPostsInAYear,The length of the statement  "	return SpreadsheetHelper.CreateSpreadsheetWithWorksheetPerTag (postsFromThisYear' spreadsheetSaveDir' subredditName + " " + year); " is 130.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetWithWorksheetPerTag,The length of the statement  "			path = SpreadsheetHelper.CreateSpreadsheet (spreadsheetSaveDir' posts.Where (x => x.GetTag ().CIEqual (tag.Tag)).ToList ()' fileNameWithoutExtension' tag.Tag' DateFormat.Normal' allTags.First () == tag ? false : true); " is 218.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheetWithWorksheetPerTag,The length of the statement  "			SpreadsheetHelper.CreateSpreadsheet (spreadsheetSaveDir' posts.Where (x => x.GetTag ().CIEqual (tag.Tag)).ToList ()' fileNameWithoutExtension' tag.Tag' DateFormat.Normal' allTags.First () == tag ? false : true); " is 211.
Long Statement,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The length of the statement  "			worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author); " is 134.
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The following statement contains a magic number: foreach (var letter in chars) {  	var posts = new List<MattPost> ();  	var started = DateTime.Now.ToString (DateTimeFormatString);  	int counter = 0;  	//1000 is all we can get :(  	var postCount = 1000;  	var lastCounterValue = counter;  	var numTimesStayedSame = 0;  	//postCount.Dump("Total number of Posts we are going to try to get!");  	while (counter < postCount) {  		lastCounterValue = counter;  		var reddit = new Reddit ();  		var subreddit = reddit.GetSubreddit (Subreddit);  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			try {  				counter++;  				var mattPost = ConvertRedditSharpPostIntoMattPost (post);  				posts.Add (mattPost);  				Console.WriteLine ("{0} - {1}"' counter' mattPost);  			}  			catch (Exception ex) {  				Console.WriteLine (ex.ToString ());  			}  		}  		SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' letter' counter))' posts);  		if (lastCounterValue == counter) {  			numTimesStayedSame++;  		}  		//If we've not changed the amount we're up to 4 times in a row' break out of here.  		if (numTimesStayedSame > 4) {  			break;  		}  	}  	SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (SaveFileFormatString' letter' started))' posts);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The following statement contains a magic number: foreach (var letter in chars) {  	var posts = new List<MattPost> ();  	var started = DateTime.Now.ToString (DateTimeFormatString);  	int counter = 0;  	//1000 is all we can get :(  	var postCount = 1000;  	var lastCounterValue = counter;  	var numTimesStayedSame = 0;  	//postCount.Dump("Total number of Posts we are going to try to get!");  	while (counter < postCount) {  		lastCounterValue = counter;  		var reddit = new Reddit ();  		var subreddit = reddit.GetSubreddit (Subreddit);  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			try {  				counter++;  				var mattPost = ConvertRedditSharpPostIntoMattPost (post);  				posts.Add (mattPost);  				Console.WriteLine ("{0} - {1}"' counter' mattPost);  			}  			catch (Exception ex) {  				Console.WriteLine (ex.ToString ());  			}  		}  		SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' letter' counter))' posts);  		if (lastCounterValue == counter) {  			numTimesStayedSame++;  		}  		//If we've not changed the amount we're up to 4 times in a row' break out of here.  		if (numTimesStayedSame > 4) {  			break;  		}  	}  	SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (SaveFileFormatString' letter' started))' posts);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The following statement contains a magic number: foreach (var letter in chars) {  	var posts = new List<MattPost> ();  	var started = DateTime.Now.ToString (DateTimeFormatString);  	int counter = 0;  	//1000 is all we can get :(  	var postCount = 1000;  	var lastCounterValue = counter;  	var numTimesStayedSame = 0;  	//postCount.Dump("Total number of Posts we are going to try to get!");  	while (counter < postCount) {  		lastCounterValue = counter;  		var reddit = new Reddit ();  		var subreddit = reddit.GetSubreddit (Subreddit);  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			try {  				counter++;  				var mattPost = ConvertRedditSharpPostIntoMattPost (post);  				posts.Add (mattPost);  				Console.WriteLine ("{0} - {1}"' counter' mattPost);  			}  			catch (Exception ex) {  				Console.WriteLine (ex.ToString ());  			}  		}  		SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' letter' counter))' posts);  		if (lastCounterValue == counter) {  			numTimesStayedSame++;  		}  		//If we've not changed the amount we're up to 4 times in a row' break out of here.  		if (numTimesStayedSame > 4) {  			break;  		}  	}  	SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (SaveFileFormatString' letter' started))' posts);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The following statement contains a magic number: while (counter < postCount) {  	lastCounterValue = counter;  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		try {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		catch (Exception ex) {  			Console.WriteLine (ex.ToString ());  		}  	}  	SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' letter' counter))' posts);  	if (lastCounterValue == counter) {  		numTimesStayedSame++;  	}  	//If we've not changed the amount we're up to 4 times in a row' break out of here.  	if (numTimesStayedSame > 4) {  		break;  	}  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The following statement contains a magic number: while (counter < postCount) {  	lastCounterValue = counter;  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		try {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		catch (Exception ex) {  			Console.WriteLine (ex.ToString ());  		}  	}  	SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' letter' counter))' posts);  	if (lastCounterValue == counter) {  		numTimesStayedSame++;  	}  	//If we've not changed the amount we're up to 4 times in a row' break out of here.  	if (numTimesStayedSame > 4) {  		break;  	}  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The following statement contains a magic number: foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  	try {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.ToString ());  	}  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,LoadPostsFromRedditViaSearching,The following statement contains a magic number: if (numTimesStayedSame > 4) {  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPostsByType,The following statement contains a magic number: while (counter < totalPostsToGet) {  	lastCounterValue = counter;  	counter = GetPosts (counter' getBy' posts' out posts);  	SaveLoadData.SavePosts (Path.Combine (SaveDirectory' string.Format (TemporarySaveFileFormatString' started' getBy' counter))' posts);  	if (lastCounterValue == counter) {  		numTimesStayedSame++;  	}  	//If we've not changed the amount we're up to 4 times in a row' break out of here.  	if (numTimesStayedSame > 4) {  		break;  	}  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPostsByType,The following statement contains a magic number: if (numTimesStayedSame > 4) {  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: try {  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	switch (getBy) {  	case GetBy.GetAllViaSearch:  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopAll:  		foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopMonth:  		foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopYear:  		foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Hot:  		foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.New:  		foreach (var post in subreddit.New.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Posts:  		foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	}  	return counter;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	return counter;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: try {  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	switch (getBy) {  	case GetBy.GetAllViaSearch:  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopAll:  		foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopMonth:  		foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopYear:  		foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Hot:  		foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.New:  		foreach (var post in subreddit.New.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Posts:  		foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	}  	return counter;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	return counter;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: try {  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	switch (getBy) {  	case GetBy.GetAllViaSearch:  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopAll:  		foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopMonth:  		foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopYear:  		foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Hot:  		foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.New:  		foreach (var post in subreddit.New.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Posts:  		foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	}  	return counter;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	return counter;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: try {  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	switch (getBy) {  	case GetBy.GetAllViaSearch:  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopAll:  		foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopMonth:  		foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopYear:  		foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Hot:  		foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.New:  		foreach (var post in subreddit.New.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Posts:  		foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	}  	return counter;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	return counter;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: try {  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	switch (getBy) {  	case GetBy.GetAllViaSearch:  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopAll:  		foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopMonth:  		foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopYear:  		foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Hot:  		foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.New:  		foreach (var post in subreddit.New.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Posts:  		foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	}  	return counter;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	return counter;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: try {  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	switch (getBy) {  	case GetBy.GetAllViaSearch:  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopAll:  		foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopMonth:  		foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopYear:  		foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Hot:  		foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.New:  		foreach (var post in subreddit.New.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Posts:  		foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	}  	return counter;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	return counter;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: try {  	var reddit = new Reddit ();  	var subreddit = reddit.GetSubreddit (Subreddit);  	switch (getBy) {  	case GetBy.GetAllViaSearch:  		foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopAll:  		foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopMonth:  		foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.GetTopYear:  		foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Hot:  		foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.New:  		foreach (var post in subreddit.New.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	case GetBy.Posts:  		foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  			counter++;  			var mattPost = ConvertRedditSharpPostIntoMattPost (post);  			posts.Add (mattPost);  			Console.WriteLine ("{0} - {1}"' counter' mattPost);  		}  		break;  	}  	return counter;  }  catch (Exception ex) {  	Console.WriteLine (ex.ToString ());  	return counter;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  	counter++;  	var mattPost = ConvertRedditSharpPostIntoMattPost (post);  	posts.Add (mattPost);  	Console.WriteLine ("{0} - {1}"' counter' mattPost);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  	counter++;  	var mattPost = ConvertRedditSharpPostIntoMattPost (post);  	posts.Add (mattPost);  	Console.WriteLine ("{0} - {1}"' counter' mattPost);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  	counter++;  	var mattPost = ConvertRedditSharpPostIntoMattPost (post);  	posts.Add (mattPost);  	Console.WriteLine ("{0} - {1}"' counter' mattPost);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  	counter++;  	var mattPost = ConvertRedditSharpPostIntoMattPost (post);  	posts.Add (mattPost);  	Console.WriteLine ("{0} - {1}"' counter' mattPost);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  	counter++;  	var mattPost = ConvertRedditSharpPostIntoMattPost (post);  	posts.Add (mattPost);  	Console.WriteLine ("{0} - {1}"' counter' mattPost);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: foreach (var post in subreddit.New.Skip (counter).Take (100)) {  	counter++;  	var mattPost = ConvertRedditSharpPostIntoMattPost (post);  	posts.Add (mattPost);  	Console.WriteLine ("{0} - {1}"' counter' mattPost);  }  
Magic Number,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following statement contains a magic number: foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  	counter++;  	var mattPost = ConvertRedditSharpPostIntoMattPost (post);  	posts.Add (mattPost);  	Console.WriteLine ("{0} - {1}"' counter' mattPost);  }  
Magic Number,SubredditPostGrabber.Utils,EmailHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\EmailHelper.cs,SendEmailViaGmail,The following statement contains a magic number: using (var smtp = new SmtpClient {  	Host = "smtp.gmail.com"'  	Port = 587'  	EnableSsl = true'  	DeliveryMethod = SmtpDeliveryMethod.Network'  	UseDefaultCredentials = false'  	Credentials = new NetworkCredential (gmailFromAddress' gmailFromPassword)  }) {  	// The below two links you need to do on the gmail account you are sending from  	// https://g.co/allowaccess  	// https://www.google.com/settings/security/lesssecureapps  	smtp.Send (message);  	Console.WriteLine ("Sent email from address {0} to people {1} with subject {2}"' gmailFromAddress' toAddresses' subject);  }  
Magic Number,SubredditPostGrabber.Utils,ExtensionMethods,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\ExtensionMethods.cs,StartOfWeek,The following statement contains a magic number: if (diff < 0) {  	diff += 7;  }  
Magic Number,SubredditPostGrabber.Utils,ExtensionMethods,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\ExtensionMethods.cs,StartOfWeek,The following statement contains a magic number: diff += 7;  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: using (ExcelPackage package = new ExcelPackage (newFile)) {  	// add a new worksheet to the empty workbook  	ExcelWorksheet worksheet = package.Workbook.Worksheets.Add (workSheetTitle);  	var rowNumber = 1;  	for (int i = 1; i <= headerRow.Count; i++) {  		//Add the headers  		worksheet.Cells [rowNumber' i].Value = headerRow [i - 1];  		worksheet.Cells [rowNumber' i].Style.Font.Bold = true;  	}  	if (!package.Workbook.Styles.NamedStyles.Any (x => x.Name.CIEqual ("HyperLink"))) {  		var hyperlinkStyle = package.Workbook.Styles.CreateNamedStyle ("HyperLink");  		//This one is language dependent  		hyperlinkStyle.Style.Font.UnderLine = true;  		hyperlinkStyle.Style.Font.Color.SetColor (Color.Blue);  	}  	foreach (var post in posts) {  		rowNumber++;  		worksheet.Cells [rowNumber' 1].Value = post.Author;  		worksheet.Cells [rowNumber' 2].Value = post.Votes;  		worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  		worksheet.Cells [rowNumber' 4].Value = post.Title;  		worksheet.Cells [rowNumber' 5].Value = post.PostDate;  		worksheet.Cells [rowNumber' 6].Value = post.URL;  		worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  		worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  		worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  	}  	worksheet.Cells ["E2:E" + rowNumber.ToString ()].Style.Numberformat.Format = dateTimeFormatString;  	//Format as text   	worksheet.Calculate ();  	worksheet.Cells.AutoFitColumns (0);  	//Autofit columns for all cells  	package.Save ();  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: foreach (var post in posts) {  	rowNumber++;  	worksheet.Cells [rowNumber' 1].Value = post.Author;  	worksheet.Cells [rowNumber' 2].Value = post.Votes;  	worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  	worksheet.Cells [rowNumber' 4].Value = post.Title;  	worksheet.Cells [rowNumber' 5].Value = post.PostDate;  	worksheet.Cells [rowNumber' 6].Value = post.URL;  	worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  	worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  	worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  }  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 2].Value = post.Votes;  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 3].Value = post.CommentCount;  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 4].Value = post.Title;  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 5].Value = post.PostDate;  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 6].Value = post.URL;  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 6].Hyperlink = new Uri (post.URL);  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 6].StyleName = "HyperLink";  
Magic Number,SubredditPostGrabber.Utils,SpreadsheetHelper,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Utils\SpreadsheetHelper.cs,CreateSpreadsheet,The following statement contains a magic number: worksheet.Cells [rowNumber' 7].Value = string.Format ("[{0}]({1}) [{2}](/r/HFY/wiki/authors/{2})"' post.Title' post.URL' post.Author);  
Missing Default,SubredditPostGrabber.Processors,GetPostsFromReddit,C:\repos\uNople_SubredditPostGrabber\SubredditPostGrabber\Processors\GetPostsFromReddit.cs,GetPosts,The following switch statement is missing a default case: switch (getBy) {  case GetBy.GetAllViaSearch:  	foreach (var post in subreddit.GetAllViaSearch ().Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopAll:  	foreach (var post in subreddit.GetTop (FromTime.All).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopMonth:  	foreach (var post in subreddit.GetTop (FromTime.Month).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.GetTopYear:  	foreach (var post in subreddit.GetTop (FromTime.Year).Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Hot:  	foreach (var post in subreddit.Hot.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.New:  	foreach (var post in subreddit.New.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  case GetBy.Posts:  	foreach (var post in subreddit.Posts.Skip (counter).Take (100)) {  		counter++;  		var mattPost = ConvertRedditSharpPostIntoMattPost (post);  		posts.Add (mattPost);  		Console.WriteLine ("{0} - {1}"' counter' mattPost);  	}  	break;  }  
