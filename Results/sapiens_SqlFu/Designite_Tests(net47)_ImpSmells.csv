Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Tests._Fakes,FakeReader,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\_Fakes\FakeReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Tests._Fakes,FakeReader,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\_Fakes\FakeReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Statement,Tests,Setup,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Setup.cs,SqlFuConnection,The length of the statement  "                d.TableName = "Users" + new string(Guid.NewGuid().ToByteArray().ToBase64().Where(w=>(w>='a' && w<='z')).Take(5).ToArray()); " is 123.
Long Statement,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,use_simple_sql_builder,The length of the statement  "            var name=_db.SqlTo<string>(s=>s.AppendRaw($"select FirstName from {tname}").Append($" where Posts={posts}")).GetValue(); " is 120.
Long Statement,Tests.SqlServer,SqlServerTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\SqlServerTests.cs,GetConnection,The length of the statement  "            return Setup.SqlFuConnection(new SqlServer2012Provider(SqlClientFactory.Instance.CreateConnection)' Setup.SqlServerConnection); " is 127.
Long Statement,Tests.SqlServer,SqlServerTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\SqlServerTests.cs,datediff,The length of the statement  "            var dif = _db.QueryValue(q => q.From<User>().Select(d => d.DateDiff(TSqlDatePart.Hour' d.CreatedOn' DateTime.Now.AddHours(3)))); " is 128.
Long Statement,Tests.Usage,SqlServerSProcTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\SqlServerSProcTests.cs,GetConnection,The length of the statement  "            return new SqlFuConnection(new SqlServer2012Provider(SqlClientFactory.Instance.CreateConnection)'Setup.SqlServerConnection'new SqlFuConfig()); " is 142.
Virtual Method Call from Constructor,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,ADBOperationsTests,The constructor "ADBOperationsTests" calls a virtual method "GetConnection".
Virtual Method Call from Constructor,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,ADBOperationsTests,The constructor "ADBOperationsTests" calls a virtual method "Init".
Virtual Method Call from Constructor,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,AStoredProcsTests,The constructor "AStoredProcsTests" calls a virtual method "GetConnection".
Virtual Method Call from Constructor,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,AStoredProcsTests,The constructor "AStoredProcsTests" calls a virtual method "CreateSproc".
Magic Number,Tests,Setup,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Setup.cs,SqlFuConnection,The following statement contains a magic number: c.ConfigureTableForPoco<User>(d =>              {                                    d.TableName = "Users" + new string(Guid.NewGuid().ToByteArray().ToBase64().Where(w=>(w>='a' && w<='z')).Take(5).ToArray());                  d.Property(f => f.Id).IsAutoincremented();                  d.IgnoreProperties(f=>f.Ignored);                                });
Magic Number,Tests,Setup,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Setup.cs,FakeReader,The following statement contains a magic number: data.Add("Decimal"'34);
Magic Number,Tests.Builders,DeleteTableBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\DeleteTableBuilderTests.cs,delete_with_criteria,The following statement contains a magic number: Expression<Func<Post' object>> l = d => d.SomeId == 23;
Magic Number,Tests.Builders,DeleteTableBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\DeleteTableBuilderTests.cs,delete_with_criteria,The following statement contains a magic number: _writer.Parameters.AddValues(23);
Magic Number,Tests.Builders,DeleteTableBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\DeleteTableBuilderTests.cs,delete_with_criteria,The following statement contains a magic number: cmd.Args.First().Should().Be(23);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,single_constant_value,The following statement contains a magic number: var sql = Get(d => 2);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,single_constant_value,The following statement contains a magic number: _sut.Parameters.ToArray().Should().BeEquivalentTo(new[] {2});
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_equality_criteria,The following statement contains a magic number: Get(d => d.SomeId == 24).Should().Be("(SomeId = @0)");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_equality_criteria,The following statement contains a magic number: FirstParameter.Should().Be(24);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_equality_criteria,The following statement contains a magic number: var i = 24;
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_equality_criteria,The following statement contains a magic number: FirstParameter.Should().Be(24);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_inequality_criteria,The following statement contains a magic number: Get(d => d.SomeId != 24).Should().Be("(SomeId <> @0)");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_inequality_criteria,The following statement contains a magic number: FirstParameter.Should().Be(24);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_inequality_criteria,The following statement contains a magic number: var i = 24;
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,simple_inequality_criteria,The following statement contains a magic number: FirstParameter.Should().Be(24);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_greater_than_12_and_less_than_24,The following statement contains a magic number: Get(p => p.SomeId > 12 && p.SomeId < 24).Should().Be("((SomeId > @0) and (SomeId < @1))");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_greater_than_12_and_less_than_24,The following statement contains a magic number: Get(p => p.SomeId > 12 && p.SomeId < 24).Should().Be("((SomeId > @0) and (SomeId < @1))");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_greater_than_12_and_less_than_24,The following statement contains a magic number: FirstParameter.Should().Be(12);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_greater_than_12_and_less_than_24,The following statement contains a magic number: Parameter(1).Should().Be(24);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_and_isActive_not_true,The following statement contains a magic number: Get(d => d.SomeId == 23 && !d.IsActive).Should().Be("((SomeId = @0) and IsActive=@1)");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_and_isActive_not_true,The following statement contains a magic number: FirstParameter.Should().Be(23);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_and_isActive_is_true,The following statement contains a magic number: Get(d => d.SomeId == 23 && d.IsActive).Should().Be("((SomeId = @0) and IsActive=@1)");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_and_isActive_is_true,The following statement contains a magic number: FirstParameter.Should().Be(23);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_and_isActive_is_explicitely_true,The following statement contains a magic number: Get(d => d.SomeId == 23 && d.IsActive==true).Should().Be("((SomeId = @0) and IsActive=@1)");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,id_and_isActive_is_explicitely_true,The following statement contains a magic number: FirstParameter.Should().Be(23);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,string_length,The following statement contains a magic number: Get(d => d.Title.Length == 2).Should().Be("(len(Title) = @0)");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,string_length,The following statement contains a magic number: FirstParameter.Should().Be(2);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,sum_of_column,The following statement contains a magic number: Get(d => d.Sum(d.SomeId + 6)).Should().Be("sum((SomeId + @0))");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,sum_of_column,The following statement contains a magic number: FirstParameter.Should().Be(6);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,min_of_expression,The following statement contains a magic number: var sql = Get(d => d.Min(d.SomeId*5));
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,min_of_expression,The following statement contains a magic number: FirstParameter.Should().Be(5);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,round_columns,The following statement contains a magic number: var sql = Get(d => d.Round(d.SomeId'3));
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,round_columns,The following statement contains a magic number: FirstParameter.Should().Be(3);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,between_datetime,The following statement contains a magic number: var end = new DateTime(100' 1' 1);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,between_datetimeoffset,The following statement contains a magic number: var end = new DateTimeOffset(new DateTime(100' 1' 1));
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,inject_sql,The following statement contains a magic number: Get(d => d.Decimal == 23);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,inject_sql,The following statement contains a magic number: Get(d => d.InjectSql("bubu @id - @test"' new {id = 3'test})).Should().Be("bubu @1 - @2");
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,inject_sql,The following statement contains a magic number: Parameter(1).Should().Be(3);
Magic Number,Tests.Builders,ExpressionSqlGeneratorTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\ExpressionSqlGeneratorTests.cs,inject_sql,The following statement contains a magic number: Parameter(2).Should().Be("bla");
Magic Number,Tests.Builders,InsertBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\InsertBuilderTests.cs,InsertBuilderTests,The following statement contains a magic number: _data=new Post()              {                  Id = Guid.NewGuid()'                  Email = Email.CreateRandomTestValue().Value'                  SomeId = 23'                              };
Magic Number,Tests.Builders,UpdateBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\UpdateBuilderTests.cs,set_fields,The following statement contains a magic number: _sut.Set(d => d.SomeId' 34).Where(d => d.Id == Guid.Empty).Execute();
Magic Number,Tests.Builders,UpdateBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\UpdateBuilderTests.cs,set_fields,The following statement contains a magic number: Parameter(0).Should().Be(34);
Magic Number,Tests.Builders,UpdateBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\UpdateBuilderTests.cs,when_fields_name_are_strings,The following statement contains a magic number: _sut.Set("SomeId"' 34).Where(d => d.Id == Guid.Empty).Execute();
Magic Number,Tests.Builders,UpdateBuilderTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Builders\UpdateBuilderTests.cs,when_fields_name_are_strings,The following statement contains a magic number: Parameter(0).Should().Be(34);
Magic Number,Tests.Configuration,TableInfoTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Configuration\TableInfoTests.cs,all_properties_are_considered_columns,The following statement contains a magic number: _sut.Columns.Count().Should().Be(14);
Magic Number,Tests.Mapping,ConvertersTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\ConvertersTests.cs,for_a_type_without_converter_a_default_converter_is_used,The following statement contains a magic number: _sut.Convert<string>((object) 3).Should().Be("3");
Magic Number,Tests.Mapping,ConvertersTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\ConvertersTests.cs,use_a_registered_converter,The following statement contains a magic number: var byteArr = new byte[] {1' 2' 3};
Magic Number,Tests.Mapping,ConvertersTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\ConvertersTests.cs,use_a_registered_converter,The following statement contains a magic number: var byteArr = new byte[] {1' 2' 3};
Magic Number,Tests.Mapping,MapperFactoryTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\MapperFactoryTests.cs,same_reader_with_different_queryId_means_different_mappers_are_created,The following statement contains a magic number: _sut.Mappers.Count.Should().Be(2);
Magic Number,Tests.Mapping,MapToAnonTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\MapToAnonTests.cs,map_to_projection,The following statement contains a magic number: var reader = Setup.FakeReader(r =>              {                  r.Clear();                  r.Add("Id"'25);                  r.Add("Title"'"bla");                  r.Add("MyEnum"'OrderBy.Desc);              });
Magic Number,Tests.Mapping,MapToAnonTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\MapToAnonTests.cs,map_to_projection,The following statement contains a magic number: result.Id.Should().Be(25);
Magic Number,Tests.Mapping,MapToDynamicTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\MapToDynamicTests.cs,sqlfu_dynamic_can_be_cast_to_read_only_IDictionary,The following statement contains a magic number: Array.Copy(new object[] {1'"Test"}'data.ColumnValues'2);
Magic Number,Tests.Mapping,MapToDynamicTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\MapToDynamicTests.cs,sqlfu_dynamic_can_be_cast_to_read_only_IDictionary,The following statement contains a magic number: dict.Count.Should().Be(2);
Magic Number,Tests.Mapping,PocoMapperTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\PocoMapperTests.cs,map_to_complex_type,The following statement contains a magic number: var post = MapWithReader(data =>              {                  data.Add("Author_Id"' 25);                  data.Add("Author_Name"'"Hio");              });
Magic Number,Tests.Mapping,PocoMapperTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\PocoMapperTests.cs,map_to_complex_type,The following statement contains a magic number: post.Author.Id.Should().Be(25);
Magic Number,Tests.Mapping,PocoMapperTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\PocoMapperTests.cs,map_field_value_to_column_of_type_object,The following statement contains a magic number: var post = MapWithReader(data =>              {                  data.Add("Dyno"'25);              });
Magic Number,Tests.Mapping,PocoMapperTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Mapping\PocoMapperTests.cs,map_field_value_to_column_of_type_object,The following statement contains a magic number: AssertionExtensions.Should((object)post.Dyno).Be(25);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,insert_and_return_id,The following statement contains a magic number: rez.GetInsertedId<int>().Should().Be(4);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,use_simple_sql_builder,The following statement contains a magic number: var posts = 3;
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,insert_ignore,The following statement contains a magic number: _db.Insert(new User()              {                  FirstName = "Jane2"'                  LastName = "Doe"'                  Category = ArticleType.Page'                  Posts = 0              }).GetInsertedId<int>().Should().Be(4);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,get_user_with_fullname,The following statement contains a magic number: user.Id.Should().Be(3);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,count_users,The following statement contains a magic number: _db.QueryValue<int>(q => q.From<User>().Select(d => d.Count())).Should().Be(3);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,count_users,The following statement contains a magic number: _db.WithSql(q => q.From<User>().Select(d => d.Count())).GetValue().Should().Be(3);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,sum_of_posts,The following statement contains a magic number: all[ArticleType.Post].Should().Be(5);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,delete_anon_where,The following statement contains a magic number: _db.CountRows<User>().Should().Be(2);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,pagination,The following statement contains a magic number: p.Count.Should().Be(3);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,get_single_row_no_result,The following statement contains a magic number: var user=await _db.QueryRowAsync(q => q.From<User>().Where(d => d.Id == 1000).Limit(1).SelectAll(useAsterisk: true)'                  CancellationToken.None);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,update_one_row,The following statement contains a magic number: _db.UpdateFrom(                  q => q.Data(new { Firstname = "John3"' Id = 3 }).Ignore(d => d.Id)                  'o => o.SetTableName(_db.GetTableName<User>())                  )                  .Where(d => d.Firstname == "John")                  .Execute().Should().Be(1);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,update_one_row,The following statement contains a magic number: _db.CountRows<User>(d => d.FirstName != "John3").Should().Be(2);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,simpler_update_from_values,The following statement contains a magic number: _db.CountRows<User>(d => d.FirstName != "John3").Should().Be(2);
Magic Number,Tests.SqlServer,ADBOperationsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\ADBOperationsTests.cs,simpler_update_from_values_with_criteria,The following statement contains a magic number: _db.CountRows<User>(d => d.FirstName != "Jane4").Should().Be(2);
Magic Number,Tests.SqlServer,SqlServerTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\SqlServerTests.cs,datediff,The following statement contains a magic number: var dif = _db.QueryValue(q => q.From<User>().Select(d => d.DateDiff(TSqlDatePart.Hour' d.CreatedOn' DateTime.Now.AddHours(3))));
Magic Number,Tests.SqlServer,SqlServerTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\SqlServerTests.cs,datediff,The following statement contains a magic number: dif.Should().Be(3);
Magic Number,Tests.SqlServer,MyFunctions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\SqlServerTests.cs,DateDiff,The following statement contains a magic number: sb.Append(writer.GetColumnsSql(method.Arguments[2])).Append("'");
Magic Number,Tests.SqlServer,MyFunctions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\SqlServerTests.cs,DateDiff,The following statement contains a magic number: sb.Append(writer.GetColumnsSql(method.Arguments[3]));
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,execSp,The following statement contains a magic number: var r = _db.ExecuteSProc(s =>                {                    s.ProcName = "spTest";                    s.Arguments = new { id = 47' _pout = "" };                });
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,execSp,The following statement contains a magic number: r.ReturnValue.Should().Be(100);
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,execSpAsync,The following statement contains a magic number: var r = await _db.ExecuteSProcAsync(s =>                {                    s.ProcName = "spTest";                    s.Arguments = new { id = 47' _pout = "" };                }' CancellationToken.None);
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,execSpAsync,The following statement contains a magic number: r.ReturnValue.Should().Be(100);
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,querySp,The following statement contains a magic number: var r = _db.QuerySProc<dynamic>("spTest"' new { id = 46' _pout = "" });
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,querySp,The following statement contains a magic number: r.ReturnValue.Should().Be(100);
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,querySp,The following statement contains a magic number: Assert.Equal(first.input' 46);
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,querySpAsync,The following statement contains a magic number: var r = await _db.QuerySProcAsync<dynamic>("spTest"' CancellationToken.None' new { id = 49' _pout = "" });
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,querySpAsync,The following statement contains a magic number: r.ReturnValue.Should().Be(100);
Magic Number,Tests.Usage,AStoredProcsTests,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\Tests\Usage\StoredProcsTests.cs,querySpAsync,The following statement contains a magic number: Assert.Equal(first.input' 49);
