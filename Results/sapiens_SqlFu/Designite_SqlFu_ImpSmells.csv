Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,VisitBinary,Cyclomatic complexity of the method is 19
Complex Method,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,VisitUnary,Cyclomatic complexity of the method is 10
Long Parameter List,SqlFu,DbCommandExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbCommandExtensions.cs,QueryAndProcess,The method has 5 parameters. Parameters: cmd' processor' mapper' firstRowOnly' disposeConnection
Long Parameter List,SqlFu,DbCommandExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbCommandExtensions.cs,QueryAndProcessAsync,The method has 6 parameters. Parameters: cmd' cancellation' processor' mapper' firstRowOnly' disposeConnection
Long Parameter List,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,QueryAndProcess,The method has 5 parameters. Parameters: cnx' cfg' processor' anonModel' firstRowOnly
Long Parameter List,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,QueryAndProcessAsync,The method has 6 parameters. Parameters: db' cfg' processor' token' anonModel' firstRowOnly
Long Parameter List,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,QueryAndProcess,The method has 5 parameters. Parameters: cnx' cfg' processor' anonModel' firstRowOnly
Long Parameter List,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,QueryAndProcessAsync,The method has 6 parameters. Parameters: cnx' cfg' processor' token' anonModel' firstRowOnly
Long Parameter List,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,QueryAndProcessAsync,The method has 5 parameters. Parameters: cnx' sqlBuilder' processor' token' firstRowOnly
Long Parameter List,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,FetchPagedAsync,The method has 5 parameters. Parameters: db' cfg' page' token' anonModel
Long Parameter List,SqlFu,FluentCommandExecutor<T>,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\FluentCommandExecutor.cs,FluentCommandExecutor,The method has 5 parameters. Parameters: cnx' sqlGen' cfg' disposeAfterQuery' cancel
Long Parameter List,SqlFu,CrudHelpers,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Helpers\CrudHelpers.cs,InsertIgnoreAsync,The method has 5 parameters. Parameters: db' data' token' cfg' keyName
Long Parameter List,SqlFu.Executors,SqlFuCommand,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Executors\SqlFuCommand.cs,HandleTransients,The method has 5 parameters. Parameters: cmd' sqlAction' strat' provider' cfg
Long Parameter List,SqlFu.Executors,SqlFuCommand,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Executors\SqlFuCommand.cs,HandleTransientsAsync,The method has 6 parameters. Parameters: cmd' sqlAction' strat' provider' cancel' config
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,HasValueIn,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Between,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Between,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,InjectSql,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Count,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Count,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Sum,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Max,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Min,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Floor,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Ceiling,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Avg,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Round,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,SqlBuilderExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\SqlBuilderExtensions.cs,Concat,The length of the statement  "            throw new NotSupportedException("This shouldn't be called directly' only inside an expression of a sql builder or helper"); " is 123.
Long Statement,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,QueryAndProcessAsync,The length of the statement  "            return cnx.QueryAndProcessAsync(sqlBuilder(cnx.GetSqlBuilder()).GetCommandConfiguration()' processor' token??CancellationToken.None'default(T)' firstRowOnly); " is 158.
Long Statement,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,FetchPagedAsync,The length of the statement  "                db.GetValueAsync<long>(c => c.Sql(data.CountSql' cmd.Args).WithCommandOptions(cmd.ApplyOptions)'token).ConfigureAwait(false); " is 125.
Long Statement,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,FetchPagedAsync,The length of the statement  "            result.Items = await db.FetchAsync<T>(c => c.Sql(data.PagedSql' data.Args).WithCommandOptions(cmd.ApplyOptions)'token??CancellationToken.None).ConfigureAwait(false); " is 165.
Long Statement,SqlFu,InsertedId,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Helpers\IInsertedId.cs,GetInsertedId,The length of the statement  "            if(IsEmpty) throw  new InvalidOperationException("There was nothing returned by the insert. Please check the 'IsEmpty' property first."); " is 137.
Long Statement,SqlFu,SqlFuConfig,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\SqlFuConfig.cs,CreateProfile,The length of the statement  "            var profile = new DbAccessProfile() { ConnectionString = connectionString' Name = name' Provider = provider' Factory = CreateFactory<T>() }; " is 140.
Long Statement,SqlFu,SqlFuManager,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\SqlFuManager.cs,OpenConnection,The length of the statement  "                    "I need a connection! Either set SqlFuFactory.Config.Providers.ConnectionString method or define a connection in config file. If there are more than one connection defined' set SqlFuFactory.Config.Providers.ConnectionString"); " is 226.
Long Statement,SqlFu,SqlFuManager,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\SqlFuManager.cs,OpenConnectionAsync,The length of the statement  "                    "I need a connection! Either set SqlFuFactory.Config.Providers.ConnectionString method or define a connection in config file. If there are more than one connection defined' set SqlFuFactory.Config.Providers.ConnectionString"); " is 226.
Long Statement,SqlFu,SqlFuManager,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\SqlFuManager.cs,CreateConnection,The length of the statement  "                    "I need a connection! Either set SqlFuFactory.Config.Providers.ConnectionString method or define a connection in config file. If there are more than one connection defined' set SqlFuFactory.Config.Providers.ConnectionString"); " is 226.
Long Statement,SqlFu.Builders.Crud,InsertSqlBuilder,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Crud\InsertSqlBuilder.cs,FilterIgnored,The length of the statement  "            var columnValues = _data.ValuesToDictionary().ToDictionary(k=>_options.Info[k.Key].Name'v=> _options.Info.ConvertWriteValue(v.Key' v.Value)); " is 141.
Long Statement,SqlFu.Builders.Crud,SimpleSqlBuilder<T>,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Crud\SimpleSqlBuilder.cs,Limit,The length of the statement  "            _sb=new StringBuilder(_provider.FormatQueryPagination(_sb.ToString()' Pagination.Create(offset'take)' _writer.Parameters)); " is 123.
Long Statement,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,WriteParameter,The length of the statement  "            //        value= value is string?Enum.Parse(node.Type.GetGenericArgument()'value.ToString()): Enum.ToObject(node.Type.GetGenericArgument()' value); " is 147.
Long Statement,SqlFu.Executors,SqlFuCommand,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Executors\SqlFuCommand.cs,ExecuteNonQueryAsync,The length of the statement  "            await HandleTransientsAsync(_cmd' async (t) => rez = await _cmd.ExecuteNonQueryAsync(t).ConfigureFalse()' GetErrorsStrategy()' _cnx.Provider' cancellationToken'_cfg).ConfigureFalse(); " is 183.
Long Statement,SqlFu.Executors,SqlFuCommand,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Executors\SqlFuCommand.cs,ExecuteScalarAsync,The length of the statement  "            await HandleTransientsAsync(_cmd'async (t) => obj = await _cmd.ExecuteScalarAsync(t).ConfigureFalse()'GetErrorsStrategy()'_cnx.Provider'cancellationToken'_cfg).ConfigureFalse(); " is 177.
Long Statement,SqlFu.Providers,GenericProvider,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\GenericProvider.cs,CreateInsertSql,The length of the statement  "            return $"insert into {EscapeTableName(options.TableName)}({columnValues.Keys.Select(EscapeIdentifier).StringJoin()})\n values({JoinValuesAsParameters(columnValues)})"; " is 167.
Long Statement,SqlFu.Providers.Sqlite,SqliteProvider,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\Sqlite\SqliteProvider.cs,CreateInsertSql,The length of the statement  "          return $"insert into {EscapeTableName(options.TableName)} ({columnValues.Keys.Select(EscapeIdentifier).StringJoin()})" + " is 120.
Long Statement,SqlFu.Providers.SqlServer,SqlServer2012Provider,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\SqlServer\SqlServer2012Provider.cs,CreateInsertSql,The length of the statement  "            return $"insert into {EscapeTableName(options.TableName)}({columnValues.Keys.Select(EscapeIdentifier).StringJoin()})" +ins+ " is 123.
Virtual Method Call from Constructor,SqlFu.Providers,DbProvider,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProvider.cs,DbProvider,The constructor "DbProvider" calls a virtual method "GetEscapeIdentifierChars".
Empty Catch Block,SqlFu,DbConnectionExtensions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Extensions\DbConnectionExtensions.cs,AddDbObjectOrIgnore,The method has an empty catch block.
Empty Catch Block,SqlFu,CrudHelpers,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Helpers\CrudHelpers.cs,InsertIgnore,The method has an empty catch block.
Empty Catch Block,SqlFu,CrudHelpers,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Helpers\CrudHelpers.cs,InsertIgnoreAsync,The method has an empty catch block.
Empty Catch Block,SqlFu.Mapping.Internals,MapperFactory,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Mapping\Internals\MapperFactory.cs,Map,The method has an empty catch block.
Magic Number,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,HandleInject,The following statement contains a magic number: var args = node.Arguments[2] as NewExpression;
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Count(23)'Count);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Sum(3)'Sum);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Max(2)'Max);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Min(2)'Min);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Avg(2)'Avg);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Floor(2)'Floor);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Ceiling(2)'Ceiling);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Round(2'2)'Round);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,DbProviderExpressions,The following statement contains a magic number: LinkMethods(()=>Placeholder.Round(2'2)'Round);
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,BetweenDates,The following statement contains a magic number: sb.Append($"{date}>={writer.GetSql(arg1.Arguments[1])} and {date}<={writer.GetSql(arg1.Arguments[2])}");
Magic Number,SqlFu.Providers,DbProviderExpressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\DbProviderExpressions.cs,Round,The following statement contains a magic number: sb.Append(writer.GetSql(method.Arguments[2]));
Magic Number,SqlFu.Providers.SqlServer,SqlServer2012Expressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\SqlServer\SqlServer2012Expressions.cs,DateDiff,The following statement contains a magic number: sb.Append(writer.GetColumnsSql(method.Arguments[2])).Append("'");
Magic Number,SqlFu.Providers.SqlServer,SqlServer2012Expressions,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\SqlServer\SqlServer2012Expressions.cs,DateDiff,The following statement contains a magic number: sb.Append(writer.GetColumnsSql(method.Arguments[3]));
Magic Number,SqlFu.Providers.SqlServer,SqlServer2012Provider,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\SqlServer\SqlServer2012Provider.cs,SetupParameter,The following statement contains a magic number: param.Size = Math.Max(((string)value).Length + 1' 4000);
Magic Number,SqlFu.Providers.SqlServer,SqlServer2012Provider,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Providers\SqlServer\SqlServer2012Provider.cs,FormatQueryPagination,The following statement contains a magic number: return string.Format("{2} OFFSET @{0} ROWS FETCH NEXT @{1} ROWS ONLY"'pm.CurrentIndex-2'pm.CurrentIndex-1 'sql);
Missing Default,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,HandleParamStringFunctions,The following switch statement is missing a default case: switch (node.Method.Name)              {                  case "StartsWith":                      value = $"{name} like @{Parameters.CurrentIndex}";                      Parameters.AddValues(firstArg + "%");                      break;                  case "EndsWith":                      value = $"{name} like @{Parameters.CurrentIndex}";                      Parameters.AddValues("%" + firstArg);                      break;                  case "Contains":                      value = $"{name} like @{Parameters.CurrentIndex}";                      Parameters.AddValues("%" + firstArg + "%");                      break;                  case "ToUpper":                  case "ToUpperInvariant":                      value = _provider.ToUpper(name);                      break;                  case "ToLower":                  case "ToLowerInvariant":                      value = _provider.ToLower(name);                      break;                  case "Substring":                      value = _provider.Substring(name' (int)firstArg' (int)node.Arguments[1].GetValue());                      break;              }
Missing Default,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,HandleStringProperties,The following switch statement is missing a default case: switch (node.Member.Name)              {                  case "Length":                      _sb.Append(_provider.Length(name));                      break;              }
Missing Default,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,HandleDateTimeProperties,The following switch statement is missing a default case: switch (node.Member.Name)              {                  case "Year":                      _sb.Append(_provider.Year(name));                      break;                  case "Day":                      _sb.Append(_provider.Day(name));                      break;              }
Missing Default,SqlFu.Builders.Expressions,ExpressionSqlGenerator,D:\research\architectureSmells\repos1\sapiens_SqlFu\src\SqlFu\Builders\Expressions\ExpressionSqlGenerator.cs,VisitUnary,The following switch statement is missing a default case: switch (node.NodeType)              {                  case ExpressionType.Convert:                      if (IsSingleBooleanProperty(node.Operand))                      {                          HandleSingleBooleanProperty(node.Operand as MemberExpression' true);                          break;                      }                        if (node.Operand.Type.Is<MethodCallExpression>())                      {                          HandleAsMethodCall(node.Operand as MethodCallExpression);                          break;                      }                        if (node.Type.IsEnumType() && !node.BelongsToParameter())                      {                          WriteParameter(node);                          break;                      }                        var op = node.Operand as ConstantExpression;                      if (IsSingleBooleanConstant(op))                      {                          HandleSingleBooleanConstant(op);                          return node;                      }                        Visit(node.Operand);                      break;                  case ExpressionType.New:                        Visit(node.Operand);                      break;                      case ExpressionType.Not:                      if (node.Operand.BelongsToParameter())                      {                          if (IsSingleBooleanProperty(node.Operand))                          {                              HandleSingleBooleanProperty(node.Operand as MemberExpression' false);                              break;                          }                      }                        var opf = node.Operand as ConstantExpression;                      if (IsSingleBooleanConstant(opf))                      {                          HandleSingleBooleanConstant(opf);                          return node;                      }                      _sb.Append("not ");                        Visit(node.Operand);                      break;              }
