Implementation smell,Namespace,Class,File,Method,Description
Long Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,Convert,The method has 129 lines of code.
Long Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,TrackCurrentContext,The method has 228 lines of code.
Long Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,The method has 128 lines of code.
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,ConstructExpandedForms,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,FindBestCandidate,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetBetterFunctionMember,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetMoreSpecific,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,TypeInference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\TypeInference.cs,PhaseTwo,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,TypeInference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\TypeInference.cs,MakeLowerBoundInference,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,GetModifier,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,Convert,Cyclomatic complexity of the method is 36
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,Convert,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,Convert,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,Convert,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,Convert,Cyclomatic complexity of the method is 21
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,Init,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FindExpression,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,TrackCurrentFrameAndExpression,Cyclomatic complexity of the method is 23
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,TrackCurrentContext,Cyclomatic complexity of the method is 63
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FindFullExpression,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FilterComments,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.CSharp,Frame,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,SetDefaultContext,Cyclomatic complexity of the method is 19
Complex Method,ICSharpCode.SharpDevelop.Dom,CombinedReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\CombinedReturnType.cs,Combine,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom,CompoundClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\CompoundClass.cs,UpdateInformationFromParts,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,ConstructedReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\ConstructedReturnType.cs,TranslateType,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultClass.cs,SearchMember,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultTypeParameter,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultTypeParameter.cs,Equals,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultUsing,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultUsing.cs,SearchNamespace,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultUsing,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultUsing.cs,SearchType,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,WriteClass,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,ReadClass,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,CreateExternalTypeList,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,AddExternalType,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,WriteType,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,ReadType,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,WriteAttributeArgument,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,ReadAttributeArgument,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpDevelop.Dom,CecilReader,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,CreateType,Cyclomatic complexity of the method is 18
Complex Method,ICSharpCode.SharpDevelop.Dom,CecilClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,CecilClass,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpDevelop.Dom,CecilClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,InitMembers,Cyclomatic complexity of the method is 20
Complex Method,ICSharpCode.SharpDevelop.Dom,CecilClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,AddParameters,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,InheritableTypeExpressionContext,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ExpressionContext.cs,ShowEntry,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,NonStaticTypeExpressionContext,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ExpressionContext.cs,ShowEntry,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,LookupMember,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,InferTypeArgument,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,Cyclomatic complexity of the method is 30
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,IsConstructedConversionToGenericReturnType,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterConversion,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetPrimitiveType,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,IsSimilarMemberInternal,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,FindSimilarMember,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,AddClassToNamespaceListInternal2,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,RemoveClass,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,GetClass,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,AddNamespaceContents,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,AddNamespaceContentsClass,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,SearchType,Cyclomatic complexity of the method is 25
Complex Method,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,GetMemberByReflectionName,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom,ReflectionProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\ReflectionProjectContent.cs,ReflectionProjectContent,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom,ReflectionProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\ReflectionProjectContent.cs,InitializeReferences,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom,ProjectContentRegistry,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\ProjectContentRegistry.cs,LoadProjectContent,Cyclomatic complexity of the method is 16
Complex Method,ICSharpCode.SharpDevelop.Dom,ProjectContentRegistry,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\ProjectContentRegistry.cs,GetDefaultAssembly,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom,GacInterop,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\GacInterop.cs,FindBestMatchingAssemblyName,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.SharpDevelop.Dom,CtrlSpaceResolveHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CtrlSpaceResolveHelper.cs,AddContentsFromCalling,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom,CtrlSpaceResolveHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CtrlSpaceResolveHelper.cs,AddUsing,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom,CtrlSpaceResolveHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CtrlSpaceResolveHelper.cs,FindAllExtensions,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CodeSnippetConverter,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CodeSnippetConverter.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,CreateInterfaceImplementations,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,GetDocumentation,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,GetSpecialsFromLine,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitAttributes,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitTypeDeclaration,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,Resolve,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,WithResolve,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ExtractMethod,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ResolveIdentifier,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ResolveIdentifierInternal,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,CreateMemberOrMethodGroupResolveResult,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,GetCallingMember,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,GetVariableType,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,CtrlSpace,Cyclomatic complexity of the method is 25
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,CtrlSpaceInternal,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,GetExpectedTypeFromContext,Cyclomatic complexity of the method is 31
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,VisitInvocationExpression,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,VisitMemberReferenceExpression,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,TypeVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\TypeVisitor.cs,CreateReturnType,Cyclomatic complexity of the method is 23
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitTypeDeclaration,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,TransformWithEventsField,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,ProcessInvocationExpression,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitReDimStatement,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.Core,FileUtility,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\FileUtility.Minimal.cs,NormalizePath,Cyclomatic complexity of the method is 22
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,CSharpCodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CSharpCodeGenerator.cs,InsertCodeAtEnd,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,ConvertType,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,CreateOnEventMethod,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,InterfaceMemberAlreadyImplemented,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,ImplementInterface,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,ReplaceUsings,Cyclomatic complexity of the method is 16
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,FindUnusedUsingDeclarations,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,CreateNewFileLikeExisting,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,GetFullCodeRangeForType,Cyclomatic complexity of the method is 20
Complex Method,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionClass.cs,InitMembers,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionClass.cs,ReflectionClass,Cyclomatic complexity of the method is 19
Complex Method,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionEvent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionEvent.cs,ReflectionEvent,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionField,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionField.cs,ReflectionField,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionMethod,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionMethod.cs,ReflectionMethod,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionProperty,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionProperty.cs,ReflectionProperty,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionReturnType.cs,Create,Cyclomatic complexity of the method is 18
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,GetModifier,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,Cyclomatic complexity of the method is 40
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,Cyclomatic complexity of the method is 16
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,Cyclomatic complexity of the method is 18
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,FindFullExpression,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,SearchBracketForward,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,FilterComments,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,ReadNextToken,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,ReadBracket,Cyclomatic complexity of the method is 10
Long Parameter List,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,FindOverload,The method has 5 parameters. Parameters: list' arguments' allowAdditionalArguments' substituteInferredTypes' acceptableMatch
Long Parameter List,ICSharpCode.SharpDevelop.Dom,CombinedReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\CombinedReturnType.cs,CombinedReturnType,The method has 5 parameters. Parameters: baseTypes' fullName' name' namespace' dotnetName
Long Parameter List,ICSharpCode.SharpDevelop.Dom,DefaultClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultClass.cs,DefaultClass,The method has 5 parameters. Parameters: compilationUnit' classType' modifiers' region' declaringType
Long Parameter List,ICSharpCode.SharpDevelop.Dom,DefaultEvent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultEvent.cs,DefaultEvent,The method has 6 parameters. Parameters: name' type' m' region' bodyRegion' declaringType
Long Parameter List,ICSharpCode.SharpDevelop.Dom,DefaultField,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultField.cs,DefaultField,The method has 5 parameters. Parameters: type' name' m' region' declaringType
Long Parameter List,ICSharpCode.SharpDevelop.Dom,DefaultMethod,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultMethod.cs,DefaultMethod,The method has 6 parameters. Parameters: name' type' m' region' bodyRegion' declaringType
Long Parameter List,ICSharpCode.SharpDevelop.Dom,DefaultProperty,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultProperty.cs,DefaultProperty,The method has 6 parameters. Parameters: name' type' m' region' bodyRegion' declaringType
Long Parameter List,ICSharpCode.SharpDevelop.Dom,SearchClassReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\SearchClassReturnType.cs,SearchClassReturnType,The method has 6 parameters. Parameters: projectContent' declaringClass' caretLine' caretColumn' name' typeParameterCount
Long Parameter List,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,AddStringsAndExternalTypesFromAttributeArgument,The method has 5 parameters. Parameters: stringList' attributes' externalTypes' classCount' value
Long Parameter List,ICSharpCode.SharpDevelop.Dom,CecilProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,CecilProjectContent,The method has 5 parameters. Parameters: fullName' fileName' referencedAssemblies' assembly' registry
Long Parameter List,ICSharpCode.SharpDevelop.Dom,MethodGroupResolveResult,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ResolveResult.cs,MethodGroupResolveResult,The method has 5 parameters. Parameters: callingClass' callingMember' containingType' name' possibleMethods
Long Parameter List,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,LookupMember,The method has 6 parameters. Parameters: type' name' callingClass' language' isInvocation' isAccessThoughReferenceOfCurrentClass
Long Parameter List,ICSharpCode.SharpDevelop.Dom,IResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\IResolver.cs,CtrlSpace,The method has 5 parameters. Parameters: caretLine' caretColumn' parseInfo' fileContent' context
Long Parameter List,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,SearchNamespace,The method has 5 parameters. Parameters: name' curType' unit' caretLine' caretColumn
Long Parameter List,ICSharpCode.SharpDevelop.Dom,IProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\IProjectContent.cs,SearchNamespace,The method has 5 parameters. Parameters: name' curType' unit' caretLine' caretColumn
Long Parameter List,ICSharpCode.SharpDevelop.Dom,SearchTypeRequest,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\IProjectContent.cs,SearchTypeRequest,The method has 5 parameters. Parameters: name' typeParameterCount' currentType' caretLine' caretColumn
Long Parameter List,ICSharpCode.SharpDevelop.Dom,SearchTypeRequest,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\IProjectContent.cs,SearchTypeRequest,The method has 6 parameters. Parameters: name' typeParameterCount' currentType' currentCompilationUnit' caretLine' caretColumn
Long Parameter List,ICSharpCode.SharpDevelop.Dom,CtrlSpaceResolveHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CtrlSpaceResolveHelper.cs,GetResultFromDeclarationLine,The method has 5 parameters. Parameters: callingClass' callingMember' caretLine' caretColumn' expressionResult
Long Parameter List,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,CreateDelegate,The method has 5 parameters. Parameters: c' name' returnType' templates' parameters
Long Parameter List,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,CreateReturnType,The method has 5 parameters. Parameters: reference' method' currentClass' cu' options
Long Parameter List,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ResolveMember,The method has 6 parameters. Parameters: declaringType' memberName' typeArguments' isInvocation' allowExtensionMethods' isAccessThoughReferenceOfCurrentClass
Long Parameter List,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,CreateMemberOrMethodGroupResolveResult,The method has 5 parameters. Parameters: declaringType' memberName' members' allowExtensionMethods' typeArgs
Long Parameter List,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,CtrlSpace,The method has 5 parameters. Parameters: caretLine' caretColumn' parseInfo' fileContent' context
Long Parameter List,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,TypeVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\TypeVisitor.cs,CreateReturnType,The method has 7 parameters. Parameters: reference' callingClass' callingMember' caretLine' caretColumn' projectContent' useLazyReturnType
Long Parameter List,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,TypeVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\TypeVisitor.cs,CreateReturnType,The method has 7 parameters. Parameters: reference' callingClass' callingMember' caretLine' caretColumn' projectContent' options
Long Parameter List,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,InsertCodeAfter,The method has 5 parameters. Parameters: insertLine' document' indentation' startWithEmptyLine' nodes
Long Parameter List,ICSharpCode.SharpDevelop.Dom.Refactoring,RefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\RefactoringProvider.cs,GenerateInterfaceForClass,The method has 5 parameters. Parameters: newInterfaceName' existingCode' membersToKeep' sourceClass' preserveComments
Long Parameter List,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,GenerateInterfaceForClass,The method has 5 parameters. Parameters: newInterfaceName' existingCode' membersToKeep' sourceClass' preserveComments
Long Parameter List,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionReturnType.cs,Create,The method has 5 parameters. Parameters: pc' member' type' createLazyReturnType' forceGenericType
Long Parameter List,MSjogren.GacTool.FusionNative,IAssemblyCacheItem,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\FusionNative.cs,CreateStream,The method has 5 parameters. Parameters: pszName' dwFormat' dwFlags' dwMaxSize' ppStream
Long Parameter List,MSjogren.GacTool.FusionNative,IAssemblyName,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\FusionNative.cs,BindToObject,The method has 8 parameters. Parameters: refIID' pAsmBindSink' pApplicationContext' szCodeBase' llFlags' pvReserved' cbReserved' ppv
Long Parameter List,MSjogren.GacTool.FusionNative,Fusion,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\FusionNative.cs,CreateAssemblyEnum,The method has 5 parameters. Parameters: ppEnum' pAppCtx' pName' dwFlags' pvReserved
Long Identifier,ICSharpCode.SharpDevelop.Dom,AbstractEntity,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\AbstractEntity.cs,IsAccessible,The length of the parameter isAccessThoughReferenceOfCurrentClass is 37.
Long Identifier,ICSharpCode.SharpDevelop.Dom,DefaultClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultClass.cs,,The length of the parameter hasPublicOrInternalStaticMembersFlag is 36.
Long Identifier,ICSharpCode.SharpDevelop.Dom,SearchClassReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\SearchClassReturnType.cs,,The length of the parameter lookForInnerClassesInDeclaringClass is 35.
Long Identifier,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,LookupMember,The length of the parameter isAccessThoughReferenceOfCurrentClass is 37.
Long Identifier,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,LookupMember,The length of the parameter isAccessThoughReferenceOfCurrentClass is 37.
Long Identifier,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetAccessibleMembers,The length of the parameter isAccessThoughReferenceOfCurrentClass is 37.
Long Identifier,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetAccessibleMembers,The length of the parameter isAccessThoughReferenceOfCurrentClass is 37.
Long Identifier,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The length of the parameter allowGenericTargetsOnThisMethod is 31.
Long Identifier,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,IsConstructedConversionToGenericReturnType,The length of the parameter allowGenericTargetsOnThisMethod is 31.
Long Identifier,ICSharpCode.SharpDevelop.Dom,IEntity,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Interfaces\IEntity.cs,IsAccessible,The length of the parameter isAccessThoughReferenceOfCurrentClass is 37.
Long Identifier,ICSharpCode.SharpDevelop.Dom,HostCallback,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\HostCallback.cs,,The length of the parameter InitializeCodeGeneratorOptions is 30.
Long Identifier,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ResolveMember,The length of the parameter isAccessThoughReferenceOfCurrentClass is 37.
Long Identifier,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,,The length of the parameter LimitMethodExtractionUntilLine is 30.
Long Identifier,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,,The length of the parameter cachedExtensionMethods_LastClass is 32.
Long Identifier,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,FindObjectInitializerExpressionContainingCaretVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,VisitCollectionInitializerExpression,The length of the parameter collectionInitializerExpression is 31.
Long Identifier,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,VisitCollectionInitializerExpression,The length of the parameter collectionInitializerExpression is 31.
Long Identifier,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,InterfaceMemberAlreadyImplemented,The length of the parameter requireAlternativeImplementation is 32.
Long Identifier,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,ImplementInterface,The length of the parameter requireAlternativeImplementation is 32.
Long Identifier,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,,The length of the parameter NRefactoryCSharpProviderInstance is 32.
Long Identifier,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,,The length of the parameter NRefactoryVBNetProviderInstance is 31.
Long Statement,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,ApplyTypeArgumentsToMethod,The length of the statement  "					method.Parameters[i].ReturnType = ConstructedReturnType.TranslateType(method.Parameters[i].ReturnType' typeArguments' true); " is 124.
Long Statement,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetBetterFunctionMember,The length of the statement  "				int res = MemberLookupHelper.GetBetterConversion(arguments[i]' c1.Parameters[i].ReturnType' c2.Parameters[i].ReturnType); " is 121.
Long Statement,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,TrackCurrentContext,The length of the statement  "						if (frame.curlyChildType == FrameType.TypeDecl || frame.curlyChildType == FrameType.Interface || frame.curlyChildType == FrameType.Enum) { " is 138.
Long Statement,ICSharpCode.SharpDevelop.Dom,AbstractMember,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\AbstractMember.cs,CreateSpecializedMember,The length of the statement  "				throw new Exception("Clone() must return an AbstractMember instance' or CreateSpecializedMember must also be overridden."); " is 123.
Long Statement,ICSharpCode.SharpDevelop.Dom,AnonymousMethodReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\AnonymousMethodReturnType.cs,AddDefaultDelegateMethod,The length of the statement  "			invokeMethod = new DefaultMethod("BeginInvoke"' c.ProjectContent.SystemTypes.IAsyncResult' modifiers' c.Region' DomRegion.Empty' c); " is 132.
Long Statement,ICSharpCode.SharpDevelop.Dom,AnonymousMethodReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\AnonymousMethodReturnType.cs,AddDefaultDelegateMethod,The length of the statement  "			invokeMethod.Parameters.Add(new DefaultParameter("callback"' c.ProjectContent.SystemTypes.AsyncCallback' DomRegion.Empty)); " is 123.
Long Statement,ICSharpCode.SharpDevelop.Dom,AnonymousMethodReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\AnonymousMethodReturnType.cs,AddDefaultDelegateMethod,The length of the statement  "			invokeMethod.Parameters.Add(new DefaultParameter("result"' c.ProjectContent.SystemTypes.IAsyncResult' DomRegion.Empty)); " is 120.
Long Statement,ICSharpCode.SharpDevelop.Dom,DefaultUsing,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultUsing.cs,SearchNamespace,The length of the statement  "						if (projectContent.Language.NameComparer.Equals(partialNamespaceName.Substring(0' aliasString.Length + 1)' aliasString + ".")) { " is 128.
Long Statement,ICSharpCode.SharpDevelop.Dom,DefaultUsing,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultUsing.cs,SearchType,The length of the statement  "						if (projectContent.Language.NameComparer.Equals(partialTypeName.Substring(0' aliasString.Length + 1)' aliasString + ".")) { " is 123.
Long Statement,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,WriteProperty,The length of the statement  "				writer.Write((byte)((p.GetterModifiers != ModifierEnum.None ? 1 : 0) + (p.SetterModifiers != ModifierEnum.None ? 2 : 0))); " is 122.
Long Statement,ICSharpCode.SharpDevelop.Dom,XmlDoc,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\XmlDoc.cs,Load,The length of the statement  "							LoggingService.Warn("XmlDoc " + fileName + " is redirecting to " + xmlReader.GetAttribute("redirect") + "' but that file was not found."); " is 138.
Long Statement,ICSharpCode.SharpDevelop.Dom,MethodGroupResolveResult,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ResolveResult.cs,Clone,The length of the statement  "			return new MethodGroupResolveResult(this.CallingClass' this.CallingMember' this.ContainingType' this.Name' this.Methods); " is 121.
Long Statement,ICSharpCode.SharpDevelop.Dom,BaseResolveResult,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ResolveResult.cs,GetCompletionData,The length of the statement  "			foreach (IMember m in MemberLookupHelper.GetAccessibleMembers(this.ResolvedType' this.CallingClass' projectContent.Language' true)) { " is 133.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,LookupMember,The length of the statement  "			IEnumerable<IMember> accessibleMembers = possibleMembers.Where(member => member.IsAccessible(callingClass' isAccessThoughReferenceOfCurrentClass)); " is 147.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,InferTypeArgument,The length of the statement  "				if (expectedArgument.IsArrayReturnType && expectedArgument.CastToArrayReturnType().ArrayDimensions == passedArgument.CastToArrayReturnType().ArrayDimensions) { " is 159.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,InferTypeArgument,The length of the statement  "					return InferTypeArgument(expectedArgument.CastToArrayReturnType().ArrayElementType' passedArrayElementType' outputArray); " is 121.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,InferTypeArgument,The length of the statement  "							return InferTypeArgument(expectedArgument.CastToConstructedReturnType().TypeArguments[0]' passedArrayElementType' outputArray); " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The length of the statement  "				if (f == Byte && (t == Short || t == UShort || t == Int || t == UInt || t == Long || t == ULong || t == Float || t == Double || t == Decimal)) " is 142.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The length of the statement  "				if (f == Char && (t == UShort || t == Int || t == UInt || t == Long || t == ULong || t == Float || t == Double || t == Decimal)) " is 128.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,IsConstructedConversionToGenericReturnType,The length of the statement  "						if (!IsConstructedConversionToGenericReturnType(cFrom.TypeArguments[i]' cTo.TypeArguments[i]' allowGenericTargetsOnThisMethod)) " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetTypeInheritanceTree,The length of the statement  "				resultList.Add(classToListInheritanceTreeFor.ProjectContent.GetClass("System.Collections.ICollection"' 0).DefaultReturnType); " is 125.
Long Statement,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,AddClassToNamespaceListInternal,The length of the statement  "				LoggingService.Debug("Adding existing class " + addClass.Name + " from " + Path.GetFileName(addClass.CompilationUnit.FileName)); " is 128.
Long Statement,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,AddClassToNamespaceListInternal,The length of the statement  "					LoggingService.Debug("Added new part (old part count=" + compound.Parts.Count +"' new part count=" + newParts.Count + ")"); " is 123.
Long Statement,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,RemoveClass,The length of the statement  "				LoggingService.Debug("Removing part " + @class.CompilationUnit.FileName + " from compound class " + @class.FullyQualifiedName); " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,RemoveClass,The length of the statement  "					LoggingService.Debug("Second-to-last part removed (old part count = " + compound.Parts.Count + ")' overwriting compound with last part"); " is 137.
Long Statement,ICSharpCode.SharpDevelop.Dom,ClassFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ClassFinder.cs,Search,The length of the statement  "			return projectContent.SearchType(new SearchTypeRequest(name' typeParameterCount' callingClass' cu' caretLine' caretColumn)); " is 124.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,VisitMethodDeclaration,The length of the statement  "				if (resolver.Initialize(parseInformation' methodDeclaration.Body.StartLocation.Y' methodDeclaration.Body.StartLocation.X)) { " is 124.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,VisitConstructorDeclaration,The length of the statement  "				if (resolver.Initialize(parseInformation' constructorDeclaration.Body.StartLocation.Y' constructorDeclaration.Body.StartLocation.X)) { " is 134.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,VisitExpressionStatement,The length of the statement  "				MemberResolveResult mrr = resolver.ResolveInternal(eventInvocation.TargetObject' ExpressionContext.Default) as MemberResolveResult; " is 131.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,HandleAssignmentStatement,The length of the statement  "			if (assignmentExpression.Op == AssignmentOperatorType.Add || assignmentExpression.Op == AssignmentOperatorType.Subtract) { " is 122.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitUsingDeclaration,The length of the statement  "			DefaultUsing us = new DefaultUsing(cu.ProjectContent' GetRegion(usingDeclaration.StartLocation' usingDeclaration.EndLocation)); " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitAttributeSection,The length of the statement  "				ClassFinder cf = new ClassFinder(new DefaultClass(cu' "DummyClass")' attributeSection.StartLocation.Line' attributeSection.StartLocation.Column); " is 145.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitTypeDeclaration,The length of the statement  "			DefaultClass c = new DefaultClass(cu' TranslateClassType(typeDeclaration.Type)' ConvertTypeModifier(typeDeclaration.Modifier)' region' GetCurrentClass()); " is 154.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitDelegateDeclaration,The length of the statement  "			DefaultClass c = new DefaultClass(cu' ClassType.Delegate' ConvertTypeModifier(delegateDeclaration.Modifier)' region' GetCurrentClass()); " is 136.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,CreateParameter,The length of the statement  "			IReturnType parType = CreateReturnType(par.TypeReference' method' currentClass' cu' TypeVisitor.ReturnTypeOptions.None); " is 120.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitMethodDeclaration,The length of the statement  "			DomRegion bodyRegion = GetRegion(methodDeclaration.EndLocation' methodDeclaration.Body != null ? methodDeclaration.Body.EndLocation : RefParser.Location.Empty); " is 160.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitMethodDeclaration,The length of the statement  "			DefaultMethod method = new DefaultMethod(methodDeclaration.Name' null' ConvertModifier(methodDeclaration.Modifier)' region' bodyRegion' currentClass); " is 150.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitDeclareDeclaration,The length of the statement  "			DefaultMethod method = new DefaultMethod(declareDeclaration.Name' null' ConvertModifier(declareDeclaration.Modifier)' region' DomRegion.Empty' currentClass); " is 157.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitOperatorDeclaration,The length of the statement  "			DomRegion bodyRegion = GetRegion(operatorDeclaration.EndLocation' operatorDeclaration.Body != null ? operatorDeclaration.Body.EndLocation : RefParser.Location.Empty); " is 166.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitOperatorDeclaration,The length of the statement  "			DefaultMethod method = new DefaultMethod(operatorDeclaration.Name' CreateReturnType(operatorDeclaration.TypeReference)' ConvertModifier(operatorDeclaration.Modifier)' region' bodyRegion' c); " is 190.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitConstructorDeclaration,The length of the statement  "			DomRegion bodyRegion = GetRegion(constructorDeclaration.EndLocation' constructorDeclaration.Body != null ? constructorDeclaration.Body.EndLocation : RefParser.Location.Empty); " is 175.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitConstructorDeclaration,The length of the statement  "			Constructor constructor = new Constructor(ConvertModifier(constructorDeclaration.Modifier)' region' bodyRegion' GetCurrentClass()); " is 131.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitDestructorDeclaration,The length of the statement  "			DomRegion bodyRegion = GetRegion(destructorDeclaration.EndLocation' destructorDeclaration.Body != null ? destructorDeclaration.Body.EndLocation : RefParser.Location.Empty); " is 172.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitPropertyDeclaration,The length of the statement  "			DefaultProperty property = new DefaultProperty(propertyDeclaration.Name' type' ConvertModifier(propertyDeclaration.Modifier)' region' bodyRegion' GetCurrentClass()); " is 165.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitPropertyDeclaration,The length of the statement  "				property.GetterRegion = GetRegion(propertyDeclaration.GetRegion.StartLocation' propertyDeclaration.GetRegion.EndLocation); " is 122.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitPropertyDeclaration,The length of the statement  "				property.SetterRegion = GetRegion(propertyDeclaration.SetRegion.StartLocation' propertyDeclaration.SetRegion.EndLocation); " is 122.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitIndexerDeclaration,The length of the statement  "			DefaultProperty i = new DefaultProperty("Indexer"' CreateReturnType(indexerDeclaration.TypeReference)' ConvertModifier(indexerDeclaration.Modifier)' region' bodyRegion' GetCurrentClass()); " is 188.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitEventDeclaration,The length of the statement  "			DefaultEvent e = new DefaultEvent(eventDeclaration.Name' type' ConvertModifier(eventDeclaration.Modifier)' region' bodyRegion' c); " is 130.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitEventDeclaration,The length of the statement  "					BodyRegion = GetRegion(eventDeclaration.RemoveRegion.Block.StartLocation' eventDeclaration.RemoveRegion.Block.EndLocation) " is 122.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,CreateReturnType,The length of the statement  "				return TypeVisitor.CreateReturnType(reference' new DefaultClass(cu' "___DummyClass")' method' 1' 1' cu.ProjectContent' options | TypeVisitor.ReturnTypeOptions.Lazy); " is 165.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,CreateReturnType,The length of the statement  "				return TypeVisitor.CreateReturnType(reference' currentClass' method' currentClass.Region.BeginLine + 1' 1' cu.ProjectContent' options | TypeVisitor.ReturnTypeOptions.Lazy); " is 172.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,Resolve,The length of the statement  "			} else if (language == NR.SupportedLanguage.CSharp && expressionResult.Context.IsTypeContext && !expressionResult.Context.IsObjectCreation) { " is 141.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,Resolve,The length of the statement  "			rr = CtrlSpaceResolveHelper.GetResultFromDeclarationLine(callingClass' callingMember as IMethodOrProperty' caretLine' caretColumn' expressionResult); " is 149.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ExtractMethod,The length of the statement  "			System.Text.StringBuilder b = new System.Text.StringBuilder(classDecl' length + classDecl.Length + endClassDecl.Length + startLine - 1); " is 136.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,CreateLocalVariableField,The length of the statement  "			var f = new DefaultField.LocalVariableField(type' variable.Name' DomRegion.FromLocation(variable.StartPos' variable.EndPos)' callingClass); " is 139.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ResolveMember,The length of the statement  "			List<IList<IMember>> members = MemberLookupHelper.LookupMember(declaringType' memberName' callingClass' languageProperties' isInvocation' isAccessThoughReferenceOfCurrentClass); " is 177.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ObjectInitializerCtrlSpace,The length of the statement  "			FindObjectInitializerExpressionContainingCaretVisitor v = new FindObjectInitializerExpressionContainingCaretVisitor(location); " is 126.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ObjectInitializerCtrlSpaceInternal,The length of the statement  "			isCollectionInitializer = MemberLookupHelper.ConversionExists(resolvedType' new GetClassReturnType(projectContent' "System.Collections.IEnumerable"' 0)); " is 153.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,SearchType,The length of the statement  "				return projectContent.SearchType(new SearchTypeRequest(name' typeArgumentCount' callingClass' cu' caretLine' caretColumn)); " is 123.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,SearchType,The length of the statement  "				return projectContent.SearchType(new SearchTypeRequest(name' typeArgumentCount' callingClass' cu' position.Line' position.Column)); " is 131.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,SearchAllExtensionMethods,The length of the statement  "				cachedExtensionMethods = new ReadOnlyCollection<IMethodOrProperty>(CtrlSpaceResolveHelper.FindAllExtensions(languageProperties' callingClass)); " is 143.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,GetVisualBasicIndexer,The length of the statement  "				if (invocationExpression.TargetObject is IdentifierExpression || invocationExpression.TargetObject is MemberReferenceExpression) { " is 130.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,FallbackResolveMethod,The length of the statement  "				List<IMethod> methods = mgrr.ContainingType.GetMethods().Where(m => resolver.IsSameName(m.Name' mre.MemberName)).ToList(); " is 122.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,VisitMemberReferenceExpression,The length of the statement  "					type = TypeVisitor.CreateReturnType(((TypeReferenceExpression)memberReferenceExpression.TargetObject).TypeReference' resolver); " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,VisitObjectCreateExpression,The length of the statement  "					return new UnknownConstructorCallResolveResult(resolver.CallingClass' resolver.CallingMember' objectCreateExpression.CreateType.ToString()); " is 140.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,CreateAnonymousTypeClass,The length of the statement  "				DefaultProperty p = new DefaultProperty(fieldNames[i]' fieldTypes[i]' ModifierEnum.Public | ModifierEnum.Synthetic' DomRegion.Empty' DomRegion.Empty' c); " is 153.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,ResolveVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\ResolveVisitor.cs,VisitPrimitiveExpression,The length of the statement  "				return new IntegerLiteralResolveResult(resolver.CallingClass' resolver.CallingMember' resolver.ProjectContent.SystemTypes.Int32); " is 129.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,TypeVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\TypeVisitor.cs,CreateReturnType,The length of the statement  "							SearchClassReturnType scrt = new SearchClassReturnType(projectContent' callingClass' caretLine' caretColumn' reference.Type' typeParameterCount); " is 145.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,TypeVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\TypeVisitor.cs,CreateReturnType,The length of the statement  "							t = projectContent.SearchType(new SearchTypeRequest(reference.Type' typeParameterCount' callingClass' caretLine' caretColumn)).Result; " is 134.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,TypeVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\TypeVisitor.cs,CreateReturnType,The length of the statement  "					para[i] = CreateReturnType(reference.GenericTypes[i]' callingClass' callingMember' caretLine' caretColumn' projectContent' options); " is 132.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitTypeDeclaration,The length of the statement  "			resolver.Initialize(parseInformation' typeDeclaration.BodyStartLocation.Line' typeDeclaration.BodyStartLocation.Column); " is 120.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitMethodDeclaration,The length of the statement  "				if (resolver.Initialize(parseInformation' methodDeclaration.Body.StartLocation.Line' methodDeclaration.Body.StartLocation.Column)) { " is 132.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitConstructorDeclaration,The length of the statement  "				if (resolver.Initialize(parseInformation' constructorDeclaration.Body.StartLocation.Line' constructorDeclaration.Body.StartLocation.Column)) { " is 142.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitDefaultValueExpression,The length of the statement  "				if (c != null && (c.ClassType == ClassType.Class || c.ClassType == ClassType.Interface || c.ClassType == ClassType.Delegate)) { " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitForeachStatement,The length of the statement  "				ResolveResult rr = resolver.ResolveIdentifier(foreachStatement.VariableName' foreachStatement.StartLocation' ExpressionContext.Default); " is 136.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,CanUseShortTypeName,The length of the statement  "			int typeArgumentCount = (returnType.IsConstructedReturnType) ? returnType.CastToConstructedReturnType().TypeArguments.Count : 0; " is 128.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,ConvertAttributes,The length of the statement  "				sec.Attributes.Add(new ICSharpCode.NRefactory.Ast.Attribute(ConvertType(att.AttributeType' targetContext).Type' null' null)); " is 125.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,CreateOnEventMethod,The length of the statement  "					if (parameters.Count > 0 && string.Equals(parameters[0].ParameterName' "sender"' StringComparison.InvariantCultureIgnoreCase)) { " is 128.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,ImplementInterface,The length of the statement  "			Modifiers explicitImplModifier = ConvertModifier(context.Language.ExplicitInterfaceImplementationIsPrivateScope ? ModifierEnum.None : ModifierEnum.Public' context); " is 164.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,FindUnusedUsingDeclarations,The length of the statement  "			HashSet<PossibleTypeReference> references = FindPossibleTypeReferences(progressMonitor' fileContent' new ParseInformation(cu)); " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryRefactoringProvider,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,CreateNewFileLikeExisting,The length of the statement  "			IOutputAstVisitor outputVisitor = (language==NR.SupportedLanguage.CSharp) ? new CSharpOutputVisitor() : (IOutputAstVisitor)new VBNetOutputVisitor(); " is 148.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,AddTypeToBaseTypesVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,VisitTypeDeclaration,The length of the statement  "					typeDeclaration.BaseTypes.Add(new TypeReference(newBaseType.Name' newBaseType.TypeParameters.Select(p => new TypeReference(p.Name)).ToList())); " is 143.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,PossibleTypeReference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,Equals,The length of the statement  "				return this.Name == other.Name && this.TypeParameterCount == other.TypeParameterCount && object.Equals(this.ExtensionMethod' other.ExtensionMethod); " is 148.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,FindPossibleTypeReferencesVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,VisitInvocationExpression,The length of the statement  "					MemberResolveResult mrr = resolver.ResolveInternal(invocationExpression' ExpressionContext.Default) as MemberResolveResult; " is 123.
Long Statement,ICSharpCode.SharpDevelop.Dom.Refactoring,FindPossibleTypeReferencesVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,VisitMethodDeclaration,The length of the statement  "					if (resolver.Initialize(parseInformation' methodDeclaration.Body.StartLocation.Y' methodDeclaration.Body.StartLocation.X)) { " is 124.
Long Statement,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionReturnType.cs,Create,The length of the statement  "				return new ConstructedReturnType(Create(pc' member' type.GetGenericTypeDefinition()' createLazyReturnType' false)' para); " is 121.
Long Statement,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,ConvertAccessibility,The length of the statement  "				} else if ((modifier & (ModifierEnum.Protected | ModifierEnum.Internal)) == (ModifierEnum.Protected | ModifierEnum.Internal)) { " is 127.
Long Statement,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,CreateResult,The length of the statement  "			if (expression.Length > 8 && expression.Substring(0' 8).Equals("Imports "' StringComparison.InvariantCultureIgnoreCase)) " is 120.
Long Statement,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,FindExpressionInternal,The length of the statement  "				//Console.WriteLine("cur state {0} got token {1}/{3} going to {2}"' GetStateName(state)' GetTokenName(curTokenType)' GetStateName(stateTable[state' curTokenType])' curTokenType); " is 178.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.CSharp,TypeInference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\TypeInference.cs,MakeExactInference,The conditional expression  "CU != null && CV != null  			    && object.Equals(CU.UnboundType' CV.UnboundType)  			    && CU.TypeArgumentCount == CV.TypeArgumentCount"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.CSharp,TypeInference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\TypeInference.cs,MakeLowerBoundInference,The conditional expression  "arrU != null &&  			    (arrV != null && arrU.ArrayDimensions == arrV.ArrayDimensions  			     || (arrU.ArrayDimensions == 1 && IsIEnumerableCollectionOrList(CV)))"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,TrackCurrentFrameAndExpression,The conditional expression  "(frame.parent.state == FrameState.TypeDecl  						            || frame.parent.state == FrameState.MethodDecl  						            || frame.parent.state == FrameState.FieldDeclAfterIdentifier)  						           && frame.parent.context == ExpressionContext.IdentifierExpected"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,TrackCurrentContext,The conditional expression  "token.Kind == Tokens.GreaterThan  				           || token.Kind == Tokens.DoubleColon || token.Kind == Tokens.Dot  				           || Tokens.SimpleTypeName[token.Kind]"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FindFullExpression,The conditional expression  "resultFrame.type == FrameType.Popped ||  					    lastExpressionStartOffset != resultStartOffset ||  					    token.Kind == Tokens.Dot || token.Kind == Tokens.DoubleColon || token.Kind == Tokens.Pointer"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,RemoveLastPart,The conditional expression  "token.Kind == Tokens.Dot || token.Kind == Tokens.DoubleColon || token.Kind == Tokens.Pointer  					    || token.Kind == Tokens.OpenParenthesis || token.Kind == Tokens.OpenSquareBracket"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,CecilClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,InitMembers,The conditional expression  "(property.GetMethod != null && IsVisible(property.GetMethod.Attributes))  					    || (property.SetMethod != null && IsVisible(property.SetMethod.Attributes))"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "f == SByte && (t == Short || t == Int || t == Long || t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "f == Byte && (t == Short || t == UShort || t == Int || t == UInt || t == Long || t == ULong || t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "f == Short && (t == Int || t == Long || t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "f == UShort && (t == Int || t == UInt || t == Long || t == ULong || t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "f == Int && (t == Long || t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "f == UInt && (t == Long || t == ULong || t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "(f == Long || f == ULong) && (t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "f == Char && (t == UShort || t == Int || t == UInt || t == Long || t == ULong || t == Float || t == Double || t == Decimal)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The conditional expression  "(toIsDefault || to.IsConstructedReturnType || to.IsGenericReturnType)  			    && (fromIsDefault || from.IsArrayReturnType || from.IsConstructedReturnType)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The conditional expression  "t1 == SByte && (t2 == Byte || t2 == UShort || t2 == UInt || t2 == ULong)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The conditional expression  "t2 == SByte && (t1 == Byte || t1 == UShort || t1 == UInt || t1 == ULong)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The conditional expression  "t1 == Short && (t2 == UShort || t2 == UInt || t2 == ULong)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The conditional expression  "t2 == Short && (t1 == UShort || t1 == UInt || t1 == ULong)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom,CtrlSpaceResolveHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CtrlSpaceResolveHelper.cs,FindAllExtensions,The conditional expression  "mp != null && mp.IsExtensionMethod &&  					    (supportsExtensionMethods && o is IMethod || supportsExtensionProperties && o is IProperty)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,ConvertEqualityToReferenceEqualityIfRequired,The conditional expression  "left != null && right != null && left.ResolvedType != null && right.ResolvedType != null"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,ConvertEqualityToReferenceEqualityIfRequired,The conditional expression  "(cLeft.ClassType != ClassType.Struct && cLeft.ClassType != ClassType.Enum)  					    || (cRight.ClassType != ClassType.Struct && cRight.ClassType != ClassType.Enum)"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ObjectInitializerCtrlSpaceInternal,The conditional expression  "languageProperties.ShowMember(f' false)  					    && f.IsAccessible(callingClass' isClassInInheritanceTree)  					    && !(f.IsReadonly && IsValueType(f.ReturnType))"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ObjectInitializerCtrlSpaceInternal,The conditional expression  "languageProperties.ShowMember(p' false)  					    && p.IsAccessible(callingClass' isClassInInheritanceTree)  					    && !(p.CanSet == false && IsValueType(p.ReturnType))"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,ReplaceWithInvocation,The conditional expression  "mgrr != null  			    && mgrr.Methods.Any(g=>g.Count>0)  			    && !(expression.Parent is AddressOfExpression)  			    && !(NRefactoryResolver.IsInvoked(expression))"  is complex.
Complex Conditional,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,VisitDefaultValueExpression,The conditional expression  "c != null && (c.ClassType == ClassType.Class || c.ClassType == ClassType.Interface || c.ClassType == ClassType.Delegate)"  is complex.
Empty Catch Block,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,WriteProjectContent,The method has an empty catch block.
Empty Catch Block,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,ReadProjectContent,The method has an empty catch block.
Empty Catch Block,ICSharpCode.SharpDevelop.Dom,XmlDoc,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\XmlDoc.cs,Load,The method has an empty catch block.
Empty Catch Block,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionEvent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionEvent.cs,ReflectionEvent,The method has an empty catch block.
Empty Catch Block,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionEvent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionEvent.cs,ReflectionEvent,The method has an empty catch block.
Empty Catch Block,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionProperty,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionProperty.cs,ReflectionProperty,The method has an empty catch block.
Empty Catch Block,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionProperty,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionProperty.cs,ReflectionProperty,The method has an empty catch block.
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,FindBestCandidate,The following statement contains a magic number: best == null || GetBetterFunctionMember(best' candidate) == 2
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetBetterFunctionMember,The following statement contains a magic number: res == 2
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetBetterFunctionMember,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetBetterFunctionMember,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetBetterFunctionMember,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetBetterFunctionMember,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetMoreSpecific,The following statement contains a magic number: res == 2
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetMoreSpecific,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetMoreSpecific,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,OverloadResolution,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\OverloadResolution.cs,GetMoreSpecific,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FilterComments,The following statement contains a magic number: switch (ch) {  					case '@':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '"') {  							outText.Append(text[curOffset++]); // @  							outText.Append(text[curOffset++]); // "  							if (!ReadVerbatimString(outText' text' ref curOffset)) {  								return null;  							}  						}else{  							outText.Append(ch);  							++curOffset;  						}  						break;  					case '\'':  						outText.Append(ch);  						curOffset++;  						if(! ReadChar(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '"':  						outText.Append(ch);  						curOffset++;  						if (!ReadString(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '/':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '/') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadToEOL(text' ref curOffset' ref offset)) {  								return null;  							}  						} else if (curOffset + 1 < text.Length && text[curOffset + 1] == '*') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadMultiLineComment(text' ref curOffset' ref offset)) {  								return null;  							}  						} else {  							goto default;  						}  						break;  					case '#':  						if (!ReadToEOL(text' ref curOffset' ref offset)) {  							return null;  						}  						break;  					default:  						outText.Append(ch);  						++curOffset;  						break;  				}
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FilterComments,The following statement contains a magic number: switch (ch) {  					case '@':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '"') {  							outText.Append(text[curOffset++]); // @  							outText.Append(text[curOffset++]); // "  							if (!ReadVerbatimString(outText' text' ref curOffset)) {  								return null;  							}  						}else{  							outText.Append(ch);  							++curOffset;  						}  						break;  					case '\'':  						outText.Append(ch);  						curOffset++;  						if(! ReadChar(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '"':  						outText.Append(ch);  						curOffset++;  						if (!ReadString(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '/':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '/') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadToEOL(text' ref curOffset' ref offset)) {  								return null;  							}  						} else if (curOffset + 1 < text.Length && text[curOffset + 1] == '*') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadMultiLineComment(text' ref curOffset' ref offset)) {  								return null;  							}  						} else {  							goto default;  						}  						break;  					case '#':  						if (!ReadToEOL(text' ref curOffset' ref offset)) {  							return null;  						}  						break;  					default:  						outText.Append(ch);  						++curOffset;  						break;  				}
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FilterComments,The following statement contains a magic number: switch (ch) {  					case '@':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '"') {  							outText.Append(text[curOffset++]); // @  							outText.Append(text[curOffset++]); // "  							if (!ReadVerbatimString(outText' text' ref curOffset)) {  								return null;  							}  						}else{  							outText.Append(ch);  							++curOffset;  						}  						break;  					case '\'':  						outText.Append(ch);  						curOffset++;  						if(! ReadChar(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '"':  						outText.Append(ch);  						curOffset++;  						if (!ReadString(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '/':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '/') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadToEOL(text' ref curOffset' ref offset)) {  								return null;  							}  						} else if (curOffset + 1 < text.Length && text[curOffset + 1] == '*') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadMultiLineComment(text' ref curOffset' ref offset)) {  								return null;  							}  						} else {  							goto default;  						}  						break;  					case '#':  						if (!ReadToEOL(text' ref curOffset' ref offset)) {  							return null;  						}  						break;  					default:  						outText.Append(ch);  						++curOffset;  						break;  				}
Magic Number,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\ExpressionFinder.cs,FilterComments,The following statement contains a magic number: switch (ch) {  					case '@':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '"') {  							outText.Append(text[curOffset++]); // @  							outText.Append(text[curOffset++]); // "  							if (!ReadVerbatimString(outText' text' ref curOffset)) {  								return null;  							}  						}else{  							outText.Append(ch);  							++curOffset;  						}  						break;  					case '\'':  						outText.Append(ch);  						curOffset++;  						if(! ReadChar(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '"':  						outText.Append(ch);  						curOffset++;  						if (!ReadString(outText' text' ref curOffset)) {  							return null;  						}  						break;  					case '/':  						if (curOffset + 1 < text.Length && text[curOffset + 1] == '/') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadToEOL(text' ref curOffset' ref offset)) {  								return null;  							}  						} else if (curOffset + 1 < text.Length && text[curOffset + 1] == '*') {  							offset    -= 2;  							curOffset += 2;  							if (!ReadMultiLineComment(text' ref curOffset' ref offset)) {  								return null;  							}  						} else {  							goto default;  						}  						break;  					case '#':  						if (!ReadToEOL(text' ref curOffset' ref offset)) {  							return null;  						}  						break;  					default:  						outText.Append(ch);  						++curOffset;  						break;  				}
Magic Number,ICSharpCode.SharpDevelop.Dom,ArrayReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\ArrayReturnType.cs,GetHashCode,The following statement contains a magic number: return 2 * elementType.GetHashCode() + 27 * dimensions;
Magic Number,ICSharpCode.SharpDevelop.Dom,ArrayReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\ArrayReturnType.cs,GetHashCode,The following statement contains a magic number: return 2 * elementType.GetHashCode() + 27 * dimensions;
Magic Number,ICSharpCode.SharpDevelop.Dom,CombinedReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\CombinedReturnType.cs,GetHashCode,The following statement contains a magic number: res *= 1300027;
Magic Number,ICSharpCode.SharpDevelop.Dom,DefaultUsing,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultUsing.cs,ToString,The following statement contains a magic number: builder.Length -= 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,GenericReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\GenericReturnType.cs,GetHashCode,The following statement contains a magic number: return 17491 + typeParameter.Index;
Magic Number,ICSharpCode.SharpDevelop.Dom,PointerReturnType,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\PointerReturnType.cs,GetHashCode,The following statement contains a magic number: return 53 * baseType.GetHashCode();
Magic Number,ICSharpCode.SharpDevelop.Dom,ClassNameTypeCountPair,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,GetHashCode,The following statement contains a magic number: return StringComparer.InvariantCultureIgnoreCase.GetHashCode(ClassName) ^ ((int)TypeParameterCount * 5);
Magic Number,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,WriteClasses,The following statement contains a magic number: writer.Write((byte)64);
Magic Number,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,ReadClasses,The following statement contains a magic number: reader.ReadByte() != 64
Magic Number,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,WriteProperty,The following statement contains a magic number: writer.Write((byte)((p.GetterModifiers != ModifierEnum.None ? 1 : 0) + (p.SetterModifiers != ModifierEnum.None ? 2 : 0)));
Magic Number,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,ReadProperty,The following statement contains a magic number: (b & 2) == 2
Magic Number,ICSharpCode.SharpDevelop.Dom,ReadWriteHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\DomPersistence.cs,ReadProperty,The following statement contains a magic number: (b & 2) == 2
Magic Number,ICSharpCode.SharpDevelop.Dom,CecilProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,AddTypes,The following statement contains a magic number: name = name.Substring(0' name.Length - 2);
Magic Number,ICSharpCode.SharpDevelop.Dom,CecilProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,AddTypes,The following statement contains a magic number: name.Length > 2 && name[name.Length - 2] == '`'
Magic Number,ICSharpCode.SharpDevelop.Dom,CecilProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,AddTypes,The following statement contains a magic number: name.Length > 2 && name[name.Length - 2] == '`'
Magic Number,ICSharpCode.SharpDevelop.Dom,CecilClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,InitMembers,The following statement contains a magic number: name = name.Substring(0' name.Length - 2);
Magic Number,ICSharpCode.SharpDevelop.Dom,CecilClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,InitMembers,The following statement contains a magic number: name.Length > 2 && name[name.Length - 2] == '`'
Magic Number,ICSharpCode.SharpDevelop.Dom,CecilClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CecilReader.cs,InitMembers,The following statement contains a magic number: name.Length > 2 && name[name.Length - 2] == '`'
Magic Number,ICSharpCode.SharpDevelop.Dom,CombinedExpressionContext,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ExpressionContext.cs,GetHashCode,The following statement contains a magic number: hashCode += a.GetHashCode() * 3;
Magic Number,ICSharpCode.SharpDevelop.Dom,CombinedExpressionContext,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ExpressionContext.cs,GetHashCode,The following statement contains a magic number: hashCode += b.GetHashCode() * 181247123;
Magic Number,ICSharpCode.SharpDevelop.Dom,XmlDoc,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\XmlDoc.cs,Load,The following statement contains a magic number: cachePath != null && doc.xmlDescription.Count > cacheLength * 2
Magic Number,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterConversion,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterConversion,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterConversion,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetBetterPrimitiveConversion,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.SharpDevelop.Dom,SignatureComparer,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,GetHashCode,The following statement contains a magic number: hashCode *= 1000000579;
Magic Number,ICSharpCode.SharpDevelop.Dom,LanguageProperties,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\LanguageProperties.cs,GetFindClassReferencesTextFinder,The following statement contains a magic number: return new CombinedTextFinder(  					new WholeWordTextFinder(c.Name.Substring(0' c.Name.Length - 9)' nameComparer)'  					new WholeWordTextFinder(c.Name' nameComparer)  				);
Magic Number,ICSharpCode.SharpDevelop.Dom,LanguageProperties,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\LanguageProperties.cs,GetFindClassReferencesTextFinder,The following statement contains a magic number: c.Name.Length > 9 && nameComparer.Equals(c.Name.Substring(c.Name.Length - 9)' "Attribute")
Magic Number,ICSharpCode.SharpDevelop.Dom,LanguageProperties,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\LanguageProperties.cs,GetFindClassReferencesTextFinder,The following statement contains a magic number: c.Name.Length > 9 && nameComparer.Equals(c.Name.Substring(c.Name.Length - 9)' "Attribute")
Magic Number,ICSharpCode.SharpDevelop.Dom,DomRegion,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Interfaces\Region.cs,GetHashCode,The following statement contains a magic number: return BeginColumn + 1100009 * BeginLine + 1200007 * BeginColumn + 1300021 * EndColumn;
Magic Number,ICSharpCode.SharpDevelop.Dom,DomRegion,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Interfaces\Region.cs,GetHashCode,The following statement contains a magic number: return BeginColumn + 1100009 * BeginLine + 1200007 * BeginColumn + 1300021 * EndColumn;
Magic Number,ICSharpCode.SharpDevelop.Dom,DomRegion,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Interfaces\Region.cs,GetHashCode,The following statement contains a magic number: return BeginColumn + 1100009 * BeginLine + 1200007 * BeginColumn + 1300021 * EndColumn;
Magic Number,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,AddNamespaceContents,The following statement contains a magic number: list.Capacity = Math.Max(list.Count * 2' newCapacity);
Magic Number,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,GetClassByReflectionName,The following statement contains a magic number: className = className.Substring(0' className.Length - 2);
Magic Number,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,GetClassByReflectionName,The following statement contains a magic number: className.Length > 2 && className[className.Length - 2] == '`'
Magic Number,ICSharpCode.SharpDevelop.Dom,DefaultProjectContent,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,GetClassByReflectionName,The following statement contains a magic number: className.Length > 2 && className[className.Length - 2] == '`'
Magic Number,ICSharpCode.SharpDevelop.Dom,GenericClassContainer,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DefaultProjectContent.cs,Set,The following statement contains a magic number: IClass[] newArray = new IClass[typeParameterCount + 2];
Magic Number,ICSharpCode.SharpDevelop.Dom,GacInterop,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\GacInterop.cs,GetAssemblyList,The following statement contains a magic number: Fusion.CreateAssemblyEnum(out assemblyEnum' null' null' 2' 0);
Magic Number,ICSharpCode.SharpDevelop.Dom,GacInterop,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\GacInterop.cs,FindBestMatchingAssemblyName,The following statement contains a magic number: Fusion.CreateAssemblyEnum(out assemblyEnum' null' assemblyName' 2' 0);
Magic Number,ICSharpCode.SharpDevelop.Dom,GacInterop,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\GacInterop.cs,FindBestMatchingAssemblyName,The following statement contains a magic number: publicKey != info[3].Substring(info[3].LastIndexOf('=') + 1)
Magic Number,ICSharpCode.SharpDevelop.Dom,GacInterop,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\GacInterop.cs,FindBestMatchingAssemblyName,The following statement contains a magic number: publicKey != info[3].Substring(info[3].LastIndexOf('=') + 1)
Magic Number,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,GetDocumentation,The following statement contains a magic number: length += 2 + doku.Length;
Magic Number,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryASTConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryASTConvertVisitor.cs,VisitMethodDeclaration,The following statement contains a magic number: method.HandlesClauses.Add(handlesClause.Substring(3));
Magic Number,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,Resolve,The following statement contains a magic number: expr = ParseExpression("new " + expression' -4);
Magic Number,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,NRefactoryResolver,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,ParseTypeReference,The following statement contains a magic number: TypeOfExpression toe = ParseExpression("typeof(" + typeReference + ")"' -7) as TypeOfExpression;
Magic Number,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CompareLambdaByLocation,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\NRefactoryResolver.cs,GetHashCode,The following statement contains a magic number: return unchecked (8123351 * obj.StartLocation.GetHashCode() + obj.EndLocation.GetHashCode());
Magic Number,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,VBNetToCSharpConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\VBNetToCSharpConvertVisitor.cs,TransformWithEventsField,The following statement contains a magic number: ies = (IfElseStatement)createdProperty.SetRegion.Block.Children[2];
Magic Number,ICSharpCode.Core,FileUtility,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\FileUtility.Minimal.cs,NormalizePath,The following statement contains a magic number: i = 2;
Magic Number,ICSharpCode.Core,FileUtility,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\FileUtility.Minimal.cs,NormalizePath,The following statement contains a magic number: switch (segmentLength) {  						case 0:  							// ignore empty segment (if not in web mode)  							// On unix' don't ignore empty segment if i==0  							if (isWeb || (i == 0 && Environment.OSVersion.Platform == PlatformID.Unix)) {  								result.Append(outputSeparator);  							}  							break;  						case 1:  							// ignore /./ segment' but append other one-letter segments  							if (fileName[segmentStartPos] != '.') {  								if (result.Length > 0) result.Append(outputSeparator);  								result.Append(fileName[segmentStartPos]);  							}  							break;  						case 2:  							if (fileName[segmentStartPos] == '.' && fileName[segmentStartPos + 1] == '.') {  								// remove previous segment  								int j;  								for (j = result.Length - 1; j >= 0 && result[j] != outputSeparator; j--);  								if (j > 0) {  									result.Length = j;  								}  								break;  							} else {  								// append normal segment  								goto default;  							}  						default:  							if (result.Length > 0) result.Append(outputSeparator);  							result.Append(fileName' segmentStartPos' segmentLength);  							break;  					}
Magic Number,ICSharpCode.Core,FileUtility,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\FileUtility.Minimal.cs,NormalizePath,The following statement contains a magic number: result.Length == 2 && result[1] == ':'
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,CSharpCodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CSharpCodeGenerator.cs,InsertCodeAtEnd,The following statement contains a magic number: int originalPos = region.EndColumn - 2;
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,GetPropertyName,The following statement contains a magic number: return Char.ToUpper(fieldName[1]) + fieldName.Substring(2);
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,GetParameterName,The following statement contains a magic number: return Char.ToLower(fieldName[1]) + fieldName.Substring(2);
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,CodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\CodeGenerator.cs,CreateChangedEvent,The following statement contains a magic number: List<Expression> arguments = new List<Expression>(2);
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryCodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryCodeGenerator.cs,GenerateCode,The following statement contains a magic number: indentCount += 4;
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,NRefactoryCodeGenerator,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryCodeGenerator.cs,GenerateCode,The following statement contains a magic number: visitor.OutputFormatter.IndentationLevel = indentCount / 4;
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,PossibleTypeReference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000007 * Name.GetHashCode();
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,PossibleTypeReference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000009 * TypeParameterCount.GetHashCode();
Magic Number,ICSharpCode.SharpDevelop.Dom.Refactoring,PossibleTypeReference,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Refactoring\NRefactoryRefactoringProvider.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000021 * ExtensionMethod.GetHashCode();
Magic Number,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionClass.cs,ReflectionClass,The following statement contains a magic number: FullyQualifiedName = fullName.Substring(0' fullName.Length - 2);
Magic Number,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionClass.cs,ReflectionClass,The following statement contains a magic number: fullName.Length > 2 && fullName[fullName.Length - 2] == '`'
Magic Number,ICSharpCode.SharpDevelop.Dom.ReflectionLayer,ReflectionClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ReflectionLayer\ReflectionClass.cs,ReflectionClass,The following statement contains a magic number: fullName.Length > 2 && fullName[fullName.Length - 2] == '`'
Magic Number,MSjogren.GacTool.FusionNative,Fusion,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\FusionNative.cs,GetGacPath,The following statement contains a magic number: const int size = 260;
Magic Number,MSjogren.GacTool.FusionNative,Fusion,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\FusionNative.cs,GetGacPath,The following statement contains a magic number: GetCachePath(8' b' ref tmp);
Magic Number,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,CreateResult,The following statement contains a magic number: return new ExpressionResult(expression.Substring(8).TrimStart()' ExpressionContext.Type);
Magic Number,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,CreateResult,The following statement contains a magic number: expression.Length > 8 && expression.Substring(0' 8).Equals("Imports "' StringComparison.InvariantCultureIgnoreCase)
Magic Number,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,CreateResult,The following statement contains a magic number: expression.Length > 8 && expression.Substring(0' 8).Equals("Imports "' StringComparison.InvariantCultureIgnoreCase)
Magic Number,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,CreateResult,The following statement contains a magic number: return new ExpressionResult(expression.Substring(4).TrimStart()' ExpressionContext.ObjectCreation);
Magic Number,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,CreateResult,The following statement contains a magic number: expression.Length > 4 && expression.Substring(0' 4).Equals("New "' StringComparison.InvariantCultureIgnoreCase)
Magic Number,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,CreateResult,The following statement contains a magic number: expression.Length > 4 && expression.Substring(0' 4).Equals("New "' StringComparison.InvariantCultureIgnoreCase)
Missing Default,ICSharpCode.SharpDevelop.Dom.CSharp,CSharpAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\CSharp\CSharpAmbience.cs,Convert,The following switch statement is missing a default case: switch (c.ClassType) {  					case ClassType.Delegate:  						builder.Append("delegate");  						break;  					case ClassType.Class:  					case ClassType.Module:  						builder.Append("class");  						break;  					case ClassType.Struct:  						builder.Append("struct");  						break;  					case ClassType.Interface:  						builder.Append("interface");  						break;  					case ClassType.Enum:  						builder.Append("enum");  						break;  				}
Missing Default,ICSharpCode.SharpDevelop.Dom,DefaultClass,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\Implementations\DefaultClass.cs,GetBaseTypeByClassType,The following switch statement is missing a default case: switch (c.ClassType) {  				case ClassType.Class:  				case ClassType.Interface:  					if (c.FullyQualifiedName != "System.Object") {  						return c.ProjectContent.SystemTypes.Object;  					}  					break;  				case ClassType.Enum:  					return c.ProjectContent.SystemTypes.Enum;  				case ClassType.Delegate:  					return c.ProjectContent.SystemTypes.Delegate;  				case ClassType.Struct:  					return c.ProjectContent.SystemTypes.ValueType;  			}
Missing Default,ICSharpCode.SharpDevelop.Dom,DomAssemblyName,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\ProjectContent\DomAssemblyName.cs,DomAssemblyName,The following switch statement is missing a default case: switch (val.Substring(0' pos)) {  						case "Version":  							version = val.Substring(pos + 1);  							break;  						case "Culture":  							culture = val.Substring(pos + 1);  							break;  						case "PublicKeyToken":  							publicKeyToken = val.Substring(pos + 1);  							break;  					}
Missing Default,ICSharpCode.SharpDevelop.Dom,XmlDoc,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\XmlDoc.cs,ReadMembersSection,The following switch statement is missing a default case: switch (reader.NodeType) {  					case XmlNodeType.EndElement:  						if (reader.LocalName == "members") {  							return;  						}  						break;  					case XmlNodeType.Element:  						if (reader.LocalName == "member") {  							string memberAttr = reader.GetAttribute(0);  							string innerXml   = reader.ReadInnerXml();  							xmlDescription[memberAttr] = innerXml;  						}  						break;  				}
Missing Default,ICSharpCode.SharpDevelop.Dom,XmlDoc,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\XmlDoc.cs,Load,The following switch statement is missing a default case: switch (reader.LocalName) {  						case "members":  							newXmlDoc.ReadMembersSection(reader);  							break;  					}
Missing Default,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,InferTypeArgument,The following switch statement is missing a default case: switch (expectedArgument.FullyQualifiedName) {  						case "System.Collections.Generic.IList":  						case "System.Collections.Generic.ICollection":  						case "System.Collections.Generic.IEnumerable":  							return InferTypeArgument(expectedArgument.CastToConstructedReturnType().TypeArguments[0]' passedArrayElementType' outputArray);  					}
Missing Default,ICSharpCode.SharpDevelop.Dom,MemberLookupHelper,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\MemberLookupHelper.cs,ConversionExistsInternal,The following switch statement is missing a default case: switch (toClass.ClassType) {  						case ClassType.Class:  						case ClassType.Delegate:  						case ClassType.Interface:  							return true;  						case ClassType.Struct:  							return toClass.FullyQualifiedName == "System.Nullable";  					}
Missing Default,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,VisitBinaryOperatorExpression,The following switch statement is missing a default case: switch (binaryOperatorExpression.Op) {  				case BinaryOperatorType.Equality:  				case BinaryOperatorType.InEquality:  					ConvertEqualityToReferenceEqualityIfRequired(binaryOperatorExpression);  					break;  				case BinaryOperatorType.Add:  					ConvertArgumentsForStringConcatenationIfRequired(binaryOperatorExpression);  					break;  				case BinaryOperatorType.Divide:  					ConvertDivisionToIntegerDivisionIfRequired(binaryOperatorExpression);  					break;  			}
Missing Default,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,IsInteger,The following switch statement is missing a default case: switch (rt.FullyQualifiedName) {  					case "System.Byte":  					case "System.SByte":  					case "System.Int16":  					case "System.UInt16":  					case "System.Int32":  					case "System.UInt32":  					case "System.Int64":  					case "System.UInt64":  						return true;  				}
Missing Default,ICSharpCode.SharpDevelop.Dom.NRefactoryResolver,CSharpToVBNetConvertVisitor,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\NRefactoryResolver\CSharpToVBNetConvertVisitor.cs,VisitUnaryOperatorExpression,The following switch statement is missing a default case: switch (unaryOperatorExpression.Op) {  				case UnaryOperatorType.Dereference:  					ReplaceCurrentNode(unaryOperatorExpression.Expression.Member("Target"));  					break;  				case UnaryOperatorType.AddressOf:  					ResolveResult rr = resolver.ResolveInternal(unaryOperatorExpression.Expression' ExpressionContext.Default);  					if (rr != null && rr.ResolvedType != null) {  						TypeReference targetType = Refactoring.CodeGenerator.ConvertType(rr.ResolvedType' CreateContext());  						TypeReference pointerType = new TypeReference("Pointer"' new List<TypeReference> { targetType });  						ReplaceCurrentNode(pointerType.New(unaryOperatorExpression.Expression));  					}  					break;  			}
Missing Default,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,Convert,The following switch statement is missing a default case: switch (c.ClassType) {  					case ClassType.Delegate:  						builder.Append("Delegate ");  						if (ShowReturnType) {  							foreach (IMethod m in c.Methods) {  								if (m.Name != "Invoke") {  									continue;  								}  								  								if (m.ReturnType == null || m.ReturnType.FullyQualifiedName == "System.Void") {  									builder.Append("Sub");  								} else {  									builder.Append("Function");  								}  							}  						}  						break;  					case ClassType.Class:  						builder.Append("Class");  						break;  					case ClassType.Module:  						builder.Append("Module");  						break;  					case ClassType.Struct:  						builder.Append("Structure");  						break;  					case ClassType.Interface:  						builder.Append("Interface");  						break;  					case ClassType.Enum:  						builder.Append("Enum");  						break;  				}
Missing Default,ICSharpCode.SharpDevelop.Dom.VBNet,VBNetAmbience,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\VBNetAmbience.cs,ConvertEnd,The following switch statement is missing a default case: switch (c.ClassType) {  				case ClassType.Delegate:  					builder.Append("Delegate");  					break;  				case ClassType.Class:  					builder.Append("Class");  					break;  				case ClassType.Module:  					builder.Append("Module");  					break;  				case ClassType.Struct:  					builder.Append("Structure");  					break;  				case ClassType.Interface:  					builder.Append("Interface");  					break;  				case ClassType.Enum:  					builder.Append("Enum");  					break;  			}
Missing Default,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,ReadBracket,The following switch statement is missing a default case: switch (openBracket)  			{  				case '(':  					parenthesisLevel++;  					break;  				case '[':  					squareBracketLevel++;  					break;  				case '{':  					curlyBraceLevel++;  					break;  			}
Missing Default,ICSharpCode.SharpDevelop.Dom.VBNet,VBExpressionFinder,D:\research\architectureSmells\repos\jbuedel_AgentRalphPlugin\ICSharpCode.SharpDevelop.Dom\Src\VBNet\ExpressionFinder.cs,ReadBracket,The following switch statement is missing a default case: switch (ch)  				{  					case '(':  						parenthesisLevel--;  						break;  					case '[':  						squareBracketLevel--;  						break;  					case '{':  						curlyBraceLevel--;  						break;  					case ')':  						parenthesisLevel++;  						break;  					case ']':  						squareBracketLevel++;  						break;  					case '}':  						curlyBraceLevel++;  						break;  				}
