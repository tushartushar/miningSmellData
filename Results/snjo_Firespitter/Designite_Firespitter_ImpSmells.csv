Implementation smell,Namespace,Class,File,Method,Description
Long Method,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,getCollectiveInput,The method has 122 lines of code.
Long Method,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,FixedUpdate,The method has 139 lines of code.
Complex Method,Firespitter.animation,FSslowtato,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\animation\FSslowtato.cs,OnUpdate,Cyclomatic complexity of the method is 8
Complex Method,Firespitter.cockpit,FSActionGroupSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSActionGroupSwitch.cs,buttonClick,Cyclomatic complexity of the method is 11
Complex Method,Firespitter.cockpit,FSActionGroupSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSActionGroupSwitch.cs,Start,Cyclomatic complexity of the method is 18
Complex Method,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,Cyclomatic complexity of the method is 20
Complex Method,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,Cyclomatic complexity of the method is 16
Complex Method,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getMenuHandlerFromEnum,Cyclomatic complexity of the method is 9
Complex Method,Firespitter.customization,FSfuelSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FSfuelSwitch.cs,setupTankList,Cyclomatic complexity of the method is 9
Complex Method,Firespitter.customization,FSmeshSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FSmeshSwitch.cs,setObject,Cyclomatic complexity of the method is 10
Complex Method,Firespitter.customization,FStextureSwitch2,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch2.cs,initializeData,Cyclomatic complexity of the method is 10
Complex Method,Firespitter.customization,FStextureSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch.cs,OnStart,Cyclomatic complexity of the method is 13
Complex Method,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,getCollectiveInput,Cyclomatic complexity of the method is 18
Complex Method,Firespitter.engine,FSpropellerTweak,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSpropellerTweak.cs,updateExhaustNumber,Cyclomatic complexity of the method is 9
Complex Method,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnUpdate,Cyclomatic complexity of the method is 13
Complex Method,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,Cyclomatic complexity of the method is 15
Complex Method,Firespitter.engine,FSplanePropellerSpinner,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSplanePropellerSpinner.cs,OnStart,Cyclomatic complexity of the method is 17
Complex Method,Firespitter.engine,FSplanePropellerSpinner,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSplanePropellerSpinner.cs,OnUpdate,Cyclomatic complexity of the method is 15
Complex Method,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,FixedUpdate,Cyclomatic complexity of the method is 41
Complex Method,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,Cyclomatic complexity of the method is 9
Complex Method,Firespitter.engine,FSmultiAxisEngine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSmultiAxisEngine.cs,OnStart,Cyclomatic complexity of the method is 14
Complex Method,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,FixedUpdate,Cyclomatic complexity of the method is 8
Complex Method,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,FixedUpdate,Cyclomatic complexity of the method is 11
Complex Method,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnUpdate,Cyclomatic complexity of the method is 15
Complex Method,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,Cyclomatic complexity of the method is 10
Complex Method,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,Cyclomatic complexity of the method is 10
Complex Method,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,OnGUI,Cyclomatic complexity of the method is 8
Complex Method,Firespitter,Tools,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\FStools.cs,parseNames,Cyclomatic complexity of the method is 9
Long Parameter List,Firespitter.customization,FStextureSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch.cs,getNodeValues,The method has 6 parameters. Parameters: node' nodeLoader' nodeName' valueName' outputDict' outputList
Long Identifier,Firespitter.engine,FSmultiAxisEngine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSmultiAxisEngine.cs,,The length of the parameter pitchGimbalExtremeTransformName is 31.
Long Identifier,Firespitter.engine,FSmultiAxisEngine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSmultiAxisEngine.cs,,The length of the parameter rollGimbalExtremeTransformName is 30.
Long Identifier,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,,The length of the parameter thrustTransformDefaultPosition is 30.
Long Statement,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,GetVelocity,The length of the statement  "            //newVelocity = commonRigidBody.velocity + Krakensbane.GetFrameVelocity() + Vector3.Cross(commonRigidBody.angularVelocity' liftTransform.position - commonRigidBody.position); " is 174.
Long Statement,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,getLiftVector,The length of the statement  "            Vector3 ParallelInPlane = Vector3.Exclude(liftTransform.up' bladeVelocity).normalized;  //Projection of velocity vector onto the plane of the wing " is 146.
Long Statement,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,getLiftVector,The length of the statement  "            Vector3 perp = Vector3.Cross(liftTransform.up' ParallelInPlane).normalized;       //This just gives the vector to cross with the velocity vector " is 144.
Long Statement,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,FixedUpdate,The length of the statement  "                commonRigidBody.AddForceAtPosition(liftAndDrag.y * dragMultiplier * -commonRigidBody.GetPointVelocity(liftTransform.position).normalized' liftTransform.position); " is 162.
Long Statement,Firespitter.cockpit,FSActionGroupSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSActionGroupSwitch.cs,buttonClick,The length of the statement  "                switchObjectTransform.GetComponent<Renderer>().material.SetColor("_EmissiveColor"' new Color(onEmissiveColor.x' onEmissiveColor.y' onEmissiveColor.z)); " is 151.
Long Statement,Firespitter.cockpit,FSActionGroupSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSActionGroupSwitch.cs,buttonClick,The length of the statement  "                                    ScreenMessages.PostScreenMessage(new ScreenMessage("hover height set to " + Math.Round(copterEngine.hoverHeight' 1)' 2f' ScreenMessageStyle.UPPER_CENTER)); " is 155.
Long Statement,Firespitter.cockpit,FSActionGroupSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSActionGroupSwitch.cs,Update,The length of the statement  "                        switchObjectTransform.GetComponent<Renderer>().material.SetColor("_EmissiveColor"' new Color(offEmissiveColor.x' offEmissiveColor.y' offEmissiveColor.z' 1f)); " is 158.
Long Statement,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,createTextGrid,The length of the statement  "                        //GameObject newPlate = (GameObject)Instantiate(baseCharPlate' baseCharPlate.transform.position + new Vector3(charSpacing * (charCount)' 0f' lineSpacing * (lineCount))' Quaternion.Euler(new Vector3(-90f'0f'0f))); " is 212.
Long Statement,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,createTextGrid,The length of the statement  "                        GameObject newPlate = (GameObject)Instantiate(baseCharPlate' baseCharPlate.transform.position' baseCharPlate.transform.rotation); " is 129.
Long Statement,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,OnUpdate,The length of the statement  "            if (CameraManager.Instance.currentCameraMode == CameraManager.CameraMode.IVA)            //|| CameraManager.Instance.currentCameraMode == CameraManager.CameraMode.Internal) " is 172.
Long Statement,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,parseStringArray,The length of the statement  "                            lineList[lineCount][charCount].GetComponent<Renderer>().material.mainTextureOffset = (getSheetCharPosition(paddedChar) * spriteScale) - new Vector2(spriteShift' 0f); " is 165.
Long Statement,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,parseSingleString,The length of the statement  "                lineList[lineNum][charNum].GetComponent<Renderer>().material.mainTextureOffset = (getSheetCharPosition(c[i]) * spriteScale) - new Vector2(spriteShift' 0f); " is 155.
Long Statement,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,OnUpdate,The length of the statement  "            if (CameraManager.Instance.currentCameraMode == CameraManager.CameraMode.IVA && vessel == FlightGlobals.ActiveVessel)            //|| CameraManager.Instance.currentCameraMode == CameraManager.CameraMode.Internal) " is 212.
Long Statement,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuFlightData,The length of the statement  "            //        refTransform.rotation = Quaternion.LookRotation(vessel.ReferenceTransform.up' -vessel.ReferenceTransform.forward);         " is 124.
Long Statement,Firespitter.customization,FSfuelSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FSfuelSwitch.cs,setupTankList,The length of the statement  "                        Debug.Log("FSfuelSwitch: error parsing resource amount " + tankCount + "/" + amountCount + ": '" + resourceTankArray[amountCount] + "': '" + resourceAmountArray[amountCount].Trim()+"'"); " is 186.
Long Statement,Firespitter.customization,FSfuelSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FSfuelSwitch.cs,setupTankList,The length of the statement  "            // Then find the kinds of resources each tank holds' and fill them with the amounts found previously' or the amount hey held last (values kept in save persistence/craft) " is 169.
Long Statement,Firespitter.customization,FSmeshSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FSmeshSwitch.cs,setObject,The length of the statement  "            // enable the selected one last because there might be several entries with the same object' and we don't want to disable it after it's been enabled. " is 149.
Long Statement,Firespitter.customization,FStextureSwitch2,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch2.cs,useMap,The length of the statement  "            debug.debugMessage("maplist count: " + mapList.Count + "' selectedTexture: " + selectedTexture + "' texlist Count: " + texList.Count); " is 134.
Long Statement,Firespitter.customization,FStextureSwitch2,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch2.cs,useMap,The length of the statement  "                        debug.debugMessage("not setting currentTextureName. selectedTexture is " + selectedTexture + "' texDispList count is" + textureDisplayList.Count + "' texList count is " + texList.Count); " is 186.
Long Statement,Firespitter.customization,FStextureSwitch2,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch2.cs,useMap,The length of the statement  "                    debug.debugMessage("useMap' index out of range error' maplist count: " + mapList.Count + "' selectedTexture: " + selectedTexture); " is 130.
Long Statement,Firespitter.customization,FStextureSwitch2,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch2.cs,initializeData,The length of the statement  "                debug.debugMessage("found " + texList.Count + " textures' using number " + selectedTexture + "' found " + objectList.Count + " objects' " + mapList.Count + " maps"); " is 165.
Long Statement,Firespitter.customization,FStextureSwitch2,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch2.cs,initializeData,The length of the statement  "                        if (t != null && t.gameObject.GetComponent<Renderer>() != null) // check for if the object even has a mesh. otherwise part list loading crashes " is 143.
Long Statement,Firespitter.customization,FStextureSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch.cs,OnStart,The length of the statement  "            debug.debugMessage("FStextureSwitch found " + texList.Count + " textures' using number " + selectedTexture + "' found " + objectList.Count + " objects' " + mapList.Count + " maps"); " is 181.
Long Statement,Firespitter.customization,FStextureSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch.cs,OnStart,The length of the statement  "                if (targetObjectTransform != null && targetObjectTransform.gameObject.GetComponent<Renderer>() != null) // check for if the object even has a mesh. otherwise part list loading crashes " is 183.
Long Statement,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,updateRPM,The length of the statement  "                //float RPMgain = Mathf.Lerp(powerProduction' maxPowerProduction' propTweak.engineLengthSlider) * TimeWarp.deltaTime * fuelReceivedNormalized; " is 142.
Long Statement,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,updateRPM,The length of the statement  "                RPM -= (engineBrake + (Mathf.Abs(requestedThrottle) * powerDrain)) * TimeWarp.deltaTime; // for reducing engine power when it's no longer ignited " is 145.
Long Statement,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,setBladePitch,The length of the statement  "                float bladeRotation = collective + (cyclic.x * bladePitchAligned * steeringResponse) + (cyclic.y * bladeRollAligned * steeringResponse * rollMultiplier); " is 153.
Long Statement,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,setBladePitch,The length of the statement  "                //bladeLifts[i].pointVelocityMagnitude = Mathf.Clamp((RPM * circumeference) / 60f' 0' 340f) * rotationDirection; // clamping to supersonic 340 m/s " is 146.
Long Statement,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,getCollectiveInput,The length of the statement  "                    //Debug.Log(" as " + Math.Round(airSpeedThroughRotor' 2) + " maxClimb " +  Math.Round(maxClimb' 2) + " hoverHeight " +  (int)hoverHeight + " offset " + heightOffset); " is 166.
Long Statement,Firespitter.engine,FSalternator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSalternator.cs,OnStart,The length of the statement  "                engineScaleMultiplier = Mathf.Max(0.1f' propTweak.engineLengthSlider); // engine scale can be 0 or negative. That would be a bad multiplier. " is 140.
Long Statement,Firespitter.engine,FSengineHover,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSengineHover.cs,printSpeed,The length of the statement  "            ScreenMessages.PostScreenMessage(new ScreenMessage("Hover Climb Rate: " + verticalSpeed' 1f' ScreenMessageStyle.UPPER_CENTER)); " is 127.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Start,The length of the statement  "            //    //Setting the values for the particle system. the animator is never doing anything exciting' all particle motion is handled in the late update code " is 153.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Update,The length of the statement  "            // shoot a ray from the thrustTransform' along the direction of thrust. If it hits the ground' the distance value will be less than maxDistance'  " is 144.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Update,The length of the statement  "                // layer 15 is the landscap/buildine layer. parts are layer 10' ignore those. the runway should also be layer 15' but it's not registering properly... " is 150.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Update,The length of the statement  "            //float seaAltitude = Vector3.Distance(washDisc.transform.position' vessel.mainBody.position) - (float)vessel.mainBody.Radius; " is 126.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Update,The length of the statement  "            // rotate the disc so it's horizontal (does not follow the terrain slope though. Maybe there is a terrain normal to look at' but it looks OK on hills as is) " is 156.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,LateUpdate,The length of the statement  "            //        // Oh hey' you can't access Interpolate Triangles on mesh emitters' so I have to this junk! Fuck you' whoever made the old Unity particle system. " is 155.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,LateUpdate,The length of the statement  "            //            //particles spawn on the outer points of the disc. move it a random amount towrds the center to distribute the spawning. a high number of outer points makes it look OK without exra sideways randomness. " is 215.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,LateUpdate,The length of the statement  "            //            particles[i].position = Vector3.Lerp(particles[i].position' washDisc.transform.position' UnityEngine.Random.value); " is 129.
Long Statement,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,LateUpdate,The length of the statement  "            //        particles[i].position -= offset.normalized * 0.01f * Mathf.Clamp((maxDistance - currentDistance) - offset.magnitude' 1f' 15f); " is 136.
Long Statement,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,HandleFixedUpdate,The length of the statement  "                RPM -= (engineBrake + (Mathf.Abs(requestedThrottle) * powerDrain)) * TimeWarp.deltaTime; // for reducing engine power when it's no longer ignited                                 " is 145.
Long Statement,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,HandleFixedUpdate,The length of the statement  "            float applyThrust = thrustPerTransform * RPMnormalized * atmosphericThrustCurve.Evaluate((float)vessel.atmDensity) * velocityCurve.Evaluate(thrustTransformRelativeSpeed); " is 170.
Long Statement,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,calculateFinalThrust,The length of the statement  "            finalThrust = maxThrust * Mathf.Clamp(requestedThrottle' -maxThrottleNormalized' maxThrottleNormalized) * throttleThrustCurve.Evaluate(requestedThrottle); " is 154.
Long Statement,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,consumeResources,The length of the statement  "                    double requestFuelAmount = fuelConsumptionCurve.Evaluate(getWorkDone()) * maxThrust * resourceList[i].ratio * TimeWarp.deltaTime; " is 129.
Long Statement,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,consumeResources,The length of the statement  "                        //Debug.Log("fR/rFA: " + fuelReceived / requestFuelAmount + " - clamped: " + Tools.Clamp(fuelReceived / requestFuelAmount' 0d' 1d)); " is 132.
Long Statement,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,consumeResources,The length of the statement  "                            debug.debugMessage("FO " + resourceList[i].name + " == " + resourceList[i].currentSupply + "' requested" + requestFuelAmount + " received " + fuelReceived); " is 156.
Long Statement,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,consumeResources,The length of the statement  "                            debug.debugMessage("not FO: " + resourceList[i].name + " : " + resourceList[i].currentSupply + "' requested" + requestFuelAmount + " received " + fuelReceived); " is 160.
Long Statement,Firespitter.engine,FSpropellerTweak,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSpropellerTweak.cs,updateBladeList,The length of the statement  "                    blades[i].transform.localRotation = Quaternion.Euler(propellerRotationAxis * (originalBladeRotation + ((360f / bladeNumber) * (i)))); " is 133.
Long Statement,Firespitter.engine,FSpropellerTweak,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSpropellerTweak.cs,updateEngineLength,The length of the statement  "                engineExtension.transform.localScale = Vector3.one + (engineExtensionAxis * Mathf.Lerp(engineScaleRange.x' engineScaleRange.y' engineLengthSlider)); " is 148.
Long Statement,Firespitter.engine,FSpropellerTweak,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSpropellerTweak.cs,initialize,The length of the statement  "                if (propellerRoot == null) Debug.Log("FSpropellerTweak: Nasty error' no propeller root found named " + propellerRootName); " is 122.
Long Statement,Firespitter.engine,FSvelocityController,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSvelocityController.cs,updateThruster,The length of the statement  "                    //part.gameObject.GetComponent<Rigidbody>().AddForceAtPosition(-thrustDirection * thrustModifier * maxThrust' t.transform.position); " is 132.
Long Statement,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnUpdate,The length of the statement  "                        if (RotorParent.transform.localEulerAngles.y > parkedBladeRotation + 1.1f || RotorParent.transform.localEulerAngles.y < parkedBladeRotation - 1.1f) " is 147.
Long Statement,Firespitter.engine,FSplanePropellerSpinner,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSplanePropellerSpinner.cs,OnUpdate,The length of the statement  "                        // if you are using duplicated blades' you don't use a rotor disc' but blur sections for each blade' and need to slow down the rotor itself. " is 140.
Long Statement,Firespitter.engine,FSplanePropellerSpinner,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSplanePropellerSpinner.cs,OnUpdate,The length of the statement  "                                propeller.Rotate(Vector3.forward * ((rotorDiscSpeed * (1 + (5 * engine.fsengine.RPMnormalized))) * TimeWarp.deltaTime)); " is 120.
Long Statement,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,FixedUpdate,The length of the statement  "            // if the engine module is stock' I might mess with it via atmosphericNerf. If it's FSengine' it will only be changed by propeller tweak at the start of flight (or maybe applyDamage)' but I need to catch that. " is 209.
Long Statement,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The length of the statement  "                GUI.Label(new Rect(menuItemRect.x + ((buttonSize.x + 10f) * 3)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' " is 131.
Long Statement,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The length of the statement  "                warning = GUI.TextField(new Rect(menuItemRect.x + buttonSize.x + 10f' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' warning); " is 147.
Long Statement,Firespitter.engine,FSmultiAxisEngine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSmultiAxisEngine.cs,updateGimbal,The length of the statement  "            gimbalTransform.localRotation = gimbalDefaultRotation * Quaternion.AngleAxis(this.gimbalAnglePitch' gimbalTransform.InverseTransformDirection(vessel.ReferenceTransform.right)) * Quaternion.AngleAxis(gimbalAngleYaw' gimbalTransform.InverseTransformDirection(vessel.ReferenceTransform.forward)); " is 293.
Long Statement,Firespitter.engine,FSmultiAxisEngine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSmultiAxisEngine.cs,OnFixedUpdate,The length of the statement  "                rotateParts(new Vector3(gimbalResult.x * axisMultiplier.x' gimbalResult.y * axisMultiplier.y' gimbalResult.z * axisMultiplier.z)); " is 130.
Long Statement,Firespitter.engine,FSpropellerAtmosphericNerf,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSpropellerAtmosphericNerf.cs,OnUpdate,The length of the statement  "            if ((atmosphericModifier > 1f && thrustModifier > 1f) || disableAtmosphericNerf) atmosphericModifier = 1f; // not setting modifier to 1 at thrustModifier 1 or lower allows for engine that are better than normal in atmospeheres above 1 " is 234.
Long Statement,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,translateThrustTransform,The length of the statement  "            partTransform.position -= vessel.ReferenceTransform.up.normalized * translationDistance * steeringInput.z * steerThrustModifier; " is 128.
Long Statement,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,translateThrustTransform,The length of the statement  "            partTransform.position -= vessel.ReferenceTransform.right.normalized * translationDistance * steeringInput.x * steerThrustModifier; " is 131.
Long Statement,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,setPartRotation,The length of the statement  "            partTransform.localRotation = Quaternion.Euler(currentRotation + new Vector3(defaultRotationX' defaultRotationY' defaultRotationZ)); " is 132.
Long Statement,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,autoHover,The length of the statement  "                partTransform.localRotation = Quaternion.Euler(currentRotation + new Vector3(defaultRotationX' defaultRotationY' defaultRotationZ)); " is 132.
Long Statement,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The length of the statement  "            elementSteerPitchType = new PopupElement("Pitch type"' new PopupButton("Throttle"' "Rotation"' 0f' toggleSteerPitchType)); " is 122.
Long Statement,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The length of the statement  "                popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(550f' 200f' 325f' 150f)' "VTOL presets"' elementInfoText); //FSGUIwindowID.VTOLrotator " is 159.
Long Statement,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The length of the statement  "                popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(500f' 300f' 250f' 100f)' "VTOL steering"' elementSteerRoll); //FSGUIwindowID.VTOLrotator " is 161.
Long Statement,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,testUseAngle,The length of the statement  "                    if (dot < 0) // check for orientation of the part' relative to world directions' since there is no vessel transfrom to compare to " is 129.
Long Statement,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnUpdate,The length of the statement  "                // test whether the engine is on the left or right side of the craft' for inverting the engine rotation and thrust based roll. " is 126.
Long Statement,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnUpdate,The length of the statement  "                if (Vector3.Dot(partTransform.position.normalized' vessel.ReferenceTransform.right) < 0) // below 0 means the engine is on the left side of the craft " is 149.
Long Statement,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,updateLineColor,The length of the statement  "            if (Vector3.Dot(part.transform.TransformDirection(guideDirection)' worldDirection.transform.TransformDirection(correctWorldDirection)) > 0.5f) " is 142.
Long Statement,Firespitter.info,FSdebugMessages,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSdebugMessages.cs,OnGUI,The length of the statement  "                    GUI.Label(new Rect(screenPosition.x' screenPosition.y + lineSpacing * i' screenPosition.width' screenPosition.height)' outputLines[i].text); " is 140.
Long Statement,Firespitter.info,FSdebugMessages,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSdebugMessages.cs,Post,The length of the statement  "            if (postToScreenDuration > 0f && HighLogic.LoadedSceneIsFlight) // will only work in the flight scene' gives an error in other places. " is 134.
Long Statement,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The length of the statement  "            if (GUI.Button(new Rect(menuItemRect.x + menuItemSize.x - buttonSize.x' menuItemRect.y' buttonSize.x' buttonSize.y)' "X")) " is 122.
Long Statement,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The length of the statement  "                textHeading = writeLine(new Rect(menuItemRect.x' menuItemRect.y' menuItemRect.width - buttonSize.x - 10f' menuItemRect.height)' textHeading); " is 141.
Long Statement,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The length of the statement  "            GUI.Label(new Rect(menuItemRect.x + buttonSize.x + 10f' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' "Show on start"); " is 141.
Long Statement,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The length of the statement  "            if (GUI.Button(new Rect(menuItemRect.x + (menuItemSize.x / 2)' menuItemRect.y' buttonSize.x' buttonSize.y)' useHotkeyString)) " is 125.
Long Statement,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The length of the statement  "            GUI.Label(new Rect(menuItemRect.x + buttonSize.x + 10f + (menuItemSize.x / 2)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' "Use hotkey (" + toggleKey + ")"); " is 181.
Long Statement,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The length of the statement  "                GUI.Label(new Rect(menuItemRect.x + (buttonSize.x * 2) + 20f' menuItemRect.y' menuItemRect.width' menuItemRect.height)' "Hiding this window in " + (int)countDown); " is 163.
Long Statement,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,OnGUI,The length of the statement  "                //GUI.Box(new Rect(menuBasePosition.x - 10f' menuBasePosition.y - 10f' menuItemSize.x + 20f' (menuItemSize.y * 14) + 20f)' ""); " is 127.
Long Statement,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The length of the statement  "                Vector3 forwardLineHorizontal = new Vector3(anglePointForwardHorizontal.x' centerPoint.y' anglePointForwardHorizontal.z) - centerPoint; " is 135.
Long Statement,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The length of the statement  "                Vector3 forwardLineVertical = new Vector3(centerPoint.x' anglePointForwardVertical.y' anglePointForwardVertical.z) - centerPoint; " is 129.
Magic Number,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,getLiftAndDrag,The following statement contains a magic number: float liftCoeff = 2f * Mathf.PI * angleOfAttackRad;
Magic Number,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,getLiftAndDrag,The following statement contains a magic number: lift = 0.5f * liftCoeff * airDensity * (speed * speed) * wingArea;
Magic Number,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,getLiftAndDrag,The following statement contains a magic number: bladeDrag = 0.5f * dragCoeff * airDensity * (speed * speed) * wingArea;
Magic Number,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,getLiftAndDrag,The following statement contains a magic number: discDrag = 0.5f * dragCoeff * airDensity * (partVelocity.magnitude * partVelocity.magnitude) * wingArea;
Magic Number,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,liftQuery,The following statement contains a magic number: float liftCoeff = 2f * Mathf.PI * angleOfAttackRad;
Magic Number,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,liftQuery,The following statement contains a magic number: lift = 0.5f * liftCoeff * airDensity * (speed * speed) * wingArea;
Magic Number,Firespitter.aero,FSbladeLiftSurface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\aero\FSbladeLiftSurface.cs,liftQuery,The following statement contains a magic number: discDrag = 0.5f * dragCoeff * airDensity * (speed * speed) * wingArea;
Magic Number,Firespitter.cockpit,AnalogCounter,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\AnalogCounter.cs,setRotation,The following statement contains a magic number: wheel.localRotation = Quaternion.Euler(defaultRotation + (newValue * rotationAxis * 36f));
Magic Number,Firespitter.cockpit,AnalogCounter,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\AnalogCounter.cs,updateNumber,The following statement contains a magic number: wheelValue = number % 10f;
Magic Number,Firespitter.cockpit,AnalogCounter,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\AnalogCounter.cs,updateNumber,The following statement contains a magic number: wheelValue > 9f
Magic Number,Firespitter.cockpit,AnalogCounter,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\AnalogCounter.cs,updateNumber,The following statement contains a magic number: number = number / 10f;
Magic Number,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,getSheetCharPosition,The following statement contains a magic number: int charPos = charInt % 16;
Magic Number,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,getSheetCharPosition,The following statement contains a magic number: int linePos = (charInt - charPos) / 16;
Magic Number,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,getSheetCharPosition,The following statement contains a magic number: linePos = 16 - linePos - 1;
Magic Number,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,OnUpdate,The following statement contains a magic number: fsMon = new FSmonitorInterface[20];
Magic Number,Firespitter.cockpit,FSmonitorScript,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorScript.cs,parseSingleString,The following statement contains a magic number: int lineNum = (i - charNum) / 10;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings = new string[12];
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[2] = infoPopup.textBody2;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[3] = infoPopup.textBody3;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[4] = infoPopup.textBody4;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[5] = infoPopup.textBody5;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[6] = infoPopup.textBody6;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[7] = infoPopup.textBody7;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[8] = infoPopup.textBody8;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[9] = infoPopup.textBody9;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[10] = infoPopup.textBody10;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,getInfoPopupText,The following statement contains a magic number: infoPopupStrings[11] = infoPopup.textBody11;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,Start,The following statement contains a magic number: buttonObjectNames = new string[4] { button1' button2' button3' button4 };
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,updateFlightData,The following statement contains a magic number: altitudeString = Math.Floor(FlightGlobals.ship_altitude).ToString().PadLeft(6) + " m";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,updateFlightData,The following statement contains a magic number: radarAltitudeString = Math.Floor(vessel.altitude - Math.Max(vessel.pqsAltitude' 0D)).ToString().PadLeft(6) + " m";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,updateFlightData,The following statement contains a magic number: climbrateString = Math.Round(FlightGlobals.ship_verticalSpeed' 1).ToString().PadLeft(6) + " m/s";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,updateFlightData,The following statement contains a magic number: speedString = Math.Round(displaySpeed' 1).ToString().PadLeft(6) + " m/s";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,updateFlightData,The following statement contains a magic number: hoverString = Math.Round(hoverHeight' 1).ToString().PadLeft(6) + " m";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,updateFuel,The following statement contains a magic number: resourceUpdateCountdown = 60;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuAbort,The following statement contains a magic number: textArray[5] = "--ABORT SEQUENCE--";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuAbort,The following statement contains a magic number: pause(120);
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuFlightData,The following statement contains a magic number: textArray[++i] = "heading  : " + Math.Round(FlightGlobals.ship_heading' 1).ToString().PadLeft(6) + " deg";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuFlightData,The following statement contains a magic number: textArray[++i] = "pitch" + Math.Round(pitch' 1).ToString().PadLeft(6) + " deg";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuFlightData,The following statement contains a magic number: textArray[++i] = "roll" + Math.Round(roll' 1).ToString().PadLeft(6) + " deg";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuGunner,The following statement contains a magic number: textArray[5] = "   Gunner module not";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuGunner,The following statement contains a magic number: textArray[6] = "   installed. Contact";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuGunner,The following statement contains a magic number: textArray[7] = "   your customer rep";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuGunner,The following statement contains a magic number: textArray[8] = "   for a quote today!";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: menuSelectionTop = 2;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following statement contains a magic number: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: menuSelectionTop = 2;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: menuSelectionBottom = 3;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: textArray[2] = " Units: " + unitType;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: textArray[3] = " Speed: " + speedMode;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: textArray[4] = " Craft info";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: switch (menuSelection)                  {                      case 2:                          if (unitType == "Metric") unitType = "Aviation";                          else unitType = "Metric";                          break;                      case 3:                          if (speedMode == "Surface") speedMode = "Orbit";                          else if (speedMode == "Orbit") speedMode = "Target";                          else if (speedMode == "Target") speedMode = "Surface";                          break;                      case 4:                          if (useInfoPopup)                          {                              getInfoPopupText();                              menuState = menuInfo;                          }                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: switch (menuSelection)                  {                      case 2:                          if (unitType == "Metric") unitType = "Aviation";                          else unitType = "Metric";                          break;                      case 3:                          if (speedMode == "Surface") speedMode = "Orbit";                          else if (speedMode == "Orbit") speedMode = "Target";                          else if (speedMode == "Target") speedMode = "Surface";                          break;                      case 4:                          if (useInfoPopup)                          {                              getInfoPopupText();                              menuState = menuInfo;                          }                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following statement contains a magic number: switch (menuSelection)                  {                      case 2:                          if (unitType == "Metric") unitType = "Aviation";                          else unitType = "Metric";                          break;                      case 3:                          if (speedMode == "Surface") speedMode = "Orbit";                          else if (speedMode == "Orbit") speedMode = "Target";                          else if (speedMode == "Target") speedMode = "Surface";                          break;                      case 4:                          if (useInfoPopup)                          {                              getInfoPopupText();                              menuState = menuInfo;                          }                          break;                  }
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSplashScreen,The following statement contains a magic number: textArray[2] = "Booting OS";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSplashScreen,The following statement contains a magic number: textArray[4] = "Checking RAM ";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSplashScreen,The following statement contains a magic number: textArray[5] = RAMcount + "/512KB";
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSplashScreen,The following statement contains a magic number: RAMcount += 8;
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSplashScreen,The following statement contains a magic number: pause(10);
Magic Number,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSplashScreen,The following statement contains a magic number: RAMcount < 512
Magic Number,Firespitter.customization,FStextureSwitch2,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\customization\FStextureSwitch2.cs,applyTexToPart,The following statement contains a magic number: ScreenMessages.PostScreenMessage(msg' 5f' ScreenMessageStyle.UPPER_CENTER);
Magic Number,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,OnStart,The following statement contains a magic number: circumeference = span * Mathf.PI * 2f;
Magic Number,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,updateRPM,The following statement contains a magic number: RPM -= airSpeedThroughRotor * autoRotationGain * (TimeWarp.deltaTime * 50f);
Magic Number,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,updateRPM,The following statement contains a magic number: RPM -= bladeLifts[i].bladeDrag * 0.1f;
Magic Number,Firespitter.engine,FSengineBladed,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengineBladed.cs,setBladePitch,The following statement contains a magic number: bladeLifts[i].pointVelocityMagnitude = Mathf.Clamp(tangentialSpeed' 0f' 340f) * rotationDirection;
Magic Number,Firespitter.engine,FSalternator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSalternator.cs,OnStart,The following statement contains a magic number: engineScaleMultiplier = Mathf.Max(0.1f' propTweak.engineLengthSlider);
Magic Number,Firespitter.engine,FSengineHover,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSengineHover.cs,OnFixedUpdate,The following statement contains a magic number: newThrust = minThrust + 0.001f;
Magic Number,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Start,The following statement contains a magic number: meshFilter.mesh = MeshCreator.createDisc(emissionDiscSize' 100);
Magic Number,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Update,The following statement contains a magic number: hit = Physics.RaycastAll(ray' 15f);
Magic Number,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Update,The following statement contains a magic number: washDisc.transform.position = hit[i].point + Vector3.up * 0.1f;
Magic Number,Firespitter.engine,FSgroundParticles,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSgroundParticles.cs,Update,The following statement contains a magic number: hit[i].collider.gameObject.layer == 15
Magic Number,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,updateFX,The following statement contains a magic number: part.Effect("running"' Mathf.Clamp(smoothFxThrust' 0.01f' 1f));
Magic Number,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,consumeResources,The following statement contains a magic number: double lowestRequestableAmount = 0.0002d;
Magic Number,Firespitter.engine,FSengine,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FS engine modules\FSengine.cs,OnCenterOfThrustQuery,The following statement contains a magic number: CoTquery.thrust = maxThrust * (maxThrottle / 100f);
Magic Number,Firespitter.engine,FSpropellerTweak,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSpropellerTweak.cs,updateBladeList,The following statement contains a magic number: blades[i].transform.localRotation = Quaternion.Euler(propellerRotationAxis * (originalBladeRotation + ((360f / bladeNumber) * (i))));
Magic Number,Firespitter.engine,FSpropellerTweak,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSpropellerTweak.cs,Update,The following statement contains a magic number: engineLengthSlider = (float)Math.Round(engineLengthSliderRaw' 2);
Magic Number,Firespitter.engine,FSpropellerTweak,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSpropellerTweak.cs,Update,The following statement contains a magic number: bladeLengthSlider = (float)Math.Round(BladeLengthSliderRaw' 2);
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: float minimumThrust = 0.001f;
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: float fallOffHeight = 10f;
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: verticalSpeed > 2.5f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: verticalSpeed > 0.2f && heightAboveHover > -0.5f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: verticalSpeed > 0.2f && heightAboveHover > -0.5f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: heightAboveHover < 0 && vessel.verticalSpeed < -0.2f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: heightAboveHover < fallOffHeight * 4 && vessel.verticalSpeed < -2.5f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,getHoverThrottle,The following statement contains a magic number: heightAboveHover < fallOffHeight * 4 && vessel.verticalSpeed < -2.5f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnUpdate,The following statement contains a magic number: (engineActive && !engine.getFlameoutState) && timeCount < 1000
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnUpdate,The following statement contains a magic number: float targetSpeed = ((rotationSpeed * 6) * TimeWarp.deltaTime * ((float)timeCount / 1000));
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnUpdate,The following statement contains a magic number: float targetSpeed = ((rotationSpeed * 6) * TimeWarp.deltaTime * ((float)timeCount / 1000));
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnUpdate,The following statement contains a magic number: RotorParent.transform.localEulerAngles.y > parkedBladeRotation + 1.1f || RotorParent.transform.localEulerAngles.y < parkedBladeRotation - 1.1f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnUpdate,The following statement contains a magic number: RotorParent.transform.localEulerAngles.y > parkedBladeRotation + 1.1f || RotorParent.transform.localEulerAngles.y < parkedBladeRotation - 1.1f
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(100f' 200f' 200f' 60f)' "r: " + RotorParent.transform.localEulerAngles);
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(100f' 200f' 200f' 60f)' "r: " + RotorParent.transform.localEulerAngles);
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(100f' 200f' 200f' 60f)' "r: " + RotorParent.transform.localEulerAngles);
Magic Number,Firespitter.engine,FScopterThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FScopterThrottle.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(100f' 200f' 200f' 60f)' "r: " + RotorParent.transform.localEulerAngles);
Magic Number,Firespitter.engine,FSengineHandCrank,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSengineHandCrank.cs,OnStart,The following statement contains a magic number: engine.engine.Events["Activate"].unfocusedRange = 5f;
Magic Number,Firespitter.engine,FSengineHandCrank,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSengineHandCrank.cs,OnStart,The following statement contains a magic number: engine.engine.Events["Shutdown"].unfocusedRange = 5f;
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,increaseThrustEvent,The following statement contains a magic number: defaultMaxThrust += 50;
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,decreaseThrustEvent,The following statement contains a magic number: defaultMaxThrust -= 50;
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,The following statement contains a magic number: fallOffHeight = 0.01f;
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,The following statement contains a magic number: vessel.verticalSpeed > 2.5f
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,The following statement contains a magic number: vessel.verticalSpeed > 0.2f && heightAboveHover > -0.5f
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,The following statement contains a magic number: vessel.verticalSpeed > 0.2f && heightAboveHover > -0.5f
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,The following statement contains a magic number: heightAboveHover < 0 && vessel.verticalSpeed < -0.2f
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,The following statement contains a magic number: heightAboveHover < fallOffHeight * 4 && vessel.verticalSpeed < -2.5f
Magic Number,Firespitter.engine,FShoverThrottle,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FShoverThrottle.cs,OnUpdate,The following statement contains a magic number: heightAboveHover < fallOffHeight * 4 && vessel.verticalSpeed < -2.5f
Magic Number,Firespitter.engine,FSplanePropellerSpinner,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSplanePropellerSpinner.cs,OnStart,The following statement contains a magic number: maxThrust = 50f;
Magic Number,Firespitter.engine,FSplanePropellerSpinner,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSplanePropellerSpinner.cs,OnUpdate,The following statement contains a magic number: smoothedThrustRPM = Mathf.Lerp(smoothedThrustRPM' normalizedThrustRPM' 0.1f);
Magic Number,Firespitter.engine,FSplanePropellerSpinner,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSplanePropellerSpinner.cs,OnUpdate,The following statement contains a magic number: rotorDisc.Rotate(Vector3.forward * ((rotorDiscSpeed * 6) * TimeWarp.deltaTime));
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,FixedUpdate,The following statement contains a magic number: TimeWarp.WarpMode == TimeWarp.Modes.HIGH && TimeWarp.CurrentRate > 1.1f
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(250f' 300f' 200f' 30f)' "engine volume: " + currentPowerFadeIn);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(250f' 300f' 200f' 30f)' "engine volume: " + currentPowerFadeIn);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(250f' 300f' 200f' 30f)' "engine volume: " + currentPowerFadeIn);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(250f' 300f' 200f' 30f)' "engine volume: " + currentPowerFadeIn);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Rect menuItemRect = new Rect(250f' 200f' 300f' 150f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Rect menuItemRect = new Rect(250f' 200f' 300f' 150f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Rect menuItemRect = new Rect(250f' 200f' 300f' 150f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Rect menuItemRect = new Rect(250f' 200f' 300f' 150f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Vector2 buttonSize = new Vector2(30f' 30f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Vector2 buttonSize = new Vector2(30f' 30f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Vector2 menuItemSize = new Vector2(200f' 35f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: Vector2 menuItemSize = new Vector2(200f' 35f);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Button(new Rect(menuItemRect.x + buttonSize.x + 10f' menuItemRect.y' buttonSize.x' buttonSize.y)' "C")
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Button(new Rect(menuItemRect.x + ((buttonSize.x + 10f) * 2)' menuItemRect.y' buttonSize.x' buttonSize.y)' ">")
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Button(new Rect(menuItemRect.x + ((buttonSize.x + 10f) * 2)' menuItemRect.y' buttonSize.x' buttonSize.y)' ">")
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + ((buttonSize.x + 10f) * 3)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)'                          "exists: " + doesExist);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + ((buttonSize.x + 10f) * 3)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)'                          "exists: " + doesExist);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + ((buttonSize.x + 10f) * 3)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)'                          "exists: " + doesExist);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: menuItemRect.y += 30;
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: warning = GUI.TextField(new Rect(menuItemRect.x + buttonSize.x + 10f' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' warning);
Magic Number,Firespitter.engine,FSengineSounds,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSengineSounds.cs,OnGUI,The following statement contains a magic number: warning = GUI.TextField(new Rect(menuItemRect.x + buttonSize.x + 10f' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' warning);
Magic Number,Firespitter.engine,FSpropellerAtmosphericNerf,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSpropellerAtmosphericNerf.cs,OnUpdate,The following statement contains a magic number: newThrust = 0.001f;
Magic Number,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,RadianToDegree,The following statement contains a magic number: return angle * (180.0 / Math.PI);
Magic Number,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,DegreeToRadian,The following statement contains a magic number: return Math.PI * angle / 180.0;
Magic Number,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,steerPart,The following statement contains a magic number: float steerThrustModifier = vessel.ctrlState.mainThrottle / 1.7f;
Magic Number,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,translateThrustTransform,The following statement contains a magic number: float steerThrustModifier = vessel.ctrlState.mainThrottle / 1.7f;
Magic Number,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,autoHover,The following statement contains a magic number: modifiedUp.Rotate(new Vector3(-90' 0' 180));
Magic Number,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,autoHover,The following statement contains a magic number: modifiedUp.Rotate(new Vector3(-90' 0' 180));
Magic Number,Firespitter.engine,FSrotorTrim,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\FSrotorTrim.cs,autoHover,The following statement contains a magic number: partTransform.rotation = Quaternion.RotateTowards(partTransform.rotation' modifiedUp.rotation' steerAmount * 4);
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,setThrust,The following statement contains a magic number: maxThrust *= 2;
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,setThrust,The following statement contains a magic number: maxThrust = 0.25f;
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,setThrust,The following statement contains a magic number: maxThrust < 0.25f
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,setThrust,The following statement contains a magic number: maxThrust = 32f;
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,setThrust,The following statement contains a magic number: maxThrust > 32f
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,FixedUpdate,The following statement contains a magic number: engineActive && timeCount < 1000
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,FixedUpdate,The following statement contains a magic number: float currentSpeed = ((rotationSpeed * 6) * TimeWarp.deltaTime * ((float)timeCount / 1000));
Magic Number,Firespitter.engine,FStailRotorThrust,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FStailRotorThrust.cs,FixedUpdate,The following statement contains a magic number: float currentSpeed = ((rotationSpeed * 6) * TimeWarp.deltaTime * ((float)timeCount / 1000));
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementVTOLSteeringMode.titleSize = 30f;
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(550f' 200f' 325f' 150f)' "VTOL presets"' elementInfoText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(550f' 200f' 325f' 150f)' "VTOL presets"' elementInfoText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(550f' 200f' 325f' 150f)' "VTOL presets"' elementInfoText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(550f' 200f' 325f' 150f)' "VTOL presets"' elementInfoText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementTestAngle = new PopupElement(new PopupButton("Use Preset " + selectedListAngle' 100f' testUseAngle));
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementTestAngle.buttons.Add(new PopupButton("Next"' 40f' testNextAngle));
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementTestAngle.buttons.Add(new PopupButton("Reset"' 50f' testReset));
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementStepSize.titleSize = 135f;
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementStepSize.inputSize = 55f;
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementMaxDownAngle.titleSize = 135f;
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementMaxDownAngle.inputSize = 55f;
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementPresets[i].titleSize = 135f;
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: elementPresets[i].inputSize = 55f;
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: i <= 5
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(500f' 300f' 250f' 100f)' "VTOL steering"' elementSteerRoll);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(500f' 300f' 250f' 100f)' "VTOL steering"' elementSteerRoll);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(500f' 300f' 250f' 100f)' "VTOL steering"' elementSteerRoll);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnStart,The following statement contains a magic number: popup = new FSGUIPopup(part' "FSVTOLrotator"' 0' popupWindowID' new Rect(500f' 300f' 250f' 100f)' "VTOL steering"' elementSteerRoll);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: availableAngles1.z = float.Parse(elementPresets[2].inputText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: elementPresets.Count > 2
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: availableAngles2.x = float.Parse(elementPresets[3].inputText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: elementPresets.Count > 3
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: availableAngles2.y = float.Parse(elementPresets[4].inputText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: elementPresets.Count > 4
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: availableAngles2.z = float.Parse(elementPresets[5].inputText);
Magic Number,Firespitter.engine,FSVTOLrotator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\engine\Stock based modules\FSVTOLrotator.cs,OnGUI,The following statement contains a magic number: elementPresets.Count > 5
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,createLineRenderer,The following statement contains a magic number: guideLine.SetWidth(0.02f' 0.02f);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,createLineRenderer,The following statement contains a magic number: guideLine.SetWidth(0.02f' 0.02f);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,createLineRenderer,The following statement contains a magic number: guideLine.SetVertexCount(5);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,updateLineColor,The following statement contains a magic number: Vector3.Dot(part.transform.TransformDirection(guideDirection)' worldDirection.transform.TransformDirection(correctWorldDirection)) > 0.5f
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,updateLinePosition,The following statement contains a magic number: Vector3 arrowHeadRear = Vector3.Lerp(centerPoint' guidePointForward' 0.8f);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,updateLinePosition,The following statement contains a magic number: guideLine.SetPosition(2' guidePointArrowLineLeft);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,updateLinePosition,The following statement contains a magic number: guideLine.SetPosition(3' guidePointForward);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,updateLinePosition,The following statement contains a magic number: guideLine.SetPosition(4' guidePointArrowLineRight);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,setupArrowLines,The following statement contains a magic number: guidePointArrowLineLeft += -direction * lineLength * 0.2f;
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,setupArrowLines,The following statement contains a magic number: guidePointArrowLineRight += direction * lineLength * 0.2f;
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,drawText,The following statement contains a magic number: GUI.Label(new Rect(labelPos.x' Screen.height - labelPos.y - 15f' 100f' 100f)' value);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,drawText,The following statement contains a magic number: GUI.Label(new Rect(labelPos.x' Screen.height - labelPos.y - 15f' 100f' 100f)' value);
Magic Number,Firespitter.info,FSpartDirectionGuide,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSpartDirectionGuide.cs,drawText,The following statement contains a magic number: GUI.Label(new Rect(labelPos.x' Screen.height - labelPos.y - 15f' 100f' 100f)' value);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonPassive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonPassive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonPassive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonPassive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonActive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonActive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonActive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,createStyles,The following statement contains a magic number: buttonActive.padding = new RectOffset(2' 2' 2' 2);
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,OnGUI,The following statement contains a magic number: float letterKeysXpos = windowRect.x + buttonSize.x * 2 + padding * 2;
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,OnGUI,The following statement contains a magic number: float letterKeysXpos = windowRect.x + buttonSize.x * 2 + padding * 2;
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,OnGUI,The following statement contains a magic number: drawPosition.y = windowRect.y + windowRect.height + padding * 2 + buttonSize.y;
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,OnGUI,The following statement contains a magic number: GUI.Button(longButtonRect(2)' "Caps"' getButtonStyle(KeyCode.CapsLock));
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,OnGUI,The following statement contains a magic number: GUI.Button(longButtonRect(2)' "Shift"' getButtonStyle(KeyCode.LeftShift));
Magic Number,Firespitter.info,FSinputVisualizer,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinputVisualizer.cs,OnGUI,The following statement contains a magic number: GUI.Button(longButtonRect(2)' "Ctrl"' getButtonStyle(KeyCode.LeftControl));
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,setText,The following statement contains a magic number: scrollRect = new Rect(2f' 25f' windowRect.width - 4f' windowRect.height - 25f);
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,setText,The following statement contains a magic number: scrollRect = new Rect(2f' 25f' windowRect.width - 4f' windowRect.height - 25f);
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,setText,The following statement contains a magic number: scrollRect = new Rect(2f' 25f' windowRect.width - 4f' windowRect.height - 25f);
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,setText,The following statement contains a magic number: scrollRect = new Rect(2f' 25f' windowRect.width - 4f' windowRect.height - 25f);
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,setText,The following statement contains a magic number: textAreaHeight = style.CalcHeight(content' scrollRect.width-20f);
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,setText,The following statement contains a magic number: textRect = new Rect(0f' 0f' scrollRect.width - 20f' textAreaHeight);
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,drawWindow,The following statement contains a magic number: GUI.Button(new Rect(windowRect.width - 18f' 2f' 16f' 16f)' "")
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,drawWindow,The following statement contains a magic number: GUI.Button(new Rect(windowRect.width - 18f' 2f' 16f' 16f)' "")
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,drawWindow,The following statement contains a magic number: GUI.Button(new Rect(windowRect.width - 18f' 2f' 16f' 16f)' "")
Magic Number,Firespitter.info,HelpPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\HelpPopup.cs,drawWindow,The following statement contains a magic number: GUI.Button(new Rect(windowRect.width - 18f' 2f' 16f' 16f)' "")
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: Rect menuItemRect = new Rect(10f' 8f' menuItemSize.x' menuItemSize.y);
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: Rect menuItemRect = new Rect(10f' 8f' menuItemSize.x' menuItemSize.y);
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: textHeading = writeLine(new Rect(menuItemRect.x' menuItemRect.y' menuItemRect.width - buttonSize.x - 10f' menuItemRect.height)' textHeading);
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + buttonSize.x + 10f' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' "Show on start");
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + buttonSize.x + 10f' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' "Show on start");
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Button(new Rect(menuItemRect.x + (menuItemSize.x / 2)' menuItemRect.y' buttonSize.x' buttonSize.y)' useHotkeyString)
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + buttonSize.x + 10f + (menuItemSize.x / 2)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' "Use hotkey (" + toggleKey + ")");
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + buttonSize.x + 10f + (menuItemSize.x / 2)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' "Use hotkey (" + toggleKey + ")");
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + buttonSize.x + 10f + (menuItemSize.x / 2)' menuItemRect.y' menuItemSize.x - buttonSize.x - 10f' buttonSize.y)' "Use hotkey (" + toggleKey + ")");
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Button(new Rect(menuItemRect.x' menuItemRect.y' buttonSize.x * 2' buttonSize.y)' "Edit")
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + (buttonSize.x * 2) + 20f' menuItemRect.y' menuItemRect.width' menuItemRect.height)' "Hiding this window in " + (int)countDown);
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,drawWindow,The following statement contains a magic number: GUI.Label(new Rect(menuItemRect.x + (buttonSize.x * 2) + 20f' menuItemRect.y' menuItemRect.width' menuItemRect.height)' "Hiding this window in " + (int)countDown);
Magic Number,Firespitter.info,FSinfoPopup,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSinfoPopup.cs,OnGUI,The following statement contains a magic number: editorButtonCooldown = 20;
Magic Number,Firespitter,MeshCreator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\MeshCreator.cs,createDisc,The following statement contains a magic number: float angleIncrement = Mathf.PI * 2 / sides;
Magic Number,Firespitter,MeshCreator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\MeshCreator.cs,createDisc,The following statement contains a magic number: int[] triangles = new int[sides * 3];
Magic Number,Firespitter,MeshCreator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\MeshCreator.cs,createDisc,The following statement contains a magic number: triangles[3 * i + 0] = 0;
Magic Number,Firespitter,MeshCreator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\MeshCreator.cs,createDisc,The following statement contains a magic number: triangles[3 * i + 1] = i + 1;
Magic Number,Firespitter,MeshCreator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\MeshCreator.cs,createDisc,The following statement contains a magic number: triangles[3 * i + 2] = i + 2;
Magic Number,Firespitter,MeshCreator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\MeshCreator.cs,createDisc,The following statement contains a magic number: triangles[3 * i + 2] = i + 2;
Magic Number,Firespitter,MeshCreator,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\MeshCreator.cs,createDisc,The following statement contains a magic number: triangles[3 * i + 2] = i + 2;
Magic Number,Firespitter,ShipHeading,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\ShipHeading.cs,getRoll,The following statement contains a magic number: result -= 360f;
Magic Number,Firespitter,ShipHeading,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\ShipHeading.cs,getRoll,The following statement contains a magic number: result > 180f
Magic Number,Firespitter,ShipHeading,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\ShipHeading.cs,getPitch,The following statement contains a magic number: result -= 360f;
Magic Number,Firespitter,ShipHeading,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\ShipHeading.cs,getPitch,The following statement contains a magic number: result > 180f
Magic Number,Firespitter,Tools,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\FStools.cs,stringToFloatCurve,The following statement contains a magic number: float.TryParse(valueString[2]' out key.z);
Magic Number,Firespitter,Tools,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\FStools.cs,stringToFloatCurve,The following statement contains a magic number: float.TryParse(valueString[3]' out key.w);
Magic Number,Firespitter,Tools,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\FStools.cs,stringToFloatCurve,The following statement contains a magic number: valueString.Length == 4
Magic Number,Firespitter,Tools,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\tools\FStools.cs,stringToFloatCurve,The following statement contains a magic number: valueString.Length >= 2
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,OnStart,The following statement contains a magic number: guideLine.SetWidth(0.02f' 0.02f);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,OnStart,The following statement contains a magic number: guideLine.SetWidth(0.02f' 0.02f);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,OnStart,The following statement contains a magic number: guideLine.SetVertexCount(14);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,OnStart,The following statement contains a magic number: wheelLine.SetWidth(0.02f' 0.02f);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,OnStart,The following statement contains a magic number: wheelLine.SetWidth(0.02f' 0.02f);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,OnStart,The following statement contains a magic number: wheelLine.SetVertexCount(4);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(2' anglePointUpZ);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(3' guidePointUp);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(4' centerPoint);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(5' guidePointForward);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(6' anglePointForwardHorizontal);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(7' guidePointForward);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(8' anglePointForwardVertical);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(9' guidePointForward);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(10' guidePointBack);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(11' anglePointBackHorizontal);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(12' guidePointBack);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: guideLine.SetPosition(13' anglePointBackVertical);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: wheelLine.SetPosition(2' wheelPointForward);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,updateLinePositions,The following statement contains a magic number: wheelLine.SetPosition(3' wheelPointBack);
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,clampAngle,The following statement contains a magic number: angle = 180f - angle;
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,clampAngle,The following statement contains a magic number: angle > 180f
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,clampAngle,The following statement contains a magic number: angle = 180f - angle;
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,clampAngle,The following statement contains a magic number: angle > 90f
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,drawAngleText,The following statement contains a magic number: GUI.Label(new Rect(labelPos.x' Screen.height - labelPos.y - 15f' 100f' 100f)' ((int)(clampAngle(value))).ToString());
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,drawAngleText,The following statement contains a magic number: GUI.Label(new Rect(labelPos.x' Screen.height - labelPos.y - 15f' 100f' 100f)' ((int)(clampAngle(value))).ToString());
Magic Number,Firespitter.wheel,FSwheelAlignment,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\wheel\FSwheelAlignment.cs,drawAngleText,The following statement contains a magic number: GUI.Label(new Rect(labelPos.x' Screen.height - labelPos.y - 15f' 100f' 100f)' ((int)(clampAngle(value))).ToString());
Missing Default,Firespitter.cockpit,FSActionGroupSwitch,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSActionGroupSwitch.cs,buttonClick,The following switch statement is missing a default case: switch (groupName)                  {                      case "engine":                          foreach (Part part in vessel.Parts)                          {                              engine.FSengineWrapper engine = new engine.FSengineWrapper(part);                              engine.EngineIgnited = !engine.EngineIgnited;                          }                          break;                      case "hover":                          foreach (Part part in vessel.Parts)                          {                              engine.FScopterThrottle copterEngine = part.Modules.OfType<engine.FScopterThrottle>().FirstOrDefault();                              if (copterEngine != null)                              {                                  copterEngine.toggleHover();                                  if (postMessagesToScreen == 1)                                      ScreenMessages.PostScreenMessage(new ScreenMessage("hover height set to " + Math.Round(copterEngine.hoverHeight' 1)' 2f' ScreenMessageStyle.UPPER_CENTER));                                  Debug.Log("FS: hover height set to " + copterEngine.hoverHeight);                              }                                IEnumerable<engine.FSengineBladed> bladedEngines = part.Modules.OfType<engine.FSengineBladed>();                              using (var bladedEngineEnum = bladedEngines.GetEnumerator())                              {                                  while (bladedEngineEnum.MoveNext())                                  {                                      bladedEngineEnum.Current.toggleHover();                                  }                              }                          }                          break;                      case "Stage":                          //FlightGlobals.ActiveVessel.ResumeStaging();                          //StageManager.ActivateNextStage();                                             break;                      case "resetTrim":                          FlightInputHandler.state.yawTrim = 0f;                          break;                  }
Missing Default,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuMainMenu,The following switch statement is missing a default case: switch (menuSelection)                  {                      case (int)MainMenuItems.flightdata + 2:                          menuState = menuFlightData;                          break;                      case (int)MainMenuItems.settings + 2:                          menuState = menuSettings;                          break;                      case (int)MainMenuItems.abort + 2:                          pauseInitialized = false;                          menuState = menuAbort;                          break;                      case (int)MainMenuItems.fuel + 2:                          menuState = menuFuel;                          break;                      case (int)MainMenuItems.gear + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Gear);                          break;                      case (int)MainMenuItems.brakes + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Brakes);                          break;                      case (int)MainMenuItems.SAS + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.SAS);                          break;                      case (int)MainMenuItems.light + 2:                          FlightGlobals.ActiveVessel.ActionGroups.ToggleGroup(KSPActionGroup.Light);                          break;                      case (int)MainMenuItems.hover + 2:                          toggleHover();                          break;                      case (int)MainMenuItems.reboot + 2:                          menuState = menuSplashScreen;                          RAMcount = 0;                          break;                  }
Missing Default,Firespitter.cockpit,FSmonitorInterface,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\cockpit\FSmonitorInterface.cs,menuSettings,The following switch statement is missing a default case: switch (menuSelection)                  {                      case 2:                          if (unitType == "Metric") unitType = "Aviation";                          else unitType = "Metric";                          break;                      case 3:                          if (speedMode == "Surface") speedMode = "Orbit";                          else if (speedMode == "Orbit") speedMode = "Target";                          else if (speedMode == "Target") speedMode = "Surface";                          break;                      case 4:                          if (useInfoPopup)                          {                              getInfoPopupText();                              menuState = menuInfo;                          }                          break;                  }
Missing Default,Firespitter.info,FSdebugMessages,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSdebugMessages.cs,debugMessage,The following switch statement is missing a default case: switch (outputMode)                  {                      case OutputMode.both:                          debugMessage(input' true' postToScreenDuration);                          break;                      case OutputMode.log:                          debugMessage(input' true' 0f);                          break;                      case OutputMode.screen:                          debugMessage(input' false' postToScreenDuration);                          break;                  }
Missing Default,Firespitter.info,FSdebugMessages,D:\research\architectureSmells\repos1\snjo_Firespitter\Firespitter\info\FSdebugMessages.cs,debugMessage,The following switch statement is missing a default case: switch (outputMode)                  {                      case OutputMode.both:                          debugMessage(input' true' postToScreenDuration);                          break;                      case OutputMode.log:                          debugMessage(input' true' postToScreenDuration);                          break;                      case OutputMode.screen:                          debugMessage(input' false' postToScreenDuration);                          break;                  }
