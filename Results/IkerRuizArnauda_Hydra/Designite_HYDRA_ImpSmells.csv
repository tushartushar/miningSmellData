Implementation smell,Namespace,Class,File,Method,Description
Complex Method,HYDRA,Form1,C:\repos\IkerRuizArnauda_Hydra\Hydra\Form1.cs,ConnectorToolButton_Click,Cyclomatic complexity of the method is 10
Long Statement,HYDRA,DrawAbleConnector,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawAbleConnector.cs,Draw,The length of the statement  "	panelGraphics.DrawLine (myPen' allNodes [TailNodeGuid].Location.X + 25' allNodes [TailNodeGuid].Location.Y + 25' allNodes [HeadNodeGuid].Location.X + 25' allNodes [HeadNodeGuid].Location.Y + 25); " is 195.
Long Statement,HYDRA,DrawableNode,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawableNode.cs,Log,The length of the statement  "	return Environment.NewLine + "<<<New Action>>>" + Environment.NewLine + "Created " + this._node.Name + " node." + Environment.NewLine + "Position: " + this.Location + Environment.NewLine + "Guid: " + this._node.Guid + Environment.NewLine; " is 238.
Long Statement,HYDRA,DrawableNode,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawableNode.cs,nodeMouseHover,The length of the statement  "	//_toolTip.Show(this.Name + "\nInput count: " + Input.Count + " \nOutput count: " + Output.Count + "\nValue: " + Value' ValueLabel' 1700); " is 138.
Long Statement,HYDRA,Form1,C:\repos\IkerRuizArnauda_Hydra\Hydra\Form1.cs,node_onNodeClick,The length of the statement  "		Console.WriteLine ("Log: " + sender.Name + "|| Input count: " + sender.Input.Count + " || Output count: " + sender.Output.Count); " is 129.
Long Statement,HYDRA,Form1,C:\repos\IkerRuizArnauda_Hydra\Hydra\Form1.cs,DrawPanelCtxMenu_SelectedtItemChanged,The length of the statement  "	var index = usuableNodeList.FindIndex (_nodeInList => _nodeInList._name.Equals ((sender as ToolStripItem).Text' StringComparison.Ordinal)); " is 139.
Empty Catch Block,HYDRA,Form1,C:\repos\IkerRuizArnauda_Hydra\Hydra\Form1.cs,timer1_Tick,The method has an empty catch block.
Magic Number,HYDRA,DrawAbleConnector,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawAbleConnector.cs,Draw,The following statement contains a magic number: panelGraphics.DrawLine (myPen' allNodes [TailNodeGuid].Location.X + 25' allNodes [TailNodeGuid].Location.Y + 25' allNodes [HeadNodeGuid].Location.X + 25' allNodes [HeadNodeGuid].Location.Y + 25);  
Magic Number,HYDRA,DrawAbleConnector,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawAbleConnector.cs,Draw,The following statement contains a magic number: panelGraphics.DrawLine (myPen' allNodes [TailNodeGuid].Location.X + 25' allNodes [TailNodeGuid].Location.Y + 25' allNodes [HeadNodeGuid].Location.X + 25' allNodes [HeadNodeGuid].Location.Y + 25);  
Magic Number,HYDRA,DrawAbleConnector,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawAbleConnector.cs,Draw,The following statement contains a magic number: panelGraphics.DrawLine (myPen' allNodes [TailNodeGuid].Location.X + 25' allNodes [TailNodeGuid].Location.Y + 25' allNodes [HeadNodeGuid].Location.X + 25' allNodes [HeadNodeGuid].Location.Y + 25);  
Magic Number,HYDRA,DrawAbleConnector,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawAbleConnector.cs,Draw,The following statement contains a magic number: panelGraphics.DrawLine (myPen' allNodes [TailNodeGuid].Location.X + 25' allNodes [TailNodeGuid].Location.Y + 25' allNodes [HeadNodeGuid].Location.X + 25' allNodes [HeadNodeGuid].Location.Y + 25);  
Magic Number,HYDRA,DrawableNode,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawableNode.cs,Draw,The following statement contains a magic number: _valueLabel.Height = 13;  
Magic Number,HYDRA,DrawableNode,C:\repos\IkerRuizArnauda_Hydra\Hydra\DrawableNode.cs,Draw,The following statement contains a magic number: _valueLabel.Location = new Point (this.Location.X' this.Location.Y + 33);  
Magic Number,HYDRA,Form1,C:\repos\IkerRuizArnauda_Hydra\Hydra\Form1.cs,Form1,The following statement contains a magic number: ExecuteLoop.Interval = 1000;  
Missing Default,HYDRA,Form1,C:\repos\IkerRuizArnauda_Hydra\Hydra\Form1.cs,ConnectorToolButton_Click,The following switch statement is missing a default case: switch (ConnectorToolButton.Checked) {  case true:  	ConnectorToolButton.Checked = false;  	break;  case false:  	if (lastSelectedTool.Count > 0) {  		lastSelectedTool [0].Checked = false;  		lastSelectedTool.RemoveAt (0);  	}  	_selectedNodeType = null;  	ConnectorToolButton.Checked = true;  	lastSelectedTool.Add ((sender) as ToolStripButton);  	break;  }  
