Implementation smell,Namespace,Class,File,Method,Description
Long Statement,HydraLib.Nodes.NodeTypes,Addition,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Addition.cs,Process,The length of the statement  "		Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result); " is 135.
Long Statement,HydraLib.Nodes.NodeTypes,Average,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Average.cs,Process,The length of the statement  "		Console.WriteLine ("Log: " + this.Name + " || Processed an operation with " + Input.Count + " input elements the result was " + Result); " is 136.
Long Statement,HydraLib.Nodes.NodeTypes,Division,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Division.cs,Process,The length of the statement  "		Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result); " is 135.
Long Statement,HydraLib.Nodes.NodeTypes,Multiplication,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Multiplication.cs,Process,The length of the statement  "		Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result); " is 135.
Long Statement,HydraLib.Nodes.NodeTypes,Substraction,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Substraction.cs,Process,The length of the statement  "		Console.WriteLine ("Log: " + this.Name + "|| Processed an addition with " + Input.Count + " input elements the result was " + Result); " is 134.
Long Statement,HYDRA.Nodes.NodeTypes,Hysteresis,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Hysteresis.cs,Process,The length of the statement  "		Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Convert.ToBoolean (Result)); " is 155.
Long Statement,HYDRA.Nodes.NodeTypes,PonderedAverage,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\PonderedAverage.cs,Process,The length of the statement  "		Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result); " is 135.
Magic Number,HydraLib.Nodes.NodeTypes,Addition,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Addition.cs,Process,The following statement contains a magic number: if (Input.Count >= 2) {  	for (int i = 0; i < Input.Count; i++) {  		var _floatValue = allNodes [Input [i].TailNodeGuid].Value;  		Result += _floatValue;  	}  	Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result);  	this.Value = Result;  	// Return the result' so DrawableNode which called this Process()' can update its display label  	return Result;  }  
Magic Number,HydraLib.Nodes.NodeTypes,Average,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Average.cs,Process,The following statement contains a magic number: if (Input.Count >= 2) {  	for (int i = 0; i < Input.Count; i++) {  		//MessageBox.Show(Form1.AllNodes[Input[i].TailNodeGuid].Value.ToString());  		var _floatValue = allNodes [Input [i].TailNodeGuid].Value;  		Result += _floatValue;  	}  	//Get the average  	Result /= Input.Count;  	Console.WriteLine ("Log: " + this.Name + " || Processed an operation with " + Input.Count + " input elements the result was " + Result);  	this.Value = Result;  	// Return the result' so DrawableNode which called this Process()' can update its display label  	return Result;  }  
Magic Number,HydraLib.Nodes.NodeTypes,Division,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Division.cs,Process,The following statement contains a magic number: if (Input.Count == 2) {  	for (int i = 0; i < Input.Count; i++) {  		//MessageBox.Show(Form1.AllNodes[Input[i].TailNodeGuid].Value.ToString());  		var _floatValue = allNodes [Input [i].TailNodeGuid].Value;  		if (Result == 0)  			Result = _floatValue;  		else  			Result /= _floatValue;  	}  	Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result);  	this.Value = Result;  	return Result;  	// this.ValueLabel.Text = Result + "";  }  
Magic Number,HydraLib.Nodes.NodeTypes,Multiplication,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Multiplication.cs,Process,The following statement contains a magic number: if (Input.Count == 2) {  	for (int i = 0; i < Input.Count; i++) {  		//MessageBox.Show(Form1.AllNodes[Input[i].TailNodeGuid].Value.ToString());  		var _floatValue = allNodes [Input [i].TailNodeGuid].Value;  		if (Result == 0)  			Result = _floatValue;  		else  			Result *= _floatValue;  	}  	Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result);  	this.Value = Result;  	return Result;  	// this.ValueLabel.Text = Result + "";  }  
Magic Number,HydraLib.Nodes.NodeTypes,Substraction,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Substraction.cs,Process,The following statement contains a magic number: if (Input.Count == 2) {  	for (int i = 0; i < Input.Count; i++) {  		//MessageBox.Show(Form1.AllNodes[Input[i].TailNodeGuid].Value.ToString());  		var _floatValue = allNodes [Input [i].TailNodeGuid].Value;  		if (Result == 0)  			Result = _floatValue;  		else  			Result -= _floatValue;  	}  	Console.WriteLine ("Log: " + this.Name + "|| Processed an addition with " + Input.Count + " input elements the result was " + Result);  	this.Value = Result;  	return Result;  	//this.ValueLabel.Text = Result + "";  }  
Magic Number,HYDRA.Nodes.NodeTypes,Hysteresis,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Hysteresis.cs,Hysteresis,The following statement contains a magic number: this.vOn = 5;  
Magic Number,HYDRA.Nodes.NodeTypes,Hysteresis,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\Hysteresis.cs,Hysteresis,The following statement contains a magic number: this.vOff = 4;  
Magic Number,HYDRA.Nodes.NodeTypes,PonderedAverage,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\PonderedAverage.cs,Process,The following statement contains a magic number: if (Input.Count >= 2) {  	for (int i = 0; i < Input.Count; i += 2) {  		var _floatValue = allNodes [Input [i].TailNodeGuid].Value * allNodes [Input [i + 1].TailNodeGuid].Value;  		//Input * Weight  		_weightSum += allNodes [Input [i + 1].TailNodeGuid].Value;  		//Concatenate the Weights sum  		Result += _floatValue;  		//This will save the sum of all Input * Weight operation which at the end will be divided by the Weight sum.  	}  	//Get the pondered average  	Result /= _weightSum;  	Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result);  	this.Value = Result;  	// Return the result' so DrawableNode which called this Process()' can update its display label  	return Result;  }  
Magic Number,HYDRA.Nodes.NodeTypes,PonderedAverage,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\PonderedAverage.cs,Process,The following statement contains a magic number: if (Input.Count >= 2) {  	for (int i = 0; i < Input.Count; i += 2) {  		var _floatValue = allNodes [Input [i].TailNodeGuid].Value * allNodes [Input [i + 1].TailNodeGuid].Value;  		//Input * Weight  		_weightSum += allNodes [Input [i + 1].TailNodeGuid].Value;  		//Concatenate the Weights sum  		Result += _floatValue;  		//This will save the sum of all Input * Weight operation which at the end will be divided by the Weight sum.  	}  	//Get the pondered average  	Result /= _weightSum;  	Console.WriteLine ("Log: " + this.Name + "|| Processed an operation with " + Input.Count + " input elements the result was " + Result);  	this.Value = Result;  	// Return the result' so DrawableNode which called this Process()' can update its display label  	return Result;  }  
Magic Number,HYDRA.Nodes.NodeTypes,PonderedAverage,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\PonderedAverage.cs,Process,The following statement contains a magic number: for (int i = 0; i < Input.Count; i += 2) {  	var _floatValue = allNodes [Input [i].TailNodeGuid].Value * allNodes [Input [i + 1].TailNodeGuid].Value;  	//Input * Weight  	_weightSum += allNodes [Input [i + 1].TailNodeGuid].Value;  	//Concatenate the Weights sum  	Result += _floatValue;  	//This will save the sum of all Input * Weight operation which at the end will be divided by the Weight sum.  }  
Magic Number,HYDRA.Nodes.NodeTypes,PonderedAverage,C:\repos\IkerRuizArnauda_Hydra\HydraLib\Nodes\NodeTypes\Arithmetic\PonderedAverage.cs,Process,The following statement contains a magic number: i += 2
