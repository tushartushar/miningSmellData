Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NagiosPluginsNT,Plugin<PluginOptionsType>,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\Plugin.cs,AppendValue,The length of the statement  "            PerfValue += "'" + label.Replace("'"' "''") + "'=" + value + units + ";" + warning + ";" + critical + ";" /* + min + Options.units */ + ";" /* +max + Options.units */; " is 167.
Long Statement,NagiosPluginsNT,Plugin<PluginOptionsType>,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\Plugin.cs,AppendValue,The length of the statement  "            PerfValue += "'" + Options.label.Replace("'"' "''") + "'=" + value + units + ";" + warning + ";" + critical + ";" /* + min + Options.units */ + ";" /* +max + Options.units */;             " is 175.
Long Statement,NagiosPluginsNT,Plugin<PluginOptionsType>,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\Plugin.cs,GetStatus,The length of the statement  "                        Verbose(VerbosityLevel.Debug' statusCode + " if " + numValue + " OUTSIDE range " + thresholdStart + " - " + thresholdEnd); " is 122.
Long Statement,NagiosPluginsNT,Plugin<PluginOptionsType>,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\Plugin.cs,GetStatus,The length of the statement  "                        Verbose(VerbosityLevel.Debug' statusCode + " if " + numValue + " WITHIN range " + thresholdStart + " - " + thresholdEnd); " is 121.
Complex Conditional,NagiosPluginsNT,SnmpPlugin,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\SNMPPlugin.cs,doGet,The conditional expression  "(rawValue.StartsWith("\"") && rawValue.EndsWith("\"")) || (rawValue.StartsWith("[") && rawValue.EndsWith("]"))"  is complex.
Magic Number,NagiosPluginsNT,Plugin<PluginOptionsType>,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\Plugin.cs,Plugin,The following statement contains a magic number: precision = 2;
Magic Number,NagiosPluginsNT,SnmpPluginOptions,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\SNMPPlugin.cs,SnmpPluginOptions,The following statement contains a magic number: timeout = 10;
Magic Number,NagiosPluginsNT,SnmpPlugin,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\SNMPPlugin.cs,Get,The following statement contains a magic number: try              {                                                  // *** do snmpget with timeout ***                  GetThread = new Thread(new ThreadStart(doGet));                                  GetThread.Start();                  if (!GetThread.Join(Options.timeout * 1000))                  {                      FatalError(StatusCode.Critical' "[SNMP]"' "SNMP request timed out");                  }              }                // *** handle all exceptions ***              catch (Exception e)              {                  FatalError(StatusCode.Critical' "[SNMP]"' e.Message);              }
Magic Number,NagiosPluginsNT,SnmpPlugin,C:\repos\mconigliaro_NagiosPluginsNT\NagiosPluginsNT\SNMPPlugin.cs,doGet,The following statement contains a magic number: try              {                  if (Options.oid.Contains("."))                  {                      // *** convert oid string to array of unsigned ints ***                      String[] oidString = Options.oid.Split('.');                      Int32 oidLen = oidString.Length;                      UInt32[] oidUInt = new UInt32[oidLen];                      for (Int32 i = 0; i < oidLen; ++i)                      {                          oidUInt[i] = Convert.ToUInt32(oidString[i]);                      }                        // *** get value ***                      Verbose(VerbosityLevel.Info' "[SNMP] Get: " + Options.oid);                      ManagerItem mi = new ManagerItem(new ManagerSession(Options.hostname' Options.community)' oidUInt);                      String rawValue = mi.Value.ToString();                        // *** trim enclosing brackets ***                      if ((rawValue.StartsWith("\"") && rawValue.EndsWith("\"")) || (rawValue.StartsWith("[") && rawValue.EndsWith("]")))                      {                          Value = rawValue.Substring(1' rawValue.Length - 2);                      }                      else                      {                          Value = rawValue;                      }                        Verbose(VerbosityLevel.Info' "[SNMP] Got response: " + Value);                  }                    else                  {                      FatalError(StatusCode.Critical' "[SNMP]"' "Object ID not in correct format: " + Options.oid);                  }              }                // *** handle all exceptions ***              catch (Exception e)              {                  FatalError(StatusCode.Critical' "[SNMP]"' e.Message);              }
