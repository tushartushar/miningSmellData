Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SpotifyClient,TopList,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\TopList.cs,toplistbrowse_complete,Cyclomatic complexity of the method is 8
Complex Method,SpotifyClient,Track,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Track.cs,InitAsync,Cyclomatic complexity of the method is 9
Complex Method,SpotifyClient,Track,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Track.cs,GetAlbumArtAsync,Cyclomatic complexity of the method is 9
Long Parameter List,SpotifyClient,Playlist,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Playlist.cs,tracks_added,The method has 5 parameters. Parameters: playlistPtr' tracksPtr' num_tracks' position' userDataPtr
Long Parameter List,SpotifyClient,Playlist,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Playlist.cs,tracks_moved,The method has 5 parameters. Parameters: playlistPtr' tracksPtr' num_tracks' new_position' userDataPtr
Long Parameter List,SpotifyClient,Playlist,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Playlist.cs,track_created_changed,The method has 5 parameters. Parameters: playlistPtr' position' userPtr' when' userDataPtr
Long Parameter List,SpotifyClient,PlaylistContainer,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\PlaylistContainer.cs,playlist_moved,The method has 5 parameters. Parameters: containerPtr' playlistPtr' position' new_position' userDataPtr
Long Identifier,SpotifyClient,Playlist,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Playlist.cs,,The length of the parameter fn_playlist_update_in_progress is 30.
Long Identifier,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,,The length of the parameter fn_get_audio_buffer_stats_delegate is 34.
Long Identifier,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,,The length of the parameter fn_notify_main_thread_delegate is 30.
Long Identifier,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,,The length of the parameter fn_offline_status_updated_delegate is 34.
Long Statement,SpotifyClient,Artist,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Artist.cs,BeginBrowse,The length of the statement  "                _browsePtr = libspotify.sp_artistbrowse_create(Session.SessionPtr' this.ArtistPtr' libspotify.sp_artistbrowse_type.SP_ARTISTBROWSE_NO_TRACKS' callbackPtr' IntPtr.Zero); " is 168.
Long Statement,SpotifyClient,PlaylistContainer,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\PlaylistContainer.cs,GetAllPlaylists,The length of the statement  "                if (libspotify.sp_playlistcontainer_playlist_type(_containerPtr' i) == libspotify.sp_playlist_type.SP_PLAYLIST_TYPE_PLAYLIST) " is 125.
Long Statement,SpotifyClient,Search,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Search.cs,BeginSearch,The length of the statement  "                search._searchPtr = libspotify.sp_search_create(Session.SessionPtr' Functions.StringToPtr(keywords)' 0' 50' 0' 50' 0' 50' 0' 0' sp_search_type.SP_SEARCH_STANDARD' search._callbackPtr' IntPtr.Zero); " is 197.
Long Statement,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,initSession,The length of the statement  "            config.cache_location = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)' appname' "spotifycache"); " is 132.
Long Statement,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,initSession,The length of the statement  "            config.settings_location = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)' appname' "spotifysettings"); " is 138.
Long Statement,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,music_delivery,The length of the statement  "            libspotify.sp_audioformat format = (libspotify.sp_audioformat) Marshal.PtrToStructure(formatPtr' typeof (libspotify.sp_audioformat)); " is 133.
Long Statement,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,GetToplist,The length of the statement  "            int region = parts[0].Equals("ForMe") ? (int) libspotify.sp_toplistregion.SP_TOPLIST_REGION_USER : parts[0].Equals("Everywhere") ? (int) libspotify.sp_toplistregion.SP_TOPLIST_REGION_EVERYWHERE : Convert.ToInt32(parts[0]); " is 222.
Long Statement,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,GetToplist,The length of the statement  "            libspotify.sp_toplisttype type = parts[1].Equals("Artists") ? libspotify.sp_toplisttype.SP_TOPLIST_TYPE_ARTISTS : parts[1].Equals("Albums") ? libspotify.sp_toplisttype.SP_TOPLIST_TYPE_ALBUMS : libspotify.sp_toplisttype.SP_TOPLIST_TYPE_TRACKS; " is 242.
Long Statement,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,StartScrobbling,The length of the statement  "            var error = libspotify.sp_session_set_social_credentials(Session.SessionPtr' libspotify.sp_social_provider.SP_SOCIAL_PROVIDER_LASTFM' username' password); " is 154.
Long Statement,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,StartScrobbling,The length of the statement  "            error = libspotify.sp_session_set_scrobbling(Session.SessionPtr' libspotify.sp_social_provider.SP_SOCIAL_PROVIDER_LASTFM' libspotify.sp_scrobbling_state.SP_SCROBBLING_STATE_LOCAL_ENABLED); " is 188.
Long Statement,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,StopScrobbling,The length of the statement  "            var error = libspotify.sp_session_set_scrobbling(Session.SessionPtr' libspotify.sp_social_provider.SP_SOCIAL_PROVIDER_LASTFM' libspotify.sp_scrobbling_state.SP_SCROBBLING_STATE_LOCAL_DISABLED); " is 193.
Long Statement,SpotifyClient,TopList,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\TopList.cs,BeginBrowse,The length of the statement  "                t._browsePtr = libspotify.sp_toplistbrowse_create(Session.SessionPtr' type' region' IntPtr.Zero' t._callbackPtr' IntPtr.Zero); " is 126.
Long Statement,SpotifyClient,TopList,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\TopList.cs,toplistbrowse_complete,The length of the statement  "                Log.Warning(Plugin.LOG_MODULE' "ERROR: Toplist browse failed: {0}"' Functions.PtrToString(libspotify.sp_error_message(error))); " is 127.
Long Statement,SpotifyClient,TopList,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\TopList.cs,toplistbrowse_complete,The length of the statement  "            int count = this.ToplistType == libspotify.sp_toplisttype.SP_TOPLIST_TYPE_ALBUMS ? libspotify.sp_toplistbrowse_num_albums(_browsePtr) : this.ToplistType == libspotify.sp_toplisttype.SP_TOPLIST_TYPE_ARTISTS ? libspotify.sp_toplistbrowse_num_artists(_browsePtr) : libspotify.sp_toplistbrowse_num_tracks(_browsePtr); " is 313.
Empty Catch Block,SpotifyClient,Album,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Album.cs,safeReleaseAlbum,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Artist,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Artist.cs,safeReleaseArtist,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Functions,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Functions.cs,LinkPtrToString,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Image,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Image.cs,safeReleaseImage,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Image,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Image.cs,safeReleaseImage,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Playlist,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Playlist.cs,safeRemoveCallbacks,The method has an empty catch block.
Empty Catch Block,SpotifyClient,PlaylistContainer,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\PlaylistContainer.cs,safeRemoveCallbacks,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Search,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Search.cs,safeReleaseSearch,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,Initialize,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,GetInboxPlaylist,The method has an empty catch block.
Empty Catch Block,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,GetStarredPlaylist,The method has an empty catch block.
Empty Catch Block,SpotifyClient,TopList,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\TopList.cs,safeReleaseToplist,The method has an empty catch block.
Magic Number,SpotifyClient,Functions,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Functions.cs,LinkPtrToString,The following statement contains a magic number: byte[] buffer = new byte[128];
Magic Number,SpotifyClient,Functions,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Functions.cs,GetCountryName,The following statement contains a magic number: string countryCode = Encoding.ASCII.GetString(new byte[] { (byte)(country >> 8)' (byte)(country & 0xff) });
Magic Number,SpotifyClient,PlaylistContainer,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\PlaylistContainer.cs,GetFolderName,The following statement contains a magic number: IntPtr namePtr = Marshal.AllocHGlobal(128);
Magic Number,SpotifyClient,PlaylistContainer,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\PlaylistContainer.cs,GetFolderName,The following statement contains a magic number: libspotify.sp_error error = libspotify.sp_playlistcontainer_playlist_folder_name(containerPtr' index' namePtr' 128);
Magic Number,SpotifyClient,Search,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Search.cs,BeginSearch,The following statement contains a magic number: search._searchPtr = libspotify.sp_search_create(Session.SessionPtr' Functions.StringToPtr(keywords)' 0' 50' 0' 50' 0' 50' 0' 0' sp_search_type.SP_SEARCH_STANDARD' search._callbackPtr' IntPtr.Zero);
Magic Number,SpotifyClient,Search,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Search.cs,BeginSearch,The following statement contains a magic number: search._searchPtr = libspotify.sp_search_create(Session.SessionPtr' Functions.StringToPtr(keywords)' 0' 50' 0' 50' 0' 50' 0' 0' sp_search_type.SP_SEARCH_STANDARD' search._callbackPtr' IntPtr.Zero);
Magic Number,SpotifyClient,Search,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Search.cs,BeginSearch,The following statement contains a magic number: search._searchPtr = libspotify.sp_search_create(Session.SessionPtr' Functions.StringToPtr(keywords)' 0' 50' 0' 50' 0' 50' 0' 0' sp_search_type.SP_SEARCH_STANDARD' search._callbackPtr' IntPtr.Zero);
Magic Number,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,Login,The following statement contains a magic number: _loginError = initSession((string)args[3]);
Magic Number,SpotifyClient,Session,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Session.cs,Login,The following statement contains a magic number: libspotify.sp_session_login(_sessionPtr' args[1].ToString()' args[2].ToString()' false' null);
Magic Number,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,waitFor,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,SpotifyClient,Spotify,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Spotify.cs,ShutDown,The following statement contains a magic number: _programSignal.WaitOne(2000' false);
Magic Number,SpotifyClient,Track,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Track.cs,InitAsync,The following statement contains a magic number: this.Seconds = (decimal) libspotify.sp_track_duration(this.TrackPtr) / 1000M;
Magic Number,SpotifyClient,Track,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Track.cs,GetAlbumArtAsync,The following statement contains a magic number: timeout = timeout*2;
Magic Number,SpotifyClient,Track,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Track.cs,GetAlbumArtAsync,The following statement contains a magic number: timeout < 30
Magic Number,SpotifyClient,Track,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\Track.cs,GetAlbumArtAsync,The following statement contains a magic number: await Task.Delay(250);
Missing Default,SpotifyClient,PlaylistContainer,D:\research\architectureSmells\repos\GeorgeHahn_SOVND\SpotifyClient\PlaylistContainer.cs,buildTree,The following switch statement is missing a default case: switch (playlist.PlaylistType)                  {                      case libspotify.sp_playlist_type.SP_PLAYLIST_TYPE_START_FOLDER:                            playlist.FolderID = libspotify.sp_playlistcontainer_playlist_folder_id(_containerPtr' i);                          playlist.Name = GetFolderName(_containerPtr' i);                          playlist.Parent = current;                          current.Children.Add(playlist);                          current = playlist;                            break;                        case libspotify.sp_playlist_type.SP_PLAYLIST_TYPE_END_FOLDER:                            current = current.Parent;                          break;                        case libspotify.sp_playlist_type.SP_PLAYLIST_TYPE_PLAYLIST:                            playlist.Pointer = libspotify.sp_playlistcontainer_playlist(_containerPtr' i);                          playlist.Parent = current;                          current.Children.Add(playlist);                            break;                  }
