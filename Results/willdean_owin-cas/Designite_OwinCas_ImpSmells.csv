Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,AuthenticateCoreAsync,Cyclomatic complexity of the method is 8
Long Statement,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,AuthenticateCoreAsync,The length of the statement  "		string validateUrl = Options.CasServerUrlBase + "/validate" + "?service=" + Uri.EscapeDataString (BuildReturnTo (GetStateParameter (query))) + "&ticket=" + Uri.EscapeDataString (ticket); " is 186.
Long Statement,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,AuthenticateCoreAsync,The length of the statement  "			identity.AddClaim (new Claim (ClaimTypes.NameIdentifier' validatedUserName' "http://www.w3.org/2001/XMLSchema#string"' Options.AuthenticationType)); " is 148.
Long Statement,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,AuthenticateCoreAsync,The length of the statement  "			identity.AddClaim (new Claim (ClaimTypes.Name' validatedUserName' "http://www.w3.org/2001/XMLSchema#string"' Options.AuthenticationType)); " is 138.
Long Statement,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,BuildReturnTo,The length of the statement  "	return Request.Scheme + "://" + Request.Host + RequestPathBase + Options.CallbackPath + "?state=" + Uri.EscapeDataString (state); " is 129.
Long Statement,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,ApplyResponseChallengeAsync,The length of the statement  "	AuthenticationResponseChallenge challenge = Helper.LookupChallenge (Options.AuthenticationType' Options.AuthenticationMode); " is 124.
Long Statement,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,InvokeReturnPathAsync,The length of the statement  "			signInIdentity = new ClaimsIdentity (signInIdentity.Claims' context.SignInAsAuthenticationType' signInIdentity.NameClaimType' signInIdentity.RoleClaimType); " is 156.
Magic Number,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,AuthenticateCoreAsync,The following statement contains a magic number: try {  	IReadableStringCollection query = Request.Query;  	properties = UnpackStateParameter (query);  	if (properties == null) {  		_logger.WriteWarning ("Invalid return state");  		return null;  	}  	// Anti-CSRF  	if (!ValidateCorrelationId (properties' _logger)) {  		return new AuthenticationTicket (null' properties);  	}  	string ticket = GetTicketParameter (query);  	if (String.IsNullOrEmpty (ticket)) {  		// No ticket  		return new AuthenticationTicket (null' properties);  	}  	// Now' we need to get the ticket validated  	string validateUrl = Options.CasServerUrlBase + "/validate" + "?service=" + Uri.EscapeDataString (BuildReturnTo (GetStateParameter (query))) + "&ticket=" + Uri.EscapeDataString (ticket);  	HttpResponseMessage response = await _httpClient.GetAsync (validateUrl' Request.CallCancelled);  	response.EnsureSuccessStatusCode ();  	string responseBody = await response.Content.ReadAsStringAsync ();  	String validatedUserName = null;  	var responseParts = responseBody.Split ('\n');  	if (responseParts.Length >= 2) {  		if (responseParts [0] == "yes") {  			validatedUserName = responseParts [1];  		}  	}  	if (!String.IsNullOrEmpty (validatedUserName)) {  		var identity = new ClaimsIdentity (Options.AuthenticationType);  		identity.AddClaim (new Claim (ClaimTypes.NameIdentifier' validatedUserName' "http://www.w3.org/2001/XMLSchema#string"' Options.AuthenticationType));  		identity.AddClaim (new Claim (ClaimTypes.Name' validatedUserName' "http://www.w3.org/2001/XMLSchema#string"' Options.AuthenticationType));  		var context = new CasAuthenticatedContext (Context' identity' properties);  		await Options.Provider.Authenticated (context);  		return new AuthenticationTicket (context.Identity' context.Properties);  	}  	return new AuthenticationTicket (null' properties);  }  catch (Exception ex) {  	_logger.WriteError ("Authentication failed"' ex);  	return new AuthenticationTicket (null' properties);  }  
Magic Number,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,AuthenticateCoreAsync,The following statement contains a magic number: if (responseParts.Length >= 2) {  	if (responseParts [0] == "yes") {  		validatedUserName = responseParts [1];  	}  }  
Magic Number,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,ApplyResponseChallengeAsync,The following statement contains a magic number: if (Response.StatusCode != 401) {  	return Task.FromResult<object> (null);  }  
Magic Number,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,ApplyResponseChallengeAsync,The following statement contains a magic number: if (challenge != null) {  	string requestPrefix = Request.Scheme + Uri.SchemeDelimiter + Request.Host;  	var state = challenge.Properties;  	if (String.IsNullOrEmpty (state.RedirectUri)) {  		state.RedirectUri = requestPrefix + Request.PathBase + Request.Path + Request.QueryString;  	}  	// Anti-CSRF  	GenerateCorrelationId (state);  	string returnTo = BuildReturnTo (Options.StateDataFormat.Protect (state));  	string authorizationEndpoint = Options.CasServerUrlBase + "/login" + "?service=" + Uri.EscapeDataString (returnTo);  	Response.StatusCode = 302;  	Response.Headers.Set ("Location"' authorizationEndpoint);  }  
Magic Number,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,ApplyResponseChallengeAsync,The following statement contains a magic number: Response.StatusCode = 302;  
Magic Number,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,InvokeReturnPathAsync,The following statement contains a magic number: if (model == null) {  	_logger.WriteWarning ("Invalid return state' unable to redirect.");  	Response.StatusCode = 500;  	return true;  }  
Magic Number,OwinCas,CasAuthenticationHandler,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationHandler.cs,InvokeReturnPathAsync,The following statement contains a magic number: Response.StatusCode = 500;  
Magic Number,OwinCas,CasAuthenticationMiddleware,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationMiddleware.cs,CasAuthenticationMiddleware,The following statement contains a magic number: _httpClient.MaxResponseContentBufferSize = 1024 * 1024 * 10;  
Magic Number,OwinCas,CasAuthenticationMiddleware,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationMiddleware.cs,CasAuthenticationMiddleware,The following statement contains a magic number: _httpClient.MaxResponseContentBufferSize = 1024 * 1024 * 10;  
Magic Number,OwinCas,CasAuthenticationMiddleware,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationMiddleware.cs,CasAuthenticationMiddleware,The following statement contains a magic number: _httpClient.MaxResponseContentBufferSize = 1024 * 1024 * 10;  
Magic Number,OwinCas,CasAuthenticationOptions,C:\repos\willdean_owin-cas\owin-cas\CasAuthenticationOptions.cs,CasAuthenticationOptions,The following statement contains a magic number: BackchannelTimeout = TimeSpan.FromSeconds (60);  
