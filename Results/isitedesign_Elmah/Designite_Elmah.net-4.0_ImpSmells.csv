Implementation smell,Namespace,Class,File,Method,Description
Long Method,Elmah,ThrottledErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ThrottledErrorMailHtmlPage.generated.cs,Execute,The method has 193 lines of code.
Long Method,Elmah,ErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailHtmlPage.generated.cs,Execute,The method has 142 lines of code.
Long Method,Elmah,ErrorDetailPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorDetailPage.generated.cs,Execute,The method has 204 lines of code.
Long Method,Elmah,MasterPage,C:\repos\isitedesign_Elmah\src\Elmah\MasterPage.generated.cs,Execute,The method has 108 lines of code.
Complex Method,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,GetErrors,Cyclomatic complexity of the method is 11
Complex Method,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,GetError,Cyclomatic complexity of the method is 8
Complex Method,Elmah,ThrottledErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ThrottledErrorMailHtmlPage.generated.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,Elmah,HttpRequestValidation,C:\repos\isitedesign_Elmah\src\Elmah\HttpRequestValidation.cs,TryGetUnvalidatedCollections,Cyclomatic complexity of the method is 8
Complex Method,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,ReportError,Cyclomatic complexity of the method is 12
Complex Method,Elmah,HttpTextAsyncHandler,C:\repos\isitedesign_Elmah\src\Elmah\HttpTextAsyncHandler.cs,ProcessRequest,Cyclomatic complexity of the method is 9
Complex Method,Elmah,ErrorJson,C:\repos\isitedesign_Elmah\src\Elmah\ErrorJson.cs,Member,Cyclomatic complexity of the method is 8
Complex Method,Elmah,ErrorLogDownloadHandler,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogDownloadHandler.cs,ProcessRequest,Cyclomatic complexity of the method is 14
Complex Method,Elmah,ErrorLogPageFactory,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogPageFactory.cs,FindHandler,Cyclomatic complexity of the method is 12
Complex Method,Elmah,ErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailModule.cs,ReportError,Cyclomatic complexity of the method is 12
Complex Method,Elmah,ErrorXml,C:\repos\isitedesign_Elmah\src\Elmah\ErrorXml.cs,ReadInnerXml,Cyclomatic complexity of the method is 18
Complex Method,Elmah,ErrorXml,C:\repos\isitedesign_Elmah\src\Elmah\ErrorXml.cs,UpcodeTo,Cyclomatic complexity of the method is 11
Complex Method,Elmah,JsonTextWriter,C:\repos\isitedesign_Elmah\src\Elmah\JsonTextWriter.cs,Enquote,Cyclomatic complexity of the method is 25
Complex Method,Elmah,ManifestResourceHelper,C:\repos\isitedesign_Elmah\src\Elmah\ManifestResourceHelper.cs,WriteResourceToStream,Cyclomatic complexity of the method is 8
Complex Method,Elmah,MemoryErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\MemoryErrorLog.cs,GetErrors,Cyclomatic complexity of the method is 8
Complex Method,Elmah,OracleErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\OracleErrorLog.cs,GetErrors,Cyclomatic complexity of the method is 10
Complex Method,Elmah,OracleErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\OracleErrorLog.cs,GetError,Cyclomatic complexity of the method is 8
Complex Method,Elmah,StringFormatter,C:\repos\isitedesign_Elmah\src\Elmah\StringFormatter.cs,FormatImpl,Cyclomatic complexity of the method is 11
Complex Method,Elmah,StringFormatter,C:\repos\isitedesign_Elmah\src\Elmah\StringFormatter.cs,BindFormatToken,Cyclomatic complexity of the method is 10
Complex Method,Elmah.Assertions,JScriptAssertion,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\JScriptAssertion.cs,ProcessDirectives,Cyclomatic complexity of the method is 14
Long Parameter List,Elmah,Apm,C:\repos\isitedesign_Elmah\src\Elmah\Apm.cs,BeginSync,The method has 5 parameters.
Long Parameter List,Elmah,Apm,C:\repos\isitedesign_Elmah\src\Elmah\Apm.cs,Begin,The method has 6 parameters.
Long Parameter List,Elmah,ThrottledErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ThrottledErrorMailHtmlPage.generated.cs,Execute,The method has 7 parameters.
Long Parameter List,Elmah,ErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailHtmlPage.generated.cs,Execute,The method has 5 parameters.
Long Parameter List,Elmah,DbCommandExtensions,C:\repos\isitedesign_Elmah\src\Elmah\DbCommandExtensions.cs,ParameterAdder,The method has 5 parameters.
Long Parameter List,Elmah,StackTraceParser,C:\repos\isitedesign_Elmah\src\Elmah\StackTraceParser.cs,Parse,The method has 7 parameters.
Long Parameter List,Elmah,Error,C:\repos\isitedesign_Elmah\src\Elmah\Error.cs,Error,The method has 5 parameters.
Long Parameter List,Elmah,ErrorDigestRssHandler,C:\repos\isitedesign_Elmah\src\Elmah\ErrorDigestRssHandler.cs,GetItems,The method has 7 parameters.
Long Parameter List,Elmah,ErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLog.cs,BeginGetErrors,The method has 5 parameters.
Long Parameter List,Elmah,ErrorSignal,C:\repos\isitedesign_Elmah\src\Elmah\ErrorSignal.cs,RaiseWithCallerInfo,The method has 5 parameters.
Long Parameter List,Elmah,ManifestResourceHandler,C:\repos\isitedesign_Elmah\src\Elmah\ManifestResourceHandler.cs,Create,The method has 5 parameters.
Long Parameter List,Elmah,SccStamp,C:\repos\isitedesign_Elmah\src\Elmah\SccStamp.cs,SortByRevision,The method has 6 parameters.
Long Parameter List,Elmah,SqlErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\SqlErrorLog.cs,BeginGetErrors,The method has 5 parameters.
Long Parameter List,Elmah,XmlFileErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\XmlFileErrorLog.cs,GetErrors,The method has 6 parameters.
Long Statement,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,InitializeDatabase,The length of the statement  "					throw new Exception (string.Format ("The Microsoft Access database creation script took longer than the allocated time of {0} seconds to execute. " + "The script was terminated prematurely."' tolerance.TotalSeconds)); " is 217.
Long Statement,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,InitializeDatabase,The length of the statement  "					throw new Exception (string.Format ("The Microsoft Access database creation script failed with exit code {0}."' process.ExitCode)); " is 131.
Long Statement,Elmah,AsyncResult,C:\repos\isitedesign_Elmah\src\Elmah\AsyncResult.cs,Complete,The length of the statement  "	var prevState = Interlocked.Exchange (ref _completedState' completedSynchronously ? StateCompletedSynchronously : StateCompletedAsynchronously); " is 144.
Long Statement,Elmah,AsyncResult,C:\repos\isitedesign_Elmah\src\Elmah\AsyncResult.cs,End,The length of the statement  "		//throw new ArgumentException("IAsyncResult object did not come from the corresponding async method on this type."' "asyncResult"); " is 131.
Long Statement,Elmah,CallerInfo,C:\repos\isitedesign_Elmah\src\Elmah\CallerInfo.cs,ToString,The length of the statement  "	return Mask.EmptyString (MemberName' "<?member>") + "@" + Mask.EmptyString (FilePath' "<?filename>") + ":" + LineNumber.ToInvariantString (); " is 141.
Long Statement,Elmah,ConnectionStringHelper,C:\repos\isitedesign_Elmah\src\Elmah\ConnectionStringHelper.cs,GetDataSourceFilePath,The length of the statement  "		throw new ArgumentException ("A 'Data Source' parameter was expected in the supplied connection string' but it was not found."); " is 128.
Long Statement,Elmah,ConnectionStringHelper,C:\repos\isitedesign_Elmah\src\Elmah\ConnectionStringHelper.cs,ResolveDataSourceFilePath,The length of the statement  "	return (baseDirectory ?? string.Empty).TrimEnd (_dirSeparators) + Path.DirectorySeparatorChar + path.Substring (dataDirectoryMacroString.Length).TrimStart (_dirSeparators); " is 172.
Long Statement,Elmah,ThrottledErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ThrottledErrorMailHtmlPage.generated.cs,Execute,The length of the statement  "	WriteLiteral ("\t\t\r\n\t\t<ul style=\"padding: 0; margin: 0; list-style-type: none\">\r\n\t\t\t<li style=\"ma" + "rgin:0\"><a href=\""); " is 137.
Long Statement,Elmah,ThrottledErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ThrottledErrorMailHtmlPage.generated.cs,Execute,The length of the statement  "		WriteLiteral ("<pre style=\"padding: 1em; background-color: #FFFFCC; font-family: Consolas' Couri" + "er' monospace;\">"); " is 122.
Long Statement,Elmah,ThrottledErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ThrottledErrorMailHtmlPage.generated.cs,Execute,The length of the statement  "			WriteLiteral ("\t                    <tr style=\"vertical-align: top;\">\r\n\t\t\t\t\t\t\t<td style=\"border:" + " 1px solid black; padding: 4px;\">"); " is 151.
Long Statement,Elmah,ThrottledErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ThrottledErrorMailHtmlPage.generated.cs,Execute,The length of the statement  "			WriteLiteral ("</td>\r\n\t\t\t\t\t\t\t<td style=\"border: 1px solid black; padding: 4px; font-family: Cons" + "olas' Courier' monospace;\">"); " is 142.
Long Statement,Elmah,ErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailHtmlPage.generated.cs,Execute,The length of the statement  "		WriteLiteral ("</h1>\r\n                <table class=\"collection\">\r\n                    <tr><th>Na" + "me</th>            \r\n                        <th>Value</th></tr>\r\n"); " is 180.
Long Statement,Elmah,ErrorMailHtmlPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailHtmlPage.generated.cs,Execute,The length of the statement  "	WriteLiteral (" \r\n            Licensed under <a href=\"http://www.apache.org/licenses/LICENSE-2.0" + "\">Apache License' Version 2.0</a>. \r\n        </p>\r\n    </body>\r\n</html>\r\n"); " is 189.
Long Statement,Elmah,ExceptionExtensions,C:\repos\isitedesign_Elmah\src\Elmah\ExceptionExtensions.cs,TryScopeCallerInfo,The length of the statement  "	var dispose = previous != null ? (Action)(() => exception.TrySetCallerInfo (previous)) : (() => exception.TryClearCallerInfo ()); " is 129.
Long Statement,Elmah,HttpRequestValidation,C:\repos\isitedesign_Elmah\src\Elmah\HttpRequestValidation.cs,TryGetUnvalidatedCollections,The length of the statement  "		var fqs = context.Items ["ELMAH:Microsoft.Web.Infrastructure.DynamicValidationHelper.ValidationUtility.GetUnvalidatedCollections"] as Func<HttpRequestBase' IEnumerable<NameValueCollection>> ?? GetUnvalidatedCollections; " is 219.
Long Statement,Elmah,HttpRequestValidation,C:\repos\isitedesign_Elmah\src\Elmah\HttpRequestValidation.cs,TryGetUnvalidatedCollections,The length of the statement  "	return resultor (form ?? qsfc.Form' queryString ?? qsfc.QueryString' // ReSharper restore ConstantNullCoalescingCondition " is 121.
Long Statement,Elmah,StackTraceParser,C:\repos\isitedesign_Elmah\src\Elmah\StackTraceParser.cs,Parse,The length of the statement  "	select selector (Token (groups ["frame"]' tokenSelector)' methodSelector (Token (groups ["type"]' tokenSelector)' Token (groups ["method"]' tokenSelector))' parametersSelector (Token (groups ["params"]' tokenSelector)' from i in Enumerable.Range (0' pt.Count) " is 259.
Long Statement,Elmah,StackTraceParser,C:\repos\isitedesign_Elmah\src\Elmah\StackTraceParser.cs,Parse,The length of the statement  "	select parameterSelector (Token (pt [i]' tokenSelector)' Token (pn [i]' tokenSelector)))' sourceLocationSelector (Token (groups ["file"]' tokenSelector)' Token (groups ["line"]' tokenSelector))); " is 195.
Long Statement,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,IsErrorCurrent,The length of the statement  "	// if the last email occurred too long ago' resend email (ie if an error occurs twice an hour' two emails would be sent if minutes were 20) " is 139.
Long Statement,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,IsErrorCurrent,The length of the statement  "		// set the timestamp to right now since this error is now valid once due to its timestamp (this makes it not fail the time check again for interval minutes) " is 156.
Long Statement,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,IsErrorCurrent,The length of the statement  "	// if the error has occurred a multiple of the interval times' resend email (note checking updated state with current count) " is 124.
Long Statement,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,IsErrorCurrent,The length of the statement  "		// set the timestamp to right now since this error is now valid once due to its error count (this makes it not fail the time check again for interval minutes) " is 158.
Long Statement,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,IsErrorCurrent,The length of the statement  "		// we reset this here so you wouldn't get a time-based email within the minutes interval if the error count became higher than threshold " is 136.
Long Statement,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,ReportError,The length of the statement  "	mail.Subject = string.Format (subjectFormat' error.Message' error.Type' GetErrorCount (error)).Replace ('\r'' ' ').Replace ('\n'' ' '); " is 135.
Long Statement,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,ReportError,The length of the statement  "		throw new ApplicationException (string.Format ("The error mail module does not know how to handle the {1} media type that is created by the {0} formatter."' formatter.GetType ().FullName' formatter.MimeType)); " is 209.
Long Statement,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The length of the statement  "	return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider); " is 518.
Long Statement,Elmah,HttpTextAsyncHandler,C:\repos\isitedesign_Elmah\src\Elmah\HttpTextAsyncHandler.cs,ProcessRequest,The length of the statement  "					encoder.Convert (chars' charIndex' charsRead - charIndex' bytes' 0' bytes.Length' flush' out charsUsed' out bytesUsed' out completed); " is 134.
Long Statement,Elmah,MasterPage,C:\repos\isitedesign_Elmah\src\Elmah\MasterPage.generated.cs,Execute,The length of the statement  "	WriteLiteral ("\" />\r\n        <style type=\"text/css\">\r\n          body {\r\n            padding-top:" + " 60px;\r\n          }\r\n        </style>\r\n    </head>\r\n    <body>\r\n"); " is 187.
Long Statement,Elmah,MasterPage,C:\repos\isitedesign_Elmah\src\Elmah\MasterPage.generated.cs,Execute,The length of the statement  "	WriteLiteral ("\r\n            \r\n            <footer id=\"Footer\">\r\n                <span>Powered b" + "y <a href=\"http://elmah.googlecode.com/\">"); " is 155.
Long Statement,Elmah,MasterPage,C:\repos\isitedesign_Elmah\src\Elmah\MasterPage.generated.cs,Execute,The length of the statement  "	WriteLiteral (" \r\n                    Licensed under <a href=\"http://www.apache.org/licenses/LIC" + "ENSE-2.0\">Apache License' Version 2.0</a>. \r\n                </span>\r\n          " + "      Server date is "); " is 218.
Long Statement,Elmah,Error,C:\repos\isitedesign_Elmah\src\Elmah\Error.cs,GetUniqueId,The length of the statement  "	var signature = ex.Message + ex.StackTrace + ((ex.InnerException != null) ? GetUniqueId (ex.InnerException) : string.Empty); " is 124.
Long Statement,Elmah,ErrorDigestRssHandler,C:\repos\isitedesign_Elmah\src\Elmah\ErrorDigestRssHandler.cs,ProcessRequest,The length of the statement  "	var link = ErrorLogPageFactory.GetRequestUrl (context).GetLeftPart (UriPartial.Authority) + request.ServerVariables ["URL"]; " is 124.
Long Statement,Elmah,ErrorDisplay,C:\repos\isitedesign_Elmah\src\Elmah\ErrorDisplay.cs,HumaneExceptionErrorType,The length of the statement  "		if (string.Compare (type' suffixIndex' conventionalSuffix' 0' conventionalSuffix.Length' true' CultureInfo.InvariantCulture) == 0) { " is 132.
Long Statement,Elmah,ErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLog.cs,BeginGetErrors,The length of the statement  "	            return Apm.BeginSync(asyncCallback' asyncState' this' "GetErrors"' () => GetErrors(pageIndex' pageSize' errorEntryList));" is 121.
Long Statement,Elmah,ErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLog.cs,GetDefaultImpl,The length of the statement  "	log = (ErrorLog)SimpleServiceProviderFactory.CreateFromConfigSection (Configuration.GroupSlash + "errorLog") ?? new MemoryErrorLog (); " is 134.
Long Statement,Elmah,ErrorLogDownloadHandler,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogDownloadHandler.cs,ProcessRequest,The length of the statement  "	return ProcessRequestPrelude (context' (format' maxDownloadCount) => ProcessRequest (context' getAsyncCallback' format' maxDownloadCount)); " is 139.
Long Statement,Elmah,ErrorLogPageFactory,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogPageFactory.cs,FindHandler,The length of the statement  "		return new HttpAsyncHandler ((context' getAsyncCallback) => HttpTextAsyncHandler.Create (ErrorLogDownloadHandler.ProcessRequest) (context' getAsyncCallback)); " is 158.
Long Statement,Elmah,ErrorLogPageFactory,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogPageFactory.cs,FindHandler,The length of the statement  "		return new DelegatingHttpHandler (ManifestResourceHandler.Create (StyleSheetHelper.StyleSheetResourceNames' "text/css"' Encoding.GetEncoding ("Windows-1252")' true)); " is 166.
Long Statement,Elmah,ErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailModule.cs,OnInit,The length of the statement  "	var mailPriority = (MailPriority)Enum.Parse (typeof(MailPriority)' GetSetting (config' "priority"' MailPriority.Normal.ToString ())' true); " is 139.
Long Statement,Elmah,ErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailModule.cs,ReportError,The length of the statement  "		throw new ApplicationException (string.Format ("The error mail module does not know how to handle the {1} media type that is created by the {0} formatter."' formatter.GetType ().FullName' formatter.MimeType)); " is 209.
Long Statement,Elmah,ErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorMailModule.cs,GetSetting,The length of the statement  "			throw new ApplicationException (string.Format ("The required configuration setting '{0}' is missing for the error mailing module."' name)); " is 139.
Long Statement,Elmah,ErrorRssHandler,C:\repos\isitedesign_Elmah\src\Elmah\ErrorRssHandler.cs,ProcessRequest,The length of the statement  "	var link = ErrorLogPageFactory.GetRequestUrl (context).GetLeftPart (UriPartial.Authority) + context.Request.ServerVariables ["URL"]; " is 132.
Long Statement,Elmah,ErrorRssHandler,C:\repos\isitedesign_Elmah\src\Elmah\ErrorRssHandler.cs,ProcessRequest,The length of the statement  "	select RssXml.Item (error.Message' "An error of type " + error.Type + " occurred. " + error.Message' error.Time' baseUrl + "detail?id=" + HttpUtility.UrlEncode (entry.Id)); " is 172.
Long Statement,Elmah,ErrorTweetModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorTweetModule.cs,OnInit,The length of the statement  "	int maxStatusLength = int.Parse (GetSetting (config' "maxStatusLength"' "140")' NumberStyles.None' CultureInfo.InvariantCulture); " is 129.
Long Statement,Elmah,ErrorTweetModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorTweetModule.cs,LogException,The length of the statement  "			status = trimmedStatusLength >= 0 ? status.Substring (0' trimmedStatusLength) + ellipsis : status.Substring (0' maxLength); " is 123.
Long Statement,Elmah,ErrorTweetModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorTweetModule.cs,LogException,The length of the statement  "		IAsyncResult ar = request.BeginGetRequestStream (new AsyncCallback (OnGetRequestStreamCompleted)' AsyncArgs (request' data)); " is 125.
Long Statement,Elmah,ErrorTweetModule,C:\repos\isitedesign_Elmah\src\Elmah\ErrorTweetModule.cs,GetSetting,The length of the statement  "			throw new ApplicationException (string.Format ("The required configuration setting '{0}' is missing for the error tweeting module."' name)); " is 140.
Long Statement,Elmah,ErrorXml,C:\repos\isitedesign_Elmah\src\Elmah\ErrorXml.cs,WriteXmlAttributes,The length of the statement  "		WriteXmlAttribute (writer' "time"' XmlConvert.ToString (error.Time.ToUniversalTime ()' @"yyyy-MM-dd\THH:mm:ss.fffffff\Z")); " is 123.
Long Statement,Elmah,FixIIS5xWildcardMappingModule,C:\repos\isitedesign_Elmah\src\Elmah\FixIIS5xWildcardMappingModule.cs,GetHandlerPath,The length of the statement  "	System.Web.Configuration.HttpHandlersSection handlersSection = System.Configuration.ConfigurationManager.GetSection ("system.web/httpHandlers") as System.Web.Configuration.HttpHandlersSection; " is 192.
Long Statement,Elmah,FixIIS5xWildcardMappingModule,C:\repos\isitedesign_Elmah\src\Elmah\FixIIS5xWildcardMappingModule.cs,OnBeginRequest,The length of the statement  "		context.RewritePath (path.Substring (0' handlerPosition + _handlerPathLength)' path.Substring (handlerPosition + _handlerPathLength)' context.Request.QueryString.ToString ()); " is 175.
Long Statement,Elmah,ManifestResourceHelper,C:\repos\isitedesign_Elmah\src\Elmah\ManifestResourceHelper.cs,WriteResourceToStream,The length of the statement  "			throw new Exception (string.Format (@"Resource named {0}.{1} not found in assembly {2}."' thisType.Namespace' resourceName' thisAssembly)); " is 139.
Long Statement,Elmah,OracleErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\OracleErrorLog.cs,Log,The length of the statement  "				AddProviderSpecificTypeParameter (command' "tempblob"' ThisProviderInfo.ClobDbType).Direction = ParameterDirection.Output; " is 122.
Long Statement,Elmah,OracleErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\OracleErrorLog.cs,GetErrors,The length of the statement  "			AddProviderSpecificTypeParameter (command' "v_Results"' ThisProviderInfo.RefCursorDbType).Direction = ParameterDirection.Output; " is 128.
Long Statement,Elmah,OracleErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\OracleErrorLog.cs,GetDbProviderFactory,The length of the statement  "		dbProviderFactory = DbProviderFactoryQuery.FindFactory ("Oracle.DataAccess.Client") ?? DbProviderFactoryQuery.GetFactory ("System.Data.OracleClient"); " is 150.
Long Statement,Elmah,OracleErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\OracleErrorLog.cs,GetProviderInfo,The length of the statement  "	let attribute = (DbProviderSpecificTypePropertyAttribute)Attribute.GetCustomAttribute (property' typeof(DbProviderSpecificTypePropertyAttribute)' false) " is 152.
Long Statement,Elmah,RssXml,C:\repos\isitedesign_Elmah\src\Elmah\RssXml.cs,Rss,The length of the statement  "	new XElement ("channel"' new XElement ("title"' title)' new XElement ("link"' link)' new XElement ("description"' description)' new XElement ("language"' "en")' items)); " is 169.
Long Statement,Elmah,RssXml,C:\repos\isitedesign_Elmah\src\Elmah\RssXml.cs,Item,The length of the statement  "	return new XElement ("item"' new XElement ("title"' title)' new XElement ("description"' description)' new XElement ("pubDate"' pubDate.ToUniversalTime ().ToString ("r"' DateTimeFormatInfo.InvariantInfo))' link != null ? new XElement ("link"' link) : null); " is 257.
Long Statement,Elmah,SqlErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\SqlErrorLog.cs,Log,The length of the statement  "		using (var command = Commands.LogError (id' ApplicationName' error.HostName' error.Type' error.Source' error.Message' error.User' error.StatusCode' error.Time.ToUniversalTime ()' errorXml)) { " is 191.
Long Statement,Elmah,SqlErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\SqlErrorLog.cs,GetErrorsAsync,The length of the statement  "	return Task.Factory.FromAsync<int' int' ICollection<ErrorLogEntry>' int> (BeginGetErrors' EndGetErrors' pageIndex' pageSize' errorEntryList' null); " is 147.
Long Statement,Elmah,XmlFileErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\XmlFileErrorLog.cs,Log,The length of the statement  "	string fileName = string.Format (CultureInfo.InvariantCulture' @"error-{0:yyyy-MM-ddHHmmssZ}-{1}.xml"' /* 0 */timeStamp.ToUniversalTime ()' /* 1 */errorId); " is 156.
Long Statement,Elmah,XmlFileErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\XmlFileErrorLog.cs,GetErrors,The length of the statement  "	var files = infos.Where (info => IsUserFile (info.Attributes)).OrderBy (info => info.Name' StringComparer.OrdinalIgnoreCase).Select (info => Path.Combine (logPath' info.Name)).Reverse ().ToArray (); " is 198.
Long Statement,Elmah.Assertions,AssertionFactory,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\AssertionFactory.cs,assert_jscript,The length of the statement  "	return new JScriptAssertion (expression' DeserializeStringArray (config' "assemblies"' "assembly"' "name")' DeserializeStringArray (config' "imports"' "import"' "namespace")); " is 175.
Long Statement,Elmah.Assertions,AssertionFactory,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\AssertionFactory.cs,CreateImpl,The length of the statement  "		if (!DecodeClrTypeNamespaceFromXmlNamespace (xmlns' out ns' out assemblyName) || ns.Length == 0 || assemblyName.Length == 0) { " is 126.
Long Statement,Elmah.Assertions,AssertionFactory,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\AssertionFactory.cs,CreateImpl,The length of the statement  "			throw new ConfigurationException (string.Format ("Error decoding CLR type namespace and assembly from the XML namespace '{0}'."' xmlns)); " is 137.
Long Statement,Elmah.Assertions,AssertionFactory,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\AssertionFactory.cs,CreateImpl,The length of the statement  "		throw new MissingMemberException (string.Format ("{0} does not have a method named {1}. " + "Ensure that the method is named correctly and that it is public and static."' factoryType' name)); " is 191.
Long Statement,Elmah.Assertions,AssertionFactory,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\AssertionFactory.cs,CreateImpl,The length of the statement  "	if (parameters.Length == 1 && parameters [0].ParameterType == typeof(XmlElement) && method.ReturnType == typeof(IAssertion)) { " is 126.
Long Statement,Elmah.Assertions,JScriptAssertion,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\JScriptAssertion.cs,ProcessDirectives,The length of the statement  "				throw new ArgumentException (string.Format ("Error processing directives section (lead comment) of the JScript expression (see line {0}). {1}"' lineNumber.ToString ("N0")' e.Message)' "expression"); " is 198.
Complex Conditional,Elmah,ErrorLogPageFactory,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogPageFactory.cs,GetHandler,The conditional expression  "authorized == false || (authorized == null // Compatibility case...  && !request.IsLocal && !SecurityConfiguration.Default.AllowRemoteAccess)"  is complex.
Complex Conditional,Elmah,JsonTextWriter,C:\repos\isitedesign_Elmah\src\Elmah\JsonTextWriter.cs,WriteImpl,The conditional expression  "Depth == 0 && (text.Length > 1 || (text [0] != '{' && text [0] != '['))"  is complex.
Empty Catch Block,Elmah,Apm,C:\repos\isitedesign_Elmah\src\Elmah\Apm.cs,Begin,The method has an empty catch block.
Empty Catch Block,Elmah,Environment,C:\repos\isitedesign_Elmah\src\Elmah\Environment.cs,TryGetMachineName,The method has an empty catch block.
Empty Catch Block,Elmah,Environment,C:\repos\isitedesign_Elmah\src\Elmah\Environment.cs,TryGetMachineName,The method has an empty catch block.
Empty Catch Block,Elmah,Environment,C:\repos\isitedesign_Elmah\src\Elmah\Environment.cs,TryGetMachineName,The method has an empty catch block.
Empty Catch Block,Elmah,HttpModuleRegistry,C:\repos\isitedesign_Elmah\src\Elmah\HttpModuleRegistry.cs,GetModules,The method has an empty catch block.
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbConnection connection = new OleDbConnection (this.ConnectionString))  	using (OleDbCommand command = connection.CreateCommand ()) {  		connection.Open ();  		command.CommandType = CommandType.Text;  		command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  		command.CommandType = CommandType.Text;  		OleDbParameterCollection parameters = command.Parameters;  		parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  		parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  		parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  		parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  		parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  		parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  		parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  		parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  		parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  		command.ExecuteNonQuery ();  		using (OleDbCommand identityCommand = connection.CreateCommand ()) {  			identityCommand.CommandType = CommandType.Text;  			identityCommand.CommandText = "SELECT @@IDENTITY";  			return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  		}  	}  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbConnection connection = new OleDbConnection (this.ConnectionString))  	using (OleDbCommand command = connection.CreateCommand ()) {  		connection.Open ();  		command.CommandType = CommandType.Text;  		command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  		command.CommandType = CommandType.Text;  		OleDbParameterCollection parameters = command.Parameters;  		parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  		parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  		parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  		parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  		parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  		parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  		parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  		parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  		parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  		command.ExecuteNonQuery ();  		using (OleDbCommand identityCommand = connection.CreateCommand ()) {  			identityCommand.CommandType = CommandType.Text;  			identityCommand.CommandText = "SELECT @@IDENTITY";  			return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  		}  	}  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbConnection connection = new OleDbConnection (this.ConnectionString))  	using (OleDbCommand command = connection.CreateCommand ()) {  		connection.Open ();  		command.CommandType = CommandType.Text;  		command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  		command.CommandType = CommandType.Text;  		OleDbParameterCollection parameters = command.Parameters;  		parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  		parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  		parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  		parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  		parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  		parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  		parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  		parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  		parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  		command.ExecuteNonQuery ();  		using (OleDbCommand identityCommand = connection.CreateCommand ()) {  			identityCommand.CommandType = CommandType.Text;  			identityCommand.CommandText = "SELECT @@IDENTITY";  			return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  		}  	}  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbConnection connection = new OleDbConnection (this.ConnectionString))  	using (OleDbCommand command = connection.CreateCommand ()) {  		connection.Open ();  		command.CommandType = CommandType.Text;  		command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  		command.CommandType = CommandType.Text;  		OleDbParameterCollection parameters = command.Parameters;  		parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  		parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  		parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  		parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  		parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  		parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  		parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  		parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  		parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  		command.ExecuteNonQuery ();  		using (OleDbCommand identityCommand = connection.CreateCommand ()) {  			identityCommand.CommandType = CommandType.Text;  			identityCommand.CommandText = "SELECT @@IDENTITY";  			return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  		}  	}  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbCommand command = connection.CreateCommand ()) {  	connection.Open ();  	command.CommandType = CommandType.Text;  	command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  	command.CommandType = CommandType.Text;  	OleDbParameterCollection parameters = command.Parameters;  	parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  	parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  	parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  	parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  	parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  	parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  	parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  	parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  	parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  	command.ExecuteNonQuery ();  	using (OleDbCommand identityCommand = connection.CreateCommand ()) {  		identityCommand.CommandType = CommandType.Text;  		identityCommand.CommandText = "SELECT @@IDENTITY";  		return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  	}  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbCommand command = connection.CreateCommand ()) {  	connection.Open ();  	command.CommandType = CommandType.Text;  	command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  	command.CommandType = CommandType.Text;  	OleDbParameterCollection parameters = command.Parameters;  	parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  	parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  	parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  	parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  	parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  	parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  	parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  	parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  	parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  	command.ExecuteNonQuery ();  	using (OleDbCommand identityCommand = connection.CreateCommand ()) {  		identityCommand.CommandType = CommandType.Text;  		identityCommand.CommandText = "SELECT @@IDENTITY";  		return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  	}  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbCommand command = connection.CreateCommand ()) {  	connection.Open ();  	command.CommandType = CommandType.Text;  	command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  	command.CommandType = CommandType.Text;  	OleDbParameterCollection parameters = command.Parameters;  	parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  	parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  	parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  	parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  	parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  	parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  	parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  	parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  	parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  	command.ExecuteNonQuery ();  	using (OleDbCommand identityCommand = connection.CreateCommand ()) {  		identityCommand.CommandType = CommandType.Text;  		identityCommand.CommandText = "SELECT @@IDENTITY";  		return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  	}  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: using (OleDbCommand command = connection.CreateCommand ()) {  	connection.Open ();  	command.CommandType = CommandType.Text;  	command.CommandText = @"INSERT INTO ELMAH_Error                                             (Application' Host' Type' Source'                                              Message' UserName' StatusCode' TimeUtc' AllXml)                                         VALUES                                             (@Application' @Host' @Type' @Source'                                              @Message' @UserName' @StatusCode' @TimeUtc' @AllXml)";  	command.CommandType = CommandType.Text;  	OleDbParameterCollection parameters = command.Parameters;  	parameters.Add ("@Application"' OleDbType.VarChar' _maxAppNameLength).Value = ApplicationName;  	parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  	parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  	parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  	parameters.Add ("@Message"' OleDbType.LongVarChar' error.Message.Length).Value = error.Message;  	parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  	parameters.Add ("@StatusCode"' OleDbType.Integer).Value = error.StatusCode;  	parameters.Add ("@TimeUtc"' OleDbType.Date).Value = error.Time.ToUniversalTime ();  	parameters.Add ("@AllXml"' OleDbType.LongVarChar' errorXml.Length).Value = errorXml;  	command.ExecuteNonQuery ();  	using (OleDbCommand identityCommand = connection.CreateCommand ()) {  		identityCommand.CommandType = CommandType.Text;  		identityCommand.CommandText = "SELECT @@IDENTITY";  		return Convert.ToString (identityCommand.ExecuteScalar ()' CultureInfo.InvariantCulture);  	}  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: parameters.Add ("@Host"' OleDbType.VarChar' 30).Value = error.HostName;  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: parameters.Add ("@Type"' OleDbType.VarChar' 100).Value = error.Type;  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: parameters.Add ("@Source"' OleDbType.VarChar' 60).Value = error.Source;  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,Log,The following statement contains a magic number: parameters.Add ("@User"' OleDbType.VarChar' 50).Value = error.User;  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,GetErrors,The following statement contains a magic number: using (OleDbConnection connection = new OleDbConnection (this.ConnectionString))  	using (OleDbCommand command = connection.CreateCommand ()) {  		command.CommandType = CommandType.Text;  		command.CommandText = "SELECT COUNT(*) FROM ELMAH_Error";  		connection.Open ();  		int totalCount = (int)command.ExecuteScalar ();  		if (errorEntryList != null && pageIndex * pageSize < totalCount) {  			int maxRecords = pageSize * (pageIndex + 1);  			if (maxRecords > totalCount) {  				maxRecords = totalCount;  				pageSize = totalCount - pageSize * (totalCount / pageSize);  			}  			StringBuilder sql = new StringBuilder (1000);  			sql.Append ("SELECT e.* FROM (");  			sql.Append ("SELECT TOP ");  			sql.Append (pageSize.ToString (CultureInfo.InvariantCulture));  			sql.Append (" TimeUtc' ErrorId FROM (");  			sql.Append ("SELECT TOP ");  			sql.Append (maxRecords.ToString (CultureInfo.InvariantCulture));  			sql.Append (" TimeUtc' ErrorId FROM ELMAH_Error ");  			sql.Append ("ORDER BY TimeUtc DESC' ErrorId DESC) ");  			sql.Append ("ORDER BY TimeUtc ASC' ErrorId ASC) AS i ");  			sql.Append ("INNER JOIN Elmah_Error AS e ON i.ErrorId = e.ErrorId ");  			sql.Append ("ORDER BY e.TimeUtc DESC' e.ErrorId DESC");  			command.CommandText = sql.ToString ();  			using (OleDbDataReader reader = command.ExecuteReader ()) {  				Debug.Assert (reader != null);  				while (reader.Read ()) {  					var id = Convert.ToString (reader ["ErrorId"]' CultureInfo.InvariantCulture);  					var error = new Error {  						ApplicationName = reader ["Application"].ToString ()'  						HostName = reader ["Host"].ToString ()'  						Type = reader ["Type"].ToString ()'  						Source = reader ["Source"].ToString ()'  						Message = reader ["Message"].ToString ()'  						User = reader ["UserName"].ToString ()'  						StatusCode = Convert.ToInt32 (reader ["StatusCode"])'  						Time = Convert.ToDateTime (reader ["TimeUtc"]).ToLocalTime ()  					};  					errorEntryList.Add (new ErrorLogEntry (this' id' error));  				}  				reader.Close ();  			}  		}  		return totalCount;  	}  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,GetErrors,The following statement contains a magic number: using (OleDbCommand command = connection.CreateCommand ()) {  	command.CommandType = CommandType.Text;  	command.CommandText = "SELECT COUNT(*) FROM ELMAH_Error";  	connection.Open ();  	int totalCount = (int)command.ExecuteScalar ();  	if (errorEntryList != null && pageIndex * pageSize < totalCount) {  		int maxRecords = pageSize * (pageIndex + 1);  		if (maxRecords > totalCount) {  			maxRecords = totalCount;  			pageSize = totalCount - pageSize * (totalCount / pageSize);  		}  		StringBuilder sql = new StringBuilder (1000);  		sql.Append ("SELECT e.* FROM (");  		sql.Append ("SELECT TOP ");  		sql.Append (pageSize.ToString (CultureInfo.InvariantCulture));  		sql.Append (" TimeUtc' ErrorId FROM (");  		sql.Append ("SELECT TOP ");  		sql.Append (maxRecords.ToString (CultureInfo.InvariantCulture));  		sql.Append (" TimeUtc' ErrorId FROM ELMAH_Error ");  		sql.Append ("ORDER BY TimeUtc DESC' ErrorId DESC) ");  		sql.Append ("ORDER BY TimeUtc ASC' ErrorId ASC) AS i ");  		sql.Append ("INNER JOIN Elmah_Error AS e ON i.ErrorId = e.ErrorId ");  		sql.Append ("ORDER BY e.TimeUtc DESC' e.ErrorId DESC");  		command.CommandText = sql.ToString ();  		using (OleDbDataReader reader = command.ExecuteReader ()) {  			Debug.Assert (reader != null);  			while (reader.Read ()) {  				var id = Convert.ToString (reader ["ErrorId"]' CultureInfo.InvariantCulture);  				var error = new Error {  					ApplicationName = reader ["Application"].ToString ()'  					HostName = reader ["Host"].ToString ()'  					Type = reader ["Type"].ToString ()'  					Source = reader ["Source"].ToString ()'  					Message = reader ["Message"].ToString ()'  					User = reader ["UserName"].ToString ()'  					StatusCode = Convert.ToInt32 (reader ["StatusCode"])'  					Time = Convert.ToDateTime (reader ["TimeUtc"]).ToLocalTime ()  				};  				errorEntryList.Add (new ErrorLogEntry (this' id' error));  			}  			reader.Close ();  		}  	}  	return totalCount;  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,GetErrors,The following statement contains a magic number: if (errorEntryList != null && pageIndex * pageSize < totalCount) {  	int maxRecords = pageSize * (pageIndex + 1);  	if (maxRecords > totalCount) {  		maxRecords = totalCount;  		pageSize = totalCount - pageSize * (totalCount / pageSize);  	}  	StringBuilder sql = new StringBuilder (1000);  	sql.Append ("SELECT e.* FROM (");  	sql.Append ("SELECT TOP ");  	sql.Append (pageSize.ToString (CultureInfo.InvariantCulture));  	sql.Append (" TimeUtc' ErrorId FROM (");  	sql.Append ("SELECT TOP ");  	sql.Append (maxRecords.ToString (CultureInfo.InvariantCulture));  	sql.Append (" TimeUtc' ErrorId FROM ELMAH_Error ");  	sql.Append ("ORDER BY TimeUtc DESC' ErrorId DESC) ");  	sql.Append ("ORDER BY TimeUtc ASC' ErrorId ASC) AS i ");  	sql.Append ("INNER JOIN Elmah_Error AS e ON i.ErrorId = e.ErrorId ");  	sql.Append ("ORDER BY e.TimeUtc DESC' e.ErrorId DESC");  	command.CommandText = sql.ToString ();  	using (OleDbDataReader reader = command.ExecuteReader ()) {  		Debug.Assert (reader != null);  		while (reader.Read ()) {  			var id = Convert.ToString (reader ["ErrorId"]' CultureInfo.InvariantCulture);  			var error = new Error {  				ApplicationName = reader ["Application"].ToString ()'  				HostName = reader ["Host"].ToString ()'  				Type = reader ["Type"].ToString ()'  				Source = reader ["Source"].ToString ()'  				Message = reader ["Message"].ToString ()'  				User = reader ["UserName"].ToString ()'  				StatusCode = Convert.ToInt32 (reader ["StatusCode"])'  				Time = Convert.ToDateTime (reader ["TimeUtc"]).ToLocalTime ()  			};  			errorEntryList.Add (new ErrorLogEntry (this' id' error));  		}  		reader.Close ();  	}  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,InitializeDatabase,The following statement contains a magic number: lock (_mdbInitializationLock) {  	//  	// Just double-check that no other thread has created the database while  	// we were waiting for the lock.  	//  	if (File.Exists (dbFilePath))  		return;  	//  	// Create a temporary copy of the mkmdb.vbs script.  	// We do this in the same directory as the resulting database for security permission purposes.  	//  	string scriptPath = Path.Combine (Path.GetDirectoryName (dbFilePath)' _scriptResourceName);  	using (FileStream scriptStream = new FileStream (scriptPath' FileMode.Create' FileAccess.Write' FileShare.None)) {  		ManifestResourceHelper.WriteResourceToStream (scriptStream' _scriptResourceName);  	}  	//  	// Run the script file to create the database using batch   	// mode (//B)' which suppresses script errors and prompts   	// from displaying.  	//  	ProcessStartInfo psi = new ProcessStartInfo ("cscript"' "\"" + scriptPath + "\" \"" + dbFilePath + "\" //B //NoLogo");  	psi.UseShellExecute = false;  	// i.e. CreateProcess  	psi.CreateNoWindow = true;  	// Stay lean' stay mean  	try {  		using (Process process = Process.Start (psi)) {  			//  			// A few seconds should be plenty of time to create the database.  			//  			TimeSpan tolerance = TimeSpan.FromSeconds (2);  			if (!process.WaitForExit ((int)tolerance.TotalMilliseconds)) {  				//  				// but it wasn't' so clean up and throw an exception!  				// Realistically' I don't expect to ever get here!  				//  				process.Kill ();  				throw new Exception (string.Format ("The Microsoft Access database creation script took longer than the allocated time of {0} seconds to execute. " + "The script was terminated prematurely."' tolerance.TotalSeconds));  			}  			if (process.ExitCode != 0) {  				throw new Exception (string.Format ("The Microsoft Access database creation script failed with exit code {0}."' process.ExitCode));  			}  		}  	}  	finally {  		//  		// Clean up after ourselves!!  		//  		File.Delete (scriptPath);  	}  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,InitializeDatabase,The following statement contains a magic number: try {  	using (Process process = Process.Start (psi)) {  		//  		// A few seconds should be plenty of time to create the database.  		//  		TimeSpan tolerance = TimeSpan.FromSeconds (2);  		if (!process.WaitForExit ((int)tolerance.TotalMilliseconds)) {  			//  			// but it wasn't' so clean up and throw an exception!  			// Realistically' I don't expect to ever get here!  			//  			process.Kill ();  			throw new Exception (string.Format ("The Microsoft Access database creation script took longer than the allocated time of {0} seconds to execute. " + "The script was terminated prematurely."' tolerance.TotalSeconds));  		}  		if (process.ExitCode != 0) {  			throw new Exception (string.Format ("The Microsoft Access database creation script failed with exit code {0}."' process.ExitCode));  		}  	}  }  finally {  	//  	// Clean up after ourselves!!  	//  	File.Delete (scriptPath);  }  
Magic Number,Elmah,AccessErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\AccessErrorLog.cs,InitializeDatabase,The following statement contains a magic number: using (Process process = Process.Start (psi)) {  	//  	// A few seconds should be plenty of time to create the database.  	//  	TimeSpan tolerance = TimeSpan.FromSeconds (2);  	if (!process.WaitForExit ((int)tolerance.TotalMilliseconds)) {  		//  		// but it wasn't' so clean up and throw an exception!  		// Realistically' I don't expect to ever get here!  		//  		process.Kill ();  		throw new Exception (string.Format ("The Microsoft Access database creation script took longer than the allocated time of {0} seconds to execute. " + "The script was terminated prematurely."' tolerance.TotalSeconds));  	}  	if (process.ExitCode != 0) {  		throw new Exception (string.Format ("The Microsoft Access database creation script failed with exit code {0}."' process.ExitCode));  	}  }  
Magic Number,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,ThrottlingErrorMailModule,The following statement contains a magic number: ThrottleInterval = 50;  
Magic Number,Elmah,ThrottlingErrorMailModule,C:\repos\isitedesign_Elmah\src\Elmah\ThrottlingErrorMailModule.cs,ThrottlingErrorMailModule,The following statement contains a magic number: ThrottleMinutes = 10;  
Magic Number,Elmah,ErrorDetailPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorDetailPage.generated.cs,Execute,The following statement contains a magic number: if (collection.Data != null && collection.Data.Count > 0) {  	var items = from i in Enumerable.Range (0' collection.Data.Count)  	select new {  		Index = i'  		Key = collection.Data.GetKey (i)'  		Value = collection.Data [i]  	};  	items = items.OrderBy (e => e.Key' StringComparer.OrdinalIgnoreCase);  	#line  	#line  	WriteLiteral ("        <div id=\"");  	#line  	Write (collection.Id);  	#line  	#line  	WriteLiteral ("\">\r\n\r\n            <h2>");  	#line  	Write (collection.Title);  	#line  	#line  	WriteLiteral ("</h2>\r\n            ");  	WriteLiteral (@"              <div class=""scroll-view"">                  <table cellspacing=""0"" style=""border-collapse:collapse;"" class=""table table-condensed table-striped"">                     <tr>                         <th class=""name-col"" style=""white-space:nowrap;"">Name</th>                         <th class=""value-col"" style=""white-space:nowrap;"">Value</th>                     </tr>      ");  	#line  	foreach (var item in items) {  		#line  		#line  		WriteLiteral ("                        <tr class=\"");  		#line  		Write (item.Index % 2 == 0 ? "even" : "odd");  		#line  		#line  		WriteLiteral ("\">\r\n                            <td class=\"key-col\">");  		#line  		Write (item.Key);  		#line  		#line  		WriteLiteral ("</td>\r\n                            <td class=\"value-col\">");  		#line  		Write (item.Value);  		#line  		#line  		WriteLiteral ("</td>\r\n                        </tr>\r\n");  		#line  	}  	#line  	#line  	WriteLiteral ("\r\n                </table>\r\n            </div>\r\n        </div>\r\n");  	#line  }  
Magic Number,Elmah,ErrorDetailPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorDetailPage.generated.cs,Execute,The following statement contains a magic number: foreach (var item in items) {  	#line  	#line  	WriteLiteral ("                        <tr class=\"");  	#line  	Write (item.Index % 2 == 0 ? "even" : "odd");  	#line  	#line  	WriteLiteral ("\">\r\n                            <td class=\"key-col\">");  	#line  	Write (item.Key);  	#line  	#line  	WriteLiteral ("</td>\r\n                            <td class=\"value-col\">");  	#line  	Write (item.Value);  	#line  	#line  	WriteLiteral ("</td>\r\n                        </tr>\r\n");  	#line  }  
Magic Number,Elmah,ErrorDetailPage,C:\repos\isitedesign_Elmah\src\Elmah\ErrorDetailPage.generated.cs,Execute,The following statement contains a magic number: Write (item.Index % 2 == 0 ? "even" : "odd");  
Magic Number,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The following statement contains a magic number: return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider);  
Magic Number,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The following statement contains a magic number: return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider);  
Magic Number,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The following statement contains a magic number: return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider);  
Magic Number,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The following statement contains a magic number: return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider);  
Magic Number,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The following statement contains a magic number: return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider);  
Magic Number,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The following statement contains a magic number: return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider);  
Magic Number,Elmah,FuzzyTime,C:\repos\isitedesign_Elmah\src\Elmah\FuzzyTime.cs,FormatInEnglish,The following statement contains a magic number: return delta < 0 ? "not yet" : delta < 1 * minute ? (ts.Seconds == 1 ? "one second ago" : ts.Seconds.ToString (provider) + " seconds ago") : delta < 2 * minute ? "a minute ago" : delta < 45 * minute ? ts.Minutes.ToString (provider) + " minutes ago" : delta < 90 * minute ? "an hour ago" : delta < 24 * hour ? ts.Hours.ToString (provider) + " hours ago" : delta < 48 * hour ? "yesterday" : delta < 5 * day ? ts.Days.ToString (provider) + " days ago" : time.ToString (delta < 6 * month ? "MMM d" : "MMM yyyy"' provider);  
Magic Number,Elmah,ErrorLogPageFactory,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogPageFactory.cs,GetHandler,The following statement contains a magic number: if (handler == null)  	throw new HttpException (404' "Resource not found.");  
Magic Number,Elmah,ErrorLogPageFactory,C:\repos\isitedesign_Elmah\src\Elmah\ErrorLogPageFactory.cs,GetHandler,The following statement contains a magic number: throw new HttpException (404' "Resource not found.");  
Magic Number,Elmah,HttpStatus,C:\repos\isitedesign_Elmah\src\Elmah\HttpStatus.cs,HttpStatus,The following statement contains a magic number: Debug.Assert (code >= 100);  
Magic Number,Elmah,HttpStatus,C:\repos\isitedesign_Elmah\src\Elmah\HttpStatus.cs,HttpStatus,The following statement contains a magic number: Debug.Assert (code < 1000);  
Magic Number,Elmah,ManifestResourceHelper,C:\repos\isitedesign_Elmah\src\Elmah\ManifestResourceHelper.cs,WriteResourceToStream,The following statement contains a magic number: using (var inputStream = thisAssembly.GetManifestResourceStream (thisType' resourceName)) {  	if (inputStream == null) {  		throw new Exception (string.Format (@"Resource named {0}.{1} not found in assembly {2}."' thisType.Namespace' resourceName' thisAssembly));  	}  	var buffer = new byte[Math.Min (inputStream.Length' 4096)];  	var readLength = inputStream.Read (buffer' 0' buffer.Length);  	while (readLength > 0) {  		outputStream.Write (buffer' 0' readLength);  		readLength = inputStream.Read (buffer' 0' buffer.Length);  	}  }  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: if (cache != null) {  	Debug.Assert (cacheKey != null);  	var tuple = (object[])cache [cacheKey];  	if (tuple != null)  		return selector ((Version)tuple [0]' (Version)tuple [1]' (string)tuple [2]' (string)tuple [3]);  }  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: if (cache != null) {  	Debug.Assert (cacheKey != null);  	var tuple = (object[])cache [cacheKey];  	if (tuple != null)  		return selector ((Version)tuple [0]' (Version)tuple [1]' (string)tuple [2]' (string)tuple [3]);  }  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: if (tuple != null)  	return selector ((Version)tuple [0]' (Version)tuple [1]' (string)tuple [2]' (string)tuple [3]);  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: if (tuple != null)  	return selector ((Version)tuple [0]' (Version)tuple [1]' (string)tuple [2]' (string)tuple [3]);  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: return selector ((Version)tuple [0]' (Version)tuple [1]' (string)tuple [2]' (string)tuple [3]);  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: return selector ((Version)tuple [0]' (Version)tuple [1]' (string)tuple [2]' (string)tuple [3]);  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: if (cache != null) {  	cache.Add (cacheKey' new object[] {  		version'  		fileVersion'  		product'  		copyright'  	}' /* absoluteExpiration */null' Cache.NoAbsoluteExpiration' TimeSpan.FromMinutes (2)' CacheItemPriority.Normal' null);  }  
Magic Number,Elmah,PoweredBy,C:\repos\isitedesign_Elmah\src\Elmah\PoweredBy.cs,GetAbout,The following statement contains a magic number: cache.Add (cacheKey' new object[] {  	version'  	fileVersion'  	product'  	copyright'  }' /* absoluteExpiration */null' Cache.NoAbsoluteExpiration' TimeSpan.FromMinutes (2)' CacheItemPriority.Normal' null);  
Magic Number,Elmah,SqlErrorLog,C:\repos\isitedesign_Elmah\src\Elmah\SqlErrorLog.cs,ReadSingleXmlStringResult,The following statement contains a magic number: using (reader) {  	if (!reader.Read ())  		return null;  	//  	// See following MS KB article why the XML string is read   	// and reconstructed in chunks:  	//  	// The XML data row is truncated at 2'033 characters when you use the SqlDataReader object  	// http://support.microsoft.com/kb/310378  	//   	// When you read XML data from Microsoft SQL Server by using   	// the SqlDataReader object' the XML in the first column of   	// the first row is truncated at 2'033 characters. You   	// expect all of the contents of the XML data to be   	// contained in a single row and column. This behavior   	// occurs because' for XML results greater than 2'033   	// characters in length' SQL Server returns the XML in   	// multiple rows of 2'033 characters each.   	//  	// See also comment 18 in issue 129:  	// http://code.google.com/p/elmah/issues/detail?id=129#c18  	//  	StringBuilder sb = new StringBuilder (/* capacity */2033);  	do {  		sb.Append (reader.GetString (0));  	}  	while (reader.Read ());  	return sb.ToString ();  }  
Magic Number,Elmah.Assertions,JScriptAssertion,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\JScriptAssertion.cs,AddDirectiveParameter,The following statement contains a magic number: if (list == null) {  	list = new List<string> (/* capacity */(inits != null ? inits.Length : 0) + 4);  	if (inits != null)  		list.AddRange (inits);  }  
Magic Number,Elmah.Assertions,JScriptAssertion,C:\repos\isitedesign_Elmah\src\Elmah\Assertions\JScriptAssertion.cs,AddDirectiveParameter,The following statement contains a magic number: list = new List<string> (/* capacity */(inits != null ? inits.Length : 0) + 4);  
