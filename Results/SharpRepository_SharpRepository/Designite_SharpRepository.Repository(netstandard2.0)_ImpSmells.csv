Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,RecurseExpressionTree,Cyclomatic complexity of the method is 18
Complex Method,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,Cyclomatic complexity of the method is 18
Complex Method,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,Cyclomatic complexity of the method is 18
Complex Method,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,Cyclomatic complexity of the method is 18
Long Parameter List,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyBase.cs,TryGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyBase.cs,SaveGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository.Caching,ICompoundKeyCachingStrategy,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\ICompoundKeyCachingStrategy.cs,TryGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository.Caching,ICompoundKeyCachingStrategy,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\ICompoundKeyCachingStrategy.cs,SaveGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository.Caching,NoCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\NoCompoundKeyCachingStrategyBase.cs,TryGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository.Caching,NoCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\NoCompoundKeyCachingStrategyBase.cs,SaveGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,TryGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,SaveGetResult,The method has 5 parameters. Parameters: key' key2' key3' selector' result
Long Parameter List,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,TryGet,The method has 5 parameters. Parameters: key' key2' key3' selector' entity
Long Parameter List,SharpRepository.Repository,ConfigurationBasedCompoundKeyRepository<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\ConfigurationBasedCompoundKeyRepository.cs,TryGet,The method has 5 parameters. Parameters: key' key2' key3' selector' entity
Long Parameter List,SharpRepository.Repository,ICompoundKeyRepository,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\ICompoundKeyRepository.cs,TryGet,The method has 5 parameters. Parameters: key' key2' key3' selector' entity
Long Parameter List,SharpRepository.Repository,RepositoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\RepositoryFactory.cs,GetInstance,The method has 5 parameters. Parameters: entityType' keyType' key2Type' configuration' repositoryName
Long Parameter List,SharpRepository.Repository,RepositoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\RepositoryFactory.cs,GetInstance,The method has 5 parameters. Parameters: entityType' keyType' key2Type' key3Type' repositoryName
Long Parameter List,SharpRepository.Repository,RepositoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\RepositoryFactory.cs,GetInstance,The method has 6 parameters. Parameters: entityType' keyType' key2Type' key3Type' configuration' repositoryName
Long Parameter List,SharpRepository.Repository.Configuration,SharpRepositoryConfiguration,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Configuration\SharpRepositoryConfiguration.cs,AddRepository,The method has 5 parameters. Parameters: name' factory' cachingStrategy' cachingProvider' attributes
Long Parameter List,SharpRepository.Repository.Queries,CompoundKeyQueryManager<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Queries\CompoundKeyQueryManager.cs,ExecuteGet,The method has 5 parameters. Parameters: query' selector' key' key2' key3
Long Statement,SharpRepository.Repository.Caching,Cache,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\Cache.cs,ClearAll,The length of the statement  "                throw new Exception("You must configure the Cache.CachePrefixManager in order to handle clearing the global cache.  You can use the SingleServerCachePrefixManager if you are on a single server' and the MultiServerCachePrefixManager if you are in the cloud or on multiple servers and use a caching provider like Memcached or Redis."); " is 333.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryGetResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryGetResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryGetAllResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryFindAllResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryFindResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryCountResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryLongCountResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryGroupResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TrySumResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryAverageResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryMinResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,TryMaxResult,The length of the statement  "                // don't let an error trying to find results stop everything' it should continue and then just go get the results from the DB itself " is 132.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SetCachedQueryOptions,The length of the statement  "            //  originally was thinking doing a ref arg for queryOptions and setting it via cache but ran into an issue in QueryManager using a ref in a lamda expression " is 157.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SetCachedQueryOptions,The length of the statement  "            // this was a PagingOptions query but the value wasn't in cache' so return false which will make the entire query be ran again so the results and TotalItems will get cached " is 172.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,GetCachingPrefixCounterKey,The length of the statement  "            // Note: it's important to use CachePrefix instead of FullCachePrefix otherwise it is tied to itself and won't be able to find it once the counter is incremented " is 161.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,GetWriteThroughCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' key' Md5Helper.CalculateMd5("Get::" + (selector != null ? selector.ToString() : "null"))); " is 161.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}"' FullCachePrefix' TypeFullName' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 219.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 242.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 239.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,CountCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "Count"' Md5Helper.CalculateMd5(criteria == null ? "null" : criteria.ToString())); " is 153.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,LongCountCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "LongCount"' Md5Helper.CalculateMd5(criteria == null ? "null" : criteria.ToString())); " is 157.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,GroupCountsCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "GroupCounts"' Md5Helper.CalculateMd5((criteria == null ? "null" : criteria.ToString()) + "::" + keySelector + "::" + typeof(TGroupKey).FullName)); " is 218.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,GroupLongCountsCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "GroupLongCounts"' Md5Helper.CalculateMd5((criteria == null ? "null" : criteria.ToString()) + "::" + keySelector + "::" + typeof(TGroupKey).FullName)); " is 222.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,GroupCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "Group"' Md5Helper.CalculateMd5((criteria == null ? "null" : criteria.ToString()) + "::" + keySelector + "::" + typeof(TGroupKey).FullName + "::" + resultSelector + "::" + typeof(TResult).FullName)); " is 270.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SumCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "Sum"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 164.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,AverageCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "Average"' Md5Helper.CalculateMd5(typeof(TSelector).FullName + "::" + selector + "::" + criteria)); " is 170.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,MinCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "Min"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 164.
Long Statement,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,MaxCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' "Max"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 164.
Long Statement,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,SetCachedQueryOptions,The length of the statement  "            //  originally was thinking doing a ref arg for queryOptions and setting it via cache but ran into an issue in QueryManager using a ref in a lamda expression " is 157.
Long Statement,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,SetCachedQueryOptions,The length of the statement  "            // this was a PagingOptions query but the value wasn't in cache' so return false which will make the entire query be ran again so the results and TotalItems will get cached " is 172.
Long Statement,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,GetCachingPrefixCounterKey,The length of the statement  "            // Note: it's important to use CachePrefix instead of FullCachePrefix otherwise it is tied to itself and won't be able to find it once the counter is incremented " is 161.
Long Statement,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,GetWriteThroughCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}::{3}"' CachePrefix' TypeFullName' String.Join("/"' keys)' (selector != null ? selector.ToString() : "null")); " is 143.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,CheckPartitionUpdate,The length of the statement  "            //  this should batch up the calls to IncrementPartitionGeneration and only call once if there are 3 of the same partition values in the same batch " is 147.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,TryPartitionValue,The length of the statement  "            var propInfo = type.GetTypeInfo().DeclaredProperties.FirstOrDefault(p => p.Name == partitionName && p.PropertyType == typeof(TPartition)); " is 138.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                if (methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)) " is 214.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                    //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId) " is 127.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' FullCachePrefix' TypeFullName' GetGeneration()' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 240.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 298.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 263.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,FindCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 295.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 260.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,CountCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Count"' Md5Helper.CalculateMd5(criteria == null ? "null" : criteria.ToString())); " is 209.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,CountCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "Count"' Md5Helper.CalculateMd5(criteria == null ? "null" : criteria.ToString())); " is 174.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,LongCountCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "LongCount"' Md5Helper.CalculateMd5(criteria == null ? "null" : criteria.ToString())); " is 213.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,LongCountCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "LongCount"' Md5Helper.CalculateMd5(criteria == null ? "null" : criteria.ToString())); " is 178.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,GroupCountsCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "GroupCounts"' Md5Helper.CalculateMd5((criteria == null ? "null" : criteria.ToString()) + "::" + keySelector + "::" + typeof(TGroupKey).FullName)); " is 275.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,GroupCountsCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "GroupCounts"' Md5Helper.CalculateMd5((criteria == null ? "null" : criteria.ToString()) + "::" + keySelector + "::" + typeof(TGroupKey).FullName)); " is 239.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,GroupCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Group"' Md5Helper.CalculateMd5((criteria == null ? "null" : criteria.ToString()) + "::" + keySelector + "::" + typeof(TGroupKey).FullName + "::" + resultSelector + "::" + typeof(TResult).FullName)); " is 327.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,GroupCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "Group"' Md5Helper.CalculateMd5((criteria == null ? "null" : criteria.ToString()) + "::" + keySelector + "::" + typeof(TGroupKey).FullName + "::" + resultSelector + "::" + typeof(TResult).FullName)); " is 291.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,SumCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Sum"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 221.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,SumCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "Sum"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 185.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,AverageCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Average"' Md5Helper.CalculateMd5(typeof(TSelector).FullName + "::" + selector + "::" + criteria)); " is 227.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,AverageCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "Average"' Md5Helper.CalculateMd5(typeof(TSelector).FullName + "::" + selector + "::" + criteria)); " is 191.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,MinCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Min"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 221.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,MinCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "Min"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 185.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,MaxCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}}"' FullCachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Max"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 221.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,MaxCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' FullCachePrefix' TypeFullName' GetGeneration()' "Max"' Md5Helper.CalculateMd5(typeof(TResult).FullName + "::" + selector + "::" + criteria)); " is 185.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,IncrementGeneration,The length of the statement  "            return !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetGenerationKey()' 1' 1' CacheItemPriority.NeverRemove); " is 124.
Long Statement,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,IncrementPartitionGeneration,The length of the statement  "            return !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetPartitionGenerationKey(partition)' 1' 1' CacheItemPriority.NeverRemove); " is 142.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,CheckPartitionUpdate,The length of the statement  "            //  this should batch up the calls to IncrementPartitionGeneration and only call once if there are 3 of the same partition values in the same batch " is 147.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,TryPartitionValue,The length of the statement  "            var propInfo = type.GetRuntimeProperties().Where(p => p.Name == partitionName && p.PropertyType == typeof(TPartition)).FirstOrDefault(); " is 136.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                if (methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)) " is 214.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                    //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId) " is 127.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' GetGeneration()' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 236.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' CachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 294.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' CachePrefix' TypeFullName' GetGeneration()' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 259.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' CachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 291.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' CachePrefix' TypeFullName' GetGeneration()' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 256.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,IncrementGeneration,The length of the statement  "            var generation = !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetGenerationKey()' 1' 1' CacheItemPriority.NeverRemove); " is 134.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,IncrementPartitionGeneration,The length of the statement  "            return !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetPartitionGenerationKey(partition)' 1' 1' CacheItemPriority.NeverRemove); " is 142.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,CheckPartitionUpdate,The length of the statement  "            //  this should batch up the calls to IncrementPartitionGeneration and only call once if there are 3 of the same partition values in the same batch " is 147.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,TryPartitionValue,The length of the statement  "            var propInfo = type.GetRuntimeProperties().Where(p => p.Name == partitionName && p.PropertyType == typeof(TPartition)).FirstOrDefault(); " is 136.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                if (methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)) " is 214.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                    //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId) " is 127.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' GetGeneration()' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 236.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' CachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 294.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' CachePrefix' TypeFullName' GetGeneration()' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 259.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' CachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 291.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' CachePrefix' TypeFullName' GetGeneration()' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 256.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,IncrementGeneration,The length of the statement  "            var generation = !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetGenerationKey()' 1' 1' CacheItemPriority.NeverRemove); " is 134.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,IncrementPartitionGeneration,The length of the statement  "            return !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetPartitionGenerationKey(partition)' 1' 1' CacheItemPriority.NeverRemove); " is 142.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,CheckPartitionUpdate,The length of the statement  "            //  this should batch up the calls to IncrementPartitionGeneration and only call once if there are 3 of the same partition values in the same batch " is 147.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,TryPartitionValue,The length of the statement  "            var propInfo = type.GetRuntimeProperties().Where(p => p.Name == partitionName && p.PropertyType == typeof(TPartition)).FirstOrDefault();  " is 136.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                if (methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)) " is 214.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The length of the statement  "                    //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId) " is 127.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' GetGeneration()' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 236.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' CachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 294.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' CachePrefix' TypeFullName' GetGeneration()' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 259.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "                return String.Format("{0}/{1}/p:{2}/{3}/{4}/{5}"' CachePrefix' TypeFullName' partition' GetPartitionGeneration(partition)' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 291.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}/{4}"' CachePrefix' TypeFullName' GetGeneration()' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 256.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,IncrementGeneration,The length of the statement  "            var generation = !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetGenerationKey()' 1' 1' CacheItemPriority.NeverRemove); " is 134.
Long Statement,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,IncrementPartitionGeneration,The length of the statement  "            return !GenerationalCachingEnabled ? 1 : CachingProvider.Increment(GetPartitionGenerationKey(partition)' 1' 1' CacheItemPriority.NeverRemove); " is 142.
Long Statement,SharpRepository.Repository.Caching,TimeoutCachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCachingStrategyBase.cs,SetCache,The length of the statement  "                    CachingProvider.Set(cacheKey + "=>pagingTotal"' ((IPagingOptions)queryOptions).TotalItems' CacheItemPriority.Normal' TimeoutInSeconds); " is 135.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,SetCache,The length of the statement  "                    CachingProvider.Set(cacheKey + "=>pagingTotal"' ((PagingOptions<T>)queryOptions).TotalItems' CacheItemPriority.Normal' TimeoutInSeconds); " is 137.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}"' CachePrefix' TypeFullName' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 215.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 238.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 235.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,SetCache,The length of the statement  "                    CachingProvider.Set(cacheKey + "=>pagingTotal"' ((PagingOptions<T>)queryOptions).TotalItems' CacheItemPriority.Normal' TimeoutInSeconds); " is 137.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}"' CachePrefix' TypeFullName' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 215.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 238.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 235.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,SetCache,The length of the statement  "                    CachingProvider.Set(cacheKey + "=>pagingTotal"' ((PagingOptions<T>)queryOptions).TotalItems' CacheItemPriority.Normal' TimeoutInSeconds); " is 137.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,GetAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}"' CachePrefix' TypeFullName' Md5Helper.CalculateMd5("All::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 215.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,FindAllCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' "FindAll"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 238.
Long Statement,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,FindCacheKey,The length of the statement  "            return String.Format("{0}/{1}/{2}/{3}"' CachePrefix' TypeFullName' "Find"' Md5Helper.CalculateMd5(criteria + "::" + (queryOptions != null ? queryOptions.ToString() : "null") + "::" + (selector != null ? selector.ToString() : "null"))); " is 235.
Long Statement,SharpRepository.Repository.Caching,TimeoutConfigCachingStrategyFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutConfigCachingStrategyFactory.cs,GetInstance,The length of the statement  "                throw new ConfigurationErrorsException("The timeout attribute is required in order to use the TimeoutCachingStrategy via the configuration file."); " is 147.
Long Statement,SharpRepository.Repository.Caching,TimeoutConfigCachingStrategyFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutConfigCachingStrategyFactory.cs,GetInstance,The length of the statement  "                throw new ConfigurationErrorsException("The timeout attribute is required in order to use the TimeoutCachingStrategy via the configuration file."); " is 147.
Long Statement,SharpRepository.Repository.Caching,TimeoutConfigCachingStrategyFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutConfigCachingStrategyFactory.cs,GetInstance,The length of the statement  "                throw new ConfigurationErrorsException("The timeout attribute is required in order to use the TimeoutCachingStrategy via the configuration file."); " is 147.
Long Statement,SharpRepository.Repository.Caching,TimeoutConfigCachingStrategyFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutConfigCachingStrategyFactory.cs,GetCompoundKeyInstance,The length of the statement  "                throw new ConfigurationErrorsException("The timeout attribute is required in order to use the TimeoutCachingStrategy via the configuration file."); " is 147.
Long Statement,SharpRepository.Repository,CompoundKeyRepositoryBaseCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBaseCommon.cs,GetPrimaryKeyPropertyInfo,The length of the statement  "            return properties.Where(x => x.HasAttribute<RepositoryPrimaryKeyAttribute>()).OrderBy(x => x.GetOneAttribute<RepositoryPrimaryKeyAttribute>().Order).ToArray(); " is 159.
Long Statement,SharpRepository.Repository,DefaultRepositoryConventions,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\DefaultRepositoryConventions.cs,GetPropertyCaseInsensitive,The length of the statement  "            return type.GetRuntimeProperties().Where(pi => pi.Name.ToLowerInvariant() == propertyName.ToLowerInvariant()).FirstOrDefault(); " is 127.
Long Statement,SharpRepository.Repository,RepositoryBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\DisabledCache.cs,ValidateArgument,The length of the statement  "                throw new ArgumentException(string.Format("Only aspects derived from a type {0} are valid arguments"' baseAttribute.Name)); " is 123.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "            // if they are the same type then they will use the native IQueryable and take advantage of the back-end side join if possible " is 126.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "                return new CompositeRepository<TResult>(outerQuery.Join(innerQuery' outerKeySelector' innerKeySelector' resultSelector)); " is 121.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "            return new CompositeRepository<TResult>(outerQuery.Join(innerQuery' outerKeySelector' innerKeySelector' resultSelector)); " is 121.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "            // if they are the same type then they will use the native IQueryable and take advantage of the back-end side join if possible " is 126.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "                return new CompositeRepository<TResult>(outerQuery.Join(innerQuery' outerKeySelector' innerKeySelector' resultSelector)); " is 121.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "            return new CompositeRepository<TResult>(outerQuery.Join(innerQuery' outerKeySelector' innerKeySelector' resultSelector)); " is 121.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "            // if they are the same type then they will use the native IQueryable and take advantage of the back-end side join if possible " is 126.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "                return new CompositeRepository<TResult>(outerQuery.Join(innerQuery' outerKeySelector' innerKeySelector' resultSelector)); " is 121.
Long Statement,SharpRepository.Repository,LinqCompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqCompoundKeyRepositoryBase.cs,Join,The length of the statement  "            return new CompositeRepository<TResult>(outerQuery.Join(innerQuery' outerKeySelector' innerKeySelector' resultSelector)); " is 121.
Long Statement,SharpRepository.Repository,LinqRepositoryBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\LinqRepositoryBase.cs,Join,The length of the statement  "            // if they are the same type then they will use the native IQueryable and take advantage of the back-end side join if possible " is 126.
Long Statement,SharpRepository.Repository,RepositoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\RepositoryFactory.cs,GetInstance,The length of the statement  "            var method = typeof(ISharpRepositoryConfiguration).GetTypeInfo().DeclaredMethods.First(m => m.Name == "GetInstance" && m.ReturnType.Name == "ICompoundKeyRepository`4"); " is 168.
Long Statement,SharpRepository.Repository,RepositoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\RepositoryFactory.cs,GetCompoundKeyInstance,The length of the statement  "            var method = typeof(ISharpRepositoryConfiguration).GetTypeInfo().DeclaredMethods.First(m => m.Name == "GetCompoundKeyInstance"); " is 128.
Long Statement,SharpRepository.Repository.Configuration,ConfigurationHelper,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Configuration\ConfigurationHelper.cs,CheckForInterface,The length of the statement  "                throw new Exception("The type " + type.AssemblyQualifiedName + " must implement " + interfaceType.AssemblyQualifiedName); " is 121.
Long Statement,SharpRepository.Repository.Queries,QueryManager<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Queries\QueryManager.Aggregates.cs,ExecuteGroup,The length of the statement  "            if (CacheEnabled && _cachingStrategy.TryGroupResult(keySelector' resultSelector' criteria' out IEnumerable<TResult> result)) " is 124.
Long Statement,SharpRepository.Repository.Queries,QueryManager<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Queries\QueryManager.Aggregates.cs,ExecuteFindAll,The length of the statement  "            if (CacheEnabled && _cachingStrategy.TryFindAllResult(criteria' queryOptions' selector' out IEnumerable<TResult> result)) " is 121.
Long Statement,SharpRepository.Repository.Queries,SortingOptions<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Queries\SortingOptions.cs,Apply,The length of the statement  "            // TODO: do we need to deal with the case where the user passes in "Name desc"' should we strip the desc out' or let it override the isDescending param' or not deal with it and blame it on the user? " is 198.
Complex Conditional,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,RecurseExpressionTree,The conditional expression  "methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)"  is complex.
Complex Conditional,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The conditional expression  "methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)"  is complex.
Complex Conditional,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The conditional expression  "methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)"  is complex.
Complex Conditional,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The conditional expression  "methodCallExpression.NodeType != ExpressionType.Call || methodCallExpression.Method.Name != "Equals" || methodCallExpression.Arguments.Count != 1 || methodCallExpression.Arguments[0].Type != typeof(TPartition)"  is complex.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveGetResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveGetResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveGetAllResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveFindAllResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveFindResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveCountResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveLongCountResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveGroupResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveSumResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveAverageResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveMinResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SaveMaxResult,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,IsInCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,IsPagingTotalInCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,ClearCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CachingStrategyBase.cs,SetCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,IsInCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,IsPagingTotalInCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,ClearCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,CompoundKeyCachingStrategyCommon<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\CompoundKeyCachingStrategyCommon.cs,SetCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,TimeoutCachingStrategyBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCachingStrategyBase.cs,SetCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,SetCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,SetCache,The method has an empty catch block.
Empty Catch Block,SharpRepository.Repository.Caching,TimeoutCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\TimeoutCompoundKeyCachingStrategyBase.cs,SetCache,The method has an empty catch block.
Magic Number,SharpRepository.Repository.Aspects,RepositoryActionBaseAttribute,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Aspects\RepositoryActionBaseAttribute.cs,RepositoryActionBaseAttribute,The following statement contains a magic number: Order = 9999;
Magic Number,SharpRepository.Repository.Caching.Hash,Utility,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\Hash\Utility.cs,ToMd5Fingerprint,The following statement contains a magic number: return hash.Aggregate(new StringBuilder(32)'                      (sb' b) => sb.Append(b.ToString("X2")))                      .ToString();
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,GetPrimaryKey,The following statement contains a magic number: propInfo == null || propInfo.Length != 2
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,SetPrimaryKey,The following statement contains a magic number: propInfo == null || propInfo.Length != 2
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,ByPrimaryKeySpecification,The following statement contains a magic number: propInfo == null || propInfo.Length != 2
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,GetPrimaryKey,The following statement contains a magic number: propInfo == null || propInfo.Length != 3
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,GetPrimaryKey,The following statement contains a magic number: key3 = (TKey3) propInfo[2].GetValue(entity' null);
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,SetPrimaryKey,The following statement contains a magic number: propInfo == null || propInfo.Length != 3
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,SetPrimaryKey,The following statement contains a magic number: propInfo[2].SetValue(entity' key3' null);
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,ByPrimaryKeySpecification,The following statement contains a magic number: propInfo == null || propInfo.Length != 3
Magic Number,SharpRepository.Repository,CompoundKeyRepositoryBase<T;TKey;TKey2;TKey3>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,ByPrimaryKeySpecification,The following statement contains a magic number: var lambda3 = Expression.Lambda<Func<T' bool>>(                      Expression.Equal(                          Expression.PropertyOrField(parameter' propInfo[2].Name)'                          Expression.Constant(key3)                      )'                      parameter                  );
Missing Default,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Object.NodeType)                  {                      //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId)                      case ExpressionType.MemberAccess:                          switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }                            break;                      //  1.Equals(c.ContactTypeId)                      case ExpressionType.Constant:                          memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                          if (memberExpression == null || memberExpression.Member.Name != memberName)                              return;                            var constantExpression = (ConstantExpression)methodCallExpression.Object;                          if (constantExpression == null || constantExpression.Type != typeof(TPartition))                              return;                            matches.Add((TPartition)constantExpression.Value);                            break;                  }
Missing Default,SharpRepository.Repository.Caching,StandardCachingStrategyBase<T;TKey;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }
Missing Default,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Object.NodeType)                  {                      //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId)                      case ExpressionType.MemberAccess:                          switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }                            break;                      //  1.Equals(c.ContactTypeId)                      case ExpressionType.Constant:                          memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                          if (memberExpression == null || memberExpression.Member.Name != memberName)                              return;                            var constantExpression = (ConstantExpression)methodCallExpression.Object;                          if (constantExpression == null || constantExpression.Type != typeof(TPartition))                              return;                            matches.Add((TPartition)constantExpression.Value);                            break;                  }
Missing Default,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }
Missing Default,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Object.NodeType)                  {                      //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId)                      case ExpressionType.MemberAccess:                          switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }                            break;                      //  1.Equals(c.ContactTypeId)                      case ExpressionType.Constant:                          memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                          if (memberExpression == null || memberExpression.Member.Name != memberName)                              return;                            var constantExpression = (ConstantExpression)methodCallExpression.Object;                          if (constantExpression == null || constantExpression.Type != typeof(TPartition))                              return;                            matches.Add((TPartition)constantExpression.Value);                            break;                  }
Missing Default,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }
Missing Default,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Object.NodeType)                  {                      //  c.ContactTypeId.Equals(1) ... or ... c.ContactTypeId.Equals(contactTypeId) ... or ... contactTypeId.Equals(c.ContactTypeId)                      case ExpressionType.MemberAccess:                          switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }                            break;                      //  1.Equals(c.ContactTypeId)                      case ExpressionType.Constant:                          memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                          if (memberExpression == null || memberExpression.Member.Name != memberName)                              return;                            var constantExpression = (ConstantExpression)methodCallExpression.Object;                          if (constantExpression == null || constantExpression.Type != typeof(TPartition))                              return;                            matches.Add((TPartition)constantExpression.Value);                            break;                  }
Missing Default,SharpRepository.Repository.Caching,StandardCompoundKeyCachingStrategyBase<T;TKey;TKey2;TKey3;TPartition>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\Caching\StandardCompoundKeyCachingStrategyBase.cs,RecurseExpressionTree,The following switch statement is missing a default case: switch (methodCallExpression.Arguments[0].NodeType)                          {                              case ExpressionType.Constant:                                  matches.Add((TPartition)((ConstantExpression)methodCallExpression.Arguments[0]).Value);                                    break;                              case ExpressionType.MemberAccess:                                  // the argument can either be a variable or the Entity.Property' so let's figure out which                                  memberExpression = methodCallExpression.Arguments[0] as MemberExpression;                                  if (memberExpression == null)                                      return;                                    if (memberExpression.Member.Name == memberName)                                  {                                      // this means the argument is the Entity.Property                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Object).Compile()());                                  }                                  else if (((MemberExpression)methodCallExpression.Object).Member.Name == memberName)                                  {                                      matches.Add(Expression.Lambda<Func<TPartition>>(methodCallExpression.Arguments[0]).Compile()());                                  }                                    break;                          }
Missing Default,SharpRepository.Repository,Batch,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,Commit,The following switch statement is missing a default case: switch (batchItem.Action)                      {                          case BatchAction.Add:                              _repository.Add(batchItem.Item);                              break;                            case BatchAction.Update:                              _repository.Update(batchItem.Item);                              break;                            case BatchAction.Delete:                              _repository.Delete(batchItem.Item);                              break;                      }
Missing Default,SharpRepository.Repository,Batch,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,Commit,The following switch statement is missing a default case: switch (batchItem.Action)                      {                          case BatchAction.Add:                              _repository.Add(batchItem.Item);                              break;                            case BatchAction.Update:                              _repository.Update(batchItem.Item);                              break;                            case BatchAction.Delete:                              _repository.Delete(batchItem.Item);                              break;                      }
Missing Default,SharpRepository.Repository,Batch,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,Commit,The following switch statement is missing a default case: switch (batchItem.Action)                      {                          case BatchAction.Add:                              _repository.Add(batchItem.Item);                              break;                            case BatchAction.Update:                              _repository.Update(batchItem.Item);                              break;                            case BatchAction.Delete:                              _repository.Delete(batchItem.Item);                              break;                      }
Missing Default,SharpRepository.Repository,Batch,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,Commit,The following switch statement is missing a default case: switch (batchItem.Action)                      {                          case BatchAction.Add:                              _repository.Add(batchItem.Item);                              break;                            case BatchAction.Update:                              _repository.Update(batchItem.Item);  							break;                            case BatchAction.Delete:                              _repository.Delete(batchItem.Item);                              break;                      }
Missing Default,SharpRepository.Repository,Batch,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Repository\CompoundKeyRepositoryBase.Batch.cs,Commit,The following switch statement is missing a default case: switch (batchItem.Action)  		            {  						case BatchAction.Add:  							_repository.NotifyQueryManagerOfAddedEntity(batchItem.Item);  							break;    						case BatchAction.Update:  							_repository.NotifyQueryManagerOfUpdatedEntity(batchItem.Item);  							break;    						case BatchAction.Delete:  							_repository.NotifyQueryManagerOfDeletedEntity(batchItem.Item);  							break;  		            }
