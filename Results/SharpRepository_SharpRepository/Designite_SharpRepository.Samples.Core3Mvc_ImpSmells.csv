Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SharpRepository.Samples.Core3Mvc.CustomRepositories,EmailRepository,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Samples.Core3Mvc\CustomRepositories\EmailRepository.cs,GetMails,The length of the statement  "            return this.AsQueryable().Where(c => c.Emails != null & c.Emails.Any()).SelectMany(c => c.Emails).Select(m => m.EmailAddress) " is 125.
Long Statement,SharpRepository.Samples.Core3Mvc,Startup,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Samples.Core3Mvc\Startup.cs,ConfigureServices,The length of the statement  "            services.AddDbContext<ContactContext>(options => options.UseSqlServer(Configuration.GetConnectionString("DefaultConnection"))' ServiceLifetime.Transient); " is 154.
Long Statement,SharpRepository.Samples.Core3Mvc,Startup,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Samples.Core3Mvc\Startup.cs,ConfigureServices,The length of the statement  "            // services.AddTransient<DbContext' ContactContext>(); // needed if you don't write dbContextClass on json configuration " is 120.
Long Statement,SharpRepository.Samples.Core3Mvc,Startup,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Samples.Core3Mvc\Startup.cs,ConfigureServices,The length of the statement  "            services.AddTransient<EmailRepository>(r => new EmailRepository(RepositoryFactory.BuildSharpRepositoryConfiguation(Configuration.GetSection("sharpRepository"))' "efCore")); " is 172.
