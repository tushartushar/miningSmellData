Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The length of the statement  "            var viewModels = repo.FindAll(x => x.OrderId < 5' x => new OrderViewModel() { Name = x.Name' IsExpensiveOrder = x.Total > 100.0 }).ToList(); " is 140.
Long Statement,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Sorting,The length of the statement  "            var descendingNames = repo.GetAll(x => x.Name' new SortingOptions<Order' DateTime>(x => x.OrderDate' isDescending: true)); " is 122.
Long Statement,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Sorting,The length of the statement  "            //  you can see that you don't need the second generic type (the property type to sort on)' just the name of the property " is 121.
Long Statement,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Sorting,The length of the statement  "            var ordersWithinAWeek = repo.FindAll(x => x.OrderDate > minDate' new SortingOptions<Order' double>(x => x.Total' true)); " is 120.
Magic Number,SharpRepository.Samples,HowToBatch,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToBatch.cs,Add_Operations_Can_Be_Batched,The following statement contains a magic number: repo.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToBatch,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToBatch.cs,Update_Operations_Can_Be_Batched,The following statement contains a magic number: repo.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToBatch,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToBatch.cs,Update_Operations_Can_Be_Batched,The following statement contains a magic number: using (var batch = repo.BeginBatch())              {                  foreach (var order in repo.GetAll())                  {                      order.Name = "Updated";                      batch.Update(order);                  }                                    repo.GetAll().Count().ShouldBe(2);                  repo.GetAll().Count(x => x.Name.StartsWith("Update")).ShouldBe(0);                    batch.Commit();              }
Magic Number,SharpRepository.Samples,HowToBatch,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToBatch.cs,Update_Operations_Can_Be_Batched,The following statement contains a magic number: repo.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToBatch,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToBatch.cs,Update_Operations_Can_Be_Batched,The following statement contains a magic number: repo.GetAll().Count(x => x.Name.StartsWith("Update")).ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToBatch,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToBatch.cs,Delete_Operations_Can_Be_Batched,The following statement contains a magic number: repo.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToBatch,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToBatch.cs,Delete_Operations_Can_Be_Batched,The following statement contains a magic number: using (var batch = repo.BeginBatch())              {                  foreach (var order in repo.GetAll().ToList())                  {                      batch.Delete(order);                  }                    repo.GetAll().Count().ShouldBe(2);                  batch.Commit();              }
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 1"'                               Total = 120.00'                               OrderDate = new DateTime(2013' 4' 26)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 1"'                               Total = 120.00'                               OrderDate = new DateTime(2013' 4' 26)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 1"'                               Total = 120.00'                               OrderDate = new DateTime(2013' 4' 26)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 1"'                               Total = 120.00'                               OrderDate = new DateTime(2013' 4' 26)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 2"'                               Total = 80.00'                               OrderDate = new DateTime(2013' 4' 24)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 2"'                               Total = 80.00'                               OrderDate = new DateTime(2013' 4' 24)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 2"'                               Total = 80.00'                               OrderDate = new DateTime(2013' 4' 24)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: repo.Add(new Order()                           {                               Name = "Order 2"'                               Total = 80.00'                               OrderDate = new DateTime(2013' 4' 24)                           });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: var anonymousType = repo.Get(1' x => new { Name = x.Name' IsExpensiveOrder = x.Total > 100.0 });
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: var viewModel = repo.Get(1' x => new OrderViewModel() {Name = x.Name' IsExpensiveOrder = x.Total > 100.0});
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: orderName = repo.Find(x => x.OrderId == 2' x => x.Name);
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: var anonymousTypes = repo.GetAll(x => new { Name = x.Name' IsExpensiveOrder = x.Total > 100.0 }).ToList();
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: anonymousTypes.Count.ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: var viewModels = repo.FindAll(x => x.OrderId < 5' x => new OrderViewModel() { Name = x.Name' IsExpensiveOrder = x.Total > 100.0 }).ToList();
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: var viewModels = repo.FindAll(x => x.OrderId < 5' x => new OrderViewModel() { Name = x.Name' IsExpensiveOrder = x.Total > 100.0 }).ToList();
Magic Number,SharpRepository.Samples,HowToUseGetSelectors,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseGetSelectors.cs,Repository_Supports_Selectors,The following statement contains a magic number: viewModels.Count.ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Sorting,The following statement contains a magic number: ascendingOrders.First().OrderId.ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Sorting,The following statement contains a magic number: ascendingOrders.First().OrderId.ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Sorting,The following statement contains a magic number: var minDate = DateTime.Now.AddDays(-7);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Sorting,The following statement contains a magic number: ordersWithinAWeek.Count().ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Pagination,The following statement contains a magic number: var pagingOptions = new PagingOptions<Order' DateTime>(1' 2' x => x.OrderDate' isDescending: true);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Pagination,The following statement contains a magic number: pageOneOrders.Count.ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Pagination,The following statement contains a magic number: pagingOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Pagination,The following statement contains a magic number: pagingOptions.PageNumber = 2;
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Pagination,The following statement contains a magic number: pageTwoOrders.First().OrderId.ShouldBe(2);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,Repository_Handles_Pagination,The following statement contains a magic number: pagingOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,OrdersToLoad,The following statement contains a magic number: return new List<Order>()                         {                             new Order()                                 {                                     Name = "Order 1"'                                     Total = 120.00'                                     OrderDate = DateTime.Now                                 }'                             new Order()                                 {                                     Name = "Order 2"'                                     Total = 80.00'                                     OrderDate = DateTime.Now.AddMonths(-1)                                 }                                 '                             new Order()                                 {                                     Name = "Order 3"'                                     Total = 100.00'                                     OrderDate = DateTime.Now.AddDays(-2)                                 }                         };
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,OrdersToLoad,The following statement contains a magic number: return new List<Order>()                         {                             new Order()                                 {                                     Name = "Order 1"'                                     Total = 120.00'                                     OrderDate = DateTime.Now                                 }'                             new Order()                                 {                                     Name = "Order 2"'                                     Total = 80.00'                                     OrderDate = DateTime.Now.AddMonths(-1)                                 }                                 '                             new Order()                                 {                                     Name = "Order 3"'                                     Total = 100.00'                                     OrderDate = DateTime.Now.AddDays(-2)                                 }                         };
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,OrdersToLoad,The following statement contains a magic number: return new List<Order>()                         {                             new Order()                                 {                                     Name = "Order 1"'                                     Total = 120.00'                                     OrderDate = DateTime.Now                                 }'                             new Order()                                 {                                     Name = "Order 2"'                                     Total = 80.00'                                     OrderDate = DateTime.Now.AddMonths(-1)                                 }                                 '                             new Order()                                 {                                     Name = "Order 3"'                                     Total = 100.00'                                     OrderDate = DateTime.Now.AddDays(-2)                                 }                         };
Magic Number,SharpRepository.Samples,HowToUsePagingAndSorting,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUsePagingAndSorting.cs,OrdersToLoad,The following statement contains a magic number: return new List<Order>()                         {                             new Order()                                 {                                     Name = "Order 1"'                                     Total = 120.00'                                     OrderDate = DateTime.Now                                 }'                             new Order()                                 {                                     Name = "Order 2"'                                     Total = 80.00'                                     OrderDate = DateTime.Now.AddMonths(-1)                                 }                                 '                             new Order()                                 {                                     Name = "Order 3"'                                     Total = 100.00'                                     OrderDate = DateTime.Now.AddDays(-2)                                 }                         };
Magic Number,SharpRepository.Samples,HowToSpecificationsTraits,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseSpecifications.cs,Specifications_Can_Be_Composed,The following statement contains a magic number: order = new Order { OrderId = 2 };
Magic Number,SharpRepository.Samples,HowToSpecificationsTraits,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseSpecifications.cs,SharpRepository_Supports_Find_Filtering_With_Specifications,The following statement contains a magic number: for (int i = 1; i <= 5; i++)              {                  repo.Add(new Order{ Name = "Order" + i });              }
Magic Number,SharpRepository.Samples,HowToSpecificationsTraits,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseSpecifications.cs,SharpRepository_Supports_Find_Filtering_With_Specifications,The following statement contains a magic number: var spec = new OrderByIdSpecification(3).And(new OrderByNameSpecification("Order3"));
Magic Number,SharpRepository.Samples,HowToSpecificationsTraits,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseSpecifications.cs,SharpRepository_Supports_Find_Filtering_With_Specifications,The following statement contains a magic number: order3.OrderId.ShouldBe(3);
Magic Number,SharpRepository.Samples,HowToSpecificationsTraits,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseSpecifications.cs,SharpRepository_Supports_FindAll_Filtering_With_Specifications,The following statement contains a magic number: for (int i = 1; i <= 5; i++)              {                  repo.Add(new Order { Name = "Order" + i });              }
Magic Number,SharpRepository.Samples,HowToSpecificationsTraits,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseSpecifications.cs,SharpRepository_Supports_FindAll_Filtering_With_Specifications,The following statement contains a magic number: var spec = new OrderByIdSpecification(3).And(new OrderByNameSpecification("Order3"));
Magic Number,SharpRepository.Samples,HowToSpecificationsTraits,C:\repos\SharpRepository_SharpRepository\SharpRepository.Samples\HowToUseSpecifications.cs,SharpRepository_Supports_FindAll_Filtering_With_Specifications,The following statement contains a magic number: order3.First().OrderId.ShouldBe(3);
