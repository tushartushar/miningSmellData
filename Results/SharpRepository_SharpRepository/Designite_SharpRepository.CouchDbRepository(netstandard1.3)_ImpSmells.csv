Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorExpressionVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorExpressionVisitor.cs,VisitBinary,Cyclomatic complexity of the method is 18
Long Parameter List,SharpRepository.CouchDbRepository,CouchDbRepository<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbRepository.cs,CouchDbRepository,The method has 5 parameters. Parameters: host' port' database' username' password
Long Parameter List,SharpRepository.CouchDbRepository,CouchDbRepositoryBase<T;TKey>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbRepositoryBase.cs,CouchDbRepositoryBase,The method has 5 parameters. Parameters: host' port' database' username' password
Long Parameter List,SharpRepository.CouchDbRepository,CouchDbRepositoryConfiguration,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbRepositoryConfiguration.cs,CouchDbRepositoryConfiguration,The method has 7 parameters. Parameters: name' host' port' username' password' cachingStrategy' cachingProvider
Long Parameter List,SharpRepository.CouchDbRepository,CouchDbRequest,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbRequest.cs,Execute,The method has 5 parameters. Parameters: url' uri' method' postData' contentType
Long Statement,SharpRepository.CouchDbRepository,CouchDbClient<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbClient.cs,UpdateDocument,The length of the statement  "            //needs the revision for updates and deletes' this isn't a great way because it's an extra API call' but it is what it is for now' just want to get it working then refactor " is 172.
Long Statement,SharpRepository.CouchDbRepository,CouchDbClient<T>,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbClient.cs,DeleteDocument,The length of the statement  "            //needs the revision for updates and deletes' this isn't a great way because it's an extra API call' but it is what it is for now' just want to get it working then refactor " is 172.
Long Statement,SharpRepository.CouchDbRepository,CouchDbConfigRepositoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbConfigRepositoryFactory.cs,GetInstance,The length of the statement  "            return new CouchDbRepository<T'TKey>(RepositoryConfiguration["host"]' int.Parse(RepositoryConfiguration["port"])' RepositoryConfiguration["database"]' RepositoryConfiguration["username"]' RepositoryConfiguration["password"]); " is 225.
Long Statement,SharpRepository.CouchDbRepository,CouchDbManager,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbManager.cs,CreateDatabase,The length of the statement  "                throw new Exception("Failed to create database: " + result); // was a ApplicationException' will be added back netstandard2.0 " is 125.
Long Statement,SharpRepository.CouchDbRepository,CouchDbManager,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\CouchDbManager.cs,DeleteDatabase,The length of the statement  "                throw new Exception("Failed to delete database: " + result); // was a ApplicationException' will be added back netstandard2.0 " is 125.
Long Statement,SharpRepository.CouchDbRepository.Linq,CouchDbQuery,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\CouchDbQuery.cs,Enumerable,The length of the statement  "            // TODO: look into if it's possible to do how they suggest for CouchDB where to do pagination when it requests 5 items for the first page you actually get 6 so you have the 6th key and when you are on page 2' then you use startkey with the 6th key and get 5 more from there " is 273.
Long Statement,SharpRepository.CouchDbRepository.Linq,CouchDbQuery,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\CouchDbQuery.cs,Enumerable,The length of the statement  "            var json = CouchDbRequest.Execute(_url' fullUri' HttpMethod.Post' _queryParts.BuildCouchDbApiPostData()' "application/json"); " is 125.
Long Statement,SharpRepository.CouchDbRepository.Linq,CouchDbQueryExecutor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\CouchDbQueryExecutor.cs,ExecuteSingle,The length of the statement  "          return returnDefaultWhenEmpty ? ExecuteCollection<T> (queryModel).SingleOrDefault () : ExecuteCollection<T> (queryModel).Single (); " is 131.
Long Statement,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorExpressionVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorExpressionVisitor.cs,VisitBinary,The length of the statement  "            // since the date field is just stored as text via json within CouchDb' to do equality checks against a date field you must do it by doing: " is 139.
Long Statement,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorExpressionVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorExpressionVisitor.cs,VisitBinary,The length of the statement  "            var isLeftDateMember = (expression.Left.NodeType == ExpressionType.MemberAccess && (expression.Left.Type == typeof(DateTime) || expression.Left.Type == typeof(DateTime?))); " is 172.
Long Statement,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorExpressionVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorExpressionVisitor.cs,VisitBinary,The length of the statement  "            var isRightDateMember = (expression.Right.NodeType == ExpressionType.MemberAccess && (expression.Right.Type == typeof(DateTime) || expression.Right.Type == typeof(DateTime?))); " is 176.
Long Statement,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorExpressionVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorExpressionVisitor.cs,VisitNew,The length of the statement  "            // expression.Arguments has the expressions for getting the value' so these need to be run through the Visit stuff to get their  " is 127.
Long Statement,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorExpressionVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorExpressionVisitor.cs,CreateUnhandledItemException,The length of the statement  "            var message = string.Format ("The expression '{0}' (type: {1}) is not supported by this LINQ provider."' itemText' typeof (T)); " is 127.
Long Statement,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorQueryModelVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorQueryModelVisitor.cs,VisitOrderByClause,The length of the statement  "                _queryParts.AddOrderByPart(GetCouchDbApiExpression(orderByClause.Orderings[0].Expression)' orderByClause.Orderings[0].OrderingDirection == OrderingDirection.Desc); " is 163.
Long Statement,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorQueryModelVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorQueryModelVisitor.cs,VisitGroupJoinClause,The length of the statement  "            throw new NotSupportedException("Adding a join ... into ... implementation to the query provider is left to the reader for extra points."); " is 139.
Complex Conditional,SharpRepository.CouchDbRepository.Linq.QueryGeneration,CouchDbApiGeneratorExpressionVisitor,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.CouchDbRepository\Linq\QueryGeneration\CouchDbApiGeneratorExpressionVisitor.cs,VisitConstant,The conditional expression  "expression.Type == typeof(Int32)                  || expression.Type == typeof(Int16)                  || expression.Type == typeof(Int64)                  || expression.Type == typeof(Decimal)                  || expression.Type == typeof(Double)                  || expression.Type == typeof(Boolean)"  is complex.
