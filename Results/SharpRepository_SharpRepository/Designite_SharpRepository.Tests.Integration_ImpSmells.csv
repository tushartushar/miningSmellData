Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpRepository.Tests.Integration.Data,RepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\RepositoryTestCaseDataFactory.cs,Build,Cyclomatic complexity of the method is 13
Complex Method,SharpRepository.Tests.Integration.Spikes,MongoRepositorySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\MongoRepositorySpikes.cs,MongoDb_Supports_Basic_Crud_Operations,Cyclomatic complexity of the method is 8
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Using_TransactionScope_Without_Complete_Should_Not_Add,The length of the statement  "            repository.Get("test"' 1); // used to create the SqlCe database before being inside the transaction scope since that throws an error " is 132.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Using_TransactionScope_With_Complete_Should_Add,The length of the statement  "            repository.Get("test"' 1); // used to create the SqlCe database before being inside the transaction scope since that throws an error " is 132.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The length of the statement  "            // this fails for RavenDb because the ContactId is an int but is being used as the key' so the check on ContactId <= 5 is doing a string comparison and including ContactId = 10 as well " is 184.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification,The length of the statement  "            var result = repository.FindAll(new Specification<User>(p => p.Username == "Test User 1").OrElse(new Specification<User>(p => p.Username == "Test User 2"))); " is 157.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Composite_Specification,The length of the statement  "            var result = repository.Find(new Specification<User>(p => p.Username == "Test User 1").OrElse(new Specification<User>(p => p.Username == "Test User 1000"))); " is 157.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification,The length of the statement  "            var result = repository.Find(new Specification<User>(p => p.Username.StartsWith("Test"))' new SortingOptions<User>("Username"' true)); " is 134.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification,The length of the statement  "            var result2 = repository.Find(new Specification<User>(p => p.Username.StartsWith("Test"))' new SortingOptions<User>("Username"' false)); " is 136.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification_WIth_Sorting_Predicate,The length of the statement  "            var result = repository.Find(new Specification<User>(p => p.Username.StartsWith("Test"))' new SortingOptions<User' string>(c => c.Username' true)); " is 147.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification_WIth_Sorting_Predicate,The length of the statement  "            var result2 = repository.Find(new Specification<User>(p => p.Username.StartsWith("Test"))' new SortingOptions<User' string>(c => c.Username' false)); " is 149.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Predicate_WIth_Sorting_Predicate,The length of the statement  "            var result = repository.Find(p => p.Username.StartsWith("Test")' new SortingOptions<User' string>(c => c.Username' true)); " is 122.
Long Statement,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Predicate_WIth_Sorting_Predicate,The length of the statement  "            var result2 = repository.Find(p => p.Username.StartsWith("Test")' new SortingOptions<User' string>(c => c.Username' false)); " is 124.
Long Statement,SharpRepository.Tests.Integration,RepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryAddTests.cs,Using_TransactionScope_Without_Complete_Should_Not_Add,The length of the statement  "            repository.Get("test"); // used to create the SqlCe database before being inside the transaction scope since that throws an error " is 129.
Long Statement,SharpRepository.Tests.Integration,RepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryAddTests.cs,Using_TransactionScope_With_Complete_Should_Add,The length of the statement  "            repository.Get("test"); // used to create the SqlCe database before being inside the transaction scope since that throws an error " is 129.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification,The length of the statement  "            var result = repository.FindAll(new Specification<Contact>(p => p.Name == "Test User 1")); // Note: Raven doesn't like p.Name.Equals("..."); " is 140.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The length of the statement  "            // this fails for RavenDb because the ContactId is an int but is being used as the key' so the check on ContactId <= 5 is doing a string comparison and including ContactId = 10 as well " is 184.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The length of the statement  "            // this fails for RavenDb because the ContactId is an int but is being used as the key' so the check on ContactId <= 5 is doing a string comparison and including ContactId = 10 as well " is 184.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification,The length of the statement  "            var result = repository.FindAll(new Specification<Contact>(p => p.Name == "Test User 1").OrElse(new Specification<Contact>(p => p.Name == "Test User 2"))); " is 155.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Composite_Specification,The length of the statement  "            var result = repository.Find(new Specification<Contact>(p => p.Name == "Test User 1").OrElse(new Specification<Contact>(p => p.Name == "Test User 1000"))); " is 155.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification,The length of the statement  "            var result = repository.Find(new Specification<Contact>(p => p.Name.StartsWith("Test"))' new SortingOptions<Contact>("Name"' true)); " is 132.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification,The length of the statement  "            var result2 = repository.Find(new Specification<Contact>(p => p.Name.StartsWith("Test"))' new SortingOptions<Contact>("Name"' false)); " is 134.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification_WIth_Sorting_Predicate,The length of the statement  "            var result = repository.Find(new Specification<Contact>(p => p.Name.StartsWith("Test"))' new SortingOptions<Contact' string>(c => c.Name' true)); " is 145.
Long Statement,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification_WIth_Sorting_Predicate,The length of the statement  "            var result2 = repository.Find(new Specification<Contact>(p => p.Name.StartsWith("Test"))' new SortingOptions<Contact' string>(c => c.Name' false)); " is 147.
Long Statement,SharpRepository.Tests.Integration,AssertIgnores,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\TestBase.cs,MongoServerIsNotRunning,The length of the statement  "                Assert.Ignore("MongoServer is NOT running. MongoDbRepository integration tests are excluded from the test suite until MongoDb installed on this machine. Get MongoDb installed and running on Windows: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/"); " is 269.
Long Statement,SharpRepository.Tests.Integration.Data,CachePrefixFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\CachePrefixFactory.cs,Build,The length of the statement  "            _num++; // since it goes through and calls this for each test before running them' we need a different database for each test or else the auto increment goes to 2 on the second test with an add and it fails " is 206.
Long Statement,SharpRepository.Tests.Integration.Data,CachePrefixFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\CachePrefixFactory.cs,Build,The length of the statement  "                    // surprisingly the timing isn;'t too bad for this' the first test takes about 7 secs for EF to model the DB and create it' then each other test is super quick in creating the DB file " is 183.
Long Statement,SharpRepository.Tests.Integration.Data,CompoundKeyRepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\CompoundKeyRepositoryTestCaseDataFactory.cs,Build,The length of the statement  "                yield return new TestCaseData(new EfRepository<User' string' int>(new TestObjectContext("Data Source=" + dbPath))).SetName("EfRepository Test"); " is 144.
Long Statement,SharpRepository.Tests.Integration.Data,CompoundKeyRepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\CompoundKeyRepositoryTestCaseDataFactory.cs,Build,The length of the statement  "                yield return new TestCaseData(new CacheRepository<User' string' int>(CachePrefixFactory.Build()' cachingProvider)).SetName("CacheRepository Test"); " is 147.
Long Statement,SharpRepository.Tests.Integration.Data,CouchDbDatabaseNameFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\CouchDbDatabaseNameFactory.cs,Build,The length of the statement  "            _num++; // since it goes through and calls this for each test before running them' we need a different database for each test  " is 125.
Long Statement,SharpRepository.Tests.Integration.Data,Db4oDataDirectoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\Db4oDataDirectoryFactory.cs,Build,The length of the statement  "            _num++; // since it goes through and calls this for each test before running them' we need a different database for each test  " is 125.
Long Statement,SharpRepository.Tests.Integration.Data,EfDataDirectoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\EfDataDirectoryFactory.cs,Build,The length of the statement  "            _num++; // since it goes through and calls this for each test before running them' we need a different database for each test or else the auto increment goes to 2 on the second test with an add and it fails " is 206.
Long Statement,SharpRepository.Tests.Integration.Data,EfDataDirectoryFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\EfDataDirectoryFactory.cs,Build,The length of the statement  "                    // surprisingly the timing isn;'t too bad for this' the first test takes about 7 secs for EF to model the DB and create it' then each other test is super quick in creating the DB file " is 183.
Long Statement,SharpRepository.Tests.Integration.Data,MongoDbConnectionStringFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\MongoDbConnectionStringFactory.cs,Build,The length of the statement  "            _num++; // since it goes through and calls this for each test before running them' we need a different database for each test  " is 125.
Long Statement,SharpRepository.Tests.Integration.Data,RepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\RepositoryTestCaseDataFactory.cs,Build,The length of the statement  "                    new TestCaseData(new EfRepository<Contact' string>(new TestObjectContext("Data Source=" + dbPath))).SetName("EfRepository" + testName); " is 135.
Long Statement,SharpRepository.Tests.Integration.Data,RepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\RepositoryTestCaseDataFactory.cs,Build,The length of the statement  "                yield return new TestCaseData(new RavenDbRepository<Contact' string>(documentStore: documentStore)).SetName("RavenDbRepository " + testName); " is 141.
Long Statement,SharpRepository.Tests.Integration.Data,RepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\RepositoryTestCaseDataFactory.cs,Build,The length of the statement  "                yield return new TestCaseData(new CacheRepository<Contact' string>(CachePrefixFactory.Build()' cachingProvider)).SetName("CacheRepository " + testName); " is 152.
Long Statement,SharpRepository.Tests.Integration.Data,RepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\RepositoryTestCaseDataFactory.cs,Build,The length of the statement  "                    yield return new TestCaseData(new CouchDbRepository<Contact' string>(CouchDbUrl.Host' CouchDbUrl.Port' databaseName)).SetName("CouchDbRepository " + testName); " is 159.
Long Statement,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The length of the statement  "            ICompoundKeyRepository<User' string' int> repository = new EfRepository<User' string' int>(new TestObjectContext("Data Source=" + dbPath)); " is 139.
Long Statement,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The length of the statement  "            ICompoundKeyRepository<User> repository = new EfCompoundKeyRepository<User>(new TestObjectContext("Data Source=" + dbPath)); " is 124.
Long Statement,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_Without_Includes_LazyLoads_Email,The length of the statement  "            // dbContext.QueryLog.Count(filterSelects).ShouldBe(2); may be that dbcontext is disposed and the successive queries are not logged' quieries does not contains email so query was made in a lazy way but after. " is 208.
Long Statement,SharpRepository.Tests.Integration.Spikes,EfCoreSelectorSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreSelectorSpike.cs,EfCore_Get_With_Selector_Selects_Only_Specified_Columns,The length of the statement  "            var emailAddress = repository.Find(m => m.Email == "omar.piani.1@email.com"' s => new { s.ContactId' s.EmailAddressId' s.Email }); " is 130.
Long Statement,SharpRepository.Tests.Integration.Spikes,EfNullableForeignKeyCacheSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfNullablePartitionKeyCacheSpikes.cs,Deleted_Entity_With_Nullable_PartitionKey_Should_Not_Be_Returned_From_Cache,The length of the statement  "            var strategy = new StandardCachingStrategyWithPartition<Node' int' int?>(new InMemoryCachingProvider(new MemoryCache(new MemoryCacheOptions()))' " is 144.
Long Statement,SharpRepository.Tests.Integration.Spikes,EfNullableForeignKeyCacheSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfNullablePartitionKeyCacheSpikes.cs,Deleted_Entity_With_Nullable_PartitionKey_Should_Not_Be_Returned_From_Cache,The length of the statement  "            // Note: If we dont assign an int? here then TryPartitionValue in StandardCachingStrategyBase cannot find the partition key in the expression " is 141.
Long Statement,SharpRepository.Tests.Integration.Spikes,RepositoryDependencySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RepositoryDependencySpikes.cs,EfConfigRepositoryFactory_Using_Ioc_Should_Return_TestObjectEntites_Without_DbContextType_Defined,The length of the statement  "            var propInfo = repos.GetType().GetProperty("Context"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public); " is 124.
Long Statement,SharpRepository.Tests.Integration.Spikes,RepositoryDependencySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RepositoryDependencySpikes.cs,EfConfigRepositoryFactory_Using_Ioc_Should_Share_DbContext,The length of the statement  "            var propInfo1 = repos1.GetType().GetProperty("Context"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public); " is 126.
Long Statement,SharpRepository.Tests.Integration.Spikes,RepositoryDependencySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RepositoryDependencySpikes.cs,EfConfigRepositoryFactory_Using_Ioc_Should_Share_DbContext,The length of the statement  "            var propInfo2 = repos2.GetType().GetProperty("Context"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public); " is 126.
Long Statement,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindShouldBeCachedWithSinglePredicateValueHash,The length of the statement  "            var repository = new InMemoryRepository<Contact' string>(new StandardCachingStrategy<Contact' string>(cacheProvider)); // by default uses InMemoryCache " is 151.
Long Statement,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindShouldBeCachedWithMultiplePredicateValueHash,The length of the statement  "            var repository = new InMemoryRepository<Contact' string>(new StandardCachingStrategy<Contact' string>(cacheProvider)); // by default uses InMemoryCache " is 151.
Long Statement,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindAllShouldBeCachedWithSinglePredicateValueHash,The length of the statement  "            var repository = new InMemoryRepository<Contact' string>(new StandardCachingStrategy<Contact' string>(cacheProvider)); // by default uses InMemoryCache " is 151.
Long Statement,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindAllShouldBeCachedWithMultiplePredicateValueHash,The length of the statement  "            var repository = new InMemoryRepository<Contact' string>(new StandardCachingStrategy<Contact' string>(cacheProvider)); // by default uses InMemoryCache " is 151.
Long Statement,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,Get_With_Selector_Should_Not_Use_Cache_If_Entity_Updated,The length of the statement  "            var repository = new InMemoryRepository<Contact' string>(new StandardCachingStrategy<Contact' string>(cacheProvider)); // by default uses InMemoryCache " is 151.
Empty Catch Block,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_Should_Throw_Exception_If_Item_Does_Not_Exist,The method has an empty catch block.
Empty Catch Block,SharpRepository.Tests.Integration,RepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryUpdateTests.cs,Update_Should_Throw_Exception_If_Item_Does_Not_Exist,The method has an empty catch block.
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupCount_Should_Return_Proper_Counts,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupCount_Should_Return_Proper_Counts,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = 2};
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupCount_Should_Return_Proper_Counts,The following statement contains a magic number: i <= 7
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupCount_Should_Return_Proper_Counts,The following statement contains a magic number: groups.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupCount_Should_Return_Proper_Counts,The following statement contains a magic number: groups[1].ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupCount_Should_Return_Proper_Counts,The following statement contains a magic number: groups[2].ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupCount_Should_Return_Proper_Counts,The following statement contains a magic number: groups[2].ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupLongCount_Should_Return_Proper_Counts,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupLongCount_Should_Return_Proper_Counts,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = 2};
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupLongCount_Should_Return_Proper_Counts,The following statement contains a magic number: i <= 7
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupLongCount_Should_Return_Proper_Counts,The following statement contains a magic number: groups.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupLongCount_Should_Return_Proper_Counts,The following statement contains a magic number: const long expected1 = 3;
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupLongCount_Should_Return_Proper_Counts,The following statement contains a magic number: const long expected2 = 4;
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,GroupLongCount_Should_Return_Proper_Counts,The following statement contains a magic number: groups[2].ShouldBe(expected2);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Group_Should_Return_Proper_Items,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Group_Should_Return_Proper_Items,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = 2};
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Group_Should_Return_Proper_Items,The following statement contains a magic number: i <= 7
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Group_Should_Return_Proper_Items,The following statement contains a magic number: groups.First().Count.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Group_Should_Return_Proper_Items,The following statement contains a magic number: groups.Last().ContactTypeId.ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Group_Should_Return_Proper_Items,The following statement contains a magic number: groups.Last().Count.ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Group_Should_Return_Proper_Items,The following statement contains a magic number: groups.Last().Average.ShouldBe(2.0);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_Should_Return_All_Count,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_Should_Return_All_Count,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = 2};
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_Should_Return_All_Count,The following statement contains a magic number: i <= 7
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_Should_Return_All_Count,The following statement contains a magic number: repository.Count().ShouldBe(7);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_Should_Return_All_Count,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_Should_Return_All_Count,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = 2};
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_Should_Return_All_Count,The following statement contains a magic number: i <= 7
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_Should_Return_All_Count,The following statement contains a magic number: const long expected = 7;
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_With_Predicate_Should_Return_Count,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_With_Predicate_Should_Return_Count,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = 2};
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_With_Predicate_Should_Return_Count,The following statement contains a magic number: i <= 7
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_With_Predicate_Should_Return_Count,The following statement contains a magic number: repository.Count(x => x.ContactTypeId == 2).ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Count_With_Predicate_Should_Return_Count,The following statement contains a magic number: repository.Count(x => x.ContactTypeId == 2).ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_With_Predicate_Should_Return_Count,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_With_Predicate_Should_Return_Count,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = 2};
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_With_Predicate_Should_Return_Count,The following statement contains a magic number: i <= 7
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_With_Predicate_Should_Return_Count,The following statement contains a magic number: const long expected = 4;
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,LongCount_With_Predicate_Should_Return_Count,The following statement contains a magic number: repository.LongCount(x => x.ContactTypeId == 2).ShouldBe(expected);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_All_Should_Return_Sum,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_All_Should_Return_Sum,The following statement contains a magic number: repository.Sum(x => x.ContactTypeId).ShouldBe(6);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_With_Predicate_Should_Return_Sum,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_With_Predicate_Should_Return_Sum,The following statement contains a magic number: repository.Sum(x => x.ContactTypeId > 1' x => x.ContactTypeId).ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_With_Specification_Should_Return_Sum,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_With_Specification_Should_Return_Sum,The following statement contains a magic number: repository.Sum(new Specification<Contact>(x => x.ContactTypeId > 1)' x => x.ContactTypeId).ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_Decimal_All_Should_Return_Sum,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_Decimal_All_Should_Return_Sum,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_Decimal_All_Should_Return_Sum,The following statement contains a magic number: repository.Sum(x => x.SumDecimal).ShouldBe(7.5m);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_Decimal_With_Predicate_Should_Return_Sum,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_Decimal_With_Predicate_Should_Return_Sum,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Sum_Decimal_With_Predicate_Should_Return_Sum,The following statement contains a magic number: repository.Sum(x => x.ContactTypeId > 1' x => x.SumDecimal).ShouldBe(6m);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_All_Should_Return_Average,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_All_Should_Return_Average,The following statement contains a magic number: repository.Average(x => x.ContactTypeId).ShouldBe(2.0);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_With_Predicate_Should_Return_Average,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_With_Predicate_Should_Return_Average,The following statement contains a magic number: repository.Average(x => x.ContactTypeId > 1' x => x.ContactTypeId).ShouldBe(2.5);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_With_Specification_Should_Return_Average,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_With_Specification_Should_Return_Average,The following statement contains a magic number: repository.Average(new Specification<Contact>(x => x.ContactTypeId > 1)' x => x.ContactTypeId).ShouldBe(2.5);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_Decimal_All_Should_Return_Average,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_Decimal_All_Should_Return_Average,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_Decimal_All_Should_Return_Average,The following statement contains a magic number: repository.Average(x => x.SumDecimal).ShouldBe(2.5m);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_Decimal_With_Predicate_Should_Return_Average,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_Decimal_With_Predicate_Should_Return_Average,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Average_Decimal_With_Predicate_Should_Return_Average,The following statement contains a magic number: repository.Average(x => x.ContactTypeId > 1' x => x.SumDecimal).ShouldBe(3m);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_All_Should_Return_One,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_All_Should_Return_One,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_With_Predicate_Should_Return_Min,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_With_Predicate_Should_Return_Min,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_With_Predicate_Should_Return_Min,The following statement contains a magic number: repository.Min(x => x.ContactTypeId > 1' x => x.ContactTypeId).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_Decimal_All_Should_Return_Min,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_Decimal_All_Should_Return_Min,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_Decimal_All_Should_Return_Min,The following statement contains a magic number: repository.Min(x => x.SumDecimal).ShouldBe(1.5m);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_Decimal_With_Predicate_Should_Return_Min,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = i' SumDecimal = 0.5m + i };
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_Decimal_With_Predicate_Should_Return_Min,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Min_Decimal_With_Predicate_Should_Return_Min,The following statement contains a magic number: repository.Min(x => x.ContactTypeId > 1' x => x.SumDecimal).ShouldBe(2.5m);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Max_All_Should_Return_Max,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Max_All_Should_Return_Max,The following statement contains a magic number: repository.Max(x => x.ContactTypeId).ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Max_With_Predicate_Should_Return_Max,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Max_With_Predicate_Should_Return_Max,The following statement contains a magic number: repository.Max(x => x.ContactTypeId < 3' x => x.ContactTypeId).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,AggregateQueriesTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\AggregateQueriesTests.cs,Max_With_Predicate_Should_Return_Max,The following statement contains a magic number: repository.Max(x => x.ContactTypeId < 3' x => x.ContactTypeId).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Add_Should_Result_In_Proper_Total_Items,The following statement contains a magic number: repository.Add(new User { Username = "Test User"' Age = 11' FullName = "Test User - 11"});
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Add_InBatchMode_Should_Delay_The_Action,The following statement contains a magic number: batch.Add(new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" });
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Add_InBatchMode_Should_Delay_The_Action,The following statement contains a magic number: batch.Add(new User { Username = "Test User"' Age = 21' FullName = "Test User - 21" });
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Add_InBatchMode_Should_Delay_The_Action,The following statement contains a magic number: repository.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Using_TransactionScope_Without_Complete_Should_Not_Add,The following statement contains a magic number: repository.Add(new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" });
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryAddTests.cs,Using_TransactionScope_With_Complete_Should_Add,The following statement contains a magic number: repository.Add(new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" });
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Item,The following statement contains a magic number: var item = new User {Username = "Test User"' Age = 11' FullName = "Test User - 11"};
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Item,The following statement contains a magic number: var result = repository.Get("Test User"' 11);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Item,The following statement contains a magic number: result = repository.Get("Test User"' 11);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Item_By_Key,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Wait_To_Remove_Item_If_Item_Exists_In_BatchMode,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Multiple_Items,The following statement contains a magic number: IList<User> users = new List<User>              {                  new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" }'                  new User { Username = "Test User"' Age = 21' FullName = "Test User - 21" }'                  new User { Username = "Test User 2"' Age = 11' FullName = "Test User  2- 11" }'              };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Multiple_Items,The following statement contains a magic number: IList<User> users = new List<User>              {                  new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" }'                  new User { Username = "Test User"' Age = 21' FullName = "Test User - 21" }'                  new User { Username = "Test User 2"' Age = 11' FullName = "Test User  2- 11" }'              };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Multiple_Items,The following statement contains a magic number: IList<User> users = new List<User>              {                  new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" }'                  new User { Username = "Test User"' Age = 21' FullName = "Test User - 21" }'                  new User { Username = "Test User 2"' Age = 11' FullName = "Test User  2- 11" }'              };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryDeleteTests.cs,Delete_Should_Remove_Multiple_Items,The following statement contains a magic number: repository.Delete(users.Take(2));
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: const int totalItems = 10;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: var result = repository.FindAll(new Specification<User>(p => p.Age <= totalItems / 2)' queryOptions);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(totalItems / 2);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: const int totalItems = 10;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: var result = repository.FindAll(new Specification<User>(p => p.Age <= totalItems / 2)' queryOptions);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(totalItems / 2);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification,The following statement contains a magic number: result.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Composite_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Composite_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification_WIth_Sorting_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Predicate_WIth_Sorting_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_Should_Return_Every_Item,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_Should_Return_Every_Item,The following statement contains a magic number: result.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int totalItems = 5;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Item,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Item,The following statement contains a magic number: result.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_With_Anonymous_Selector_Should_Return_Every_Item,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_With_Anonymous_Selector_Should_Return_Every_Item,The following statement contains a magic number: total.ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int totalItems = 5;
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,Get_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: var item = new User {Username = "Test User"' Age = 21};
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,Get_With_String_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 21 };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,Get_With_Int_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 21 };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,Get_With_Int_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: result.ShouldBe(21);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,Get_With_Anonymous_Class_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 21 };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,Get_With_Anonymous_Class_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: result.Age.ShouldBe(21);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,TryGet_Should_Return_True_And_Item_If_Item_Exists,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 21 };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryGetTests.cs,TryGet_Should_Return_True_If_Item_Exists,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 21 };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: var item = new User { Username = "Test User " + i.ToString()' Age = (i % 2) + 1' ContactTypeId = i == 1 ? 1 : 2 };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: var item = new User { Username = "Test User " + i.ToString()' Age = (i % 2) + 1' ContactTypeId = i == 1 ? 1 : 2 };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: contactTypeRepository.Add(new ContactType() { ContactTypeId = 2' Abbreviation = "T2" });
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: all.Count.ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Save_Modified_Business_Name,The following statement contains a magic number: var item = new User { Username = "Test User"' Age = 22' FullName = "Test User - 22" };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Save_Modified_Business_Name,The following statement contains a magic number: var item2 = new User { Username = "Test User 2"' Age = 22' FullName = "Test User 2 - 22" };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: var users = new List<User>              {                  new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" }'                  new User { Username = "Test User"' Age = 21' FullName = "Test User - 21" }'                  new User { Username = "Test User 2"' Age = 11' FullName = "Test User  2- 11" }'              };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: var users = new List<User>              {                  new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" }'                  new User { Username = "Test User"' Age = 21' FullName = "Test User - 21" }'                  new User { Username = "Test User 2"' Age = 11' FullName = "Test User  2- 11" }'              };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: var users = new List<User>              {                  new User { Username = "Test User"' Age = 11' FullName = "Test User - 11" }'                  new User { Username = "Test User"' Age = 21' FullName = "Test User - 21" }'                  new User { Username = "Test User 2"' Age = 11' FullName = "Test User  2- 11" }'              };
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: users.Take(2)
Magic Number,SharpRepository.Tests.Integration,CompoundKeyRepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\CompoundKeyRepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: items.Count(x => x.FullName.EndsWith("UPDATED")).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,RepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryAddTests.cs,Add_InBatchMode_Should_Delay_The_Action,The following statement contains a magic number: repository.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,RepositoryAddTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryAddTests.cs,Add_Should_Save_And_Assigned_New_Ids_To_Multiple,The following statement contains a magic number: added.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_Should_Remove_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_Should_Remove_Multiple_Items,The following statement contains a magic number: repository.Delete(contacts.Take(2));
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_Predicate_Should_Remove_Multiple_Items,The following statement contains a magic number: IList<Contact> contacts = new List<Contact>              {                  new Contact { Name = "Contact 1"' ContactTypeId = 1}'                  new Contact { Name = "Contact 2"' ContactTypeId = 1}'                  new Contact { Name = "Contact 3"' ContactTypeId = 3}'              };
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_Predicate_Should_Remove_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_Predicate_Should_Remove_Multiple_Items,The following statement contains a magic number: repository.Delete(x => x.ContactTypeId < 3);
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_By_Keys_Enum_Should_Remove_Multiple_Items,The following statement contains a magic number: var contact3 = new Contact { Name = "Contact 3"' ContactTypeId = 3};
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_By_Keys_Enum_Should_Remove_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_By_Params_Should_Remove_Multiple_Items,The following statement contains a magic number: var contact3 = new Contact {Name = "Contact 3"' ContactTypeId = 3};
Magic Number,SharpRepository.Tests.Integration,RepositoryDeleteTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryDeleteTests.cs,Delete_By_Params_Should_Remove_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: const int totalItems = 10;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: var result = repository.FindAll(new Specification<Contact>(p => p.ContactTypeId <= totalItems / 2)' queryOptions);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(totalItems / 2);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: const int totalItems = 10;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: var result = repository.FindAll(new Specification<Contact>(p => p.ContactTypeId <= totalItems / 2)' queryOptions);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Specification_With_Paging_MagicString,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(totalItems / 2);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification,The following statement contains a magic number: result.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_And_Sort_Descending,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: i <= 10
Magic Number,SharpRepository.Tests.Integration,RepositoryFindAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindAllTests.cs,FindAll_Should_Return_All_Items_Which_Satisfy_Composite_Specification_With_Paging_MagicString_And_Sort_Descending,The following statement contains a magic number: queryOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Composite_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_Single_Item_Which_Satisfies_Composite_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Specification_WIth_Sorting_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,Find_Should_Return_First_Ordered_Item_Which_Satisfies_Predicate_WIth_Sorting_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,TryFind_Should_Return_True_And_Single_Item_Which_Satisfies_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,TryFind_Should_Return_True_And_Single_Item_Which_Satisfies_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,TryFind_Should_Return_True_Which_Satisfies_Specification,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryFindTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryFindTests.cs,TryFind_Should_Return_True_Which_Satisfies_Predicate,The following statement contains a magic number: i <= 3
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_Should_Return_Every_Item,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_Should_Return_Every_Item,The following statement contains a magic number: result.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int totalItems = 5;
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Item,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Item,The following statement contains a magic number: result.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_With_Anonymous_Selector_Should_Return_Every_Item,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_With_Anonymous_Selector_Should_Return_Every_Item,The following statement contains a magic number: total.ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.Integration,RepositoryGetAllTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetAllTests.cs,GetAll_With_Selector_Should_Return_Every_Items_With_Paging,The following statement contains a magic number: const int totalItems = 5;
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,Get_With_Int_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: var contact = new Contact { Name = "Test User"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,Get_With_Int_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: result.ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,Get_With_Anonymous_Class_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: var contact = new Contact { Name = "Test User"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,Get_With_Anonymous_Class_Selector_Should_Return_Item_If_Item_Exists,The following statement contains a magic number: result.ContactTypeId.ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetMany_Params_Should_Return_Multiple_Items,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetMany_Params_Should_Return_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetMany_List_Should_Return_Multiple_Items,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetMany_List_Should_Return_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetMany_List_Should_Return_Multiple_Items_With_Strategy,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetMany_List_Should_Return_Multiple_Items_With_Strategy,The following statement contains a magic number: items.Count().ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetManyAsDictionary_Params_Should_Return_Multiple_Items,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetManyAsDictionary_Params_Should_Return_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(4);
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetManyAsDictionary_List_Should_Return_Multiple_Items,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryGetTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryGetTests.cs,GetManyAsDictionary_List_Should_Return_Multiple_Items_With_Strategy,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: var contact = new Contact { Name = "Test User " + i' ContactTypeId = (i % 2) + 1};
Magic Number,SharpRepository.Tests.Integration,RepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Integration,RepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: contactTypeRepository.Add(new ContactType() { ContactTypeId = 2' Abbreviation = "T2" });
Magic Number,SharpRepository.Tests.Integration,RepositoryJoinTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryJoinTests.cs,Join_GetAll_Should_Return_All_Items,The following statement contains a magic number: all.Count.ShouldBe(5);
Magic Number,SharpRepository.Tests.Integration,RepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: items.Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration,RepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: contacts.Take(2)
Magic Number,SharpRepository.Tests.Integration,RepositoryUpdateTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\RepositoryUpdateTests.cs,Update_Should_Update_Multiple_Items,The following statement contains a magic number: items.Count(x => x.Name.EndsWith("UPDATED")).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Data,RepositoryTestCaseDataFactory,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Data\RepositoryTestCaseDataFactory.cs,Build,The following statement contains a magic number: IntPtr.Size == 4
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 21' FullName = "Jeff - 21" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 31' FullName = "Jeff - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 41' FullName = "Jeff - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 31' FullName = "Ben - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 41' FullName = "Ben - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 51' FullName = "Ben - 51" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 31).FullName.ShouldBe("Jeff - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get("ben"' 31).FullName.ShouldBe("Ben - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 41).FullName.ShouldBe("Jeff - 41");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 21' FullName = "Jeff - 21" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 31' FullName = "Jeff - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 41' FullName = "Jeff - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 31' FullName = "Ben - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 41' FullName = "Ben - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 51' FullName = "Ben - 51" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 31).FullName.ShouldBe("Jeff - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get("ben"' 31).FullName.ShouldBe("Ben - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 41).FullName.ShouldBe("Jeff - 41");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 21' FullName = "Jeff - 21" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 31' FullName = "Jeff - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 41' FullName = "Jeff - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 31' FullName = "Ben - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 41' FullName = "Ben - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 51' FullName = "Ben - 51" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 31).FullName.ShouldBe("Jeff - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get("ben"' 31).FullName.ShouldBe("Ben - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 41).FullName.ShouldBe("Jeff - 41");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 21' FullName = "Jeff - 21" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 31' FullName = "Jeff - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "jeff"' Age = 41' FullName = "Jeff - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 31' FullName = "Ben - 31" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 41' FullName = "Ben - 41" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new User { Username = "ben"' Age = 51' FullName = "Ben - 51" });
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 31).FullName.ShouldBe("Jeff - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get("ben"' 31).FullName.ShouldBe("Ben - 31");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get("jeff"' 41).FullName.ShouldBe("Jeff - 41");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreCompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreCompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.Age == 31).Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,SetupRepository,The following statement contains a magic number: const int totalItems = 5;
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Includes_In_Strategy_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Includes_In_Strategy_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Includes_In_Strategy_String_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Includes_In_Strategy_String_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Text_Include_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Text_Include_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Text_Include_And_Pagination_LazyLoads_Email,The following statement contains a magic number: var pagination = new PagingOptions<Contact>(1' 4' "ContactId");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Text_Include_And_Pagination_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_GetAll_With_Text_Include_And_Pagination_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(3);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_FindAll_With_Include_And_Predicate_In_Specs_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreLazyLoadSpike.cs,EfCore_FindAll_With_Include_And_Predicate_In_Specs_LazyLoads_Email,The following statement contains a magic number: dbContext.QueryLog.Count(filterSelects).ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfCoreSelectorSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfCoreSelectorSpike.cs,SetupRepository,The following statement contains a magic number: const int totalItems = 5;
Magic Number,SharpRepository.Tests.Integration.Spikes,EfLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfLazyLoadSpike.cs,SetupRepository,The following statement contains a magic number: const int totalItems = 5;
Magic Number,SharpRepository.Tests.Integration.Spikes,EfLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfLazyLoadSpike.cs,GetAll_Without_Includes_LazyLoads_Email,The following statement contains a magic number: queries.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfLazyLoadSpike.cs,GetAll_With_Text_Include_And_Pagination_LazyLoads_Email,The following statement contains a magic number: var pagination = new PagingOptions<Contact>(1' 4' "ContactId");
Magic Number,SharpRepository.Tests.Integration.Spikes,EfLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfLazyLoadSpike.cs,GetAll_With_Text_Include_And_Pagination_LazyLoads_Email,The following statement contains a magic number: queries.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,EfLazyLoadSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\EfLazyLoadSpike.cs,GetAll_With_Text_Include_And_Pagination_LazyLoads_Email,The following statement contains a magic number: queries.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests,The following statement contains a magic number: repos.Add(new RavenTestStringKey() {Name = "Jeff"' Age = 33});
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests,The following statement contains a magic number: repos.Add(new RavenTestStringKey() {Name = "Ben"' Age = 53});
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests,The following statement contains a magic number: items.Count.ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Int_Key,The following statement contains a magic number: repos.Add(new RavenTestIntKey() {Name = "Jeff"' Age = 33});
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Int_Key,The following statement contains a magic number: repos.Add(new RavenTestIntKey() {Name = "Ben"' Age = 53});
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Int_Key,The following statement contains a magic number: items.Count.ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Int_Key,The following statement contains a magic number: var item2 = repos.Get(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Custom_Int_Key,The following statement contains a magic number: repos.Add(new RavenTestCustomIntKey() { Name = "Jeff"' Age = 33 });
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Custom_Int_Key,The following statement contains a magic number: repos.Add(new RavenTestCustomIntKey() { Name = "Ben"' Age = 53 });
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Custom_Int_Key,The following statement contains a magic number: items.Count.ShouldBe(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,RavenDbEmbeddedTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\RavenDbEmbeddedTests.cs,Use_Raven_Db_Embedded_For_Tests_With_Custom_Int_Key,The following statement contains a magic number: var item2 = repos.Get(2);
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindShouldBeCachedWithSinglePredicateValueHash,The following statement contains a magic number: i < 5
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindShouldBeCachedWithMultiplePredicateValueHash,The following statement contains a magic number: i < 5
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindAllShouldBeCachedWithSinglePredicateValueHash,The following statement contains a magic number: i < 5
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,FindAllShouldBeCachedWithMultiplePredicateValueHash,The following statement contains a magic number: i < 5
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,Get_With_Selector_Should_Not_Use_Cache_If_Entity_Updated,The following statement contains a magic number: i < 3
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,Delete_Loop_With_Cache_And_Ef,The following statement contains a magic number: repository.Add(new Contact() { ContactId = "2"' Name = "Contact2"' ContactTypeId = 2 });
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,Delete_Loop_With_Cache_And_Ef,The following statement contains a magic number: repository.Add(new Contact() { ContactId = "3"' Name = "Contact3"' ContactTypeId = 2 });
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,Delete_Loop_With_Cache_And_Ef,The following statement contains a magic number: repository.FindAll(x => x.ContactTypeId == 2);
Magic Number,SharpRepository.Tests.Integration.Spikes,StandardCachingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests.Integration\Spikes\StandardCachingSpikes.cs,Delete_Loop_With_Cache_And_Ef,The following statement contains a magic number: repository.Delete(x => x.ContactTypeId == 2);
