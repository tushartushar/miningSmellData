Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Same_Predicate_With_Variable_Array_Will_Give_Same_Hash,The length of the statement  "            Expression<Func<Contact' bool>> predicate = contact => (contact.Name == name && contactIds.Contains(contact.ContactId)); " is 120.
Long Statement,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Same_Predicate_With_Variable_Array_Will_Give_Same_Hash,The length of the statement  "            Expression<Func<Contact' bool>> predicate2 = contact => (contact.Name == name && contactIds2.Contains(contact.ContactId)); " is 122.
Long Statement,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Predicate_With_Variable_Array_Will_Give_Different_Hash,The length of the statement  "            Expression<Func<Contact' bool>> predicate = contact => (contact.Name == name && contactIds.Contains(contact.ContactId)); " is 120.
Long Statement,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Predicate_With_Variable_Array_Will_Give_Different_Hash,The length of the statement  "            Expression<Func<Contact' bool>> predicate2 = contact => (contact.Name == name && contactIds.Contains(contact.ContactId)); " is 121.
Long Statement,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,Setup,The length of the statement  "            // need to clear out the InMemory cache before each test is run so that each is independent and won't effect the next one " is 121.
Long Statement,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,Setup,The length of the statement  "            // need to clear out the InMemory cache before each test is run so that each is independent and won't effect the next one " is 121.
Long Statement,SharpRepository.Tests.Caching,StandardCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingStrategyTests.cs,Setup,The length of the statement  "            // need to clear out the InMemory cache before each test is run so that each is independent and won't effect the next one " is 121.
Long Statement,SharpRepository.Tests.Caching,StandardCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingStrategyTests.cs,TryFindAllResult_With_Different_QueryOptions_Should_Return_False,The length of the statement  "            CachingStrategy.TryFindAllResult(specification' new SortingOptions<Contact>("Name"' true)' null' out result).ShouldBe(false); " is 125.
Long Statement,SharpRepository.Tests.Caching,StandardCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingStrategyTests.cs,TryFindResult_With_Different_QueryOptions_Should_Return_False,The length of the statement  "            CachingStrategy.TryFindResult(specification' new SortingOptions<Contact>("Name"' true)' null' out result).ShouldBe(false); " is 122.
Long Statement,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,Setup,The length of the statement  "            CachingStrategy = new StandardCachingStrategyWithPartition<Contact' int' int>(cacheProvider' c => c.ContactTypeId) { CachePrefix = "#RepoStandardCacheWithPartition" }; " is 167.
Long Statement,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryGetResult_Should_Get_Value_If_Reinstantiated,The length of the statement  "            var localCachingStrategy = new StandardCachingStrategyWithPartition<Contact' int' int>(cacheProvider' c => c.ContactTypeId) { CachePrefix = "#RepoStandardCacheWithPartition" }; " is 176.
Long Statement,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_With_Different_QueryOptions_Should_Return_False,The length of the statement  "            CachingStrategy.TryFindAllResult(specification' new SortingOptions<Contact>("Name"' true)' null' out result).ShouldBe(false); " is 125.
Long Statement,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_With_Different_QueryOptions_Should_Return_False,The length of the statement  "            CachingStrategy.TryFindResult(specification' new SortingOptions<Contact>("Name"' true)' null' out result).ShouldBe(false); " is 122.
Long Statement,SharpRepository.Tests.Caching,TimeoutCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\TimeoutCachingStrategyTests.cs,Second_Get_Call_Should_Get_New_Item_From_Cache,The length of the statement  "            var repository = new InMemoryRepository<Contact' int>(new TimeoutCachingStrategy<Contact' int>(10' cacheProvider) { CachePrefix = "#RepoTimeoutCache"}); " is 152.
Long Statement,SharpRepository.Tests.Caching,TimeoutCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\TimeoutCachingStrategyTests.cs,Cache_Should_Timeout,The length of the statement  "            var repository = new InMemoryRepository<Contact' int>(new TimeoutCachingStrategy<Contact' int>(2' cacheProvider) { CachePrefix = "#RepoTimeoutCache" }); " is 152.
Long Statement,SharpRepository.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Configuration\ConfigurationTests.cs,StandardCacheNeedsIocConfiguration,The length of the statement  "                e.InnerException.Message.ShouldBe("RepositoryDependencyResolver.Current must be configured with the instance of IMemoryCache"); " is 127.
Long Statement,SharpRepository.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Configuration\ConfigurationTests.cs,EfCoreRepositoryNeedsIocConfiguration,The length of the statement  "                e.Message.ShouldBe("The EfCore repository Factory gets DbContext or DbContextOptionBuilder from RepositoryDependencyResolver containing the Ioc container passing directly DbContextOptions"); " is 190.
Long Statement,SharpRepository.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Configuration\ConfigurationTests.cs,EfCoreRepositoryFromConfigurationObject,The length of the statement  "            coreRepoconfig.Attributes.Add("dbContextType"' "SharpRepository.Tests.TestObjects.TestObjectContextCore' SharpRepository.Tests"); " is 129.
Long Statement,SharpRepository.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Configuration\ConfigurationTests.cs,EfCoreRepositoryNeedsDbContextType,The length of the statement  "                e.Message.ShouldBe("The DbContextOptions passed to the DbContext constructor must be a DbContextOptions<DbContext>. When registering multiple DbContext types make sure that the constructor for each context type has a DbContextOptions<TContext> parameter rather than a non-generic DbContextOptions parameter."); " is 310.
Long Statement,SharpRepository.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Configuration\ConfigurationTests.cs,LoadEfRepositoryAndCachingFromConfigurationObject,The length of the statement  "            coreRepoconfig.Attributes.Add("dbContextType"' "SharpRepository.Tests.TestObjects.TestObjectContextCore' SharpRepository.Tests"); " is 129.
Long Statement,SharpRepository.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Configuration\ConfigurationTests.cs,LoadEfRepositoryAndCachingFromConfigurationObject,The length of the statement  "            config.AddCachingProvider(new InMemoryCachingProviderConfiguration("inMemoryProvider"' new MemoryCache(new MemoryCacheOptions()))); " is 131.
Long Statement,SharpRepository.Tests.Conventions,RepositoryConventionTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Conventions\DefaultConventionTests.cs,Default_CachePrefix,The length of the statement  "            var repos = new InMemoryRepository.InMemoryRepository<Contact>(new StandardCachingStrategy<Contact' int>(cacheProvider)); " is 121.
Long Statement,SharpRepository.Tests.Conventions,RepositoryConventionTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Conventions\DefaultConventionTests.cs,Change_CachePrefix,The length of the statement  "            var repos = new InMemoryRepository.InMemoryRepository<Contact>(new StandardCachingStrategy<Contact' int>(cacheProvider)); " is 121.
Long Statement,SharpRepository.Tests.Spikes,CacheRepositorySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CacheRepositorySpikes.cs,Initialize,The length of the statement  "            var cachingProviderConfiguration = new InMemoryCachingProviderConfiguration("inmemory"' new MemoryCache(new MemoryCacheOptions())); " is 131.
Long Statement,SharpRepository.Tests.Spikes,CacheRepositorySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CacheRepositorySpikes.cs,Initialize,The length of the statement  "            sharpRepositoryConfiguration.AddRepository(new CacheRepositoryConfiguration("textFilter"'  "TextFilter"' cachingProvider' "standard"' "inmemory")); " is 147.
Empty Catch Block,SharpRepository.Tests.Caching,ClearCacheTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\ClearCacheTests.cs,ClearAllCache_Throws_Exception_WIthout_OutOfBox,The method has an empty catch block.
Empty Catch Block,SharpRepository.Tests.Ioc,DependencyResolverTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Ioc\DependencyResolverTests.cs,No_Ioc_Configuration_Should_Throw_Exception,The method has an empty catch block.
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Predicate_Will_Give_Different_Hash,The following statement contains a magic number: Expression<Func<Contact' bool>> predicate2 = contact => (contact.Name == "test" && contact.ContactId == 2);
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Specification_Param_Will_Give_Different_Hash,The following statement contains a magic number: var spec2 = new Specification<Contact>(p => p.ContactId == 2)                  .And(new Specification<Contact>(p => p.Name.Equals("test")));
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Predicate_With_Variables_Will_Give_Different_Hash,The following statement contains a magic number: contactId = 2;
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Same_Predicate_With_Variable_Array_Will_Give_Same_Hash,The following statement contains a magic number: var contactIds = new List<int>{ 1' 2 };
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Same_Predicate_With_Variable_Array_Will_Give_Same_Hash,The following statement contains a magic number: var contactIds2 = new List<int> { 1' 2 };
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Predicate_With_Variable_Array_Will_Give_Different_Hash,The following statement contains a magic number: var contactIds = new List<int> { 1' 2 };
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Predicate_With_Variable_Array_Will_Give_Different_Hash,The following statement contains a magic number: contactIds = new List<int> { 3' 4 };
Magic Number,SharpRepository.Tests.Caching,HashGeneratorTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\HashGeneratorTests.cs,Different_Predicate_With_Variable_Array_Will_Give_Different_Hash,The following statement contains a magic number: contactIds = new List<int> { 3' 4 };
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_With_Selector_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_With_Selector_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Selector_Should_Use_Cache_After_First_Call,The following statement contains a magic number: var items = repos.FindAll(x => x.ContactId < 3' x => x.Name);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Selector_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Selector_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items = repos.FindAll(x => x.ContactId < 3' x => x.Name);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Selector_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: var items = repos.FindAll(x => x.ContactId < 3);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items = repos.FindAll(x => x.ContactId < 3);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: items.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: repos.Add(new Contact { ContactId = 2' Name = "Test2" });
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: repos.Add(new Contact { ContactId = 3' Name = "Test3" });
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: repos.Add(new Contact { ContactId = 4' Name = "Test4" });
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: var items = repos.FindAll(x => x.ContactId >= 2' x => x.Name' pagingOptions);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: pagingOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: items = repos.FindAll(x => x.ContactId >= 2' x => x.Name' pagingOptions);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteFindAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: pagingOptions.TotalItems.ShouldBe(3);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: repos.Add(new Contact { ContactId = 2' Name = "Test2" });
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: repos.Add(new Contact { ContactId = 3' Name = "Test3" });
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: repos.Add(new Contact { ContactId = 4' Name = "Test4" });
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: pagingOptions.TotalItems.ShouldBe(4);
Magic Number,SharpRepository.Tests.Caching,InMemoryCachingTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\InMemoryCachingTests.cs,ExecuteGetAll_With_Paging_Should_Save_TotalItems_In_Cache,The following statement contains a magic number: pagingOptions.TotalItems.ShouldBe(4);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFindAll_Should_Not_Use_Cache,The following statement contains a magic number: QueryManager.ExecuteFindAll(FakeGetAll' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFindAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFindAll(FakeGetAll' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFindAll_Should_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFindAll(FakeGetAll' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFindAll_Cache_Disabled_Should_Not_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFindAll(FakeGetAll' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFindAll_Cache_Disabled_Should_Not_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFindAll(FakeGetAll' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFind_Should_Not_Use_Cache,The following statement contains a magic number: QueryManager.ExecuteFind(FakeGet' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFind_Should_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFind(FakeGet' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFind_Should_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFind(FakeGet' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFind_Cache_Disabled_Should_Not_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFind(FakeGet' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,QueryManagerTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\QueryManagerTests.cs,ExecuteFind_Cache_Disabled_Should_Not_Use_Cache_After_First_Call,The following statement contains a magic number: QueryManager.ExecuteFind(FakeGet' new Specification<Contact>(c => c.ContactId < 10)' null' null);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Add_To_Partition_Should_Return_False,The following statement contains a magic number: var contact2 = new Contact() {ContactId = 2' Name = "Test User 2"' ContactTypeId = 1};
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Add_To_Partition_Should_Return_False,The following statement contains a magic number: CachingStrategy.Add(2' contact2);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Add_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Add_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Add_To_Different_Partition_Should_Return_True,The following statement contains a magic number: CachingStrategy.Add(2' contact2);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Update_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Update_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Update_To_Different_Partition_Should_Return_True,The following statement contains a magic number: CachingStrategy.Update(2' contact2);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Delete_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Delete_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindResult_After_Delete_To_Different_Partition_Should_Return_True,The following statement contains a magic number: CachingStrategy.Delete(2' contact2);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Add_To_Partition_Should_Return_False,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 1 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Add_To_Partition_Should_Return_False,The following statement contains a magic number: CachingStrategy.Add(2' contact2);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Add_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Add_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Add_To_Different_Partition_Should_Return_True,The following statement contains a magic number: CachingStrategy.Add(2' contact2);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Update_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Update_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Update_To_Different_Partition_Should_Return_True,The following statement contains a magic number: CachingStrategy.Update(2' contact2);
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Delete_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Delete_To_Different_Partition_Should_Return_True,The following statement contains a magic number: var contact2 = new Contact() { ContactId = 2' Name = "Test User 2"' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Caching,StandardCachingWithPartitionStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\StandardCachingWithPartitionStrategyTests.cs,TryFindAllResult_After_Delete_To_Different_Partition_Should_Return_True,The following statement contains a magic number: CachingStrategy.Delete(2' contact2);
Magic Number,SharpRepository.Tests.Caching,TimeoutCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\TimeoutCachingStrategyTests.cs,Second_Get_Call_Should_Get_New_Item_From_Cache,The following statement contains a magic number: var repository = new InMemoryRepository<Contact' int>(new TimeoutCachingStrategy<Contact' int>(10' cacheProvider) { CachePrefix = "#RepoTimeoutCache"});
Magic Number,SharpRepository.Tests.Caching,TimeoutCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\TimeoutCachingStrategyTests.cs,Cache_Should_Timeout,The following statement contains a magic number: var repository = new InMemoryRepository<Contact' int>(new TimeoutCachingStrategy<Contact' int>(2' cacheProvider) { CachePrefix = "#RepoTimeoutCache" });
Magic Number,SharpRepository.Tests.Caching,TimeoutCachingStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Caching\TimeoutCachingStrategyTests.cs,Cache_Should_Timeout,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,SharpRepository.Tests.Configuration,ConfigurationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Configuration\ConfigurationTests.cs,LoadEfRepositoryAndCachingFromConfigurationObject,The following statement contains a magic number: config.AddCachingStrategy(new TimeoutCachingStrategyConfiguration("timeout"' 200));
Magic Number,SharpRepository.Tests.FetchStrategies,FetchStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\FetchStrategies\FetchStrategyTests.cs,FetchStrategy_May_Include_Multiple_References,The following statement contains a magic number: strategy.IncludePaths.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.FetchStrategies,FetchStrategyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\FetchStrategies\FetchStrategyTests.cs,FetchStrategy_May_Include_String_Property_Names,The following statement contains a magic number: strategy.IncludePaths.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.PrimaryKey,EfCorePrimaryKeyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\PrimaryKey\EfCorePrimaryKeyTests.cs,Should_Return_Some_Another_Last_Id_Property,The following statement contains a magic number: propInfo[2].PropertyType.ShouldBe(typeof(int));
Magic Number,SharpRepository.Tests.PrimaryKey,EfCorePrimaryKeyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\PrimaryKey\EfCorePrimaryKeyTests.cs,Should_Return_Some_Another_Last_Id_Property,The following statement contains a magic number: propInfo[2].Name.ShouldBe("LastId");
Magic Number,SharpRepository.Tests.PrimaryKey,EfPrimaryKeyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\PrimaryKey\EfPrimaryKeyTests.cs,Should_Return_KeyInt1_2_3_Property,The following statement contains a magic number: propInfo[2].PropertyType.ShouldBe(typeof(int));
Magic Number,SharpRepository.Tests.PrimaryKey,EfPrimaryKeyTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\PrimaryKey\EfPrimaryKeyTests.cs,Should_Return_KeyInt1_2_3_Property,The following statement contains a magic number: propInfo[2].Name.ShouldBe("KeyInt3");
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_PageNumber_Will_Be_Set_In_Constructor,The following statement contains a magic number: new PagingOptions<Contact>(1' 10' "Name").PageNumber.ShouldBe(1);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_PageNumber_Will_Be_Set_In_Constructor,The following statement contains a magic number: new PagingOptions<Contact' string>(1' 10' m => m.Name).PageNumber.ShouldBe(1);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_PageSize_Will_Be_Set_In_Constructor,The following statement contains a magic number: new PagingOptions<Contact>(1' 10' "Name").PageSize.ShouldBe(10);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_PageSize_Will_Be_Set_In_Constructor,The following statement contains a magic number: new PagingOptions<Contact>(1' 10' "Name").PageSize.ShouldBe(10);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_PageSize_Will_Be_Set_In_Constructor,The following statement contains a magic number: new PagingOptions<Contact' string>(1' 10' m => m.Name).PageSize.ShouldBe(10);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_PageSize_Will_Be_Set_In_Constructor,The following statement contains a magic number: new PagingOptions<Contact' string>(1' 10' m => m.Name).PageSize.ShouldBe(10);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems,The following statement contains a magic number: qo.TotalItems.ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems,The following statement contains a magic number: qo2.TotalItems.ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page,The following statement contains a magic number: queryable.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page,The following statement contains a magic number: queryable.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems_With_Multiple_Sort,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems_With_Multiple_Sort,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems_With_Multiple_Sort,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems_With_Multiple_Sort,The following statement contains a magic number: qo.TotalItems.ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Will_Set_TotalItems_With_Multiple_Sort,The following statement contains a magic number: qo2.TotalItems.ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page_With_Multiple_Sort,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + (i % 2)' ContactTypeId = i});
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page_With_Multiple_Sort,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page_With_Multiple_Sort,The following statement contains a magic number: const int resultingPage = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page_With_Multiple_Sort,The following statement contains a magic number: const int pageSize = 2;
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page_With_Multiple_Sort,The following statement contains a magic number: queryable.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,PagingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\PagingOptionsTests.cs,PagingOptions_Apply_Return_Requested_Page_With_Multiple_Sort,The following statement contains a magic number: queryable.Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortProperty_Asc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortProperty_Desc,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortProperty_Desc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_Multiple_Sorting_Properties,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + (i % 2)'ContactTypeId = i});
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_Multiple_Sorting_Properties,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_Multiple_Sorting_Properties,The following statement contains a magic number: contact.ContactTypeId.ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_String_And_Expression_Properties,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + (i % 2)' ContactTypeId = i });
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_String_And_Expression_Properties,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_String_And_Expression_Properties,The following statement contains a magic number: contact.ContactTypeId.ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Asc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Desc,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Desc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_SortExpression_And_String_Properties,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + (i % 2)'ContactTypeId = i});
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_SortExpression_And_String_Properties,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_SortExpression_And_String_Properties,The following statement contains a magic number: contact.ContactTypeId.ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_Multiple_SortExpression_Properties,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + (i % 2)' ContactTypeId = i });
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_Multiple_SortExpression_Properties,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_With_Multiple_SortExpression_Properties,The following statement contains a magic number: contact.ContactTypeId.ShouldBe(2);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Multiple_Deep_Asc,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + i' ContactType = new ContactType { Name = "Type " + (5 - i)} });
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Multiple_Deep_Asc,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Multiple_Deep_Asc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Multiple_Deep_Desc,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + i' ContactType = new ContactType { Name = "Type " + (5 - i)} });
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Multiple_Deep_Desc,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_SortExpression_Multiple_Deep_Desc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_Multiple_Deep_SortProperty_Asc,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + i' ContactType = new ContactType { Name = "Type " + (5 - i) } });
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_Multiple_Deep_SortProperty_Asc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_Multiple_Deep_SortProperty_Desc,The following statement contains a magic number: contacts.Add(new Contact { Name = "Test User " + i' ContactType = new ContactType { Name = "Type " + (5 - i) } });
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_Multiple_Deep_SortProperty_Desc,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.QueryOptions,SortingOptionsTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\QueryOptions\SortingOptionsTests.cs,SortingOptions_Will_Sort_By_Multiple_Deep_SortProperty_Desc,The following statement contains a magic number: queryable.Count().ShouldBe(5);
Magic Number,SharpRepository.Tests.Specifications,SpecificationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Specifications\SpecificationTests.cs,Specification_May_Be_Chained_By_And,The following statement contains a magic number: contact = new Contact() { ContactId = 2' Name = "test" };
Magic Number,SharpRepository.Tests.Specifications,SpecificationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Specifications\SpecificationTests.cs,Specification_May_Be_Chained_By_Or,The following statement contains a magic number: contact = new Contact() { ContactId = 2' Name = "test" };
Magic Number,SharpRepository.Tests.Specifications,SpecificationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Specifications\SpecificationTests.cs,Specification_May_Be_Chained_By_Or,The following statement contains a magic number: contact = new Contact() { ContactId = 2' Name = "nottest" };
Magic Number,SharpRepository.Tests.Specifications,SpecificationTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Specifications\SpecificationTests.cs,Specification_Predicate_May_Be_Updated_In_Constructor,The following statement contains a magic number: contact = new Contact() { ContactId = 2' Name = "test" };
Magic Number,SharpRepository.Tests.Spikes,BatchSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\BatchSpike.cs,Repository_Should_BeginBatch,The following statement contains a magic number: repository.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Spikes,CacheEnabledSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CacheEnabledSpike.cs,CachingEnabled_Should_Be_True_With_TimeoutCachingStrategy,The following statement contains a magic number: var repository = new InMemoryRepository<Contact' Int32>(new TimeoutCachingStrategy<Contact' int>(60' cacheProvider));
Magic Number,SharpRepository.Tests.Spikes,CacheEnabledSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CacheEnabledSpike.cs,CachingEnabled_Should_Be_True_When_CachingStrategy_Is_Changed_From_NoCachingStrategy,The following statement contains a magic number: repository.CachingStrategy = new TimeoutCachingStrategy<Contact' int>(60' cacheProvider);
Magic Number,SharpRepository.Tests.Spikes,CacheEnabledSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CacheEnabledSpike.cs,CachingEnabled_Should_Be_False_When_CachingStrategy_Is_Changed_To_NoCachingStrategy,The following statement contains a magic number: var repository = new InMemoryRepository<Contact' Int32>(new TimeoutCachingStrategy<Contact' int>(60' cacheProvider));
Magic Number,SharpRepository.Tests.Spikes,CacheRepositorySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CacheRepositorySpikes.cs,Add_Multiple_Should_Work,The following statement contains a magic number: _repository.GetAll().Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Spikes,CacheRepositorySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CacheRepositorySpikes.cs,Add_Multiple_Should_Work2,The following statement contains a magic number: _repository.GetAll().Count().ShouldBe(2);
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 1' AnotherId = 2' Title = "1-2"});
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 1' AnotherId = 3' Title = "1-3"});
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 1' Title = "2-1"});
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 2' Title = "2-2"});
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 2' Title = "2-2"});
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 3' Title = "2-3"});
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 3' Title = "2-3"});
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get(2' 1).Title.ShouldBe("2-1");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get(1' 2).Title.ShouldBe("1-2");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.SomeId == 1).Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 1' AnotherId = 2' Title = "1-2" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 1' AnotherId = 3' Title = "1-3" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 1' Title = "2-1" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 2' Title = "2-2" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 2' Title = "2-2" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 3' Title = "2-3" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new CompoundKeyItemInts { SomeId = 2' AnotherId = 3' Title = "2-3" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get(2' 1).Title.ShouldBe("2-1");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get(1' 2).Title.ShouldBe("1-2");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,CompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.SomeId == 1).Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 1' LastId = 10' Title = "1-1-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 2' LastId = 11' Title = "1-2-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 2' LastId = 11' Title = "1-2-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 3' LastId = 10' Title = "1-3-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 3' LastId = 10' Title = "1-3-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 1' LastId = 11' Title = "2-1-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 1' LastId = 11' Title = "2-1-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 2' LastId = 10' Title = "2-2-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 2' LastId = 10' Title = "2-2-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 2' LastId = 10' Title = "2-2-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 3' LastId = 11' Title = "2-3-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 3' LastId = 11' Title = "2-3-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 3' LastId = 11' Title = "2-3-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get(1' 1' 10).Title.ShouldBe("1-1-10");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get(2' 1' 11).Title.ShouldBe("2-1-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get(2' 1' 11).Title.ShouldBe("2-1-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get(1' 2' 11).Title.ShouldBe("1-2-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.Get(1' 2' 11).Title.ShouldBe("1-2-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.LastId == 11).Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepository_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.LastId == 11).Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 1' LastId = 10' Title = "1-1-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 2' LastId = 11' Title = "1-2-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 2' LastId = 11' Title = "1-2-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 3' LastId = 10' Title = "1-3-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 1' AnotherId = 3' LastId = 10' Title = "1-3-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 1' LastId = 11' Title = "2-1-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 1' LastId = 11' Title = "2-1-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 2' LastId = 10' Title = "2-2-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 2' LastId = 10' Title = "2-2-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 2' LastId = 10' Title = "2-2-10" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 3' LastId = 11' Title = "2-3-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 3' LastId = 11' Title = "2-3-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Add(new TripleCompoundKeyItemInts { SomeId = 2' AnotherId = 3' LastId = 11' Title = "2-3-11" });
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get(1' 1' 10).Title.ShouldBe("1-1-10");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get(2' 1' 11).Title.ShouldBe("2-1-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get(2' 1' 11).Title.ShouldBe("2-1-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get(1' 2' 11).Title.ShouldBe("1-2-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.Get(1' 2' 11).Title.ShouldBe("1-2-11");
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.LastId == 11).Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Spikes,CompoundKeySpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\CompoundKeySpikes.cs,TripleCompoundKeyRepositoryNoGenerics_Should_Work,The following statement contains a magic number: repository.FindAll(x => x.LastId == 11).Count().ShouldBe(3);
Magic Number,SharpRepository.Tests.Spikes,ExpressionParsingSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\ExpressionParsingSpike.cs,Get_Entity_Partition_Value,The following statement contains a magic number: var contact2 = new Contact { ContactId = 1' ContactTypeId = 2 };
Magic Number,SharpRepository.Tests.Spikes,ExpressionParsingSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\ExpressionParsingSpike.cs,Get_Entity_Partition_Value,The following statement contains a magic number: contactId.ShouldBe(2);
Magic Number,SharpRepository.Tests.Spikes,ExpressionParsingSpike,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\ExpressionParsingSpike.cs,Partition_Column_Used_More_Than_Once_Should_Not_Match,The following statement contains a magic number: var spec = new Specification<Contact>(contact => (contact.ContactTypeId == 1 || contactId == 2));
Magic Number,SharpRepository.Tests.Spikes,LoggingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\LoggingSpikes.cs,Logging_Via_Aspects,The following statement contains a magic number: repository.Delete(2);
Magic Number,SharpRepository.Tests.Spikes,LoggingSpikes,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Spikes\LoggingSpikes.cs,Logging_Via_Aspects,The following statement contains a magic number: repository.FindAll(x => x.ContactId < 50);
Magic Number,SharpRepository.Tests.TestObjects,SpecificAuditAttribute,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\TestObjects\AuditAttributeMock.cs,OnGetExecuted,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,SharpRepository.Tests.Traits,ICanGetTraitTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Traits\ICanGetTraitTests.cs,ICanGet_Exposes_GetAll,The following statement contains a magic number: i <= 5
Magic Number,SharpRepository.Tests.Traits,ICanGetTraitTests,D:\research\architectureSmells\repos1\SharpRepository_SharpRepository\SharpRepository.Tests\Traits\ICanGetTraitTests.cs,ICanGet_Exposes_GetAll,The following statement contains a magic number: result.Count().ShouldBe(5);
