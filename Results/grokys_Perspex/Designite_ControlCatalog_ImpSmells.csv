Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ControlCatalog.Pages,CarouselPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CarouselPage.xaml.cs,TransitionChanged,The length of the statement  "                    _carousel.Transition = new PageSlide(TimeSpan.FromSeconds(0.25)' _orientation.SelectedIndex == 0 ? PageSlide.SlideAxis.Horizontal : PageSlide.SlideAxis.Vertical); " is 162.
Long Statement,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The length of the statement  "                    Rect boundsRect = new Rect(screen.Bounds.X / 10f + Math.Abs(_leftMost)' screen.Bounds.Y / 10f' screen.Bounds.Width / 10f' " is 121.
Long Statement,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The length of the statement  "                    Rect workingAreaRect = new Rect(screen.WorkingArea.X / 10f + Math.Abs(_leftMost)' screen.WorkingArea.Y / 10f' screen.WorkingArea.Width / 10f' " is 141.
Long Statement,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The length of the statement  "            context.DrawRectangle(p' new Rect(w.Position.X / 10f + Math.Abs(_leftMost)' w.Position.Y / 10' w.Bounds.Width / 10' w.Bounds.Height / 10)); " is 139.
Magic Number,ControlCatalog.Pages,CalendarPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: cal1.DisplayDateStart = today.AddDays(-25);
Magic Number,ControlCatalog.Pages,CalendarPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: cal1.DisplayDateEnd = today.AddDays(25);
Magic Number,ControlCatalog.Pages,CalendarPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: cal2.BlackoutDates.Add(new CalendarDateRange(today.AddDays(6)));
Magic Number,ControlCatalog.Pages,CarouselPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CarouselPage.xaml.cs,TransitionChanged,The following statement contains a magic number: switch (_transition.SelectedIndex)              {                  case 0:                      _carousel.Transition = null;                      break;                  case 1:                      _carousel.Transition = new PageSlide(TimeSpan.FromSeconds(0.25)' _orientation.SelectedIndex == 0 ? PageSlide.SlideAxis.Horizontal : PageSlide.SlideAxis.Vertical);                      break;                  case 2:                      _carousel.Transition = new CrossFade(TimeSpan.FromSeconds(0.25));                      break;              }
Magic Number,ControlCatalog.Pages,CarouselPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CarouselPage.xaml.cs,TransitionChanged,The following statement contains a magic number: switch (_transition.SelectedIndex)              {                  case 0:                      _carousel.Transition = null;                      break;                  case 1:                      _carousel.Transition = new PageSlide(TimeSpan.FromSeconds(0.25)' _orientation.SelectedIndex == 0 ? PageSlide.SlideAxis.Horizontal : PageSlide.SlideAxis.Vertical);                      break;                  case 2:                      _carousel.Transition = new CrossFade(TimeSpan.FromSeconds(0.25));                      break;              }
Magic Number,ControlCatalog.Pages,CarouselPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CarouselPage.xaml.cs,TransitionChanged,The following statement contains a magic number: switch (_transition.SelectedIndex)              {                  case 0:                      _carousel.Transition = null;                      break;                  case 1:                      _carousel.Transition = new PageSlide(TimeSpan.FromSeconds(0.25)' _orientation.SelectedIndex == 0 ? PageSlide.SlideAxis.Horizontal : PageSlide.SlideAxis.Vertical);                      break;                  case 2:                      _carousel.Transition = new CrossFade(TimeSpan.FromSeconds(0.25));                      break;              }
Magic Number,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The following statement contains a magic number: if (screens != null)                  foreach (Screen screen in screens)                  {                      if (screen.Bounds.X / 10f < _leftMost)                      {                          _leftMost = screen.Bounds.X / 10f;                          InvalidateVisual();                          return;                      }                        Rect boundsRect = new Rect(screen.Bounds.X / 10f + Math.Abs(_leftMost)' screen.Bounds.Y / 10f' screen.Bounds.Width / 10f'                                        screen.Bounds.Height / 10f);                      Rect workingAreaRect = new Rect(screen.WorkingArea.X / 10f + Math.Abs(_leftMost)' screen.WorkingArea.Y / 10f' screen.WorkingArea.Width / 10f'                                         screen.WorkingArea.Height / 10f);                      context.DrawRectangle(p' boundsRect);                      context.DrawRectangle(p' workingAreaRect);                                            FormattedText text = new FormattedText();                      text.Text = $"Bounds: {screen.Bounds.Width}:{screen.Bounds.Height}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height)' text);                                            text.Text = $"WorkArea: {screen.WorkingArea.Width}:{screen.WorkingArea.Height}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 20)' text);                                            text.Text = $"Primary: {screen.Primary}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 40)' text);                                            text.Text = $"Current: {screen.Equals(w.Screens.ScreenFromBounds(new Rect(w.Position' w.Bounds.Size)))}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 60)' text);                  }
Magic Number,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The following statement contains a magic number: if (screens != null)                  foreach (Screen screen in screens)                  {                      if (screen.Bounds.X / 10f < _leftMost)                      {                          _leftMost = screen.Bounds.X / 10f;                          InvalidateVisual();                          return;                      }                        Rect boundsRect = new Rect(screen.Bounds.X / 10f + Math.Abs(_leftMost)' screen.Bounds.Y / 10f' screen.Bounds.Width / 10f'                                        screen.Bounds.Height / 10f);                      Rect workingAreaRect = new Rect(screen.WorkingArea.X / 10f + Math.Abs(_leftMost)' screen.WorkingArea.Y / 10f' screen.WorkingArea.Width / 10f'                                         screen.WorkingArea.Height / 10f);                      context.DrawRectangle(p' boundsRect);                      context.DrawRectangle(p' workingAreaRect);                                            FormattedText text = new FormattedText();                      text.Text = $"Bounds: {screen.Bounds.Width}:{screen.Bounds.Height}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height)' text);                                            text.Text = $"WorkArea: {screen.WorkingArea.Width}:{screen.WorkingArea.Height}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 20)' text);                                            text.Text = $"Primary: {screen.Primary}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 40)' text);                                            text.Text = $"Current: {screen.Equals(w.Screens.ScreenFromBounds(new Rect(w.Position' w.Bounds.Size)))}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 60)' text);                  }
Magic Number,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The following statement contains a magic number: if (screens != null)                  foreach (Screen screen in screens)                  {                      if (screen.Bounds.X / 10f < _leftMost)                      {                          _leftMost = screen.Bounds.X / 10f;                          InvalidateVisual();                          return;                      }                        Rect boundsRect = new Rect(screen.Bounds.X / 10f + Math.Abs(_leftMost)' screen.Bounds.Y / 10f' screen.Bounds.Width / 10f'                                        screen.Bounds.Height / 10f);                      Rect workingAreaRect = new Rect(screen.WorkingArea.X / 10f + Math.Abs(_leftMost)' screen.WorkingArea.Y / 10f' screen.WorkingArea.Width / 10f'                                         screen.WorkingArea.Height / 10f);                      context.DrawRectangle(p' boundsRect);                      context.DrawRectangle(p' workingAreaRect);                                            FormattedText text = new FormattedText();                      text.Text = $"Bounds: {screen.Bounds.Width}:{screen.Bounds.Height}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height)' text);                                            text.Text = $"WorkArea: {screen.WorkingArea.Width}:{screen.WorkingArea.Height}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 20)' text);                                            text.Text = $"Primary: {screen.Primary}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 40)' text);                                            text.Text = $"Current: {screen.Equals(w.Screens.ScreenFromBounds(new Rect(w.Position' w.Bounds.Size)))}";                      context.DrawText(Brushes.Black' boundsRect.Position.WithY(boundsRect.Size.Height + 60)' text);                  }
Magic Number,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The following statement contains a magic number: context.DrawRectangle(p' new Rect(w.Position.X / 10f + Math.Abs(_leftMost)' w.Position.Y / 10' w.Bounds.Width / 10' w.Bounds.Height / 10));
Magic Number,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The following statement contains a magic number: context.DrawRectangle(p' new Rect(w.Position.X / 10f + Math.Abs(_leftMost)' w.Position.Y / 10' w.Bounds.Width / 10' w.Bounds.Height / 10));
Magic Number,ControlCatalog.Pages,ScreenPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\ScreenPage.cs,Render,The following statement contains a magic number: context.DrawRectangle(p' new Rect(w.Position.X / 10f + Math.Abs(_leftMost)' w.Position.Y / 10' w.Bounds.Width / 10' w.Bounds.Height / 10));
Missing Default,ControlCatalog.Pages,CarouselPage,C:\repos\grokys_Perspex\samples\ControlCatalog\Pages\CarouselPage.xaml.cs,TransitionChanged,The following switch statement is missing a default case: switch (_transition.SelectedIndex)              {                  case 0:                      _carousel.Transition = null;                      break;                  case 1:                      _carousel.Transition = new PageSlide(TimeSpan.FromSeconds(0.25)' _orientation.SelectedIndex == 0 ? PageSlide.SlideAxis.Horizontal : PageSlide.SlideAxis.Vertical);                      break;                  case 2:                      _carousel.Transition = new CrossFade(TimeSpan.FromSeconds(0.25));                      break;              }
