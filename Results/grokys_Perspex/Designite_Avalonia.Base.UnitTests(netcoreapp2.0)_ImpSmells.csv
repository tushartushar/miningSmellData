Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Setting_Validated_Direct_Property_Calls_UpdateDataValidation,The length of the statement  "            target.SetValue(Class1.ValidatedDirectIntProperty' new BindingNotification(new Exception()' BindingErrorType.DataValidationError)); " is 131.
Long Statement,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Property,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Property.cs,Should_Return_BindingNotification_Error_For_Observable_Root_UnsetValue,The length of the statement  "            var target = ExpressionObserver.Create<object' string>(Observable.Return(AvaloniaProperty.UnsetValue)' o => (o as Class3).Foo); " is 127.
Long Statement,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Property,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Property.cs,Should_Track_Property_Chain_Breaking_With_Missing_Member_Then_Mending,The length of the statement  "                        new MissingMemberException("Could not find CLR property 'Bar' on 'Avalonia.Base.UnitTests.Data.Core.ExpressionObserverTests_Property+WithoutBar'")' " is 147.
Long Statement,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The length of the statement  "                new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)' " is 123.
Long Statement,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The length of the statement  "                new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)' " is 123.
Complex Conditional,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,Binding_To_Direct_Property_Logs_BindingError,The conditional expression  "level == LogEventLevel.Warning &&                      area == LogArea.Binding &&                      mt == "Error in binding to {Target}.{Property}: {Message}" &&                      pv.Length == 3 &&                      pv[0] is Class1 &&                      object.ReferenceEquals(pv[1]' Class1.FooProperty) &&                      (string)pv[2] == "Binding Error Message""  is complex.
Magic Number,Avalonia.Base.UnitTests,Class1,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AttachedPropertyTests.cs,Class1,The following statement contains a magic number: MaxQux = 10;
Magic Number,Avalonia.Base.UnitTests,Class1,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AttachedPropertyTests.cs,Class1,The following statement contains a magic number: ErrorQux = 20;
Magic Number,Avalonia.Base.UnitTests,Class1,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AttachedPropertyTests.cs,Validate,The following statement contains a magic number: return Math.Min(value' 10);
Magic Number,Avalonia.Base.UnitTests,Class2,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_AddOwner.cs,Validate,The following statement contains a magic number: value < 100
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,Bind_To_ValueType_Accepts_UnsetValue,The following statement contains a magic number: source.OnNext(6.7);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,Bind_To_ValueType_Accepts_UnsetValue,The following statement contains a magic number: Assert.Equal(5.6' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,OneTime_Binding_Ignores_UnsetValue,The following statement contains a magic number: Assert.Equal(5.6' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,OneTime_Binding_Ignores_UnsetValue,The following statement contains a magic number: source.OnNext(6.7);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,OneTime_Binding_Ignores_UnsetValue,The following statement contains a magic number: Assert.Equal(6.7' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,OneTime_Binding_Ignores_Binding_Errors,The following statement contains a magic number: Assert.Equal(5.6' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,OneTime_Binding_Ignores_Binding_Errors,The following statement contains a magic number: source.OnNext(6.7);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,OneTime_Binding_Ignores_Binding_Errors,The following statement contains a magic number: Assert.Equal(6.7' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,Bind_Ignores_Invalid_Value_Type,The following statement contains a magic number: target.Bind((AvaloniaProperty)Class1.FooProperty' Observable.Return((object)123));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,BindingError_Does_Not_Cause_Target_Update,The following statement contains a magic number: source.OnNext(6.7);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,BindingError_Does_Not_Cause_Target_Update,The following statement contains a magic number: Assert.Equal(5.6' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,BindingNotification_With_FallbackValue_Causes_Target_Update,The following statement contains a magic number: source.OnNext(6.7);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,BindingNotification_With_FallbackValue_Causes_Target_Update,The following statement contains a magic number: source.OnNext(new BindingNotification(                  new InvalidOperationException("Foo")'                  BindingErrorType.Error'                  8.9));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,BindingNotification_With_FallbackValue_Causes_Target_Update,The following statement contains a magic number: Assert.Equal(8.9' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,Bind_Logs_Binding_Error,The following statement contains a magic number: source.OnNext(6.7);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,Bind_Logs_Binding_Error,The following statement contains a magic number: Assert.Equal(5.6' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,Bind_With_Scheduler_Executes_On_Scheduler,The following statement contains a magic number: await Task.Run(() => source.OnNext(6.7));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: var viewModel = new TestStackOverflowViewModel()              {                  Value = 50              };
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: target.DoubleValue = 51.001;
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: Assert.Equal(2' viewModel.SetterInvokedCount);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Binding,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Binding.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: double expected = 51;
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Setting_Non_Validated_Property_Does_Not_Call_UpdateDataValidation,The following statement contains a magic number: target.SetValue(Class1.NonValidatedDirectProperty' 6);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Setting_Non_Validated_Direct_Property_Does_Not_Call_UpdateDataValidation,The following statement contains a magic number: target.SetValue(Class1.NonValidatedDirectProperty' 6);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Setting_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: target.SetValue(Class1.ValidatedDirectIntProperty' new BindingNotification(6));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Setting_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: target.SetValue(Class1.ValidatedDirectIntProperty' new BindingNotification(7));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Setting_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: Assert.Equal(                  new[]                  {                      new BindingNotification(6)'                      new BindingNotification(new Exception()' BindingErrorType.Error)'                      new BindingNotification(new Exception()' BindingErrorType.DataValidationError)'                      new BindingNotification(7)'                  }'                  target.Notifications.AsEnumerable());
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Setting_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: Assert.Equal(                  new[]                  {                      new BindingNotification(6)'                      new BindingNotification(new Exception()' BindingErrorType.Error)'                      new BindingNotification(new Exception()' BindingErrorType.DataValidationError)'                      new BindingNotification(7)'                  }'                  target.Notifications.AsEnumerable());
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Binding_Non_Validated_Property_Does_Not_Call_UpdateDataValidation,The following statement contains a magic number: source.OnNext(new BindingNotification(6));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Binding_Non_Validated_Property_Does_Not_Call_UpdateDataValidation,The following statement contains a magic number: source.OnNext(new BindingNotification(7));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Binding_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: source.OnNext(new BindingNotification(6));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Binding_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: source.OnNext(new BindingNotification(7));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Binding_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: Assert.Equal(                  new[]                  {                      new BindingNotification(6)'                      new BindingNotification(new Exception()' BindingErrorType.Error)'                      new BindingNotification(new Exception()' BindingErrorType.DataValidationError)'                      new BindingNotification(7)'                  }'                  target.Notifications.AsEnumerable());
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_DataValidation.cs,Binding_Validated_Direct_Property_Calls_UpdateDataValidation,The following statement contains a magic number: Assert.Equal(                  new[]                  {                      new BindingNotification(6)'                      new BindingNotification(new Exception()' BindingErrorType.Error)'                      new BindingNotification(new Exception()' BindingErrorType.DataValidationError)'                      new BindingNotification(7)'                  }'                  target.Notifications.AsEnumerable());
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,Bind_NonGeneric_Uses_UnsetValue,The following statement contains a magic number: Assert.Equal(5' target.Baz);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,Bind_NonGeneric_Uses_UnsetValue,The following statement contains a magic number: source.OnNext(6);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,Bind_NonGeneric_Uses_UnsetValue,The following statement contains a magic number: Assert.Equal(6' target.Baz);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,Bind_Handles_Wrong_Type,The following statement contains a magic number: source.OnNext(45);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,Binding_To_Direct_Property_Logs_BindingError,The following statement contains a magic number: LogCallback checkLogMessage = (level' area' src' mt' pv) =>              {                  if (level == LogEventLevel.Warning &&                      area == LogArea.Binding &&                      mt == "Error in binding to {Target}.{Property}: {Message}" &&                      pv.Length == 3 &&                      pv[0] is Class1 &&                      object.ReferenceEquals(pv[1]' Class1.FooProperty) &&                      (string)pv[2] == "Binding Error Message")                  {                      called = true;                  }              };
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,Binding_To_Direct_Property_Logs_BindingError,The following statement contains a magic number: LogCallback checkLogMessage = (level' area' src' mt' pv) =>              {                  if (level == LogEventLevel.Warning &&                      area == LogArea.Binding &&                      mt == "Error in binding to {Target}.{Property}: {Message}" &&                      pv.Length == 3 &&                      pv[0] is Class1 &&                      object.ReferenceEquals(pv[1]' Class1.FooProperty) &&                      (string)pv[2] == "Binding Error Message")                  {                      called = true;                  }              };
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: var viewModel = new TestStackOverflowViewModel()              {                  Value = 50              };
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: target.DoubleValue = 51.001;
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: Assert.Equal(2' viewModel.SetterInvokedCount);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Direct,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Direct.cs,SetValue_Should_Not_Cause_StackOverflow_And_Have_Correct_Values,The following statement contains a magic number: double expected = 51;
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_SetValue,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_SetValue.cs,SetValue_Throws_Exception_For_Invalid_Value_Type,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  target.SetValue(Class1.FooProperty' 123);              });
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_SetValue,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_SetValue.cs,SetValue_Of_Integer_On_Double_Property_Works,The following statement contains a magic number: target.SetValue((AvaloniaProperty)Class2.FlobProperty' 4);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_SetValue,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_SetValue.cs,SetValue_Of_Integer_On_Double_Property_Works,The following statement contains a magic number: Assert.Equal(4' value);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_SetValue,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_SetValue.cs,SetValue_Respects_Implicit_Conversions,The following statement contains a magic number: target.SetValue((AvaloniaProperty)Class2.FlobProperty' new ImplictDouble(4));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_SetValue,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_SetValue.cs,SetValue_Respects_Implicit_Conversions,The following statement contains a magic number: Assert.Equal(4' value);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_SetValue,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_SetValue.cs,SetValue_Can_Convert_To_Nullable,The following statement contains a magic number: target.SetValue((AvaloniaProperty)Class2.FredProperty' 4.0);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_SetValue,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_SetValue.cs,SetValue_Can_Convert_To_Nullable,The following statement contains a magic number: Assert.Equal(4' value);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Validation,The following statement contains a magic number: target.SetValue(Class1.QuxProperty' 5);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Validation,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => target.SetValue(Class1.QuxProperty' 25));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Validation,The following statement contains a magic number: Assert.Equal(5' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Coercion,The following statement contains a magic number: target.SetValue(Class1.QuxProperty' 5);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Coercion,The following statement contains a magic number: Assert.Equal(5' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Coercion,The following statement contains a magic number: target.SetValue(Class1.QuxProperty' -5);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Coercion,The following statement contains a magic number: target.SetValue(Class1.QuxProperty' 15);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,SetValue_Causes_Coercion,The following statement contains a magic number: Assert.Equal(10' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Revalidate_Causes_Recoercion,The following statement contains a magic number: target.SetValue(Class1.QuxProperty' 7);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Revalidate_Causes_Recoercion,The following statement contains a magic number: Assert.Equal(7' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Revalidate_Causes_Recoercion,The following statement contains a magic number: target.MaxQux = 5;
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Validation_Can_Be_Overridden,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => target.SetValue(Class1.QuxProperty' 5));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Validation_Can_Be_Overridden_With_Null,The following statement contains a magic number: target.SetValue(Class1.QuxProperty' 50);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Validation_Can_Be_Overridden_With_Null,The following statement contains a magic number: Assert.Equal(50' target.GetValue(Class1.QuxProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Attached_Property_Should_Be_Validated,The following statement contains a magic number: target.SetValue(Class1.AttachedProperty' 15);
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,Attached_Property_Should_Be_Validated,The following statement contains a magic number: Assert.Equal(10' target.GetValue(Class1.AttachedProperty));
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,PropertyChanged_Event_Uses_Coerced_Value,The following statement contains a magic number: inst.PropertyChanged += (sender' e) =>              {                  Assert.Equal(10' e.NewValue);              };
Magic Number,Avalonia.Base.UnitTests,AvaloniaObjectTests_Validation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\AvaloniaObjectTests_Validation.cs,PropertyChanged_Event_Uses_Coerced_Value,The following statement contains a magic number: inst.SetValue(Class1.QuxProperty' 15);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Disposing_A_Binding_Should_Remove_BindingEntry,The following statement contains a magic number: Assert.Equal(2' target.GetBindings().Count());
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Completing_A_Binding_Should_Remove_BindingEntry,The following statement contains a magic number: Assert.Equal(2' target.GetBindings().Count());
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Direct_Value_Should_Be_Coerced,The following statement contains a magic number: var target = new PriorityValue(GetMockOwner().Object' TestProperty' typeof(int)' x => Math.Min((int)x' 10));
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Direct_Value_Should_Be_Coerced,The following statement contains a magic number: target.SetValue(5' 0);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Direct_Value_Should_Be_Coerced,The following statement contains a magic number: Assert.Equal(5' target.Value);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Direct_Value_Should_Be_Coerced,The following statement contains a magic number: target.SetValue(15' 0);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Direct_Value_Should_Be_Coerced,The following statement contains a magic number: Assert.Equal(10' target.Value);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Bound_Value_Should_Be_Coerced,The following statement contains a magic number: var target = new PriorityValue(GetMockOwner().Object' TestProperty' typeof(int)' x => Math.Min((int)x' 10));
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Bound_Value_Should_Be_Coerced,The following statement contains a magic number: source.OnNext(5);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Bound_Value_Should_Be_Coerced,The following statement contains a magic number: Assert.Equal(5' target.Value);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Bound_Value_Should_Be_Coerced,The following statement contains a magic number: source.OnNext(15);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Bound_Value_Should_Be_Coerced,The following statement contains a magic number: Assert.Equal(10' target.Value);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Revalidate_Should_ReCoerce_Value,The following statement contains a magic number: var max = 10;
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Revalidate_Should_ReCoerce_Value,The following statement contains a magic number: source.OnNext(5);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Revalidate_Should_ReCoerce_Value,The following statement contains a magic number: Assert.Equal(5' target.Value);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Revalidate_Should_ReCoerce_Value,The following statement contains a magic number: source.OnNext(15);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Revalidate_Should_ReCoerce_Value,The following statement contains a magic number: Assert.Equal(10' target.Value);
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Revalidate_Should_ReCoerce_Value,The following statement contains a magic number: max = 12;
Magic Number,Avalonia.Base.UnitTests,PriorityValueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\PriorityValueTests.cs,Revalidate_Should_ReCoerce_Value,The following statement contains a magic number: Assert.Equal(12' target.Value);
Magic Number,Avalonia.Base.UnitTests,WeakEventHandlerManagerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\WeakEventHandlerManagerTests.cs,EventHandlerShouldNotBeKeptAlive,The following statement contains a magic number: GC.Collect(3' GCCollectionMode.Forced' true);
Magic Number,Avalonia.Base.UnitTests,WeakEventHandlerManagerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\WeakEventHandlerManagerTests.cs,EventHandlerShouldNotBeKeptAlive,The following statement contains a magic number: c < 10
Magic Number,Avalonia.Base.UnitTests,WeakSubscriptionManagerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\WeakSubscriptionManagerTests.cs,EventHandlerShouldNotBeKeptAlive,The following statement contains a magic number: GC.Collect(3' GCCollectionMode.Forced' true);
Magic Number,Avalonia.Base.UnitTests,WeakSubscriptionManagerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\WeakSubscriptionManagerTests.cs,EventHandlerShouldNotBeKeptAlive,The following statement contains a magic number: c < 10
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaDictionaryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaDictionaryTests.cs,Clearing_Collection_Should_Raise_CollectionChanged,The following statement contains a magic number: Assert.Equal(2' tracker.Args.OldItems.Count);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Creates_Initial_Items,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Creates_Initial_Items,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Add,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Add,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Add,The following statement contains a magic number: source.Add(4);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Insert,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Insert,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Insert,The following statement contains a magic number: source.Insert(1' 4);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Remove,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Remove,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Remove,The following statement contains a magic number: source.Remove(2);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_RemoveRange,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_RemoveRange,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_RemoveRange,The following statement contains a magic number: source.RemoveRange(1' 2);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Move,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Move,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Move,The following statement contains a magic number: source.Move(2' 0);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_MoveRange,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_MoveRange,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_MoveRange,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_MoveRange,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Replace,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Replace,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Replace,The following statement contains a magic number: source[1] = 4;
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Clear,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListExtenionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListExtenionsTests.cs,CreateDerivedList_Handles_Clear,The following statement contains a magic number: var source = new AvaloniaList<int>(new[] { 0' 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Items_Passed_To_Constructor_Should_Appear_In_List,The following statement contains a magic number: var items = new[] { 1' 2' 3 };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Items_Passed_To_Constructor_Should_Appear_In_List,The following statement contains a magic number: var items = new[] { 1' 2' 3 };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Move_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Move_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Move_Should_Update_Collection,The following statement contains a magic number: target.Move(2' 0);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Move_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 3' 1' 2 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Move_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 3' 1' 2 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: target.MoveRange(4' 3' 0);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: target.MoveRange(4' 3' 0);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Should_Update_Collection,The following statement contains a magic number: Assert.Equal(new[] { 5' 6' 7' 1' 2' 3' 4' 8' 9' 10 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: target.MoveRange(0' 5' 10);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: target.MoveRange(0' 5' 10);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Can_Move_To_End,The following statement contains a magic number: Assert.Equal(new[] { 6' 7' 8' 9' 10' 1' 2' 3' 4' 5 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(0' e.OldStartingIndex);                  Assert.Equal(10' e.NewStartingIndex);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.OldItems);                  Assert.Equal(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' e.NewItems);                  raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.MoveRange(0' 9' 10);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: target.MoveRange(0' 9' 10);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,MoveRange_Raises_Correct_CollectionChanged_Event,The following statement contains a magic number: Assert.Equal(new[] { 10' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' target);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.Add(3);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3' 4 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3' 4 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3' 4 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.AddRange(new[] { 3' 4 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Adding_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.AddRange(new[] { 3' 4 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,AddRange_Items_Should_Raise_Correct_CollectionChanged,The following statement contains a magic number: target.AddRange(Enumerable.Range(0'10).Select(i => new object()));
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Replacing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Replacing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Replace' e.Action);                  Assert.Equal(new[] { 2 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.OldStartingIndex);                  Assert.Equal(1' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Replacing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Replace' e.Action);                  Assert.Equal(new[] { 2 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.OldStartingIndex);                  Assert.Equal(1' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Replacing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target[1] = 3;
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.Insert(1' 3);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3' 4 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Add' e.Action);                  Assert.Equal(new[] { 3' 4 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.InsertRange(1' new[] { 3' 4 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Inserting_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.InsertRange(1' new[] { 3' 4 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Removing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Removing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Removing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Remove' e.Action);                  Assert.Equal(new[] { 3 }' e.OldItems.Cast<int>());                  Assert.Equal(2' e.OldStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Removing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Remove' e.Action);                  Assert.Equal(new[] { 3 }' e.OldItems.Cast<int>());                  Assert.Equal(2' e.OldStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Removing_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.Remove(3);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(new[] { 3 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.OldStartingIndex);                  Assert.Equal(0' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(new[] { 3 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.OldStartingIndex);                  Assert.Equal(0' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(new[] { 3 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 3 }' e.NewItems.Cast<int>());                  Assert.Equal(2' e.OldStartingIndex);                  Assert.Equal(0' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Item_Should_Raise_CollectionChanged,The following statement contains a magic number: target.Move(2' 0);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(new[] { 2' 3 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 2' 3 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.OldStartingIndex);                  Assert.Equal(0' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(new[] { 2' 3 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 2' 3 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.OldStartingIndex);                  Assert.Equal(0' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(new[] { 2' 3 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 2' 3 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.OldStartingIndex);                  Assert.Equal(0' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Move' e.Action);                  Assert.Equal(new[] { 2' 3 }' e.OldItems.Cast<int>());                  Assert.Equal(new[] { 2' 3 }' e.NewItems.Cast<int>());                  Assert.Equal(1' e.OldStartingIndex);                  Assert.Equal(0' e.NewStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Moving_Items_Should_Raise_CollectionChanged,The following statement contains a magic number: target.MoveRange(1' 2' 0);
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Clearing_Items_Should_Raise_CollectionChanged_Reset,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Clearing_Items_Should_Raise_CollectionChanged_Reset,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Clearing_Items_Should_Raise_CollectionChanged_Remove,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Clearing_Items_Should_Raise_CollectionChanged_Remove,The following statement contains a magic number: var target = new AvaloniaList<int>(new[] { 1' 2' 3 });
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Clearing_Items_Should_Raise_CollectionChanged_Remove,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Remove' e.Action);                  Assert.Equal(new[] { 1' 2' 3 }' e.OldItems.Cast<int>());                  Assert.Equal(0' e.OldStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Collections,AvaloniaListTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Collections\AvaloniaListTests.cs,Clearing_Items_Should_Raise_CollectionChanged_Remove,The following statement contains a magic number: target.CollectionChanged += (s' e) =>              {                  Assert.Equal(target' s);                  Assert.Equal(NotifyCollectionChangedAction.Remove' e.Action);                  Assert.Equal(new[] { 1' 2' 3 }' e.OldItems.Cast<int>());                  Assert.Equal(0' e.OldStartingIndex);                    raised = true;              };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Get_String_To_Double,The following statement contains a magic number: var data = new Class1 { StringValue = $"{5.6}" };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Get_String_To_Double,The following statement contains a magic number: Assert.Equal(5.6' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Set_String_To_Double,The following statement contains a magic number: var data = new Class1 { StringValue = $"{5.6}" };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Set_String_To_Double,The following statement contains a magic number: target.OnNext(6.7);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Set_String_To_Double,The following statement contains a magic number: Assert.Equal($"{6.7}"' data.StringValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Get_Double_To_String,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Get_Double_To_String,The following statement contains a magic number: Assert.Equal($"{5.6}"' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Set_Double_To_String,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Set_Double_To_String,The following statement contains a magic number: target.OnNext($"{6.7}");
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Convert_Set_Double_To_String,The following statement contains a magic number: Assert.Equal(6.7' data.DoubleValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Return_BindingNotification_With_FallbackValue_For_NonConvertibe_Target_Value,The following statement contains a magic number: var target = new BindingExpression(                  ExpressionObserver.Create(data' o => o.StringValue)'                  typeof(int)'                  42'                  AvaloniaProperty.UnsetValue'                  DefaultValueConverter.Instance);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Return_BindingNotification_With_FallbackValue_For_NonConvertibe_Target_Value,The following statement contains a magic number: Assert.Equal(                  new BindingNotification(                      new InvalidCastException("'foo' is not a valid number.")'                      BindingErrorType.Error'                      42)'                  result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Return_BindingNotification_With_FallbackValue_For_NonConvertibe_Target_Value_With_Data_Validation,The following statement contains a magic number: var target = new BindingExpression(                  ExpressionObserver.Create(data' o => o.StringValue' true)'                  typeof(int)'                  42'                  AvaloniaProperty.UnsetValue'                  DefaultValueConverter.Instance);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Return_BindingNotification_With_FallbackValue_For_NonConvertibe_Target_Value_With_Data_Validation,The following statement contains a magic number: Assert.Equal(                  new BindingNotification(                      new InvalidCastException("'foo' is not a valid number.")'                      BindingErrorType.Error'                      42)'                  result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Setting_Invalid_Double_String_Should_Not_Change_Target,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Setting_Invalid_Double_String_Should_Not_Change_Target,The following statement contains a magic number: Assert.Equal(5.6' data.DoubleValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Setting_Invalid_Double_String_Should_Use_FallbackValue,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Setting_Invalid_Double_String_Should_Use_FallbackValue,The following statement contains a magic number: Assert.Equal(9.8' data.DoubleValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Coerce_Setting_Null_Double_To_Default_Value,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Coerce_Setting_UnsetValue_Double_To_Default_Value,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Pass_ConverterParameter_To_Convert,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Pass_ConverterParameter_To_Convert,The following statement contains a magic number: converter.Verify(x => x.Convert(5.6' typeof(string)' "foo"' CultureInfo.CurrentCulture));
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Pass_ConverterParameter_To_ConvertBack,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Handle_DataValidation,The following statement contains a magic number: var data = new Class1 { DoubleValue = 5.6 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Handle_DataValidation,The following statement contains a magic number: target.OnNext(1.2);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Handle_DataValidation,The following statement contains a magic number: target.OnNext($"{3.4}");
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Handle_DataValidation,The following statement contains a magic number: Assert.Equal(                  new[]                  {                      new BindingNotification($"{5.6}")'                      new BindingNotification($"{1.2}")'                      new BindingNotification($"{3.4}")'                      new BindingNotification(                          new InvalidCastException("'bar' is not a valid number.")'                          BindingErrorType.Error)                  }'                  result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Handle_DataValidation,The following statement contains a magic number: Assert.Equal(                  new[]                  {                      new BindingNotification($"{5.6}")'                      new BindingNotification($"{1.2}")'                      new BindingNotification($"{3.4}")'                      new BindingNotification(                          new InvalidCastException("'bar' is not a valid number.")'                          BindingErrorType.Error)                  }'                  result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,BindingExpressionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\BindingExpressionTests.cs,Should_Handle_DataValidation,The following statement contains a magic number: Assert.Equal(                  new[]                  {                      new BindingNotification($"{5.6}")'                      new BindingNotification($"{1.2}")'                      new BindingNotification($"{3.4}")'                      new BindingNotification(                          new InvalidCastException("'bar' is not a valid number.")'                          BindingErrorType.Error)                  }'                  result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Doesnt_Send_DataValidationError_When_DataValidatation_Not_Enabled,The following statement contains a magic number: var data = new ExceptionTest { MustBePositive = 5 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Doesnt_Send_DataValidationError_When_DataValidatation_Not_Enabled,The following statement contains a magic number: observer.SetValue(-5);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Exception_Validation_Sends_DataValidationError,The following statement contains a magic number: var data = new ExceptionTest { MustBePositive = 5 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Exception_Validation_Sends_DataValidationError,The following statement contains a magic number: observer.SetValue(-5);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Indei_Validation_Does_Not_Subscribe_When_DataValidatation_Not_Enabled,The following statement contains a magic number: var data = new IndeiTest { MustBePositive = 5 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Enabled_Indei_Validation_Subscribes,The following statement contains a magic number: var data = new IndeiTest { MustBePositive = 5 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: observer.SetValue(5);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: observer.SetValue(-5);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: observer.SetValue(5);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                    // Value is notified twice as ErrorsChanged is always called by IndeiTest.                  new BindingNotification(5)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(-5)'                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' -5)'                    // Exception is thrown by trying to set value to "foo".                  new BindingNotification(                      new ArgumentException(errmsg)'                      BindingErrorType.DataValidationError)'                    // Value is set then validation is updated.                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' 5)'                  new BindingNotification(5)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                    // Value is notified twice as ErrorsChanged is always called by IndeiTest.                  new BindingNotification(5)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(-5)'                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' -5)'                    // Exception is thrown by trying to set value to "foo".                  new BindingNotification(                      new ArgumentException(errmsg)'                      BindingErrorType.DataValidationError)'                    // Value is set then validation is updated.                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' 5)'                  new BindingNotification(5)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                    // Value is notified twice as ErrorsChanged is always called by IndeiTest.                  new BindingNotification(5)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(-5)'                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' -5)'                    // Exception is thrown by trying to set value to "foo".                  new BindingNotification(                      new ArgumentException(errmsg)'                      BindingErrorType.DataValidationError)'                    // Value is set then validation is updated.                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' 5)'                  new BindingNotification(5)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                    // Value is notified twice as ErrorsChanged is always called by IndeiTest.                  new BindingNotification(5)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(-5)'                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' -5)'                    // Exception is thrown by trying to set value to "foo".                  new BindingNotification(                      new ArgumentException(errmsg)'                      BindingErrorType.DataValidationError)'                    // Value is set then validation is updated.                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' 5)'                  new BindingNotification(5)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                    // Value is notified twice as ErrorsChanged is always called by IndeiTest.                  new BindingNotification(5)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(-5)'                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' -5)'                    // Exception is thrown by trying to set value to "foo".                  new BindingNotification(                      new ArgumentException(errmsg)'                      BindingErrorType.DataValidationError)'                    // Value is set then validation is updated.                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' 5)'                  new BindingNotification(5)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_DataValidation,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_DataValidation.cs,Validation_Plugins_Send_Correct_Notifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                    // Value is notified twice as ErrorsChanged is always called by IndeiTest.                  new BindingNotification(5)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(-5)'                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' -5)'                    // Exception is thrown by trying to set value to "foo".                  new BindingNotification(                      new ArgumentException(errmsg)'                      BindingErrorType.DataValidationError)'                    // Value is set then validation is updated.                  new BindingNotification(new DataValidationException("Must be positive")' BindingErrorType.DataValidationError' 5)'                  new BindingNotification(5)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_Accessor_Can_Read_Value,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_Accessor_Can_Read_Value,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_Accessor_Can_Read_Value,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_List_Accessor_Can_Read_Value,The following statement contains a magic number: var data = new List<int> { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_List_Accessor_Can_Read_Value,The following statement contains a magic number: var data = new List<int> { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_List_Accessor_Can_Read_Value,The following statement contains a magic number: var data = new List<int> { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_Can_Set_Value,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_Can_Set_Value,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_Can_Set_Value,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_ExpressionTree,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_ExpressionTree.cs,Indexer_Can_Set_Value,The following statement contains a magic number: Assert.True(target.SetValue(2));
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Should_Get_Value_For_Non_String_Indexer,The following statement contains a magic number: var data = new { Foo = new Dictionary<double' string> { { 1.0' "bar" }' { 2.0' "qux" } } };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Array_Out_Of_Bounds_Should_Return_UnsetValue,The following statement contains a magic number: var target = ExpressionObserver.Create(data' o => o.Foo[2]);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,List_Out_Of_Bounds_Should_Return_UnsetValue,The following statement contains a magic number: var target = ExpressionObserver.Create(data' o => o.Foo[2]);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Should_Track_INCC_Add,The following statement contains a magic number: var target = ExpressionObserver.Create(data' o => o.Foo[2]);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Should_Set_ExistingDictionaryEntry,The following statement contains a magic number: Assert.True(target.SetValue(4));
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Should_Set_ExistingDictionaryEntry,The following statement contains a magic number: Assert.Equal(4' data.Foo["foo"]);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Should_Add_NewDictionaryEntry,The following statement contains a magic number: Assert.True(target.SetValue(4));
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Should_Add_NewDictionaryEntry,The following statement contains a magic number: Assert.Equal(4' data.Foo["bar"]);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Indexer_Only_Binding_Works,The following statement contains a magic number: var data = new[] { 1' 2' 3 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Indexer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Indexer.cs,Indexer_Only_Binding_Works,The following statement contains a magic number: var data = new[] { 1' 2' 3 };
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Observable,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Observable.cs,Should_Work_With_Value_Type,The following statement contains a magic number: source.OnNext(42);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Observable,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Observable.cs,Should_Work_With_Value_Type,The following statement contains a magic number: Assert.Equal(new[] { 1' 42 }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Property,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Property.cs,Should_Track_Property_Value_From_Observable_Root,The following statement contains a magic number: var source = scheduler.CreateColdObservable(                  OnNext(1' new Class1 { Foo = "foo" })'                  OnNext(2' new Class1 { Foo = "bar" }));
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Property,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Property.cs,Should_Not_Keep_Source_Alive,The following statement contains a magic number: GC.Collect(2);
Magic Number,Avalonia.Base.UnitTests.Data.Core,ExpressionObserverTests_Property,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\ExpressionObserverTests_Property.cs,Should_Not_Keep_Source_Alive,The following statement contains a magic number: GC.Collect(2);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: var errmsg = new RangeAttribute(5' 10).FormatErrorMessage(nameof(Data.Between5And10));
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: var errmsg = new RangeAttribute(5' 10).FormatErrorMessage(nameof(Data.Between5And10));
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: validator.SetValue(3' BindingPriority.LocalValue);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: validator.SetValue(7' BindingPriority.LocalValue);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: validator.SetValue(11' BindingPriority.LocalValue);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(5)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      3)'                  new BindingNotification(7)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      11)'              }' result);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(5)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      3)'                  new BindingNotification(7)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      11)'              }' result);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(5)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      3)'                  new BindingNotification(7)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      11)'              }' result);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Range_BindingNotificationsx,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(5)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      3)'                  new BindingNotification(7)'                  new BindingNotification(                      new ValidationException(errmsg)'                      BindingErrorType.DataValidationError'                      11)'              }' result);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Aggregate_BindingNotificationsx,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Avalonia.Markup.UnitTests.Data.Plugins,DataAnnotationsValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\DataAnnotationsValidationPluginTests.cs,Produces_Aggregate_BindingNotificationsx,The following statement contains a magic number: var errorResult = (BindingNotification)result[2];
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,ExceptionValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\ExceptionValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: validator.SetValue(5' BindingPriority.LocalValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,ExceptionValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\ExceptionValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: validator.SetValue(-2' BindingPriority.LocalValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,ExceptionValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\ExceptionValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: validator.SetValue(6' BindingPriority.LocalValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,ExceptionValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\ExceptionValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                  new BindingNotification(5)'                  new BindingNotification(new ArgumentOutOfRangeException("value")' BindingErrorType.DataValidationError)'                  new BindingNotification(6)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,ExceptionValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\ExceptionValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                  new BindingNotification(5)'                  new BindingNotification(new ArgumentOutOfRangeException("value")' BindingErrorType.DataValidationError)'                  new BindingNotification(6)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: var data = new Data { Maximum = 5 };
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: validator.SetValue(5' BindingPriority.LocalValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: validator.SetValue(6' BindingPriority.LocalValue);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: data.Maximum = 10;
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: data.Maximum = 5;
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(6)'                                    // Then the ErrorsChanged event is fired.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'                    // Maximum is changed to 10 so value is now valid.                  new BindingNotification(6)'                    // And Maximum is changed back to 5.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(6)'                                    // Then the ErrorsChanged event is fired.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'                    // Maximum is changed to 10 so value is now valid.                  new BindingNotification(6)'                    // And Maximum is changed back to 5.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(6)'                                    // Then the ErrorsChanged event is fired.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'                    // Maximum is changed to 10 so value is now valid.                  new BindingNotification(6)'                    // And Maximum is changed back to 5.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(6)'                                    // Then the ErrorsChanged event is fired.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'                    // Maximum is changed to 10 so value is now valid.                  new BindingNotification(6)'                    // And Maximum is changed back to 5.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Produces_BindingNotifications,The following statement contains a magic number: Assert.Equal(new[]              {                  new BindingNotification(0)'                  new BindingNotification(5)'                    // Value is first signalled without an error as validation hasn't been updated.                  new BindingNotification(6)'                                    // Then the ErrorsChanged event is fired.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'                    // Maximum is changed to 10 so value is now valid.                  new BindingNotification(6)'                    // And Maximum is changed back to 5.                  new BindingNotification(new DataValidationException("Must be less than Maximum")' BindingErrorType.DataValidationError' 6)'              }' result);
Magic Number,Avalonia.Base.UnitTests.Data.Core.Plugins,IndeiValidationPluginTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\Core\Plugins\IndeiValidationPluginTests.cs,Subscribes_And_Unsubscribes,The following statement contains a magic number: var data = new Data { Maximum = 5 };
Magic Number,Avalonia.Base.UnitTests.Data.Converters,DefaultValueConverterTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\DefaultValueConverterTests.cs,Can_Convert_String_To_Int,The following statement contains a magic number: Assert.Equal(5' result);
Magic Number,Avalonia.Base.UnitTests.Data.Converters,DefaultValueConverterTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\DefaultValueConverterTests.cs,Can_Convert_String_To_Double,The following statement contains a magic number: Assert.Equal(5.0' result);
Magic Number,Avalonia.Base.UnitTests.Data.Converters,DefaultValueConverterTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\DefaultValueConverterTests.cs,Can_Convert_Double_To_String,The following statement contains a magic number: var result = DefaultValueConverter.Instance.Convert(                  5.0'                  typeof(string)'                  null'                  CultureInfo.InvariantCulture);
Magic Number,Avalonia.Base.UnitTests.Data.Converters,DefaultValueConverterTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\DefaultValueConverterTests.cs,Can_Use_Explicit_Cast,The following statement contains a magic number: var result = DefaultValueConverter.Instance.Convert(                  new ExplicitDouble(5.0)'                  typeof(double)'                  null'                  CultureInfo.InvariantCulture);
Magic Number,Avalonia.Base.UnitTests.Data.Converters,DefaultValueConverterTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\DefaultValueConverterTests.cs,Can_Use_Explicit_Cast,The following statement contains a magic number: Assert.Equal(5.0' result);
Magic Number,Avalonia.Base.UnitTests.Data.Converters,DefaultValueConverterTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\DefaultValueConverterTests.cs,Can_Convert_From_Delegate_To_Command,The following statement contains a magic number: (result as ICommand).Execute(5);
Magic Number,Avalonia.Base.UnitTests.Data.Converters,DefaultValueConverterTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Data\DefaultValueConverterTests.cs,Can_Convert_From_Delegate_To_Command,The following statement contains a magic number: Assert.Equal(5' commandResult);
Magic Number,Avalonia.Base.UnitTests.Utilities,SingleOrQueueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\SingleOrQueueTests.cs,Multiple_Elements_Dequeued_In_Correct_Order,The following statement contains a magic number: queue.Enqueue(2);
Magic Number,Avalonia.Base.UnitTests.Utilities,SingleOrQueueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\SingleOrQueueTests.cs,Multiple_Elements_Dequeued_In_Correct_Order,The following statement contains a magic number: queue.Enqueue(3);
Magic Number,Avalonia.Base.UnitTests.Utilities,SingleOrQueueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\SingleOrQueueTests.cs,Multiple_Elements_Dequeued_In_Correct_Order,The following statement contains a magic number: Assert.Equal(2' queue.Dequeue());
Magic Number,Avalonia.Base.UnitTests.Utilities,SingleOrQueueTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\SingleOrQueueTests.cs,Multiple_Elements_Dequeued_In_Correct_Order,The following statement contains a magic number: Assert.Equal(3' queue.Dequeue());
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,ReadInt32_Reads_Values,The following statement contains a magic number: Assert.Equal(123' target.ReadInt32());
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,ReadInt32_Reads_Values,The following statement contains a magic number: Assert.Equal(456' target.ReadInt32());
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,ReadDouble_Reads_Values,The following statement contains a magic number: Assert.Equal(12.3' target.ReadDouble());
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,ReadDouble_Reads_Values,The following statement contains a magic number: Assert.Equal(45.6' target.ReadDouble());
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,TryReadInt32_Reads_Values,The following statement contains a magic number: Assert.Equal(123' value);
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,TryReadInt32_Reads_Values,The following statement contains a magic number: Assert.Equal(456' value);
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,TryReadDouble_Reads_Values,The following statement contains a magic number: Assert.Equal(12.3' value);
Magic Number,Avalonia.Base.UnitTests.Utilities,StringTokenizerTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Base.UnitTests\Utilities\StringTokenizerTests.cs,TryReadDouble_Reads_Values,The following statement contains a magic number: Assert.Equal(45.6' value);
