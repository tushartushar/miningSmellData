Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Avalonia.LinuxFramebuffer,Mice,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\Mice.cs,ProcessEvent,Cyclomatic complexity of the method is 10
Long Parameter List,Avalonia.LinuxFramebuffer,LockedFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LockedFramebuffer.cs,LockedFramebuffer,The method has 5 parameters. Parameters: fb' fixedInfo' varInfo' address' dpi
Long Parameter List,Avalonia.LinuxFramebuffer,NativeUnsafeMethods,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\NativeUnsafeMethods.cs,mmap,The method has 6 parameters. Parameters: addr' length' prot' flags' fd' offset
Long Parameter List,Avalonia.LinuxFramebuffer,NativeUnsafeMethods,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\NativeUnsafeMethods.cs,select,The method has 5 parameters. Parameters: nfds' rfds' wfds' exfds' timevals
Magic Number,Avalonia.LinuxFramebuffer,EvDevDevice,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\EvDevDevice.cs,NextEvent,The following statement contains a magic number: if (NativeUnsafeMethods.libevdev_next_event(_dev' 2' out ev) == 0)                  return ev;
Magic Number,Avalonia.LinuxFramebuffer,EvDevDevice,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\EvDevDevice.cs,Open,The following statement contains a magic number: var fd = NativeUnsafeMethods.open(device' 2048' 0);
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,LinuxFramebuffer,The following statement contains a magic number: _dpi = dpi ?? new Vector(96' 96);
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,LinuxFramebuffer,The following statement contains a magic number: _dpi = dpi ?? new Vector(96' 96);
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,LinuxFramebuffer,The following statement contains a magic number: _fd = NativeUnsafeMethods.open(fileName' 2' 0);
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,Init,The following statement contains a magic number: fixed (void* pnfo = &_varInfo)              {                  if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOGET_VSCREENINFO' pnfo))                      throw new Exception("FBIOGET_VSCREENINFO error: " + Marshal.GetLastWin32Error());                    SetBpp();                    _varInfo.yoffset = 100;                  if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOPUT_VSCREENINFO' pnfo))                      _varInfo.transp = new fb_bitfield();                    if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOPUT_VSCREENINFO' pnfo))                      throw new Exception("FBIOPUT_VSCREENINFO error: " + Marshal.GetLastWin32Error());                    if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOGET_VSCREENINFO' pnfo))                      throw new Exception("FBIOGET_VSCREENINFO error: " + Marshal.GetLastWin32Error());                    if (_varInfo.bits_per_pixel != 32)                      throw new Exception("Unable to set 32-bit display mode");              }
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,Init,The following statement contains a magic number: fixed (void* pnfo = &_varInfo)              {                  if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOGET_VSCREENINFO' pnfo))                      throw new Exception("FBIOGET_VSCREENINFO error: " + Marshal.GetLastWin32Error());                    SetBpp();                    _varInfo.yoffset = 100;                  if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOPUT_VSCREENINFO' pnfo))                      _varInfo.transp = new fb_bitfield();                    if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOPUT_VSCREENINFO' pnfo))                      throw new Exception("FBIOPUT_VSCREENINFO error: " + Marshal.GetLastWin32Error());                    if (-1 == NativeUnsafeMethods.ioctl(_fd' FbIoCtl.FBIOGET_VSCREENINFO' pnfo))                      throw new Exception("FBIOGET_VSCREENINFO error: " + Marshal.GetLastWin32Error());                    if (_varInfo.bits_per_pixel != 32)                      throw new Exception("Unable to set 32-bit display mode");              }
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,Init,The following statement contains a magic number: _mappedAddress = NativeUnsafeMethods.mmap(IntPtr.Zero' _mappedLength' 3' 1' _fd' IntPtr.Zero);
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,Init,The following statement contains a magic number: fixed (fb_fix_screeninfo* pnfo = &_fixedInfo)              {                  int idlen;                  for (idlen = 0; idlen < 16 && pnfo->id[idlen] != 0; idlen++) ;                  Id = Encoding.ASCII.GetString(pnfo->id' idlen);              }
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,SetBpp,The following statement contains a magic number: _varInfo.bits_per_pixel = 32;
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,SetBpp,The following statement contains a magic number: _varInfo.red = _varInfo.blue = _varInfo.green = _varInfo.transp = new fb_bitfield              {                  length = 8              };
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,SetBpp,The following statement contains a magic number: _varInfo.green.offset = 8;
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,SetBpp,The following statement contains a magic number: _varInfo.blue.offset = 16;
Magic Number,Avalonia.LinuxFramebuffer,LinuxFramebuffer,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\LinuxFramebuffer.cs,SetBpp,The following statement contains a magic number: _varInfo.transp.offset = 24;
Magic Number,Avalonia.LinuxFramebuffer,Mice,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\Mice.cs,Worker,The following statement contains a magic number: while (true)              {                  try                  {                      var rfds = new fd_set {count = mouseDevices.Count};                      for (int c = 0; c < mouseDevices.Count; c++)                          rfds.fds[c] = mouseDevices[c].Fd;                      IntPtr* timeval = stackalloc IntPtr[2];                      timeval[0] = new IntPtr(0);                      timeval[1] = new IntPtr(100);                      are.WaitOne(30);                      foreach (var dev in mouseDevices)                      {                          while(true)                          {                              var ev = dev.NextEvent();                              if (!ev.HasValue)                                  break;                                LinuxFramebufferPlatform.Threading.Send(() => ProcessEvent(dev' ev.Value));                          }                       }                  }                  catch (Exception e)                  {                      Console.Error.WriteLine(e.ToString());                  }              }
Magic Number,Avalonia.LinuxFramebuffer,Mice,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\Mice.cs,Worker,The following statement contains a magic number: while (true)              {                  try                  {                      var rfds = new fd_set {count = mouseDevices.Count};                      for (int c = 0; c < mouseDevices.Count; c++)                          rfds.fds[c] = mouseDevices[c].Fd;                      IntPtr* timeval = stackalloc IntPtr[2];                      timeval[0] = new IntPtr(0);                      timeval[1] = new IntPtr(100);                      are.WaitOne(30);                      foreach (var dev in mouseDevices)                      {                          while(true)                          {                              var ev = dev.NextEvent();                              if (!ev.HasValue)                                  break;                                LinuxFramebufferPlatform.Threading.Send(() => ProcessEvent(dev' ev.Value));                          }                       }                  }                  catch (Exception e)                  {                      Console.Error.WriteLine(e.ToString());                  }              }
Magic Number,Avalonia.LinuxFramebuffer,Mice,C:\repos\grokys_Perspex\src\Linux\Avalonia.LinuxFramebuffer\Mice.cs,Worker,The following statement contains a magic number: while (true)              {                  try                  {                      var rfds = new fd_set {count = mouseDevices.Count};                      for (int c = 0; c < mouseDevices.Count; c++)                          rfds.fds[c] = mouseDevices[c].Fd;                      IntPtr* timeval = stackalloc IntPtr[2];                      timeval[0] = new IntPtr(0);                      timeval[1] = new IntPtr(100);                      are.WaitOne(30);                      foreach (var dev in mouseDevices)                      {                          while(true)                          {                              var ev = dev.NextEvent();                              if (!ev.HasValue)                                  break;                                LinuxFramebufferPlatform.Threading.Send(() => ProcessEvent(dev' ev.Value));                          }                       }                  }                  catch (Exception e)                  {                      Console.Error.WriteLine(e.ToString());                  }              }
