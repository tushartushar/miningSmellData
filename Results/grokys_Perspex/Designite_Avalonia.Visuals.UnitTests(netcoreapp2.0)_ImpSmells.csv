Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DrawOperationTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DrawOperationTests.cs,Rectangle_Bounds_Are_Snapped_To_Pixels,The method has 11 parameters. Parameters: x' y' width' height' scaleX' scaleY' penThickness' expectedX' expectedY' expectedWidth' expectedHeight
Long Parameter List,Avalonia.Visuals.UnitTests.VisualTree,MockRenderInterface,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\MockRenderInterface.cs,CreateFormattedText,The method has 7 parameters. Parameters: text' typeface' fontSize' textAlignment' wrapping' constraint' spans
Long Parameter List,Avalonia.Visuals.UnitTests.VisualTree,MockRenderInterface,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\MockRenderInterface.cs,LoadBitmap,The method has 5 parameters. Parameters: format' data' size' dpi' stride
Long Parameter List,Avalonia.Visuals.UnitTests.VisualTree,MockStreamGeometryContext,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\MockRenderInterface.cs,ArcTo,The method has 5 parameters. Parameters: point' size' rotationAngle' isLargeArc' sweepDirection
Long Statement,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Draw_Transparent_Layer_With_Correct_Opacity,The length of the statement  "            context.Verify(x => x.DrawImage(borderLayer' 0.5' It.IsAny<Rect>()' It.IsAny<Rect>()' BitmapInterpolationMode.Default)); " is 120.
Long Statement,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The length of the statement  "            renderTarget.Setup(r => r.CreateDrawingContext(It.IsAny<IVisualBrushRenderer>())).Returns(Mock.Of<IDrawingContextImpl>()); " is 122.
Long Statement,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Not_Replace_Identical_DrawOperation,The length of the statement  "            var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0)); " is 120.
Long Statement,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Replace_Different_DrawOperation,The length of the statement  "            var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0)); " is 120.
Long Statement,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Trimmed_DrawOperations_Releases_Reference,The length of the statement  "            var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0)); " is 120.
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Parses_Single_Uniform_Radius,The following statement contains a magic number: Assert.Equal(new CornerRadius(3.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Parses_Top_Bottom,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Parses_Top_Bottom,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Parses_TopLeft_TopRight_BottomRight_BottomLeft,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Parses_TopLeft_TopRight_BottomRight_BottomLeft,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Parses_TopLeft_TopRight_BottomRight_BottomLeft,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Parses_TopLeft_TopRight_BottomRight_BottomLeft,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,CornerRadiusTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\CornerRadiusTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new CornerRadius(1.1' 2.2' 3.3' 4.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(50' 50' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(50' 50' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(50' 50' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(50' 50' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(50' 50' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(50' 50' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 150' 150)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_Intersecting_Rects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 150' 150)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 250' 250)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Return_Correct_Value_For_NonIntersecting_Rects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 250' 250)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: var result = new Rect(0' 0' 0' 0).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: var result = new Rect(0' 0' 0' 0).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: var result = new Rect(0' 0' 0' 0).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: var result = new Rect(0' 0' 0' 0).Union(new Rect(150' 150' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: Assert.Equal(new Rect(150' 150' 100' 100)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: Assert.Equal(new Rect(150' 150' 100' 100)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: Assert.Equal(new Rect(150' 150' 100' 100)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_This_rect,The following statement contains a magic number: Assert.Equal(new Rect(150' 150' 100' 100)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_Other_rect,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 0' 0));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_Other_rect,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 0' 0));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_Other_rect,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 0' 0));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_Other_rect,The following statement contains a magic number: var result = new Rect(0' 0' 100' 100).Union(new Rect(150' 150' 0' 0));
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_Other_rect,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result);
Magic Number,Avalonia.Visuals.UnitTests,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RectTests.cs,Union_Should_Ignore_Empty_Other_rect,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result);
Magic Number,Avalonia.Visuals.UnitTests,RelativePointTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativePointTests.cs,Parse_Should_Accept_Absolute_Value,The following statement contains a magic number: Assert.Equal(new RelativePoint(4' 5' RelativeUnit.Absolute)' result);
Magic Number,Avalonia.Visuals.UnitTests,RelativePointTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativePointTests.cs,Parse_Should_Accept_Absolute_Value,The following statement contains a magic number: Assert.Equal(new RelativePoint(4' 5' RelativeUnit.Absolute)' result);
Magic Number,Avalonia.Visuals.UnitTests,RelativePointTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativePointTests.cs,Parse_Should_Accept_Relative_Value,The following statement contains a magic number: Assert.Equal(new RelativePoint(0.25' 0.5' RelativeUnit.Relative)' result);
Magic Number,Avalonia.Visuals.UnitTests,RelativePointTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativePointTests.cs,Parse_Should_Accept_Relative_Value,The following statement contains a magic number: Assert.Equal(new RelativePoint(0.25' 0.5' RelativeUnit.Relative)' result);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectComparer,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectComparer.cs,Equals,The following statement contains a magic number: return a.Unit == b.Unit &&                     Math.Round(a.Rect.X' 3) == Math.Round(b.Rect.X' 3) &&                     Math.Round(a.Rect.Y' 3) == Math.Round(b.Rect.Y' 3) &&                     Math.Round(a.Rect.Width' 3) == Math.Round(b.Rect.Width' 3) &&                     Math.Round(a.Rect.Height' 3) == Math.Round(b.Rect.Height' 3);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Absolute_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(4' 5' 50' 60' RelativeUnit.Absolute)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Absolute_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(4' 5' 50' 60' RelativeUnit.Absolute)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Absolute_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(4' 5' 50' 60' RelativeUnit.Absolute)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Absolute_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(4' 5' 50' 60' RelativeUnit.Absolute)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Relative_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(0.1' 0.2' 0.4' 0.7' RelativeUnit.Relative)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Relative_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(0.1' 0.2' 0.4' 0.7' RelativeUnit.Relative)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Relative_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(0.1' 0.2' 0.4' 0.7' RelativeUnit.Relative)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RelativeRectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RelativeRectTests.cs,Parse_Should_Accept_Relative_Value,The following statement contains a magic number: Assert.Equal(new RelativeRect(0.1' 0.2' 0.4' 0.7' RelativeUnit.Relative)' result' Compare);
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,In_Bounds_Control_Should_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 98'                          [Canvas.TopProperty] = 98'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,In_Bounds_Control_Should_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 98'                          [Canvas.TopProperty] = 98'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,In_Bounds_Control_Should_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 98'                          [Canvas.TopProperty] = 98'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,In_Bounds_Control_Should_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 98'                          [Canvas.TopProperty] = 98'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,In_Bounds_Control_Should_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 98'                          [Canvas.TopProperty] = 98'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,In_Bounds_Control_Should_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 98'                          [Canvas.TopProperty] = 98'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          ClipToBounds = true'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          ClipToBounds = true'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          ClipToBounds = true'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          ClipToBounds = true'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          ClipToBounds = true'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          ClipToBounds = true'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Out_Of_Bounds_Child_Control_Should_Not_Be_Rendered,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Canvas                      {                          Width = 100'                          Height = 100'                          [Canvas.LeftProperty] = 50'                          [Canvas.TopProperty] = 50'                          Children =                          {                              (target = new TestControl                              {                                  Width = 10'                                  Height = 10'                                  ClipToBounds = true'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,RenderTransform_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      (target = new TestControl                      {                          Width = 10'                          Height = 10'                          [Canvas.LeftProperty] = 110'                          [Canvas.TopProperty] = 110'                          RenderTransform = new TranslateTransform(-100' -100)'                      })                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,RenderTests_Culling,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\RenderTests_Culling.cs,Negative_Margin_Should_Be_Respected,The following statement contains a magic number: var container = new Canvas              {                  Width = 100'                  Height = 100'                  ClipToBounds = true'                  Children =                  {                      new Border                      {                          Margin = new Thickness(100' 100' 0' 0)'                          Child = target = new TestControl                          {                              Width = 10'                              Height = 10'                              Margin = new Thickness(-100' -100' 0' 0)'                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Should_Produce_Correct_Aspect_Ratio,The following statement contains a magic number: var result = new Size(3' 2).AspectRatio;
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Should_Produce_Correct_Aspect_Ratio,The following statement contains a magic number: var result = new Size(3' 2).AspectRatio;
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Should_Produce_Correct_Aspect_Ratio,The following statement contains a magic number: Assert.Equal(1.5' result);
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Dividing_Should_Produce_Scaling_Factor,The following statement contains a magic number: var result = new Size(15' 10) / new Size(5' 5);
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Dividing_Should_Produce_Scaling_Factor,The following statement contains a magic number: var result = new Size(15' 10) / new Size(5' 5);
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Dividing_Should_Produce_Scaling_Factor,The following statement contains a magic number: var result = new Size(15' 10) / new Size(5' 5);
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Dividing_Should_Produce_Scaling_Factor,The following statement contains a magic number: var result = new Size(15' 10) / new Size(5' 5);
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Dividing_Should_Produce_Scaling_Factor,The following statement contains a magic number: Assert.Equal(new Vector(3' 2)' result);
Magic Number,Avalonia.Visuals.UnitTests,SizeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\SizeTests.cs,Dividing_Should_Produce_Scaling_Factor,The following statement contains a magic number: Assert.Equal(new Vector(3' 2)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Parses_Single_Uniform_Size,The following statement contains a magic number: Assert.Equal(new Thickness(1.2)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Parses_Horizontal_Vertical,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Parses_Horizontal_Vertical,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Parses_Left_Top_Right_Bottom,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Parses_Left_Top_Right_Bottom,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Parses_Left_Top_Right_Bottom,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Parses_Left_Top_Right_Bottom,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,ThicknessTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\ThicknessTests.cs,Parse_Accepts_Spaces,The following statement contains a magic number: Assert.Equal(new Thickness(1.2' 3.4' 5' 6)' result);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var vector = new Vector(2' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var vector = new Vector(2' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var length = Math.Sqrt(2 * 2 + 4 * 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var length = Math.Sqrt(2 * 2 + 4 * 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var length = Math.Sqrt(2 * 2 + 4 * 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var length = Math.Sqrt(2 * 2 + 4 * 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Squared_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var vectorA = new Vector(2' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Squared_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var vectorA = new Vector(2' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Squared_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var squaredLengthA = 2 * 2 + 4 * 4;
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Squared_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var squaredLengthA = 2 * 2 + 4 * 4;
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Squared_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var squaredLengthA = 2 * 2 + 4 * 4;
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Length_Squared_Should_Return_Correct_Length_Of_Vector,The following statement contains a magic number: var squaredLengthA = 2 * 2 + 4 * 4;
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Normalize_Should_Return_Normalized_Vector,The following statement contains a magic number: var vectorA = new Vector(13' 84);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Normalize_Should_Return_Normalized_Vector,The following statement contains a magic number: var vectorA = new Vector(13' 84);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Normalize_Should_Return_Normalized_Vector,The following statement contains a magic number: var vectorB = new Vector(-34' 345);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Normalize_Should_Return_Normalized_Vector,The following statement contains a magic number: var vectorB = new Vector(-34' 345);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Normalize_Should_Return_Normalized_Vector,The following statement contains a magic number: var vectorC = new Vector(-34' -84);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Normalize_Should_Return_Normalized_Vector,The following statement contains a magic number: var vectorC = new Vector(-34' -84);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Negate_Should_Return_Negated_Vector,The following statement contains a magic number: var vector = new Vector(2' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Negate_Should_Return_Negated_Vector,The following statement contains a magic number: var vector = new Vector(2' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Negate_Should_Return_Negated_Vector,The following statement contains a magic number: var negated = new Vector(-2' -4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Negate_Should_Return_Negated_Vector,The following statement contains a magic number: var negated = new Vector(-2' -4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Dot_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(-6' 8.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Dot_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(-6' 8.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Dot_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(5' 12.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Dot_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(5' 12.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Dot_Should_Return_Correct_Value,The following statement contains a magic number: Assert.Equal(66.0' Vector.Dot(a' b));
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Cross_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(-6' 8.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Cross_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(-6' 8.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Cross_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(5' 12.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Cross_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(5' 12.0);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Cross_Should_Return_Correct_Value,The following statement contains a magic number: Assert.Equal(-112.0' Vector.Cross(a' b));
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(5' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(5' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var expected = new Vector(2' 1);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_Should_Return_Correct_Value,The following statement contains a magic number: var vector = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_Should_Return_Correct_Value,The following statement contains a magic number: var vector = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_Should_Return_Correct_Value,The following statement contains a magic number: var expected = new Vector(5' 1);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Divied_Should_Return_Correct_Value,The following statement contains a magic number: Assert.Equal(expected' Vector.Divide(vector' 2));
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var a = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(2' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var b = new Vector(2' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var expected = new Vector(20' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_By_Vector_Should_Return_Correct_Value,The following statement contains a magic number: var expected = new Vector(20' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_Should_Return_Correct_Value,The following statement contains a magic number: var vector = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_Should_Return_Correct_Value,The following statement contains a magic number: var vector = new Vector(10' 2);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_Should_Return_Correct_Value,The following statement contains a magic number: var expected = new Vector(20' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_Should_Return_Correct_Value,The following statement contains a magic number: var expected = new Vector(20' 4);
Magic Number,Avalonia.Visuals.UnitTests,VectorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VectorTests.cs,Multiply_Should_Return_Correct_Value,The following statement contains a magic number: Assert.Equal(expected' Vector.Multiply(vector' 2));
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Decorator                  {                      Width = 50'                      Height = 50'                      HorizontalAlignment = HorizontalAlignment.Center'                      VerticalAlignment = VerticalAlignment.Center'                      RenderTransform = new TranslateTransform(25' 25)'                      Child = target = new Border()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Decorator                  {                      Width = 50'                      Height = 50'                      HorizontalAlignment = HorizontalAlignment.Center'                      VerticalAlignment = VerticalAlignment.Center'                      RenderTransform = new TranslateTransform(25' 25)'                      Child = target = new Border()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Decorator                  {                      Width = 50'                      Height = 50'                      HorizontalAlignment = HorizontalAlignment.Center'                      VerticalAlignment = VerticalAlignment.Center'                      RenderTransform = new TranslateTransform(25' 25)'                      Child = target = new Border()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Decorator                  {                      Width = 50'                      Height = 50'                      HorizontalAlignment = HorizontalAlignment.Center'                      VerticalAlignment = VerticalAlignment.Center'                      RenderTransform = new TranslateTransform(25' 25)'                      Child = target = new Border()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Decorator                  {                      Width = 50'                      Height = 50'                      HorizontalAlignment = HorizontalAlignment.Center'                      VerticalAlignment = VerticalAlignment.Center'                      RenderTransform = new TranslateTransform(25' 25)'                      Child = target = new Border()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Decorator                  {                      Width = 50'                      Height = 50'                      HorizontalAlignment = HorizontalAlignment.Center'                      VerticalAlignment = VerticalAlignment.Center'                      RenderTransform = new TranslateTransform(25' 25)'                      Child = target = new Border()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: Assert.Equal(new Point(50' 50)' result);
Magic Number,Avalonia.Visuals.UnitTests,VisualExtensionsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualExtensionsTests.cs,TranslatePoint_Should_Respect_RenderTransforms,The following statement contains a magic number: Assert.Equal(new Point(50' 50)' result);
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_Should_Work,The following statement contains a magic number: var child = new Decorator { Width = 100' Height = 100 };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_Should_Work,The following statement contains a magic number: var child = new Decorator { Width = 100' Height = 100 };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_Should_Work,The following statement contains a magic number: var root = new TestRoot() { Child = child' Width = 400' Height = 400 };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_Should_Work,The following statement contains a magic number: var root = new TestRoot() { Child = child' Width = 400' Height = 400 };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_Should_Work,The following statement contains a magic number: Assert.Equal(new Point(150' 150)' point);
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_Should_Work,The following statement contains a magic number: Assert.Equal(new Point(150' 150)' point);
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: var child = new Decorator              {                  Width = 100'                  Height = 100'                  RenderTransform = new ScaleTransform() { ScaleX = 2' ScaleY = 2 }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: var child = new Decorator              {                  Width = 100'                  Height = 100'                  RenderTransform = new ScaleTransform() { ScaleX = 2' ScaleY = 2 }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: var child = new Decorator              {                  Width = 100'                  Height = 100'                  RenderTransform = new ScaleTransform() { ScaleX = 2' ScaleY = 2 }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: var child = new Decorator              {                  Width = 100'                  Height = 100'                  RenderTransform = new ScaleTransform() { ScaleX = 2' ScaleY = 2 }              };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: var root = new TestRoot() { Child = child' Width = 400' Height = 400 };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: var root = new TestRoot() { Child = child' Width = 400' Height = 400 };
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: Assert.Equal(new Point(100' 100)' point);
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,TransformToVisual_With_RenderTransform_Should_Work,The following statement contains a magic number: Assert.Equal(new Point(100' 100)' point);
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,Changing_ZIndex_Should_InvalidateVisual,The following statement contains a magic number: canvas1.ZIndex = 10;
Magic Number,Avalonia.Visuals.UnitTests,VisualTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTests.cs,Changing_ZIndex_Should_Recalculate_Parent_Children,The following statement contains a magic number: canvas1.ZIndex = 10;
Magic Number,Avalonia.Visuals.UnitTests.Media,FontFamilyTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\FontFamilyTests.cs,Should_Parse_FontFamily_With_Fallbacks,The following statement contains a magic number: Assert.Equal(2' fontFamily.FamilyNames.Count());
Magic Number,Avalonia.Visuals.UnitTests.Media,GeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\GeometryTests.cs,Setting_Transform_Causes_Changed_To_Be_Raised,The following statement contains a magic number: target.Transform = new RotateTransform(45);
Magic Number,Avalonia.Visuals.UnitTests.Media,GeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\GeometryTests.cs,Changing_Transform_Causes_Changed_To_Be_Raised,The following statement contains a magic number: var transform = new RotateTransform(45);
Magic Number,Avalonia.Visuals.UnitTests.Media,GeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\GeometryTests.cs,Changing_Transform_Causes_Changed_To_Be_Raised,The following statement contains a magic number: transform.Angle = 90;
Magic Number,Avalonia.Visuals.UnitTests.Media,GeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\GeometryTests.cs,Removing_Transform_Causes_Changed_To_Be_Raised,The following statement contains a magic number: var transform = new RotateTransform(45);
Magic Number,Avalonia.Visuals.UnitTests.Media,GeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\GeometryTests.cs,Transform_Produces_Transformed_PlatformImpl,The following statement contains a magic number: var rotate = new RotateTransform(45);
Magic Number,Avalonia.Visuals.UnitTests.Media,LinearGradientBrushTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\LinearGradientBrushTests.cs,Changing_StartPoint_Raises_Invalidated,The following statement contains a magic number: target.StartPoint = new RelativePoint(10' 10' RelativeUnit.Absolute);
Magic Number,Avalonia.Visuals.UnitTests.Media,LinearGradientBrushTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\LinearGradientBrushTests.cs,Changing_StartPoint_Raises_Invalidated,The following statement contains a magic number: target.StartPoint = new RelativePoint(10' 10' RelativeUnit.Absolute);
Magic Number,Avalonia.Visuals.UnitTests.Media,LinearGradientBrushTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\LinearGradientBrushTests.cs,Changing_EndPoint_Raises_Invalidated,The following statement contains a magic number: target.EndPoint = new RelativePoint(10' 10' RelativeUnit.Absolute);
Magic Number,Avalonia.Visuals.UnitTests.Media,LinearGradientBrushTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\LinearGradientBrushTests.cs,Changing_EndPoint_Raises_Invalidated,The following statement contains a magic number: target.EndPoint = new RelativePoint(10' 10' RelativeUnit.Absolute);
Magic Number,Avalonia.Visuals.UnitTests.Media,LinearGradientBrushTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\LinearGradientBrushTests.cs,Changing_GradientStop_Offset_Raises_Invalidated,The following statement contains a magic number: target.GradientStops[0].Offset = 0.5;
Magic Number,Avalonia.Visuals.UnitTests.Media,MatrixTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\MatrixTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Matrix(1' 2' 3' -4' 5' 6);
Magic Number,Avalonia.Visuals.UnitTests.Media,MatrixTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\MatrixTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Matrix(1' 2' 3' -4' 5' 6);
Magic Number,Avalonia.Visuals.UnitTests.Media,MatrixTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\MatrixTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Matrix(1' 2' 3' -4' 5' 6);
Magic Number,Avalonia.Visuals.UnitTests.Media,MatrixTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\MatrixTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Matrix(1' 2' 3' -4' 5' 6);
Magic Number,Avalonia.Visuals.UnitTests.Media,MatrixTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\MatrixTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Matrix(1' 2' 3' -4' 5' 6);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Move,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' figure.StartPoint);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Move,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' figure.StartPoint);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Line,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Line,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Move,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Move,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Move,The following statement contains a magic number: Assert.Equal(new Point(20' 20)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Move,The following statement contains a magic number: Assert.Equal(new Point(20' 20)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Relative_Move,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Relative_Move,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Relative_Move,The following statement contains a magic number: Assert.Equal(new Point(30' 30)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,Parses_Implicit_Line_Command_After_Relative_Move,The following statement contains a magic number: Assert.Equal(new Point(30' 30)' lineSegment.Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,CloseFigure_Should_Move_CurrentPoint_To_CreateFigurePoint,The following statement contains a magic number: Assert.Equal(2' pathGeometry.Figures.Count);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,CloseFigure_Should_Move_CurrentPoint_To_CreateFigurePoint,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' figure.StartPoint);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,CloseFigure_Should_Move_CurrentPoint_To_CreateFigurePoint,The following statement contains a magic number: Assert.Equal(new Point(10' 10)' figure.StartPoint);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,CloseFigure_Should_Move_CurrentPoint_To_CreateFigurePoint,The following statement contains a magic number: Assert.Equal(new Point(100' 100)' ((LineSegment)figure.Segments[0]).Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,CloseFigure_Should_Move_CurrentPoint_To_CreateFigurePoint,The following statement contains a magic number: Assert.Equal(new Point(100' 100)' ((LineSegment)figure.Segments[0]).Point);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,CloseFigure_Should_Move_CurrentPoint_To_CreateFigurePoint,The following statement contains a magic number: Assert.Equal(new Point(20' 20)' figure.StartPoint);
Magic Number,Avalonia.Visuals.UnitTests.Media,PathMarkupParserTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PathMarkupParserTests.cs,CloseFigure_Should_Move_CurrentPoint_To_CreateFigurePoint,The following statement contains a magic number: Assert.Equal(new Point(20' 20)' figure.StartPoint);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Changing_Thickness_Raises_Invalidated,The following statement contains a magic number: target.Thickness = 18;
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Changing_DashStyle_Dashes_Raises_Invalidated,The following statement contains a magic number: dashes.Dashes = new[] { 0.1' 0.2 };
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Changing_DashStyle_Dashes_Raises_Invalidated,The following statement contains a magic number: dashes.Dashes = new[] { 0.1' 0.2 };
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Immutable_And_Mmutable_Pens,The following statement contains a magic number: var target1 = new ImmutablePen(                  brush: brush'                  thickness: 2'                  dashStyle: (ImmutableDashStyle)DashStyle.Dash'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Immutable_And_Mmutable_Pens,The following statement contains a magic number: var target1 = new ImmutablePen(                  brush: brush'                  thickness: 2'                  dashStyle: (ImmutableDashStyle)DashStyle.Dash'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Immutable_And_Mmutable_Pens,The following statement contains a magic number: var target2 = new Pen(                  brush: brush'                  thickness: 2'                  dashStyle: DashStyle.Dash'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Immutable_And_Mmutable_Pens,The following statement contains a magic number: var target2 = new Pen(                  brush: brush'                  thickness: 2'                  dashStyle: DashStyle.Dash'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target1 = new ImmutablePen(                  brush: brush'                  thickness: 2'                  dashStyle: new ImmutableDashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target1 = new ImmutablePen(                  brush: brush'                  thickness: 2'                  dashStyle: new ImmutableDashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target1 = new ImmutablePen(                  brush: brush'                  thickness: 2'                  dashStyle: new ImmutableDashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target1 = new ImmutablePen(                  brush: brush'                  thickness: 2'                  dashStyle: new ImmutableDashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target1 = new ImmutablePen(                  brush: brush'                  thickness: 2'                  dashStyle: new ImmutableDashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target2 = new Pen(                  brush: brush'                  thickness: 2'                  dashStyle: new DashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target2 = new Pen(                  brush: brush'                  thickness: 2'                  dashStyle: new DashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target2 = new Pen(                  brush: brush'                  thickness: 2'                  dashStyle: new DashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target2 = new Pen(                  brush: brush'                  thickness: 2'                  dashStyle: new DashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,PenTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\PenTests.cs,Equality_Is_Implemented_Between_Mutable_And_Immutable_DashStyles,The following statement contains a magic number: var target2 = new Pen(                  brush: brush'                  thickness: 2'                  dashStyle: new DashStyle(new[] { 0.1' 0.2 }' 5)'                  lineCap: PenLineCap.Round'                  lineJoin: PenLineJoin.Round'                  miterLimit: 21);
Magic Number,Avalonia.Visuals.UnitTests.Media,RectangleGeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectangleGeometryTests.cs,Rectangle_With_Transform_Can_Be_Changed,The following statement contains a magic number: var target = new RectangleGeometry                  {                      Rect = new Rect(0' 0' 100' 100)'                      Transform = new RotateTransform(45)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Media,RectangleGeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectangleGeometryTests.cs,Rectangle_With_Transform_Can_Be_Changed,The following statement contains a magic number: var target = new RectangleGeometry                  {                      Rect = new Rect(0' 0' 100' 100)'                      Transform = new RotateTransform(45)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Media,RectangleGeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectangleGeometryTests.cs,Rectangle_With_Transform_Can_Be_Changed,The following statement contains a magic number: var target = new RectangleGeometry                  {                      Rect = new Rect(0' 0' 100' 100)'                      Transform = new RotateTransform(45)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Media,RectangleGeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectangleGeometryTests.cs,Rectangle_With_Transform_Can_Be_Changed,The following statement contains a magic number: target.Rect = new Rect(50' 50' 150' 150);
Magic Number,Avalonia.Visuals.UnitTests.Media,RectangleGeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectangleGeometryTests.cs,Rectangle_With_Transform_Can_Be_Changed,The following statement contains a magic number: target.Rect = new Rect(50' 50' 150' 150);
Magic Number,Avalonia.Visuals.UnitTests.Media,RectangleGeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectangleGeometryTests.cs,Rectangle_With_Transform_Can_Be_Changed,The following statement contains a magic number: target.Rect = new Rect(50' 50' 150' 150);
Magic Number,Avalonia.Visuals.UnitTests.Media,RectangleGeometryTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectangleGeometryTests.cs,Rectangle_With_Transform_Can_Be_Changed,The following statement contains a magic number: target.Rect = new Rect(50' 50' 150' 150);
Magic Number,Avalonia.Visuals.UnitTests.Media,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Rect(1' 2' 3' -4);
Magic Number,Avalonia.Visuals.UnitTests.Media,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Rect(1' 2' 3' -4);
Magic Number,Avalonia.Visuals.UnitTests.Media,RectTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\RectTests.cs,Parse_Parses,The following statement contains a magic number: var expected = new Rect(1' 2' 3' -4);
Magic Number,Avalonia.Visuals.UnitTests.Media,TypefaceTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\TypefaceTests.cs,Exception_Should_Be_Thrown_If_FontWeight_LessThanEqualTo_Zero,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new Typeface("foo"' 0' (FontStyle)12));
Magic Number,Avalonia.Visuals.UnitTests.Media.Fonts,FontFamilyLoaderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Media\Fonts\FontFamilyLoaderTests.cs,Should_Load_Matching_Assets,The following statement contains a magic number: Assert.Equal(2' fontAssets.Length);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height= 100'                  Child = decorator = new Decorator                  {                      Child = border = new Border                      {                          Width = 50'                          Height = 50'                          Background = Brushes.Red'                      }'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height= 100'                  Child = decorator = new Decorator                  {                      Child = border = new Border                      {                          Width = 50'                          Height = 50'                          Background = Brushes.Red'                      }'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height= 100'                  Child = decorator = new Decorator                  {                      Child = border = new Border                      {                          Width = 50'                          Height = 50'                          Background = Brushes.Red'                      }'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height= 100'                  Child = decorator = new Decorator                  {                      Child = border = new Border                      {                          Width = 50'                          Height = 50'                          Background = Brushes.Red'                      }'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: Assert.Equal(new Rect(25' 25' 50' 50)' dirty[0]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: Assert.Equal(new Rect(25' 25' 50' 50)' dirty[0]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: Assert.Equal(new Rect(25' 25' 50' 50)' dirty[0]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Add_Dirty_Rect_On_Child_Remove,The following statement contains a magic number: Assert.Equal(new Rect(25' 25' 50' 50)' dirty[0]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Update_VisualNode_Order_On_ZIndex_Change,The following statement contains a magic number: var root = new TestRoot              {                  Child = stack = new StackPanel                  {                      Children =                      {                          (canvas1 = new Canvas { ZIndex = 1 })'                          (canvas2 = new Canvas { ZIndex = 2 })'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Update_VisualNode_Order_On_ZIndex_Change,The following statement contains a magic number: canvas1.ZIndex = 3;
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Update_VisualNode_Order_On_ZIndex_Change_With_Dirty_Ancestor,The following statement contains a magic number: var root = new TestRoot              {                  Child = stack = new StackPanel                  {                      Children =                      {                          (canvas1 = new Canvas { ZIndex = 1 })'                          (canvas2 = new Canvas { ZIndex = 2 })'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Update_VisualNode_Order_On_ZIndex_Change_With_Dirty_Ancestor,The following statement contains a magic number: canvas1.ZIndex = 3;
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_For_Controls_With_Less_Than_1_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Opacity = 0.5'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_For_Controls_With_Less_Than_1_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Opacity = 0.5'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_For_Controls_With_Less_Than_1_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Opacity = 0.5'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_For_Controls_With_Less_Than_1_Opacity,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_For_Controls_With_Less_Than_1_Opacity,The following statement contains a magic number: context.Verify(x => x.PushOpacity(0.5)' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_For_Controls_With_Less_Than_1_Opacity,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_For_Controls_With_Less_Than_1_Opacity,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Draw_Controls_With_0_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Opacity = 0'                      Child = new Border                      {                          Background = Brushes.Green'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Draw_Controls_With_0_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Opacity = 0'                      Child = new Border                      {                          Background = Brushes.Green'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Draw_Controls_With_0_Opacity,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Draw_Controls_With_0_Opacity,The following statement contains a magic number: context.Verify(x => x.PushOpacity(0.5)' Times.Never);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Draw_Controls_With_0_Opacity,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Never);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Draw_Controls_With_0_Opacity,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Never);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_Mask,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      OpacityMask = Brushes.Green'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_Mask,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      OpacityMask = Brushes.Green'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_Mask,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_Mask,The following statement contains a magic number: context.Verify(x => x.PushOpacityMask(Brushes.Green' new Rect(0' 0' 100' 100))' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_Mask,The following statement contains a magic number: context.Verify(x => x.PushOpacityMask(Brushes.Green' new Rect(0' 0' 100' 100))' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_Mask,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Push_Opacity_Mask,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Create_And_Delete_Layers_For_Controls_With_Animated_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Child = border = new Border                      {                          Background = Brushes.Green'                          Child = new Canvas()'                          Opacity = 0.9'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Create_And_Delete_Layers_For_Controls_With_Animated_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Child = border = new Border                      {                          Background = Brushes.Green'                          Child = new Canvas()'                          Opacity = 0.9'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Create_And_Delete_Layers_For_Controls_With_Animated_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Child = border = new Border                      {                          Background = Brushes.Green'                          Child = new Canvas()'                          Opacity = 0.9'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Create_And_Delete_Layers_For_Controls_With_Animated_Opacity,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Create_Layer_For_Childless_Control_With_Animated_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Child = border = new Border                      {                          Background = Brushes.Green'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Create_Layer_For_Childless_Control_With_Animated_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new Border                  {                      Background = Brushes.Red'                      Child = border = new Border                      {                          Background = Brushes.Green'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Create_Layer_For_Childless_Control_With_Animated_Opacity,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Push_Opacity_For_Transparent_Layer_Root_Control,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = border = new Border                  {                      Background = Brushes.Red'                      Child = new Canvas()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Push_Opacity_For_Transparent_Layer_Root_Control,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = border = new Border                  {                      Background = Brushes.Red'                      Child = new Canvas()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Push_Opacity_For_Transparent_Layer_Root_Control,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Push_Opacity_For_Transparent_Layer_Root_Control,The following statement contains a magic number: context.Verify(x => x.PushOpacity(0.5)' Times.Never);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Push_Opacity_For_Transparent_Layer_Root_Control,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Not_Push_Opacity_For_Transparent_Layer_Root_Control,The following statement contains a magic number: context.Verify(x => x.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100)' 0)' Times.Once);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Draw_Transparent_Layer_With_Correct_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = border = new Border                  {                      Background = Brushes.Red'                      Child = new Canvas()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Draw_Transparent_Layer_With_Correct_Opacity,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = border = new Border                  {                      Background = Brushes.Red'                      Child = new Canvas()'                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Draw_Transparent_Layer_With_Correct_Opacity,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Should_Draw_Transparent_Layer_With_Correct_Opacity,The following statement contains a magic number: context.Verify(x => x.DrawImage(borderLayer' 0.5' It.IsAny<Rect>()' It.IsAny<Rect>()' BitmapInterpolationMode.Default));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Can_Dirty_Control_In_SceneInvalidated,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new StackPanel                  {                      Children =                      {                          (border1 = new Border                          {                              Background = Brushes.Red'                              Child = new Canvas()'                          })'                          (border2 = new Border                          {                              Background = Brushes.Red'                              Child = new Canvas()'                          })'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests.cs,Can_Dirty_Control_In_SceneInvalidated,The following statement contains a magic number: var root = new TestRoot              {                  Width = 100'                  Height = 100'                  Child = new StackPanel                  {                      Children =                      {                          (border1 = new Border                          {                              Background = Brushes.Red'                              Child = new Canvas()'                          })'                          (border2 = new Border                          {                              Background = Brushes.Red'                              Child = new Canvas()'                          })'                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Empty_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Empty_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Empty_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Empty_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Empty_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Empty_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(10' 10)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(10' 10)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: Assert.Equal(new[] { container.Children[2]' container.Children[0]' container.Children[1] }' result);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(120' 120)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(120' 120)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 50)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 50)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: scroll.Offset = new Vector(0' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = path = new Path                      {                          Width = 200'                          Height = 200'                          Fill = Brushes.Red'                          Data = StreamGeometry.Parse("M100'0 L0'100 100'100")                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = path = new Path                      {                          Width = 200'                          Height = 200'                          Fill = Brushes.Red'                          Data = StreamGeometry.Parse("M100'0 L0'100 100'100")                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = path = new Path                      {                          Width = 200'                          Height = 200'                          Fill = Brushes.Red'                          Data = StreamGeometry.Parse("M100'0 L0'100 100'100")                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = path = new Path                      {                          Width = 200'                          Height = 200'                          Fill = Brushes.Red'                          Data = StreamGeometry.Parse("M100'0 L0'100 100'100")                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(10' 10)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Path_When_Outside_Fill,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(10' 10)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 400'                      Height = 400'                      Child = border = new Border                      {                          Background = Brushes.Red'                          Clip = StreamGeometry.Parse("M100'0 L0'100 100'100")'                          Width = 200'                          Height = 200'                          Child = canvas = new Canvas                          {                              Background = Brushes.Yellow'                              Margin = new Thickness(10)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 400'                      Height = 400'                      Child = border = new Border                      {                          Background = Brushes.Red'                          Clip = StreamGeometry.Parse("M100'0 L0'100 100'100")'                          Width = 200'                          Height = 200'                          Child = canvas = new Canvas                          {                              Background = Brushes.Yellow'                              Margin = new Thickness(10)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 400'                      Height = 400'                      Child = border = new Border                      {                          Background = Brushes.Red'                          Clip = StreamGeometry.Parse("M100'0 L0'100 100'100")'                          Width = 200'                          Height = 200'                          Child = canvas = new Canvas                          {                              Background = Brushes.Yellow'                              Margin = new Thickness(10)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 400'                      Height = 400'                      Child = border = new Border                      {                          Background = Brushes.Red'                          Clip = StreamGeometry.Parse("M100'0 L0'100 100'100")'                          Width = 200'                          Height = 200'                          Child = canvas = new Canvas                          {                              Background = Brushes.Yellow'                              Margin = new Thickness(10)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 400'                      Height = 400'                      Child = border = new Border                      {                          Background = Brushes.Red'                          Clip = StreamGeometry.Parse("M100'0 L0'100 100'100")'                          Width = 200'                          Height = 200'                          Child = canvas = new Canvas                          {                              Background = Brushes.Yellow'                              Margin = new Thickness(10)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' border.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' border.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' border.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' border.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(200' 200)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(200' 200)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(110' 110)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,DeferredRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\DeferredRendererTests_HitTesting.cs,HitTest_Should_Respect_Geometry_Clip,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(110' 110)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: visual.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(0' 0' 400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: visual.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(0' 0' 400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(10' 10' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(10' 10' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(10' 10' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(10' 10' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(10' 10' 100' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(10' 10' 100' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(10' 10' 100' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(10' 10' 100' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: visual.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(0' 0' 400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: visual.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(0' 0' 400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(100' 100' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(100' 100' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(100' 100' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(100' 100' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.Object.RenderTransform = new ScaleTransform() { ScaleX = 2' ScaleY = 2 };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: child.Object.RenderTransform = new ScaleTransform() { ScaleX = 2' ScaleY = 2 };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(50' 50' 200' 200)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(50' 50' 200' 200)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(50' 50' 200' 200)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_With_RenderTransform_Call_RenderRoot_Invalidate,The following statement contains a magic number: renderRoot.Verify(v => v.Invalidate(new Rect(50' 50' 200' 200)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: visual.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(0' 0' 400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: visual.As<IVisual>().Setup(v => v.Bounds).Returns(new Rect(0' 0' 400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Rect childBounds = new Rect(0' 0' 100' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Rect childBounds = new Rect(0' 0' 100' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' invalidationCalls[0]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' invalidationCalls[0]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: target.Paint(new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: target.Paint(new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: childBounds = new Rect(100' 100' 100' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: childBounds = new Rect(100' 100' 100' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: childBounds = new Rect(100' 100' 100' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: childBounds = new Rect(100' 100' 100' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' invalidationCalls[1]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' invalidationCalls[1]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 100' 100)' invalidationCalls[2]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 100' 100)' invalidationCalls[2]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 100' 100)' invalidationCalls[2]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 100' 100)' invalidationCalls[2]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,AddDirty_For_Child_Moved_Should_Invalidate_Previous_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 100' 100)' invalidationCalls[2]);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform,The following statement contains a magic number: target.Width = 100;
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform,The following statement contains a magic number: target.Height = 50;
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform,The following statement contains a magic number: var child = new Panel()              {                  RenderTransform = new RotateTransform() { Angle = 90 }'                  Children =                  {                      new Panel()                      {                          Children =                          {                              target                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform,The following statement contains a magic number: root.Measure(new Size(50' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform,The following statement contains a magic number: root.Measure(new Size(50' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform,The following statement contains a magic number: root.Arrange(new Rect(new Size(50' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform,The following statement contains a magic number: root.Arrange(new Rect(new Size(50' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform2,The following statement contains a magic number: target.Width = 100;
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform2,The following statement contains a magic number: target.Height = 50;
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform2,The following statement contains a magic number: var child = new Panel()              {                  RenderTransform = new RotateTransform() { Angle = 90 }'                  Children =                  {                      new Panel()                      {                          Children =                          {                              target                          }                      }                  }              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform2,The following statement contains a magic number: root.Measure(new Size(300' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform2,The following statement contains a magic number: root.Measure(new Size(300' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform2,The following statement contains a magic number: root.Arrange(new Rect(new Size(300' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests.cs,Should_Render_Child_In_Parent_With_RenderTransform2,The following statement contains a magic number: root.Arrange(new Rect(new Size(300' 100)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center'                          IsVisible = false'                          Child = visible = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Stretch'                              VerticalAlignment = VerticalAlignment.Stretch'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Invisible_Controls_At_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          HorizontalAlignment = HorizontalAlignment.Center'                          VerticalAlignment = VerticalAlignment.Center                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(10' 10)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Point,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(10' 10)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 50'                                  Height = 50'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }'                              new Border                              {                                  Width = 75'                                  Height = 75'                                  ZIndex = 2'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Center'                                  VerticalAlignment = VerticalAlignment.Center                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(100' 100)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Return_Top_Controls_First_With_ZIndex,The following statement contains a magic number: Assert.Equal(                      new[]                       {                          container.Children[2]'                          container.Children[0]'                          container.Children[1]'                          container'                          root                      }'                       result);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 200'                          Height = 200'                          Background = Brushes.Red'                          ClipToBounds = false'                          Children =                          {                              new Border                              {                                  Width = 100'                                  Height = 100'                                  ZIndex = 1'                                  Background = Brushes.Red'                                  HorizontalAlignment = HorizontalAlignment.Left'                                  VerticalAlignment = VerticalAlignment.Top'                                  Child = target = new Border                                  {                                      Width = 50'                                      Height = 50'                                      Background = Brushes.Red'                                      HorizontalAlignment = HorizontalAlignment.Left'                                      VerticalAlignment = VerticalAlignment.Top'                                      RenderTransform = new TranslateTransform(110' 110)'                                  }                              }'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(120' 120)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Find_Control_Translated_Outside_Parent_Bounds,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(120' 120)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              new Panel()                              {                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  ClipToBounds = true'                                  Children =                                  {                                      (target = new Border()                                      {                                          Width = 100'                                          Height = 100'                                          Background = Brushes.Red'                                          Margin = new Thickness(0' -100' 0' 0)                                      })                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 50)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Parent_Bounds_When_Clipped,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 50)' root' null);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var root = new TestRoot                  {                      Child = container = new Panel                      {                          Width = 100'                          Height = 200'                          Background = Brushes.Red'                          Children =                          {                              (target = new Border()                              {                                  Name = "b1"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                              })'                              new Border()                              {                                  Name = "b2"'                                  Width = 100'                                  Height = 100'                                  Background = Brushes.Red'                                  Margin = new Thickness(0' 100' 0' 0)'                                  Child = scroll = new ScrollContentPresenter()                                  {                                      CanHorizontallyScroll = true'                                      CanVerticallyScroll = true'                                      Content = new StackPanel()                                      {                                          Children =                                          {                                              (item1 = new Border()                                              {                                                  Name = "b3"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                              (item2 = new Border()                                              {                                                  Name = "b4"'                                                  Width = 100'                                                  Height = 100'                                                  Background = Brushes.Red'                                              })'                                          }                                      }                                  }                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: var result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: scroll.Offset = new Vector(0' 100);
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 150)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,ImmediateRendererTests_HitTesting,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\ImmediateRendererTests_HitTesting.cs,HitTest_Should_Not_Find_Control_Outside_Scroll_Viewport,The following statement contains a magic number: result = root.Renderer.HitTest(new Point(50' 50)' root' null).First();
Magic Number,Avalonia.Visuals.UnitTests.Rendering,RenderLoopTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\RenderLoopTests.cs,RenderLoop_Passes_Tick_Count_To_Update,The following statement contains a magic number: var time = new TimeSpan(123456789L);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,TrimChildren_Should_Trim_Children,The following statement contains a magic number: Assert.Equal(2' node.Children.Count);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Add_DrawOperations,The following statement contains a magic number: target.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Add_DrawOperations,The following statement contains a magic number: target.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Add_DrawOperations,The following statement contains a magic number: target.DrawRectangle(new Pen(Brushes.Green' 1)' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Add_DrawOperations,The following statement contains a magic number: target.DrawRectangle(new Pen(Brushes.Green' 1)' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Add_DrawOperations,The following statement contains a magic number: Assert.Equal(2' node.DrawOperations.Count);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Not_Replace_Identical_DrawOperation,The following statement contains a magic number: var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Not_Replace_Identical_DrawOperation,The following statement contains a magic number: var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Not_Replace_Identical_DrawOperation,The following statement contains a magic number: target.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Not_Replace_Identical_DrawOperation,The following statement contains a magic number: target.FillRectangle(Brushes.Red' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Replace_Different_DrawOperation,The following statement contains a magic number: var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Replace_Different_DrawOperation,The following statement contains a magic number: var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Replace_Different_DrawOperation,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Replace_Different_DrawOperation,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Update_DirtyRects,The following statement contains a magic number: var operation = new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Update_DirtyRects,The following statement contains a magic number: var operation = new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Update_DirtyRects,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Update_DirtyRects,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Update_DirtyRects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' layers.Single().Dirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Update_DirtyRects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' layers.Single().Dirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Trim_DrawOperations,The following statement contains a magic number: i < 4
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Trim_DrawOperations,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 10' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Trim_DrawOperations,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 10' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Trim_DrawOperations,The following statement contains a magic number: target.FillRectangle(Brushes.Blue' new Rect(0' 0' 20' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Trim_DrawOperations,The following statement contains a magic number: target.FillRectangle(Brushes.Blue' new Rect(0' 0' 20' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Should_Trim_DrawOperations,The following statement contains a magic number: Assert.Equal(2' node.DrawOperations.Count);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Trimmed_DrawOperations_Releases_Reference,The following statement contains a magic number: var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Trimmed_DrawOperations_Releases_Reference,The following statement contains a magic number: var operation = RefCountable.Create(new RectangleNode(Matrix.Identity' Brushes.Red' null' new Rect(0' 0' 100' 100)' 0));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Trimmed_DrawOperations_Releases_Reference,The following statement contains a magic number: Assert.Equal(2' operation.RefCount);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Trimmed_DrawOperations_Releases_Reference,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DeferredDrawingContextImplTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DeferredDrawingContextImplTests.cs,Trimmed_DrawOperations_Releases_Reference,The following statement contains a magic number: target.FillRectangle(Brushes.Green' new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,DrawOperationTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\DrawOperationTests.cs,Image_Node_Releases_Reference_To_Bitmap_On_Dispose,The following statement contains a magic number: Assert.Equal(2' bitmap.RefCount);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Build_Initial_Scene,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = border = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          Child = textBlock = new TextBlock                          {                              Text = "Hello World"'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Build_Initial_Scene,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = border = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          Child = textBlock = new TextBlock                          {                              Text = "Hello World"'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Border                      {                          Margin = new Thickness(10' 20' 30' 40)'                          Child = canvas = new Canvas                          {                              ClipToBounds = true'                              Background = Brushes.AliceBlue'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Border                      {                          Margin = new Thickness(10' 20' 30' 40)'                          Child = canvas = new Canvas                          {                              ClipToBounds = true'                              Background = Brushes.AliceBlue'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Border                      {                          Margin = new Thickness(10' 20' 30' 40)'                          Child = canvas = new Canvas                          {                              ClipToBounds = true'                              Background = Brushes.AliceBlue'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Border                      {                          Margin = new Thickness(10' 20' 30' 40)'                          Child = canvas = new Canvas                          {                              ClipToBounds = true'                              Background = Brushes.AliceBlue'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Border                      {                          Margin = new Thickness(10' 20' 30' 40)'                          Child = canvas = new Canvas                          {                              ClipToBounds = true'                              Background = Brushes.AliceBlue'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Border                      {                          Margin = new Thickness(10' 20' 30' 40)'                          Child = canvas = new Canvas                          {                              ClipToBounds = true'                              Background = Brushes.AliceBlue'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Respect_Margin_For_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(10' 20' 160' 240)' canvasNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_Intersection_With_Parent_ClipBounds,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 200'                      Height = 300'                      Child = canvas = new Canvas                      {                          ClipToBounds = true'                          Width = 100'                          Height = 100'                          HorizontalAlignment = HorizontalAlignment.Left'                          VerticalAlignment = VerticalAlignment.Top'                          Children =                          {                              (border = new Border                              {                                  Background = Brushes.AliceBlue'                                  ClipToBounds = true'                                  Width = 100'                                  Height = 100'                                  [Canvas.LeftProperty] = 50'                                  [Canvas.TopProperty] = 50'                              })                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 50' 50)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: canvas.Width = canvas.Height = 125;
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 75' 75)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 75' 75)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 75' 75)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_ClipBounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 75' 75)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = new Decorator                      {                          Margin = new Thickness(24' 26)'                          Child = target = new Border                          {                              ClipToBounds = true'                              Margin = new Thickness(26' 24)'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = new Decorator                      {                          Margin = new Thickness(24' 26)'                          Child = target = new Border                          {                              ClipToBounds = true'                              Margin = new Thickness(26' 24)'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = new Decorator                      {                          Margin = new Thickness(24' 26)'                          Child = target = new Border                          {                              ClipToBounds = true'                              Margin = new Thickness(26' 24)'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = new Decorator                      {                          Margin = new Thickness(24' 26)'                          Child = target = new Border                          {                              ClipToBounds = true'                              Margin = new Thickness(26' 24)'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = new Decorator                      {                          Margin = new Thickness(24' 26)'                          Child = target = new Border                          {                              ClipToBounds = true'                              Margin = new Thickness(26' 24)'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = new Decorator                      {                          Margin = new Thickness(24' 26)'                          Child = target = new Border                          {                              ClipToBounds = true'                              Margin = new Thickness(26' 24)'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 100' 100)' targetNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 100' 100)' targetNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 100' 100)' targetNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,ClipBounds_Should_Be_In_Global_Coordinates,The following statement contains a magic number: Assert.Equal(new Rect(50' 50' 100' 100)' targetNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 400'                      Height = 200'                      Child = new Decorator                      {                          Width = 200'                          Height = 100'                          Child = border = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Right'                              Width = 100'                              RenderTransform = new ScaleTransform(0.5' 1)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 400'                      Height = 200'                      Child = new Decorator                      {                          Width = 200'                          Height = 100'                          Child = border = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Right'                              Width = 100'                              RenderTransform = new ScaleTransform(0.5' 1)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 400'                      Height = 200'                      Child = new Decorator                      {                          Width = 200'                          Height = 100'                          Child = border = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Right'                              Width = 100'                              RenderTransform = new ScaleTransform(0.5' 1)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 400'                      Height = 200'                      Child = new Decorator                      {                          Width = 200'                          Height = 100'                          Child = border = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Right'                              Width = 100'                              RenderTransform = new ScaleTransform(0.5' 1)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 400'                      Height = 200'                      Child = new Decorator                      {                          Width = 200'                          Height = 100'                          Child = border = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Right'                              Width = 100'                              RenderTransform = new ScaleTransform(0.5' 1)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 400'                      Height = 200'                      Child = new Decorator                      {                          Width = 200'                          Height = 100'                          Child = border = new Border                          {                              Background = Brushes.Red'                              HorizontalAlignment = HorizontalAlignment.Right'                              Width = 100'                              RenderTransform = new ScaleTransform(0.5' 1)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var expectedTransform = Matrix.CreateScale(0.5' 1) * Matrix.CreateTranslation(225' 50);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var expectedTransform = Matrix.CreateScale(0.5' 1) * Matrix.CreateTranslation(225' 50);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Transform_For_Control_With_RenderTransform_Should_Be_Correct_After_Update,The following statement contains a magic number: var expectedTransform = Matrix.CreateScale(0.5' 1) * Matrix.CreateTranslation(225' 50);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Border_Background_Node,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = border = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          Child = textBlock = new TextBlock                          {                              Foreground = Brushes.Green'                              Text = "Hello World"'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Border_Background_Node,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = border = new Border                      {                          Width = 100'                          Height = 100'                          Background = Brushes.Red'                          Child = textBlock = new TextBlock                          {                              Foreground = Brushes.Green'                              Text = "Hello World"'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Added,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = border = new Border                      {                          Background = Brushes.Red'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Added,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = border = new Border                      {                          Background = Brushes.Red'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Removed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = border = new Border                      {                          Background = Brushes.Red'                          Child = decorator = new Decorator                          {                              Child = canvas = new Canvas                              {                                  Background = Brushes.AliceBlue'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Removed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = border = new Border                      {                          Background = Brushes.Red'                          Child = decorator = new Decorator                          {                              Child = canvas = new Canvas                              {                                  Background = Brushes.AliceBlue'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Removed,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.Layers.Single().Dirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Removed,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.Layers.Single().Dirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Moved,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = new StackPanel                      {                          Children =                          {                              (moveFrom = new Decorator                              {                                  Child = moveMe = new Canvas()'                              })'                              (moveTo = new Decorator())'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Moved,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = new StackPanel                      {                          Children =                          {                              (moveFrom = new Decorator                              {                                  Child = moveMe = new Canvas()'                              })'                              (moveTo = new Decorator())'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Made_Invisible,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Child = border = new Border                          {                              Background = Brushes.Red'                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Made_Invisible,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Child = border = new Border                          {                              Background = Brushes.Red'                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Made_Invisible,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.Layers.Single().Dirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_When_Control_Made_Invisible,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.Layers.Single().Dirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Not_Dispose_Active_VisualNode_When_Control_Reparented_And_Child_Made_Invisible,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = panel = new StackPanel                      {                          Children =                          {                              (border1 = new Border                              {                                  Background = Brushes.Red'                              })'                              (border2 = new Border                              {                                  Background = Brushes.Green'                              })'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Not_Dispose_Active_VisualNode_When_Control_Reparented_And_Child_Made_Invisible,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = panel = new StackPanel                      {                          Children =                          {                              (border1 = new Border                              {                                  Background = Brushes.Red'                              })'                              (border2 = new Border                              {                                  Background = Brushes.Green'                              })'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Not_Dispose_Active_VisualNode_When_Control_Reparented_And_Child_Made_Invisible,The following statement contains a magic number: Assert.Equal(2' panelNode.Children.Count);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              ClipToBounds = true'                              Margin = new Thickness(0' -5' 0' 0)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              ClipToBounds = true'                              Margin = new Thickness(0' -5' 0' 0)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              ClipToBounds = true'                              Margin = new Thickness(0' -5' 0' 0)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              ClipToBounds = true'                              Margin = new Thickness(0' -5' 0' 0)'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: Assert.Equal(new Rect(0' 5' 100' 95)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: Assert.Equal(new Rect(0' 5' 100' 95)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: Assert.Equal(new Rect(0' 5' 100' 95)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: border.Margin = new Thickness(0' -8' 0' 0);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: Assert.Equal(new Rect(0' 2' 100' 98)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: Assert.Equal(new Rect(0' 2' 100' 98)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_ClipBounds_For_Negative_Margin,The following statement contains a magic number: Assert.Equal(new Rect(0' 2' 100' 98)' borderNode.ClipBounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(0' 10)' borderNode.Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(0' 10)' canvasNode.Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: decorator.Margin = new Thickness(0' 20' 0' 0);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(0' 20)' borderNode.Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Should_Update_Descendent_Tranform_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(0' 20)' canvasNode.Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: var tree = new TestRoot                  {                      Width = 100'                      Height = 100'                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(0' 10)' borderNode.Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(0' 10)' canvasNode.Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: decorator.Margin = new Thickness(0' 20' 0' 0);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new[] { new Rect(0' 10' 100' 90) }' rects);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new[] { new Rect(0' 10' 100' 90) }' rects);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,DirtyRects_Should_Contain_Old_And_New_Bounds_When_Margin_Changed,The following statement contains a magic number: Assert.Equal(new[] { new Rect(0' 10' 100' 90) }' rects);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = decorator = new Decorator                      {                          Margin = new Thickness(0' 10' 0' 0)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Child = canvas = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: Assert.Equal(new Size(100' 100)' scene.Size);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: Assert.Equal(new Size(100' 100)' scene.Size);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: tree.ClientSize = new Size(110' 120);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: tree.ClientSize = new Size(110' 120);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: Assert.Equal(new Size(110' 120)' scene.Size);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: Assert.Equal(new Size(110' 120)' scene.Size);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var expected = new[]                  {                      new Rect(100' 0' 10' 100)'                      new Rect(0' 100' 110' 20)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var expected = new[]                  {                      new Rect(100' 0' 10' 100)'                      new Rect(0' 100' 110' 20)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var expected = new[]                  {                      new Rect(100' 0' 10' 100)'                      new Rect(0' 100' 110' 20)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var expected = new[]                  {                      new Rect(100' 0' 10' 100)'                      new Rect(0' 100' 110' 20)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var expected = new[]                  {                      new Rect(100' 0' 10' 100)'                      new Rect(0' 100' 110' 20)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Resizing_Scene_Should_Add_DirtyRects,The following statement contains a magic number: var expected = new[]                  {                      new Rect(100' 0' 10' 100)'                      new Rect(0' 100' 110' 20)'                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Setting_Opacity_Should_Add_Descendent_Bounds_To_DirtyRects,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = decorator = new Decorator                      {                          Child = border = new Border                          {                              Background = Brushes.Red'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Setting_Opacity_Should_Add_Descendent_Bounds_To_DirtyRects,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = decorator = new Decorator                      {                          Child = border = new Border                          {                              Background = Brushes.Red'                              Width = 100'                              Height = 100'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Setting_Opacity_Should_Add_Descendent_Bounds_To_DirtyRects,The following statement contains a magic number: decorator.Opacity = 0.5;
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Setting_Opacity_Should_Add_Descendent_Bounds_To_DirtyRects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' dirty);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Setting_Opacity_Should_Add_Descendent_Bounds_To_DirtyRects,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' dirty);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Disposing_Scene_Releases_DrawOperation_References,The following statement contains a magic number: Assert.Equal(2' bitmap.RefCount);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Disposing_Scene_Releases_DrawOperation_References,The following statement contains a magic number: Assert.Equal(3' bitmap.RefCount);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Disposing_Scene_Releases_DrawOperation_References,The following statement contains a magic number: Assert.Equal(2' bitmap.RefCount);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Replacing_Control_Releases_DrawOperation_Reference,The following statement contains a magic number: Assert.Equal(2' bitmap.RefCount);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas()                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas()                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas()                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas()                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas()                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: Assert.Equal(0.5' scene.Layers[border].Opacity);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: Assert.Equal(2' scene.Layers.Count());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: Assert.Equal(new Rect(21' 21' 58' 78)' rootDirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: Assert.Equal(new Rect(21' 21' 58' 78)' rootDirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: Assert.Equal(new Rect(21' 21' 58' 78)' rootDirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_Children_Should_Start_New_Layer,The following statement contains a magic number: Assert.Equal(new Rect(21' 21' 58' 78)' rootDirty.Single());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_No_Children_Should_Not_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_No_Children_Should_Not_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_No_Children_Should_Not_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_No_Children_Should_Not_Start_New_Layer,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Control_With_Animated_Opacity_And_No_Children_Should_Not_Start_New_Layer,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Removing_Control_With_Animated_Opacity_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Removing_Control_With_Animated_Opacity_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Removing_Control_With_Animated_Opacity_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Removing_Control_With_Animated_Opacity_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Removing_Control_With_Animated_Opacity_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Removing_Control_With_Animated_Opacity_Should_Remove_Layers,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Removing_Control_With_Animated_Opacity_Should_Remove_Layers,The following statement contains a magic number: Assert.Equal(3' scene.Layers.Count);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Hiding_Transparent_Control_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Hiding_Transparent_Control_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Hiding_Transparent_Control_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Hiding_Transparent_Control_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Hiding_Transparent_Control_Should_Remove_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Padding = new Thickness(10)'                      Width = 100'                      Height = 120'                      Child = decorator = new Decorator                      {                          Padding = new Thickness(11)'                          Child = border = new Border                          {                              Background = Brushes.Red'                              Padding = new Thickness(12)'                              Child = canvas = new Canvas                              {                                  Children = { new TextBlock() }'                              }                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Hiding_Transparent_Control_Should_Remove_Layers,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,Hiding_Transparent_Control_Should_Remove_Layers,The following statement contains a magic number: Assert.Equal(3' scene.Layers.Count);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,GeometryClip_Should_Affect_Child_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = decorator = new Decorator                      {                          Clip = clip'                          Margin = new Thickness(12' 16)'                          Child = border = new Border                          {                              Opacity = 0.5'                              Child = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,GeometryClip_Should_Affect_Child_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = decorator = new Decorator                      {                          Clip = clip'                          Margin = new Thickness(12' 16)'                          Child = border = new Border                          {                              Opacity = 0.5'                              Child = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,GeometryClip_Should_Affect_Child_Layers,The following statement contains a magic number: var tree = new TestRoot                  {                      Child = decorator = new Decorator                      {                          Clip = clip'                          Margin = new Thickness(12' 16)'                          Child = border = new Border                          {                              Opacity = 0.5'                              Child = new Canvas()'                          }                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,GeometryClip_Should_Affect_Child_Layers,The following statement contains a magic number: var animation = new BehaviorSubject<double>(0.5);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,GeometryClip_Should_Affect_Child_Layers,The following statement contains a magic number: Assert.Equal(                      Matrix.CreateTranslation(12' 16)'                      ((MockStreamGeometryImpl)borderLayer.GeometryClip).Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneBuilderTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneBuilderTests.cs,GeometryClip_Should_Affect_Child_Layers,The following statement contains a magic number: Assert.Equal(                      Matrix.CreateTranslation(12' 16)'                      ((MockStreamGeometryImpl)borderLayer.GeometryClip).Transform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneTests.cs,Cloning_Scene_Should_Retain_Layers_But_Not_DirtyRects,The following statement contains a magic number: scene.Layers[tree].Dirty.Add(new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneTests.cs,Cloning_Scene_Should_Retain_Layers_But_Not_DirtyRects,The following statement contains a magic number: scene.Layers[tree].Dirty.Add(new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneTests.cs,Cloning_Scene_Should_Retain_Layers_But_Not_DirtyRects,The following statement contains a magic number: scene.Layers[decorator].Dirty.Add(new Rect(0' 0' 50' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneTests.cs,Cloning_Scene_Should_Retain_Layers_But_Not_DirtyRects,The following statement contains a magic number: scene.Layers[decorator].Dirty.Add(new Rect(0' 0' 50' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,SceneTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\SceneTests.cs,Cloning_Scene_Should_Retain_Layers_But_Not_DirtyRects,The following statement contains a magic number: Assert.Equal(2' scene.Layers.Count());
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: var target = new TextNode(                  Matrix.Identity'                  null'                  new Point(10' 10)'                  Mock.Of<IFormattedTextImpl>(x => x.Bounds == new Rect(5' 5' 50' 50)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: var target = new TextNode(                  Matrix.Identity'                  null'                  new Point(10' 10)'                  Mock.Of<IFormattedTextImpl>(x => x.Bounds == new Rect(5' 5' 50' 50)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: var target = new TextNode(                  Matrix.Identity'                  null'                  new Point(10' 10)'                  Mock.Of<IFormattedTextImpl>(x => x.Bounds == new Rect(5' 5' 50' 50)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: var target = new TextNode(                  Matrix.Identity'                  null'                  new Point(10' 10)'                  Mock.Of<IFormattedTextImpl>(x => x.Bounds == new Rect(5' 5' 50' 50)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: var target = new TextNode(                  Matrix.Identity'                  null'                  new Point(10' 10)'                  Mock.Of<IFormattedTextImpl>(x => x.Bounds == new Rect(5' 5' 50' 50)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: var target = new TextNode(                  Matrix.Identity'                  null'                  new Point(10' 10)'                  Mock.Of<IFormattedTextImpl>(x => x.Bounds == new Rect(5' 5' 50' 50)));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: Assert.Equal(new Rect(15' 15' 50' 50)' target.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: Assert.Equal(new Rect(15' 15' 50' 50)' target.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: Assert.Equal(new Rect(15' 15' 50' 50)' target.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,TextNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\TextNodeTests.cs,Bounds_Should_Be_Offset_By_Origin,The following statement contains a magic number: Assert.Equal(new Rect(15' 15' 50' 50)' target.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,VisualNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\VisualNodeTests.cs,TrimChildren_Should_Work_Correctly,The following statement contains a magic number: parent.TrimChildren(2);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.SceneGraph,VisualNodeTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\SceneGraph\VisualNodeTests.cs,TrimChildren_Should_Work_Correctly,The following statement contains a magic number: Assert.Equal(2' parent.Children.Count);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_1x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Fill'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Fill_2x,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(200' 100));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 200' 100)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 200' 100)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: Assert.Equal(new Size(200' 100)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: Assert.Equal(new Size(200' 100)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterHoriz,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(50' 0)' result.IntermediateTransform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.Uniform'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  RelativeRect.Fill'                  new Size(100' 100)'                  new Size(100' 200));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 100)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 100' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: Assert.Equal(new Size(100' 200)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: Assert.Equal(new Size(100' 200)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_Uniform_CenterVert,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(0' 50)' result.IntermediateTransform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.None'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  RelativeRect.Fill'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 800' 800)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 800' 800)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Size(400' 400)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Size(400' 400)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.IntermediateClip);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.IntermediateClip);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.IntermediateClip);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(200' 200' 200' 200)' result.IntermediateClip);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(-100' -100)' result.IntermediateTransform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,NoTile_NoStretch_BottomRightQuarterDest,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(-100' -100)' result.IntermediateTransform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var result = new TileBrushCalculator(                  TileMode.Tile'                  Stretch.None'                  AlignmentX.Center'                  AlignmentY.Center'                  new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  new Size(800' 800)'                  new Size(400' 400));
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: var b = new VisualBrush              {                  TileMode = TileMode.Tile'                  Stretch = Stretch.None'                  SourceRect = new RelativeRect(0.5' 0.5' 0.5' 0.5' RelativeUnit.Relative)'                  DestinationRect = new RelativeRect(0.25' 0.25' 0.5' 0.5' RelativeUnit.Relative)'                  Visual = new Border { Width = 400' Height = 400 }'              };
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(400' 400' 400' 400)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(400' 400' 400' 400)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(400' 400' 400' 400)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(400' 400' 400' 400)' result.SourceRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(100' 100' 200' 200)' result.DestinationRect);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Size(200' 200)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Size(200' 200)' result.IntermediateSize);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 200' 200)' result.IntermediateClip);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 200' 200)' result.IntermediateClip);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(-500' -500)' result.IntermediateTransform);
Magic Number,Avalonia.Visuals.UnitTests.Rendering.Utilities,TileBrushCalculatorTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\Rendering\Utilities\TileBrushCalculatorTests.cs,Tile_NoStretch_BottomRightQuarterSource_CenterQuarterDest,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(-500' -500)' result.IntermediateTransform);
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,MockStreamGeometryContext,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\MockRenderInterface.cs,FillContains,The following statement contains a magic number: var c = points[(i + 2) % points.Count];
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: var tree = new Decorator                  {                      Padding = new Thickness(10)'                      Child = new Decorator                      {                          Padding = new Thickness(5)'                          Child = control = new Rectangle                          {                              Width = 15'                              Height = 15'                          }'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: var tree = new Decorator                  {                      Padding = new Thickness(10)'                      Child = new Decorator                      {                          Padding = new Thickness(5)'                          Child = control = new Rectangle                          {                              Width = 15'                              Height = 15'                          }'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: var tree = new Decorator                  {                      Padding = new Thickness(10)'                      Child = new Decorator                      {                          Padding = new Thickness(5)'                          Child = control = new Rectangle                          {                              Width = 15'                              Height = 15'                          }'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: var tree = new Decorator                  {                      Padding = new Thickness(10)'                      Child = new Decorator                      {                          Padding = new Thickness(5)'                          Child = control = new Rectangle                          {                              Width = 15'                              Height = 15'                          }'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: tree.Arrange(new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: tree.Arrange(new Rect(0' 0' 100' 100));
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 15' 15)' results[0].Value.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: Assert.Equal(new Rect(0' 0' 15' 15)' results[0].Value.Bounds);
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(42' 42)' results[0].Value.Transform);
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,TransformedBoundsTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\TransformedBoundsTests.cs,Should_Track_Bounds,The following statement contains a magic number: Assert.Equal(Matrix.CreateTranslation(42' 42)' results[0].Value.Transform);
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var result = target.GetVisualsAt(new Point(50' 50));
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Find_Control,The following statement contains a magic number: var result = target.GetVisualsAt(new Point(50' 50));
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var root = new TestRoot                  {                      Width = 200'                      Height = 200'                      Child = new StackPanel                      {                          Background = Brushes.White'                          Children =                          {                              (target = new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Red'                              })'                              new Border                              {                                  Width = 100'                                  Height = 200'                                  Background = Brushes.Green'                              }                          }'                          Orientation = Orientation.Horizontal'                      }                  };
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var result = target.GetVisualsAt(new Point(150' 50));
Magic Number,Avalonia.Visuals.UnitTests.VisualTree,VisualExtensions_GetVisualsAt,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.Visuals.UnitTests\VisualTree\VisualExtensions_GetVisualsAt.cs,Should_Not_Find_Sibling_Control,The following statement contains a magic number: var result = target.GetVisualsAt(new Point(150' 50));
