Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,InitializeSre,Cyclomatic complexity of the method is 9
Complex Method,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AvaloniaXamlIlTransformInstanceAttachedProperties,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlTransformInstanceAttachedProperties.cs,Transform,Cyclomatic complexity of the method is 9
Complex Method,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AddNameScopeRegistration,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AddNameScopeRegistration.cs,Transform,Cyclomatic complexity of the method is 8
Complex Method,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AvaloniaXamlIlSetterTransformer,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlSetterTransformer.cs,Transform,Cyclomatic complexity of the method is 9
Complex Method,Avalonia.Markup.Parsers,SelectorGrammar,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Markup\Parsers\SelectorGrammar.cs,Parse,Cyclomatic complexity of the method is 13
Complex Method,Avalonia.Markup.Parsers,SelectorGrammar,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Markup\Parsers\SelectorGrammar.cs,ParseMiddle,Cyclomatic complexity of the method is 8
Long Parameter List,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,LoadSre,The method has 5 parameters. Parameters: xaml' localAssembly' rootInstance' uri' isDesignMode
Long Parameter List,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,LoadSreCore,The method has 5 parameters. Parameters: xaml' localAssembly' rootInstance' uri' isDesignMode
Long Parameter List,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,Load,The method has 5 parameters. Parameters: stream' localAssembly' rootInstance' uri' isDesignMode
Long Parameter List,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AvaloniaAttachedInstanceProperty,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlTransformInstanceAttachedProperties.cs,AvaloniaAttachedInstanceProperty,The method has 7 parameters. Parameters: prop' config' declaringType' type' avaloniaPropertyType' avaloniaObject' field
Long Parameter List,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions,AvaloniaXamlIlCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\AvaloniaXamlIlCompiler.cs,ParseAndCompile,The method has 5 parameters. Parameters: xaml' baseUri' fileSource' tb' overrideRootType
Long Statement,Avalonia.Markup.Xaml,AvaloniaXamlLoader,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\AvaloniaXamlLoader.cs,Load,The length of the statement  "                $"No precompiled XAML found for {obj.GetType()}' make sure to specify x:Class and include your XAML file as AvaloniaResource"); " is 127.
Long Statement,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AvaloniaXamlIlTransformInstanceAttachedProperties,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlTransformInstanceAttachedProperties.cs,Transform,The length of the statement  "                        var avaloniaPropertyField = declaringType.Fields.FirstOrDefault(f => f.IsStatic && f.Name == avaloniaPropertyFieldName); " is 120.
Long Statement,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,XamlIlPropertyEqualsSelector,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlSelectorTransformer.cs,DoEmit,The length of the statement  "                    $"{Property.Name} of {(Property.Setter ?? Property.Getter).DeclaringType.GetFqn()} doesn't seem to be an AvaloniaProperty"' " is 123.
Complex Conditional,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AvaloniaXamlIlConstructorServiceProviderTransformer,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlConstructorServiceProviderTransformer.cs,Transform,The conditional expression  "ctors.Any(c =>                          c.IsPublic && !c.IsStatic && c.Parameters.Count == 1 && c.Parameters[0]                              .Equals(sp))"  is complex.
Complex Conditional,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AvaloniaXamlIlDesignPropertiesTransformer,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlDesignPropertiesTransformer.cs,Transform,The conditional expression  "!IsDesignMode                          && ch is XamlIlAstXamlPropertyValueNode pv                          && pv.Property is XamlIlAstNamePropertyReference pref                          && pref.DeclaringType is XamlIlAstXmlTypeReference dref                          && dref.XmlNamespace == AvaloniaNs && dref.Name == "Design""  is complex.
Complex Conditional,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,AvaloniaXamlIlTransformInstanceAttachedProperties,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlTransformInstanceAttachedProperties.cs,Transform,The conditional expression  "avaloniaPropertyType != null                                     && !(avaloniaPropertyType.Namespace == "Avalonia"                                          && (avaloniaPropertyType.Name == "AvaloniaProperty"                                              || avaloniaPropertyType.Name == "AvaloniaProperty`1"                                          ))"  is complex.
Complex Conditional,Avalonia.Markup.Parsers,SelectorGrammar,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Markup\Parsers\SelectorGrammar.cs,Parse,The conditional expression  "state != State.Start && state != State.Middle && state != State.End && state != State.CanHaveType"  is complex.
Empty Catch Block,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,DumpRuntimeCompilationResults,The method has an empty catch block.
Magic Number,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,InitializeSre,The following statement contains a magic number: var define = AppDomain.CurrentDomain.GetType().GetMethods()                          .FirstOrDefault(m => m.Name == "DefineDynamicAssembly"                                      && m.GetParameters().Length == 3 &&                                      m.GetParameters()[2].ParameterType == typeof(string));
Magic Number,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,InitializeSre,The following statement contains a magic number: var define = AppDomain.CurrentDomain.GetType().GetMethods()                          .FirstOrDefault(m => m.Name == "DefineDynamicAssembly"                                      && m.GetParameters().Length == 3 &&                                      m.GetParameters()[2].ParameterType == typeof(string));
Magic Number,Avalonia.Markup.Xaml.XamlIl,AvaloniaXamlIlRuntimeCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\AvaloniaXamlIlRuntimeCompiler.cs,InitializeSre,The following statement contains a magic number: _sreAsm = (AssemblyBuilder)define.Invoke(AppDomain.CurrentDomain' new object[]                          {                              name' (AssemblyBuilderAccess)3'                              Path.GetDirectoryName(typeof(AvaloniaXamlIlRuntimeCompiler).Assembly.GetModules()[0]                                  .FullyQualifiedName)                          });
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,SetterMethod,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlTransformInstanceAttachedProperties.cs,Emit,The following statement contains a magic number: var method = _parent._avaloniaObject                          .FindMethod(m => m.IsPublic && !m.IsStatic && m.Name == "SetValue"                                           &&                                           m.Parameters.Count == 3                                           && m.Parameters[0].Equals(_parent._avaloniaPropertyType)                                           && m.Parameters[1].Equals(so)                                           && m.Parameters[2].IsEnum                          );
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,SetterMethod,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlTransformInstanceAttachedProperties.cs,Emit,The following statement contains a magic number: var method = _parent._avaloniaObject                          .FindMethod(m => m.IsPublic && !m.IsStatic && m.Name == "SetValue"                                           &&                                           m.Parameters.Count == 3                                           && m.Parameters[0].Equals(_parent._avaloniaPropertyType)                                           && m.Parameters[1].Equals(so)                                           && m.Parameters[2].IsEnum                          );
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,XamlIlTypeSelector,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlSelectorTransformer.cs,DoEmit,The following statement contains a magic number: EmitCall(context' codeGen'                  m => m.Name == name && m.Parameters.Count == 2 && m.Parameters[1].FullName == "System.Type");
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,XamlIlStringSelector,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlSelectorTransformer.cs,DoEmit,The following statement contains a magic number: EmitCall(context' codeGen'                  m => m.Name == name && m.Parameters.Count == 2 && m.Parameters[1].FullName == "System.String");
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,XamlIlNotSelector,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlSelectorTransformer.cs,DoEmit,The following statement contains a magic number: EmitCall(context' codeGen'                  m => m.Name == "Not" && m.Parameters.Count == 2 && m.Parameters[1].Equals(Type.GetClrType()));
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,XamlIlPropertyEqualsSelector,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlSelectorTransformer.cs,DoEmit,The following statement contains a magic number: EmitCall(context' codeGen'                  m => m.Name == "PropertyEquals"                       && m.Parameters.Count == 3                       && m.Parameters[1].FullName == "Avalonia.AvaloniaProperty"                       && m.Parameters[2].Equals(context.Configuration.WellKnownTypes.Object));
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions.Transformers,XamlIlPropertyEqualsSelector,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\Transformers\AvaloniaXamlIlSelectorTransformer.cs,DoEmit,The following statement contains a magic number: EmitCall(context' codeGen'                  m => m.Name == "PropertyEquals"                       && m.Parameters.Count == 3                       && m.Parameters[1].FullName == "Avalonia.AvaloniaProperty"                       && m.Parameters[2].Equals(context.Configuration.WellKnownTypes.Object));
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions,AvaloniaXamlIlCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\AvaloniaXamlIlCompiler.cs,AvaloniaXamlIlCompiler,The following statement contains a magic number: Transformers.Insert(2' _designTransformer = new AvaloniaXamlIlDesignPropertiesTransformer());
Magic Number,Avalonia.Markup.Xaml.XamlIl.CompilerExtensions,AvaloniaXamlIlCompiler,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\CompilerExtensions\AvaloniaXamlIlCompiler.cs,AvaloniaXamlIlCompiler,The following statement contains a magic number: Transformers.Insert(3' new AvaloniaBindingExtensionHackTransformer());
Magic Number,Avalonia.Markup.Xaml.XamlIl.Runtime,XamlTypeResolver,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup.Xaml\XamlIl\Runtime\XamlIlRuntimeHelpers.cs,Resolve,The following statement contains a magic number: var sp = qualifiedTypeName.Split(new[] {':'}' 2);
Missing Default,Avalonia.Markup.Parsers,SelectorGrammar,D:\research\architectureSmells\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Markup\Parsers\SelectorGrammar.cs,Parse,The following switch statement is missing a default case: switch (state)                  {                      case State.Start:                          state = ParseStart(ref r);                          break;                      case State.Middle:                          (state' syntax) = ParseMiddle(ref r' end);                          break;                      case State.CanHaveType:                          state = ParseCanHaveType(ref r);                          break;                      case State.Colon:                          (state' syntax) = ParseColon(ref r);                          break;                      case State.Class:                          (state' syntax) = ParseClass(ref r);                          break;                      case State.Traversal:                          (state' syntax) = ParseTraversal(ref r);                          break;                      case State.TypeName:                          (state' syntax) = ParseTypeName(ref r);                          break;                      case State.Property:                          (state' syntax) = ParseProperty(ref r);                          break;                      case State.Template:                          (state' syntax) = ParseTemplate(ref r);                          break;                      case State.Name:                          (state' syntax) = ParseName(ref r);                          break;                  }
