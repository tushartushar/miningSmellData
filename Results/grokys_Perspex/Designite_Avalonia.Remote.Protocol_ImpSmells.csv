Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,Cyclomatic complexity of the method is 14
Complex Method,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,BaseWrapper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,CreateWrapperFromType,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,Cyclomatic complexity of the method is 16
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,Cyclomatic complexity of the method is 9
Complex Method,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadRegularExpression,Cyclomatic complexity of the method is 8
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,GenerateTime,The length of the statement  "            var nowtime = new DateTime(Helper.Epoch.Year' Helper.Epoch.Month' Helper.Epoch.Day' now.Hour' now.Minute' now.Second' now.Millisecond); " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                        if (memberExpression.Expression.NodeType != ExpressionType.Parameter && memberExpression.Expression.NodeType != ExpressionType.Convert) " is 135.
Long Statement,Metsys.Bson,TypeHelper,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,FindProperty,The length of the statement  "                            throw new ArgumentException(string.Format("Expression '{0}' must resolve to top-level member."' lambdaExpression)' nameof(lambdaExpression)); " is 141.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The length of the statement  "                var propertyType = property != null ? property.Type : _typeMap.ContainsKey(storageType) ? _typeMap[storageType] : typeof(object); " is 129.
Long Statement,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadDictionary,The length of the statement  "            var container = existingContainer == null ? ListHelper.CreateDictionary(listType' ListHelper.GetDictionaryKeyType(listType)' valueType) : (IDictionary)existingContainer; " is 169.
Empty Catch Block,Avalonia.Remote.Protocol,TcpTransportBase,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\TcpTransportBase.cs,Listen,The method has an empty catch block.
Empty Catch Block,Avalonia.Remote.Protocol,DisposableServer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\TcpTransportBase.cs,Dispose,The method has an empty catch block.
Magic Number,Avalonia.Remote.Protocol,BsonStreamTransportConnection,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\BsonStreamTransport.cs,Reader,The following statement contains a magic number: var infoBlock = new byte[20];
Magic Number,Avalonia.Remote.Protocol,BsonStreamTransportConnection,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\BsonStreamTransport.cs,Reader,The following statement contains a magic number: var guidBytes = new byte[16];
Magic Number,Avalonia.Remote.Protocol,BsonStreamTransportConnection,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\BsonStreamTransport.cs,Reader,The following statement contains a magic number: Buffer.BlockCopy(infoBlock' 4' guidBytes' 0' 16);
Magic Number,Avalonia.Remote.Protocol,BsonStreamTransportConnection,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\BsonStreamTransport.cs,Reader,The following statement contains a magic number: Buffer.BlockCopy(infoBlock' 4' guidBytes' 0' 16);
Magic Number,Avalonia.Remote.Protocol,BsonStreamTransportConnection,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\BsonStreamTransport.cs,Send,The following statement contains a magic number: _outputBlock.Write(ZeroLength' 0' 4);
Magic Number,Avalonia.Remote.Protocol,BsonStreamTransportConnection,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\BsonStreamTransport.cs,Send,The following statement contains a magic number: var length = BitConverter.GetBytes((int)_outputBlock.Length - 20);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Parent = old' Length = (int)_writer.BaseStream.Position' Digested = 4 };
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following statement contains a magic number: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write(length + 4);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: _writer.Write((byte)2);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,WriteBinary,The following statement contains a magic number: Written(9 + length);
Magic Number,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Write,The following statement contains a magic number: Written(bytes.Length + 5);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: var oid = new byte[12];
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateTime())' 0' oid' copyidx' 4);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 4;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_machineHash' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 3;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(_processId' 0' oid' copyidx' 2);
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: copyidx += 2;
Magic Number,Metsys.Bson,ObjectIdGenerator,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,Generate,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(GenerateInc())' 0' oid' copyidx' 3);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,TryParse,The following statement contains a magic number: value == null || value.Length != 24
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,ObjectId,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DecodeHex,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(new string(chars' i' 2)' 16);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,NewDocument,The following statement contains a magic number: _current = new Document { Length = length' Parent = old' Digested = 4 };
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(12);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: return new ObjectId(_reader.ReadBytes(12));
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,DeserializeValue,The following statement contains a magic number: Read(8);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: Read(5);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadObject,The following statement contains a magic number: length == 5
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: Read(5 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 2
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadBinary,The following statement contains a magic number: subType == 3
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadName,The following statement contains a magic number: var buffer = new List<byte>(128);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadString,The following statement contains a magic number: Read(4 + length);
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadInt,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return (int)_reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (int)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadLong,The following statement contains a magic number: switch (storedType)              {                  case Types.Int32:                      Read(4);                      return _reader.ReadInt32();                  case Types.Int64:                      Read(8);                      return _reader.ReadInt64();                  case Types.Double:                      Read(8);                      return (long)_reader.ReadDouble();                  default:                      throw new BsonException("Could not create an int64 from " + storedType);              }
Magic Number,Metsys.Bson,Deserializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,ReadScopedCode,The following statement contains a magic number: Read(4);
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
Missing Default,Metsys.Bson,Serializer,D:\research\architectureSmells\repos\grokys_Perspex\src\Avalonia.Remote.Protocol\MetsysBson.cs,SerializeMember,The following switch statement is missing a default case: switch (storageType)              {                  case Types.Int32:                      Written(4);                      _writer.Write((int)value);                      return;                  case Types.Int64:                      Written(8);                      _writer.Write((long)value);                      return;                  case Types.String:                      Write((string)value);                      return;                  case Types.Double:                      Written(8);                      if (value is float)                      {                          _writer.Write(Convert.ToDouble((float)value));                      }                      else                      {                          _writer.Write((double)value);                      }                        return;                  case Types.Boolean:                      Written(1);                      _writer.Write((bool)value ? (byte)1 : (byte)0);                      return;                  case Types.DateTime:                      Written(8);                      _writer.Write((long)((DateTime)value).ToUniversalTime().Subtract(Helper.Epoch).TotalMilliseconds);                      return;                  case Types.Binary:                      WriteBinary(value);                      return;                  case Types.ScopedCode:                      Write((ScopedCode)value);                      return;                  case Types.ObjectId:                      Written(((ObjectId)value).Value.Length);                      _writer.Write(((ObjectId)value).Value);                      return;                  case Types.Regex:                      Write((Regex)value);                      break;              }
