Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Avalonia.Markup.Data,BindingExpression,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\BindingExpression.cs,BindingExpression,The method has 5 parameters. Parameters: inner' targetType' converter' converterParameter' priority
Long Parameter List,Avalonia.Markup.Data,BindingExpression,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\BindingExpression.cs,BindingExpression,The method has 6 parameters. Parameters: inner' targetType' fallbackValue' converter' converterParameter' priority
Long Parameter List,Avalonia.Markup.Data,ExpressionObserver,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\ExpressionObserver.cs,ExpressionObserver,The method has 5 parameters. Parameters: rootGetter' expression' update' enableDataValidation' description
Long Statement,Avalonia.Markup,AlwaysEnabledDelegateCommand,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\AlwaysEnabledDelegateCommand.cs,Execute,The length of the statement  "                TypeUtilities.TryConvert(parameterInfo.ParameterType' parameter' CultureInfo.CurrentCulture' out object convertedParameter); " is 124.
Long Statement,Avalonia.Markup.Data,IndexerNode,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\IndexerNode.cs,SetTargetValue,The length of the statement  "                    if (!TypeUtilities.TryConvert(indexerParameters[i].ParameterType' Arguments[i]' CultureInfo.InvariantCulture' out temp)) " is 120.
Long Statement,Avalonia.Markup.Data,IndexerNode,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\IndexerNode.cs,GetValue,The length of the statement  "                    if (!TypeUtilities.TryConvert(indexerParameters[i].ParameterType' Arguments[i]' CultureInfo.InvariantCulture' out temp)) " is 120.
Long Statement,Avalonia.Markup.Data.Plugins,MethodAccessorPlugin,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\Plugins\MethodAccessorPlugin.cs,Start,The length of the statement  "                    var exception = new ArgumentException("Cannot create a binding accessor for a method with more than 8 parameters or more than 7 parameters if it has a non-void return type."' nameof(method)); " is 191.
Complex Conditional,Avalonia.Markup.Data.Parsers,ArgumentListParser,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\Parsers\ArgumentListParser.cs,Parse,The conditional expression  "!r.End && r.Peek != ''' && r.Peek != close && !char.IsWhiteSpace(r.Peek)"  is complex.
Empty Catch Block,Avalonia.Markup.Data,PropertyAccessorNode,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\PropertyAccessorNode.cs,SetTargetValue,The method has an empty catch block.
Empty Catch Block,Avalonia.Markup.Data.Plugins,Accessor,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\Plugins\AvaloniaPropertyAccessorPlugin.cs,SendCurrentValue,The method has an empty catch block.
Empty Catch Block,Avalonia.Markup.Data.Plugins,Accessor,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\Plugins\AvaloniaPropertyAccessorPlugin.cs,SubscribeCore,The method has an empty catch block.
Magic Number,Avalonia.Markup.Data.Plugins,MethodAccessorPlugin,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\Plugins\MethodAccessorPlugin.cs,Start,The following statement contains a magic number: if (method != null)              {                  if (method.GetParameters().Length + (method.ReturnType == typeof(void) ? 0 : 1) > 8)                  {                      var exception = new ArgumentException("Cannot create a binding accessor for a method with more than 8 parameters or more than 7 parameters if it has a non-void return type."' nameof(method));                      return new PropertyError(new BindingNotification(exception' BindingErrorType.Error));                  }                    return new Accessor(reference' method);              }              else              {                  var message = $"Could not find CLR method '{methodName}' on '{instance}'";                  var exception = new MissingMemberException(message);                  return new PropertyError(new BindingNotification(exception' BindingErrorType.Error));              }
Missing Default,Avalonia.Markup.Data,IndexerNode,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\IndexerNode.cs,ShouldUpdate,The following switch statement is missing a default case: switch (e.Action)                  {                      case NotifyCollectionChangedAction.Add:                          return index >= e.NewStartingIndex;                      case NotifyCollectionChangedAction.Remove:                          return index >= e.OldStartingIndex;                      case NotifyCollectionChangedAction.Replace:                          return index >= e.NewStartingIndex &&                                 index < e.NewStartingIndex + e.NewItems.Count;                      case NotifyCollectionChangedAction.Move:                          return (index >= e.NewStartingIndex &&                                  index < e.NewStartingIndex + e.NewItems.Count) ||                                 (index >= e.OldStartingIndex &&                                  index < e.OldStartingIndex + e.OldItems.Count);                      case NotifyCollectionChangedAction.Reset:                          return true;                  }
Missing Default,Avalonia.Markup.Data.Parsers,ExpressionParser,C:\repos\grokys_Perspex\src\Markup\Avalonia.Markup\Data\Parsers\ExpressionParser.cs,Parse,The following switch statement is missing a default case: switch (state)                  {                      case State.Start:                          state = ParseStart(r' nodes);                          break;                        case State.AfterMember:                          state = ParseAfterMember(r' nodes);                          break;                        case State.BeforeMember:                          state = ParseBeforeMember(r' nodes);                          break;                        case State.AttachedProperty:                          state = ParseAttachedProperty(r' nodes);                          break;                  }
