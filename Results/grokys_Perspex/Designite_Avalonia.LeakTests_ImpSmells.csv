Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Avalonia.LeakTests,TransitionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.LeakTests\TransitionTests.cs,Transition_On_StyledProperty_Is_Freed,The following statement contains a magic number: Func<Border> run = () =>                  {                      var border = new Border                      {                          Transitions =                          {                              new DoubleTransition                              {                                  Duration = TimeSpan.FromSeconds(1)'                                  Property = Border.OpacityProperty'                              }                          }                      };                        border.Opacity = 0;                        clock.Pulse(TimeSpan.FromSeconds(0));                      clock.Pulse(TimeSpan.FromSeconds(0.5));                        Assert.Equal(0.5' border.Opacity);                        clock.Pulse(TimeSpan.FromSeconds(1));                        Assert.Equal(0' border.Opacity);                      return border;                  };
Magic Number,Avalonia.LeakTests,TransitionTests,D:\research\architectureSmells\repos\grokys_Perspex\tests\Avalonia.LeakTests\TransitionTests.cs,Transition_On_StyledProperty_Is_Freed,The following statement contains a magic number: Func<Border> run = () =>                  {                      var border = new Border                      {                          Transitions =                          {                              new DoubleTransition                              {                                  Duration = TimeSpan.FromSeconds(1)'                                  Property = Border.OpacityProperty'                              }                          }                      };                        border.Opacity = 0;                        clock.Pulse(TimeSpan.FromSeconds(0));                      clock.Pulse(TimeSpan.FromSeconds(0.5));                        Assert.Equal(0.5' border.Opacity);                        clock.Pulse(TimeSpan.FromSeconds(1));                        Assert.Equal(0' border.Opacity);                      return border;                  };
