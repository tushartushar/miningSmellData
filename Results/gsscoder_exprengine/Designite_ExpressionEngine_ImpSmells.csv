Implementation smell,Namespace,Class,File,Method,Description
Long Method,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,LexToken,The method has 182 lines of code.
Complex Method,ExpressionEngine.Internal,EvaluatingVisitor,C:\repos\gsscoder_exprengine\src\ExpressionEngine\EvaluatingVisitor.cs,Visit,Cyclomatic complexity of the method is 12
Complex Method,ExpressionEngine.Internal,EvaluatingVisitor,C:\repos\gsscoder_exprengine\src\ExpressionEngine\EvaluatingVisitor.cs,Visit,Cyclomatic complexity of the method is 36
Complex Method,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,ParseIdentifier,Cyclomatic complexity of the method is 9
Complex Method,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,ParseUnary,Cyclomatic complexity of the method is 8
Complex Method,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,LexToken,Cyclomatic complexity of the method is 57
Complex Method,ExpressionEngine.Internal,PunctuatorToken,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\PunctuatorToken.cs,ToOperatorType,Cyclomatic complexity of the method is 11
Complex Method,ExpressionEngine.Internal,Token,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Token.cs,StringOf,Cyclomatic complexity of the method is 18
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,ParseMultiplicativeBinary,The length of the statement  "	while (!_scanner.IsEof () && (_current.Type == TokenType.Multiply || _current.Type == TokenType.Divide || _current.Type == TokenType.Modulo)) { " is 143.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,ParseRelationalBinary,The length of the statement  "	while (!_scanner.IsEof () && (_current.Type == TokenType.Equality || _current.Type == TokenType.Inequality || _current.Type == TokenType.LessThan || _current.Type == TokenType.GreaterThan || _current.Type == TokenType.LessThanOrEqual || _current.Type == TokenType.GreaterThanOrEqual)) { " is 286.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,ParseIdentifier,The length of the statement  "	if (_scanner.PeekToken () == null || (_scanner.PeekToken () != null && _scanner.PeekToken ().Type != TokenType.LeftParenthesis)) { " is 130.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,Ensure,The length of the statement  "		throw new EvaluatorException (_scanner.Column' string.Format ("Unexpected end of input' instead of token(s): {0}{1}."' identifierAllowed ? "'IDENT'' " : ""' Token.StringOf (types))); " is 182.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,Ensure,The length of the statement  "		throw new EvaluatorException (_scanner.Column' string.Format ("Syntax error' expected token(s): 'IDENT'' {0}; but found '{1}'."' Token.StringOf (types)' Token.StringOf (_current))); " is 181.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,Expect,The length of the statement  "		throw new EvaluatorException (_scanner.Column' string.Format ("Unexpected end of input' instead of token(s): {0}{1}."' identifierAllowed ? "'IDENT'' " : ""' Token.StringOf (types))); " is 182.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,Expect,The length of the statement  "		throw new EvaluatorException (_scanner.Column' string.Format ("Syntax error' expected token(s): {0}{1}; but found '{2}'."' identifierAllowed ? "'IDENT'' " : ""' Token.StringOf (types)' Token.StringOf (next))); " is 209.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,Expect,The length of the statement  "		throw new EvaluatorException (_scanner.Column' string.Format ("Unexpected end of input' instead of token(s): 'LITERAL'' '{0}'."' Token.StringOf (type))); " is 153.
Long Statement,ExpressionEngine.Internal,Parser,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Parser.cs,Expect,The length of the statement  "		throw new EvaluatorException (_scanner.Column' string.Format ("Syntax error' expected token(s) 'LITERAL'' '{0}'; but found '{1}'."' Token.StringOf (type)' Token.StringOf (next))); " is 179.
Long Statement,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,LexToken,The length of the statement  "		throw new EvaluatorException (_tokenizer.Column' string.Format (CultureInfo.InvariantCulture' "Unexpected character '{0}'."' c)); " is 129.
Complex Conditional,ExpressionEngine.Internal,Tokenizer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Tokenizer.cs,NextChar,The conditional expression  "_line < 0 || c == '\xA' || c == '\xD' || c == '\x2028' || c == '\x2029'"  is complex.
Magic Number,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,Lexer,The following statement contains a magic number: _buffer = new StringBuilder (64);  
Magic Number,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,Lexer,The following statement contains a magic number: _escapeBuffer = new StringBuilder (3);  
Magic Number,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,IsWhiteSpace,The following statement contains a magic number: switch (c) {  //// Line separators  //case '\xD':  //case '\xA':  //case '\x2028':  //case '\x2029':  // Regular  case '\f':  case '\v':  case ' ':  case '\t':  	return true;  // Unicode  default:  	return (c > 127 && char.IsWhiteSpace (c));  }  
Magic Number,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,IsWhiteSpace,The following statement contains a magic number: return (c > 127 && char.IsWhiteSpace (c));  
Magic Number,ExpressionEngine.Internal,Lexer,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Lexer.cs,ScanDecimalEscapeSequence,The following statement contains a magic number: for (var i = 0; i < 2; i++) {  	var c = _tokenizer.PeekChar ();  	if (!(c >= '0' && c <= '9')) {  		throw new EvaluatorException (_tokenizer.Line' "Invalid decimal escape sequence.");  	}  	_escapeBuffer.Append (c);  	_tokenizer.NextChar ();  }  
Magic Number,ExpressionEngine.Internal,Token,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Token.cs,StringOf,The following statement contains a magic number: return builder.ToString (0' builder.Length - 2);  
Magic Number,ExpressionEngine.Internal,Token,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\Token.cs,StringOf,The following statement contains a magic number: return builder.ToString (0' builder.Length - 2);  
Magic Number,ExpressionEngine,Scope,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Scope.cs,Scope,The following statement contains a magic number: _dispatch = new Dictionary<string' object> (48);  
Missing Default,ExpressionEngine.Internal,PunctuatorToken,C:\repos\gsscoder_exprengine\src\ExpressionEngine\Parser\PunctuatorToken.cs,ToOperatorType,The following switch statement is missing a default case: switch (Type) {  case TokenType.Plus:  	return OperatorType.Add;  case TokenType.Minus:  	return OperatorType.Subtract;  case TokenType.Multiply:  	return OperatorType.Multiply;  case TokenType.Divide:  	return OperatorType.Divide;  case TokenType.Modulo:  	return OperatorType.Modulo;  case TokenType.Equality:  	return OperatorType.Equality;  case TokenType.Inequality:  	return OperatorType.Inequality;  case TokenType.LessThan:  	return OperatorType.LessThan;  case TokenType.GreaterThan:  	return OperatorType.GreaterThan;  case TokenType.LessThanOrEqual:  	return OperatorType.LessThanOrEqual;  case TokenType.GreaterThanOrEqual:  	return OperatorType.GreaterThanOrEqual;  }  
