Implementation smell,Namespace,Class,File,Method,Description
Long Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The method has 138 lines of code.
Long Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The method has 108 lines of code.
Long Method,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The method has 133 lines of code.
Complex Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,Cyclomatic complexity of the method is 24
Complex Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_blue,Cyclomatic complexity of the method is 9
Complex Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_space_red,Cyclomatic complexity of the method is 9
Complex Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_space_blue,Cyclomatic complexity of the method is 9
Complex Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,Cyclomatic complexity of the method is 10
Complex Method,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,GetExtensionFromImageFormat,Cyclomatic complexity of the method is 8
Complex Method,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,Cyclomatic complexity of the method is 19
Complex Method,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,Cyclomatic complexity of the method is 10
Complex Method,cadencii.apputil,MessageBody,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\MessageBody.cs,readTillMessageEnd,Cyclomatic complexity of the method is 8
Complex Method,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,SplitContainerEx_Paint,Cyclomatic complexity of the method is 13
Complex Method,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,Cyclomatic complexity of the method is 18
Complex Method,cadencii.apputil,BTrackBar<T>,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BTrackBar.cs,BTrackBar,Cyclomatic complexity of the method is 10
Complex Method,cadencii.apputil,BTrackBar<T>,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BTrackBar.cs,add,Cyclomatic complexity of the method is 8
Long Parameter List,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,BitmapEx,The method has 5 parameters. Parameters: width' height' stride' format' scan0
Long Parameter List,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The method has 6 parameters. Parameters: r' g' b' h' s' v
Long Parameter List,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The method has 6 parameters. Parameters: r' g' b' h' s' v
Long Parameter List,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToRgb,The method has 6 parameters. Parameters: h' s' v' r' g' b
Long Parameter List,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToRgb,The method has 6 parameters. Parameters: h' s' v' r' g' b
Long Parameter List,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,LUDecTDM,The method has 6 parameters. Parameters: N' a' b' c' y' x
Long Parameter List,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The method has 5 parameters. Parameters: item' hotspot' stream' type' transp
Long Parameter List,cadencii.apputil,MessageBody,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\MessageBody.cs,readTillMessageEnd,The method has 5 parameters. Parameters: sr' first_line' entry' msg' locations
Long Parameter List,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The method has 5 parameters. Parameters: splitter_distance' splitter_width' panel1_min' panel2_min' check_only
Long Statement,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The length of the statement  "            res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c ); " is 121.
Long Statement,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,ToString,The length of the statement  "            return "{Width=" + Width + "' Height=" + Height + "' ColorCount=" + ColorCount + "' Reserved1=" + Reserved1 + "' Reserved2=" + Reserved2 + "' Reserved3=" + Reserved3 + "' icoDIBSize=" + icoDIBSize + "' icoDIBOffset=" + icoDIBOffset + "}"; " is 238.
Long Statement,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The length of the statement  "            this.m_panel2.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 144.
Long Statement,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The length of the statement  "            this.m_panel1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 144.
Long Statement,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The length of the statement  "                    g.drawString( m_credit[i].getName()' 0f + shadow_shift' 40f + i * height * 1.1f + shadow_shift ); //' width' height )' sf ); " is 124.
Long Statement,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The length of the statement  "                /*using ( LinearGradientBrush lgb = new LinearGradientBrush( top' Color.White' Color.Transparent' LinearGradientMode.Vertical ) ) { " is 131.
Long Statement,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The length of the statement  "                /*using ( LinearGradientBrush lgb = new LinearGradientBrush( bottom' Color.Transparent' Color.White' LinearGradientMode.Vertical ) ) { " is 134.
Long Statement,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The length of the statement  "            this.btnFlip.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 145.
Long Statement,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The length of the statement  "            this.btnOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 144.
Complex Conditional,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,isRightToLeftLanguage,The conditional expression  "language_code.Equals( "ar" ) ||                   language_code.Equals( "he" ) ||                   language_code.Equals( "iw" ) ||                   language_code.Equals( "fa" ) ||                   language_code.Equals( "ur" )"  is complex.
Empty Catch Block,cadencii.apputil,MessageBody,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\MessageBody.cs,MessageBody,The method has an empty catch block.
Empty Catch Block,cadencii.apputil,MessageBody,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\MessageBody.cs,MessageBody,The method has an empty catch block.
Empty Catch Block,cadencii.apputil,MessageBody,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\MessageBody.cs,write,The method has an empty catch block.
Empty Catch Block,cadencii.apputil,MessageBody,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\MessageBody.cs,write,The method has an empty catch block.
Empty Catch Block,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,VersionInfoEx_Paint,The method has an empty catch block.
Magic Number,cadencii.apputil,OBSOLUTE_BHScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BHScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.hScroll.Size = new System.Drawing.Size( 333' 16 );
Magic Number,cadencii.apputil,OBSOLUTE_BHScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BHScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.hScroll.Size = new System.Drawing.Size( 333' 16 );
Magic Number,cadencii.apputil,OBSOLUTE_BHScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BHScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 12F );
Magic Number,cadencii.apputil,OBSOLUTE_BHScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BHScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 12F );
Magic Number,cadencii.apputil,OBSOLUTE_BHScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BHScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 333' 16 );
Magic Number,cadencii.apputil,OBSOLUTE_BHScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BHScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 333' 16 );
Magic Number,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,GetPixel,The following statement contains a magic number: byte r = dat[location + 2];
Magic Number,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,GetPixel,The following statement contains a magic number: byte a = 255;
Magic Number,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,GetPixel,The following statement contains a magic number: a = dat[location + 3];
Magic Number,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,SetPixel,The following statement contains a magic number: dat[location + 2] = (byte)color.R;
Magic Number,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,SetPixel,The following statement contains a magic number: dat[location + 3] = (byte)color.A;
Magic Number,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,BeginLock,The following statement contains a magic number: switch ( m_base.PixelFormat ) {                      case PixelFormat.Format24bppRgb:                          m_byte_per_pixel = 3;                          break;                      case PixelFormat.Format32bppArgb:                          m_byte_per_pixel = 4;                          break;                      default:                          throw new Exception( "unsuported pixel format" );                  }
Magic Number,cadencii.apputil,BitmapEx,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BitmapEx.cs,BeginLock,The following statement contains a magic number: switch ( m_base.PixelFormat ) {                      case PixelFormat.Format24bppRgb:                          m_byte_per_pixel = 3;                          break;                      case PixelFormat.Format32bppArgb:                          m_byte_per_pixel = 4;                          break;                      default:                          throw new Exception( "unsuported pixel format" );                  }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following statement contains a magic number: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rgb2col,The following statement contains a magic number: int res = (blue * 256 + green) * 256 + red;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rgb2col,The following statement contains a magic number: int res = (blue * 256 + green) * 256 + red;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_blue,The following statement contains a magic number: x255 = x * 256.0;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_blue,The following statement contains a magic number: res = 241;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_blue,The following statement contains a magic number: res = 255;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_blue,The following statement contains a magic number: res > 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The following statement contains a magic number: res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The following statement contains a magic number: res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The following statement contains a magic number: res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The following statement contains a magic number: res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The following statement contains a magic number: res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The following statement contains a magic number: res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f,The following statement contains a magic number: res = Math.Abs( -5.563d - 5 * (x * x * x * x) + 3.331d - 16 * (x * x * x) + 3.045d - 1 * (x * x) + 4.396d - 12 * x + c );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f2,The following statement contains a magic number: res = (int)(262.0 * x + 12.0 * x * Math.Sin( ((x - 8.0) * x + 66.0 * OPORT_OP_PI) * x ));
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f2,The following statement contains a magic number: res = (int)(262.0 * x + 12.0 * x * Math.Sin( ((x - 8.0) * x + 66.0 * OPORT_OP_PI) * x ));
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f2,The following statement contains a magic number: res = (int)(262.0 * x + 12.0 * x * Math.Sin( ((x - 8.0) * x + 66.0 * OPORT_OP_PI) * x ));
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_apricot_f2,The following statement contains a magic number: res = (int)(262.0 * x + 12.0 * x * Math.Sin( ((x - 8.0) * x + 66.0 * OPORT_OP_PI) * x ));
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_carnation_blue,The following statement contains a magic number: res = 11;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_carnation_red,The following statement contains a magic number: res = 255;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_carnation_red,The following statement contains a magic number: x < 0.16531216481302
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_carnation_f,The following statement contains a magic number: int res = (int)(-9.93427 * (x * x * x) + 1.56301e1 * (x * x) + 2.44663e2 * x);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_carnation_f,The following statement contains a magic number: int res = (int)(-9.93427 * (x * x * x) + 1.56301e1 * (x * x) + 2.44663e2 * x);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_carnation_f,The following statement contains a magic number: int res = (int)(-9.93427 * (x * x * x) + 1.56301e1 * (x * x) + 2.44663e2 * x);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_ether_blue,The following statement contains a magic number: res = 246;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_ether_red,The following statement contains a magic number: res = 2;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_ether_f,The following statement contains a magic number: int res = (int)(-1.89814e5 * (x * x * x * x) + 1.50967e4 * (x * x) + b);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_ether_f,The following statement contains a magic number: int res = (int)(-1.89814e5 * (x * x * x * x) + 1.50967e4 * (x * x) + b);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_ether_f2,The following statement contains a magic number: int res = (int)(1.88330e5 * (x * x * x * x) - 1.50839e4 * (x * x) + b);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_ether_f2,The following statement contains a magic number: int res = (int)(1.88330e5 * (x * x * x * x) - 1.50839e4 * (x * x) + b);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_grayscale_banded_rgb,The following statement contains a magic number: res = (int)(Math.Cos( 133.0 * x ) * 28.0 + 230.0 * x + 27.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_grayscale_banded_rgb,The following statement contains a magic number: res = (int)(Math.Cos( 133.0 * x ) * 28.0 + 230.0 * x + 27.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_grayscale_banded_rgb,The following statement contains a magic number: res = (int)(Math.Cos( 133.0 * x ) * 28.0 + 230.0 * x + 27.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_grayscale_banded_rgb,The following statement contains a magic number: res = (int)(Math.Cos( 133.0 * x ) * 28.0 + 230.0 * x + 27.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_grayscale_banded_rgb,The following statement contains a magic number: res = 255 - res;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_grayscale_banded_rgb,The following statement contains a magic number: res > 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_hotmetal_green,The following statement contains a magic number: x < 0.6
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_lava_waves_red,The following statement contains a magic number: res = 124;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_lava_waves_green,The following statement contains a magic number: res = 121;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_lava_waves_blue,The following statement contains a magic number: res = 131;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_malachite_blue,The following statement contains a magic number: x < 248.25 / 1066.8
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_malachite_blue,The following statement contains a magic number: x < 248.25 / 1066.8
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_malachite_green,The following statement contains a magic number: res = 253;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_malachite_red,The following statement contains a magic number: x < 384.25 / 1066.8
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_malachite_red,The following statement contains a magic number: x < 384.25 / 1066.8
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_morning_glory_green,The following statement contains a magic number: res = 124;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_morning_glory_blue,The following statement contains a magic number: res = 78;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_peanut_butter_and_jerry_blue,The following statement contains a magic number: res = 73;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_purple_haze_red,The following statement contains a magic number: res = 13;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_purple_haze_green,The following statement contains a magic number: x < e * 0.1
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_purple_haze_blue,The following statement contains a magic number: res = 16;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_red,The following statement contains a magic number: res = 127;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_blue,The following statement contains a magic number: res = 255;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_h,The following statement contains a magic number: res = (int)(-277.34 * x + 278.69);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_h,The following statement contains a magic number: res = (int)(-277.34 * x + 278.69);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_h,The following statement contains a magic number: res = (int)(res / 360.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_s,The following statement contains a magic number: res = (int)(0.908306127594742);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_v,The following statement contains a magic number: res = (int)(0.293 * Math.Sin( x * 79.7 - 1.53 ) + 0.55);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_v,The following statement contains a magic number: res = (int)(0.293 * Math.Sin( x * 79.7 - 1.53 ) + 0.55);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_v,The following statement contains a magic number: res = (int)(0.293 * Math.Sin( x * 79.7 - 1.53 ) + 0.55);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_banded_v,The following statement contains a magic number: res = (int)(0.293 * Math.Sin( x * 79.7 - 1.53 ) + 0.55);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_h,The following statement contains a magic number: res = (int)((171.99 * x - 241.35) * x + 302.44);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_h,The following statement contains a magic number: res = (int)((171.99 * x - 241.35) * x + 302.44);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_h,The following statement contains a magic number: res = (int)((171.99 * x - 241.35) * x + 302.44);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_h,The following statement contains a magic number: x < 1303 / 3817
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_h,The following statement contains a magic number: x < 1303 / 3817
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_h,The following statement contains a magic number: res = (int)(res / 360.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_s,The following statement contains a magic number: x < 21321 / 25489
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_s,The following statement contains a magic number: x < 21321 / 25489
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: xx = x % 10.0 / 255.0;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: xx = x % 10.0 / 255.0;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: res = (int)(0.6067 * x + 0.5921);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: res = (int)(0.6067 * x + 0.5921);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: x < 1303 / 3817
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: x < 1303 / 3817
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: xx < 2 / 256
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rainbow_striped_v,The following statement contains a magic number: xx < 2 / 256
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rose_red,The following statement contains a magic number: res = 54;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rose_green,The following statement contains a magic number: x < 20049 / 82979
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rose_green,The following statement contains a magic number: x < 20049 / 82979
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rose_blue,The following statement contains a magic number: res = 54;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_red,The following statement contains a magic number: res = 255;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_green,The following statement contains a magic number: res = 255;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_green,The following statement contains a magic number: x < 10873 / 94585
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_green,The following statement contains a magic number: x < 10873 / 94585
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_I,The following statement contains a magic number: res = (int)(-510.0 * x + 255.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_I,The following statement contains a magic number: res = (int)(-510.0 * x + 255.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_II,The following statement contains a magic number: res = (int)((-1891.7 * x + 217.46) * x + 255.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_II,The following statement contains a magic number: res = (int)((-1891.7 * x + 217.46) * x + 255.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_II,The following statement contains a magic number: res = (int)((-1891.7 * x + 217.46) * x + 255.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_III,The following statement contains a magic number: res = (int)(9.26643676359015e1 * Math.Sin( (x - 4.83450094847127d - 1) * 9.93 ) + 1.35940451627965e2);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_III,The following statement contains a magic number: res = (int)(9.26643676359015e1 * Math.Sin( (x - 4.83450094847127d - 1) * 9.93 ) + 1.35940451627965e2);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_III,The following statement contains a magic number: res = (int)(9.26643676359015e1 * Math.Sin( (x - 4.83450094847127d - 1) * 9.93 ) + 1.35940451627965e2);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_III,The following statement contains a magic number: res = (int)(9.26643676359015e1 * Math.Sin( (x - 4.83450094847127d - 1) * 9.93 ) + 1.35940451627965e2);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_IV,The following statement contains a magic number: res = (int)(-510.0 * x + 510.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_IV,The following statement contains a magic number: res = (int)(-510.0 * x + 510.0);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_V,The following statement contains a magic number: xx = x - 197169 / 251000;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_V,The following statement contains a magic number: xx = x - 197169 / 251000;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_V,The following statement contains a magic number: res = (int)((2510.0 * xx - 538.31) * xx);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_saturn_V,The following statement contains a magic number: res = (int)((2510.0 * xx - 538.31) * xx);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_seismic_red,The following statement contains a magic number: res = 3;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_seismic_blue,The following statement contains a magic number: res = 19;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_seismic_I,The following statement contains a magic number: res = (int)((-2010 * x + 36469683133498 / 14572746475) * x - 40117786837711 / 83272837000);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_seismic_I,The following statement contains a magic number: res = (int)((-2010 * x + 36469683133498 / 14572746475) * x - 40117786837711 / 83272837000);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_seismic_I,The following statement contains a magic number: res = (int)((-2010 * x + 36469683133498 / 14572746475) * x - 40117786837711 / 83272837000);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_seismic_I,The following statement contains a magic number: res = (int)((-2010 * x + 36469683133498 / 14572746475) * x - 40117786837711 / 83272837000);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_seismic_I,The following statement contains a magic number: res = (int)((-2010 * x + 36469683133498 / 14572746475) * x - 40117786837711 / 83272837000);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_space_red,The following statement contains a magic number: x < 37067 / 158860
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_space_red,The following statement contains a magic number: x < 37067 / 158860
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_green,The following statement contains a magic number: res = 154;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_blue,The following statement contains a magic number: res = 93;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_I,The following statement contains a magic number: res = (int)((0.3647 * x + 164.02) * x + 154.21);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_I,The following statement contains a magic number: res = (int)((0.3647 * x + 164.02) * x + 154.21);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_I,The following statement contains a magic number: res = (int)((0.3647 * x + 164.02) * x + 154.21);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_II,The following statement contains a magic number: res = (int)((126.68 * x + 114.35) * x + 0.1551);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_II,The following statement contains a magic number: res = (int)((126.68 * x + 114.35) * x + 0.1551);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_supernova_II,The following statement contains a magic number: res = (int)((126.68 * x + 114.35) * x + 0.1551);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rflow_rainbow_red,The following statement contains a magic number: x < 0.5
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rflow_rainbow_blue,The following statement contains a magic number: res = 255;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,oport_colorbar_rflow_rainbow_blue,The following statement contains a magic number: x < 0.25
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: int string_desty = size.height * 2;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: int w = size.width * 4;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: int h = size.height * 4;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: c.getRed() != 255 || c.getGreen() != 255 || c.getBlue() != 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: c.getRed() != 255 || c.getGreen() != 255 || c.getBlue() != 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: c.getRed() != 255 || c.getGreen() != 255 || c.getBlue() != 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: c.getRed() != 255 || c.getGreen() != 255 || c.getBlue() != 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: c.getRed() != 255 || c.getGreen() != 255 || c.getBlue() != 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: c.getRed() != 255 || c.getGreen() != 255 || c.getBlue() != 255
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,getStringDrawOffset,The following statement contains a magic number: int center = (firsty + endy) / 2;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: RgbToHsv( r / 255.0' g / 255.0' b / 255.0' out h' out s' out v );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: RgbToHsv( r / 255.0' g / 255.0' b / 255.0' out h' out s' out v );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: RgbToHsv( r / 255.0' g / 255.0' b / 255.0' out h' out s' out v );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: const double sqrt3 = 1.7320508075688772935274463415059;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: tmph = tmph + 360.0;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: tmph = tmph - 360.0;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: tmph >= 360.0
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,RgbToHsv,The following statement contains a magic number: h = tmph / 360.0;
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToColor,The following statement contains a magic number: return Color.FromArgb( (int)(dr * 255)' (int)(dg * 255)' (int)(db * 255) );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToColor,The following statement contains a magic number: return Color.FromArgb( (int)(dr * 255)' (int)(dg * 255)' (int)(db * 255) );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToColor,The following statement contains a magic number: return Color.FromArgb( (int)(dr * 255)' (int)(dg * 255)' (int)(db * 255) );
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToRgb,The following statement contains a magic number: r = (byte)(dr * 255);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToRgb,The following statement contains a magic number: g = (byte)(dg * 255);
Magic Number,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToRgb,The following statement contains a magic number: b = (byte)(db * 255);
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,GetValue,The following statement contains a magic number: status = -2;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: j <= nn - 2
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: a[i - 1] = 2.0 * (h[i - 1] + h[i]);
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_a[0] = u[0] / (6.0 * h[0]);
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_c[0] = (yy[1] - yy[0]) / h[0] - h[0] * u[0] / 6.0;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_a[nn - 1] = -u[nn - 2] / (6.0 * h[nn - 1]);
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_a[nn - 1] = -u[nn - 2] / (6.0 * h[nn - 1]);
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_b[nn - 1] = u[nn - 2] * 0.5;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_b[nn - 1] = u[nn - 2] * 0.5;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_c[nn - 1] = (yy[nn] - yy[nn - 1]) / h[nn - 1] - h[nn - 1] * u[nn - 2] / 3.0;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_c[nn - 1] = (yy[nn] - yy[nn - 1]) / h[nn - 1] - h[nn - 1] * u[nn - 2] / 3.0;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_a[i] = (u[i] - u[i - 1]) / (6.0 * h[i]);
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_b[i] = u[i - 1] * 0.5;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_c[i] = (yy[i + 1] - yy[i]) / h[i] - h[i] * (2.0 * u[i - 1] + u[i]) / 6.0;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: this.m_sp3_c[i] = (yy[i + 1] - yy[i]) / h[i] - h[i] * (2.0 * u[i - 1] + u[i]) / 6.0;
Magic Number,cadencii.apputil,CubicSpline,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CubicSpline.cs,CubicSpline,The following statement contains a magic number: i <= nn - 2
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveAsCursor,The following statement contains a magic number: SaveCor( item' hotspot' stream' 2' transp );
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int linesize = ((item.Width * 24 + 31) / 32) * 4;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int linesize = ((item.Width * 24 + 31) / 32) * 4;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int linesize = ((item.Width * 24 + 31) / 32) * 4;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int linesize = ((item.Width * 24 + 31) / 32) * 4;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int linesize_mask = ((item.Width * 1 + 31) / 32) * 4;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int linesize_mask = ((item.Width * 1 + 31) / 32) * 4;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int linesize_mask = ((item.Width * 1 + 31) / 32) * 4;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: int size = linesize * item.Height + linesize_mask * item.Height + 40;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: bih.biSize = 40;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: bih.biHeight = item.Height * 2;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: bih.biBitCount = 24;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: count += 3;
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: tcount == 8
Magic Number,cadencii.apputil,CursorUtil,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,SaveCor,The following statement contains a magic number: v = (byte)(v << (9 - tcount));
Magic Number,cadencii.apputil,IconFileHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Write,The following statement contains a magic number: stream.Write( buf' 0' 2 );
Magic Number,cadencii.apputil,IconFileHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Write,The following statement contains a magic number: stream.Write( buf' 0' 2 );
Magic Number,cadencii.apputil,IconFileHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Write,The following statement contains a magic number: stream.Write( buf' 0' 2 );
Magic Number,cadencii.apputil,IconFileHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: byte[] buf = new byte[2];
Magic Number,cadencii.apputil,IconFileHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: fs.Read( buf' 0' 2 );
Magic Number,cadencii.apputil,IconFileHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: fs.Read( buf' 0' 2 );
Magic Number,cadencii.apputil,IconFileHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: fs.Read( buf' 0' 2 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Write,The following statement contains a magic number: stream.Write( buf' 0' 2 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Write,The following statement contains a magic number: stream.Write( buf' 0' 2 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Write,The following statement contains a magic number: stream.Write( buf' 0' 4 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Write,The following statement contains a magic number: stream.Write( buf' 0' 4 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: byte[] buf = new byte[4];
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: stream.Read( buf' 0' 4 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: iih.Reserved3 = BitConverter.ToUInt16( buf' 2 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: stream.Read( buf' 0' 4 );
Magic Number,cadencii.apputil,IconInfoHeader,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\CursorUtil.cs,Read,The following statement contains a magic number: stream.Read( buf' 0' 4 );
Magic Number,cadencii.apputil,PolylineDrawer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\PolylineDrawer.cs,PolylineDrawer,The following statement contains a magic number: length = 1024;
Magic Number,cadencii.apputil,PolylineDrawer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\PolylineDrawer.cs,PolylineDrawer,The following statement contains a magic number: length < 2
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_lbl_splitter.Size = new System.Drawing.Size( 100' 50 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_lbl_splitter.Size = new System.Drawing.Size( 100' 50 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_panel2.Location = new System.Drawing.Point( 0' 103 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_panel2.Size = new System.Drawing.Size( 441' 245 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_panel2.Size = new System.Drawing.Size( 441' 245 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_panel1.Margin = new System.Windows.Forms.Padding( 0' 0' 0' 4 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_panel1.Size = new System.Drawing.Size( 441' 99 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.m_panel1.Size = new System.Drawing.Size( 441' 99 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 441' 348 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 441' 348 );
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel1.Width = (p1 - 2 * pad1 >= 0) ? (p1 - 2 * pad1) : 0;
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel1.Width = (p1 - 2 * pad1 >= 0) ? (p1 - 2 * pad1) : 0;
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel1.Height = (this.Height - 2 * pad1 >= 0) ? (this.Height - 2 * pad1) : 0;
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel1.Height = (this.Height - 2 * pad1 >= 0) ? (this.Height - 2 * pad1) : 0;
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel2.Width = (p2 - 2 * pad2 >= 0) ? (p2 - 2 * pad2) : 0;
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel2.Width = (p2 - 2 * pad2 >= 0) ? (p2 - 2 * pad2) : 0;
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel2.Height = (this.Height - 2 * pad2 >= 0) ? (this.Height - 2 * pad2) : 0;
Magic Number,cadencii.apputil,BSplitContainer,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BSplitContainer.cs,UpdateLayout,The following statement contains a magic number: m_panel2.Height = (this.Height - 2 * pad2 >= 0) ? (this.Height - 2 * pad2) : 0;
Magic Number,cadencii.apputil,BTrackBar<T>,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BTrackBar.cs,InitializeComponent,The following statement contains a magic number: this.m_track_bar.Size = new System.Drawing.Size( 286' 55 );
Magic Number,cadencii.apputil,BTrackBar<T>,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BTrackBar.cs,InitializeComponent,The following statement contains a magic number: this.m_track_bar.Size = new System.Drawing.Size( 286' 55 );
Magic Number,cadencii.apputil,BTrackBar<T>,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BTrackBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 286' 55 );
Magic Number,cadencii.apputil,BTrackBar<T>,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BTrackBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 286' 55 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: const float shadow_shift = 2f;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: const int font_size = 10;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: m_scroll = new BufferedImage( (int)width' (int)(40f + m_credit.Length * height * 1.1f)' BufferedImage.TYPE_INT_BGR );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: m_scroll = new BufferedImage( (int)width' (int)(40f + m_credit.Length * height * 1.1f)' BufferedImage.TYPE_INT_BGR );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: g.setFont( new Font( font_name' java.awt.Font.BOLD' (int)(font_size * 1.1f) ) );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: g.setColor( new Color( 0' 0' 0' 40 ) );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: g.setColor( new Color( 0' 0' 0' 40 ) );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: g.drawString( m_credit[i].getName()' 0f + shadow_shift' 40f + i * height * 1.1f + shadow_shift );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: g.drawString( m_credit[i].getName()' 0f + shadow_shift' 40f + i * height * 1.1f + shadow_shift );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: g.drawString( m_credit[i].getName()' 0f' 40f + i * height * 1.1f );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,GenerateAuthorList,The following statement contains a magic number: g.drawString( m_credit[i].getName()' 0f' 40f + i * height * 1.1f );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: float times = (float)(((DateTime.Now).Subtract( m_scroll_started )).TotalSeconds) - 3f;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: float speed = (float)((2.0 - cadencii.math.erfc( times * 0.8 )) / 2.0) * m_speed;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: float speed = (float)((2.0 - cadencii.math.erfc( times * 0.8 )) / 2.0) * m_speed;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: float speed = (float)((2.0 - cadencii.math.erfc( times * 0.8 )) / 2.0) * m_speed;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: m_shift += (speed + m_last_speed) * dt / 2f;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: float dx = (this.Width - m_scroll.getWidth( null )) * 0.5f;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: g.drawImage( m_scroll' (int)dx' (int)(90f - m_shift)' null );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: m_shift = -m_height * 1.5f;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: 90f - m_shift + m_scroll.getHeight( null ) < 0
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,paint,The following statement contains a magic number: int grad_height = 60;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnFlip.Location = new System.Drawing.Point( 13' 391 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnFlip.Location = new System.Drawing.Point( 13' 391 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnFlip.Size = new System.Drawing.Size( 75' 21 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnFlip.Size = new System.Drawing.Size( 75' 21 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnFlip.TabIndex = 2;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point( 211' 391 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point( 211' 391 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size( 75' 21 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size( 75' 21 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.timer.Interval = 30;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveAuthorList.Location = new System.Drawing.Point( 123' 391 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveAuthorList.Location = new System.Drawing.Point( 123' 391 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveAuthorList.Size = new System.Drawing.Size( 43' 21 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveAuthorList.Size = new System.Drawing.Size( 43' 21 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.btnSaveAuthorList.TabIndex = 3;
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size( 300' 426 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size( 300' 426 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size( 306' 451 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size( 306' 451 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size( 306' 451 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size( 306' 451 );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,applyLanguage,The following statement contains a magic number: m_button_width_about = Math.Max( 75' (int)(size1.width * 1.3) );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,applyLanguage,The following statement contains a magic number: m_button_width_about = Math.Max( 75' (int)(size1.width * 1.3) );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,applyLanguage,The following statement contains a magic number: m_button_width_credit = Math.Max( 75' (int)(size2.width * 1.3) );
Magic Number,cadencii.apputil,VersionInfo,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\VersionInfo.cs,applyLanguage,The following statement contains a magic number: m_button_width_credit = Math.Max( 75' (int)(size2.width * 1.3) );
Magic Number,cadencii.apputil,OBSOLUTE_BVScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BVScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.vScroll.Size = new System.Drawing.Size( 16' 205 );
Magic Number,cadencii.apputil,OBSOLUTE_BVScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BVScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.vScroll.Size = new System.Drawing.Size( 16' 205 );
Magic Number,cadencii.apputil,OBSOLUTE_BVScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BVScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 12F );
Magic Number,cadencii.apputil,OBSOLUTE_BVScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BVScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 12F );
Magic Number,cadencii.apputil,OBSOLUTE_BVScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BVScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 16' 205 );
Magic Number,cadencii.apputil,OBSOLUTE_BVScrollBar,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BVScrollBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size( 16' 205 );
Missing Default,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,ColorBar,The following switch statement is missing a default case: switch ( bartype ) {                  case ColorBarType.apricot:                      red = oport_colorbar_apricot_red( y );                      green = oport_colorbar_apricot_green( y );                      blue = oport_colorbar_apricot_blue( y );                      break;                  case ColorBarType.carnation:                      red = oport_colorbar_carnation_red( y );                      green = oport_colorbar_carnation_green( y );                      blue = oport_colorbar_carnation_blue( y );                      break;                  case ColorBarType.ether:                      red = oport_colorbar_ether_red( y );                      green = oport_colorbar_ether_green( y );                      blue = oport_colorbar_ether_blue( y );                      break;                  case ColorBarType.grayscale_banded:                      red = oport_colorbar_grayscale_banded_rgb( y );                      green = red;                      blue = red;                      break;                  case ColorBarType.hot_metal:                      red = (int)oport_colorbar_hotmetal_red( y );                      green = (int)oport_colorbar_hotmetal_green( y );                      blue = (int)oport_colorbar_hotmetal_blue( y );                      break;                  case ColorBarType.lava_waves:                      red = oport_colorbar_lava_waves_red( y );                      green = oport_colorbar_lava_waves_green( y );                      blue = oport_colorbar_lava_waves_blue( y );                      break;                  case ColorBarType.malachite:                      red = oport_colorbar_malachite_red( y );                      green = oport_colorbar_malachite_green( y );                      blue = oport_colorbar_malachite_blue( y );                      break;                  case ColorBarType.morning_glory:                      red = oport_colorbar_morning_glory_red( y );                      green = oport_colorbar_morning_glory_green( y );                      blue = oport_colorbar_morning_glory_blue( y );                      break;                  case ColorBarType.peanut_butter_and_jerry:                      red = oport_colorbar_peanut_butter_and_jerry_red( y );                      green = oport_colorbar_peanut_butter_and_jerry_green( y );                      blue = oport_colorbar_peanut_butter_and_jerry_blue( y );                      break;                  case ColorBarType.purple_haze:                      red = oport_colorbar_purple_haze_red( y );                      green = oport_colorbar_purple_haze_green( y );                      blue = oport_colorbar_purple_haze_blue( y );                      break;                  case ColorBarType.rainbow:                      red = (int)oport_colorbar_rainbow_red( y );                      green = (int)oport_colorbar_rainbow_green( y );                      blue = (int)oport_colorbar_rainbow_blue( y );                      break;                  case ColorBarType.rainbow_banded:                      if ( y < 0.0 ) {                          red = 44;                          green = 6;                          blue = 65;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_banded_h( y );                          s = oport_colorbar_rainbow_banded_s( y );                          v = oport_colorbar_rainbow_banded_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 167;                          green = 18;                          blue = 15;                      }                      break;                  case ColorBarType.rainbow_striped:                      if ( y < 0.0 ) {                          red = 150;                          green = 0;                          blue = 144;                      } else if ( y <= 1.0 ) {                          h = oport_colorbar_rainbow_striped_h( y );                          s = oport_colorbar_rainbow_striped_s( y );                          v = oport_colorbar_rainbow_striped_v( y );                          Util.HsvToRgb( h' s' v' out r' out g' out  b );                          red = (int)(r * 255.0);                          green = (int)(g * 255.0);                          blue = (int)(b * 255.0);                      } else {                          red = 255;                          green = 0;                          blue = 0;                      }                      break;                  case ColorBarType.rose:                      red = oport_colorbar_rose_red( y );                      green = oport_colorbar_rose_green( y );                      blue = oport_colorbar_rose_blue( y );                      break;                  case ColorBarType.saturn:                      red = oport_colorbar_saturn_red( y );                      green = oport_colorbar_saturn_green( y );                      blue = oport_colorbar_saturn_blue( y );                      break;                  case ColorBarType.seismic:                      red = oport_colorbar_seismic_red( y );                      green = oport_colorbar_seismic_green( y );                      blue = oport_colorbar_seismic_blue( y );                      break;                  case ColorBarType.space:                      red = oport_colorbar_space_red( y );                      green = oport_colorbar_space_green( y );                      blue = oport_colorbar_space_blue( y );                      break;                  case ColorBarType.supernova:                      red = oport_colorbar_supernova_red( y );                      green = oport_colorbar_supernova_green( y );                      blue = oport_colorbar_supernova_blue( y );                      break;                  case ColorBarType.cyclic:                      blue = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 2.0 / 3.0) )) + 100;                      green = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * (y + 1.0 / 3.0) )) + 100;                      red = (int)(100.0 * Math.Cos( OPORT_OP_PI2 * y )) + 100;                      break;                  case ColorBarType.rflow_rainbow:                      red = oport_colorbar_rflow_rainbow_red( y );                      green = oport_colorbar_rflow_rainbow_green( y );                      blue = oport_colorbar_rflow_rainbow_blue( y );                      break;              }
Missing Default,cadencii.apputil,Util,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\ColorBar.cs,HsvToRgb,The following switch statement is missing a default case: switch ( hi )                  {                      case 0:                      r = v;                      g = t;                      b = p;                      break;                      case 1:                      r = q;                      g = v;                      b = p;                      break;                      case 2:                      r = p;                      g = v;                      b = t;                      break;                      case 3:                      r = p;                      g = q;                      b = v;                      break;                      case 4:                      r = t;                      g = p;                      b = v;                      break;                      case 5:                      r = v;                      g = p;                      b = q;                      break;                  }
Missing Default,cadencii.apputil,BTrackBar<T>,D:\research\architectureSmells\repos\cadencii_cadencii\src\cadencii.apputil\BTrackBar.cs,add,The following switch statement is missing a default case: switch ( m_value_type ) {                  case BTrackBar<T>.ValueType.sbyte_:                      sbyte sb1 = Convert.ToSByte( o1 );                      sbyte sb2 = Convert.ToSByte( o2 );                      object sb_r = (sb1 + sb2);                      return (T)sb_r;                  case BTrackBar<T>.ValueType.byte_:                      byte b1 = Convert.ToByte( o1 );                      byte b2 = Convert.ToByte( o2 );                      object b_r = (b1 + b2);                      return (T)b_r;                  case BTrackBar<T>.ValueType.shoft_:                      short s1 = Convert.ToInt16( o1 );                      short s2 = Convert.ToInt16( o2 );                      object s_r = (s1 + s2);                      return (T)s_r;                  case BTrackBar<T>.ValueType.ushort_:                      ushort us1 = Convert.ToUInt16( o1 );                      ushort us2 = Convert.ToUInt16( o2 );                      object us_r = (us1 + us2);                      return (T)us_r;                  case BTrackBar<T>.ValueType.int_:                      int i1 = Convert.ToInt32( o1 );                      int i2 = Convert.ToInt32( o2 );                      object i_r = (i1 + i2);                      return (T)i_r;                  case BTrackBar<T>.ValueType.uint_:                      uint ui1 = Convert.ToUInt32( o1 );                      uint ui2 = Convert.ToUInt32( o2 );                      object ui_r = ui1 + ui2;                      return (T)ui_r;                  case BTrackBar<T>.ValueType.long_:                      long l1 = Convert.ToInt64( o1 );                      long l2 = Convert.ToInt64( o2 );                      object l_r = l1 + l2;                      return (T)l_r;                  case BTrackBar<T>.ValueType.ulong_:                      ulong ul1 = Convert.ToUInt64( o1 );                      ulong ul2 = Convert.ToUInt64( o2 );                      object ul_r = ul1 + ul2;                      return (T)ul_r;              }
