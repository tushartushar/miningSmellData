Implementation smell,Namespace,Class,File,Method,Description
Long Method,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,The method has 378 lines of code.
Long Method,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,The method has 117 lines of code.
Long Method,DotCMIS.Binding.WebServices,PortProvider,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,InitServiceObject,The method has 107 lines of code.
Complex Method,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,MergeAcls,Cyclomatic complexity of the method is 9
Complex Method,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,ConvertAclToDict,Cyclomatic complexity of the method is 8
Complex Method,DotCMIS.Binding.AtomPub,RepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetTypeChildren,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding.AtomPub,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetChildren,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding.AtomPub,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetCheckedOutDocs,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,DeleteTree,Cyclomatic complexity of the method is 9
Complex Method,DotCMIS.Binding.AtomPub,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,CheckIn,Cyclomatic complexity of the method is 11
Complex Method,DotCMIS.Binding.AtomPub,RelationshipService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObjectRelationships,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding.AtomPub,DiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,Query,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding.AtomPub,DiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetContentChanges,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding.AtomPub,PolicyService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,RemovePolicy,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding.AtomPub,ContentTypeCacheLevel,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-linkcache.cs,Normalize,Cyclomatic complexity of the method is 11
Complex Method,DotCMIS.Binding,StandardAuthenticationProvider,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-intf.cs,WebServicesAuthenticate,Cyclomatic complexity of the method is 10
Complex Method,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,Cyclomatic complexity of the method is 8
Complex Method,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,Cyclomatic complexity of the method is 31
Complex Method,DotCMIS.Binding.Impl,HttpUtils,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Invoke,Cyclomatic complexity of the method is 12
Complex Method,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,DotCMIS.Client.Impl,ObjectFactory,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objectfactory.cs,ConvertProperties,Cyclomatic complexity of the method is 12
Complex Method,DotCMIS.Client.Impl,ObjectFactory,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objectfactory.cs,ConvertChangeEvent,Cyclomatic complexity of the method is 9
Complex Method,DotCMIS.Client.Impl,AbstractCmisObject,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,Initialize,Cyclomatic complexity of the method is 16
Complex Method,DotCMIS.Client.Impl,QueryResult,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,QueryResult,Cyclomatic complexity of the method is 11
Long Parameter List,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,AddLink,The method has 5 parameters. Parameters: repositoryId' id' rel' type' link
Long Parameter List,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,AddTypeLink,The method has 5 parameters. Parameters: repositoryId' typeId' rel' type' link
Long Parameter List,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObjectInternal,The method has 11 parameters. Parameters: repositoryId' idOrPath' objectIdOrPath' returnVersion' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.AtomPub,RepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetTypeChildren,The method has 6 parameters. Parameters: repositoryId' typeId' includePropertyDefinitions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.AtomPub,RepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetTypeDescendants,The method has 5 parameters. Parameters: repositoryId' typeId' depth' includePropertyDefinitions' extension
Long Parameter List,DotCMIS.Binding.AtomPub,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetChildren,The method has 11 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.AtomPub,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetDescendants,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.Binding.AtomPub,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetFolderTree,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.Binding.AtomPub,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObjectParents,The method has 8 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includeRelativePathSegment' extension
Long Parameter List,DotCMIS.Binding.AtomPub,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetCheckedOutDocs,The method has 10 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,CreateDocument,The method has 9 parameters. Parameters: repositoryId' properties' folderId' contentStream' versioningState' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,CreateDocumentFromSource,The method has 9 parameters. Parameters: repositoryId' sourceId' properties' folderId' versioningState' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,CreateFolder,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,CreateRelationship,The method has 6 parameters. Parameters: repositoryId' properties' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,CreatePolicy,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetRenditions,The method has 6 parameters. Parameters: repositoryId' objectId' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObject,The method has 9 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObjectByPath,The method has 9 parameters. Parameters: repositoryId' path' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' streamId' offset' length' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,UpdateProperties,The method has 5 parameters. Parameters: repositoryId' objectId' changeToken' properties' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,MoveObject,The method has 5 parameters. Parameters: repositoryId' objectId' targetFolderId' sourceFolderId' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,DeleteTree,The method has 6 parameters. Parameters: repositoryId' folderId' allVersions' unfileObjects' continueOnFailure' extension
Long Parameter List,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,SetContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' overwriteFlag' changeToken' contentStream' extension
Long Parameter List,DotCMIS.Binding.AtomPub,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,CheckIn,The method has 10 parameters. Parameters: repositoryId' objectId' major' properties' contentStream' checkinComment' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.AtomPub,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObjectOfLatestVersion,The method has 11 parameters. Parameters: repositoryId' objectId' versionSeriesId' major' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.AtomPub,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetPropertiesOfLatestVersion,The method has 6 parameters. Parameters: repositoryId' objectId' versionSeriesId' major' filter' extension
Long Parameter List,DotCMIS.Binding.AtomPub,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetAllVersions,The method has 6 parameters. Parameters: repositoryId' objectId' versionSeriesId' filter' includeAllowableActions' extension
Long Parameter List,DotCMIS.Binding.AtomPub,RelationshipService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObjectRelationships,The method has 10 parameters. Parameters: repositoryId' objectId' includeSubRelationshipTypes' relationshipDirection' typeId' filter' includeAllowableActions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.AtomPub,DiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,Query,The method has 9 parameters. Parameters: repositoryId' statement' searchAllVersions' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.AtomPub,DiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetContentChanges,The method has 8 parameters. Parameters: repositoryId' changeLogToken' includeProperties' filter' includePolicyIds' includeAcl' maxItems' extension
Long Parameter List,DotCMIS.Binding.AtomPub,MultiFilingService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,AddObjectToFolder,The method has 5 parameters. Parameters: repositoryId' objectId' folderId' allVersions' extension
Long Parameter List,DotCMIS.Binding.AtomPub,AclService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,ApplyAcl,The method has 6 parameters. Parameters: repositoryId' objectId' addAces' removeAces' aclPropagation' extension
Long Parameter List,DotCMIS.Binding.AtomPub,LinkCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-linkcache.cs,AddLink,The method has 5 parameters. Parameters: repositoryId' id' rel' type' link
Long Parameter List,DotCMIS.Binding.AtomPub,LinkCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-linkcache.cs,AddTypeLink,The method has 5 parameters. Parameters: repositoryId' id' rel' type' link
Long Parameter List,DotCMIS.Binding.AtomPub,AtomQueryWriter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-writer.cs,AtomQueryWriter,The method has 7 parameters. Parameters: statement' searchAllVersions' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount
Long Parameter List,DotCMIS.Binding.Impl,BindingRepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-impl.cs,GetTypeChildren,The method has 6 parameters. Parameters: repositoryId' typeId' includePropertyDefinitions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.Impl,BindingRepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-impl.cs,GetTypeDescendants,The method has 5 parameters. Parameters: repositoryId' typeId' depth' includePropertyDefinitions' extension
Long Parameter List,DotCMIS.Binding.Impl,HttpUtils,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,InvokePUT,The method has 5 parameters. Parameters: url' contentType' headers' writer' session
Long Parameter List,DotCMIS.Binding.Impl,HttpUtils,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Invoke,The method has 8 parameters. Parameters: url' method' contentType' writer' session' offset' length' headers
Long Parameter List,DotCMIS.Binding.Services,IRepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetTypeChildren,The method has 6 parameters. Parameters: repositoryId' typeId' includePropertyDefinitions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.Services,IRepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetTypeDescendants,The method has 5 parameters. Parameters: repositoryId' typeId' depth' includePropertyDefinitions' extension
Long Parameter List,DotCMIS.Binding.Services,INavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetChildren,The method has 11 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.Services,INavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetDescendants,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.Binding.Services,INavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetFolderTree,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.Binding.Services,INavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetObjectParents,The method has 8 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includeRelativePathSegment' extension
Long Parameter List,DotCMIS.Binding.Services,INavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetCheckedOutDocs,The method has 10 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,CreateDocument,The method has 9 parameters. Parameters: repositoryId' properties' folderId' contentStream' versioningState' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,CreateDocumentFromSource,The method has 9 parameters. Parameters: repositoryId' sourceId' properties' folderId' versioningState' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,CreateFolder,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,CreateRelationship,The method has 6 parameters. Parameters: repositoryId' properties' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,CreatePolicy,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetRenditions,The method has 6 parameters. Parameters: repositoryId' objectId' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetObject,The method has 9 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetObjectByPath,The method has 9 parameters. Parameters: repositoryId' path' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' streamId' offset' length' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,UpdateProperties,The method has 5 parameters. Parameters: repositoryId' objectId' changeToken' properties' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,MoveObject,The method has 5 parameters. Parameters: repositoryId' objectId' targetFolderId' sourceFolderId' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,DeleteTree,The method has 6 parameters. Parameters: repositoryId' folderId' allVersions' unfileObjects' continueOnFailure' extension
Long Parameter List,DotCMIS.Binding.Services,IObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,SetContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' overwriteFlag' changeToken' contentStream' extension
Long Parameter List,DotCMIS.Binding.Services,IVersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,CheckIn,The method has 10 parameters. Parameters: repositoryId' objectId' major' properties' contentStream' checkinComment' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.Services,IVersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetObjectOfLatestVersion,The method has 11 parameters. Parameters: repositoryId' objectId' versionSeriesId' major' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.Services,IVersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetPropertiesOfLatestVersion,The method has 6 parameters. Parameters: repositoryId' objectId' versionSeriesId' major' filter' extension
Long Parameter List,DotCMIS.Binding.Services,IVersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetAllVersions,The method has 6 parameters. Parameters: repositoryId' objectId' versionSeriesId' filter' includeAllowableActions' extension
Long Parameter List,DotCMIS.Binding.Services,IRelationshipService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetObjectRelationships,The method has 10 parameters. Parameters: repositoryId' objectId' includeSubRelationshipTypes' relationshipDirection' typeId' filter' includeAllowableActions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.Services,IDiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,Query,The method has 9 parameters. Parameters: repositoryId' statement' searchAllVersions' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.Services,IDiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,GetContentChanges,The method has 8 parameters. Parameters: repositoryId' changeLogToken' includeProperties' filter' includePolicyIds' includeAcl' maxItems' extension
Long Parameter List,DotCMIS.Binding.Services,IMultiFilingService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,AddObjectToFolder,The method has 5 parameters. Parameters: repositoryId' objectId' folderId' allVersions' extension
Long Parameter List,DotCMIS.Binding.Services,IAclService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\services.cs,ApplyAcl,The method has 6 parameters. Parameters: repositoryId' objectId' addAces' removeAces' aclPropagation' extension
Long Parameter List,DotCMIS.Binding.WebServices,RepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetTypeChildren,The method has 6 parameters. Parameters: repositoryId' typeId' includePropertyDefinitions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.WebServices,RepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetTypeDescendants,The method has 5 parameters. Parameters: repositoryId' typeId' depth' includePropertyDefinitions' extension
Long Parameter List,DotCMIS.Binding.WebServices,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetChildren,The method has 11 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.WebServices,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetDescendants,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.Binding.WebServices,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetFolderTree,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.Binding.WebServices,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetObjectParents,The method has 8 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includeRelativePathSegment' extension
Long Parameter List,DotCMIS.Binding.WebServices,NavigationService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetCheckedOutDocs,The method has 10 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,CreateDocument,The method has 9 parameters. Parameters: repositoryId' properties' folderId' contentStream' versioningState' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,CreateDocumentFromSource,The method has 9 parameters. Parameters: repositoryId' sourceId' properties' folderId' versioningState' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,CreateFolder,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,CreateRelationship,The method has 6 parameters. Parameters: repositoryId' properties' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,CreatePolicy,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetRenditions,The method has 6 parameters. Parameters: repositoryId' objectId' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetObject,The method has 9 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetObjectByPath,The method has 9 parameters. Parameters: repositoryId' path' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' streamId' offset' length' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,UpdateProperties,The method has 5 parameters. Parameters: repositoryId' objectId' changeToken' properties' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,MoveObject,The method has 5 parameters. Parameters: repositoryId' objectId' targetFolderId' sourceFolderId' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,DeleteTree,The method has 6 parameters. Parameters: repositoryId' folderId' allVersions' unfileObjects' continueOnFailure' extension
Long Parameter List,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,SetContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' overwriteFlag' changeToken' contentStream' extension
Long Parameter List,DotCMIS.Binding.WebServices,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,CheckIn,The method has 10 parameters. Parameters: repositoryId' objectId' major' properties' contentStream' checkinComment' policies' addAces' removeAces' extension
Long Parameter List,DotCMIS.Binding.WebServices,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetObjectOfLatestVersion,The method has 11 parameters. Parameters: repositoryId' objectId' versionSeriesId' major' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeAcl' extension
Long Parameter List,DotCMIS.Binding.WebServices,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetPropertiesOfLatestVersion,The method has 6 parameters. Parameters: repositoryId' objectId' versionSeriesId' major' filter' extension
Long Parameter List,DotCMIS.Binding.WebServices,VersioningService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetAllVersions,The method has 6 parameters. Parameters: repositoryId' objectId' versionSeriesId' filter' includeAllowableActions' extension
Long Parameter List,DotCMIS.Binding.WebServices,RelationshipService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetObjectRelationships,The method has 10 parameters. Parameters: repositoryId' objectId' includeSubRelationshipTypes' relationshipDirection' typeId' filter' includeAllowableActions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.WebServices,DiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,Query,The method has 9 parameters. Parameters: repositoryId' statement' searchAllVersions' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.Binding.WebServices,DiscoveryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetContentChanges,The method has 8 parameters. Parameters: repositoryId' changeLogToken' includeProperties' filter' includePolicyIds' includeAcl' maxItems' extension
Long Parameter List,DotCMIS.Binding.WebServices,MultiFilingService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,AddObjectToFolder,The method has 5 parameters. Parameters: repositoryId' objectId' folderId' allVersions' extension
Long Parameter List,DotCMIS.Binding.WebServices,AclService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,ApplyAcl,The method has 6 parameters. Parameters: repositoryId' objectId' addAces' removeAces' aclPropagation' extension
Long Parameter List,DotCMIS.Client,ISession,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreateOperationContext,The method has 10 parameters. Parameters: filter' includeAcls' includeAllowableActions' includePolicies' includeRelationships' renditionFilter' includePathSegments' orderBy' cacheEnabled' maxItemsPerPage
Long Parameter List,DotCMIS.Client,ISession,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreateDocument,The method has 7 parameters. Parameters: properties' folderId' contentStream' versioningState' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client,ISession,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreateDocumentFromSource,The method has 7 parameters. Parameters: source' properties' folderId' versioningState' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client,ISession,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreateFolder,The method has 5 parameters. Parameters: properties' folderId' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client,ISession,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreatePolicy,The method has 5 parameters. Parameters: properties' folderId' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client,ISession,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,GetRelationships,The method has 5 parameters. Parameters: objectId' includeSubRelationshipTypes' relationshipDirection' type' context
Long Parameter List,DotCMIS.Client,IDocument,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CheckIn,The method has 7 parameters. Parameters: major' properties' contentStream' checkinComment' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client,IDocument,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,Copy,The method has 7 parameters. Parameters: targetFolderId' properties' versioningState' policies' addACEs' removeACEs' context
Long Parameter List,DotCMIS.Client,IFolder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreateDocument,The method has 7 parameters. Parameters: properties' contentStream' versioningState' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client,IFolder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreateDocumentFromSource,The method has 7 parameters. Parameters: source' properties' versioningState' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client,IFolder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreateFolder,The method has 5 parameters. Parameters: properties' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client,IFolder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-intf.cs,CreatePolicy,The method has 5 parameters. Parameters: properties' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client.Impl,Repository,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,Repository,The method has 6 parameters. Parameters: info' parameters' sessionFactory' objectFactory' authenticationProvider' cache
Long Parameter List,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateOperationContext,The method has 10 parameters. Parameters: filter' includeAcls' includeAllowableActions' includePolicies' includeRelationships' renditionFilter' includePathSegments' orderBy' cacheEnabled' maxItemsPerPage
Long Parameter List,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateDocument,The method has 7 parameters. Parameters: properties' folderId' contentStream' versioningState' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateDocumentFromSource,The method has 7 parameters. Parameters: source' properties' folderId' versioningState' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateFolder,The method has 5 parameters. Parameters: properties' folderId' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreatePolicy,The method has 5 parameters. Parameters: properties' folderId' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,GetRelationships,The method has 5 parameters. Parameters: objectId' includeSubRelationshipTypes' relationshipDirection' type' context
Long Parameter List,DotCMIS.Client.Impl,Document,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,Copy,The method has 7 parameters. Parameters: targetFolderId' properties' versioningState' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client.Impl,Document,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CheckIn,The method has 7 parameters. Parameters: major' properties' contentStream' checkinComment' policies' addAces' removeAces
Long Parameter List,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CreateDocument,The method has 7 parameters. Parameters: properties' contentStream' versioningState' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CreateDocumentFromSource,The method has 7 parameters. Parameters: source' properties' versioningState' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CreateFolder,The method has 5 parameters. Parameters: properties' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CreatePolicy,The method has 5 parameters. Parameters: properties' policies' addAces' removeAces' context
Long Parameter List,DotCMIS.Client.Impl,Rendition,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,Rendition,The method has 10 parameters. Parameters: session' objectId' streamId' mimeType' length' kind' title' height' width' renditionDocumentId
Long Parameter List,DotCMIS.Client.Impl,OperationContext,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-utils.cs,OperationContext,The method has 10 parameters. Parameters: filter' includeAcls' includeAllowableActions' includePolicies' includeRelationships' renditionFilter' includePathSegments' orderBy' cacheEnabled' maxItemsPerPage
Long Parameter List,DotCMIS.CMISWebServicesReference,queryRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,queryRequest,The method has 10 parameters. Parameters: repositoryId' statement' searchAllVersions' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension' AnyAttr
Long Parameter List,DotCMIS.CMISWebServicesReference,getContentChangesRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentChangesRequest,The method has 8 parameters. Parameters: repositoryId' changeLogToken' includeProperties' filter' includePolicyIds' includeACL' maxItems' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,DiscoveryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,query,The method has 10 parameters. Parameters: repositoryId' statement' searchAllVersions' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension' AnyAttr
Long Parameter List,DotCMIS.CMISWebServicesReference,DiscoveryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentChanges,The method has 8 parameters. Parameters: repositoryId' changeLogToken' includeProperties' filter' includePolicyIds' includeACL' maxItems' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,addObjectToFolderRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,addObjectToFolderRequest,The method has 5 parameters. Parameters: repositoryId' objectId' folderId' allVersions' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,MultiFilingServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,addObjectToFolder,The method has 5 parameters. Parameters: repositoryId' objectId' folderId' allVersions' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getDescendantsRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getDescendantsRequest,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getChildrenRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getChildrenRequest,The method has 11 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getFolderTreeRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getFolderTreeRequest,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getObjectParentsRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectParentsRequest,The method has 8 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includeRelativePathSegment' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getCheckedOutDocsRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getCheckedOutDocsRequest,The method has 10 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getDescendants,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getChildren,The method has 11 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getFolderTree,The method has 9 parameters. Parameters: repositoryId' folderId' depth' filter' includeAllowableActions' includeRelationships' renditionFilter' includePathSegment' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectParents,The method has 8 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includeRelativePathSegment' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getCheckedOutDocs,The method has 10 parameters. Parameters: repositoryId' folderId' filter' orderBy' includeAllowableActions' includeRelationships' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,createDocumentRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocumentRequest,The method has 9 parameters. Parameters: repositoryId' properties' folderId' contentStream' versioningState' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,createDocumentFromSourceRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocumentFromSourceRequest,The method has 9 parameters. Parameters: repositoryId' sourceId' properties' folderId' versioningState' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,createFolderRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createFolderRequest,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,createRelationshipRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createRelationshipRequest,The method has 6 parameters. Parameters: repositoryId' properties' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,createPolicyRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createPolicyRequest,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getObjectRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectRequest,The method has 9 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeACL' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getRenditionsRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRenditionsRequest,The method has 6 parameters. Parameters: repositoryId' objectId' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getObjectByPathRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectByPathRequest,The method has 9 parameters. Parameters: repositoryId' path' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeACL' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getContentStreamRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentStreamRequest,The method has 6 parameters. Parameters: repositoryId' objectId' streamId' offset' length' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,updatePropertiesRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,updatePropertiesRequest,The method has 5 parameters. Parameters: repositoryId' objectId' changeToken' properties' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,moveObjectRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,moveObjectRequest,The method has 5 parameters. Parameters: repositoryId' objectId' targetFolderId' sourceFolderId' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,deleteTreeRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,deleteTreeRequest,The method has 6 parameters. Parameters: repositoryId' folderId' allVersions' unfileObjects' continueOnFailure' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,setContentStreamRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,setContentStreamRequest,The method has 6 parameters. Parameters: repositoryId' objectId' overwriteFlag' changeToken' contentStream' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocument,The method has 9 parameters. Parameters: repositoryId' properties' folderId' contentStream' versioningState' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocumentFromSource,The method has 9 parameters. Parameters: repositoryId' sourceId' properties' folderId' versioningState' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createFolder,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createRelationship,The method has 6 parameters. Parameters: repositoryId' properties' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createPolicy,The method has 7 parameters. Parameters: repositoryId' properties' folderId' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObject,The method has 9 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeACL' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRenditions,The method has 6 parameters. Parameters: repositoryId' objectId' renditionFilter' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectByPath,The method has 9 parameters. Parameters: repositoryId' path' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeACL' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' streamId' offset' length' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,updateProperties,The method has 5 parameters. Parameters: repositoryId' objectId' changeToken' properties' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,moveObject,The method has 5 parameters. Parameters: repositoryId' objectId' targetFolderId' sourceFolderId' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,deleteTree,The method has 6 parameters. Parameters: repositoryId' folderId' allVersions' unfileObjects' continueOnFailure' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,setContentStream,The method has 6 parameters. Parameters: repositoryId' objectId' overwriteFlag' changeToken' contentStream' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getObjectRelationshipsRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectRelationshipsRequest,The method has 10 parameters. Parameters: repositoryId' objectId' includeSubRelationshipTypes' relationshipDirection' typeId' filter' includeAllowableActions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,RelationshipServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectRelationships,The method has 10 parameters. Parameters: repositoryId' objectId' includeSubRelationshipTypes' relationshipDirection' typeId' filter' includeAllowableActions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getTypeChildrenRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeChildrenRequest,The method has 6 parameters. Parameters: repositoryId' typeId' includePropertyDefinitions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getTypeDescendantsRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeDescendantsRequest,The method has 5 parameters. Parameters: repositoryId' typeId' depth' includePropertyDefinitions' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeChildren,The method has 6 parameters. Parameters: repositoryId' typeId' includePropertyDefinitions' maxItems' skipCount' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeDescendants,The method has 5 parameters. Parameters: repositoryId' typeId' depth' includePropertyDefinitions' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,checkInRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,checkInRequest,The method has 10 parameters. Parameters: repositoryId' objectId' major' properties' contentStream' checkinComment' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getObjectOfLatestVersionRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectOfLatestVersionRequest,The method has 10 parameters. Parameters: repositoryId' objectId' major' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeACL' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getPropertiesOfLatestVersionRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getPropertiesOfLatestVersionRequest,The method has 5 parameters. Parameters: repositoryId' objectId' major' filter' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,getAllVersionsRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAllVersionsRequest,The method has 5 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,checkIn,The method has 10 parameters. Parameters: repositoryId' objectId' major' properties' contentStream' checkinComment' policies' addACEs' removeACEs' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectOfLatestVersion,The method has 10 parameters. Parameters: repositoryId' objectId' major' filter' includeAllowableActions' includeRelationships' renditionFilter' includePolicyIds' includeACL' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getPropertiesOfLatestVersion,The method has 5 parameters. Parameters: repositoryId' objectId' major' filter' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAllVersions,The method has 5 parameters. Parameters: repositoryId' objectId' filter' includeAllowableActions' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,applyACLRequest,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,applyACLRequest,The method has 6 parameters. Parameters: repositoryId' objectId' addACEs' removeACEs' ACLPropagation' extension
Long Parameter List,DotCMIS.CMISWebServicesReference,ACLServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,applyACL,The method has 6 parameters. Parameters: repositoryId' objectId' addACEs' removeACEs' ACLPropagation' extension
Long Identifier,DotCMIS.Binding,CmisBindingFactory,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-intf.cs,,The length of the parameter StandardAuthenticationProviderClass is 35.
Long Identifier,DotCMIS,SessionParameter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\const.cs,,The length of the parameter WebServicesRelationshipService is 30.
Long Identifier,DotCMIS,SessionParameter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\const.cs,,The length of the parameter WebServicesEnableUnsecuredResponse is 34.
Long Identifier,DotCMIS,PermissionMappingKeys,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\const.cs,,The length of the parameter CanGetAllVersionsVersionSeries is 30.
Long Identifier,DotCMIS,PermissionMappingKeys,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\const.cs,,The length of the parameter CanGetObjectRelationshipSObject is 31.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canUpdatePropertiesFieldSpecified is 33.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetFolderTreeFieldSpecified is 30.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetPropertiesFieldSpecified is 30.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetObjectRelationshipsField is 30.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetObjectRelationshipsFieldSpecified is 39.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetObjectParentsFieldSpecified is 33.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetFolderParentFieldSpecified is 32.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetDescendantsFieldSpecified is 31.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canDeleteContentStreamFieldSpecified is 36.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canCancelCheckOutFieldSpecified is 31.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canSetContentStreamFieldSpecified is 33.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetAllVersionsFieldSpecified is 31.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canAddObjectToFolderFieldSpecified is 34.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canRemoveObjectFromFolderField is 30.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canRemoveObjectFromFolderFieldSpecified is 39.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetContentStreamFieldSpecified is 33.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetAppliedPoliciesFieldSpecified is 35.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canCreateDocumentFieldSpecified is 31.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canCreateRelationshipFieldSpecified is 35.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisAllowableActionsType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter canGetRenditionsFieldSpecified is 30.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisRepositoryInfoType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter changesIncompleteFieldSpecified is 31.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisRepositoryCapabilitiesType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter capabilityAllVersionsSearchableField is 36.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisRepositoryCapabilitiesType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter capabilityContentStreamUpdatabilityField is 40.
Long Identifier,DotCMIS.CMISWebServicesReference,cmisRepositoryCapabilitiesType,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,,The length of the parameter capabilityVersionSpecificFilingField is 36.
Long Statement,DotCMIS.Binding.AtomPub,AtomPubParser,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-parser.cs,ParseCollection,The length of the statement  "                    if (AtomPubConstants.NamespaceRestAtom == reader.NamespaceURI && AtomPubConstants.TagCollectionType == reader.LocalName) " is 120.
Long Statement,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,Parse,The length of the statement  "                throw new CmisConnectionException("Parsing exception!"' e); // CmisSync testers: don't worry about this exception' it is part of the fuzzy repo search. " is 151.
Long Statement,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetAllowableActions,The length of the statement  "            string link = LoadLink(repositoryId' objectId' AtomPubConstants.RelAllowableActions' AtomPubConstants.MediatypeAllowableAction); " is 128.
Long Statement,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetAllowableActions,The length of the statement  "                ThrowLinkException(repositoryId' objectId' AtomPubConstants.RelAllowableActions' AtomPubConstants.MediatypeAllowableAction); " is 124.
Long Statement,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,GetObject,The length of the statement  "            return GetObjectInternal(repositoryId' IdentifierType.Id' objectId' ReturnVersion.This' filter' includeAllowableActions' " is 120.
Long Statement,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,DeleteTree,The length of the statement  "            if (resp.StatusCode == HttpStatusCode.OK || resp.StatusCode == HttpStatusCode.Accepted || resp.StatusCode == HttpStatusCode.NoContent) " is 134.
Long Statement,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,SetContentStream,The length of the statement  "            if (resp.StatusCode != HttpStatusCode.OK && resp.StatusCode != HttpStatusCode.Created && resp.StatusCode != HttpStatusCode.NoContent) " is 133.
Long Statement,DotCMIS.Binding.AtomPub,AtomEntryWriter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-writer.cs,Write,The length of the statement  "                    writer.WriteAttributeString("xmlns"' AtomWriter.PrefixApacheChemistry' null' AtomPubConstants.NamespaceApacheChemistry); " is 120.
Long Statement,DotCMIS.Binding.AtomPub,AtomEntryWriter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-writer.cs,Write,The length of the statement  "                    writer.WriteStartElement(AtomWriter.PrefixRestAtom' AtomPubConstants.TagContentMediatype' AtomPubConstants.NamespaceRestAtom); " is 126.
Long Statement,DotCMIS.Binding.AtomPub,AtomEntryWriter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-writer.cs,Write,The length of the statement  "                        writer.WriteStartElement(AtomWriter.PrefixApacheChemistry' AtomPubConstants.TagContentFilename' AtomPubConstants.NamespaceApacheChemistry); " is 139.
Long Statement,DotCMIS.Binding.AtomPub,AtomEntryWriter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-writer.cs,Write,The length of the statement  "                    writer.WriteStartElement(AtomWriter.PrefixRestAtom' AtomPubConstants.TagContentBase64' AtomPubConstants.NamespaceRestAtom); " is 123.
Long Statement,DotCMIS.Binding.AtomPub,AtomQueryWriter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-writer.cs,Write,The length of the statement  "                    writer.WriteStartElement(AtomWriter.PrefixCMIS' AtomPubConstants.TagIncludeAllowableActions' AtomPubConstants.NamespaceCMIS); " is 125.
Long Statement,DotCMIS.Binding.AtomPub,AtomQueryWriter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-writer.cs,Write,The length of the statement  "                    writer.WriteStartElement(AtomWriter.PrefixCMIS' AtomPubConstants.TagIncludeRelationships' AtomPubConstants.NamespaceCMIS); " is 122.
Long Statement,DotCMIS.Binding,StandardAuthenticationProvider,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-intf.cs,HttpAuthenticate,The length of the statement  "                    request.Headers.Add("Authorization"' "Basic " + Convert.ToBase64String(System.Text.Encoding.ASCII.GetBytes((user ?? "") + ":" + (password ?? "")))); " is 148.
Long Statement,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,The length of the statement  "            result.ChangesIncomplete = (repositotyInfo.changesIncompleteSpecified ? (bool?)repositotyInfo.changesIncomplete : null); " is 120.
Long Statement,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,The length of the statement  "            result.ContentStreamUpdatesCapability = (CapabilityContentStreamUpdates)CmisValue.SerializerToCmisEnum(capabilities.capabilityContentStreamUpdatability); " is 153.
Long Statement,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,CreateCmisExtensionElement,The length of the statement  "                    if (node.NodeType == XmlNodeType.Text || node.NodeType == XmlNodeType.CDATA || node.NodeType == XmlNodeType.SignificantWhitespace) " is 130.
Long Statement,DotCMIS.Binding.WebServices,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,CreateDocument,The length of the statement  "                string objectId = port.createDocument(repositoryId' Converter.Convert(properties)' folderId' Converter.Convert(contentStream)' " is 126.
Long Statement,DotCMIS.Binding.WebServices,RelationshipService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetObjectRelationships,The length of the statement  "                    (enumRelationshipDirection?)CmisValue.CmisToSerializerEnum(relationshipDirection)' typeId' filter' includeAllowableActions' " is 123.
Long Statement,DotCMIS.Binding.WebServices,MultiFilingService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,AddObjectToFolder,The length of the statement  "                port.addObjectToFolder(repositoryId' objectId' folderId' allVersions == null ? true : (bool)allVersions' ref cmisExtension); " is 124.
Long Statement,DotCMIS.Binding.WebServices,AclService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetAcl,The length of the statement  "                return Converter.Convert(port.getACL(repositoryId' objectId' onlyBasicPermissions' Converter.ConvertExtension(extension))); " is 123.
Long Statement,DotCMIS.Binding.WebServices,AclService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,ApplyAcl,The length of the statement  "                return Converter.Convert(port.applyACL(repositoryId' objectId' Converter.Convert(addAces)' Converter.Convert(removeAces)' " is 121.
Long Statement,DotCMIS.Binding.WebServices,PolicyService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,GetAppliedPolicies,The length of the statement  "                cmisObjectType[] policies = port.getAppliedPolicies(repositoryId' objectId' filter' Converter.ConvertExtension(extension)); " is 123.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateOperationContext,The length of the statement  "            return new OperationContext(filter' includeAcls' includeAllowableActions' includePolicies' includeRelationships' renditionFilter' " is 129.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,GetTypeChildren,The length of the statement  "                ITypeDefinitionList tdl = service.GetTypeChildren(RepositoryId' typeId' includePropertyDefinitions' maxNumItems' skipCount' null); " is 130.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,GetTypeChildren,The length of the statement  "            return new CollectionEnumerable<IObjectType>(new PageFetcher<IObjectType>(DefaultContext.MaxItemsPerPage' fetchPageDelegate)); " is 126.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,GetCheckedOutDocs,The length of the statement  "            return new CollectionEnumerable<IDocument>(new PageFetcher<IDocument>(DefaultContext.MaxItemsPerPage' fetchPageDelegate)); " is 122.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,Query,The length of the statement  "            return new CollectionEnumerable<IQueryResult>(new PageFetcher<IQueryResult>(DefaultContext.MaxItemsPerPage' fetchPageDelegate)); " is 128.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,GetContentChanges,The length of the statement  "                IObjectList objectList = Binding.GetDiscoveryService().GetContentChanges(RepositoryId' ref changeLogToken' includeProperties' " is 125.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateDocument,The length of the statement  "            string newId = Binding.GetObjectService().CreateDocument(RepositoryId' ObjectFactory.ConvertProperties(properties' null' " is 120.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateFolder,The length of the statement  "            string newId = Binding.GetObjectService().CreateFolder(RepositoryId' ObjectFactory.ConvertProperties(properties' null' CreateUpdatability)' " is 139.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreatePolicy,The length of the statement  "            string newId = Binding.GetObjectService().CreatePolicy(RepositoryId' ObjectFactory.ConvertProperties(properties' null' CreateUpdatability)' " is 139.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateRelationship,The length of the statement  "            string newId = Binding.GetObjectService().CreateRelationship(RepositoryId' ObjectFactory.ConvertProperties(properties' null' CreateUpdatability)' " is 145.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,CreateRelationship,The length of the statement  "                ObjectFactory.ConvertPolicies(policies)' ObjectFactory.ConvertAces(addAces)' ObjectFactory.ConvertAces(removeAces)' null); " is 122.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,GetRelationships,The length of the statement  "                IObjectList relList = service.GetObjectRelationships(RepositoryId' id' includeSubRelationshipTypes' relationshipDirection' " is 122.
Long Statement,DotCMIS.Client.Impl,Session,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-impl.cs,GetRelationships,The length of the statement  "            return new CollectionEnumerable<IRelationship>(new PageFetcher<IRelationship>(DefaultContext.MaxItemsPerPage' fetchPageDelegate)); " is 130.
Long Statement,DotCMIS.Client.Impl,AbstractCmisObject,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,Refresh,The length of the statement  "                IObjectData objectData = Binding.GetObjectService().GetObject(RepositoryId' ObjectId' oc.FilterString' oc.IncludeAllowableActions' " is 130.
Long Statement,DotCMIS.Client.Impl,Document,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,Copy,The length of the statement  "            IObjectId newId = Session.CreateDocumentFromSource(this' properties' targetFolderId' versioningState' policies' addAces' removeAces); " is 133.
Long Statement,DotCMIS.Client.Impl,Document,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CheckIn,The length of the statement  "                Binding.GetVersioningService().CheckIn(RepositoryId' ref objectId' major' of.ConvertProperties(properties' ObjectType' updatebility)' " is 133.
Long Statement,DotCMIS.Client.Impl,Document,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CheckIn,The length of the statement  "                    contentStream' checkinComment' of.ConvertPolicies(policies)' of.ConvertAces(addAces)' of.ConvertAces(removeAces)' null); " is 120.
Long Statement,DotCMIS.Client.Impl,Document,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,GetObjectOfLatestVersion,The length of the statement  "            IObjectData objectData = Binding.GetVersioningService().GetObjectOfLatestVersion(RepositoryId' objectId' versionSeriesId' major' " is 128.
Long Statement,DotCMIS.Client.Impl,Document,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,SetContentStream,The length of the statement  "                Binding.GetObjectService().SetContentStream(RepositoryId' ref objectId' overwrite' ref changeToken' contentStream' null); " is 121.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CreateDocument,The length of the statement  "            IObjectId newId = Session.CreateDocument(properties' this' contentStream' versioningState' policies' addAces' removeAces); " is 122.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,CreateDocumentFromSource,The length of the statement  "            IObjectId newId = Session.CreateDocumentFromSource(source' properties' this' versioningState' policies' addAces' removeAces); " is 125.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,DeleteTree,The length of the statement  "            IFailedToDeleteData failed = Binding.GetObjectService().DeleteTree(RepositoryId' ObjectId' allVersions' unfile' continueOnFailure' null); " is 137.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,GetCheckedOutDocs,The length of the statement  "                IObjectList checkedOutDocs = service.GetCheckedOutDocs(RepositoryId' objectId' ctxt.FilterString' ctxt.OrderBy' ctxt.IncludeAllowableActions' " is 141.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,GetChildren,The length of the statement  "                IObjectInFolderList children = service.GetChildren(RepositoryId' objectId' ctxt.FilterString' ctxt.OrderBy' ctxt.IncludeAllowableActions' " is 137.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,GetDescendants,The length of the statement  "            IList<IObjectInFolderContainer> bindingContainerList = Binding.GetNavigationService().GetDescendants(RepositoryId' ObjectId' depth' " is 131.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,GetFolderTree,The length of the statement  "            IList<IObjectInFolderContainer> bindingContainerList = Binding.GetNavigationService().GetFolderTree(RepositoryId' ObjectId' depth' " is 130.
Long Statement,DotCMIS.Client.Impl,Folder,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,ConvertProviderContainer,The length of the statement  "                IFileableCmisObject cmisObject = Session.ObjectFactory.ConvertObject(oifc.Object.Object' context) as IFileableCmisObject; " is 121.
Long Statement,DotCMIS.Client.Impl,Rendition,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,GetContentStream,The length of the statement  "            return session.Binding.GetObjectService().GetContentStream(session.RepositoryInfo.Id' objectId' StreamId' null' null' null); " is 124.
Long Statement,DotCMIS.Data.Impl,PropertyData,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\data\data-impl.cs,CheckValue,The length of the statement  "                    if (!(value is sbyte || value is byte || value is short || value is ushort || value is int || value is uint || value is long)) " is 126.
Long Statement,DotCMIS.Enums,CmisValue,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\enums.cs,MapEnums,The length of the statement  "                    CmisValueAttribute[] cmisValueAttr = cmisfieldInfo.GetCustomAttributes(typeof(CmisValueAttribute)' false) as CmisValueAttribute[]; " is 130.
Long Statement,DotCMIS.Enums,CmisValue,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\enums.cs,GetCmisValue,The length of the statement  "            CmisValueAttribute[] cmisValueAttr = fieldInfo.GetCustomAttributes(typeof(CmisValueAttribute)' false) as CmisValueAttribute[]; " is 126.
Long Statement,DotCMIS.Enums,CmisValue,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\enums.cs,GetCmisEnum,The length of the statement  "                CmisValueAttribute[] cmisValueAttr = fieldInfo.GetCustomAttributes(typeof(CmisValueAttribute)' false) as CmisValueAttribute[]; " is 126.
Long Statement,DotCMIS.CMISWebServicesReference,DiscoveryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,query,The length of the statement  "            DotCMIS.CMISWebServicesReference.queryResponse retVal = ((DotCMIS.CMISWebServicesReference.DiscoveryServicePort)(this)).query(inValue); " is 135.
Long Statement,DotCMIS.CMISWebServicesReference,DiscoveryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentChanges,The length of the statement  "            DotCMIS.CMISWebServicesReference.getContentChangesRequest inValue = new DotCMIS.CMISWebServicesReference.getContentChangesRequest(); " is 132.
Long Statement,DotCMIS.CMISWebServicesReference,DiscoveryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentChanges,The length of the statement  "            DotCMIS.CMISWebServicesReference.getContentChangesResponse retVal = ((DotCMIS.CMISWebServicesReference.DiscoveryServicePort)(this)).getContentChanges(inValue); " is 159.
Long Statement,DotCMIS.CMISWebServicesReference,MultiFilingServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,addObjectToFolder,The length of the statement  "            DotCMIS.CMISWebServicesReference.addObjectToFolderRequest inValue = new DotCMIS.CMISWebServicesReference.addObjectToFolderRequest(); " is 132.
Long Statement,DotCMIS.CMISWebServicesReference,MultiFilingServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,addObjectToFolder,The length of the statement  "            DotCMIS.CMISWebServicesReference.addObjectToFolderResponse retVal = ((DotCMIS.CMISWebServicesReference.MultiFilingServicePort)(this)).addObjectToFolder(inValue); " is 161.
Long Statement,DotCMIS.CMISWebServicesReference,MultiFilingServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,removeObjectFromFolder,The length of the statement  "            DotCMIS.CMISWebServicesReference.removeObjectFromFolderRequest inValue = new DotCMIS.CMISWebServicesReference.removeObjectFromFolderRequest(); " is 142.
Long Statement,DotCMIS.CMISWebServicesReference,MultiFilingServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,removeObjectFromFolder,The length of the statement  "            DotCMIS.CMISWebServicesReference.removeObjectFromFolderResponse retVal = ((DotCMIS.CMISWebServicesReference.MultiFilingServicePort)(this)).removeObjectFromFolder(inValue); " is 171.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getDescendants,The length of the statement  "            DotCMIS.CMISWebServicesReference.getDescendantsRequest inValue = new DotCMIS.CMISWebServicesReference.getDescendantsRequest(); " is 126.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getDescendants,The length of the statement  "            DotCMIS.CMISWebServicesReference.getDescendantsResponse retVal = ((DotCMIS.CMISWebServicesReference.NavigationServicePort)(this)).getDescendants(inValue); " is 154.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getChildren,The length of the statement  "            DotCMIS.CMISWebServicesReference.getChildrenRequest inValue = new DotCMIS.CMISWebServicesReference.getChildrenRequest(); " is 120.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getChildren,The length of the statement  "            DotCMIS.CMISWebServicesReference.getChildrenResponse retVal = ((DotCMIS.CMISWebServicesReference.NavigationServicePort)(this)).getChildren(inValue); " is 148.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getFolderParent,The length of the statement  "            DotCMIS.CMISWebServicesReference.getFolderParentRequest inValue = new DotCMIS.CMISWebServicesReference.getFolderParentRequest(); " is 128.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getFolderParent,The length of the statement  "            DotCMIS.CMISWebServicesReference.getFolderParentResponse retVal = ((DotCMIS.CMISWebServicesReference.NavigationServicePort)(this)).getFolderParent(inValue); " is 156.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getFolderTree,The length of the statement  "            DotCMIS.CMISWebServicesReference.getFolderTreeRequest inValue = new DotCMIS.CMISWebServicesReference.getFolderTreeRequest(); " is 124.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getFolderTree,The length of the statement  "            DotCMIS.CMISWebServicesReference.getFolderTreeResponse retVal = ((DotCMIS.CMISWebServicesReference.NavigationServicePort)(this)).getFolderTree(inValue); " is 152.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectParents,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectParentsRequest inValue = new DotCMIS.CMISWebServicesReference.getObjectParentsRequest(); " is 130.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectParents,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectParentsResponse retVal = ((DotCMIS.CMISWebServicesReference.NavigationServicePort)(this)).getObjectParents(inValue); " is 158.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getCheckedOutDocs,The length of the statement  "            DotCMIS.CMISWebServicesReference.getCheckedOutDocsRequest inValue = new DotCMIS.CMISWebServicesReference.getCheckedOutDocsRequest(); " is 132.
Long Statement,DotCMIS.CMISWebServicesReference,NavigationServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getCheckedOutDocs,The length of the statement  "            DotCMIS.CMISWebServicesReference.getCheckedOutDocsResponse retVal = ((DotCMIS.CMISWebServicesReference.NavigationServicePort)(this)).getCheckedOutDocs(inValue); " is 160.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocument,The length of the statement  "            DotCMIS.CMISWebServicesReference.createDocumentRequest inValue = new DotCMIS.CMISWebServicesReference.createDocumentRequest(); " is 126.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocument,The length of the statement  "            DotCMIS.CMISWebServicesReference.createDocumentResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).createDocument(inValue); " is 150.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocumentFromSource,The length of the statement  "            DotCMIS.CMISWebServicesReference.createDocumentFromSourceRequest inValue = new DotCMIS.CMISWebServicesReference.createDocumentFromSourceRequest(); " is 146.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createDocumentFromSource,The length of the statement  "            DotCMIS.CMISWebServicesReference.createDocumentFromSourceResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).createDocumentFromSource(inValue); " is 170.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createFolder,The length of the statement  "            DotCMIS.CMISWebServicesReference.createFolderRequest inValue = new DotCMIS.CMISWebServicesReference.createFolderRequest(); " is 122.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createFolder,The length of the statement  "            DotCMIS.CMISWebServicesReference.createFolderResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).createFolder(inValue); " is 146.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createRelationship,The length of the statement  "            DotCMIS.CMISWebServicesReference.createRelationshipRequest inValue = new DotCMIS.CMISWebServicesReference.createRelationshipRequest(); " is 134.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createRelationship,The length of the statement  "            DotCMIS.CMISWebServicesReference.createRelationshipResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).createRelationship(inValue); " is 158.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createPolicy,The length of the statement  "            DotCMIS.CMISWebServicesReference.createPolicyRequest inValue = new DotCMIS.CMISWebServicesReference.createPolicyRequest(); " is 122.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,createPolicy,The length of the statement  "            DotCMIS.CMISWebServicesReference.createPolicyResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).createPolicy(inValue); " is 146.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAllowableActions,The length of the statement  "            DotCMIS.CMISWebServicesReference.getAllowableActionsRequest inValue = new DotCMIS.CMISWebServicesReference.getAllowableActionsRequest(); " is 136.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAllowableActions,The length of the statement  "            DotCMIS.CMISWebServicesReference.getAllowableActionsResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).getAllowableActions(inValue); " is 160.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObject,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).getObject(inValue); " is 140.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getProperties,The length of the statement  "            DotCMIS.CMISWebServicesReference.getPropertiesRequest inValue = new DotCMIS.CMISWebServicesReference.getPropertiesRequest(); " is 124.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getProperties,The length of the statement  "            DotCMIS.CMISWebServicesReference.getPropertiesResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).getProperties(inValue); " is 148.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRenditions,The length of the statement  "            DotCMIS.CMISWebServicesReference.getRenditionsRequest inValue = new DotCMIS.CMISWebServicesReference.getRenditionsRequest(); " is 124.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRenditions,The length of the statement  "            DotCMIS.CMISWebServicesReference.getRenditionsResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).getRenditions(inValue); " is 148.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectByPath,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectByPathRequest inValue = new DotCMIS.CMISWebServicesReference.getObjectByPathRequest(); " is 128.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectByPath,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectByPathResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).getObjectByPath(inValue); " is 152.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentStream,The length of the statement  "            DotCMIS.CMISWebServicesReference.getContentStreamRequest inValue = new DotCMIS.CMISWebServicesReference.getContentStreamRequest(); " is 130.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getContentStream,The length of the statement  "            DotCMIS.CMISWebServicesReference.getContentStreamResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).getContentStream(inValue); " is 154.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,updateProperties,The length of the statement  "            DotCMIS.CMISWebServicesReference.updatePropertiesRequest inValue = new DotCMIS.CMISWebServicesReference.updatePropertiesRequest(); " is 130.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,updateProperties,The length of the statement  "            DotCMIS.CMISWebServicesReference.updatePropertiesResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).updateProperties(inValue); " is 154.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,moveObject,The length of the statement  "            DotCMIS.CMISWebServicesReference.moveObjectResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).moveObject(inValue); " is 142.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,deleteObject,The length of the statement  "            DotCMIS.CMISWebServicesReference.deleteObjectRequest inValue = new DotCMIS.CMISWebServicesReference.deleteObjectRequest(); " is 122.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,deleteObject,The length of the statement  "            DotCMIS.CMISWebServicesReference.deleteObjectResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).deleteObject(inValue); " is 146.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,deleteTree,The length of the statement  "            DotCMIS.CMISWebServicesReference.deleteTreeResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).deleteTree(inValue); " is 142.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,setContentStream,The length of the statement  "            DotCMIS.CMISWebServicesReference.setContentStreamRequest inValue = new DotCMIS.CMISWebServicesReference.setContentStreamRequest(); " is 130.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,setContentStream,The length of the statement  "            DotCMIS.CMISWebServicesReference.setContentStreamResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).setContentStream(inValue); " is 154.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,deleteContentStream,The length of the statement  "            DotCMIS.CMISWebServicesReference.deleteContentStreamRequest inValue = new DotCMIS.CMISWebServicesReference.deleteContentStreamRequest(); " is 136.
Long Statement,DotCMIS.CMISWebServicesReference,ObjectServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,deleteContentStream,The length of the statement  "            DotCMIS.CMISWebServicesReference.deleteContentStreamResponse retVal = ((DotCMIS.CMISWebServicesReference.ObjectServicePort)(this)).deleteContentStream(inValue); " is 160.
Long Statement,DotCMIS.CMISWebServicesReference,PolicyServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,applyPolicy,The length of the statement  "            DotCMIS.CMISWebServicesReference.applyPolicyRequest inValue = new DotCMIS.CMISWebServicesReference.applyPolicyRequest(); " is 120.
Long Statement,DotCMIS.CMISWebServicesReference,PolicyServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,applyPolicy,The length of the statement  "            DotCMIS.CMISWebServicesReference.applyPolicyResponse retVal = ((DotCMIS.CMISWebServicesReference.PolicyServicePort)(this)).applyPolicy(inValue); " is 144.
Long Statement,DotCMIS.CMISWebServicesReference,PolicyServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,removePolicy,The length of the statement  "            DotCMIS.CMISWebServicesReference.removePolicyRequest inValue = new DotCMIS.CMISWebServicesReference.removePolicyRequest(); " is 122.
Long Statement,DotCMIS.CMISWebServicesReference,PolicyServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,removePolicy,The length of the statement  "            DotCMIS.CMISWebServicesReference.removePolicyResponse retVal = ((DotCMIS.CMISWebServicesReference.PolicyServicePort)(this)).removePolicy(inValue); " is 146.
Long Statement,DotCMIS.CMISWebServicesReference,PolicyServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAppliedPolicies,The length of the statement  "            DotCMIS.CMISWebServicesReference.getAppliedPoliciesRequest inValue = new DotCMIS.CMISWebServicesReference.getAppliedPoliciesRequest(); " is 134.
Long Statement,DotCMIS.CMISWebServicesReference,PolicyServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAppliedPolicies,The length of the statement  "            DotCMIS.CMISWebServicesReference.getAppliedPoliciesResponse retVal = ((DotCMIS.CMISWebServicesReference.PolicyServicePort)(this)).getAppliedPolicies(inValue); " is 158.
Long Statement,DotCMIS.CMISWebServicesReference,RelationshipServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectRelationships,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectRelationshipsRequest inValue = new DotCMIS.CMISWebServicesReference.getObjectRelationshipsRequest(); " is 142.
Long Statement,DotCMIS.CMISWebServicesReference,RelationshipServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectRelationships,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectRelationshipsResponse retVal = ((DotCMIS.CMISWebServicesReference.RelationshipServicePort)(this)).getObjectRelationships(inValue); " is 172.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRepositories,The length of the statement  "            DotCMIS.CMISWebServicesReference.getRepositoriesRequest inValue = new DotCMIS.CMISWebServicesReference.getRepositoriesRequest(); " is 128.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRepositories,The length of the statement  "            DotCMIS.CMISWebServicesReference.getRepositoriesResponse retVal = ((DotCMIS.CMISWebServicesReference.RepositoryServicePort)(this)).getRepositories(inValue); " is 156.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRepositoryInfo,The length of the statement  "            DotCMIS.CMISWebServicesReference.getRepositoryInfoRequest inValue = new DotCMIS.CMISWebServicesReference.getRepositoryInfoRequest(); " is 132.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getRepositoryInfo,The length of the statement  "            DotCMIS.CMISWebServicesReference.getRepositoryInfoResponse retVal = ((DotCMIS.CMISWebServicesReference.RepositoryServicePort)(this)).getRepositoryInfo(inValue); " is 160.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeChildren,The length of the statement  "            DotCMIS.CMISWebServicesReference.getTypeChildrenRequest inValue = new DotCMIS.CMISWebServicesReference.getTypeChildrenRequest(); " is 128.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeChildren,The length of the statement  "            DotCMIS.CMISWebServicesReference.getTypeChildrenResponse retVal = ((DotCMIS.CMISWebServicesReference.RepositoryServicePort)(this)).getTypeChildren(inValue); " is 156.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeDescendants,The length of the statement  "            DotCMIS.CMISWebServicesReference.getTypeDescendantsRequest inValue = new DotCMIS.CMISWebServicesReference.getTypeDescendantsRequest(); " is 134.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeDescendants,The length of the statement  "            DotCMIS.CMISWebServicesReference.getTypeDescendantsResponse retVal = ((DotCMIS.CMISWebServicesReference.RepositoryServicePort)(this)).getTypeDescendants(inValue); " is 162.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeDefinition,The length of the statement  "            DotCMIS.CMISWebServicesReference.getTypeDefinitionRequest inValue = new DotCMIS.CMISWebServicesReference.getTypeDefinitionRequest(); " is 132.
Long Statement,DotCMIS.CMISWebServicesReference,RepositoryServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getTypeDefinition,The length of the statement  "            DotCMIS.CMISWebServicesReference.getTypeDefinitionResponse retVal = ((DotCMIS.CMISWebServicesReference.RepositoryServicePort)(this)).getTypeDefinition(inValue); " is 160.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,checkOut,The length of the statement  "            DotCMIS.CMISWebServicesReference.checkOutResponse retVal = ((DotCMIS.CMISWebServicesReference.VersioningServicePort)(this)).checkOut(inValue); " is 142.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,cancelCheckOut,The length of the statement  "            DotCMIS.CMISWebServicesReference.cancelCheckOutRequest inValue = new DotCMIS.CMISWebServicesReference.cancelCheckOutRequest(); " is 126.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,cancelCheckOut,The length of the statement  "            DotCMIS.CMISWebServicesReference.cancelCheckOutResponse retVal = ((DotCMIS.CMISWebServicesReference.VersioningServicePort)(this)).cancelCheckOut(inValue); " is 154.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,checkIn,The length of the statement  "            DotCMIS.CMISWebServicesReference.checkInResponse retVal = ((DotCMIS.CMISWebServicesReference.VersioningServicePort)(this)).checkIn(inValue); " is 140.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectOfLatestVersion,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectOfLatestVersionRequest inValue = new DotCMIS.CMISWebServicesReference.getObjectOfLatestVersionRequest(); " is 146.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getObjectOfLatestVersion,The length of the statement  "            DotCMIS.CMISWebServicesReference.getObjectOfLatestVersionResponse retVal = ((DotCMIS.CMISWebServicesReference.VersioningServicePort)(this)).getObjectOfLatestVersion(inValue); " is 174.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getPropertiesOfLatestVersion,The length of the statement  "            DotCMIS.CMISWebServicesReference.getPropertiesOfLatestVersionRequest inValue = new DotCMIS.CMISWebServicesReference.getPropertiesOfLatestVersionRequest(); " is 154.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getPropertiesOfLatestVersion,The length of the statement  "            DotCMIS.CMISWebServicesReference.getPropertiesOfLatestVersionResponse retVal = ((DotCMIS.CMISWebServicesReference.VersioningServicePort)(this)).getPropertiesOfLatestVersion(inValue); " is 182.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAllVersions,The length of the statement  "            DotCMIS.CMISWebServicesReference.getAllVersionsRequest inValue = new DotCMIS.CMISWebServicesReference.getAllVersionsRequest(); " is 126.
Long Statement,DotCMIS.CMISWebServicesReference,VersioningServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getAllVersions,The length of the statement  "            DotCMIS.CMISWebServicesReference.getAllVersionsResponse retVal = ((DotCMIS.CMISWebServicesReference.VersioningServicePort)(this)).getAllVersions(inValue); " is 154.
Long Statement,DotCMIS.CMISWebServicesReference,ACLServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,getACL,The length of the statement  "            DotCMIS.CMISWebServicesReference.getACLResponse retVal = ((DotCMIS.CMISWebServicesReference.ACLServicePort)(this)).getACL(inValue); " is 131.
Long Statement,DotCMIS.CMISWebServicesReference,ACLServicePortClient,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\Service References\CMISWebServicesReference\Reference.cs,applyACL,The length of the statement  "            DotCMIS.CMISWebServicesReference.applyACLResponse retVal = ((DotCMIS.CMISWebServicesReference.ACLServicePort)(this)).applyACL(inValue); " is 135.
Complex Conditional,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,MoveObject,The conditional expression  "targetFolderId == null || targetFolderId.Length == 0 || sourceFolderId == null || sourceFolderId.Length == 0"  is complex.
Complex Conditional,DotCMIS.Binding,NtlmAuthenticationProvider,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-intf.cs,HttpAuthenticate,The conditional expression  "(user == string.Empty || user == null) && (password == string.Empty || password == null)"  is complex.
Complex Conditional,DotCMIS.Binding.Impl,BindingRepositoryService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-impl.cs,GetTypeChildren,The conditional expression  "!hasExtension && (includePropertyDefinitions ?? false) && (result != null) && (result.List != null)"  is complex.
Complex Conditional,DotCMIS.Binding.Impl,Response,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Response,The conditional expression  "httpResponse.StatusCode == HttpStatusCode.OK ||                      httpResponse.StatusCode == HttpStatusCode.Created ||                      httpResponse.StatusCode == HttpStatusCode.NonAuthoritativeInformation ||                      httpResponse.StatusCode == HttpStatusCode.PartialContent"  is complex.
Complex Conditional,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,PutPath,The conditional expression  "path == null || cmisObject == null || cmisObject.Id == null || cacheKey == null"  is complex.
Complex Conditional,DotCMIS.Data.Impl,PropertyData,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\data\data-impl.cs,CheckValue,The conditional expression  "!(value is sbyte || value is byte || value is short || value is ushort || value is int || value is uint || value is long)"  is complex.
Empty Catch Block,DotCMIS.Binding.AtomPub,AtomPubParser,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-parser.cs,Parse,The method has an empty catch block.
Empty Catch Block,DotCMIS.Binding.AtomPub,AtomPubParser,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub-parser.cs,Parse,The method has an empty catch block.
Empty Catch Block,DotCMIS.Binding.Impl,BindingSession,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-impl.cs,GetValue,The method has an empty catch block.
Empty Catch Block,DotCMIS.Binding.Impl,Response,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Response,The method has an empty catch block.
Empty Catch Block,DotCMIS.Binding.Impl,Response,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Response,The method has an empty catch block.
Empty Catch Block,DotCMIS.Binding.WebServices,AbstractWebServicesService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,ConvertException,The method has an empty catch block.
Empty Catch Block,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The method has an empty catch block.
Empty Catch Block,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The method has an empty catch block.
Empty Catch Block,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The method has an empty catch block.
Empty Catch Block,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The method has an empty catch block.
Magic Number,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,ThrowLinkException,The following statement contains a magic number: switch (index)              {                  case 0:                      throw new CmisObjectNotFoundException("Unknown repository!");                  case 1:                      throw new CmisObjectNotFoundException("Unknown object!");                  case 2:                      throw new CmisNotSupportedException("Operation not supported by the repository for this object!");                  case 3:                      throw new CmisNotSupportedException("No link with matching media type!");                  case 4:                      throw new CmisRuntimeException("Nothing wrong! Either this is a bug or threading issue.");                  default:                      throw new CmisRuntimeException("Unknown error!");              }
Magic Number,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,ThrowLinkException,The following statement contains a magic number: switch (index)              {                  case 0:                      throw new CmisObjectNotFoundException("Unknown repository!");                  case 1:                      throw new CmisObjectNotFoundException("Unknown object!");                  case 2:                      throw new CmisNotSupportedException("Operation not supported by the repository for this object!");                  case 3:                      throw new CmisNotSupportedException("No link with matching media type!");                  case 4:                      throw new CmisRuntimeException("Nothing wrong! Either this is a bug or threading issue.");                  default:                      throw new CmisRuntimeException("Unknown error!");              }
Magic Number,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,ThrowLinkException,The following statement contains a magic number: switch (index)              {                  case 0:                      throw new CmisObjectNotFoundException("Unknown repository!");                  case 1:                      throw new CmisObjectNotFoundException("Unknown object!");                  case 2:                      throw new CmisNotSupportedException("Operation not supported by the repository for this object!");                  case 3:                      throw new CmisNotSupportedException("No link with matching media type!");                  case 4:                      throw new CmisRuntimeException("Nothing wrong! Either this is a bug or threading issue.");                  default:                      throw new CmisRuntimeException("Unknown error!");              }
Magic Number,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,Put,The following statement contains a magic number: if ((int)resp.StatusCode < 200 || (int)resp.StatusCode > 299)              {                  throw ConvertStatusCode(resp.StatusCode' resp.Message' resp.ErrorContent' null);              }
Magic Number,DotCMIS.Binding.AtomPub,AbstractAtomPubService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,Put,The following statement contains a magic number: if ((int)resp.StatusCode < 200 || (int)resp.StatusCode > 299)              {                  throw ConvertStatusCode(resp.StatusCode' resp.Message' resp.ErrorContent' null);              }
Magic Number,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,DeleteTree,The following statement contains a magic number: if (resp.StatusCode == HttpStatusCode.InternalServerError)              {                  link = LoadLink(repositoryId' folderId' AtomPubConstants.RelDown' AtomPubConstants.MediatypeChildren);                    if (link != null)                  {                      url = new UrlBuilder(link);                      // we only want the object ids                      url.AddParameter(AtomPubConstants.ParamFilter' "cmis:objectId");                      url.AddParameter(AtomPubConstants.ParamAllowableActions' false);                      url.AddParameter(AtomPubConstants.ParamRelationships' IncludeRelationshipsFlag.None);                      url.AddParameter(AtomPubConstants.ParamRenditionFilter' "cmis:none");                      url.AddParameter(AtomPubConstants.ParamPathSegment' false);                      // 1000 children should be enough to indicate a problem                      url.AddParameter(AtomPubConstants.ParamMaxItems' 1000);                      url.AddParameter(AtomPubConstants.ParamSkipCount' 0);                        // read and parse                      resp = Read(url);                      AtomFeed feed = Parse<AtomFeed>(resp.Stream);                        // prepare result                      FailedToDeleteData result = new FailedToDeleteData();                      List<string> ids = new List<string>();                      result.Ids = ids;                        // get the children ids                      foreach (AtomEntry entry in feed.GetEntries())                      {                          ids.Add(entry.Id);                      }                        return result;                  }              }
Magic Number,DotCMIS.Binding.AtomPub,ObjectService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\atompub\atompub.cs,SetContentStream,The following statement contains a magic number: HttpUtils.Output output = delegate(Stream stream)              {                  int b;                  byte[] buffer = new byte[4096];                  while ((b = contentStream.Stream.Read(buffer' 0' buffer.Length)) > 0)                  {                      stream.Write(buffer' 0' b);                  }                    contentStream.Stream.Close();              };
Magic Number,DotCMIS.Binding,DictionaryCacheLevel,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-caches.cs,Initialize,The following statement contains a magic number: int initialCapacity = GetIntParameter(parameters' Capacity' 32);
Magic Number,DotCMIS.Binding,LruCacheLevel,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\binding-caches.cs,Initialize,The following statement contains a magic number: int maxEntries = GetIntParameter(parameters' MaxEntries' 100);
Magic Number,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,The following statement contains a magic number: if (contentStream.Stream != null)              {                  if (contentStream.Stream is MemoryStream)                  {                      result.stream = ((MemoryStream)contentStream.Stream).ToArray();                  }                  else                  {                      MemoryStream memStream = new MemoryStream();                      byte[] buffer = new byte[4096];                      int bytes;                      while ((bytes = contentStream.Stream.Read(buffer' 0' buffer.Length)) > 0)                      {                          memStream.Write(buffer' 0' bytes);                      }                      result.stream = memStream.ToArray();                  }              }
Magic Number,DotCMIS.Binding.Impl,HttpUtils,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Invoke,The following statement contains a magic number: try              {                  // log before connect                  if (DotCMISDebug.DotCMISSwitch.TraceInfo)                  {                      Trace.WriteLine(method + " " + url);                  }                    // create connection                   HttpWebRequest conn = (HttpWebRequest)WebRequest.Create(url.Url);                  conn.Method = method;                  conn.UserAgent = "Apache Chemistry DotCMIS";                    // timeouts                  int connectTimeout = session.GetValue(SessionParameter.ConnectTimeout' -2);                  if (connectTimeout >= -1)                  {                      conn.Timeout = connectTimeout;                  }                    int readTimeout = session.GetValue(SessionParameter.ReadTimeout' -2);                  if (readTimeout >= -1)                  {                      conn.ReadWriteTimeout = readTimeout;                  }                    // set content type                  if (contentType != null)                  {                      conn.ContentType = contentType;                  }                    // set additional headers                  if (headers != null)                  {                      foreach (KeyValuePair<string' string> header in headers)                      {                          conn.Headers.Add(header.Key' header.Value);                      }                  }                    // authenticate                  IAuthenticationProvider authProvider = session.GetAuthenticationProvider();                  if (authProvider != null)                  {                      conn.PreAuthenticate = true;                      authProvider.Authenticate(conn);                  }                    // range                  if (offset != null && length != null)                  {                      conn.AddRange(offset ?? 0' offset + length - 1 ?? 0);                  }                  else if (offset != null)                  {                      conn.AddRange(offset ?? 0);                  }                    // compression                  string compressionFlag = session.GetValue(SessionParameter.Compression) as string;                  if (compressionFlag != null && compressionFlag.ToLower().Equals("true"))                  {                      conn.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;                  }                    // send data                  if (writer != null)                  {                      conn.SendChunked = true;                      Stream requestStream = conn.GetRequestStream();                      writer(requestStream);                      requestStream.Close();                  }                    // connect                  try                  {                      HttpWebResponse response = (HttpWebResponse)conn.GetResponse();                        if (authProvider != null)                      {                          authProvider.HandleResponse(response);                      }                        return new Response(response);                  }                  catch (WebException we)                  {                      return new Response(we);                  }              }              catch (Exception e)              {                  throw new CmisConnectionException("Cannot access " + url + ": " + e.Message' e);              }
Magic Number,DotCMIS.Binding.Impl,HttpUtils,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Invoke,The following statement contains a magic number: try              {                  // log before connect                  if (DotCMISDebug.DotCMISSwitch.TraceInfo)                  {                      Trace.WriteLine(method + " " + url);                  }                    // create connection                   HttpWebRequest conn = (HttpWebRequest)WebRequest.Create(url.Url);                  conn.Method = method;                  conn.UserAgent = "Apache Chemistry DotCMIS";                    // timeouts                  int connectTimeout = session.GetValue(SessionParameter.ConnectTimeout' -2);                  if (connectTimeout >= -1)                  {                      conn.Timeout = connectTimeout;                  }                    int readTimeout = session.GetValue(SessionParameter.ReadTimeout' -2);                  if (readTimeout >= -1)                  {                      conn.ReadWriteTimeout = readTimeout;                  }                    // set content type                  if (contentType != null)                  {                      conn.ContentType = contentType;                  }                    // set additional headers                  if (headers != null)                  {                      foreach (KeyValuePair<string' string> header in headers)                      {                          conn.Headers.Add(header.Key' header.Value);                      }                  }                    // authenticate                  IAuthenticationProvider authProvider = session.GetAuthenticationProvider();                  if (authProvider != null)                  {                      conn.PreAuthenticate = true;                      authProvider.Authenticate(conn);                  }                    // range                  if (offset != null && length != null)                  {                      conn.AddRange(offset ?? 0' offset + length - 1 ?? 0);                  }                  else if (offset != null)                  {                      conn.AddRange(offset ?? 0);                  }                    // compression                  string compressionFlag = session.GetValue(SessionParameter.Compression) as string;                  if (compressionFlag != null && compressionFlag.ToLower().Equals("true"))                  {                      conn.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;                  }                    // send data                  if (writer != null)                  {                      conn.SendChunked = true;                      Stream requestStream = conn.GetRequestStream();                      writer(requestStream);                      requestStream.Close();                  }                    // connect                  try                  {                      HttpWebResponse response = (HttpWebResponse)conn.GetResponse();                        if (authProvider != null)                      {                          authProvider.HandleResponse(response);                      }                        return new Response(response);                  }                  catch (WebException we)                  {                      return new Response(we);                  }              }              catch (Exception e)              {                  throw new CmisConnectionException("Cannot access " + url + ": " + e.Message' e);              }
Magic Number,DotCMIS.Binding.Impl,Response,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Response,The following statement contains a magic number: if (httpResponse.StatusCode == HttpStatusCode.OK ||                      httpResponse.StatusCode == HttpStatusCode.Created ||                      httpResponse.StatusCode == HttpStatusCode.NonAuthoritativeInformation ||                      httpResponse.StatusCode == HttpStatusCode.PartialContent)                  {                      if (isBase64)                      {                          Stream = new BufferedStream(new CryptoStream(httpResponse.GetResponseStream()' new FromBase64Transform()' CryptoStreamMode.Read)' 64 * 1024);                      }                      else                      {                            Stream = new BufferedStream(httpResponse.GetResponseStream()' 64 * 1024);                      }                  }                  else                  {                      try { httpResponse.Close(); }                      catch (Exception) { }                  }
Magic Number,DotCMIS.Binding.Impl,Response,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Response,The following statement contains a magic number: if (httpResponse.StatusCode == HttpStatusCode.OK ||                      httpResponse.StatusCode == HttpStatusCode.Created ||                      httpResponse.StatusCode == HttpStatusCode.NonAuthoritativeInformation ||                      httpResponse.StatusCode == HttpStatusCode.PartialContent)                  {                      if (isBase64)                      {                          Stream = new BufferedStream(new CryptoStream(httpResponse.GetResponseStream()' new FromBase64Transform()' CryptoStreamMode.Read)' 64 * 1024);                      }                      else                      {                            Stream = new BufferedStream(httpResponse.GetResponseStream()' 64 * 1024);                      }                  }                  else                  {                      try { httpResponse.Close(); }                      catch (Exception) { }                  }
Magic Number,DotCMIS.Binding.Impl,Response,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Response,The following statement contains a magic number: if (httpResponse.StatusCode == HttpStatusCode.OK ||                      httpResponse.StatusCode == HttpStatusCode.Created ||                      httpResponse.StatusCode == HttpStatusCode.NonAuthoritativeInformation ||                      httpResponse.StatusCode == HttpStatusCode.PartialContent)                  {                      if (isBase64)                      {                          Stream = new BufferedStream(new CryptoStream(httpResponse.GetResponseStream()' new FromBase64Transform()' CryptoStreamMode.Read)' 64 * 1024);                      }                      else                      {                            Stream = new BufferedStream(httpResponse.GetResponseStream()' 64 * 1024);                      }                  }                  else                  {                      try { httpResponse.Close(); }                      catch (Exception) { }                  }
Magic Number,DotCMIS.Binding.Impl,Response,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,Response,The following statement contains a magic number: if (httpResponse.StatusCode == HttpStatusCode.OK ||                      httpResponse.StatusCode == HttpStatusCode.Created ||                      httpResponse.StatusCode == HttpStatusCode.NonAuthoritativeInformation ||                      httpResponse.StatusCode == HttpStatusCode.PartialContent)                  {                      if (isBase64)                      {                          Stream = new BufferedStream(new CryptoStream(httpResponse.GetResponseStream()' new FromBase64Transform()' CryptoStreamMode.Read)' 64 * 1024);                      }                      else                      {                            Stream = new BufferedStream(httpResponse.GetResponseStream()' 64 * 1024);                      }                  }                  else                  {                      try { httpResponse.Close(); }                      catch (Exception) { }                  }
Magic Number,DotCMIS.Binding.Impl,MimeHelper,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,EncodeRFC2231value,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)              {                  int ch = bytes[i] & 0xff;                  if (ch <= 32 || ch >= 127 || RFC2231Specials.IndexOf((char)ch) != -1)                  {                      buf.Append('%');                      buf.Append(HexDigits[ch >> 4]);                      buf.Append(HexDigits[ch & 0xf]);                      encoded = true;                  }                  else                  {                      buf.Append((char)ch);                  }              }
Magic Number,DotCMIS.Binding.Impl,MimeHelper,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,EncodeRFC2231value,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)              {                  int ch = bytes[i] & 0xff;                  if (ch <= 32 || ch >= 127 || RFC2231Specials.IndexOf((char)ch) != -1)                  {                      buf.Append('%');                      buf.Append(HexDigits[ch >> 4]);                      buf.Append(HexDigits[ch & 0xf]);                      encoded = true;                  }                  else                  {                      buf.Append((char)ch);                  }              }
Magic Number,DotCMIS.Binding.Impl,MimeHelper,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\http.cs,EncodeRFC2231value,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)              {                  int ch = bytes[i] & 0xff;                  if (ch <= 32 || ch >= 127 || RFC2231Specials.IndexOf((char)ch) != -1)                  {                      buf.Append('%');                      buf.Append(HexDigits[ch >> 4]);                      buf.Append(HexDigits[ch & 0xf]);                      encoded = true;                  }                  else                  {                      buf.Append((char)ch);                  }              }
Magic Number,DotCMIS.Binding.WebServices,PortProvider,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,InitServiceObject,The following statement contains a magic number: if (wcfBinding != null)              {                  binding = new CustomBinding(wcfBinding);              }              else              {                  long messageSize = session.GetValue(SessionParameter.MessageSize' 4 * 1024 * 1024);                    List<BindingElement> elements = new List<BindingElement>();                    SecurityBindingElement securityElement = SecurityBindingElement.CreateUserNameOverTransportBindingElement();                  securityElement.SecurityHeaderLayout = SecurityHeaderLayout.LaxTimestampFirst;                    string enableUnsecuredResponseFlag = session.GetValue(SessionParameter.WebServicesEnableUnsecuredResponse) as string;                  if (enableUnsecuredResponseFlag != null && enableUnsecuredResponseFlag.ToLower().Equals("true"))                  {                      PropertyInfo eur = securityElement.GetType().GetProperty("EnableUnsecuredResponse");                      if (eur != null)                      {                          eur.GetSetMethod().Invoke(securityElement' new object[] { true });                      }                  }                    elements.Add(securityElement);                    MtomMessageEncodingBindingElement mtomElement = new MtomMessageEncodingBindingElement();                  mtomElement.MessageVersion = MessageVersion.Soap11;                  mtomElement.MaxBufferSize = (messageSize > Int32.MaxValue ? Int32.MaxValue : (int)messageSize);                  elements.Add(mtomElement);                    HttpsTransportBindingElement transportElement = new HttpsTransportBindingElement();                  transportElement.MaxReceivedMessageSize = messageSize;                  transportElement.TransferMode = TransferMode.Streamed;                  transportElement.AllowCookies = true;                  elements.Add(transportElement);                    binding = new CustomBinding(elements);                    string openTimeOut = session.GetValue(SessionParameter.WebServicesOpenTimeout) as string;                  if (openTimeOut != null)                  {                      binding.OpenTimeout = TimeSpan.Parse(openTimeOut);                  }                    string closeTimeOut = session.GetValue(SessionParameter.WebServicesCloseTimeout) as string;                  if (closeTimeOut != null)                  {                      binding.CloseTimeout = TimeSpan.Parse(closeTimeOut);                  }                    string sendTimeOut = session.GetValue(SessionParameter.WebServicesSendTimeout) as string;                  if (sendTimeOut != null)                  {                      binding.SendTimeout = TimeSpan.Parse(sendTimeOut);                  }                    string receiveTimeOut = session.GetValue(SessionParameter.WebServicesReceiveTimeout) as string;                  if (receiveTimeOut != null)                  {                      binding.ReceiveTimeout = TimeSpan.Parse(receiveTimeOut);                  }              }
Magic Number,DotCMIS.Binding.WebServices,PortProvider,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,InitServiceObject,The following statement contains a magic number: if (wcfBinding != null)              {                  binding = new CustomBinding(wcfBinding);              }              else              {                  long messageSize = session.GetValue(SessionParameter.MessageSize' 4 * 1024 * 1024);                    List<BindingElement> elements = new List<BindingElement>();                    SecurityBindingElement securityElement = SecurityBindingElement.CreateUserNameOverTransportBindingElement();                  securityElement.SecurityHeaderLayout = SecurityHeaderLayout.LaxTimestampFirst;                    string enableUnsecuredResponseFlag = session.GetValue(SessionParameter.WebServicesEnableUnsecuredResponse) as string;                  if (enableUnsecuredResponseFlag != null && enableUnsecuredResponseFlag.ToLower().Equals("true"))                  {                      PropertyInfo eur = securityElement.GetType().GetProperty("EnableUnsecuredResponse");                      if (eur != null)                      {                          eur.GetSetMethod().Invoke(securityElement' new object[] { true });                      }                  }                    elements.Add(securityElement);                    MtomMessageEncodingBindingElement mtomElement = new MtomMessageEncodingBindingElement();                  mtomElement.MessageVersion = MessageVersion.Soap11;                  mtomElement.MaxBufferSize = (messageSize > Int32.MaxValue ? Int32.MaxValue : (int)messageSize);                  elements.Add(mtomElement);                    HttpsTransportBindingElement transportElement = new HttpsTransportBindingElement();                  transportElement.MaxReceivedMessageSize = messageSize;                  transportElement.TransferMode = TransferMode.Streamed;                  transportElement.AllowCookies = true;                  elements.Add(transportElement);                    binding = new CustomBinding(elements);                    string openTimeOut = session.GetValue(SessionParameter.WebServicesOpenTimeout) as string;                  if (openTimeOut != null)                  {                      binding.OpenTimeout = TimeSpan.Parse(openTimeOut);                  }                    string closeTimeOut = session.GetValue(SessionParameter.WebServicesCloseTimeout) as string;                  if (closeTimeOut != null)                  {                      binding.CloseTimeout = TimeSpan.Parse(closeTimeOut);                  }                    string sendTimeOut = session.GetValue(SessionParameter.WebServicesSendTimeout) as string;                  if (sendTimeOut != null)                  {                      binding.SendTimeout = TimeSpan.Parse(sendTimeOut);                  }                    string receiveTimeOut = session.GetValue(SessionParameter.WebServicesReceiveTimeout) as string;                  if (receiveTimeOut != null)                  {                      binding.ReceiveTimeout = TimeSpan.Parse(receiveTimeOut);                  }              }
Magic Number,DotCMIS.Binding.WebServices,PortProvider,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,InitServiceObject,The following statement contains a magic number: if (wcfBinding != null)              {                  binding = new CustomBinding(wcfBinding);              }              else              {                  long messageSize = session.GetValue(SessionParameter.MessageSize' 4 * 1024 * 1024);                    List<BindingElement> elements = new List<BindingElement>();                    SecurityBindingElement securityElement = SecurityBindingElement.CreateUserNameOverTransportBindingElement();                  securityElement.SecurityHeaderLayout = SecurityHeaderLayout.LaxTimestampFirst;                    string enableUnsecuredResponseFlag = session.GetValue(SessionParameter.WebServicesEnableUnsecuredResponse) as string;                  if (enableUnsecuredResponseFlag != null && enableUnsecuredResponseFlag.ToLower().Equals("true"))                  {                      PropertyInfo eur = securityElement.GetType().GetProperty("EnableUnsecuredResponse");                      if (eur != null)                      {                          eur.GetSetMethod().Invoke(securityElement' new object[] { true });                      }                  }                    elements.Add(securityElement);                    MtomMessageEncodingBindingElement mtomElement = new MtomMessageEncodingBindingElement();                  mtomElement.MessageVersion = MessageVersion.Soap11;                  mtomElement.MaxBufferSize = (messageSize > Int32.MaxValue ? Int32.MaxValue : (int)messageSize);                  elements.Add(mtomElement);                    HttpsTransportBindingElement transportElement = new HttpsTransportBindingElement();                  transportElement.MaxReceivedMessageSize = messageSize;                  transportElement.TransferMode = TransferMode.Streamed;                  transportElement.AllowCookies = true;                  elements.Add(transportElement);                    binding = new CustomBinding(elements);                    string openTimeOut = session.GetValue(SessionParameter.WebServicesOpenTimeout) as string;                  if (openTimeOut != null)                  {                      binding.OpenTimeout = TimeSpan.Parse(openTimeOut);                  }                    string closeTimeOut = session.GetValue(SessionParameter.WebServicesCloseTimeout) as string;                  if (closeTimeOut != null)                  {                      binding.CloseTimeout = TimeSpan.Parse(closeTimeOut);                  }                    string sendTimeOut = session.GetValue(SessionParameter.WebServicesSendTimeout) as string;                  if (sendTimeOut != null)                  {                      binding.SendTimeout = TimeSpan.Parse(sendTimeOut);                  }                    string receiveTimeOut = session.GetValue(SessionParameter.WebServicesReceiveTimeout) as string;                  if (receiveTimeOut != null)                  {                      binding.ReceiveTimeout = TimeSpan.Parse(receiveTimeOut);                  }              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl.Cache,CmisObjectCache,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-caches.cs,Initialize,The following statement contains a magic number: try              {                  // cache size                  cacheSize = 1000;                  try                  {                      string cacheSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizeObjects' out cacheSizeStr))                      {                          cacheSize = Int32.Parse(cacheSizeStr);                          if (cacheSize < 0)                          {                              cacheSize = 0;                          }                      }                  }                  catch (Exception) { }                    // cache time-to-live                  cacheTtl = 2 * 60 * 60 * 1000;                  try                  {                      string cacheTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLObjects' out cacheTtlStr))                      {                          cacheTtl = Int32.Parse(cacheTtlStr);                          if (cacheTtl < 0)                          {                              cacheTtl = 2 * 60 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    // path-to-id size                  pathToIdSize = 1000;                  try                  {                      string pathToIdSizeStr;                      if (parameters.TryGetValue(SessionParameter.CacheSizePathToId' out pathToIdSizeStr))                      {                          pathToIdSize = Int32.Parse(pathToIdSizeStr);                          if (pathToIdSize < 0)                          {                              pathToIdSize = 0;                          }                      }                  }                  catch (Exception) { }                    // path-to-id time-to-live                  pathToIdTtl = 30 * 60 * 1000;                  try                  {                      string pathToIdTtlStr;                      if (parameters.TryGetValue(SessionParameter.CacheTTLPathToId' out pathToIdTtlStr))                      {                          pathToIdTtl = Int32.Parse(pathToIdTtlStr);                          if (pathToIdTtl < 0)                          {                              pathToIdTtl = 30 * 60 * 1000;                          }                      }                  }                  catch (Exception) { }                    InitializeInternals();              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl,AbstractCmisObject,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,Initialize,The following statement contains a magic number: if (objectType.PropertyDefinitions == null || objectType.PropertyDefinitions.Count < 9)              {                  // there must be at least the 9 standard properties that all objects have                  throw new ArgumentException("Object type must have property defintions!");              }
Magic Number,DotCMIS.Client.Impl,AbstractCmisObject,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-objects.cs,RefreshIfOld,The following statement contains a magic number: try              {                  if (((DateTime.UtcNow - RefreshTimestamp).Ticks / 10000) > durationInMillis)                  {                      Refresh();                  }              }              finally              {                  Unlock();              }
Magic Number,DotCMIS.Client.Impl,OperationContext,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\client\client-utils.cs,OperationContext,The following statement contains a magic number: maxItemsPerPage = 100;
Missing Default,DotCMIS.Binding,Converter,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\converter.cs,Convert,The following switch statement is missing a default case: switch (property.PropertyType)              {                  case PropertyType.String:                      result = new cmisPropertyString();                      if (property.Values != null)                      {                          ((cmisPropertyString)result).value = new string[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              ((cmisPropertyString)result).value[i] = property.Values[i] as string;                          }                      }                      break;                  case PropertyType.Id:                      result = new cmisPropertyId();                      if (property.Values != null)                      {                          ((cmisPropertyId)result).value = new string[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              ((cmisPropertyId)result).value[i] = property.Values[i] as string;                          }                      }                      break;                  case PropertyType.Integer:                      result = new cmisPropertyInteger();                      if (property.Values != null)                      {                          ((cmisPropertyInteger)result).value = new string[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              long? value = property.Values[i] as long?;                              if (value.HasValue)                              {                                  ((cmisPropertyInteger)result).value[i] = value.ToString();                              }                          }                      }                      break;                  case PropertyType.Boolean:                      result = new cmisPropertyBoolean();                      if (property.Values != null)                      {                          ((cmisPropertyBoolean)result).value = new bool[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              bool? value = property.Values[i] as bool?;                              if (value.HasValue)                              {                                  ((cmisPropertyBoolean)result).value[i] = value.Value;                              }                          }                      }                      break;                  case PropertyType.DateTime:                      result = new cmisPropertyDateTime();                      if (property.Values != null)                      {                          ((cmisPropertyDateTime)result).value = new DateTime[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              DateTime? value = property.Values[i] as DateTime?;                              if (value.HasValue)                              {                                  ((cmisPropertyDateTime)result).value[i] = value.Value;                              }                          }                      }                      break;                  case PropertyType.Decimal:                      result = new cmisPropertyDecimal();                      if (property.Values != null)                      {                          ((cmisPropertyDecimal)result).value = new decimal[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              decimal? value = property.Values[i] as decimal?;                              if (value.HasValue)                              {                                  ((cmisPropertyDecimal)result).value[i] = value.Value;                              }                          }                      }                      break;                  case PropertyType.Html:                      result = new cmisPropertyHtml();                      if (property.Values != null)                      {                          ((cmisPropertyHtml)result).value = new string[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              ((cmisPropertyHtml)result).value[i] = property.Values[i] as string;                          }                      }                      break;                  case PropertyType.Uri:                      result = new cmisPropertyUri();                      if (property.Values != null)                      {                          ((cmisPropertyUri)result).value = new string[property.Values.Count];                          for (int i = 0; i < property.Values.Count; i++)                          {                              ((cmisPropertyUri)result).value[i] = property.Values[i] as string;                          }                      }                      break;              }
Missing Default,DotCMIS.Binding.WebServices,AbstractWebServicesService,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\binding\webservices\webservices.cs,ConvertException,The following switch statement is missing a default case: switch (fault.Detail.type)              {                  case enumServiceException.constraint:                      return new CmisConstraintException(msg' code);                  case enumServiceException.contentAlreadyExists:                      return new CmisContentAlreadyExistsException(msg' code);                  case enumServiceException.filterNotValid:                      return new CmisFilterNotValidException(msg' code);                  case enumServiceException.invalidArgument:                      return new CmisInvalidArgumentException(msg' code);                  case enumServiceException.nameConstraintViolation:                      return new CmisNameConstraintViolationException(msg' code);                  case enumServiceException.notSupported:                      return new CmisNotSupportedException(msg' code);                  case enumServiceException.objectNotFound:                      return new CmisObjectNotFoundException(msg' code);                  case enumServiceException.permissionDenied:                      return new CmisPermissionDeniedException(msg' code);                  case enumServiceException.runtime:                      return new CmisRuntimeException(msg' code);                  case enumServiceException.storage:                      return new CmisStorageException(msg' code);                  case enumServiceException.streamNotSupported:                      return new CmisStreamNotSupportedException(msg' code);                  case enumServiceException.updateConflict:                      return new CmisUpdateConflictException(msg' code);                  case enumServiceException.versioning:                      return new CmisVersioningException(msg' code);              }
Missing Default,DotCMIS.Data.Impl,PropertyData,C:\repos\aegif_CmisSync\Extras\chemistry-dotcmis-0.5-src\src\data\data-impl.cs,CheckValue,The following switch statement is missing a default case: switch (PropertyType)              {                  case PropertyType.String:                      if (!(value is string))                      {                          throw new ArgumentException("Property '" + Id + "' is a String property!");                      }                      break;                  case PropertyType.Id:                      if (!(value is string))                      {                          throw new ArgumentException("Property '" + Id + "' is an Id property!");                      }                      break;                  case PropertyType.Integer:                      if (!(value is sbyte || value is byte || value is short || value is ushort || value is int || value is uint || value is long))                      {                          throw new ArgumentException("Property '" + Id + "' is an Id property!");                      }                      break;                  case PropertyType.Boolean:                      if (!(value is bool))                      {                          throw new ArgumentException("Property '" + Id + "' is a Boolean property!");                      }                      break;                  case PropertyType.DateTime:                      if (!(value is DateTime))                      {                          throw new ArgumentException("Property '" + Id + "' is a DateTime property!");                      }                      break;                  case PropertyType.Decimal:                      if (!(value is decimal))                      {                          throw new ArgumentException("Property '" + Id + "' is a Decimal property!");                      }                      break;                  case PropertyType.Uri:                      if (!(value is string))                      {                          throw new ArgumentException("Property '" + Id + "' is a URI property!");                      }                      break;                  case PropertyType.Html:                      if (!(value is string))                      {                          throw new ArgumentException("Property '" + Id + "' is a HTML property!");                      }                      break;              }
