Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Simplify.WindowsServices,ServiceInstallerBase,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\ServiceInstallerBase.cs,ServiceInstallerBase,The method has 4 parameters.
Long Parameter List,Simplify.WindowsServices,ServiceInstallerBase,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\ServiceInstallerBase.cs,ServiceInstallerBase,The method has 6 parameters.
Long Parameter List,Simplify.WindowsServices,ServiceInstallerBase,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\ServiceInstallerBase.cs,Initialize,The method has 6 parameters.
Long Statement,Simplify.WindowsServices,ServiceInstallerBase,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\ServiceInstallerBase.cs,TryToLoadRunAsUserSettings,The length of the statement  "	var config = ConfigurationManager.OpenExeConfiguration (serviceAssembly.Location ?? Assembly.GetEntryAssembly ().Location); " is 123.
Long Statement,Simplify.WindowsServices,ServiceInstallerBase,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\ServiceInstallerBase.cs,TryToLoadRunAsUserSettings,The length of the statement  "	foreach (var item in configSectionElement.XPathSelectElements ("add").Where (item => item.Attribute (XName.Get ("key")) != null)) { " is 131.
Long Statement,Simplify.WindowsServices.Jobs.Crontab,CrontabProcessor,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\Crontab\CrontabProcessor.cs,IsMatching,The length of the statement  "	return NextOccurrences.Any (occurrence => time.Year == occurrence.Year && time.Month == occurrence.Month && time.Day == occurrence.Day && time.Hour == occurrence.Hour && time.Minute == occurrence.Minute); " is 204.
Long Statement,Simplify.WindowsServices.Jobs,ServiceJobFactory,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\ServiceJobFactory.cs,CreateCrontabServiceJob,The length of the statement  "	return new CrontabServiceJob<T> (new ServiceJobSettings (configurationSectionName)' new CrontabProcessorFactory ()' invokeMethodName); " is 134.
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: if (!string.IsNullOrEmpty (Settings.CrontabExpression)) {  	CrontabProcessor = _crontabProcessorFactory.Create (Settings.CrontabExpression);  	CrontabProcessor.CalculateNextOccurrences ();  	_timer = new Timer (OnCronTimerTick' this' 1000' 60000);  } else  	_timer = new Timer (OnStartWork' this' 1000' Settings.ProcessingInterval * 1000);  
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: if (!string.IsNullOrEmpty (Settings.CrontabExpression)) {  	CrontabProcessor = _crontabProcessorFactory.Create (Settings.CrontabExpression);  	CrontabProcessor.CalculateNextOccurrences ();  	_timer = new Timer (OnCronTimerTick' this' 1000' 60000);  } else  	_timer = new Timer (OnStartWork' this' 1000' Settings.ProcessingInterval * 1000);  
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: if (!string.IsNullOrEmpty (Settings.CrontabExpression)) {  	CrontabProcessor = _crontabProcessorFactory.Create (Settings.CrontabExpression);  	CrontabProcessor.CalculateNextOccurrences ();  	_timer = new Timer (OnCronTimerTick' this' 1000' 60000);  } else  	_timer = new Timer (OnStartWork' this' 1000' Settings.ProcessingInterval * 1000);  
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: if (!string.IsNullOrEmpty (Settings.CrontabExpression)) {  	CrontabProcessor = _crontabProcessorFactory.Create (Settings.CrontabExpression);  	CrontabProcessor.CalculateNextOccurrences ();  	_timer = new Timer (OnCronTimerTick' this' 1000' 60000);  } else  	_timer = new Timer (OnStartWork' this' 1000' Settings.ProcessingInterval * 1000);  
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: _timer = new Timer (OnCronTimerTick' this' 1000' 60000);  
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: _timer = new Timer (OnCronTimerTick' this' 1000' 60000);  
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: _timer = new Timer (OnStartWork' this' 1000' Settings.ProcessingInterval * 1000);  
Magic Number,Simplify.WindowsServices.Jobs,CrontabServiceJob,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\CrontabServiceJob.cs,Start,The following statement contains a magic number: _timer = new Timer (OnStartWork' this' 1000' Settings.ProcessingInterval * 1000);  
Magic Number,Simplify.WindowsServices.Jobs,ServiceJobSettings,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\Jobs\ServiceJobSettings.cs,ServiceJobSettings,The following statement contains a magic number: ProcessingInterval = 60;  
Missing Default,Simplify.WindowsServices.CommandLine,CommandLineProcessor,D:\newReposJune17\i4004_Simplify\src\Simplify.WindowsServices\CommandLine\CommandLineProcessor.cs,ProcessCommandLineArguments,The following switch statement is missing a default case: switch (action) {  case CommandLineAction.InstallService:  	InstallationController.InstallService ();  	return ProcessCommandLineResult.CommandLineActionExecuted;  case CommandLineAction.UninstallService:  	InstallationController.UninstallService ();  	return ProcessCommandLineResult.CommandLineActionExecuted;  }  
