Implementation smell,Namespace,Class,File,Method,Description
Missing Default,Simplify.DI.Provider.CastleWindsor,CastleWindsorDIProvider,C:\repos\i4004_Simplify\src\Simplify.DI.Provider.CastleWindsor\CastleWindsorDIProvider.cs,Register,The following switch statement is missing a default case: switch (lifetimeType)  			{  				case LifetimeType.Transient:  					Container.Register(Component.For(serviceType).ImplementedBy(implementationType).LifestyleTransient());  					break;    				case LifetimeType.Singleton:  					Container.Register(Component.For(serviceType).ImplementedBy(implementationType).LifestyleSingleton());  					break;    				case LifetimeType.PerLifetimeScope:  					Container.Register(Component.For(serviceType).ImplementedBy(implementationType).LifestyleScoped());  					break;  			}
Missing Default,Simplify.DI.Provider.CastleWindsor,CastleWindsorDIProvider,C:\repos\i4004_Simplify\src\Simplify.DI.Provider.CastleWindsor\CastleWindsorDIProvider.cs,Register,The following switch statement is missing a default case: switch (lifetimeType)  			{  				case LifetimeType.Transient:  					Container.Register(Component.For<TService>().UsingFactoryMethod(c => instanceCreator(this)).LifestyleTransient());  					break;    				case LifetimeType.Singleton:  					Container.Register(Component.For<TService>().UsingFactoryMethod(c => instanceCreator(this)).LifestyleSingleton());  					break;    				case LifetimeType.PerLifetimeScope:  					Container.Register(Component.For<TService>().UsingFactoryMethod(c => instanceCreator(this)).LifestyleScoped());  					break;  			}
