Implementation smell,Namespace,Class,File,Method,Description
Missing Default,Simplify.DI.Provider.Microsoft.Extensions.DependencyInjection,MicrosoftDependencyInjectionDIProvider,D:\research\architectureSmells\repos\i4004_Simplify\src\Simplify.DI.Provider.Microsoft.Extensions.DependencyInjection\MicrosoftDependencyInjectionDIProvider.cs,Register,The following switch statement is missing a default case: switch (lifetimeType)  			{  				case LifetimeType.PerLifetimeScope:  					Services.AddScoped(serviceType' implementationType);  					break;    				case LifetimeType.Singleton:  					Services.AddSingleton(serviceType' implementationType);  					break;    				case LifetimeType.Transient:  					Services.AddTransient(serviceType' implementationType);  					break;  			}
Missing Default,Simplify.DI.Provider.Microsoft.Extensions.DependencyInjection,MicrosoftDependencyInjectionDIProvider,D:\research\architectureSmells\repos\i4004_Simplify\src\Simplify.DI.Provider.Microsoft.Extensions.DependencyInjection\MicrosoftDependencyInjectionDIProvider.cs,Register,The following switch statement is missing a default case: switch (lifetimeType)  			{  				case LifetimeType.PerLifetimeScope:  					Services.AddScoped(serviceType' c => instanceCreator(new MicrosoftDependencyInjectionDIResolver(c)));  					break;    				case LifetimeType.Singleton:  					Services.AddSingleton(serviceType' c => instanceCreator(new MicrosoftDependencyInjectionDIResolver(c)));  					break;    				case LifetimeType.Transient:  					Services.AddTransient(serviceType' c => instanceCreator(new MicrosoftDependencyInjectionDIResolver(c)));  					break;  			}
