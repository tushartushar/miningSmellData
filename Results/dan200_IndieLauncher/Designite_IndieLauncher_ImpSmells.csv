Implementation smell,Namespace,Class,File,Method,Description
Long Method,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,Start,The method has 185 lines of code.
Complex Method,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,Download,Cyclomatic complexity of the method is 13
Complex Method,Dan200.Launcher.RSS,RSSFile,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\RSS\RSSFile.cs,RSSFile,Cyclomatic complexity of the method is 10
Long Parameter List,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,GetLatestVersionInfo,The method has 7 parameters. Parameters: rssFile' gameTitle' o_gameVersion' o_gameDescription' o_versionDownloadURL' o_versionDescription' o_versionIsNewest
Long Parameter List,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,GetSpecificVersionInfo,The method has 7 parameters. Parameters: rssFile' gameTitle' gameVersion' o_gameDescription' o_versionDownloadURL' o_versionDescription' o_versionIsNewest
Long Parameter List,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,GetEmbeddedGameInfo,The method has 5 parameters. Parameters: o_gameTitle' o_gameVersion' o_gameURL' o_username' o_password
Long Parameter List,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,DownloadGame,The method has 9 parameters. Parameters: gameTitle' gameVersion' url' username' password' listener' cancelObject' o_authFailure' o_customMessage
Long Statement,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,GetEmbeddedGameVersion,The length of the statement  "            if( GetEmbeddedGameInfo( out embeddedGameTitle' out embeddedGameVersion' out embeddedGameURL' out embeddedUsername' out embeddedPassword ) ) " is 140.
Long Statement,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,ExtractEmbeddedGame,The length of the statement  "            if( GetEmbeddedGameInfo( out gameTitle' out gameVersion' out gameURL' out username' out password ) && gameVersion != null ) " is 123.
Long Statement,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,DownloadGame,The length of the statement  "                    using( var stream = new ProgressStream( response.GetResponseStream()' response.ContentLength' listener' cancelObject ) ) " is 120.
Long Statement,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,Download,The length of the statement  "                if( Installer.GetEmbeddedGameInfo( out embeddedGameTitle' out embeddedGameVersion' out embeddedGameURL' out embeddedUsername' out embeddedPassword ) ) " is 150.
Long Statement,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,GetSpecificDownloadURL,The length of the statement  "            if( !Installer.GetSpecificVersionInfo( rssFile' m_gameTitle' gameVersion' out gameDescription' out o_downloadURL' out updateDescription' out o_isNewest ) ) " is 155.
Long Statement,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,GetLatestDownloadURL,The length of the statement  "            if( !Installer.GetLatestVersionInfo( rssFile' m_gameTitle' out o_gameVersion' out gameDescription' out o_downloadURL' out updateDescription' out gameVersionIsNewest ) ) " is 168.
Long Statement,Dan200.Launcher.RSS,RSSFile,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\RSS\RSSFile.cs,Download,The length of the statement  "                    using( var stream = new ProgressStream( response.GetResponseStream()' response.ContentLength' listener' cancelObject ) ) " is 120.
Long Statement,Dan200.Launcher.Interface.GTK,GTKInterface,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\GTKInterface.cs,Run,The length of the statement  "            if( Installer.GetEmbeddedGameInfo( out embeddedGameTitle' out embeddedGameVersion' out embeddedGameURL' out embeddedUsername' out embeddedPassword ) ) " is 150.
Long Statement,Dan200.Launcher.Interface.WinForms,WinFormsInterface,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\WinFormsInterface.cs,Run,The length of the statement  "            if( Installer.GetEmbeddedGameInfo( out embeddedGameTitle' out embeddedGameVersion' out embeddedGameURL' out embeddedUsername' out embeddedPassword ) ) " is 150.
Complex Conditional,Dan200.Launcher.Interface.GTK,UpdateWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\UpdateWindow.cs,OnDeleteEvent,The conditional expression  "stage == GameUpdateStage.NotStarted ||                  stage == GameUpdateStage.Finished ||                  stage == GameUpdateStage.Cancelled ||                  stage == GameUpdateStage.Failed"  is complex.
Complex Conditional,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,OnProgressChanged,The conditional expression  "stage == GameUpdateStage.NotStarted ||                      stage == GameUpdateStage.Finished ||                      stage == GameUpdateStage.Cancelled ||                      stage == GameUpdateStage.Failed"  is complex.
Complex Conditional,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,OnClosing,The conditional expression  "stage == GameUpdateStage.NotStarted ||                  stage == GameUpdateStage.Finished ||                  stage == GameUpdateStage.Cancelled ||                  stage == GameUpdateStage.Failed"  is complex.
Magic Number,Dan200.Launcher.Main,Program,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Program.cs,DeterminePlatform,The following statement contains a magic number: switch( Environment.OSVersion.Platform )              {                  case PlatformID.Win32NT:                  case PlatformID.Win32S:                  case PlatformID.Win32Windows:                  case PlatformID.WinCE:                  {                      return Platform.Windows;                  }                  case PlatformID.MacOSX:                  {                      return Platform.OSX;                  }                  case PlatformID.Unix:                  {                      IntPtr buffer = IntPtr.Zero;                      try                      {                           buffer = Marshal.AllocHGlobal( 8192 );                           if( uname( buffer ) == 0 )                          {                               string os = Marshal.PtrToStringAnsi( buffer );                              if( os == "Darwin" )                              {                                  return Platform.OSX;                              }                              else if( os == "Linux" )                              {                                  return Platform.Linux;                              }                          }                          return Platform.Unknown;                      }                      catch( Exception )                      {                          return Platform.Unknown;                      }                      finally                      {                          if( buffer != IntPtr.Zero )                          {                              Marshal.FreeHGlobal( buffer );                          }                      }                  }                  default:                  {                      return Platform.Unknown;                  }              }
Magic Number,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,DownloadGame,The following statement contains a magic number: try              {                  var request = HttpWebRequest.Create( url );                  request.Timeout = 15000;                  if( username != null && password != null )                  {                      request.Credentials = new NetworkCredential( username' password );                  }                  using( var response = request.GetResponse() )                  {                      // Read the message                      o_customMessage = response.Headers.Get( "X-IndieLauncher-Message" );                      if( o_customMessage != null )                      {                          Logger.Log( "URL returned message: {0}"' o_customMessage );                      }                        // Read the content                      using( var stream = new ProgressStream( response.GetResponseStream()' response.ContentLength' listener' cancelObject ) )                      {                          try                          {                              // Delete old download                              if( File.Exists( downloadPath ) )                              {                                  File.Delete( downloadPath );                              }                                // Create new download                              Directory.CreateDirectory( Path.GetDirectoryName( downloadPath ) );                              using( var output = File.OpenWrite( downloadPath ) )                              {                                  try                                  {                                      stream.CopyTo( output );                                  }                                  finally                                  {                                      output.Close();                                  }                              }                          }                          finally                          {                              stream.Close();                          }                      }                  }                  o_authFailure = false;                  return true;              }              catch( Exception e )              {                  Logger.Log( "Caught Exception: {0}"' e.ToString() );                  if( File.Exists( downloadPath ) )                  {                      File.Delete( downloadPath );                  }                  if( e is WebException )                  {                      WebException we = (WebException)e;                      if( we.Response != null )                      {                          o_customMessage = we.Response.Headers.Get( "X-IndieLauncher-Message" );                          if( o_customMessage != null )                          {                              Logger.Log( "URL returned message: {0}"' o_customMessage );                          }                          if( ((HttpWebResponse)we.Response).StatusCode == HttpStatusCode.Unauthorized )                          {                              o_authFailure = true;                              Logger.Log( "URL returned HTTP Unauthorized" );                          }                          else                          {                              o_authFailure = false;                          }                      }                      else                      {                          o_customMessage = null;                          o_authFailure = false;                      }                  }                  else                  {                      o_customMessage = null;                      o_authFailure = false;                  }                  return false;              }
Magic Number,Dan200.Launcher.Main,Installer,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Installer.cs,InstallGame,The following statement contains a magic number: if( File.Exists( downloadPath ) )              {                  Logger.Log( "Installing game ({0} {1})"' gameTitle' gameVersion );                  try                  {                      using( var zipFile = new ZipFile( downloadPath ) )                      {                          // Delete old install                          if( Directory.Exists( installPath ) )                          {                              Directory.Delete( installPath' true );                          }                          Directory.CreateDirectory( installPath );                            // Extract new install                          int totalFiles = zipFile.Entries.Count;                          int filesInstalled = 0;                          int lastProgress = 0;                          listener.Invoke( 0 );                          foreach( var entry in zipFile.Entries )                          {                              // Extract the file                              var entryInstallPath = Path.Combine( installPath' entry.FileName );                              if( entry.IsDirectory )                              {                                  Directory.CreateDirectory( entryInstallPath );                              }                              else                              {                                  Directory.CreateDirectory( Path.GetDirectoryName( entryInstallPath ) );                                  using( var file = File.OpenWrite( entryInstallPath ) )                                  {                                      try                                      {                                          using( var reader = new ProgressStream( entry.OpenReader()' -1' delegate {                                              // TODO: Emit progress during installation of large individual files?                                          }' cancelObject ) )                                          {                                              try                                              {                                                  reader.CopyTo( file );                                                  try                                                  {                                                      if( Program.Platform == Platform.Linux ||                                                           Program.Platform == Platform.OSX )                                                      {                                                          MakeFileExecutable( entryInstallPath );                                                      }                                                  }                                                  catch( Exception e )                                                  {                                                      Logger.Log( "Caught Exception: {0}"' e.ToString() );                                                      Logger.Log( "Failed to set file permissions on {0}"' entryInstallPath );                                                  }                                              }                                              finally                                              {                                                  reader.Close();                                              }                                          }                                      }                                      finally                                      {                                          file.Close();                                      }                                  }                              }                                // Check for cancellation                              if( cancelObject.Cancelled )                              {                                  throw new IOCancelledException();                              }                                // Notify the progress listener                              filesInstalled++;                              int progress = (filesInstalled * 100) / totalFiles;                              if( progress != lastProgress )                              {                                  listener.Invoke( progress );                                  lastProgress = progress;                              }                          }                      }                      return true;                  }                  catch( Exception e )                  {                      Logger.Log( "Caught Exception: {0}"' e.ToString() );                      if( Directory.Exists( installPath ) )                      {                          Directory.Delete( installPath' true );                      }                      return false;                  }              }
Magic Number,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,Extract,The following statement contains a magic number: if( !Installer.IsGameDownloaded( m_gameTitle' embeddedGameVersion ) )              {                  Stage = GameUpdateStage.ExtractingUpdate;                  if( !Installer.ExtractEmbeddedGame( delegate( int progress ) {                      StageProgress = (double)progress / 100.0;                  }' this ) )                  {                      return false;                  }                  if( Cancelled )                  {                      return false;                  }                  StageProgress = 1.0;              }
Magic Number,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,Download,The following statement contains a magic number: if( !Installer.IsGameDownloaded( m_gameTitle' gameVersion ) )              {                  Stage = GameUpdateStage.DownloadingUpdate;                    string embeddedGameTitle' embeddedGameVersion' embeddedGameURL' embeddedUsername' embeddedPassword;                  if( Installer.GetEmbeddedGameInfo( out embeddedGameTitle' out embeddedGameVersion' out embeddedGameURL' out embeddedUsername' out embeddedPassword ) )                  {                      if( username == null )                      {                          username = embeddedUsername;                      }                      if( password == null )                      {                          password = embeddedPassword;                      }                  }                    bool authFailure;                  string customMessage;                  if( !Installer.DownloadGame(                      m_gameTitle' gameVersion'                      downloadURL'                       username'                      password'                      delegate( int progress ) {                          StageProgress = (double)progress / 100.0;                      }'                      this'                      out authFailure'                      out customMessage                  ) )                  {                      if( Cancelled )                      {                          return false;                      }                      if( customMessage != null && !ShowCustomMessagePrompt( customMessage ) )                      {                          return false;                      }                      if( authFailure )                      {                          if( embeddedUsername == null && embeddedPassword == null )                          {                              if( ShowUsernameAndPasswordPrompt( ref username' ref password ) )                              {                                  return Download( gameVersion' downloadURL' username' password );                              }                          }                          else if( embeddedUsername == null )                          {                              if( ShowUsernamePrompt( ref username ) )                              {                                  return Download( gameVersion' downloadURL' username' embeddedPassword );                              }                          }                          else if( embeddedPassword == null )                          {                              if( ShowPasswordPrompt( ref password ) )                              {                                  return Download( gameVersion' downloadURL' embeddedUsername' password );                              }                          }                      }                      return false;                  }                  if( Cancelled )                  {                      return false;                  }                  if( customMessage != null && !ShowCustomMessagePrompt( customMessage ) )                  {                      return false;                  }                  StageProgress = 1.0;              }
Magic Number,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,Install,The following statement contains a magic number: if( !Installer.IsGameInstalled( m_gameTitle' gameVersion ) )              {                  Stage = GameUpdateStage.InstallingUpdate;                  if( !Installer.InstallGame( m_gameTitle' gameVersion' delegate( int progress ) {                      StageProgress = (double)progress / 100.0;                  }' this ) )                  {                      return false;                  }                  if( Cancelled )                  {                      return false;                  }                  StageProgress = 1.0;              }
Magic Number,Dan200.Launcher.Main,GameUpdater,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\GameUpdater.cs,DownloadRSSFile,The following statement contains a magic number: var rssFile = RSSFile.Download( m_optionalUpdateURL' delegate(int percentage) {                  StageProgress = (double)percentage / 100.0;              }' this );
Magic Number,Dan200.Launcher.Main,Logger,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Main\Logger.cs,Save,The following statement contains a magic number: try              {                  // Build the path                  logPath = Installer.GetBasePath();                  logPath = Path.Combine( logPath' "Logs" );                  logPath = Path.Combine( logPath' DateTime.Now.ToString( "s" ).Replace( ":"' "-" ) + ".txt" );                    // Prepare the directory                  var logDirectory = Path.GetDirectoryName( logPath );                  if( !Directory.Exists( logDirectory ) )                  {                      // Create the log file directory                      Directory.CreateDirectory( logDirectory );                  }                  else                  {                      // Delete old log files from the directory                      var directoryInfo = new DirectoryInfo( logDirectory );                      var oldFiles = directoryInfo.EnumerateFiles()                          .Where( file => file.Extension == ".txt" )                          .OrderByDescending( file => file.CreationTime )                          .Skip( 4 );                      foreach( var file in oldFiles.ToList() )                      {                          file.Delete();                      }                  }              }              catch( Exception )              {                  logPath = "Log.txt";              }
Magic Number,Dan200.Launcher.RSS,RSSFile,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\RSS\RSSFile.cs,Download,The following statement contains a magic number: try              {                  Logger.Log( "Downloading RSS file from {0}"' url );                  var request = HttpWebRequest.Create( url );                  request.Timeout = 15000;                  using( var response = request.GetResponse() )                  {                      using( var stream = new ProgressStream( response.GetResponseStream()' response.ContentLength' listener' cancelObject ) )                      {                          try                          {                              return new RSSFile( stream );                          }                          finally                          {                              stream.Close();                          }                      }                  }              }              catch( Exception e )              {                  Logger.Log( "Caught exception: {0}"' e.ToString() );                  return null;              }
Magic Number,Dan200.Launcher.Util,KeyValuePairs,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Util\KeyValuePairs.cs,Load,The following statement contains a magic number: while( (line = reader.ReadLine()) != null )              {                  int commentIndex;                  if( line.StartsWith( "//" ) )                  {                      commentIndex = 0;                  }                  else                  {                      commentIndex = line.IndexOf( " //" );                      commentIndex = (commentIndex >= 0) ? (commentIndex + 1) : -1;                  }                  if( commentIndex >= 0 )                  {                      if( m_pairs.Count == 0 && Comment == null )                      {                          Comment = line.Substring( commentIndex + 2 ).Trim();                      }                      line = line.Substring( 0' commentIndex );                  }                    int equalsIndex = line.IndexOf( '=' );                  if( equalsIndex >= 0 )                  {                      string key = line.Substring( 0' equalsIndex ).Trim();                      string value = line.Substring( equalsIndex + 1 ).Trim();                      if( value.Length > 0 )                      {                          Set( key' value );                      }                  }              }
Magic Number,Dan200.Launcher.Util,ProgressStream,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Util\ProgressStream.cs,EmitProgress,The following statement contains a magic number: if( length > 0 )              {                  int percentage = Math.Min( (int)((m_position * 100) / length)' 100 );                   if( percentage != m_lastProgress )                  {                      m_listener.Invoke( percentage );                      m_lastProgress = percentage;                  }              }
Magic Number,Dan200.Launcher.Util,ProgressStream,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Util\ProgressStream.cs,EmitProgress,The following statement contains a magic number: if( length > 0 )              {                  int percentage = Math.Min( (int)((m_position * 100) / length)' 100 );                   if( percentage != m_lastProgress )                  {                      m_listener.Invoke( percentage );                      m_lastProgress = percentage;                  }              }
Magic Number,Dan200.Launcher.Util,Language,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Util\Language.cs,LoadAll,The following statement contains a magic number: foreach( string resource in currentAssembly.GetManifestResourceNames() )              {                  if( resource.StartsWith( "Resources.Languages." ) )                  {                      string fileName = resource.Substring( "Resources.Languages.".Length );                      if( fileName.EndsWith( ".lang" ) )                      {                          var kvp = new KeyValuePairs();                          kvp.Load( currentAssembly.GetManifestResourceStream( resource ) );                            string code = fileName.Substring( 0' fileName.Length - 5 );                          s_languages.Add( code' new Language( code' kvp ) );                      }                  }              }
Magic Number,Dan200.Launcher.Interface.GTK,UpdateWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\UpdateWindow.cs,OnProgressChanged,The following statement contains a magic number: Application.Invoke( delegate              {                  int percentage = (int)(progress * 100.0);                  m_progressBar.Text = string.Format( "{0}%"' percentage );                  m_progressBar.Fraction = progress;              } );
Magic Number,Dan200.Launcher.Interface.GTK,UpdateWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\UpdateWindow.cs,Build,The following statement contains a magic number: this.BorderWidth = 6;
Magic Number,Dan200.Launcher.Interface.GTK,UpdateWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\UpdateWindow.cs,Build,The following statement contains a magic number: var vbox = new VBox( false' 4 );
Magic Number,Dan200.Launcher.Interface.GTK,UpdateWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\UpdateWindow.cs,Build,The following statement contains a magic number: this.SetDefaultSize( 300' 100 );
Magic Number,Dan200.Launcher.Interface.GTK,UpdateWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\UpdateWindow.cs,Build,The following statement contains a magic number: this.SetDefaultSize( 300' 100 );
Magic Number,Dan200.Launcher.Interface.GTK,UpdateWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\UpdateWindow.cs,Build,The following statement contains a magic number: this.SetSizeRequest( 300' -1 );
Magic Number,Dan200.Launcher.Interface.GTK,GameListWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\GameListWindow.cs,Build,The following statement contains a magic number: this.BorderWidth = 6;
Magic Number,Dan200.Launcher.Interface.GTK,GameListWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\GameListWindow.cs,Build,The following statement contains a magic number: var vbox = new VBox( false' 4 );
Magic Number,Dan200.Launcher.Interface.GTK,GameListWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\GameListWindow.cs,Build,The following statement contains a magic number: this.SetDefaultSize( 300' 100 );
Magic Number,Dan200.Launcher.Interface.GTK,GameListWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\GameListWindow.cs,Build,The following statement contains a magic number: this.SetDefaultSize( 300' 100 );
Magic Number,Dan200.Launcher.Interface.GTK,GameListWindow,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\GameListWindow.cs,Build,The following statement contains a magic number: this.SetSizeRequest( 300' -1 );
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: var vbox = new VBox( true' 4 );
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: vbox.BorderWidth = 4;
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: if( username != null )              {                  var hbox = new HBox( false' 6 );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.Xalign = 0.0f;                  label.WidthRequest = 70;                  hbox.PackStart( label' false' false' 0 );                    m_usernameEntry = new Entry();                  m_usernameEntry.Text = username;                  hbox.PackStart( m_usernameEntry' true' true' 0 );                    vbox.PackStart( hbox' false' false' 0 );              }
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: if( username != null )              {                  var hbox = new HBox( false' 6 );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.Xalign = 0.0f;                  label.WidthRequest = 70;                  hbox.PackStart( label' false' false' 0 );                    m_usernameEntry = new Entry();                  m_usernameEntry.Text = username;                  hbox.PackStart( m_usernameEntry' true' true' 0 );                    vbox.PackStart( hbox' false' false' 0 );              }
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: if( password != null )              {                  var hbox = new HBox( false' 6 );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.Xalign = 0.0f;                  label.WidthRequest = 70;                  hbox.PackStart( label' false' false' 0 );                    m_passwordEntry = new Entry();                  m_passwordEntry.Text = password;                  m_passwordEntry.Visibility = false;                  hbox.PackStart( m_passwordEntry' true' true' 0 );                    vbox.PackStart( hbox' false' false' 0 );              }
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: if( password != null )              {                  var hbox = new HBox( false' 6 );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.Xalign = 0.0f;                  label.WidthRequest = 70;                  hbox.PackStart( label' false' false' 0 );                    m_passwordEntry = new Entry();                  m_passwordEntry.Text = password;                  m_passwordEntry.Visibility = false;                  hbox.PackStart( m_passwordEntry' true' true' 0 );                    vbox.PackStart( hbox' false' false' 0 );              }
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: this.SetDefaultSize( 275' 50 );
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: this.SetDefaultSize( 275' 50 );
Magic Number,Dan200.Launcher.Interface.GTK,CredentialsDialog,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\GTK\CredentialsDialog.cs,Build,The following statement contains a magic number: this.SetSizeRequest( 275' -1 );
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,OnProgressChanged,The following statement contains a magic number: this.BeginInvoke( (Action)delegate              {                  int percentage = (int)(progress * 100.0);                  if( stage == GameUpdateStage.NotStarted ||                      stage == GameUpdateStage.Finished ||                      stage == GameUpdateStage.Cancelled ||                      stage == GameUpdateStage.Failed )                  {                      this.Text = stage.GetStatus( Program.Language );                  }                  else                  {                      this.Text = stage.GetStatus( Program.Language ) + " (" + percentage + "%)";                  }                  m_progressBar.Value = percentage;              } );
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,Build,The following statement contains a magic number: this.ClientSize = new Size( 350' 36 );
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,Build,The following statement contains a magic number: this.ClientSize = new Size( 350' 36 );
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,Build,The following statement contains a magic number: m_progressBar.Maximum = 100;
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,Build,The following statement contains a magic number: m_progressBar.Location = new Point( 6' 6 );
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,Build,The following statement contains a magic number: m_progressBar.Location = new Point( 6' 6 );
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,Build,The following statement contains a magic number: m_progressBar.Size = new Size( this.ClientSize.Width - 12' this.ClientSize.Height - 12 );
Magic Number,Dan200.Launcher.Interface.WinForms,UpdateForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\UpdateForm.cs,Build,The following statement contains a magic number: m_progressBar.Size = new Size( this.ClientSize.Width - 12' this.ClientSize.Height - 12 );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: this.ClientSize = new Size( 275' 100 );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: this.ClientSize = new Size( 275' 100 );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: int yPos = 6;
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( username != null )              {                  m_usernameBox = new TextBox();                  m_usernameBox.Text = username;                  m_usernameBox.Location = new Point( 6 + 75 + 6' yPos );                  m_usernameBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  this.Controls.Add( m_usernameBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.username" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_usernameBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_usernameBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: if( password != null )              {                  m_passwordBox = new TextBox();                  m_passwordBox.Text = password;                  m_passwordBox.Location = new Point( 6 + 75 + 6' yPos );                  m_passwordBox.Width = this.ClientSize.Width - (12 + 75 + 6);                  m_passwordBox.UseSystemPasswordChar = true;                  this.Controls.Add( m_passwordBox );                    var label = new Label();                  label.Text = Program.Language.Translate( "label.password" );                  label.TextAlign = ContentAlignment.MiddleLeft;                  label.Width = 75;                  label.Height = m_passwordBox.Height;                  label.Location = new Point( 6' yPos );                  this.Controls.Add( label );                    yPos += m_passwordBox.Height + 6;              }
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: okButton.Location = new Point( this.ClientSize.Width - 6 - 80 - 6 - 80' yPos );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: okButton.Location = new Point( this.ClientSize.Width - 6 - 80 - 6 - 80' yPos );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: okButton.Location = new Point( this.ClientSize.Width - 6 - 80 - 6 - 80' yPos );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: okButton.Location = new Point( this.ClientSize.Width - 6 - 80 - 6 - 80' yPos );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: okButton.Width = 80;
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: cancelButton.Location = new Point( this.ClientSize.Width - 6 - 80' yPos );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: cancelButton.Location = new Point( this.ClientSize.Width - 6 - 80' yPos );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: cancelButton.Width = 80;
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: this.ClientSize = new Size( 275' yPos + okButton.Height + 6 );
Magic Number,Dan200.Launcher.Interface.WinForms,CredentialsForm,C:\repos\dan200_IndieLauncher\IndieLauncher\Launcher\Interface\WinForms\CredentialsForm.cs,Build,The following statement contains a magic number: this.ClientSize = new Size( 275' yPos + okButton.Height + 6 );
