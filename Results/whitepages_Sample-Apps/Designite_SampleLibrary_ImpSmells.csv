Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,ReputationLevelAsString,Cyclomatic complexity of the method is 9
Long Statement,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The length of the statement  "				result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s"); " is 149.
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,ReputationLevelAsString,The following statement contains a magic number: switch (level) {  case null: {  	return "Unknown";  }  case 1: {  	return "Not Spam";  }  case 2:  case 3: {  	return "Moderate Risk";  }  default: {  	return "High Risk";  }  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,ReputationLevelAsString,The following statement contains a magic number: switch (level) {  case null: {  	return "Unknown";  }  case 1: {  	return "Not Spam";  }  case 2:  case 3: {  	return "Moderate Risk";  }  default: {  	return "High Risk";  }  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetDisplayDuration,The following statement contains a magic number: if (date != null) {  	var then = date.Value;  	var now = DateTime.Now;  	var diffYear = now.Year - then.Year;  	if (diffYear >= 2) {  		result = String.Format ("about {0} years"' diffYear);  	}  	else {  		var diffDuration = now - then;  		var approximateMonths = (int)(diffDuration.TotalDays / 30.0);  		result = String.Format ("{0} months"' approximateMonths);  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetDisplayDuration,The following statement contains a magic number: if (date != null) {  	var then = date.Value;  	var now = DateTime.Now;  	var diffYear = now.Year - then.Year;  	if (diffYear >= 2) {  		result = String.Format ("about {0} years"' diffYear);  	}  	else {  		var diffDuration = now - then;  		var approximateMonths = (int)(diffDuration.TotalDays / 30.0);  		result = String.Format ("{0} months"' approximateMonths);  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetDisplayDuration,The following statement contains a magic number: if (diffYear >= 2) {  	result = String.Format ("about {0} years"' diffYear);  }  else {  	var diffDuration = now - then;  	var approximateMonths = (int)(diffDuration.TotalDays / 30.0);  	result = String.Format ("{0} months"' approximateMonths);  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetDisplayDuration,The following statement contains a magic number: if (diffYear >= 2) {  	result = String.Format ("about {0} years"' diffYear);  }  else {  	var diffDuration = now - then;  	var approximateMonths = (int)(diffDuration.TotalDays / 30.0);  	result = String.Format ("{0} months"' approximateMonths);  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if (period != null) {  	var start = period.Start;  	var stop = period.Stop;  	if ((start != null) && (stop != null)) {  		var startDate = start.Value;  		var stopDate = stop.Value;  		var span = stopDate - startDate;  		var totalDays = span.TotalDays;  		var totalMonths = (int)(totalDays / 30.0);  		var totalYears = totalMonths / 12;  		if (totalMonths == 0) {  			result = "";  		}  		else if (totalYears > 0) {  			var remainingMonths = totalMonths % 12;  			result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  		}  		else {  			result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  		}  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if (period != null) {  	var start = period.Start;  	var stop = period.Stop;  	if ((start != null) && (stop != null)) {  		var startDate = start.Value;  		var stopDate = stop.Value;  		var span = stopDate - startDate;  		var totalDays = span.TotalDays;  		var totalMonths = (int)(totalDays / 30.0);  		var totalYears = totalMonths / 12;  		if (totalMonths == 0) {  			result = "";  		}  		else if (totalYears > 0) {  			var remainingMonths = totalMonths % 12;  			result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  		}  		else {  			result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  		}  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if (period != null) {  	var start = period.Start;  	var stop = period.Stop;  	if ((start != null) && (stop != null)) {  		var startDate = start.Value;  		var stopDate = stop.Value;  		var span = stopDate - startDate;  		var totalDays = span.TotalDays;  		var totalMonths = (int)(totalDays / 30.0);  		var totalYears = totalMonths / 12;  		if (totalMonths == 0) {  			result = "";  		}  		else if (totalYears > 0) {  			var remainingMonths = totalMonths % 12;  			result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  		}  		else {  			result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  		}  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if ((start != null) && (stop != null)) {  	var startDate = start.Value;  	var stopDate = stop.Value;  	var span = stopDate - startDate;  	var totalDays = span.TotalDays;  	var totalMonths = (int)(totalDays / 30.0);  	var totalYears = totalMonths / 12;  	if (totalMonths == 0) {  		result = "";  	}  	else if (totalYears > 0) {  		var remainingMonths = totalMonths % 12;  		result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  	}  	else {  		result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if ((start != null) && (stop != null)) {  	var startDate = start.Value;  	var stopDate = stop.Value;  	var span = stopDate - startDate;  	var totalDays = span.TotalDays;  	var totalMonths = (int)(totalDays / 30.0);  	var totalYears = totalMonths / 12;  	if (totalMonths == 0) {  		result = "";  	}  	else if (totalYears > 0) {  		var remainingMonths = totalMonths % 12;  		result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  	}  	else {  		result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if ((start != null) && (stop != null)) {  	var startDate = start.Value;  	var stopDate = stop.Value;  	var span = stopDate - startDate;  	var totalDays = span.TotalDays;  	var totalMonths = (int)(totalDays / 30.0);  	var totalYears = totalMonths / 12;  	if (totalMonths == 0) {  		result = "";  	}  	else if (totalYears > 0) {  		var remainingMonths = totalMonths % 12;  		result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  	}  	else {  		result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  	}  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if (totalMonths == 0) {  	result = "";  }  else if (totalYears > 0) {  	var remainingMonths = totalMonths % 12;  	result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  }  else {  	result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  }  
Magic Number,SampleLibrary,DemoUtils,C:\repos\whitepages_Sample-Apps\ASP.NET Sample Apps\aspnet_demo_apps\SampleLibrary\DemoUtils.cs,GetTimePeriodDisplay,The following statement contains a magic number: if (totalYears > 0) {  	var remainingMonths = totalMonths % 12;  	result = String.Format ("({0} year{1}' {2} month{3})"' totalYears' (totalYears == 1) ? "" : "s"' remainingMonths' (remainingMonths == 1) ? "" : "s");  }  else {  	result = String.Format ("({0} month{1})"' totalMonths' (totalMonths == 1) ? "" : "s");  }  
