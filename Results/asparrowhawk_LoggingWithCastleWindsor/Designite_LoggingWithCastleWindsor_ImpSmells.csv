Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,Format,Cyclomatic complexity of the method is 8
Long Parameter List,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,Format,The method has 6 parameters.
Long Parameter List,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,GetFormatter,The method has 7 parameters.
Long Statement,LoggingWithCastleWindsor.DataAccess,DataAccessInstaller,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\DataAccess\DataAccessInstaller.cs,Install,The length of the statement  "	container.Register (Classes.FromThisAssembly ().InNamespace ("LoggingWithCastleWindsor.DataAccess").WithService.DefaultInterfaces ()' Component.For<IEnumerable<Ticker>> ().UsingFactoryMethod (() => new[] { " is 205.
Long Statement,LoggingWithCastleWindsor.Infrastructure,Guard,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\Guard.cs,ArgumentNotNullOrEmptyStringOrWhiteSpace,The length of the statement  "		throw new ArgumentException (string.Format ("The provided String argument {0} must not consist only of white space."' argumentName)); " is 133.
Long Statement,LoggingWithCastleWindsor.Infrastructure,Guard,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\Guard.cs,EnumValueIsDefined,The length of the statement  "		throw new ArgumentException (string.Format ("The value of the argument {0} provided for the enumeration {1} is invalid."' argumentName' enumType)); " is 147.
Long Statement,LoggingWithCastleWindsor.Infrastructure,Guard,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\Guard.cs,TypeIsAssignableFromType,The length of the statement  "		throw new ArgumentException (string.Format ("The provided type {0} is not compatible with {1}."' assignee' providedType)' argumentName); " is 136.
Long Statement,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,Format,The length of the statement  "	if (type.IsPrimitive || type.IsEnum || type == typeof(string) || collection != null || type == typeof(DateTime) || type == typeof(TimeSpan)) { " is 142.
Long Statement,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,Format,The length of the statement  "		return collection != null ? string.Format (formatProvider' "{0}"' string.Format (CollectionType (type)' collection.Count)) : TryHandleOtherFormats (null' arg); " is 159.
Long Statement,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,Format,The length of the statement  "	var namesAndValues = propertyInfos.OrderBy (propertyInfo => propertyInfo.Name).Where (propertyInfo => propertyInfo.GetIndexParameters ().Length == 0)// Exclude indexer properties " is 178.
Long Statement,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,Format,The length of the statement  "	.Where (propertyInfo => propertyInfo.PropertyType != type)// Stop recursion i.e. classes with properties of the same type e.g. Composite Pattern or DateTime.Date " is 161.
Long Statement,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,GetFormatter,The length of the statement  "		return propertyInfo => string.Format (formatProvider' "{0}{1}'{2:P}'"' propertyInfo.Name' @equals' propertyInfo.GetValue (arg' null)); " is 134.
Long Statement,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,GetFormatter,The length of the statement  "	return format == "p" ? (Func<PropertyInfo' string>)(propertyInfo => string.Format (formatProvider' "'{0:P}'"' propertyInfo.GetValue (arg' null))) : (propertyInfo => string.Format (formatProvider' "'{0:N}'"' propertyInfo.Name)); " is 227.
Long Statement,LoggingWithCastleWindsor.Ioc,LoggingContext,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Ioc\LoggingContext.cs,AddAssemblyAttributes,The length of the statement  "		new Tuple<string' object> ("Company Name"' MatchAttribute<AssemblyCompanyAttribute> (attributes' attribute => attribute.Company))' " is 130.
Long Statement,LoggingWithCastleWindsor.Ioc,LoggingContext,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Ioc\LoggingContext.cs,AddAssemblyAttributes,The length of the statement  "		new Tuple<string' object> ("Product Name"' MatchAttribute<AssemblyProductAttribute> (attributes' attribute => attribute.Product))' " is 130.
Long Statement,LoggingWithCastleWindsor.Ioc,LoggingInstaller,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Ioc\LoggingInstaller.cs,Install,The length of the statement  "	container.Install (new InterceptorInstaller<LoggingInterceptor> ()' new InterceptorInstaller<ExceptionInterceptor> ()' new InterceptorInstaller<TimingInterceptor> ()' new InterceptorInstaller<ActivityInterceptor> ()); " is 217.
Long Statement,LoggingWithCastleWindsor.Ioc,ActivityInterceptor,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Ioc\LoggingInterceptor.cs,GetActivityOrDefault,The length of the statement  "	var activity = method.GetCustomAttributes (type).Concat (method.DeclaringType.GetCustomAttributes (type)).FirstOrDefault () as ActivityAttribute; " is 145.
Long Statement,LoggingWithCastleWindsor.Ioc,PerformanceCounterSnapshot,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Ioc\PerformanceCounterSnapshot.cs,CreatePerformanceCounter,The length of the statement  "	return (parts.Length > 2) ? new PerformanceCounter (parts [0]' parts [1]' parts [2]' true) : new PerformanceCounter (parts [0]' parts [1]' true); " is 145.
Long Statement,LoggingWithCastleWindsor.Presentation,PresentationInstaller,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Presentation\PresentationInstaller.cs,Install,The length of the statement  "	container.Register (Classes.FromThisAssembly ().InNamespace ("LoggingWithCastleWindsor.Presentation").WithService.DefaultInterfaces ()); " is 136.
Complex Conditional,LoggingWithCastleWindsor.Infrastructure,TypeAndPropertiesFormatter,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Infrastructure\TypeAndPropertiesFormatter.cs,Format,The conditional expression  "type.IsPrimitive || type.IsEnum || type == typeof(string) || collection != null || type == typeof(DateTime) || type == typeof(TimeSpan)"  is complex.
Magic Number,LoggingWithCastleWindsor.Ioc,PerformanceCounterSnapshot,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Ioc\PerformanceCounterSnapshot.cs,CreatePerformanceCounter,The following statement contains a magic number: return (parts.Length > 2) ? new PerformanceCounter (parts [0]' parts [1]' parts [2]' true) : new PerformanceCounter (parts [0]' parts [1]' true);  
Magic Number,LoggingWithCastleWindsor.Ioc,PerformanceCounterSnapshot,C:\repos\asparrowhawk_LoggingWithCastleWindsor\LoggingWithCastleWindsor\Ioc\PerformanceCounterSnapshot.cs,CreatePerformanceCounter,The following statement contains a magic number: return (parts.Length > 2) ? new PerformanceCounter (parts [0]' parts [1]' parts [2]' true) : new PerformanceCounter (parts [0]' parts [1]' true);  
