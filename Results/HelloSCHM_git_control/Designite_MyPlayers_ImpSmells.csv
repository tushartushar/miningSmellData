Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,Cyclomatic complexity of the method is 9
Complex Method,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,Cyclomatic complexity of the method is 15
Complex Method,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,comB_PlayMode_SelectedIndexChanged,Cyclomatic complexity of the method is 15
Complex Method,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,Cyclomatic complexity of the method is 33
Complex Method,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,Cyclomatic complexity of the method is 25
Complex Method,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,WndProc,Cyclomatic complexity of the method is 11
Complex Method,MyPlayers,Frm_ShowLyrics,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_ShowLyrics.cs,ReadLyricFile,Cyclomatic complexity of the method is 8
Complex Method,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,Cyclomatic complexity of the method is 10
Complex Method,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,ReadLyricForFile,Cyclomatic complexity of the method is 8
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_OpenStream,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_PlayLoop,The method has 7 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_SlideVolume,The method has 9 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_GetFFTData,The method has 9 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_DrawFFTGraphOnHDC,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_DrawFFTGraphOnHWND,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_LoadFileID3W,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,zplay_LoadFileID3ExW,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,OpenStream,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,PlayLoop,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,SlideVolume,The method has 8 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,GetFFTData,The method has 8 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,DrawFFTGraphOnHDC,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,DrawFFTGraphOnHWND,The method has 5 parameters.
Long Statement,MyPlayers,C_DownloadLyrForQQ,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\C_DownloadLyrForQQ.cs,DownloadLrc,The length of the statement  "	return RequestALink (string.Format (DownloadPath' DownLoadInfo.ServerID' EncodeHelper.CreateQianQianCode (DownLoadInfo.Singer' DownLoadInfo.MusicName' DownLoadInfo.ServerID))); " is 176.
Long Statement,MyPlayers,C_DownloadLyrForQQ,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\C_DownloadLyrForQQ.cs,SearchLrc,The length of the statement  "	string x = RequestALink (string.Format (SearchPath' EncodeHelper.ToQianQianHexString (singer' Encoding.Unicode)' EncodeHelper.ToQianQianHexString (title' Encoding.Unicode))); " is 174.
Long Statement,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,timer_PlayTime_Tick,The length of the statement  "		if (((iMusicTime.hms.minute == 0) && (iMusicTime.hms.second == 0) && (iMusicTime.hms.millisecond == 0)) || (iMusicTime.sec >= tBar_PlayTime.Maximum)) { " is 151.
Long Statement,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,Frm_DShowPlay_FormClosing,The length of the statement  "		aMusicPlayers.SlideVolume (TTimeFormat.tfSecond' ref istartpos' iVolumeleft' iVolumeright' TTimeFormat.tfSecond' ref iendpos' 0' 0); " is 132.
Long Statement,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SavaMusicFileList,The length of the statement  "		iSqlStrInsert.Append ("INSERT INTO [MusicFile]([ListID]'[FilePath]) VALUES(" + iListID + "''" + iRow [2].ToString () + "')"); " is 125.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "		iPaintGraphics.DrawString (aMsgStr' aLyricStrFont' aLyricStrBrush' new RectangleF (0' iThisHalfHeight' e.ClipRectangle.Width' (e.ClipRectangle.Height - iThisHalfHeight))' aLyricStrFormat); " is 188.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "	SizeF iLyricStr_Size = iPaintGraphics.MeasureString ((iNowLyricStr.LyricsStr == String.Empty ? "测试字符" : iNowLyricStr.LyricsStr)' aLyricStrFont); " is 144.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "			aLyricStrBrush.Color = aLyricList.Values [iTopIndex].GetBestOutColor (aColor_NowLyric' aColor_NormalLyric' aCurrentTimes); " is 122.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "			LinearGradientBrush iGradientBrush_Top = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical); " is 200.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "			iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' iGradientBrush_Top' iTopLyricStr_Rec' aLyricStrFormat); " is 138.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "			iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat); " is 134.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "			LinearGradientBrush iGradientBrush = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical); " is 196.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "			iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' iGradientBrush' iTopLyricStr_Rec' aLyricStrFormat); " is 137.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The length of the statement  "			iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat); " is 137.
Long Statement,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,ReadLyricForFile,The length of the statement  "				String iOffset = iLyrTime.Substring (iLyrTime.IndexOf (":") + 1' (iLyrTime.IndexOf ("]") - (iLyrTime.IndexOf (":") + 1))); " is 122.
Long Statement,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,PlayLoop,The length of the statement  "	return zplay_PlayLoop (objptr' System.Convert.ToInt32 ((int)(TimeFormatStart))' ref StartPosition' System.Convert.ToInt32 ((int)(TimeFormatEnd))' ref EndPosition' NumberOfCycles' continueplay) == 1; " is 198.
Long Statement,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,SlideVolume,The length of the statement  "	return zplay_SlideVolume (objptr' TimeFormatStart' ref TimeStart' StartVolumeLeft' StartVolumeRight' TimeFormatEnd' ref TimeEnd' EndVolumeLeft' EndVolumeRight) == 1; " is 165.
Long Statement,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,LoadFileID3,The length of the statement  "	if (zplay_LoadFileID3W (objptr' FileName' System.Convert.ToInt32 (Format)' System.Convert.ToInt32 ((int)(Id3Version))' ref tmp) == 1) { " is 135.
Long Statement,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,GetFFTData,The length of the statement  "	return zplay_GetFFTData (objptr' FFTPoints' System.Convert.ToInt32 ((int)(FFTWindow))' ref HarmonicNumber' HarmonicFreq' LeftAmplitude' RightAmplitude' LeftPhase' RightPhase) == 1; " is 180.
Complex Conditional,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,timer_PlayTime_Tick,The conditional expression  "((iMusicTime.hms.minute == 0) && (iMusicTime.hms.second == 0) && (iMusicTime.hms.millisecond == 0)) || (iMusicTime.sec >= tBar_PlayTime.Maximum)"  is complex.
Complex Conditional,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,ReadLyricForFile,The conditional expression  "iLyrTime.Contains ("ti") || iLyrTime.Contains ("ar") || iLyrTime.Contains ("al") || iLyrTime.Contains ("by")"  is complex.
Empty Catch Block,MyPlayers,C_DownloadLyrForQQ,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\C_DownloadLyrForQQ.cs,SearchLrc,The method has an empty catch block.
Empty Catch Block,MyPlayers,C_PlayInfo,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\C_PlayInfo.cs,Deserialize,The method has an empty catch block.
Empty Catch Block,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,CloseInterfaces,The method has an empty catch block.
Empty Catch Block,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,WndProc,The method has an empty catch block.
Empty Catch Block,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,ReadLyricForFile,The method has an empty catch block.
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,ToQianQianHexString,The following statement contains a magic number: foreach (byte b in bytes) {  	sb.Append (b.ToString ("X").PadLeft (2' '0'));  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,ToQianQianHexString,The following statement contains a magic number: sb.Append (b.ToString ("X").PadLeft (2' '0'));  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	song [i] = int.Parse (qqHexStr.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	song [i] = int.Parse (qqHexStr.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: song [i] = int.Parse (qqHexStr.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: song [i] = int.Parse (qqHexStr.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t1 = (lrcId & 0x0000FF00) >> 8;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: if ((lrcId & 0x00FF0000) == 0) {  	t3 = 0x000000FF & ~t1;  }  else {  	t3 = 0x000000FF & ((lrcId & 0x00FF0000) >> 16);  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t3 = 0x000000FF & ((lrcId & 0x00FF0000) >> 16);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t3 = t3 | ((0x000000FF & lrcId) << 8);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t3 = t3 << 8;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t3 = t3 << 8;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: if ((lrcId & 0xFF000000) == 0) {  	t3 = t3 | (0x000000FF & (~lrcId));  }  else {  	t3 = t3 | (0x000000FF & (lrcId >> 24));  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t3 = t3 | (0x000000FF & (lrcId >> 24));  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: while (j >= 0) {  	int c = song [j];  	if (c >= 0x80)  		c = c - 0x100;  	t1 = (int)((c + t2) & 0x00000000FFFFFFFF);  	t2 = (int)((t2 << (j % 2 + 4)) & 0x00000000FFFFFFFF);  	t2 = (int)((t1 + t2) & 0x00000000FFFFFFFF);  	j -= 1;  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: while (j >= 0) {  	int c = song [j];  	if (c >= 0x80)  		c = c - 0x100;  	t1 = (int)((c + t2) & 0x00000000FFFFFFFF);  	t2 = (int)((t2 << (j % 2 + 4)) & 0x00000000FFFFFFFF);  	t2 = (int)((t1 + t2) & 0x00000000FFFFFFFF);  	j -= 1;  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t2 = (int)((t2 << (j % 2 + 4)) & 0x00000000FFFFFFFF);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t2 = (int)((t2 << (j % 2 + 4)) & 0x00000000FFFFFFFF);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: while (j <= length - 1) {  	int c = song [j];  	if (c >= 128)  		c = c - 256;  	int t4 = (int)((c + t1) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 << (j % 2 + 3)) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 + t4) & 0x00000000FFFFFFFF);  	j += 1;  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: while (j <= length - 1) {  	int c = song [j];  	if (c >= 128)  		c = c - 256;  	int t4 = (int)((c + t1) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 << (j % 2 + 3)) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 + t4) & 0x00000000FFFFFFFF);  	j += 1;  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: while (j <= length - 1) {  	int c = song [j];  	if (c >= 128)  		c = c - 256;  	int t4 = (int)((c + t1) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 << (j % 2 + 3)) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 + t4) & 0x00000000FFFFFFFF);  	j += 1;  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: while (j <= length - 1) {  	int c = song [j];  	if (c >= 128)  		c = c - 256;  	int t4 = (int)((c + t1) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 << (j % 2 + 3)) & 0x00000000FFFFFFFF);  	t1 = (int)((t1 + t4) & 0x00000000FFFFFFFF);  	j += 1;  }  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: if (c >= 128)  	c = c - 256;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: if (c >= 128)  	c = c - 256;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: c = c - 256;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t1 = (int)((t1 << (j % 2 + 3)) & 0x00000000FFFFFFFF);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t1 = (int)((t1 << (j % 2 + 3)) & 0x00000000FFFFFFFF);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: if (t6 > 2147483648)  	t5 = (int)(t6 - 4294967296);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: if (t6 > 2147483648)  	t5 = (int)(t6 - 4294967296);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,CreateQianQianCode,The following statement contains a magic number: t5 = (int)(t6 - 4294967296);  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,Conv,The following statement contains a magic number: if (i >= 0 && r > 2147483648)  	r = r - 4294967296;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,Conv,The following statement contains a magic number: if (i >= 0 && r > 2147483648)  	r = r - 4294967296;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,Conv,The following statement contains a magic number: r = r - 4294967296;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,Conv,The following statement contains a magic number: if (i < 0 && r < 2147483648)  	r = r + 4294967296;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,Conv,The following statement contains a magic number: if (i < 0 && r < 2147483648)  	r = r + 4294967296;  
Magic Number,MyPlayers,EncodeHelper,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\EncodeHelper.cs,Conv,The following statement contains a magic number: r = r + 4294967296;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following statement contains a magic number: tBar_Volume.Value = C_PlayInfo.Volume > tBar_Volume.Maximum ? 60 : C_PlayInfo.Volume;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following statement contains a magic number: switch (aPlayMode) {  case PlayMode.Single:  	comB_PlayMode.SelectedIndex = 0;  	break;  case PlayMode.SingleCycle:  	comB_PlayMode.SelectedIndex = 1;  	break;  case PlayMode.Order:  	comB_PlayMode.SelectedIndex = 2;  	break;  case PlayMode.Cycle:  	comB_PlayMode.SelectedIndex = 3;  	break;  case PlayMode.Random:  	comB_PlayMode.SelectedIndex = 4;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following statement contains a magic number: switch (aPlayMode) {  case PlayMode.Single:  	comB_PlayMode.SelectedIndex = 0;  	break;  case PlayMode.SingleCycle:  	comB_PlayMode.SelectedIndex = 1;  	break;  case PlayMode.Order:  	comB_PlayMode.SelectedIndex = 2;  	break;  case PlayMode.Cycle:  	comB_PlayMode.SelectedIndex = 3;  	break;  case PlayMode.Random:  	comB_PlayMode.SelectedIndex = 4;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following statement contains a magic number: switch (aPlayMode) {  case PlayMode.Single:  	comB_PlayMode.SelectedIndex = 0;  	break;  case PlayMode.SingleCycle:  	comB_PlayMode.SelectedIndex = 1;  	break;  case PlayMode.Order:  	comB_PlayMode.SelectedIndex = 2;  	break;  case PlayMode.Cycle:  	comB_PlayMode.SelectedIndex = 3;  	break;  case PlayMode.Random:  	comB_PlayMode.SelectedIndex = 4;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following statement contains a magic number: comB_PlayMode.SelectedIndex = 2;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following statement contains a magic number: comB_PlayMode.SelectedIndex = 3;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following statement contains a magic number: comB_PlayMode.SelectedIndex = 4;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitMusicFileList,The following statement contains a magic number: for (Int32 i = 0; i < dTable_FileList.Rows.Count; i++) {  	if (File.Exists (dTable_FileList.Rows [i] [2].ToString ()) == false) {  		dTable_FileList.Rows [i].RowError = "文件不存在";  		dataGV_FileList.RowHeadersWidth = 41;  	}  	dTable_FileList.Rows [i] [1] = Path.GetFileNameWithoutExtension (dTable_FileList.Rows [i] [2].ToString ());  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitMusicFileList,The following statement contains a magic number: for (Int32 i = 0; i < dTable_FileList.Rows.Count; i++) {  	if (File.Exists (dTable_FileList.Rows [i] [2].ToString ()) == false) {  		dTable_FileList.Rows [i].RowError = "文件不存在";  		dataGV_FileList.RowHeadersWidth = 41;  	}  	dTable_FileList.Rows [i] [1] = Path.GetFileNameWithoutExtension (dTable_FileList.Rows [i] [2].ToString ());  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitMusicFileList,The following statement contains a magic number: for (Int32 i = 0; i < dTable_FileList.Rows.Count; i++) {  	if (File.Exists (dTable_FileList.Rows [i] [2].ToString ()) == false) {  		dTable_FileList.Rows [i].RowError = "文件不存在";  		dataGV_FileList.RowHeadersWidth = 41;  	}  	dTable_FileList.Rows [i] [1] = Path.GetFileNameWithoutExtension (dTable_FileList.Rows [i] [2].ToString ());  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitMusicFileList,The following statement contains a magic number: if (File.Exists (dTable_FileList.Rows [i] [2].ToString ()) == false) {  	dTable_FileList.Rows [i].RowError = "文件不存在";  	dataGV_FileList.RowHeadersWidth = 41;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitMusicFileList,The following statement contains a magic number: if (File.Exists (dTable_FileList.Rows [i] [2].ToString ()) == false) {  	dTable_FileList.Rows [i].RowError = "文件不存在";  	dataGV_FileList.RowHeadersWidth = 41;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitMusicFileList,The following statement contains a magic number: dataGV_FileList.RowHeadersWidth = 41;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitMusicFileList,The following statement contains a magic number: dTable_FileList.Rows [i] [1] = Path.GetFileNameWithoutExtension (dTable_FileList.Rows [i] [2].ToString ());  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,btn_Play_Click,The following statement contains a magic number: if (btn_Play.Tag.ToString () == "播放") {  	if (aPlayState == PlayState.Paused || aPlayState == PlayState.Stopped) {  		DirectPlay ();  		return;  	}  	if (dataGV_FileList.CurrentRow == null) {  		btn_OpenFile_Click (null' null);  		return;  	}  	if (dataGV_FileList.CurrentRow.ErrorText != String.Empty) {  		MessageBox.Show (dataGV_FileList.CurrentRow.ErrorText' "提示");  		return;  	}  	if (NewMusicFileStream (dataGV_FileList.CurrentRow.Cells [2].Value.ToString ()) == false)  		return;  	this.InitPlay ();  	aLastMusicID = aCurrentMusicID;  	aCurrentMusicID = dataGV_FileList.CurrentRow.Index;  }  else if (btn_Play.Tag.ToString () == "暂停") {  	this.Pause ();  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,btn_Play_Click,The following statement contains a magic number: if (NewMusicFileStream (dataGV_FileList.CurrentRow.Cells [2].Value.ToString ()) == false)  	return;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,btn_Previous_Click,The following statement contains a magic number: if (NewMusicFileStream (dataGV_FileList.Rows [aLastMusicID].Cells [2].Value.ToString ()) == false) {  	NextMusic ();  	return;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,btn_Next_Click,The following statement contains a magic number: if ((aPlayMode == PlayMode.Single) || (aPlayMode == PlayMode.SingleCycle)) {  	aLastMusicID = aCurrentMusicID;  	Int32 iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count) {  		this.Stop ();  		iMusicID = aCurrentMusicID;  	}  	else {  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  	}  	aCurrentMusicID = iMusicID;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,btn_Next_Click,The following statement contains a magic number: if (iMusicID >= dTable_FileList.Rows.Count) {  	this.Stop ();  	iMusicID = aCurrentMusicID;  }  else {  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  	this.InitPlay ();  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,btn_Next_Click,The following statement contains a magic number: NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,dataGV_FileList_DoubleClick,The following statement contains a magic number: if (NewMusicFileStream (dataGV_FileList.CurrentRow.Cells [2].Value.ToString ()) == false)  	return;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,comB_PlayMode_SelectedIndexChanged,The following statement contains a magic number: switch (comB_PlayMode.SelectedIndex) {  case 0:  	aPlayMode = PlayMode.Single;  	break;  case 1:  	aPlayMode = PlayMode.SingleCycle;  	break;  case 2:  	aPlayMode = PlayMode.Order;  	break;  case 3:  	aPlayMode = PlayMode.Cycle;  	break;  case 4:  	aPlayMode = PlayMode.Random;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,comB_PlayMode_SelectedIndexChanged,The following statement contains a magic number: switch (comB_PlayMode.SelectedIndex) {  case 0:  	aPlayMode = PlayMode.Single;  	break;  case 1:  	aPlayMode = PlayMode.SingleCycle;  	break;  case 2:  	aPlayMode = PlayMode.Order;  	break;  case 3:  	aPlayMode = PlayMode.Cycle;  	break;  case 4:  	aPlayMode = PlayMode.Random;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,comB_PlayMode_SelectedIndexChanged,The following statement contains a magic number: switch (comB_PlayMode.SelectedIndex) {  case 0:  	aPlayMode = PlayMode.Single;  	break;  case 1:  	aPlayMode = PlayMode.SingleCycle;  	break;  case 2:  	aPlayMode = PlayMode.Order;  	break;  case 3:  	aPlayMode = PlayMode.Cycle;  	break;  case 4:  	aPlayMode = PlayMode.Random;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,lab_Volume_Click,The following statement contains a magic number: if (lab_Volume.ImageIndex == 0) {  	lab_Volume.ImageIndex = 1;  	tBar_Volume.Value = tBar_Volume.Minimum;  }  else {  	lab_Volume.ImageIndex = 0;  	tBar_Volume.Value = 60;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,lab_Volume_Click,The following statement contains a magic number: tBar_Volume.Value = 60;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,timer_Init_Tick,The following statement contains a magic number: aMusicPlayers.SetFFTGraphParam (TFFTGraphParamID.gpWindow' (Int32)(11 + 1));  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,Frm_DShowPlay_FormClosing,The following statement contains a magic number: if ((aMusicPlayers != null) && (aPlayState == PlayState.Running)) {  	int iVolumeleft = 0;  	int iVolumeright = 0;  	TStreamTime istartpos = new TStreamTime ();  	TStreamTime iendpos = new TStreamTime ();  	aMusicPlayers.GetPlayerVolume (ref iVolumeleft' ref iVolumeright);  	aMusicPlayers.GetPosition (ref istartpos);  	iendpos.sec = System.Convert.ToUInt32 (istartpos.sec + 1);  	aMusicPlayers.SlideVolume (TTimeFormat.tfSecond' ref istartpos' iVolumeleft' iVolumeright' TTimeFormat.tfSecond' ref iendpos' 0' 0);  	System.Threading.Thread.Sleep (1500);  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,Frm_DShowPlay_FormClosing,The following statement contains a magic number: System.Threading.Thread.Sleep (1500);  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: try {  	if (dTable_FileList.Rows.Count <= 0)  		return;  	aLastMusicID = aCurrentMusicID;  	Int32 iMusicID = 0;  	switch (aPlayMode) {  	case PlayMode.Single:  		iMusicID = aCurrentMusicID;  		this.Stop ();  		break;  	case PlayMode.SingleCycle:  		this.Stop ();  		this.DirectPlay ();  		iMusicID = aCurrentMusicID;  		break;  	case PlayMode.Order:  		iMusicID = aCurrentMusicID + 1;  		if (iMusicID >= dTable_FileList.Rows.Count) {  			this.Stop ();  			iMusicID = aCurrentMusicID;  		}  		else {  			dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  			dataGV_FileList.Rows [iMusicID].Selected = true;  			NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  			this.InitPlay ();  		}  		break;  	case PlayMode.Random:  		Random iMusicID_Rand = new Random ();  		iMusicID = iMusicID_Rand.Next (0' dTable_FileList.Rows.Count);  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  			NextMusic ();  			return;  		}  		this.InitPlay ();  		break;  	case PlayMode.Cycle:  		iMusicID = aCurrentMusicID + 1;  		if (iMusicID >= dTable_FileList.Rows.Count)  			iMusicID = 0;  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  		break;  	}  	aCurrentMusicID = iMusicID;  }  catch (Exception Err) {  	MessageBox.Show (Err.Message' "提示");  	NextMusic ();  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: try {  	if (dTable_FileList.Rows.Count <= 0)  		return;  	aLastMusicID = aCurrentMusicID;  	Int32 iMusicID = 0;  	switch (aPlayMode) {  	case PlayMode.Single:  		iMusicID = aCurrentMusicID;  		this.Stop ();  		break;  	case PlayMode.SingleCycle:  		this.Stop ();  		this.DirectPlay ();  		iMusicID = aCurrentMusicID;  		break;  	case PlayMode.Order:  		iMusicID = aCurrentMusicID + 1;  		if (iMusicID >= dTable_FileList.Rows.Count) {  			this.Stop ();  			iMusicID = aCurrentMusicID;  		}  		else {  			dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  			dataGV_FileList.Rows [iMusicID].Selected = true;  			NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  			this.InitPlay ();  		}  		break;  	case PlayMode.Random:  		Random iMusicID_Rand = new Random ();  		iMusicID = iMusicID_Rand.Next (0' dTable_FileList.Rows.Count);  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  			NextMusic ();  			return;  		}  		this.InitPlay ();  		break;  	case PlayMode.Cycle:  		iMusicID = aCurrentMusicID + 1;  		if (iMusicID >= dTable_FileList.Rows.Count)  			iMusicID = 0;  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  		break;  	}  	aCurrentMusicID = iMusicID;  }  catch (Exception Err) {  	MessageBox.Show (Err.Message' "提示");  	NextMusic ();  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: try {  	if (dTable_FileList.Rows.Count <= 0)  		return;  	aLastMusicID = aCurrentMusicID;  	Int32 iMusicID = 0;  	switch (aPlayMode) {  	case PlayMode.Single:  		iMusicID = aCurrentMusicID;  		this.Stop ();  		break;  	case PlayMode.SingleCycle:  		this.Stop ();  		this.DirectPlay ();  		iMusicID = aCurrentMusicID;  		break;  	case PlayMode.Order:  		iMusicID = aCurrentMusicID + 1;  		if (iMusicID >= dTable_FileList.Rows.Count) {  			this.Stop ();  			iMusicID = aCurrentMusicID;  		}  		else {  			dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  			dataGV_FileList.Rows [iMusicID].Selected = true;  			NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  			this.InitPlay ();  		}  		break;  	case PlayMode.Random:  		Random iMusicID_Rand = new Random ();  		iMusicID = iMusicID_Rand.Next (0' dTable_FileList.Rows.Count);  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  			NextMusic ();  			return;  		}  		this.InitPlay ();  		break;  	case PlayMode.Cycle:  		iMusicID = aCurrentMusicID + 1;  		if (iMusicID >= dTable_FileList.Rows.Count)  			iMusicID = 0;  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  		break;  	}  	aCurrentMusicID = iMusicID;  }  catch (Exception Err) {  	MessageBox.Show (Err.Message' "提示");  	NextMusic ();  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: switch (aPlayMode) {  case PlayMode.Single:  	iMusicID = aCurrentMusicID;  	this.Stop ();  	break;  case PlayMode.SingleCycle:  	this.Stop ();  	this.DirectPlay ();  	iMusicID = aCurrentMusicID;  	break;  case PlayMode.Order:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count) {  		this.Stop ();  		iMusicID = aCurrentMusicID;  	}  	else {  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  	}  	break;  case PlayMode.Random:  	Random iMusicID_Rand = new Random ();  	iMusicID = iMusicID_Rand.Next (0' dTable_FileList.Rows.Count);  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  		NextMusic ();  		return;  	}  	this.InitPlay ();  	break;  case PlayMode.Cycle:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count)  		iMusicID = 0;  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  	this.InitPlay ();  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: switch (aPlayMode) {  case PlayMode.Single:  	iMusicID = aCurrentMusicID;  	this.Stop ();  	break;  case PlayMode.SingleCycle:  	this.Stop ();  	this.DirectPlay ();  	iMusicID = aCurrentMusicID;  	break;  case PlayMode.Order:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count) {  		this.Stop ();  		iMusicID = aCurrentMusicID;  	}  	else {  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  	}  	break;  case PlayMode.Random:  	Random iMusicID_Rand = new Random ();  	iMusicID = iMusicID_Rand.Next (0' dTable_FileList.Rows.Count);  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  		NextMusic ();  		return;  	}  	this.InitPlay ();  	break;  case PlayMode.Cycle:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count)  		iMusicID = 0;  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  	this.InitPlay ();  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: switch (aPlayMode) {  case PlayMode.Single:  	iMusicID = aCurrentMusicID;  	this.Stop ();  	break;  case PlayMode.SingleCycle:  	this.Stop ();  	this.DirectPlay ();  	iMusicID = aCurrentMusicID;  	break;  case PlayMode.Order:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count) {  		this.Stop ();  		iMusicID = aCurrentMusicID;  	}  	else {  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  	}  	break;  case PlayMode.Random:  	Random iMusicID_Rand = new Random ();  	iMusicID = iMusicID_Rand.Next (0' dTable_FileList.Rows.Count);  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  		NextMusic ();  		return;  	}  	this.InitPlay ();  	break;  case PlayMode.Cycle:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count)  		iMusicID = 0;  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  	this.InitPlay ();  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: if (iMusicID >= dTable_FileList.Rows.Count) {  	this.Stop ();  	iMusicID = aCurrentMusicID;  }  else {  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  	this.InitPlay ();  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  	NextMusic ();  	return;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following statement contains a magic number: NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,AddFileListAndPlay,The following statement contains a magic number: iFileRow [2] = FileNames;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: if (aMusicPlayers == null) {  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  }  else {  	switch (aPlayState) {  	case PlayState.Init:  		lab_State.Text = String.Format ("状态：{0}"' "准备");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Paused:  		lab_State.Text = String.Format ("状态：{0}"' "暂停");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Running:  		lab_State.Text = String.Format ("状态：{0}"' "播放");  		btn_Play.Tag = "暂停";  		btn_Play.ImageIndex = 1;  		btn_Stop.Enabled = true;  		break;  	case PlayState.Stopped:  		lab_State.Text = String.Format ("状态：{0}"' "停止");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	}  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: if (aMusicPlayers == null) {  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  }  else {  	switch (aPlayState) {  	case PlayState.Init:  		lab_State.Text = String.Format ("状态：{0}"' "准备");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Paused:  		lab_State.Text = String.Format ("状态：{0}"' "暂停");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Running:  		lab_State.Text = String.Format ("状态：{0}"' "播放");  		btn_Play.Tag = "暂停";  		btn_Play.ImageIndex = 1;  		btn_Stop.Enabled = true;  		break;  	case PlayState.Stopped:  		lab_State.Text = String.Format ("状态：{0}"' "停止");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	}  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: if (aMusicPlayers == null) {  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  }  else {  	switch (aPlayState) {  	case PlayState.Init:  		lab_State.Text = String.Format ("状态：{0}"' "准备");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Paused:  		lab_State.Text = String.Format ("状态：{0}"' "暂停");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Running:  		lab_State.Text = String.Format ("状态：{0}"' "播放");  		btn_Play.Tag = "暂停";  		btn_Play.ImageIndex = 1;  		btn_Stop.Enabled = true;  		break;  	case PlayState.Stopped:  		lab_State.Text = String.Format ("状态：{0}"' "停止");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	}  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: if (aMusicPlayers == null) {  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  }  else {  	switch (aPlayState) {  	case PlayState.Init:  		lab_State.Text = String.Format ("状态：{0}"' "准备");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Paused:  		lab_State.Text = String.Format ("状态：{0}"' "暂停");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	case PlayState.Running:  		lab_State.Text = String.Format ("状态：{0}"' "播放");  		btn_Play.Tag = "暂停";  		btn_Play.ImageIndex = 1;  		btn_Stop.Enabled = true;  		break;  	case PlayState.Stopped:  		lab_State.Text = String.Format ("状态：{0}"' "停止");  		btn_Play.Tag = "播放";  		btn_Play.ImageIndex = 2;  		btn_Stop.Enabled = false;  		break;  	}  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: btn_Play.ImageIndex = 2;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: switch (aPlayState) {  case PlayState.Init:  	lab_State.Text = String.Format ("状态：{0}"' "准备");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Paused:  	lab_State.Text = String.Format ("状态：{0}"' "暂停");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Running:  	lab_State.Text = String.Format ("状态：{0}"' "播放");  	btn_Play.Tag = "暂停";  	btn_Play.ImageIndex = 1;  	btn_Stop.Enabled = true;  	break;  case PlayState.Stopped:  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: switch (aPlayState) {  case PlayState.Init:  	lab_State.Text = String.Format ("状态：{0}"' "准备");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Paused:  	lab_State.Text = String.Format ("状态：{0}"' "暂停");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Running:  	lab_State.Text = String.Format ("状态：{0}"' "播放");  	btn_Play.Tag = "暂停";  	btn_Play.ImageIndex = 1;  	btn_Stop.Enabled = true;  	break;  case PlayState.Stopped:  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: switch (aPlayState) {  case PlayState.Init:  	lab_State.Text = String.Format ("状态：{0}"' "准备");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Paused:  	lab_State.Text = String.Format ("状态：{0}"' "暂停");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Running:  	lab_State.Text = String.Format ("状态：{0}"' "播放");  	btn_Play.Tag = "暂停";  	btn_Play.ImageIndex = 1;  	btn_Stop.Enabled = true;  	break;  case PlayState.Stopped:  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: btn_Play.ImageIndex = 2;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: btn_Play.ImageIndex = 2;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following statement contains a magic number: btn_Play.ImageIndex = 2;  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SavaMusicFileList,The following statement contains a magic number: foreach (DataRow iRow in dTable_FileList.Rows) {  	iSqlStrInsert.Remove (0' iSqlStrInsert.Length);  	iSqlStrInsert.Append ("INSERT INTO [MusicFile]([ListID]'[FilePath]) VALUES(" + iListID + "''" + iRow [2].ToString () + "')");  	C_SqlOper.OperData (iSqlStrInsert.ToString ());  }  
Magic Number,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SavaMusicFileList,The following statement contains a magic number: iSqlStrInsert.Append ("INSERT INTO [MusicFile]([ListID]'[FilePath]) VALUES(" + iListID + "''" + iRow [2].ToString () + "')");  
Magic Number,MyPlayers,Frm_ShowLyrics,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_ShowLyrics.cs,ReadLyricFile,The following statement contains a magic number: if (aDownloadLyr != null) {  	if (Mp3Info.Artist == "" && Mp3Info.Title == "") {  		return;  	}  	try {  		string iLyrStr = aDownloadLyr.FindLrcAndDownLoadOne (Mp3Info.Artist' Mp3Info.Title);  		if (iLyrStr == "没有找到该歌词") {  			this.lyrControl1.Clear (Mp3Info.Artist + " - " + Mp3Info.Title);  			return;  		}  		using (StreamWriter iLyrFile = new StreamWriter (iFilePath' false' Encoding.Default)) {  			iLyrFile.Write (iLyrStr);  		}  		Thread.Sleep (100);  		lyrControl1.ReadLyricForFile (iFilePath);  	}  	catch {  		return;  	}  }  
Magic Number,MyPlayers,Frm_ShowLyrics,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_ShowLyrics.cs,ReadLyricFile,The following statement contains a magic number: try {  	string iLyrStr = aDownloadLyr.FindLrcAndDownLoadOne (Mp3Info.Artist' Mp3Info.Title);  	if (iLyrStr == "没有找到该歌词") {  		this.lyrControl1.Clear (Mp3Info.Artist + " - " + Mp3Info.Title);  		return;  	}  	using (StreamWriter iLyrFile = new StreamWriter (iFilePath' false' Encoding.Default)) {  		iLyrFile.Write (iLyrStr);  	}  	Thread.Sleep (100);  	lyrControl1.ReadLyricForFile (iFilePath);  }  catch {  	return;  }  
Magic Number,MyPlayers,Frm_ShowLyrics,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_ShowLyrics.cs,ReadLyricFile,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: for (int iTopIndex = aCurrentLyricIndex - 1; iTopIndex >= 0; iTopIndex--) {  	if ((iTempTop_Y + iLyricStr_Size.Height) < 0) {  		break;  	}  	if (iTopIndex == (aCurrentLyricIndex - 1)) {  		aLyricStrBrush.Color = aLyricList.Values [iTopIndex].GetBestOutColor (aColor_NowLyric' aColor_NormalLyric' aCurrentTimes);  	}  	else {  		aLyricStrBrush.Color = aColor_NormalLyric;  	}  	RectangleF iTopLyricStr_Rec = new RectangleF (0' iTempTop_Y' e.ClipRectangle.Width' iLyricStr_Size.Height);  	if (iTempTop_Y < aConfine) {  		float iTempBottomConfine = iTempTop_Y / aConfine;  		float iTempBottomConfine2 = (iTempTop_Y + iLyricStr_Size.Height) / aConfine;  		Int32 iAlp = (Int32)(255 * (iTempBottomConfine < 0 ? 0 : iTempBottomConfine));  		Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 > 1 ? 1 : iTempBottomConfine2));  		LinearGradientBrush iGradientBrush_Top = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  		iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' iGradientBrush_Top' iTopLyricStr_Rec' aLyricStrFormat);  		iGradientBrush_Top.Dispose ();  		iGradientBrush_Top = null;  	}  	else {  		iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  	}  	iTempTop_Y -= iLyricStr_Size.Height;  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: for (int iTopIndex = aCurrentLyricIndex - 1; iTopIndex >= 0; iTopIndex--) {  	if ((iTempTop_Y + iLyricStr_Size.Height) < 0) {  		break;  	}  	if (iTopIndex == (aCurrentLyricIndex - 1)) {  		aLyricStrBrush.Color = aLyricList.Values [iTopIndex].GetBestOutColor (aColor_NowLyric' aColor_NormalLyric' aCurrentTimes);  	}  	else {  		aLyricStrBrush.Color = aColor_NormalLyric;  	}  	RectangleF iTopLyricStr_Rec = new RectangleF (0' iTempTop_Y' e.ClipRectangle.Width' iLyricStr_Size.Height);  	if (iTempTop_Y < aConfine) {  		float iTempBottomConfine = iTempTop_Y / aConfine;  		float iTempBottomConfine2 = (iTempTop_Y + iLyricStr_Size.Height) / aConfine;  		Int32 iAlp = (Int32)(255 * (iTempBottomConfine < 0 ? 0 : iTempBottomConfine));  		Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 > 1 ? 1 : iTempBottomConfine2));  		LinearGradientBrush iGradientBrush_Top = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  		iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' iGradientBrush_Top' iTopLyricStr_Rec' aLyricStrFormat);  		iGradientBrush_Top.Dispose ();  		iGradientBrush_Top = null;  	}  	else {  		iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  	}  	iTempTop_Y -= iLyricStr_Size.Height;  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: if (iTempTop_Y < aConfine) {  	float iTempBottomConfine = iTempTop_Y / aConfine;  	float iTempBottomConfine2 = (iTempTop_Y + iLyricStr_Size.Height) / aConfine;  	Int32 iAlp = (Int32)(255 * (iTempBottomConfine < 0 ? 0 : iTempBottomConfine));  	Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 > 1 ? 1 : iTempBottomConfine2));  	LinearGradientBrush iGradientBrush_Top = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  	iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' iGradientBrush_Top' iTopLyricStr_Rec' aLyricStrFormat);  	iGradientBrush_Top.Dispose ();  	iGradientBrush_Top = null;  }  else {  	iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: if (iTempTop_Y < aConfine) {  	float iTempBottomConfine = iTempTop_Y / aConfine;  	float iTempBottomConfine2 = (iTempTop_Y + iLyricStr_Size.Height) / aConfine;  	Int32 iAlp = (Int32)(255 * (iTempBottomConfine < 0 ? 0 : iTempBottomConfine));  	Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 > 1 ? 1 : iTempBottomConfine2));  	LinearGradientBrush iGradientBrush_Top = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  	iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' iGradientBrush_Top' iTopLyricStr_Rec' aLyricStrFormat);  	iGradientBrush_Top.Dispose ();  	iGradientBrush_Top = null;  }  else {  	iPaintGraphics.DrawString (aLyricList.Values [iTopIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: for (int iBottomIndex = aCurrentLyricIndex + 1; iBottomIndex < aLyricList.Count; iBottomIndex++) {  	if (iTempBottom_Y > this.Height) {  		break;  	}  	RectangleF iTopLyricStr_Rec = new RectangleF (0' iTempBottom_Y' e.ClipRectangle.Width' iLyricStr_Size.Height);  	if (iTempBottom_Y > iTempConfine_B) {  		float iTempBottomConfine = (this.Height - iTempBottom_Y) / aConfine;  		float iTempBottomConfine2 = (this.Height - (iTempBottom_Y + iLyricStr_Size.Height)) / aConfine;  		Int32 iAlp = (Int32)(255 * iTempBottomConfine);  		Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 < 0 ? 0 : iTempBottomConfine2));  		LinearGradientBrush iGradientBrush = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  		iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' iGradientBrush' iTopLyricStr_Rec' aLyricStrFormat);  		iGradientBrush.Dispose ();  		iGradientBrush = null;  	}  	else {  		iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  	}  	iTempBottom_Y += iLyricStr_Size.Height;  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: for (int iBottomIndex = aCurrentLyricIndex + 1; iBottomIndex < aLyricList.Count; iBottomIndex++) {  	if (iTempBottom_Y > this.Height) {  		break;  	}  	RectangleF iTopLyricStr_Rec = new RectangleF (0' iTempBottom_Y' e.ClipRectangle.Width' iLyricStr_Size.Height);  	if (iTempBottom_Y > iTempConfine_B) {  		float iTempBottomConfine = (this.Height - iTempBottom_Y) / aConfine;  		float iTempBottomConfine2 = (this.Height - (iTempBottom_Y + iLyricStr_Size.Height)) / aConfine;  		Int32 iAlp = (Int32)(255 * iTempBottomConfine);  		Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 < 0 ? 0 : iTempBottomConfine2));  		LinearGradientBrush iGradientBrush = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  		iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' iGradientBrush' iTopLyricStr_Rec' aLyricStrFormat);  		iGradientBrush.Dispose ();  		iGradientBrush = null;  	}  	else {  		iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  	}  	iTempBottom_Y += iLyricStr_Size.Height;  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: if (iTempBottom_Y > iTempConfine_B) {  	float iTempBottomConfine = (this.Height - iTempBottom_Y) / aConfine;  	float iTempBottomConfine2 = (this.Height - (iTempBottom_Y + iLyricStr_Size.Height)) / aConfine;  	Int32 iAlp = (Int32)(255 * iTempBottomConfine);  	Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 < 0 ? 0 : iTempBottomConfine2));  	LinearGradientBrush iGradientBrush = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  	iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' iGradientBrush' iTopLyricStr_Rec' aLyricStrFormat);  	iGradientBrush.Dispose ();  	iGradientBrush = null;  }  else {  	iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,LyrControl_Paint,The following statement contains a magic number: if (iTempBottom_Y > iTempConfine_B) {  	float iTempBottomConfine = (this.Height - iTempBottom_Y) / aConfine;  	float iTempBottomConfine2 = (this.Height - (iTempBottom_Y + iLyricStr_Size.Height)) / aConfine;  	Int32 iAlp = (Int32)(255 * iTempBottomConfine);  	Int32 iAlp2 = (Int32)(255 * (iTempBottomConfine2 < 0 ? 0 : iTempBottomConfine2));  	LinearGradientBrush iGradientBrush = new LinearGradientBrush (iTopLyricStr_Rec' Color.FromArgb (iAlp' aColor_NormalLyric)' Color.FromArgb (iAlp2' aColor_NormalLyric)' LinearGradientMode.Vertical);  	iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' iGradientBrush' iTopLyricStr_Rec' aLyricStrFormat);  	iGradientBrush.Dispose ();  	iGradientBrush = null;  }  else {  	iPaintGraphics.DrawString (aLyricList.Values [iBottomIndex].LyricsStr' aLyricStrFont' aLyricStrBrush' iTopLyricStr_Rec' aLyricStrFormat);  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,ReadLyricForFile,The following statement contains a magic number: try {  	iFileRead = new StreamReader (FileName' Encoding.Default);  	while (!iFileRead.EndOfStream) {  		iLenStr = iFileRead.ReadLine ();  		if (iLenStr.Length <= 0) {  			continue;  		}  		iLyricStr = iLenStr.Substring (iLenStr.LastIndexOf ("]") + 1' (iLenStr.Length - iLenStr.LastIndexOf ("]") - 1));  		String iLyrTime = iLenStr.Substring (iLenStr.IndexOf ("[")' (iLenStr.LastIndexOf ("]") + 1));  		if (iLyrTime == String.Empty) {  			continue;  		}  		if (iLyrTime.Contains ("ti") || iLyrTime.Contains ("ar") || iLyrTime.Contains ("al") || iLyrTime.Contains ("by")) {  			continue;  		}  		if (iLyrTime.Contains ("offset")) {  			String iOffset = iLyrTime.Substring (iLyrTime.IndexOf (":") + 1' (iLyrTime.IndexOf ("]") - (iLyrTime.IndexOf (":") + 1)));  			aOffset = Int32.Parse (iOffset);  			continue;  		}  		while (iLyrTime.Contains ("[")) {  			String iLyrOneTime = iLyrTime.Substring (iLenStr.IndexOf ("[") + 1' 8);  			iLyrTime = iLyrTime.Substring (iLyrTime.IndexOf ("]") + 1);  			Int32 iStartTims = TimesStrToMSec (iLyrOneTime);  			C_OneLyricsStr iOneLyricStr = new C_OneLyricsStr ();  			iOneLyricStr.StartTime = iStartTims;  			iOneLyricStr.LyricsStr = iLyricStr;  			aLyricList.Add (iStartTims' iOneLyricStr);  		}  	}  	SetLyricListEndTimes ();  	aCurrentState = LyrControlState.Ready;  	InitLyricsShow ();  }  catch {  }  finally {  	if (iFileRead != null) {  		iFileRead.Close ();  		iFileRead.Dispose ();  	}  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,ReadLyricForFile,The following statement contains a magic number: while (!iFileRead.EndOfStream) {  	iLenStr = iFileRead.ReadLine ();  	if (iLenStr.Length <= 0) {  		continue;  	}  	iLyricStr = iLenStr.Substring (iLenStr.LastIndexOf ("]") + 1' (iLenStr.Length - iLenStr.LastIndexOf ("]") - 1));  	String iLyrTime = iLenStr.Substring (iLenStr.IndexOf ("[")' (iLenStr.LastIndexOf ("]") + 1));  	if (iLyrTime == String.Empty) {  		continue;  	}  	if (iLyrTime.Contains ("ti") || iLyrTime.Contains ("ar") || iLyrTime.Contains ("al") || iLyrTime.Contains ("by")) {  		continue;  	}  	if (iLyrTime.Contains ("offset")) {  		String iOffset = iLyrTime.Substring (iLyrTime.IndexOf (":") + 1' (iLyrTime.IndexOf ("]") - (iLyrTime.IndexOf (":") + 1)));  		aOffset = Int32.Parse (iOffset);  		continue;  	}  	while (iLyrTime.Contains ("[")) {  		String iLyrOneTime = iLyrTime.Substring (iLenStr.IndexOf ("[") + 1' 8);  		iLyrTime = iLyrTime.Substring (iLyrTime.IndexOf ("]") + 1);  		Int32 iStartTims = TimesStrToMSec (iLyrOneTime);  		C_OneLyricsStr iOneLyricStr = new C_OneLyricsStr ();  		iOneLyricStr.StartTime = iStartTims;  		iOneLyricStr.LyricsStr = iLyricStr;  		aLyricList.Add (iStartTims' iOneLyricStr);  	}  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,ReadLyricForFile,The following statement contains a magic number: while (iLyrTime.Contains ("[")) {  	String iLyrOneTime = iLyrTime.Substring (iLenStr.IndexOf ("[") + 1' 8);  	iLyrTime = iLyrTime.Substring (iLyrTime.IndexOf ("]") + 1);  	Int32 iStartTims = TimesStrToMSec (iLyrOneTime);  	C_OneLyricsStr iOneLyricStr = new C_OneLyricsStr ();  	iOneLyricStr.StartTime = iStartTims;  	iOneLyricStr.LyricsStr = iLyricStr;  	aLyricList.Add (iStartTims' iOneLyricStr);  }  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,TimesStrToMSec,The following statement contains a magic number: iMillisecond_Sum = (iMinute * 60 + iSecond) * 1000 + iMillisecond;  
Magic Number,MyPlayers,LyrControl,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\LyrControl.cs,TimesStrToMSec,The following statement contains a magic number: iMillisecond_Sum = (iMinute * 60 + iSecond) * 1000 + iMillisecond;  
Magic Number,libZPlay,ZPlay,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\libZPlay.cs,ZPlay,The following statement contains a magic number: if (GetVersion () < 190)  	throw new Exception ("Need libZPlay.dll version 1.90 and above.");  
Missing Default,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,InitInfo,The following switch statement is missing a default case: switch (aPlayMode) {  case PlayMode.Single:  	comB_PlayMode.SelectedIndex = 0;  	break;  case PlayMode.SingleCycle:  	comB_PlayMode.SelectedIndex = 1;  	break;  case PlayMode.Order:  	comB_PlayMode.SelectedIndex = 2;  	break;  case PlayMode.Cycle:  	comB_PlayMode.SelectedIndex = 3;  	break;  case PlayMode.Random:  	comB_PlayMode.SelectedIndex = 4;  	break;  }  
Missing Default,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,comB_PlayMode_SelectedIndexChanged,The following switch statement is missing a default case: switch (comB_PlayMode.SelectedIndex) {  case 0:  	aPlayMode = PlayMode.Single;  	break;  case 1:  	aPlayMode = PlayMode.SingleCycle;  	break;  case 2:  	aPlayMode = PlayMode.Order;  	break;  case 3:  	aPlayMode = PlayMode.Cycle;  	break;  case 4:  	aPlayMode = PlayMode.Random;  	break;  }  
Missing Default,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,NextMusic,The following switch statement is missing a default case: switch (aPlayMode) {  case PlayMode.Single:  	iMusicID = aCurrentMusicID;  	this.Stop ();  	break;  case PlayMode.SingleCycle:  	this.Stop ();  	this.DirectPlay ();  	iMusicID = aCurrentMusicID;  	break;  case PlayMode.Order:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count) {  		this.Stop ();  		iMusicID = aCurrentMusicID;  	}  	else {  		dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  		dataGV_FileList.Rows [iMusicID].Selected = true;  		NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  		this.InitPlay ();  	}  	break;  case PlayMode.Random:  	Random iMusicID_Rand = new Random ();  	iMusicID = iMusicID_Rand.Next (0' dTable_FileList.Rows.Count);  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	if (NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ()) == false) {  		NextMusic ();  		return;  	}  	this.InitPlay ();  	break;  case PlayMode.Cycle:  	iMusicID = aCurrentMusicID + 1;  	if (iMusicID >= dTable_FileList.Rows.Count)  		iMusicID = 0;  	dataGV_FileList.CurrentCell = dataGV_FileList.Rows [iMusicID].Cells [1];  	dataGV_FileList.Rows [iMusicID].Selected = true;  	NewMusicFileStream (dataGV_FileList.Rows [iMusicID].Cells [2].Value.ToString ());  	this.InitPlay ();  	break;  }  
Missing Default,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,SetState,The following switch statement is missing a default case: switch (aPlayState) {  case PlayState.Init:  	lab_State.Text = String.Format ("状态：{0}"' "准备");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Paused:  	lab_State.Text = String.Format ("状态：{0}"' "暂停");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  case PlayState.Running:  	lab_State.Text = String.Format ("状态：{0}"' "播放");  	btn_Play.Tag = "暂停";  	btn_Play.ImageIndex = 1;  	btn_Stop.Enabled = true;  	break;  case PlayState.Stopped:  	lab_State.Text = String.Format ("状态：{0}"' "停止");  	btn_Play.Tag = "播放";  	btn_Play.ImageIndex = 2;  	btn_Stop.Enabled = false;  	break;  }  
Missing Default,MyPlayers,Frm_Play,C:\repos\HelloSCHM_git_control\C#\MyPlayers\MyPlayers\Frm_Play.cs,WndProc,The following switch statement is missing a default case: switch (m.Msg) {  case WM_MOVE: {  	if (checkB_Lyrics.Checked && (aFrm_ShowLyrcs != null)) {  		aFrm_ShowLyrcs.Left = this.Left + this.Width;  		aFrm_ShowLyrcs.Top = this.Top;  		return;  	}  	break;  }  case WM_ACTIVATE: {  	if (((Int32)m.WParam) != WA_INACTIVE) {  		if (checkB_Lyrics.Checked && (aFrm_ShowLyrcs != null)) {  			aFrm_ShowLyrcs.Left = this.Left + this.Width;  			aFrm_ShowLyrcs.Top = this.Top;  			aFrm_ShowLyrcs.Show ();  			aFrm_ShowLyrcs.Focus ();  			this.Focus ();  		}  	}  	break;  }  case WM_SIZE: {  	if (((Int32)m.WParam) == SIZE_MINIMIZED) {  		this.Hide ();  	}  	break;  }  }  
