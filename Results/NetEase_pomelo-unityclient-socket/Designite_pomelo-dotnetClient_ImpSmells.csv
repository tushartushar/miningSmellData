Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,decodeMsg,Cyclomatic complexity of the method is 11
Complex Method,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,checkMsg,Cyclomatic complexity of the method is 12
Complex Method,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeMsg,Cyclomatic complexity of the method is 8
Complex Method,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeProp,Cyclomatic complexity of the method is 9
Complex Method,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,encode,Cyclomatic complexity of the method is 8
Long Parameter List,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeArray,The method has 5 parameters. Parameters: msg' value' offset' buffer' proto
Long Parameter List,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeProp,The method has 5 parameters. Parameters: value' type' offset' buffer' proto
Long Parameter List,Pomelo.DotNetClient,Transporter,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\Transporter.cs,writeBytes,The method has 5 parameters. Parameters: source' start' length' offset' target
Long Statement,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,checkMsg,The length of the statement  "                                if (messages.TryGetValue(value_type.ToString()' out value_proto) || protos.TryGetValue("message " + value_type.ToString()' out value_proto)) " is 140.
Long Statement,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,checkMsg,The length of the statement  "                                if (((JsonObject)proto["__messages"]).TryGetValue(value_type.ToString()' out msg_type) || protos.TryGetValue("message " + value_type.ToString()' out msg_type)) " is 159.
Long Statement,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeProp,The length of the statement  "                        if (((JsonObject)__messages).TryGetValue(type' out __message_type) || protos.TryGetValue("message " + type' out __message_type)) " is 128.
Long Statement,Pomelo.DotNetClient,Transporter,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\Transporter.cs,receive,The length of the statement  "            this.asyncReceive = socket.BeginReceive(stateObject.buffer' 0' stateObject.buffer.Length' SocketFlags.None' new AsyncCallback(endReceive)' stateObject); " is 152.
Empty Catch Block,Pomelo.DotNetClient,PomeloClient,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\client\PomeloClient.cs,Dispose,The method has an empty catch block.
Magic Number,Pomelo.Protobuf,Decoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Decoder.cs,decodeUInt32,The following statement contains a magic number: n = n + Convert.ToUInt32((m & 0x7f) * Math.Pow(2' (7 * (i - offset))));
Magic Number,Pomelo.Protobuf,Decoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Decoder.cs,decodeUInt32,The following statement contains a magic number: n = n + Convert.ToUInt32((m & 0x7f) * Math.Pow(2' (7 * (i - offset))));
Magic Number,Pomelo.Protobuf,Decoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Decoder.cs,decodeUInt32,The following statement contains a magic number: m < 128
Magic Number,Pomelo.Protobuf,Decoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Decoder.cs,decodeSInt32,The following statement contains a magic number: int flag = ((n % 2) == 1) ? -1 : 1;
Magic Number,Pomelo.Protobuf,Decoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Decoder.cs,decodeSInt32,The following statement contains a magic number: int result = Convert.ToInt32(((n % 2 + n) / 2) * flag);
Magic Number,Pomelo.Protobuf,Decoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Decoder.cs,decodeSInt32,The following statement contains a magic number: int result = Convert.ToInt32(((n % 2 + n) / 2) * flag);
Magic Number,Pomelo.Protobuf,Encoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Encoder.cs,encodeUInt32,The following statement contains a magic number: uint tmp = n % 128;
Magic Number,Pomelo.Protobuf,Encoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Encoder.cs,encodeUInt32,The following statement contains a magic number: uint next = n >> 7;
Magic Number,Pomelo.Protobuf,Encoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Encoder.cs,encodeUInt32,The following statement contains a magic number: tmp = tmp + 128;
Magic Number,Pomelo.Protobuf,Encoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Encoder.cs,encodeSInt32,The following statement contains a magic number: UInt32 num = (uint)(n < 0 ? (Math.Abs(n) * 2 - 1) : n * 2);
Magic Number,Pomelo.Protobuf,Encoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\Encoder.cs,encodeSInt32,The following statement contains a magic number: UInt32 num = (uint)(n < 0 ? (Math.Abs(n) * 2 - 1) : n * 2);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,decodeDouble,The following statement contains a magic number: this.offset += 8;
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,decodeFloat,The following statement contains a magic number: this.offset += 4;
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: ulong b3 = buffer[this.offset + 2];
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: ulong b4 = buffer[this.offset + 3];
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: ulong b5 = buffer[this.offset + 4];
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: ulong b6 = buffer[this.offset + 5];
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: ulong b7 = buffer[this.offset + 6];
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: ulong b8 = buffer[this.offset + 7];
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                    | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                    | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                    | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                    | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                    | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                    | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,ReadRawLittleEndian64,The following statement contains a magic number: return b1 | (b2 << 8) | (b3 << 16) | (b4 << 24)                    | (b5 << 32) | (b6 << 40) | (b7 << 48) | (b8 << 56);
Magic Number,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,getHead,The following statement contains a magic number: head.Add("tag"' tag >> 3);
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encode,The following statement contains a magic number: int length = Encoder.byteLength(msg.ToString()) * 2;
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeProp,The following statement contains a magic number: switch (type)              {                  case "uInt32":                      this.writeUInt32(buffer' ref offset' value);                      break;                  case "int32":                  case "sInt32":                      this.writeInt32(buffer' ref offset' value);                      break;                  case "float":                      this.writeFloat(buffer' ref offset' value);                      break;                  case "double":                      this.writeDouble(buffer' ref offset' value);                      break;                  case "string":                      this.writeString(buffer' ref offset' value);                      break;                  default:                      object __messages;                      object __message_type;                        if (proto.TryGetValue("__messages"' out __messages))                      {                          if (((JsonObject)__messages).TryGetValue(type' out __message_type) || protos.TryGetValue("message " + type' out __message_type))                          {                              byte[] tembuff = new byte[Encoder.byteLength(value.ToString()) * 3];                              int length = 0;                              length = this.encodeMsg(tembuff' length' (JsonObject)__message_type' (JsonObject)value);                              offset = writeBytes(buffer' offset' Encoder.encodeUInt32((uint)length));                              for (int i = 0; i < length; i++)                              {                                  buffer[offset] = tembuff[i];                                  offset++;                              }                          }                      }                      break;              }
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,writeDouble,The following statement contains a magic number: offset += 8;
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,writeFloat,The following statement contains a magic number: offset += 4;
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeTag,The following statement contains a magic number: return Encoder.encodeUInt32((uint)(tag << 3 | flag));
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,WriteRawLittleEndian64,The following statement contains a magic number: buffer[offset++] = ((byte)(value >> 8));
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,WriteRawLittleEndian64,The following statement contains a magic number: buffer[offset++] = ((byte)(value >> 16));
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,WriteRawLittleEndian64,The following statement contains a magic number: buffer[offset++] = ((byte)(value >> 24));
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,WriteRawLittleEndian64,The following statement contains a magic number: buffer[offset++] = ((byte)(value >> 32));
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,WriteRawLittleEndian64,The following statement contains a magic number: buffer[offset++] = ((byte)(value >> 40));
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,WriteRawLittleEndian64,The following statement contains a magic number: buffer[offset++] = ((byte)(value >> 48));
Magic Number,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,WriteRawLittleEndian64,The following statement contains a magic number: buffer[offset++] = ((byte)(value >> 56));
Magic Number,Pomelo.Protobuf,Util,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\util\Util.cs,containType,The following statement contains a magic number: int value' returnInt = 2;
Magic Number,Pomelo.Protobuf,Util,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\util\Util.cs,initTypeMap,The following statement contains a magic number: dic.Add("string"' 2);
Magic Number,Pomelo.Protobuf,Util,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\util\Util.cs,initTypeMap,The following statement contains a magic number: dic.Add("float"' 5);
Magic Number,Pomelo.Protobuf,Util,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\util\Util.cs,initTypeMap,The following statement contains a magic number: dic.Add("message"' 2);
Magic Number,Pomelo.Protobuf.Test,CodecTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\test\CodecTest.cs,Run,The following statement contains a magic number: flag = EncodeSInt32Test(10000);
Magic Number,Pomelo.Protobuf.Test,CodecTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\test\CodecTest.cs,Run,The following statement contains a magic number: flag = EncodeUInt32Test(10000);
Magic Number,Pomelo.Protobuf.Test,ProtobufTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\test\ProtobufTest.cs,print,The following statement contains a magic number: Console.Write(Convert.ToString(bytes[i]' 16) + " ");
Magic Number,Pomelo.DotNetClient,HeartBeatService,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\HeartBeatService.cs,HeartBeatService,The following statement contains a magic number: this.interval = interval * 1000;
Magic Number,Pomelo.DotNetClient,HeartBeatService,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\HeartBeatService.cs,sendHeartBeat,The following statement contains a magic number: timeout > interval * 2
Magic Number,Pomelo.DotNetClient,HeartBeatService,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\HeartBeatService.cs,start,The following statement contains a magic number: interval < 1000
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,encode,The following statement contains a magic number: byte[] head = new byte[routeLength + 6];
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,encode,The following statement contains a magic number: offset += 2;
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,writeInt,The following statement contains a magic number: bytes[offset] = (byte)(value >> 24 & 0xff);
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,writeInt,The following statement contains a magic number: bytes[offset + 1] = (byte)(value >> 16 & 0xff);
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,writeInt,The following statement contains a magic number: bytes[offset + 2] = (byte)(value >> 8 & 0xff);
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,writeInt,The following statement contains a magic number: bytes[offset + 2] = (byte)(value >> 8 & 0xff);
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,writeInt,The following statement contains a magic number: bytes[offset + 3] = (byte)(value & 0xff);
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,writeShort,The following statement contains a magic number: bytes[offset] = (byte)(value >> 8 & 0xff);
Magic Number,Pomelo.DotNetClient,MessageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\MessageProtocol.cs,readShort,The following statement contains a magic number: result += (ushort)(bytes[offset] << 8);
Magic Number,Pomelo.DotNetClient,PackageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\PackageProtocol.cs,encode,The following statement contains a magic number: buf[index++] = Convert.ToByte(body.Length >> 16 & 0xFF);
Magic Number,Pomelo.DotNetClient,PackageProtocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\PackageProtocol.cs,encode,The following statement contains a magic number: buf[index++] = Convert.ToByte(body.Length >> 8 & 0xFF);
Magic Number,Pomelo.DotNetClient,Protocol,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protocol\Protocol.cs,processHandshakeData,The following statement contains a magic number: !msg.ContainsKey("code") || !msg.ContainsKey("sys") || Convert.ToInt32(msg["code"]) != 200
Magic Number,Pomelo.DotNetClient,Transporter,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\Transporter.cs,readHead,The following statement contains a magic number: pkgLength = (headBuffer[1] << 16) + (headBuffer[2] << 8) + headBuffer[3];
Magic Number,Pomelo.DotNetClient,Transporter,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\Transporter.cs,readHead,The following statement contains a magic number: pkgLength = (headBuffer[1] << 16) + (headBuffer[2] << 8) + headBuffer[3];
Magic Number,Pomelo.DotNetClient,Transporter,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\Transporter.cs,readHead,The following statement contains a magic number: pkgLength = (headBuffer[1] << 16) + (headBuffer[2] << 8) + headBuffer[3];
Magic Number,Pomelo.DotNetClient,Transporter,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\Transporter.cs,readHead,The following statement contains a magic number: pkgLength = (headBuffer[1] << 16) + (headBuffer[2] << 8) + headBuffer[3];
Magic Number,Pomelo.DotNetClient,Transporter,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\Transporter.cs,print,The following statement contains a magic number: Console.Write(Convert.ToString(bytes[i]' 16) + " ");
Magic Number,Pomelo.DotNetClient.Test,ClientTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\client\test\ClientTest.cs,loginTest,The following statement contains a magic number: pc.initClient(host' port' () =>              {                  pc.connect(null' data =>                  {                        Console.WriteLine("on data back" + data.ToString());                      JsonObject msg = new JsonObject();                      msg["uid"] = 111;                      pc.request("gate.gateHandler.queryEntry"' msg' OnQuery);                  });              });
Magic Number,Pomelo.DotNetClient.Test,ClientTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\client\test\ClientTest.cs,OnQuery,The following statement contains a magic number: Convert.ToInt32(result["code"]) == 200
Magic Number,Pomelo.DotNetClient.Test,ClientTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\client\test\ClientTest.cs,Run,The following statement contains a magic number: int port = 3014;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: int size = count + 6;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: byte[] buffer = new byte[count + 10];
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[1] = Convert.ToByte(size >> 16 & 0xFF);
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[2] = Convert.ToByte(size >> 8 & 0xFF);
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[2] = Convert.ToByte(size >> 8 & 0xFF);
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[3] = Convert.ToByte(size & 0xFF);
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[4] = 4;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[4] = 4;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[5] = 128;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[5] = 128;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[6] = 1;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[7] = 2;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[7] = 2;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[8] = 62;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[8] = 62;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[9] = 72;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[9] = 72;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[10 + i] = (byte)random.Next(255);
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,genBuffer,The following statement contains a magic number: buffer[10 + i] = (byte)random.Next(255);
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,generateBuffers,The following statement contains a magic number: int length = 100;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,generateBuffers,The following statement contains a magic number: byte[] result = new byte[(length + 10) * num];
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,Run,The following statement contains a magic number: int num = 10;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,Run,The following statement contains a magic number: int limit = 1000;
Magic Number,Pomelo.DotNetClient.Test,TransportTest,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\transport\test\TransportTest.cs,Run,The following statement contains a magic number: int length = 200;
Missing Default,Pomelo.Protobuf,MsgDecoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgDecoder.cs,decodeMsg,The following switch statement is missing a default case: switch (option.ToString())                                      {                                          case "optional":                                          case "required":                                              object type;                                              if (((JsonObject)(value)).TryGetValue("type"' out type))                                              {                                                  msg.Add(name.ToString()' this.decodeProp(type.ToString()' proto));                                              }                                              break;                                          case "repeated":                                              object _name;                                              if (!msg.TryGetValue(name.ToString()' out _name))                                              {                                                  msg.Add(name.ToString()' new List<object>());                                              }                                              object value_type;                                              if (msg.TryGetValue(name.ToString()' out _name) && ((JsonObject)(value)).TryGetValue("type"' out value_type))                                              {                                                  decodeArray((List<object>)_name' value_type.ToString()' proto);                                              }                                              break;                                      }
Missing Default,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,checkMsg,The following switch statement is missing a default case: switch (proto_option.ToString())                      {                          case "required":                              if (!msg.ContainsKey(key))                              {                                  return false;                              }                              else                              {                                }                              break;                          case "optional":                              object value_type;                                JsonObject messages = (JsonObject)proto["__messages"];                                value_type = value["type"];                                if (msg.ContainsKey(key))                              {                                  Object value_proto;                                    if (messages.TryGetValue(value_type.ToString()' out value_proto) || protos.TryGetValue("message " + value_type.ToString()' out value_proto))                                  {                                      checkMsg((JsonObject)msg[key]' (JsonObject)value_proto);                                  }                              }                              break;                          case "repeated":                              object msg_name;                              object msg_type;                              if (value.TryGetValue("type"' out value_type) && msg.TryGetValue(key' out msg_name))                              {                                  if (((JsonObject)proto["__messages"]).TryGetValue(value_type.ToString()' out msg_type) || protos.TryGetValue("message " + value_type.ToString()' out msg_type))                                  {                                      List<object> o = (List<object>)msg_name;                                      foreach (object item in o)                                      {                                          if (!checkMsg((JsonObject)item' (JsonObject)msg_type))                                          {                                              return false;                                          }                                      }                                  }                              }                              break;                      }
Missing Default,Pomelo.Protobuf,MsgEncoder,C:\research\architectureSmells\repos\NetEase_pomelo-unityclient-socket\pomelo-dotnetClient\src\protobuf\MsgEncoder.cs,encodeMsg,The following switch statement is missing a default case: switch (value_option.ToString())                          {                              case "required":                              case "optional":                                  object value_type' value_tag;                                  if (((JsonObject)value).TryGetValue("type"' out value_type) && ((JsonObject)value).TryGetValue("tag"' out value_tag))                                  {                                      offset = this.writeBytes(buffer' offset' this.encodeTag(value_type.ToString()' Convert.ToInt32(value_tag)));                                      offset = this.encodeProp(msg[key]' value_type.ToString()' offset' buffer' proto);                                  }                                  break;                              case "repeated":                                  object msg_key;                                  if (msg.TryGetValue(key' out msg_key))                                  {                                      if (((List<object>)msg_key).Count > 0)                                      {                                          offset = encodeArray((List<object>)msg_key' (JsonObject)value' offset' buffer' proto);                                      }                                  }                                  break;                          }
