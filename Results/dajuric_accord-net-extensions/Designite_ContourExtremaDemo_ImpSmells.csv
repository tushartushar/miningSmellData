Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The length of the statement  "            var humps = contour.GetHumps(peakClusters.Select(x => ((int)x.Average() + contour.Count) % contour.Count).ToList() /*get mean value; if it is a negative index make it positive*/' " is 178.
Complex Conditional,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The conditional expression  "(isPeak && angle > 0 && angle < 90) ||                      (!isPeak && angle > 0 && angle < 90)"  is complex.
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: var scale = 25;
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: contour.FindExtremaIndices((angle' isPeak) =>              {                  if ((isPeak && angle > 0 && angle < 90) ||                      (!isPeak && angle > 0 && angle < 90))                      return true;                    return false;              }'              scale' out peakIndeces' out valeyIndeces);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: contour.FindExtremaIndices((angle' isPeak) =>              {                  if ((isPeak && angle > 0 && angle < 90) ||                      (!isPeak && angle > 0 && angle < 90))                      return true;                    return false;              }'              scale' out peakIndeces' out valeyIndeces);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: var peakClusters = contour.ClusterPoints(peakIndeces' scale * 2' cumulativeDistance).Where(x => x.Count > 3);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: var peakClusters = contour.ClusterPoints(peakIndeces' scale * 2' cumulativeDistance).Where(x => x.Count > 3);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: var valeyClusters = contour.ClusterPoints(valeyIndeces' scale * 2' cumulativeDistance).Where(x => x.Count > 3);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: var valeyClusters = contour.ClusterPoints(valeyIndeces' scale * 2' cumulativeDistance).Where(x => x.Count > 3);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: for (int i = 0; i < humps.Count; i++)              {                  var slice = contour.ToCircularList().GetRange(humps[i].Min' humps[i].Length);                  image.Draw(slice.ToArray()' Bgr<byte>.Green' 5);              }
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: for (int i = 0; i < valeyIndeces.Count; i++)              {                  image.Draw(new Circle(contour[valeyIndeces[i]]' 3)' Bgr<byte>.Red' 3);              }
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: for (int i = 0; i < valeyIndeces.Count; i++)              {                  image.Draw(new Circle(contour[valeyIndeces[i]]' 3)' Bgr<byte>.Red' 3);              }
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: for (int i = 0; i < peakIndeces.Count; i++)              {                  image.Draw(new Circle(contour[peakIndeces[i]]' 3)' Bgr<byte>.Blue' 3);              }
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,findPeaksAndValleys,The following statement contains a magic number: for (int i = 0; i < peakIndeces.Count; i++)              {                  image.Draw(new Circle(contour[peakIndeces[i]]' 3)' Bgr<byte>.Blue' 3);              }
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.Location = new System.Drawing.Point(12' 12);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.Location = new System.Drawing.Point(12' 12);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.Size = new System.Drawing.Size(640' 480);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.Size = new System.Drawing.Size(640' 480);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.TabIndex = 2;
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(661' 499);
Magic Number,ContourExtremaDemo,ContourExtremaForm,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\ContourExtremaForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(661' 499);
Magic Number,MoreCollections,CircularList<T>,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\MoreCollections\CiruclarList.cs,translateRange,The following statement contains a magic number: if (realIdxB < this.Count && realIdxA <= realIdxB)              {                  segmentIndeces = new int[1]; segmentIndeces[0] = realIdxA;                  segmentLengths = new int[1]; segmentLengths[0] = realIdxB - realIdxA + 1;              }              else              {                  segmentIndeces = new int[2];                  segmentIndeces[0] = realIdxA;                  segmentIndeces[1] = 0;                    segmentLengths = new int[2];                  segmentLengths[0] = this.Count - realIdxA;                  segmentLengths[1] = realIdxB;              }
Magic Number,MoreCollections,CircularList<T>,C:\repos\dajuric_accord-net-extensions\Samples\Math\ContourSamples\ContourExtrema\MoreCollections\CiruclarList.cs,translateRange,The following statement contains a magic number: if (realIdxB < this.Count && realIdxA <= realIdxB)              {                  segmentIndeces = new int[1]; segmentIndeces[0] = realIdxA;                  segmentLengths = new int[1]; segmentLengths[0] = realIdxB - realIdxA + 1;              }              else              {                  segmentIndeces = new int[2];                  segmentIndeces[0] = realIdxA;                  segmentIndeces[1] = 0;                    segmentLengths = new int[2];                  segmentLengths[0] = this.Count - realIdxA;                  segmentLengths[1] = realIdxB;              }
