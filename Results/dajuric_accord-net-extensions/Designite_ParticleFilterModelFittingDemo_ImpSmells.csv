Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MoreLinq,MoreEnumerable,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\MoreLinq\MoreEnumerable.ForEach.cs,MaxBy,Cyclomatic complexity of the method is 9
Long Parameter List,ParticleFilterModelFitting,OpenHandTemplate,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\Model\OpenHandTemplate.cs,createRange,The method has 6 parameters.
Long Statement,ParticleFilterModelFitting,ModelParticle,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\Particle\ModelParticle.cs,Diffuse,The length of the statement  "	var id = (ModelParameters.ModelTypeIndex + rand.Next (ModelRepository.PrototypeCount)) % ModelRepository.PrototypeCount; " is 120.
Long Statement,ParticleFilterModelFitting,OpenHandTemplate,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\Model\OpenHandTemplate.cs,findContour,The length of the statement  "	/*********** cut bottom border and shift contour beginning to the first non-border point ***************/int firstIdx = -1; " is 123.
Long Statement,ParticleFilterModelFitting,OpenHandTemplate,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\Model\OpenHandTemplate.cs,create,The length of the statement  "	var pointTransform = Transforms2D.Combine (Transforms2D.Scale (scale' scale)' Transforms2D.Rotation ((float)Angle.ToRadians (rotation))); " is 137.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,init,The length of the statement  "	var path = Path.Combine (Directory.GetParent (Environment.CurrentDirectory).FullName' "Resources"' "PrototypeTemplatesBW"); " is 123.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,init,The length of the statement  "	var generatedOrientations = EnumerableExtensions.GetRange (-90' +90' (int)((180f / GlobalParameters.NUM_OF_QUNATIZED_ORIENTATIONS) / 2 / 2/*user factor - last "2"*/)); " is 167.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,predict,The length of the statement  "	particleFilter = particleFilter.Predict (effectiveCountMinRatio: 0.9f' sampleCount: NUMBER_OF_PARTICLES/*preserve number of particles*/); " is 137.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,processFrame,The length of the statement  "	/******************************* match templates + particle filter stuff ******************************/matchTimeMs = Diagnostics.MeasureTime (() => { " is 150.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,processFrame,The length of the statement  "	/******************************* match templates + particle filter stuff ******************************//******************************* reset tracking (if necessary) ******************************/var p = particleFilter.MaxBy (x => x.Weight); " is 243.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,processFrame,The length of the statement  "	/******************************* reset tracking (if necessary) ******************************//********************************* output **************************************/var metaData = getData (p.MetaDataRef); " is 214.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,videoCapture_ProcessFrame,The length of the statement  "	frame.Draw ("Processed: " + /*matchTimeMs*/elapsedMs + " ms"' DotImaging.Font.Small' new Point (25' 20)' Bgr<byte>.Red); " is 120.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,drawTemplatesToFiles,The length of the statement  "		var fileName = String.Format ("template_{0}_scale{1}_angle_{2}.bmp"' mParams.ModelTypeIndex' mParams.Scale' mParams.Angle); " is 123.
Long Statement,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,drawTemplatesToFiles,The length of the statement  "		img.Draw (template.Features.Select (x => new Point (x.X + BORDER_OFFSET' x.Y + BORDER_OFFSET)).ToArray ()' Bgr<byte>.Red' 3); " is 125.
Magic Number,ParticleFilterModelFitting,ModelParams,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\Model\ModelParams.cs,GetHashCode,The following statement contains a magic number: return (this.Angle << (sizeof(int) / 2)) | (ushort)this.Scale | this.ModelTypeIndex;  
Magic Number,ParticleFilterModelFitting,OpenHandTemplate,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\Model\OpenHandTemplate.cs,create,The following statement contains a magic number: for (int i = CardinalSpline.MIN_INDEX; i < (transformedPts.Count - 1 - CardinalSpline.MAX_INDEX_OFFSET); i++) {  	var intPt = transformedPts [i].Round ();  	var direction = CardinalSpline.NormalAt (transformedPts' CONTOUR_TENSION' i);  	var orientDeg = (int)Angle.ToDegrees (Math.Atan2 (direction.Y' direction.X));  	orientDeg = (int)Angle.NormalizeDegrees (orientDeg + 180);  	var feature = createFeature (intPt.X' intPt.Y' orientDeg);  	features.Add (feature);  }  
Magic Number,ParticleFilterModelFitting,OpenHandTemplate,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\Model\OpenHandTemplate.cs,create,The following statement contains a magic number: orientDeg = (int)Angle.NormalizeDegrees (orientDeg + 180);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,init,The following statement contains a magic number: particleFilter.CreateParticles (NUMBER_OF_PARTICLES' //particle count  ModelParticle.FromParameters' //convert arr => position (create from array)  new ISampleableDistribution<double>[]//position range   {  	//template type  	new UniformContinuousDistribution (0' ModelRepository.PrototypeCount - 1)'  	//scale  	new UniformContinuousDistribution (70' 150)'  	//rotation  	new UniformContinuousDistribution (-15' 15)  });  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,init,The following statement contains a magic number: particleFilter.CreateParticles (NUMBER_OF_PARTICLES' //particle count  ModelParticle.FromParameters' //convert arr => position (create from array)  new ISampleableDistribution<double>[]//position range   {  	//template type  	new UniformContinuousDistribution (0' ModelRepository.PrototypeCount - 1)'  	//scale  	new UniformContinuousDistribution (70' 150)'  	//rotation  	new UniformContinuousDistribution (-15' 15)  });  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,init,The following statement contains a magic number: particleFilter.CreateParticles (NUMBER_OF_PARTICLES' //particle count  ModelParticle.FromParameters' //convert arr => position (create from array)  new ISampleableDistribution<double>[]//position range   {  	//template type  	new UniformContinuousDistribution (0' ModelRepository.PrototypeCount - 1)'  	//scale  	new UniformContinuousDistribution (70' 150)'  	//rotation  	new UniformContinuousDistribution (-15' 15)  });  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,init,The following statement contains a magic number: particleFilter.CreateParticles (NUMBER_OF_PARTICLES' //particle count  ModelParticle.FromParameters' //convert arr => position (create from array)  new ISampleableDistribution<double>[]//position range   {  	//template type  	new UniformContinuousDistribution (0' ModelRepository.PrototypeCount - 1)'  	//scale  	new UniformContinuousDistribution (70' 150)'  	//rotation  	new UniformContinuousDistribution (-15' 15)  });  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,update,The following statement contains a magic number: foreach (var m in bestGroup.Detections) {  	var particle = (ModelParticle)m.Template;  	var score = (m.Score / 100) * (particle.Size.Width * particle.Size.Height * scaleFactor);  	//actual score multiplied with size factor (the bigger the better)  	m.Score = score;  	if (particle.Weight < score)//1 particle may correspond to several matches  	 {  		particle.Weight = score;  		particle.MetaDataRef = new WeakReference<Match> (m);  		//avoid circular reference (template inside match is particle again)  	}  }  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,processFrame,The following statement contains a magic number: if (metaData != null) {  	//img.Draw(p.MetaData' new Bgr(Color.Blue)' 1);  	img.Draw (metaData.Points.ToArray ()' Bgr<byte>.Blue' 3);  	img.DrawAnnotation (metaData.BoundingRect' text' DotImaging.Font.Small);  }  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,processFrame,The following statement contains a magic number: img.Draw (metaData.Points.ToArray ()' Bgr<byte>.Blue' 3);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,videoCapture_ProcessFrame,The following statement contains a magic number: frame.Draw ("Processed: " + /*matchTimeMs*/elapsedMs + " ms"' DotImaging.Font.Small' new Point (25' 20)' Bgr<byte>.Red);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,videoCapture_ProcessFrame,The following statement contains a magic number: frame.Draw ("Processed: " + /*matchTimeMs*/elapsedMs + " ms"' DotImaging.Font.Small' new Point (25' 20)' Bgr<byte>.Red);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,drawTemplatesToFiles,The following statement contains a magic number: foreach (var pair in dict) {  	var mParams = pair.Key;  	var fileName = String.Format ("template_{0}_scale{1}_angle_{2}.bmp"' mParams.ModelTypeIndex' mParams.Scale' mParams.Angle);  	fileName = Path.Combine (path' fileName);  	var template = pair.Value;  	var img = new Bgr<byte>[template.Size.Height + 2 * BORDER_OFFSET' template.Size.Width + 2 * BORDER_OFFSET];  	img.Draw (template.Features.Select (x => new Point (x.X + BORDER_OFFSET' x.Y + BORDER_OFFSET)).ToArray ()' Bgr<byte>.Red' 3);  	img.Save (fileName);  }  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,drawTemplatesToFiles,The following statement contains a magic number: foreach (var pair in dict) {  	var mParams = pair.Key;  	var fileName = String.Format ("template_{0}_scale{1}_angle_{2}.bmp"' mParams.ModelTypeIndex' mParams.Scale' mParams.Angle);  	fileName = Path.Combine (path' fileName);  	var template = pair.Value;  	var img = new Bgr<byte>[template.Size.Height + 2 * BORDER_OFFSET' template.Size.Width + 2 * BORDER_OFFSET];  	img.Draw (template.Features.Select (x => new Point (x.X + BORDER_OFFSET' x.Y + BORDER_OFFSET)).ToArray ()' Bgr<byte>.Red' 3);  	img.Save (fileName);  }  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,drawTemplatesToFiles,The following statement contains a magic number: foreach (var pair in dict) {  	var mParams = pair.Key;  	var fileName = String.Format ("template_{0}_scale{1}_angle_{2}.bmp"' mParams.ModelTypeIndex' mParams.Scale' mParams.Angle);  	fileName = Path.Combine (path' fileName);  	var template = pair.Value;  	var img = new Bgr<byte>[template.Size.Height + 2 * BORDER_OFFSET' template.Size.Width + 2 * BORDER_OFFSET];  	img.Draw (template.Features.Select (x => new Point (x.X + BORDER_OFFSET' x.Y + BORDER_OFFSET)).ToArray ()' Bgr<byte>.Red' 3);  	img.Save (fileName);  }  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,drawTemplatesToFiles,The following statement contains a magic number: img.Draw (template.Features.Select (x => new Point (x.X + BORDER_OFFSET' x.Y + BORDER_OFFSET)).ToArray ()' Bgr<byte>.Red' 3);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.Margin = new System.Windows.Forms.Padding (2);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.Size = new System.Drawing.Size (410' 298);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.Size = new System.Drawing.Size (410' 298);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox.TabIndex = 2;  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (410' 298);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (410' 298);  
Magic Number,ParticleFilterModelFitting,ParticleFilterModelFittingDemo,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\ParticleFilterModelFittingDemo.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding (2);  
Magic Number,MoreCollections,CircularList,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\MoreCollections\CiruclarList.cs,translateRange,The following statement contains a magic number: if (realIdxB < this.Count && realIdxA <= realIdxB) {  	segmentIndeces = new int[1];  	segmentIndeces [0] = realIdxA;  	segmentLengths = new int[1];  	segmentLengths [0] = realIdxB - realIdxA + 1;  } else {  	segmentIndeces = new int[2];  	segmentIndeces [0] = realIdxA;  	segmentIndeces [1] = 0;  	segmentLengths = new int[2];  	segmentLengths [0] = this.Count - realIdxA;  	segmentLengths [1] = realIdxB;  }  
Magic Number,MoreCollections,CircularList,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\MoreCollections\CiruclarList.cs,translateRange,The following statement contains a magic number: if (realIdxB < this.Count && realIdxA <= realIdxB) {  	segmentIndeces = new int[1];  	segmentIndeces [0] = realIdxA;  	segmentLengths = new int[1];  	segmentLengths [0] = realIdxB - realIdxA + 1;  } else {  	segmentIndeces = new int[2];  	segmentIndeces [0] = realIdxA;  	segmentIndeces [1] = 0;  	segmentLengths = new int[2];  	segmentLengths [0] = this.Count - realIdxA;  	segmentLengths [1] = realIdxB;  }  
Magic Number,MoreCollections,CircularList,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\MoreCollections\CiruclarList.cs,translateRange,The following statement contains a magic number: segmentIndeces = new int[2];  
Magic Number,MoreCollections,CircularList,F:\newReposMay17\dajuric_accord-net-extensions\Samples\Math\ParticleFilterSamples\ParticleFilterModelFittingDemo\MoreCollections\CiruclarList.cs,translateRange,The following statement contains a magic number: segmentLengths = new int[2];  
