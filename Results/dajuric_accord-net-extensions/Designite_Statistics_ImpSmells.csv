Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,checkPrerequisites,Cyclomatic complexity of the method is 11
Long Parameter List,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,updateProbabilityAssociationMatrix,The method has 7 parameters. Parameters: probsZX' detectionProbability' falseAlarmProbability' usedElem' assocProbMat' assocSum' numCalls
Long Parameter List,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,calculateZXMatrix,The method has 5 parameters. Parameters: particleFilters' measurements' likelihoodFunc' probsZX' considerAssociation
Long Parameter List,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,Update,The method has 7 parameters. Parameters: particleFilters' measurements' likelihoodFunc' resample' detectionProbability' falseAlarmProbability' considerAssociation
Long Parameter List,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,KalmanFilter,The method has 7 parameters. Parameters: initialState' initialStateError' measurementVectorDimension' controlVectorDimension' stateConvertFunc' stateConvertBackFunc' measurementConvertFunc
Long Parameter List,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,initalize,The method has 7 parameters. Parameters: initialState' initialStateError' measurementVectorDimension' controlVectorDimension' stateConvertFunc' stateConvertBackFunc' measurementConvertFunc
Long Parameter List,Accord.Extensions.Statistics.Filters,DiscreteKalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\DiscreteKalmanFilter.cs,DiscreteKalmanFilter,The method has 7 parameters. Parameters: initialState' initialStateError' measurementVectorDimension' controlVectorDimension' stateConvertFunc' stateConvertBackFunc' measurementConvertFunc
Long Parameter List,Accord.Extensions.Statistics,NthOrderStatisticExtensions,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\NthOrderStatistic.cs,GetNthSmallest,The method has 5 parameters. Parameters: list' n' start' end' rnd
Long Parameter List,Accord.Extensions.Statistics,RunningVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningVariance.cs,UpdateVarianceIncremental,The method has 5 parameters. Parameters: prevAverage' average' prevVariance' nSamples' sample
Long Parameter List,Accord.Extensions.Statistics,RunningVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningVariance.cs,UpdateVarianceDecremental,The method has 5 parameters. Parameters: postAverage' average' postVariance' nSamples' sample
Long Parameter List,Accord.Extensions.Statistics,RunningVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningVariance.cs,UpdateVarianceIncremental,The method has 5 parameters. Parameters: prevAverage' average' prevVariance' nSamples' sample
Long Parameter List,Accord.Extensions.Statistics,RunningVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningVariance.cs,UpdateVarianceDecremental,The method has 5 parameters. Parameters: postAverage' average' postVariance' nSamples' sample
Long Parameter List,Accord.Extensions.Statistics,RunningWeightedVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningWeightedVariance.cs,UpdateVarianceIncremental,The method has 5 parameters. Parameters: SSE' sumWeight' mean' sample' weight
Long Parameter List,Accord.Extensions.Statistics,RunningWeightedVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningWeightedVariance.cs,UpdateVarianceDecremental,The method has 5 parameters. Parameters: SSE' sumWeight' mean' sample' weight
Long Parameter List,Accord.Extensions.Statistics,RunningWeightedVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningWeightedVariance.cs,UpdateVarianceSumIncremental,The method has 5 parameters. Parameters: SSE' sumWeight' mean' sample' weight
Long Parameter List,Accord.Extensions.Statistics,RunningWeightedVariance,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\RunningStatistics\RunningWeightedVariance.cs,UpdateVarianceSumDecremental,The method has 5 parameters. Parameters: SSE' sumWeight' mean' sample' weight
Long Identifier,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,AddFilters,The length of the parameter minMarginalMeasurementlProbability is 34.
Long Identifier,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,AddFilters,The length of the parameter minMarginalMeasurementlProbability is 34.
Long Identifier,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,addFilters,The length of the parameter minMarginalMeasurementlProbability is 34.
Long Identifier,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,addFilters,The length of the parameter minMarginalMeasurementlProbability is 34.
Long Identifier,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,AddFilters,The length of the parameter minMarginalMeasurementlProbability is 34.
Long Identifier,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,AddFilters,The length of the parameter minMarginalMeasurementlProbability is 34.
Long Statement,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,calculateZXMatrix,The length of the statement  "                        probsZX[mIdx' tIdx] = mvnPDF.ProbabilityDensityFunction(delta) * mulCorrectionFactor; //modification (added mul correction factor) " is 130.
Long Statement,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,updateProbabilityAssociationMatrix,The length of the statement  "            probability *= System.Math.Pow(detectionProbability' nDetections) * System.Math.Pow(1 - detectionProbability' nTracks - nDetections); " is 133.
Long Statement,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,checkPrerequisites,The length of the statement  "            if (this.TransitionMatrix.RowCount() != this.StateVectorDimension || this.TransitionMatrix.ColumnCount() != this.StateVectorDimension) " is 134.
Long Statement,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,checkPrerequisites,The length of the statement  "            if (this.ControlMatrix != null && (this.ControlMatrix.RowCount() != this.StateVectorDimension || this.ControlMatrix.ColumnCount() != this.ControlVectorDimension)) " is 162.
Long Statement,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,checkPrerequisites,The length of the statement  "            if (this.MeasurementMatrix.RowCount() != this.MeasurementVectorDimension || this.MeasurementMatrix.ColumnCount() != this.StateVectorDimension) " is 142.
Long Statement,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,checkPrerequisites,The length of the statement  "            if (this.ProcessNoise.RowCount() != this.StateVectorDimension || this.ProcessNoise.ColumnCount() != this.StateVectorDimension) " is 126.
Long Statement,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,checkPrerequisites,The length of the statement  "            if (this.MeasurementNoise.RowCount() != this.MeasurementVectorDimension || this.MeasurementNoise.ColumnCount() != this.MeasurementVectorDimension) " is 146.
Long Statement,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,CalculateEntropy,The length of the statement  "            double entropy = (float)stateVectorDim / 2 * System.Math.Log(4 * System.Math.PI) + (float)1 / 2 * System.Math.Log(errorCovDet); " is 127.
Long Statement,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,GetEllipse,The length of the statement  "            var measurementErrorCov = positionSelectionMatrix.Multiply(this.EstimateCovariance).Multiply(positionSelectionMatrix.Transpose()); " is 130.
Long Statement,Accord.Extensions.Statistics.Filters,DiscreteKalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\DiscreteKalmanFilter.cs,predictInternal,The length of the statement  "           this.EstimateCovariance = this.TransitionMatrix.Multiply(this.EstimateCovariance).Multiply(this.TransitionMatrix.Transpose()).Add(this.ProcessNoise); " is 149.
Long Statement,Accord.Extensions.Statistics.Filters,DiscreteKalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\DiscreteKalmanFilter.cs,predictInternal,The length of the statement  "           this.ResidualCovariance = this.MeasurementMatrix.Multiply(this.EstimateCovariance).Multiply(measurementMatrixTransponsed).Add(this.MeasurementNoise); " is 149.
Long Statement,Accord.Extensions.Statistics.Filters,DiscreteKalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\DiscreteKalmanFilter.cs,correct,The length of the statement  "            this.EstimateCovariance = (identity.Subtract(this.KalmanGain.Multiply(this.MeasurementMatrix))).Multiply(this.EstimateCovariance.Transpose()); " is 142.
Long Statement,Accord.Extensions.Statistics.Filters,DiscreteKalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\DiscreteKalmanFilter.cs,Correct,The length of the statement  "                throw new ArgumentException("Innovation matrix must have the same dimensions and the dimension must be equal to the measurement vector length."); " is 145.
Empty Catch Block,Accord.Extensions.Statistics.Filters,EntropyTrackerRemoval,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\EntropyManagement\EntropyTrackerRemoval.cs,Remove,The method has an empty catch block.
Magic Number,Accord.Extensions.Statistics.Filters,PerspectiveProjection2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\PerspectiveProjection2DModel.cs,FromArray,The following statement contains a magic number: return new PerspectiveProjection2DModel              {                  ImagePosition = new PointF                  {                      X = (float)arr[0]'                      Y = (float)arr[1]                  }'                  ImageObjectWidth = arr[2]'                  Velocity = arr[3]              };
Magic Number,Accord.Extensions.Statistics.Filters,PerspectiveProjection2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\PerspectiveProjection2DModel.cs,FromArray,The following statement contains a magic number: return new PerspectiveProjection2DModel              {                  ImagePosition = new PointF                  {                      X = (float)arr[0]'                      Y = (float)arr[1]                  }'                  ImageObjectWidth = arr[2]'                  Velocity = arr[3]              };
Magic Number,Accord.Extensions.Statistics.Filters,JPDAF,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\TrackAssociation\JPDAF\JPDAF.Kalman.cs,calculateAssciationProbabilities,The following statement contains a magic number: System.Math.Abs(assocSum) > 2 * Double.Epsilon
Magic Number,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,CalculateEntropy,The following statement contains a magic number: double entropy = (float)stateVectorDim / 2 * System.Math.Log(4 * System.Math.PI) + (float)1 / 2 * System.Math.Log(errorCovDet);
Magic Number,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,CalculateEntropy,The following statement contains a magic number: double entropy = (float)stateVectorDim / 2 * System.Math.Log(4 * System.Math.PI) + (float)1 / 2 * System.Math.Log(errorCovDet);
Magic Number,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,CalculateEntropy,The following statement contains a magic number: double entropy = (float)stateVectorDim / 2 * System.Math.Log(4 * System.Math.PI) + (float)1 / 2 * System.Math.Log(errorCovDet);
Magic Number,Accord.Extensions.Statistics.Filters,KalmanFilter<TState;TMeasurement>,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\Kalman\Base\KalmanFilter.cs,GetEllipse,The following statement contains a magic number: var chiSquare = new ChiSquareDistribution(2).InverseDistributionFunction(confidence);
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,GetTransitionMatrix,The following statement contains a magic number: var a = 1/2f * t * t;
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,GetProcessNoise,The following statement contains a magic number: var G = new double[']               {                   {(dt * dt * dt) / 6' 0}'                  {(dt * dt) / 2' 0}'                  {dt' 0}'                    {0' (dt * dt * dt) / 6}'                  {0' (dt * dt) / 2}'                  {dt' 0}              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,GetProcessNoise,The following statement contains a magic number: var G = new double[']               {                   {(dt * dt * dt) / 6' 0}'                  {(dt * dt) / 2' 0}'                  {dt' 0}'                    {0' (dt * dt * dt) / 6}'                  {0' (dt * dt) / 2}'                  {dt' 0}              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,GetProcessNoise,The following statement contains a magic number: var G = new double[']               {                   {(dt * dt * dt) / 6' 0}'                  {(dt * dt) / 2' 0}'                  {dt' 0}'                    {0' (dt * dt * dt) / 6}'                  {0' (dt * dt) / 2}'                  {dt' 0}              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,GetProcessNoise,The following statement contains a magic number: var G = new double[']               {                   {(dt * dt * dt) / 6' 0}'                  {(dt * dt) / 2' 0}'                  {dt' 0}'                    {0' (dt * dt * dt) / 6}'                  {0' (dt * dt) / 2}'                  {dt' 0}              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,FromArray,The following statement contains a magic number: return new ConstantAcceleration2DModel              {                  Position = new PointF((float)arr[0]' (float)arr[3])'                  Velocity = new PointF((float)arr[1]' (float)arr[4])'                  Acceleration = new PointF((float)arr[2]' (float)arr[5])              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,FromArray,The following statement contains a magic number: return new ConstantAcceleration2DModel              {                  Position = new PointF((float)arr[0]' (float)arr[3])'                  Velocity = new PointF((float)arr[1]' (float)arr[4])'                  Acceleration = new PointF((float)arr[2]' (float)arr[5])              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,FromArray,The following statement contains a magic number: return new ConstantAcceleration2DModel              {                  Position = new PointF((float)arr[0]' (float)arr[3])'                  Velocity = new PointF((float)arr[1]' (float)arr[4])'                  Acceleration = new PointF((float)arr[2]' (float)arr[5])              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantAcceleration2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantAcceleration2DModel.cs,FromArray,The following statement contains a magic number: return new ConstantAcceleration2DModel              {                  Position = new PointF((float)arr[0]' (float)arr[3])'                  Velocity = new PointF((float)arr[1]' (float)arr[4])'                  Acceleration = new PointF((float)arr[2]' (float)arr[5])              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantVelocity2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantVelocity2DModel.cs,GetProcessNoise,The following statement contains a magic number: var G = new double[']               {                   {(dt*dt) / 2' 0}'                  {dt' 0}'                  {0' (dt*dt) / 2}'                  {0' dt}              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantVelocity2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantVelocity2DModel.cs,GetProcessNoise,The following statement contains a magic number: var G = new double[']               {                   {(dt*dt) / 2' 0}'                  {dt' 0}'                  {0' (dt*dt) / 2}'                  {0' dt}              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantVelocity2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantVelocity2DModel.cs,FromArray,The following statement contains a magic number: return new ConstantVelocity2DModel              {                  Position = new PointF((float)arr[0]' (float)arr[2])'                  Velocity = new PointF((float)arr[1]' (float)arr[3])'              };
Magic Number,Accord.Extensions.Statistics.Filters,ConstantVelocity2DModel,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\MotionModels\ConstantVelocity2DModel.cs,FromArray,The following statement contains a magic number: return new ConstantVelocity2DModel              {                  Position = new PointF((float)arr[0]' (float)arr[2])'                  Velocity = new PointF((float)arr[1]' (float)arr[3])'              };
Magic Number,Accord.Extensions.Statistics.Filters,ParticleFilter,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\ParticleFilter\ParticleFilter.cs,CalculateEntropy,The following statement contains a magic number: var dKrnl = 4;
Magic Number,Accord.Extensions.Statistics.Filters,ParticleFilter,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\ParticleFilter\ParticleFilter.cs,CalculateEntropy,The following statement contains a magic number: var eKrnl = 1 / (4 + dKrnl);
Magic Number,Accord.Extensions.Statistics.Filters,ParticleFilter,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\ParticleFilter\ParticleFilter.cs,CalculateEntropy,The following statement contains a magic number: var hKrnl = System.Math.Pow(4 / (dKrnl + 2)' eKrnl) * System.Math.Pow(nParticles' -eKrnl);
Magic Number,Accord.Extensions.Statistics.Filters,ParticleFilter,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\ParticleFilter\ParticleFilter.cs,CalculateEntropy,The following statement contains a magic number: var hKrnl = System.Math.Pow(4 / (dKrnl + 2)' eKrnl) * System.Math.Pow(nParticles' -eKrnl);
Magic Number,Accord.Extensions.Statistics.Filters,ParticleFilter,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Filters\ParticleFilter\ParticleFilter.cs,CalculateEntropy,The following statement contains a magic number: var normalDistribution = new MultivariateNormalDistribution(mean' kernel.Multiply(2));
Magic Number,Accord.Extensions.Statistics,MedianExtensions,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Median.cs,Median,The following statement contains a magic number: return list.GetNthSmallest((list.Count - 1) / 2);
Magic Number,Accord.Extensions.Statistics,MedianExtensions,D:\research\architectureSmells\repos\dajuric_accord-net-extensions\Source\Math\Statistics\Median.cs,MedianBy,The following statement contains a magic number: return sortedColelction.ElementAt(collection.Count / 2);
