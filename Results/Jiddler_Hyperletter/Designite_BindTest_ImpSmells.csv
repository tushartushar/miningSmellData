Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BindTest,BindProgram,D:\research\architectureSmells\repos\Jiddler_Hyperletter\Samples\BindTest\BindProgram.cs,Main,The length of the statement  "                        Console.WriteLine("Received: " + received + " in " + stopwatch.ElapsedMilliseconds + " ms" + ". " + (received/stopwatch.ElapsedMilliseconds) + " letter/millisecond"); " is 166.
Long Statement,BindTest,BindProgram,D:\research\architectureSmells\repos\Jiddler_Hyperletter\Samples\BindTest\BindProgram.cs,Main,The length of the statement  "                        hyperSocket.Send(new Letter {Type = LetterType.User' Options = LetterOptions.Multicast' Parts = new[] {new[] {(byte) 'A'}}}); " is 125.
Magic Number,BindTest,BindProgram,D:\research\architectureSmells\repos\Jiddler_Hyperletter\Samples\BindTest\BindProgram.cs,Main,The following statement contains a magic number: var options = new SocketOptions { ShutdownGrace = TimeSpan.FromMilliseconds(250) };
Magic Number,BindTest,BindProgram,D:\research\architectureSmells\repos\Jiddler_Hyperletter\Samples\BindTest\BindProgram.cs,Main,The following statement contains a magic number: hyperSocket.Sent += (letter' args) => {                  lock(SyncRoot) {                      sent++;                      if(sent%1000 == 0)                          Console.WriteLine("->" + sent);                  }              };
Magic Number,BindTest,BindProgram,D:\research\architectureSmells\repos\Jiddler_Hyperletter\Samples\BindTest\BindProgram.cs,Main,The following statement contains a magic number: hyperSocket.Received += (letter' args) => {                  lock(SyncRoot) {                      if(received == 0)                          stopwatch.Restart();                      received++;                        if(received%20000 == 0)                          Console.WriteLine("<-" + received);                      if(received%100000 == 0) {                          Console.WriteLine("Received: " + received + " in " + stopwatch.ElapsedMilliseconds + " ms" + ". " + (received/stopwatch.ElapsedMilliseconds) + " letter/millisecond");                          received = 0;                      }                  }              };
Magic Number,BindTest,BindProgram,D:\research\architectureSmells\repos\Jiddler_Hyperletter\Samples\BindTest\BindProgram.cs,Main,The following statement contains a magic number: hyperSocket.Received += (letter' args) => {                  lock(SyncRoot) {                      if(received == 0)                          stopwatch.Restart();                      received++;                        if(received%20000 == 0)                          Console.WriteLine("<-" + received);                      if(received%100000 == 0) {                          Console.WriteLine("Received: " + received + " in " + stopwatch.ElapsedMilliseconds + " ms" + ". " + (received/stopwatch.ElapsedMilliseconds) + " letter/millisecond");                          received = 0;                      }                  }              };
Magic Number,BindTest,BindProgram,D:\research\architectureSmells\repos\Jiddler_Hyperletter\Samples\BindTest\BindProgram.cs,Main,The following statement contains a magic number: Thread.Sleep(500);
