Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Daemaged.NTP,NtpPacket,C:\repos\damageboy_daemaged.ntp\NtpPacket.cs,SetBits,The length of the statement  "		throw new ArgumentException (string.Format ("Value {0} won't fit into {1} bits - maximum is {2}."' v' length' mask)' "v"); " is 122.
Long Statement,Daemaged.NTP,NtpPacket,C:\repos\damageboy_daemaged.ntp\NtpPacket.cs,UpdateData,The length of the statement  "		throw new ArgumentException (string.Format ("Data length ({0}) must be equal to the length parameter value ({1})."' d.Length' length)); " is 135.
Magic Number,Daemaged.NTP,NtpTimeKeeper,C:\repos\damageboy_daemaged.ntp\NtpTimeKeeper.cs,NtpTimeKeeper,The following statement contains a magic number: Timeout = 3000;  
Magic Number,Daemaged.NTP,NtpTimeKeeper,C:\repos\damageboy_daemaged.ntp\NtpTimeKeeper.cs,NtpTimeKeeper,The following statement contains a magic number: PollingTime = 60;  
Magic Number,Daemaged.NTP,NtpTimeKeeper,C:\repos\damageboy_daemaged.ntp\NtpTimeKeeper.cs,StartAutoSync,The following statement contains a magic number: _ntp = new Ntp (NtpHost) {  	VersionNumber = 4'  	Timeout = Timeout  };  
Magic Number,Daemaged.NTP,NtpTimeKeeper,C:\repos\damageboy_daemaged.ntp\NtpTimeKeeper.cs,StartAutoSync,The following statement contains a magic number: _sleepPeriod = PollingTime * 1000;  
Magic Number,Daemaged.NTP,Ntp,C:\repos\damageboy_daemaged.ntp\Ntp.cs,Ntp,The following statement contains a magic number: _timeout = 30000;  
Magic Number,Daemaged.NTP,Ntp,C:\repos\damageboy_daemaged.ntp\Ntp.cs,Ntp,The following statement contains a magic number: _versionNumber = 3;  
Magic Number,Daemaged.NTP,Ntp,C:\repos\damageboy_daemaged.ntp\Ntp.cs,ToEndPoint,The following statement contains a magic number: if (!match.Success || (match.Groups.Count != 5)) {  	return null;  }  
Magic Number,Daemaged.NTP,Ntp,C:\repos\damageboy_daemaged.ntp\Ntp.cs,ToEndPoint,The following statement contains a magic number: for (var i = 0; i < 4; i++) {  	var tmp = uint.Parse (match.Groups [i + 1].Value);  	if (tmp > 0xff) {  		return null;  	}  	ip |= tmp << (8 * i);  }  
Magic Number,Daemaged.NTP,Ntp,C:\repos\damageboy_daemaged.ntp\Ntp.cs,ToEndPoint,The following statement contains a magic number: for (var i = 0; i < 4; i++) {  	var tmp = uint.Parse (match.Groups [i + 1].Value);  	if (tmp > 0xff) {  		return null;  	}  	ip |= tmp << (8 * i);  }  
Magic Number,Daemaged.NTP,Ntp,C:\repos\damageboy_daemaged.ntp\Ntp.cs,ToEndPoint,The following statement contains a magic number: ip |= tmp << (8 * i);  
Magic Number,Daemaged.NTP,NtpPacket,C:\repos\damageboy_daemaged.ntp\NtpPacket.cs,CheckPlacement,The following statement contains a magic number: if ((offset + length) > 8)  	throw new ArgumentException ("Invalid offset/length.");  
Magic Number,Daemaged.NTP,NtpPacket,C:\repos\damageboy_daemaged.ntp\NtpPacket.cs,CopyTimestampToData,The following statement contains a magic number: UpdateData (ts.ToArray ()' index' 8);  
Magic Number,Daemaged.NTP,NtpPacket,C:\repos\damageboy_daemaged.ntp\NtpPacket.cs,GetReferenceIdentifier,The following statement contains a magic number: return DuplicateData (INDEX_REFERENCE_IDENTIFIER' 4);  
Magic Number,Daemaged.NTP,NtpPacket,C:\repos\damageboy_daemaged.ntp\NtpPacket.cs,GetRootDelay,The following statement contains a magic number: return DuplicateData (INDEX_ROOT_DELAY' 4);  
Magic Number,Daemaged.NTP,NtpPacket,C:\repos\damageboy_daemaged.ntp\NtpPacket.cs,GetRootDispersion,The following statement contains a magic number: return DuplicateData (INDEX_ROOT_DISPERSION' 4);  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,NtpTimestamp,The following statement contains a magic number: _timestamp = (ntpSecs << 32) | ntpFrac;  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,ToArray,The following statement contains a magic number: for (var i = 7; i >= 0; i--) {  	var x = timestamp / 256;  	buffer [i] = (byte)(timestamp - (256 * x));  	timestamp = x;  }  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,ToArray,The following statement contains a magic number: for (var i = 7; i >= 0; i--) {  	var x = timestamp / 256;  	buffer [i] = (byte)(timestamp - (256 * x));  	timestamp = x;  }  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,ToArray,The following statement contains a magic number: for (var i = 7; i >= 0; i--) {  	var x = timestamp / 256;  	buffer [i] = (byte)(timestamp - (256 * x));  	timestamp = x;  }  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,ToArray,The following statement contains a magic number: buffer [i] = (byte)(timestamp - (256 * x));  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,GetScaledFraction,The following statement contains a magic number: return (int)(GetFraction () * scale >> 32);  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,GetNumber,The following statement contains a magic number: for (var i = 0; i < 4; i++)  	x = (256 * x) + data [offset + i];  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,GetNumber,The following statement contains a magic number: for (var i = 0; i < 4; i++)  	x = (256 * x) + data [offset + i];  
Magic Number,Daemaged.NTP,NtpTimestamp,C:\repos\damageboy_daemaged.ntp\NtpTimestamp.cs,GetNumber,The following statement contains a magic number: x = (256 * x) + data [offset + i];  
Magic Number,Daemaged.NTP,NtpTimestampDifference,C:\repos\damageboy_daemaged.ntp\NtpTimestampDifference.cs,ToTicks,The following statement contains a magic number: if (_difference >= 0L) {  	unixDiff = (ulong)(_difference >> 32);  }  else  	unixDiff = (ulong)(-_difference >> 32);  
Magic Number,Daemaged.NTP,NtpTimestampDifference,C:\repos\damageboy_daemaged.ntp\NtpTimestampDifference.cs,ToTicks,The following statement contains a magic number: if (_difference >= 0L) {  	unixDiff = (ulong)(_difference >> 32);  }  else  	unixDiff = (ulong)(-_difference >> 32);  
Magic Number,Daemaged.NTP,NtpTimestampDifference,C:\repos\damageboy_daemaged.ntp\NtpTimestampDifference.cs,ToTicks,The following statement contains a magic number: unixDiff = (ulong)(_difference >> 32);  
Magic Number,Daemaged.NTP,NtpTimestampDifference,C:\repos\damageboy_daemaged.ntp\NtpTimestampDifference.cs,ToTicks,The following statement contains a magic number: unixDiff = (ulong)(-_difference >> 32);  
Magic Number,Daemaged.NTP,NtpTimestampDifference,C:\repos\damageboy_daemaged.ntp\NtpTimestampDifference.cs,ToTicks,The following statement contains a magic number: ticks += (long)((fraction * NtpTimestamp.TickToSecScale) >> 32);  
Magic Number,Daemaged.NTP,NtpTimestampDifference,C:\repos\damageboy_daemaged.ntp\NtpTimestampDifference.cs,GetScaledFraction,The following statement contains a magic number: return (int)(GetFraction () * scale >> 32);  
Missing Default,Daemaged.NTP,Ntp,C:\repos\damageboy_daemaged.ntp\Ntp.cs,ReceiveFrom,The following switch statement is missing a default case: switch ((SocketError)nativeErrorCode) {  case SocketError.ConnectionReset:  	throw new NtpException ("No time server at the specified address."' exception);  case SocketError.TimedOut:  	throw new NtpException (string.Format ("Request timed out - no answer in {0} ms."' _timeout)' exception);  }  
