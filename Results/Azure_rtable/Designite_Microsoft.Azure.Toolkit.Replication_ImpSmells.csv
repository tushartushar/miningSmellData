Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairRowInternal,The method has 124 lines of code.
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEtwLogger,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEtwLogger.cs,LogMessage,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Azure.Toolkit.Replication,TypeSystem,F:\newReposMay17\Azure_rtable\library\ReplicatedTableQueryProvider.cs,FindIEnumerable,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,FindMajority,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,Execute,Cyclomatic complexity of the method is 24
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformOp,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformUpdateBatchOp,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,PostProcessBatchExec,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveBatch,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,Retrieve,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ReplaceInternal,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveInternal,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertUpdateOrDeleteRow,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairTable,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushRecoveryBatch,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairRowInternal,Cyclomatic complexity of the method is 21
Long Parameter List,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,DynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,DynamicReplicatedTableEntity,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,IReplicatedTableConfigurationParser,F:\newReposMay17\Azure_rtable\library\IReplicatedTableConfigurationParser.cs,ParseBlob,The method has 6 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationManager,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationManager.cs,ReplicatedTableConfigurationManager,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationParser,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationParser.cs,ParseBlob,The method has 6 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationStoreParser,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationStoreParser.cs,ParseBlob,The method has 6 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformOp,The method has 8 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformUpdateBatchOp,The method has 7 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,Flush2PCBatch,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,MergeInternal,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ReplaceInternal,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertInternal,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveInternal,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RetrieveFromReplica,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,Flush2PC,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushPreparePhase,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushCommitPhase,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertUpdateOrDeleteRow,The method has 6 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatch,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The method has 6 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushRecoveryBatch,The method has 9 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The method has 5 parameters.
Long Parameter List,Microsoft.Azure.Toolkit.Replication,ReplicatedTableV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableV2.cs,ConvertXStoreTable,The method has 5 parameters.
Long Identifier,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,GetBlockBlob,The length of the parameter configurationStorageConnectionString is 36.
Long Identifier,Microsoft.Azure.Toolkit.Replication,ConfigurationStoreLocationInfo,F:\newReposMay17\Azure_rtable\library\ConfigurationStoreLocationInfo.cs,ConfigurationStoreLocationInfo,The length of the parameter storageAccountConnectionString is 30.
Long Identifier,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ReplicatedTable,The length of the parameter replicatedTableConfigurationAgent is 33.
Long Identifier,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ReplicatedTable,The length of the parameter replicatedTableConfigurationAgent is 33.
Long Identifier,Microsoft.Azure.Toolkit.Replication,ReplicatedTableV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableV2.cs,ReplicatedTableV2,The length of the parameter replicatedTableConfigurationAgent is 33.
Long Identifier,Microsoft.Azure.Toolkit.Replication,StopWatchInternal,F:\newReposMay17\Azure_rtable\library\StopWatchInternal.cs,StopWatchInternal,The length of the parameter replicatedTableConfigurationWrapper is 35.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEventListener,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEventListener.cs,OnEventWritten,The length of the statement  "	this.traceSource.TraceEvent (GetEventTypeFromEventLevel (eventData.Level)' EventIdOffSet + (eventData.EventId)' string.Format ("[{0}][{1}] {2}"' LogPrefix' DateTime.Now' msg)); " is 176.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableQueryProvider,F:\newReposMay17\Azure_rtable\library\ReplicatedTableQueryProvider.cs,CreateQuery,The length of the statement  "		return (IQueryable)Activator.CreateInstance (typeof(ReplicatedTableQuery<>).MakeGenericType (elementType)' new object[] { " is 121.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryReadBlobQuorum,The length of the statement  "	List<ReplicatedTableReadBlobResult> resultArray = TryReadAllBlobs (blobs' out valuesArray' out eTagsArray' ParseBlobFunc); " is 122.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryReadBlobQuorum,The length of the statement  "	ReplicatedTableQuorumReadResult majority = FindMajority (resultArray.AsReadOnly ()' valuesArray.AsReadOnly ()' out quorumIndex); " is 128.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryReadBlobQuorumFast,The length of the statement  "		if (majority.Code == ReplicatedTableQuorumReadCode.NotFound || majority.Code == ReplicatedTableQuorumReadCode.UpdateInProgress || majority.Code == ReplicatedTableQuorumReadCode.Exception || majority.Code == ReplicatedTableQuorumReadCode.Success) { " is 247.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,The length of the statement  "	List<ReplicatedTableReadBlobResult> resultArray = TryReadAllBlobs (blobs' out valuesArray' out eTagsArray' ParseBlobFunc); " is 122.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,The length of the statement  "	ReplicatedTableQuorumReadResult majority = FindMajority (resultArray.AsReadOnly ()' valuesArray.AsReadOnly ()' out quorumIndex); " is 128.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,The length of the statement  "		return new ReplicatedTableQuorumWriteResult (ReplicatedTableQuorumWriteCode.ConflictDueToUpdateInProgress' readDetails); " is 120.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,The length of the statement  "		return new ReplicatedTableQuorumWriteResult (ReplicatedTableQuorumWriteCode.BlobsNotInSyncOrTransitioning' readDetails); " is 120.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,The length of the statement  "		return new ReplicatedTableQuorumWriteResult (ReplicatedTableQuorumWriteCode.Success' newConfId' writeResultArray.ToList ()); " is 124.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlobQuorum,The length of the statement  "	return new ReplicatedTableQuorumWriteResult (ReplicatedTableQuorumWriteCode.QuorumWriteFailure' writeResultArray.ToList ()); " is 124.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryUploadBlobs,The length of the statement  "	return new ReplicatedTableQuorumWriteResult (ReplicatedTableQuorumWriteCode.QuorumWriteFailure' writeResultArray.ToList ()); " is 124.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryWriteBlob,The length of the statement  "		AccessCondition condition = string.IsNullOrEmpty (eTag) ? AccessCondition.GenerateEmptyCondition () : AccessCondition.GenerateIfMatchCondition (eTag); " is 150.
Long Statement,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryCreateCloudTableClient,The length of the statement  "		ReplicatedTableLogger.LogError ("Error creating cloud table client: Connection string {0}. Exception: {1}"' "********"' e.Message); " is 131.
Long Statement,Microsoft.Azure.Toolkit.Replication,JsonStore,F:\newReposMay17\Azure_rtable\library\JsonStore.cs,Serialize,The length of the statement  "	// JSon converts a / forward slash into a \/ on serialization. That cannot be prevented. We need to remove it since svdgenerator does not work. " is 143.
Long Statement,Microsoft.Azure.Toolkit.Replication,JsonStore,F:\newReposMay17\Azure_rtable\library\JsonStore.cs,ConvertDoubleQuotesToSingleQuoteForXmlCompatibility,The length of the statement  "		string message = String.Format (CultureInfo.InvariantCulture' "Could not perform Json Serialization on {0} since it contains ' single-quote"' jsonString); " is 154.
Long Statement,Microsoft.Azure.Toolkit.Replication,JsonStore,F:\newReposMay17\Azure_rtable\library\JsonStore.cs,Deserialize,The length of the statement  "		string message = String.Format (CultureInfo.InvariantCulture' "Could not perform Json Deserialization on {0}"' jsonString); " is 123.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,RemoveView,The length of the statement  "		var msg = string.Format ("View:\'{0}\' is referenced by table:\'{1}\'! First' delete the table then the view."' viewName' table.TableName); " is 139.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,ThrowIfViewBreaksTableConstraint,The length of the statement  "		var msg = string.Format ("Table:\'{0}\' should not have a view:\'{1}\' with more than 1 replica since it is in Conversion mode!"' table.TableName' viewName); " is 157.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,ThrowIfViewIsMissing,The length of the statement  "	var msg = string.Format ("Table:\'{0}\' refers a missing view:\'{1}\'! First' create the view and then configure the table."' config.TableName' config.ViewName); " is 161.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,ThrowIfAnyPartitionViewIsMissing,The length of the statement  "			var msg = string.Format ("Table:\'{0}\' refers a missing partition view:\'{1}\'! First' create the view and then configure the table."' config.TableName' viewName); " is 164.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,ThrowIfViewHasManyReplicasInConversionMode,The length of the statement  "	var msg = string.Format ("Table:\'{0}\' refers a view:\'{1}\' with more than 1 replica while in Conversion mode!"' config.TableName' config.ViewName); " is 150.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,ThrowIfAnyPartitionViewHasManyReplicasInConversionMode,The length of the statement  "		var msg = string.Format ("Table:\'{0}\' refers a partition view:\'{1}\' with more than 1 replica while in Conversion mode!"' config.TableName' viewName); " is 153.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,ThrowIfPartitioningIsDisabledAndPartitionViewIsConfigured,The length of the statement  "		var msg = string.Format ("Table:\'{0}\' can't have a partition view while partitioning is disabled!"' config.TableName); " is 120.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguration,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguration.cs,ValidateAndFixConfig,The length of the statement  "			var msg = string.Format ("Table:\'{0}\' is configured more than once! Only one config per table."' duplicates.First ().Key); " is 124.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationManager,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationManager.cs,OldStrategyToSetConnectionString,The length of the statement  "	string connectionString = String.Format (Constants.ShortConnectioStringTemplate' useHttps ? "https" : "http"' replica.StorageAccountName' replica.StorageAccountKey); " is 165.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationManager,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationManager.cs,Initialize,The length of the statement  "		string accountConnectionString = String.Format (Constants.ShortConnectioStringTemplate' ((this.useHttps == true) ? "https" : "http")' blobLocation.StorageAccountName' blobLocation.StorageAccountKey); " is 199.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationManager,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationManager.cs,Initialize,The length of the statement  "			ReplicatedTableLogger.LogError ("Failed to init blob Acc={0}' Blob={1}. Exception: {2}"' blobLocation.StorageAccountName' blobLocation.BlobPath' e.Message); " is 156.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationManager,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationManager.cs,UpdateTimer,The length of the statement  "		viewRefreshTimer = new PeriodicTimer (RefreshReadAndWriteViewsFromBlobs' TimeSpan.FromSeconds (timerIntervalInSeconds)); " is 120.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationManager,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationManager.cs,RefreshReadAndWriteViewsFromBlobs,The length of the statement  "		views = this.blobParser.ParseBlob (this.blobs.Values.ToList ()' this.SetConnectionStringStrategy' out tableConfigList' out leaseDuration' out configId' out instrumentationFlag); " is 177.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationParser,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationParser.cs,ParseBlob,The length of the statement  "	ReplicatedTableQuorumReadResult result = CloudBlobHelpers.TryReadBlobQuorumFast (blobs' out configuration' out eTags' ReplicatedTableConfiguration.FromJson); " is 157.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationParser,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationParser.cs,ParseBlob,The length of the statement  "			ReplicatedTableLogger.LogError ("ReadHeadIndex={0} of  ViewName={1} is out of range. Must be <= {2}"' view.ReadHeadIndex' view.Name' view.TailIndex); " is 149.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,RetrieveConfiguration,The length of the statement  "	ReplicatedTableQuorumReadResult result = CloudBlobHelpers.TryReadBlobQuorum (this.configManager.GetBlobs ()' out configuration' out eTags' ReplicatedTableConfiguration.FromJson); " is 178.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,RetrieveConfiguration,The length of the statement  "	return CloudBlobHelpers.TryReadAllBlobs (this.configManager.GetBlobs ()' out configuration' out eTagsArray' ReplicatedTableConfiguration.FromJson); " is 147.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,UpdateConfigurationInternal,The length of the statement  "	ReplicatedTableQuorumWriteResult result = CloudBlobHelpers.TryWriteBlobQuorum (this.configManager.GetBlobs ()' configuration' ReplicatedTableConfiguration.FromJson' comparer' ReplicatedTableConfiguration.GenerateNewConfigId); " is 225.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,TurnReplicaOn,The length of the statement  "		var msg = string.Format ("TurnReplicaOn={0}: failed to read configuration' \n{1}"' storageAccountName' readResult.ToString ()); " is 127.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,TurnReplicaOn,The length of the statement  "	//   but don't validate it is loaded bcz if all views of the config are empty' the config won't be refreshed by RefreshReadAndWriteViewsFromBlobs() thread! " is 155.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,TurnReplicaOff,The length of the statement  "		var msg = string.Format ("TurnReplicaOff={0}: failed to read configuration' \n{1}"' storageAccountName' readResult.ToString ()); " is 128.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,TurnReplicaOff,The length of the statement  "		var msg = string.Format ("TurnReplicaOff={0}: failed to update configuration' \n{1}"' storageAccountName' writeResult.ToString ()); " is 131.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,RepairTable,The length of the statement  "			return new ReplicatedTableRepairResult (ReplicatedTableRepairCode.NotImpactedTable' tableName' viewName' storageAccountName); " is 125.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,RepairTable,The length of the statement  "			return new ReplicatedTableRepairResult (ReplicatedTableRepairCode.StableTable' tableName' viewName' storageAccountName); " is 120.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,RepairTable,The length of the statement  "		ReplicatedTableLogger.LogInformational ("RepairTable={0}' View={1}' StorageAccountName={2}' from viewId={3} ..."' tableName' viewName' storageAccountName' viewIdToRecoverFrom); " is 176.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,RepairTable,The length of the statement  "		ReplicatedTableLogger.LogInformational ("RepairTable={0}' View={1}' StorageAccountName={2}' from viewId={3} => Status={4}"' tableName' viewName' storageAccountName' viewIdToRecoverFrom' status); " is 194.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationServiceV2,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationServiceV2.cs,SaveConfigAndRefreshItsIdAndValidateIsLoaded,The length of the statement  "	msg = string.Format ("{0} : ConfigId({1}) != currently running configurationId({2})"' iteration' configuration.Id' this.configManager.GetCurrentRunningConfigId ()); " is 164.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationStoreParser,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationStoreParser.cs,ParseBlob,The length of the statement  "	ReplicatedTableQuorumReadResult result = CloudBlobHelpers.TryReadBlobQuorum (blobs' out configurationStore' out eTags' JsonStore<ReplicatedTableConfigurationStore>.Deserialize); " is 177.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicaInfo,F:\newReposMay17\Azure_rtable\library\ReplicaInfo.cs,ToString,The length of the statement  "	return string.Format ("Account Name: {0}' AccountKey: {1}' ViewInWhichAddedToChain: {2}' Status: {3}"' this.StorageAccountName' "***********"' this.ViewInWhichAddedToChain' this.Status); " is 186.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ValidateTxnView,The length of the statement  "		throw new ReplicatedTableStaleViewException (ReplicatedTableViewErrorCodes.ViewIdChanged' string.Format ("View id changed from {0} to {1}"' txnView.ViewId' CurrentView.ViewId)); " is 177.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,CreateIfNotExists,The length of the statement  "			ReplicatedTableLogger.LogVerbose ("Creating table {0} on replica: {1}"' this.TableName' entry.Item2.BaseUri.ToString ()); " is 121.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,GetOpType,The length of the statement  "	PropertyInfo opType = operation.GetType ().GetProperty ("OperationType"' System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic); " is 202.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformOp,The length of the statement  "			bool checkETag = ((row._rtable_Operation == GetTableOperation (TableOperationType.InsertOrReplace)) || (row._rtable_Operation == GetTableOperation (TableOperationType.InsertOrMerge))) ? false : true; " is 199.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformOp,The length of the statement  "					ReplicatedTableLogger.LogInformational ("TransformOp(): Etag does not match. row.ETag ({0}) != currentRow._rtable_Version ({1})"' row.ETag' currentRow._rtable_Version); " is 168.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformOp,The length of the statement  "	} else if ((row._rtable_Operation == GetTableOperation (TableOperationType.Replace)) || (((row._rtable_Operation == GetTableOperation (TableOperationType.Insert)) || (row._rtable_Operation == GetTableOperation (TableOperationType.InsertOrMerge)) || (row._rtable_Operation == GetTableOperation (TableOperationType.InsertOrReplace))) && (phase == COMMIT_PHASE) && (index != tailIndex))) { " is 386.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,GetEntityFromOperation,The length of the statement  "	PropertyInfo entity = operation.GetType ().GetProperty ("Entity"' System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic); " is 195.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformUpdateBatchOp,The length of the statement  "			if ((prepOp = TransformOp (txnView' row' phase' index' tombstone' ref insertTombstone' requestOptions' operationContext)) == null) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformUpdateBatchOp,The length of the statement  "			if ((prepOp = TransformOp (txnView' row' phase' index' tombstone' ref insertTombstone' requestOptions' operationContext)) == null) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,PostProcessBatchExec,The length of the statement  "			if ((result == null) || ((result.HttpStatusCode != (int)HttpStatusCode.Created) && (result.HttpStatusCode != (int)HttpStatusCode.NoContent))) { " is 143.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,PostProcessBatchExec,The length of the statement  "		// 2. Virtualize etags in the results as well as request (etags include physical etags in the batch after their execution). " is 123.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ExecuteBatch,The length of the statement  "		IList<TableResult> headResults = this.RunPreparePhaseAgainstHeadReplica (txnView' batch' requestOptions' operationContext); " is 123.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveBatch,The length of the statement  "		TableOperation retrieveOperation = TableOperation.Retrieve<DynamicReplicatedTableEntity> (row.PartitionKey' row.RowKey); " is 120.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveBatch,The length of the statement  "		TableResult retrievedResult = RetrieveFromReplica (txnView' txnView.ReadHeadIndex' retrieveOperation' requestOptions' operationContext); " is 136.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveBatch,The length of the statement  "						ReplicatedTableLogger.LogInformational ("FlushAndRetrieveBatch(): Row is locked and has expired. PartitionKey={0} RowKey={1}"' row.PartitionKey' row.RowKey); " is 157.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveBatch,The length of the statement  "						if (result == null || (result.HttpStatusCode != (int)HttpStatusCode.OK && result.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveBatch,The length of the statement  "					ReplicatedTableLogger.LogInformational ("FlushAndRetrieveBatch(): Row is locked but NOT expired. PartitionKey={0} RowKey={1}"' row.PartitionKey' row.RowKey); " is 157.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunPreparePhaseAgainstHeadReplica,The length of the statement  "	TableBatchOperation batchOp = TransformUpdateBatchOp (txnView' batch' phase' txnView.WriteHeadIndex' null' requestOptions' operationContext); " is 141.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,Flush2PCBatch,The length of the statement  "		TableBatchOperation batchOp = TransformUpdateBatchOp (txnView' batch' phase' index' null' requestOptions' operationContext); " is 124.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,Retrieve,The length of the statement  "	// for latency. If read load balancing across replicas is desired' then choose a random replica and read if lock bit is 0. " is 122.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,MergeInternal,The length of the statement  "			ReplicatedTableLogger.LogInformational ("MergeInternal: ETag mismatch. row.ETag ({0}) != currentRow._rtable_Version ({1})"' row.ETag' currentRow._rtable_Version); " is 162.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,MergeInternal,The length of the statement  "		if (((result = Flush2PC (txnView' row' requestOptions' operationContext' result.Etag)) == null) || (result.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 158.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ReplaceInternal,The length of the statement  "			ReplicatedTableLogger.LogInformational ("ReplaceInternal: Row is not present. ParitionKey={0} RowKey={1}"' row.PartitionKey' row.RowKey); " is 137.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ReplaceInternal,The length of the statement  "			ReplicatedTableLogger.LogInformational ("ReplaceInternal: ETag mismatch. row.ETag ({0}) != currentRow._rtable_Version ({1})"' row.ETag' currentRow._rtable_Version); " is 164.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ReplaceInternal,The length of the statement  "		if (((result = Flush2PC (txnView' row' requestOptions' operationContext' result.Etag)) == null) || (result.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 158.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertInternal,The length of the statement  "		ReplicatedTableLogger.LogError ("Insert: Failed to insert at the head with HttpStatusCode = {0}"' result.HttpStatusCode); " is 121.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertOrReplace,The length of the statement  "	} while (result != null && (result.HttpStatusCode == (int)HttpStatusCode.Conflict || result.HttpStatusCode == (int)HttpStatusCode.PreconditionFailed) && RetryIf ()); " is 165.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveInternal,The length of the statement  "	if (repairRowTableResult == null || (repairRowTableResult.HttpStatusCode != (int)HttpStatusCode.OK && repairRowTableResult.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 174.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveInternal,The length of the statement  "		ReplicatedTableLogger.LogError ("FlushAndRetrieve(): RepairRow() returned Unexpected StatusCode {0}. ParitionKey={1} RowKey={2}"' (repairRowTableResult != null) ? repairRowTableResult.HttpStatusCode.ToString () : "null"' row.PartitionKey' row.RowKey); " is 251.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveInternal,The length of the statement  "		ReplicatedTableLogger.LogInformational ("FlushAndRetrieve(): _rtable_RowLock has expired. So' calling Flush2PC(). _rtable_LockAcquisition={0} CurrentTime={1}"' readRow._rtable_LockAcquisition' DateTime.UtcNow); " is 210.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushAndRetrieveInternal,The length of the statement  "		ReplicatedTableLogger.LogInformational ("FlushAndRetrieve(): Row is locked. _rtable_LockAcquisition={0} CurrentTime={1} timeout={2}"' readRow._rtable_LockAcquisition' DateTime.UtcNow' this._configurationWrapper.GetLockTimeout ()); " is 230.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,CreateReplicatedQuery,The length of the statement  "	return new ReplicatedTableQuery<TElement> (CreateQuery<TElement> ()' this._configurationWrapper.IsConvertToRTableMode ()); " is 122.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,VirtualizeEtagForDynamicTableEntityInConvertMode,The length of the statement  "	row.ETag = row.Properties.ContainsKey ("_rtable_Version") ? row.Properties ["_rtable_Version"].Int64Value.ToString () : "0"; " is 124.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RetrieveFromReplica,The length of the statement  "		throw new ReplicatedTableStaleViewException (ReplicatedTableViewErrorCodes.ViewIdSmallerThanEntryViewId' string.Format ("current _rtable_ViewId {0} is smaller than _rtable_ViewId of existing row {1}"' txnView.ViewId.ToString ()' readRow._rtable_ViewId)); " is 254.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertToIReplicatedTableEntity,The length of the statement  "		IReplicatedTableEntity readRow = this._configurationWrapper.IsConvertToRTableMode () ? new InitDynamicReplicatedTableEntity (tableEntity.PartitionKey' tableEntity.RowKey' tableEntity.ETag' tableEntity.Properties) : new DynamicReplicatedTableEntity (tableEntity.PartitionKey' tableEntity.RowKey' tableEntity.ETag' tableEntity.Properties); " is 337.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushPreparePhase,The length of the statement  "		if (result == null || (result.HttpStatusCode != (int)HttpStatusCode.OK && result.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushPreparePhase,The length of the statement  "			ReplicatedTableLogger.LogError ("F2PC: Failed during prepare phase in 2PC at replica with index: {0} for row with row key: {1} with result: {2}"' index' row.RowKey' (result != null) ? result.HttpStatusCode.ToString () : "null"); " is 228.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushCommitPhase,The length of the statement  "		if (result == null || (result.HttpStatusCode != (int)HttpStatusCode.OK && result.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushCommitPhase,The length of the statement  "			ReplicatedTableLogger.LogError ("F2PC: Failed during commit phase in 2PC at replica with index: {0} when reading a row with row key: {1}"' index' row.RowKey); " is 158.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertUpdateOrDeleteRow,The length of the statement  "		ReplicatedTableLogger.LogError ("IUD: Failed to access replica with index: {0} when reading a row with row key: {1}"' index' row.RowKey); " is 137.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertUpdateOrDeleteRow,The length of the statement  "		if (row._rtable_Operation == GetTableOperation (TableOperationType.Delete) || (row._rtable_Tombstone && row._rtable_RowLock == false)) { " is 136.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertUpdateOrDeleteRow,The length of the statement  "			ReplicatedTableLogger.LogError ("IUD: Failed at replica with index: {0} when inserting a new row with row key: {1}"' index' row.RowKey); " is 136.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertUpdateOrDeleteRow,The length of the statement  "	ReplicatedTableLogger.LogError ("IUD: Failed to access replica with index: {0}' error code = {1}"' index' retrievedResult.HttpStatusCode); " is 138.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatch,The length of the statement  "		if ((results = table.ExecuteBatch (batch' requestOptions' operationContext)) == null || !this.ValidateAndUnlock (batch' results' unlock)) { " is 139.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The length of the statement  "					if ((rightResults = this.RunBatchSplit (tableClient' rightBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The length of the statement  "				if ((leftResults = this.RunBatchSplit (tableClient' leftBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) { " is 130.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The length of the statement  "						if ((rightResults = this.RunBatchSplit (tableClient' rightBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairTable,The length of the statement  "		// Now we are relying on caller to pass the viewIdToRecoverFrom. Instead' we can find the viewIdToRecoverFrom of the old replica  " is 128.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairTable,The length of the statement  "			if (result == null || (result.HttpStatusCode != (int)HttpStatusCode.OK && result.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairTable,The length of the statement  "			ReplicatedTableLogger.LogWarning ("RepairReplica: deleting entity pk: {0}' rk: {1}"' extraEntity.PartitionKey' extraEntity.RowKey); " is 131.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairTable,The length of the statement  "			if (result == null || (result.HttpStatusCode != (int)HttpStatusCode.OK && result.HttpStatusCode != (int)HttpStatusCode.NoContent)) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushRecoveryBatch,The length of the statement  "	if (this.RunBatchSplit (headTableClient' batchHead' true' ref outBatch' null' null) != null && outBatch.Count == batchHead.Count) { " is 131.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushRecoveryBatch,The length of the statement  "		if (this.RunBatchSplit (newTableClient' batchNewReplica' false' ref outBatch' null' null) != null && outBatch.Count == batchNewReplica.Count) { " is 143.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,FlushRecoveryBatch,The length of the statement  "			if (this.RunBatchSplit (headTableClient' batchHead' false' ref outBatch' null' null) == null || outBatch.Count != batchHead.Count) { " is 132.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairRowInternal,The length of the statement  "		ReplicatedTableLogger.LogError ("RepairRow: unexpected result on the read view head: {0}"' readHeadResult.HttpStatusCode); " is 122.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RepairRowInternal,The length of the statement  "	bool readHeadLockExpired = (readHeadEntity._rtable_LockAcquisition + this._configurationWrapper.GetLockTimeout () > DateTime.UtcNow); " is 133.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "		throw new InvalidOperationException ("ConvertXStoreTable() API is NOT supported when ReplicatedTable is NOT in ConvertToRTable."); " is 130.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "	IQueryable<InitDynamicReplicatedTableEntity> query = from ent in tailTable.CreateQuery<InitDynamicReplicatedTableEntity> ().AsQueryable<InitDynamicReplicatedTableEntity> () " is 172.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "				ReplicatedTableLogger.LogInformational ("Skipped XStore entity with Partition={0} Row={1}"' entity.PartitionKey' entity.RowKey); " is 128.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "			// _rtable_ViewId = 0 means that the entity has not been operated on since the XStore Table was converted to ReplicatedTable. " is 125.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "				ReplicatedTableLogger.LogInformational ("Converted XStore entity with Partition={0} Row={1}"' entity.PartitionKey' entity.RowKey); " is 130.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "				ReplicatedTableLogger.LogError ("Exception when converting XStore entity with Partition={0} Row={1}. Ex = {2}"' entity.PartitionKey' entity.RowKey' ex.ToString ()); " is 164.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "	ReplicatedTableLogger.LogInformational ("ConvertXStoreTable() finished {0}. Time took to convert = {1}"' endTime' endTime - startTime); " is 135.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ConvertXStoreTable,The length of the statement  "	ReplicatedTableLogger.LogInformational ("successCount={0} skippedCount={1} failedCount={2}"' successCount' skippedCount' failedCount); " is 134.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEntity.cs,Equals,The length of the statement  "	if ((this.PartitionKey != that.PartitionKey) || (this.RowKey != that.RowKey) || (this._rtable_RowLock != that._rtable_RowLock) || (this._rtable_Version != that._rtable_Version) || (this._rtable_Tombstone != that._rtable_Tombstone)) { " is 233.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableRepairResult,F:\newReposMay17\Azure_rtable\library\ReplicatedTableRepairResult.cs,ToString,The length of the statement  "	return string.Format ("ReplicatedTableRepairResult Code: {0} \n" + " TableName: {1} \n" + " ViewName: {2} \n" + " StorageAccountName: {3} \n" + " ReconfigurationStatus: {4} \n" + " Message:{5}"' Code' TableName' ViewName' StorageAccountName' Status' Message); " is 259.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationService,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationService.cs,UpdateConfiguration,The length of the statement  "                 * This is to support multiple clients updating the config' not a high priority scenario but something we should look at." is 120.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationService,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationService.cs,UpdateConfiguration,The length of the statement  "                 */ReplicatedTableReadBlobResult result = CloudBlobHelpers.TryReadBlob (blob' out configurationStore' out eTag' JsonStore<ReplicatedTableConfigurationStore>.Deserialize); " is 169.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationStore,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationStore.cs,EnableReadWriteOnReplica,The length of the statement  "	if (!ReplicaChain.Any () || ReplicaChain [0].StorageAccountName != headStorageAccountName || ReplicaChain [0].Status != ReplicaStatus.WriteOnly) { " is 146.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguredTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguredTable.cs,IsViewReferenced,The length of the statement  "	KeyValuePair<string' string> entry = PartitionsToViewMap.FirstOrDefault (x => x.Value.Equals (viewName' StringComparison.OrdinalIgnoreCase)); " is 141.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguredTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguredTable.cs,IsAnyViewNullOrEmpty,The length of the statement  "             */return PartitionsToViewMap != null && PartitionsToViewMap.Where (e => !string.IsNullOrEmpty (e.Key)).Select (entry => entry.Value).Any (string.IsNullOrEmpty); " is 160.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguredTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguredTable.cs,GetViewForPartition,The length of the statement  "	KeyValuePair<string' string> entry = PartitionsToViewMap.FirstOrDefault (x => x.Key.Equals (partition' StringComparison.OrdinalIgnoreCase)); " is 140.
Long Statement,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfiguredTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfiguredTable.cs,IsTablePartitioned,The length of the statement  "	return PartitionsToViewMap.Where (e => !string.IsNullOrEmpty (e.Key)).Select (entry => entry.Value).Any (v => !string.IsNullOrEmpty (v)); " is 137.
Long Statement,Microsoft.Azure.Toolkit.Replication,StopWatchInternal,F:\newReposMay17\Azure_rtable\library\StopWatchInternal.cs,Dispose,The length of the statement  "			ReplicatedTableLogger.LogVerbose ("[Instrumentation] {0}:{1} took {2} ms"' _tableName' _context' _stopWatch.ElapsedMilliseconds); " is 129.
Complex Conditional,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,TryReadBlobQuorumFast,The conditional expression  "majority.Code == ReplicatedTableQuorumReadCode.NotFound || majority.Code == ReplicatedTableQuorumReadCode.UpdateInProgress || majority.Code == ReplicatedTableQuorumReadCode.Exception || majority.Code == ReplicatedTableQuorumReadCode.Success"  is complex.
Complex Conditional,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,TransformOp,The conditional expression  "(row._rtable_Operation == GetTableOperation (TableOperationType.Replace)) || (((row._rtable_Operation == GetTableOperation (TableOperationType.Insert)) || (row._rtable_Operation == GetTableOperation (TableOperationType.InsertOrMerge)) || (row._rtable_Operation == GetTableOperation (TableOperationType.InsertOrReplace))) && (phase == COMMIT_PHASE) && (index != tailIndex))"  is complex.
Complex Conditional,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,InsertOrReplace,The conditional expression  "result != null && (result.HttpStatusCode == (int)HttpStatusCode.Conflict || result.HttpStatusCode == (int)HttpStatusCode.PreconditionFailed) && RetryIf ()"  is complex.
Complex Conditional,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEntity.cs,Equals,The conditional expression  "(this.PartitionKey != that.PartitionKey) || (this.RowKey != that.RowKey) || (this._rtable_RowLock != that._rtable_RowLock) || (this._rtable_Version != that._rtable_Version) || (this._rtable_Tombstone != that._rtable_Tombstone)"  is complex.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEventListener,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEventListener.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,InitDynamicReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\DynamicReplicatedTableEntity.cs,ReadEntity,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Toolkit.Replication,PeriodicTimer,F:\newReposMay17\Azure_rtable\library\PeriodicTimer.cs,InternalCallback,The method has an empty catch block.
Magic Number,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,GetBlockBlob,The following statement contains a magic number: if (container.CreateIfNotExists ()) {  	container.SetPermissions (new BlobContainerPermissions () {  		PublicAccess = BlobContainerPublicAccessType.Off  	});  	container.FetchAttributes (null' new BlobRequestOptions () {  		ServerTimeout = new TimeSpan (0' 10' 0)  	});  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,CloudBlobHelpers,F:\newReposMay17\Azure_rtable\library\CloudBlobHelpers.cs,GetBlockBlob,The following statement contains a magic number: container.FetchAttributes (null' new BlobRequestOptions () {  	ServerTimeout = new TimeSpan (0' 10' 0)  });  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTableConfigurationManager,F:\newReposMay17\Azure_rtable\library\ReplicatedTableConfigurationManager.cs,Initialize,The following statement contains a magic number: if ((this.blobLocations.Count % 2) == 0) {  	throw new ArgumentException ("Number of blob locations must be odd");  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ValidateAndUnlock,The following statement contains a magic number: if (iter == null || inBatch.Count != results.Count) {  	result2 = false;  } else {  	IEnumerator<TableOperation> enumerator = inBatch.GetEnumerator ();  	while (enumerator.MoveNext () && iter.MoveNext ()) {  		TableResult result = iter.Current;  		if (result == null || (result.HttpStatusCode != 201 && result.HttpStatusCode != 204)) {  			result2 = false;  			return result2;  		}  		if (unlock) {  			TableOperation operation = enumerator.Current;  			IReplicatedTableEntity row = (IReplicatedTableEntity)this.GetEntityFromOperation (operation);  			row._rtable_RowLock = false;  			row.ETag = result.Etag;  		}  	}  	result2 = true;  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ValidateAndUnlock,The following statement contains a magic number: if (iter == null || inBatch.Count != results.Count) {  	result2 = false;  } else {  	IEnumerator<TableOperation> enumerator = inBatch.GetEnumerator ();  	while (enumerator.MoveNext () && iter.MoveNext ()) {  		TableResult result = iter.Current;  		if (result == null || (result.HttpStatusCode != 201 && result.HttpStatusCode != 204)) {  			result2 = false;  			return result2;  		}  		if (unlock) {  			TableOperation operation = enumerator.Current;  			IReplicatedTableEntity row = (IReplicatedTableEntity)this.GetEntityFromOperation (operation);  			row._rtable_RowLock = false;  			row.ETag = result.Etag;  		}  	}  	result2 = true;  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ValidateAndUnlock,The following statement contains a magic number: while (enumerator.MoveNext () && iter.MoveNext ()) {  	TableResult result = iter.Current;  	if (result == null || (result.HttpStatusCode != 201 && result.HttpStatusCode != 204)) {  		result2 = false;  		return result2;  	}  	if (unlock) {  		TableOperation operation = enumerator.Current;  		IReplicatedTableEntity row = (IReplicatedTableEntity)this.GetEntityFromOperation (operation);  		row._rtable_RowLock = false;  		row.ETag = result.Etag;  	}  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ValidateAndUnlock,The following statement contains a magic number: while (enumerator.MoveNext () && iter.MoveNext ()) {  	TableResult result = iter.Current;  	if (result == null || (result.HttpStatusCode != 201 && result.HttpStatusCode != 204)) {  		result2 = false;  		return result2;  	}  	if (unlock) {  		TableOperation operation = enumerator.Current;  		IReplicatedTableEntity row = (IReplicatedTableEntity)this.GetEntityFromOperation (operation);  		row._rtable_RowLock = false;  		row.ETag = result.Etag;  	}  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ValidateAndUnlock,The following statement contains a magic number: if (result == null || (result.HttpStatusCode != 201 && result.HttpStatusCode != 204)) {  	result2 = false;  	return result2;  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,ValidateAndUnlock,The following statement contains a magic number: if (result == null || (result.HttpStatusCode != 201 && result.HttpStatusCode != 204)) {  	result2 = false;  	return result2;  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The following statement contains a magic number: if (batchSize == 0) {  	result = null;  } else {  	IList<TableResult> leftResults;  	if ((leftResults = this.RunBatch (tableClient' batch' unlock' requestOptions' operationContext)) != null) {  		this.MergeOperations (batch' outBatch);  		result = leftResults;  	} else {  		int i = 0;  		while (i < batchSize && enumerator.MoveNext ()) {  			if (i < batchSize / 2) {  				leftBatch.Add (enumerator.Current);  			} else {  				rightBatch.Add (enumerator.Current);  			}  			i++;  		}  		if ((leftResults = this.RunBatch (tableClient' leftBatch' unlock' requestOptions' operationContext)) != null) {  			this.MergeOperations (leftBatch' outBatch);  			IList<TableResult> rightResults;  			if ((rightResults = this.RunBatch (tableClient' rightBatch' unlock' requestOptions' operationContext)) != null) {  				this.MergeOperations (rightBatch' outBatch);  				this.MergeResults (rightResults' leftResults);  			} else {  				if ((rightResults = this.RunBatchSplit (tableClient' rightBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) {  					this.MergeOperations (rightBatch' outBatch);  					this.MergeResults (rightResults' leftResults);  				} else {  					if (rightBatch.Count > 0) {  						result = leftResults;  						return result;  					}  				}  			}  		} else {  			if ((leftResults = this.RunBatchSplit (tableClient' leftBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) {  				this.MergeOperations (leftBatch' outBatch);  				IList<TableResult> rightResults;  				if ((rightResults = this.RunBatch (tableClient' rightBatch' unlock' requestOptions' operationContext)) != null) {  					this.MergeOperations (rightBatch' outBatch);  					this.MergeResults (rightResults' leftResults);  				} else {  					if ((rightResults = this.RunBatchSplit (tableClient' rightBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) {  						this.MergeOperations (rightBatch' outBatch);  						this.MergeResults (rightResults' leftResults);  					} else {  						if (rightBatch.Count > 0) {  							result = leftResults;  							return result;  						}  					}  				}  			} else {  				if (leftBatch.Count > 0) {  					result = null;  					return result;  				}  			}  		}  		result = leftResults;  	}  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The following statement contains a magic number: if ((leftResults = this.RunBatch (tableClient' batch' unlock' requestOptions' operationContext)) != null) {  	this.MergeOperations (batch' outBatch);  	result = leftResults;  } else {  	int i = 0;  	while (i < batchSize && enumerator.MoveNext ()) {  		if (i < batchSize / 2) {  			leftBatch.Add (enumerator.Current);  		} else {  			rightBatch.Add (enumerator.Current);  		}  		i++;  	}  	if ((leftResults = this.RunBatch (tableClient' leftBatch' unlock' requestOptions' operationContext)) != null) {  		this.MergeOperations (leftBatch' outBatch);  		IList<TableResult> rightResults;  		if ((rightResults = this.RunBatch (tableClient' rightBatch' unlock' requestOptions' operationContext)) != null) {  			this.MergeOperations (rightBatch' outBatch);  			this.MergeResults (rightResults' leftResults);  		} else {  			if ((rightResults = this.RunBatchSplit (tableClient' rightBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) {  				this.MergeOperations (rightBatch' outBatch);  				this.MergeResults (rightResults' leftResults);  			} else {  				if (rightBatch.Count > 0) {  					result = leftResults;  					return result;  				}  			}  		}  	} else {  		if ((leftResults = this.RunBatchSplit (tableClient' leftBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) {  			this.MergeOperations (leftBatch' outBatch);  			IList<TableResult> rightResults;  			if ((rightResults = this.RunBatch (tableClient' rightBatch' unlock' requestOptions' operationContext)) != null) {  				this.MergeOperations (rightBatch' outBatch);  				this.MergeResults (rightResults' leftResults);  			} else {  				if ((rightResults = this.RunBatchSplit (tableClient' rightBatch' unlock' ref outBatch' requestOptions' operationContext)) != null) {  					this.MergeOperations (rightBatch' outBatch);  					this.MergeResults (rightResults' leftResults);  				} else {  					if (rightBatch.Count > 0) {  						result = leftResults;  						return result;  					}  				}  			}  		} else {  			if (leftBatch.Count > 0) {  				result = null;  				return result;  			}  		}  	}  	result = leftResults;  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The following statement contains a magic number: while (i < batchSize && enumerator.MoveNext ()) {  	if (i < batchSize / 2) {  		leftBatch.Add (enumerator.Current);  	} else {  		rightBatch.Add (enumerator.Current);  	}  	i++;  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,RunBatchSplit,The following statement contains a magic number: if (i < batchSize / 2) {  	leftBatch.Add (enumerator.Current);  } else {  	rightBatch.Add (enumerator.Current);  }  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEntity,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEntity.cs,ReplicatedTableEntity,The following statement contains a magic number: this._rtable_LockAcquisition = new DateTimeOffset (2000' 1' 1' 0' 0' 0' TimeSpan.FromTicks (0));  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEventSource,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEventSource.cs,Warning,The following statement contains a magic number: this.WriteEvent (2' message);  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEventSource,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEventSource.cs,Informational,The following statement contains a magic number: this.WriteEvent (3' message);  
Magic Number,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEventSource,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEventSource.cs,Verbose,The following statement contains a magic number: this.WriteEvent (4' message);  
Missing Default,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEtwLogger,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEtwLogger.cs,LogMessage,The following switch statement is missing a default case: switch (eventLevel) {  case EventLevel.Error:  	ReplicatedTableEtwLogger.eventSource.Error (string.Format (format' args));  	break;  case EventLevel.Warning:  	ReplicatedTableEtwLogger.eventSource.Warning (string.Format (format' args));  	break;  case EventLevel.Informational:  	ReplicatedTableEtwLogger.eventSource.Informational (string.Format (format' args));  	break;  case EventLevel.Verbose:  	ReplicatedTableEtwLogger.eventSource.Verbose (string.Format (format' args));  	break;  // ...  }  
Missing Default,Microsoft.Azure.Toolkit.Replication,ReplicatedTableEventListener,F:\newReposMay17\Azure_rtable\library\ReplicatedTableEventListener.cs,GetEventTypeFromEventLevel,The following switch statement is missing a default case: switch (eventLevel) {  case EventLevel.Error:  	return TraceEventType.Error;  case EventLevel.Warning:  	return TraceEventType.Warning;  case EventLevel.Informational:  	return TraceEventType.Information;  }  
Missing Default,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,Execute,The following switch statement is missing a default case: switch (opTypeValue) {  /// <summary>  /// Represents a retrieve operation.  /// </summary>  case TableOperationType.Retrieve:  	result = Retrieve (operation' requestOptions' operationContext);  	break;  /// <summary>  /// Represents an insert or replace operation.  /// </summary>  case TableOperationType.InsertOrReplace:  	result = InsertOrReplace (operation' requestOptions' operationContext);  	break;  /// <summary>  /// Represents an insert operation.  /// </summary>  case TableOperationType.Insert:  	result = Insert (operation' null' requestOptions' operationContext);  	break;  /// <summary>  /// Represents a delete operation.  /// </summary>  case TableOperationType.Delete:  	// If there is a write view' then overwrite the currentView with the write view  	result = Delete (operation' requestOptions' operationContext);  	break;  /// <summary>  /// Represents a replace operation.  /// </summary>  case TableOperationType.Replace:  	// If there is a write view' then overwrite the currentView with the write view  	result = Replace (operation' null' requestOptions' operationContext);  	break;  /// <summary>  /// Represents a merge operation.  /// </summary>  case TableOperationType.Merge:  	// If there is a write view' then overwrite the currentView with the write view  	result = Merge (operation' null' requestOptions' operationContext);  	break;  /// <summary>  /// Represents an insert or merge operation.  /// </summary>  case TableOperationType.InsertOrMerge:  	// If there is a write view' then overwrite the currentView with the write view  	result = InsertOrMerge (operation' requestOptions' operationContext);  	break;  }  
Missing Default,Microsoft.Azure.Toolkit.Replication,ReplicatedTable,F:\newReposMay17\Azure_rtable\library\ReplicatedTable.cs,GetTableOperation,The following switch statement is missing a default case: switch (tableOperationType) {  case TableOperationType.Insert:  	return "Insert";  case TableOperationType.Delete:  	return "Delete";  case TableOperationType.Replace:  	return "Replace";  case TableOperationType.Merge:  	return "Merge";  case TableOperationType.InsertOrReplace:  	return "InsertOrReplace";  case TableOperationType.InsertOrMerge:  	return "InsertOrMerge";  case TableOperationType.Retrieve:  	return "Retrieve";  }  
