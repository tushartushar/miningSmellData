Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieveFromSnapshot,The method has 105 lines of code.
Long Method,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,CheckBatchAndGeneratePlan,The method has 124 lines of code.
Complex Method,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleModify,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleExecuteBatch,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleDeleteSnapshot,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,ModifyRowCOW,The method has 6 parameters. Parameters: originalRow' opType' arg' meta' options' context
Long Parameter List,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,ReadSnapshotChain,The method has 7 parameters. Parameters: pKey' rKey' ssid' meta' steps' options' context
Long Parameter List,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,CheckBatchAndGeneratePlan,The method has 6 parameters. Parameters: ops' currentRows' meta' cowRows' writeOps' replies
Long Parameter List,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,GCCheckRows,The method has 5 parameters. Parameters: table' rows' index' canDelete' rowIdAndPETagToDeleteInThisTable
Long Parameter List,Microsoft.WindowsAzure.Storage.STable,StorageLayer,C:\repos\Azure_rtable\stable\STableLib\StorageLayer.cs,ModifyRow,The method has 6 parameters. Parameters: table' opType' row' eTag' requestOptions' operationContext
Long Parameter List,Microsoft.WindowsAzure.Storage.STable,StorageLayer,C:\repos\Azure_rtable\stable\STableLib\StorageLayer.cs,BatchWrite,The method has 5 parameters. Parameters: table' ops' res' options' context
Long Parameter List,Microsoft.WindowsAzure.Storage.STable,StorageLayer,C:\repos\Azure_rtable\stable\STableLib\StorageLayer.cs,WriteConditionalRow,The method has 5 parameters. Parameters: table' opType' row' options' oc
Long Identifier,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,GCDeletedRows,The length of the parameter rowIdAndPETagToDeleteInEachTable is 32.
Long Identifier,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,GCCheckTable,The length of the parameter rowIdAndPETagToDeleteInThisTable is 32.
Long Identifier,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,GCCheckRows,The length of the parameter rowIdAndPETagToDeleteInThisTable is 32.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,Execute,The length of the statement  "            else if (opType == TableOperationType.Replace || opType == TableOperationType.Merge || opType == TableOperationType.Delete) " is 123.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieve,The length of the statement  "            var response = StorageLayer.RetrieveRow(headTable' TableOperation.Retrieve<STableEntity>(partitionKey' rowKey)' options' context); " is 130.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleModify,The length of the statement  "            Assert.IsTrue(opType == TableOperationType.Replace || opType == TableOperationType.Merge || opType == TableOperationType.Delete); " is 129.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieveFromSnapshot,The length of the statement  "                    // We want to solidify the row to CurrentSSID - 1 (will make snapshot ssid valid' and equal to current row) before returning. " is 125.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieveFromSnapshot,The length of the statement  "                    // This will COW the current row to snapshot table headData.SSID' and increament this row's current SSID to CurrentSSID. " is 120.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieveFromSnapshot,The length of the statement  "                    // Once this "dummy" update succeeds' no one can change this row from SSID headData.SSID to CurrentSSID - 1' including ssid. " is 124.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieveFromSnapshot,The length of the statement  "                    // This technique prevents concurrent updates to change the row's content on snapshot ssid' and causes non-repeatable read. " is 123.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieveFromSnapshot,The length of the statement  "                    // before updating the row. Someone takes snapshot ssid' and we come to read this row in snapshot ssid before the update awakes. " is 128.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleExecuteBatch,The length of the statement  "                retrieveOps.Add(new InternalOperation(headTable' TableOperation.Retrieve<STableEntity>(op.Item2.PartitionKey' op.Item2.RowKey))); " is 129.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,CheckBatchAndGeneratePlan,The length of the statement  "                else if (op.Item1 == TableOperationType.Replace || op.Item1 == TableOperationType.Merge || op.Item1 == TableOperationType.Delete) " is 129.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,CheckBatchAndGeneratePlan,The length of the statement  "                            var targetOpType = (op.Item1 == TableOperationType.InsertOrReplace) ? TableOperationType.Replace : TableOperationType.Merge; " is 124.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleCreateSnapshot,The length of the statement  "            else if (updateRes.HttpStatusCode == (int)HttpStatusCode.Conflict || updateRes.HttpStatusCode == (int)HttpStatusCode.PreconditionFailed) " is 136.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRollback,The length of the statement  "            var query = new TableQuery<STableEntity>().Where(TableQuery.GenerateFilterConditionForInt(STableEntity.KeySSID' QueryComparisons.GreaterThan' ssid)); " is 149.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRollback,The length of the statement  "                Assert.IsTrue(oldVal != null && (oldVal.HttpStatusCode == (int)HttpStatusCode.NotFound || oldVal.HttpStatusCode == (int)HttpStatusCode.OK)); " is 140.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleDeleteSnapshot,The length of the statement  "                    // (NOTICE: IN SUCH CASE' WE REQUIRE CONFLICT TO ONLY MEAN "THE ROW EXISTS"' WHICH MAY NOT BE THE CASE FOR RTABLE / STABLE) " is 123.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleDeleteSnapshot,The length of the statement  "                    if (adoptRes == null || (adoptRes.HttpStatusCode != (int)HttpStatusCode.Created && adoptRes.HttpStatusCode != (int)HttpStatusCode.Conflict)) " is 140.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleGC,The length of the statement  "            var query = new TableQuery<DynamicTableEntity>().Where(TableQuery.GenerateFilterConditionForBool(STableEntity.KeyDeleted' QueryComparisons.Equal' true)) " is 152.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,GCCheckRows,The length of the statement  "                readOps.Add(new InternalOperation(table' TableOperation.Retrieve<STableEntity>(rows[index[i]].Item1' rows[index[i]].Item2))); " is 125.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,ExecuteGCTable,The length of the statement  "                    ops.Add(new Tuple<TableOperationType'ITableEntity'string>(TableOperationType.Delete' new STableEntity(r.Item1' r.Item2)' r.Item3)); " is 131.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,GetPartitionKeyFromOperation,The length of the statement  "            PropertyInfo entity = operation.GetType().GetProperty("RetrievePartitionKey"' System.Reflection.BindingFlags.GetProperty | " is 122.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,Decapsulate,The length of the statement  "            var resolver = (Func<string' string' DateTimeOffset' IDictionary<string' EntityProperty>' System.String' System.Object>) " is 120.
Long Statement,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,Decapsulate,The length of the statement  "            var res = (ITableEntity)resolver.Invoke(rawData.PartitionKey' rawData.RowKey' rawData.Timestamp' rawData.Payload' rawData.VETag); " is 129.
Long Statement,Microsoft.WindowsAzure.Storage.STable,StorageLayer,C:\repos\Azure_rtable\stable\STableLib\StorageLayer.cs,RetrieveRow,The length of the statement  "                return new TableResult() { Result = null' Etag = e.RequestInformation.Etag' HttpStatusCode = e.RequestInformation.HttpStatusCode }; " is 131.
Long Statement,Microsoft.WindowsAzure.Storage.STable,StorageLayer,C:\repos\Azure_rtable\stable\STableLib\StorageLayer.cs,BatchWrite,The length of the statement  "                res.Add(new TableResult() { Result = null' Etag = e.RequestInformation.Etag' HttpStatusCode = e.RequestInformation.HttpStatusCode }); " is 133.
Long Statement,Microsoft.WindowsAzure.Storage.STable,StorageLayer,C:\repos\Azure_rtable\stable\STableLib\StorageLayer.cs,WriteConditionalRow,The length of the statement  "                return new TableResult() { Result = null' Etag = e.RequestInformation.Etag' HttpStatusCode = e.RequestInformation.HttpStatusCode }; " is 131.
Complex Conditional,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleModify,The conditional expression  "retrieveRes == null || retrieveRes[0] == null || retrieveRes[1] == null                   || retrieveRes[0].HttpStatusCode != (int)HttpStatusCode.OK || retrieveRes[0].Result == null"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleIOX,The conditional expression  "retrieveRes == null || retrieveRes[0] == null || retrieveRes[1] == null                   || retrieveRes[0].HttpStatusCode != (int)HttpStatusCode.OK || retrieveRes[0].Result == null"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleRetrieveFromSnapshot,The conditional expression  "retrieveRes == null || retrieveRes[0] == null || retrieveRes[1] == null                  || retrieveRes[0].HttpStatusCode != (int)HttpStatusCode.OK || retrieveRes[0].Result == null"  is complex.
Empty Catch Block,Microsoft.WindowsAzure.Storage.STable,STable,C:\repos\Azure_rtable\stable\STableLib\STable.cs,HandleGC,The method has an empty catch block.
