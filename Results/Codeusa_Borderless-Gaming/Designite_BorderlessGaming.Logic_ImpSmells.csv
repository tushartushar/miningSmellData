Implementation smell,Namespace,Class,File,Method,Description
Long Method,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderless,The method has 167 lines of code.
Long Method,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderlessDelayed,The method has 144 lines of code.
Complex Method,BorderlessGaming.Logic.Core,LanguageManager,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\LanguageManager.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,UpdateProcesses,Cyclomatic complexity of the method is 9
Complex Method,BorderlessGaming.Logic.System,Tools,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Tools.cs,CheckForUpdates,Cyclomatic complexity of the method is 9
Complex Method,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderless,Cyclomatic complexity of the method is 20
Complex Method,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderlessDelayed,Cyclomatic complexity of the method is 14
Complex Method,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,ToggleWindowsTaskbarVisibility,Cyclomatic complexity of the method is 9
Complex Method,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetMainWindowForProcess_EnumWindows,Cyclomatic complexity of the method is 8
Long Parameter List,BorderlessGaming.Logic.Windows,ForegroundManager,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\ForegroundManager.cs,WinEventProc,The method has 7 parameters. Parameters: hWinEventHook' eventType' hwnd' idObject' idChild' dwEventThread' dwmsEventTime
Long Parameter List,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderless,The method has 5 parameters. Parameters: processDetails' frmMain' targetWindow' targetFrame' favDetails
Long Parameter List,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderlessDelayed,The method has 5 parameters. Parameters: processDetails' frmMain' targetWindow' targetFrame' favDetails
Long Parameter List,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' x' y' cx' cy' uFlags
Long Parameter List,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,MoveWindow,The method has 6 parameters. Parameters: hWnd' X' Y' nWidth' nHeight' bRepaint
Long Parameter List,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' x' y' cx' cy' wFlags
Long Parameter List,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,SetWinEventHook,The method has 7 parameters. Parameters: eventMin' eventMax' hmodWinEventProc' lpfnWinEventProc' idProcess' idThread' dwFlags
Long Parameter List,BorderlessGaming.Logic.Windows,NativeMethods,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Uac.cs,GetTokenInformation,The method has 5 parameters. Parameters: hToken' tokenInfoClass' pTokenInfo' tokenInfoLength' returnLength
Long Identifier,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,ToString,The length of the parameter processNameIsDissimilarToWindowTitle is 36.
Long Identifier,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,ToggleWindowsTaskbarVisibility,The length of the parameter wantToMakeWindowsTaskbarVisible is 31.
Long Identifier,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,,The length of the parameter GetMainWindowForProcess_Locker is 30.
Long Identifier,BorderlessGaming.Logic.Windows,NativeMethods,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Uac.cs,,The length of the parameter SECURITY_MANDATORY_UNTRUSTED_RID is 32.
Long Statement,BorderlessGaming.Logic.Core,LanguageManager,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\LanguageManager.cs,Load,The length of the statement  "               MessageBox.Show($"No Langauges have been loaded! Ensure {AppEnvironment.LanguagePath} exist with at least one .lang file."); " is 124.
Long Statement,BorderlessGaming.Logic.Core,LanguageManager,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\LanguageManager.cs,Load,The length of the statement  "            var defaultLang = Languages.Values.FirstOrDefault(lang => lang.Culture.Equals(Config.Instance.AppSettings.DefaultCulture)); " is 123.
Long Statement,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,RemoveBorder,The length of the statement  "            await Manipulation.MakeWindowBorderless(pd' _form' pd.WindowHandle' new Rectangle()' favDetails ?? Favorite.FromWindow(pd)); " is 124.
Long Statement,BorderlessGaming.Logic.Models,Config,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\Config.cs,IsHidden,The length of the statement  "            return HiddenProcess.AlwaysHiddenProcesses.Any(process => process.Equals(processName.ToLower())) || HiddenProcesses.Any(process => process.Name.Equals(processName.ToLower())); " is 175.
Long Statement,BorderlessGaming.Logic.System.Utilities,ExceptionHandler,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The length of the statement  "                    MessageBox.Show($"An Unhandled Exception was Caught and Logged to:\r\n{filePath}"' "Exception Caught"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 147.
Long Statement,BorderlessGaming.Logic.Windows,ForegroundManager,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\ForegroundManager.cs,Subscribe,The length of the statement  "           _mHhook = Native.SetWinEventHook(EventSystemForeground' EventSystemForeground' IntPtr.Zero' _dele' 0' 0' WineventOutofcontext); " is 127.
Long Statement,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,ToggleMouseCursorVisibility,The length of the statement  "                        // Can't load from a memory stream because the constructor new Cursor() does not accept animated or non-monochrome cursors " is 122.
Long Statement,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,RedrawWindowsSystemTrayArea,The length of the statement  "                // Note: this doesn't actually move the mouse cursor on the screen -- this just sends a message to the system tray window " is 121.
Long Statement,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,RedrawWindowsSystemTrayArea,The length of the statement  "                //       that mouse movement occurred over it' forcing it to refresh.  Sending messages asking for a repaint or invalidated " is 123.
Complex Conditional,BorderlessGaming.Logic.Models,Favorite,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\Favorite.cs,ToString,The conditional expression  "OffsetL != 0 || OffsetR != 0 || OffsetT != 0 || OffsetB != 0"  is complex.
Complex Conditional,BorderlessGaming.Logic.Models,Favorite,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\Favorite.cs,ToString,The conditional expression  "PositionX != 0 || PositionY != 0 || PositionW != 0 || PositionH != 0"  is complex.
Complex Conditional,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,ToggleMouseCursorVisibility,The conditional expression  "forced == Boolstate.True && !MouseCursorIsHidden ||                  forced == Boolstate.False && MouseCursorIsHidden"  is complex.
Empty Catch Block,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,Watch,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,ToString,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.System,AppEnvironment,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\AppEnvironment.cs,GetUserAppDataPath,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.System,AutoStart,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\AutoStart.cs,CreateEntry,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.System,Tools,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Tools.cs,GotoSite,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.System,Tools,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Tools.cs,CheckForUpdates,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.System.Utilities,ExceptionHandler,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.System.Utilities,TaskUtilities,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Utilities\TaskUtilities.cs,StartTaskAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.System.Utilities,TaskUtilities,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Utilities\TaskUtilities.cs,StartTaskAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,ForegroundManager,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\ForegroundManager.cs,WinEventProc,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,ToggleWindowsTaskbarVisibility,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,ToggleMouseCursorVisibility,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,ToggleMouseCursorVisibility,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,RedrawWindowsSystemTrayArea,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetMainWindowForProcess,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetMainWindowForProcess,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Logic.Windows,Uac,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Uac.cs,IsElevated,The method has an empty catch block.
Magic Number,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,Watch,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds((Config.Instance.AppSettings.SlowWindowDetection ? 10 : 3)));
Magic Number,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,Watch,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds((Config.Instance.AppSettings.SlowWindowDetection ? 10 : 3)));
Magic Number,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,RemoveBorder,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(10));
Magic Number,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,RemoveBorder_ToSpecificScreen,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(10));
Magic Number,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,RemoveBorder_ToSpecificRect,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(10));
Magic Number,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,UpdateProcesses,The following statement contains a magic number: await TaskUtilities.StartTaskAndWait(() => { currentTitle = Native.GetWindowTitle(process.WindowHandle); }'                              Config.Instance.AppSettings.SlowWindowDetection ? 10 : 2);
Magic Number,BorderlessGaming.Logic.Core,ProcessWatcher,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Core\ProcessWatcher.cs,UpdateProcesses,The following statement contains a magic number: await TaskUtilities.StartTaskAndWait(() => { currentTitle = Native.GetWindowTitle(process.WindowHandle); }'                              Config.Instance.AppSettings.SlowWindowDetection ? 10 : 2);
Magic Number,BorderlessGaming.Logic.Models,Language,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\Language.cs,LoadData,The following statement contains a magic number: var languageData = line.Split(new[] {'|'}' 2);
Magic Number,BorderlessGaming.Logic.Models,PRectangle,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\PRectangle.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Y;
Magic Number,BorderlessGaming.Logic.Models,PRectangle,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\PRectangle.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Width;
Magic Number,BorderlessGaming.Logic.Models,PRectangle,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\PRectangle.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Height;
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,GetWindowTitle,The following statement contains a magic number: await TaskUtilities.StartTaskAndWait(() => { WindowTitle = Native.GetWindowTitle(WindowHandle); }'                  Config.Instance.AppSettings.SlowWindowDetection ? 10 : 2);
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,GetWindowTitle,The following statement contains a magic number: await TaskUtilities.StartTaskAndWait(() => { WindowTitle = Native.GetWindowTitle(WindowHandle); }'                  Config.Instance.AppSettings.SlowWindowDetection ? 10 : 2);
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,WindowHasTargetableStyles,The following statement contains a magic number: await TaskUtilities.StartTaskAndWait(() =>               {                   var styleCurrentWindowStandard = Native.GetWindowLong(WindowHandle' WindowLongIndex.Style);                   var styleCurrentWindowExtended = Native.GetWindowLong(WindowHandle' WindowLongIndex.ExtendedStyle);                   targetable = styleCurrentWindowStandard.HasTargetStyles() || styleCurrentWindowExtended.HasExtendedStyles();               }' Config.Instance.AppSettings.SlowWindowDetection ? 10 : 2);
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,WindowHasTargetableStyles,The following statement contains a magic number: await TaskUtilities.StartTaskAndWait(() =>               {                   var styleCurrentWindowStandard = Native.GetWindowLong(WindowHandle' WindowLongIndex.Style);                   var styleCurrentWindowExtended = Native.GetWindowLong(WindowHandle' WindowLongIndex.ExtendedStyle);                   targetable = styleCurrentWindowStandard.HasTargetStyles() || styleCurrentWindowExtended.HasExtendedStyles();               }' Config.Instance.AppSettings.SlowWindowDetection ? 10 : 2);
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,ToString,The following statement contains a magic number: BinaryNameForComparison.Substring(0' 5) == WindowTitleForComparison.Substring(0' 5)
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,ToString,The following statement contains a magic number: BinaryNameForComparison.Substring(0' 5) == WindowTitleForComparison.Substring(0' 5)
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,ToString,The following statement contains a magic number: BinaryNameForComparison.Length >= 5
Magic Number,BorderlessGaming.Logic.Models,ProcessDetails,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Models\ProcessDetails.cs,ToString,The following statement contains a magic number: WindowTitleForComparison.Length >= 5
Magic Number,BorderlessGaming.Logic.System,AutoStart,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\AutoStart.cs,CreateEntry,The following statement contains a magic number: var logT = new LogonTrigger {Delay = new TimeSpan(0' 0' 0' 10)};
Magic Number,BorderlessGaming.Logic.System.Utilities,TaskUtilities,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Utilities\TaskUtilities.cs,StartTaskAndWait,The following statement contains a magic number: await Task.Run(async () =>                  {                      var ts = new CancellationTokenSource();                      var ct = ts.Token;                      var task = Task.Factory.StartNew(target' ct);                      var dtStartTime = DateTime.Now;                      while (true)                      {                          if (task.IsCompleted || task.IsCanceled || task.IsFaulted)                          {                              break;                          }                            if (iHowLongToWait > 0)                          {                              if ((DateTime.Now - dtStartTime).TotalSeconds > iHowLongToWait)                              {                                  try                                  {                                      ts.Cancel();                                  }                                  catch                                  {                                      // ignored                                  }                                    break;                              }                          }                            await Task.Delay(15' ct);                          //MainWindow.DoEvents();                      }                  });
Magic Number,BorderlessGaming.Logic.Windows.Audio,VolumeMixer,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Audio\VolumeMixer.cs,GetApplicationVolume,The following statement contains a magic number: return level * 100;
Magic Number,BorderlessGaming.Logic.Windows.Audio,VolumeMixer,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Audio\VolumeMixer.cs,SetApplicationVolume,The following statement contains a magic number: volume.SetMasterVolume(level / 100' ref guid);
Magic Number,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderlessDelayed,The following statement contains a magic number: processDetails.MadeBorderlessAttempts > 3 || ! await processDetails.WindowHasTargetableStyles()
Magic Number,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,MakeWindowBorderlessDelayed,The following statement contains a magic number: await TaskUtilities.WaitAndStartTaskAsync(() =>              {                  Native.SetWindowLong(targetWindow' WindowLongIndex.Style' styleNewWindowStandard);                  Native.SetWindowLong(targetWindow' WindowLongIndex.ExtendedStyle' styleNewWindowExtended);              }' 4);
Magic Number,BorderlessGaming.Logic.Windows,Manipulation,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: Native.SendMessage(hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);
Magic Number,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetClassNameOfWindow,The following statement contains a magic number: var cls_max_length = 1000;
Magic Number,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetClassNameOfWindow,The following statement contains a magic number: classText = new StringBuilder(""' cls_max_length + 5);
Magic Number,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetClassNameOfWindow,The following statement contains a magic number: GetClassName(hwnd' classText' cls_max_length + 2);
Magic Number,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetWindowClassName,The following statement contains a magic number: var sbWindowClassName = new StringBuilder(256);
Magic Number,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetWindowLong,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,SetWindowLong,The following statement contains a magic number: return IntPtr.Size == 8                  ? SetWindowLong64(hWnd' nIndex' dwNewLong)                  : SetWindowLong32(hWnd' nIndex' dwNewLong);
Magic Number,BorderlessGaming.Logic.Windows,Uac,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Uac.cs,IsElevated,The following statement contains a magic number: Environment.OSVersion.Version.Major < 6
Missing Default,BorderlessGaming.Logic.System,Tools,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\System\Tools.cs,CheckForUpdates,The following switch statement is missing a default case: switch (elementName)                                              {                                                  case "version":                                                      newVersion = new Version(reader.Value);                                                      break;                                                  case "url":                                                      releasePageUrl = reader.Value;                                                      break;                                              }
Missing Default,BorderlessGaming.Logic.Windows,Native,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Native.cs,GetMainWindowForProcess_EnumWindows,The following switch statement is missing a default case: switch (lParam)              {                  case 0:                      if (IsWindowVisible(hWndEnumerated))                      {                          if                          (                              (styleCurrentWindowStandard & WindowStyleFlags.Caption) > 0                              && (                                  (styleCurrentWindowStandard & WindowStyleFlags.Border) > 0                                  || (styleCurrentWindowStandard & WindowStyleFlags.ThickFrame) > 0                              )                          )                          {                              ptrList.Add(hWndEnumerated);                          }                      }                      break;                  case 1:                      if (IsWindowVisible(hWndEnumerated))                      {                          if ((uint)styleCurrentWindowStandard != 0)                          {                              ptrList.Add(hWndEnumerated);                          }                      }                      break;              }
Missing Default,BorderlessGaming.Logic.Windows,Windows,D:\research\architectureSmells\repos\Codeusa_Borderless-Gaming\BorderlessGaming.Logic\Windows\Windows.cs,GetMainWindowForProcess_EnumWindows,The following switch statement is missing a default case: switch (lParam)              {                  case 0:                      if (Native.IsWindowVisible(hWndEnumerated))                      {                          if                          (                              (styleCurrentWindowStandard & WindowStyleFlags.Caption) > 0                              && (                                  (styleCurrentWindowStandard & WindowStyleFlags.Border) > 0                                  || (styleCurrentWindowStandard & WindowStyleFlags.ThickFrame) > 0                              )                          )                          {                              ptrList.Add(hWndEnumerated);                          }                      }                      break;                  case 1:                      if (Native.IsWindowVisible(hWndEnumerated))                      {                          if ((uint) styleCurrentWindowStandard != 0)                          {                              ptrList.Add(hWndEnumerated);                          }                      }                      break;              }
