Implementation smell,Namespace,Class,File,Method,Description
Long Method,BorderlessGaming.Forms,AboutForm,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\AboutForm.cs,InitializeComponent,The method has 261 lines of code.
Long Method,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The method has 662 lines of code.
Complex Method,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,WndProc,Cyclomatic complexity of the method is 8
Complex Method,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,Cyclomatic complexity of the method is 10
Complex Method,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,SetClickAction,Cyclomatic complexity of the method is 30
Complex Method,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,Cyclomatic complexity of the method is 17
Complex Method,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,CheckForUpdates,Cyclomatic complexity of the method is 19
Complex Method,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,Cyclomatic complexity of the method is 10
Complex Method,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,Cyclomatic complexity of the method is 10
Complex Method,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodAndWait,Cyclomatic complexity of the method is 10
Complex Method,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,Cyclomatic complexity of the method is 18
Complex Method,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleWindowsTaskbarVisibility,Cyclomatic complexity of the method is 8
Complex Method,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleMouseCursorVisibility,Cyclomatic complexity of the method is 8
Complex Method,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,GetMainWindowForProcess_EnumWindows,Cyclomatic complexity of the method is 8
Long Parameter List,BorderlessGaming.Utilities,NativeMethods,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\UAC.cs,GetTokenInformation,The method has 5 parameters.
Long Parameter List,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The method has 5 parameters.
Long Parameter List,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,SetWindowPos,The method has 7 parameters.
Long Parameter List,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,MoveWindow,The method has 6 parameters.
Long Parameter List,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,SetWindowPos,The method has 7 parameters.
Long Identifier,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The length of the parameter ProcessNameIsDissimilarToWindowTitle is 36.
Long Identifier,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleWindowsTaskbarVisibility,The length of the parameter WantToMakeWindowsTaskbarVisible is 31.
Long Statement,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The length of the statement  "				if (!_processDetails.Select (p => p.Proc.Id).Contains (pd.Proc.Id) || !_processDetails.Select (p => p.WindowTitle).Contains (pd.WindowTitle)) " is 141.
Long Statement,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,RemoveBorder,The length of the statement  "	Manipulation.MakeWindowBorderless (pd' window' pd.WindowHandle' new Rectangle ()' favDetails ?? _favorites.FromProcessDetails (pd)); " is 132.
Long Statement,BorderlessGaming.Common,Favorites,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\Favorites.cs,Save,The length of the statement  "		MessageBox.Show (string.Format (Resources.ErrorFavoritesSave' ex.Message)' Resources.ErrorHeader' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 142.
Long Statement,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The length of the statement  "			WindowsAPI.WindowStyleFlags styleCurrentWindow_standard = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.Style); " is 139.
Long Statement,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The length of the statement  "			WindowsAPI.WindowStyleFlags styleCurrentWindow_extended = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.ExtendedStyle); " is 147.
Long Statement,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The length of the statement  "			string extra_details = string.Format (" [{0:X8}.{1:X8}]"' (UInt32)styleCurrentWindow_standard' (UInt32)styleCurrentWindow_extended); " is 132.
Long Statement,BorderlessGaming.Forms,AboutForm,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\AboutForm.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(AboutForm)); " is 130.
Long Statement,BorderlessGaming.Forms,AboutForm,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\AboutForm.cs,InitializeComponent,The length of the statement  "	this._viewGithubLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler (this.OpenGithubRepo); " is 121.
Long Statement,BorderlessGaming.Forms,AboutForm,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\AboutForm.cs,InitializeComponent,The length of the statement  "	this._viewSteamGroupLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler (this.OpenSteamGroup); " is 125.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,openDataFolderToolStripMenuItem_Click,The length of the statement  "		Process.Start (new ProcessStartInfo ("explorer.exe"' "/e'\"" + AppEnvironment.DataPath + "\"'\"" + AppEnvironment.DataPath + "\"")); " is 132.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,toggleMouseCursorVisibilityToolStripMenuItem_Click,The length of the statement  "	if (Manipulation.MouseCursorIsHidden || (MessageBox.Show ("Do you really want to hide the mouse cursor?\r\n\r\nYou may have a difficult time finding the mouse again once it's hidden.\r\n\r\nIf you have enabled the global hotkey to toggle the mouse cursor visibility' you can press [Win + Scroll Lock] to toggle the mouse cursor on.\r\n\r\nAlso' exiting Borderless Gaming will immediately restore your mouse cursor."' "Really Hide Mouse Cursor?"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning' MessageBoxDefaultButton.Button2) == DialogResult.Yes)) " is 549.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowTitleToolStripMenuItem_Click,The length of the statement  "	Native.SetWindowText (pd.WindowHandle' Tools.Input_Text ("Set Window Title"' "Set the new window title text:"' Native.GetWindowTitle (pd.WindowHandle))); " is 153.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,byTheWindowTitleTextregexToolStripMenuItem_Click,The length of the statement  "		string res = Tools.Input_Text ("Add to favorites by RegEx string"' "Regex string (see the Help menu for reference)"' pd.WindowTitle); " is 133.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,addSelectedItem_Click,The length of the statement  "            */// assume that the button press to add to favorites will do so by window title (unless it's blank' then go by process name) " is 125.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,adjustWindowBoundsToolStripMenuItem_Click,The length of the statement  "	int.TryParse (Tools.Input_Text ("Adjust Window Bounds"' "Pixel adjustment for the left window edge (0 pixels = no adjustment):"' fav.OffsetL.ToString ())' out fav.OffsetL); " is 172.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,adjustWindowBoundsToolStripMenuItem_Click,The length of the statement  "	int.TryParse (Tools.Input_Text ("Adjust Window Bounds"' "Pixel adjustment for the right window edge (0 pixels = no adjustment):"' fav.OffsetR.ToString ())' out fav.OffsetR); " is 173.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,adjustWindowBoundsToolStripMenuItem_Click,The length of the statement  "	int.TryParse (Tools.Input_Text ("Adjust Window Bounds"' "Pixel adjustment for the top window edge (0 pixels = no adjustment):"' fav.OffsetT.ToString ())' out fav.OffsetT); " is 171.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,adjustWindowBoundsToolStripMenuItem_Click,The length of the statement  "	int.TryParse (Tools.Input_Text ("Adjust Window Bounds"' "Pixel adjustment for the bottom window edge (0 pixels = no adjustment):"' fav.OffsetB.ToString ())' out fav.OffsetB); " is 174.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The length of the statement  "	DialogResult result = MessageBox.Show ("Would you like to select the area using your mouse cursor?\r\n\r\nIf you answer No' you will be prompted for specific pixel dimensions."' "Select Area?"' MessageBoxButtons.YesNoCancel' MessageBoxIcon.Question); " is 250.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The length of the statement  "		int.TryParse (Tools.Input_Text ("Set Window Size"' "Pixel X location for the top left corner (X coordinate):"' fav.PositionX.ToString ())' out fav.PositionX); " is 158.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The length of the statement  "		int.TryParse (Tools.Input_Text ("Set Window Size"' "Pixel Y location for the top left corner (Y coordinate):"' fav.PositionY.ToString ())' out fav.PositionY); " is 158.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The length of the statement  "		int.TryParse (Tools.Input_Text ("Set Window Size"' "Window width (in pixels):"' fav.PositionW.ToString ())' out fav.PositionW); " is 127.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The length of the statement  "		int.TryParse (Tools.Input_Text ("Set Window Size"' "Window height (in pixels):"' fav.PositionH.ToString ())' out fav.PositionH); " is 128.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,fullScreenToolStripMenuItem_Click,The length of the statement  "	fav.SizeMode = (fullScreenToolStripMenuItem.Checked) ? Favorites.Favorite.SizeModes.FullScreen : Favorites.Favorite.SizeModes.NoChange; " is 135.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,noSizeChangeToolStripMenuItem_Click,The length of the statement  "	fav.SizeMode = (noSizeChangeToolStripMenuItem.Checked) ? Favorites.Favorite.SizeModes.NoChange : Favorites.Favorite.SizeModes.FullScreen; " is 137.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,mnuFavoritesContext_Opening,The length of the statement  "	adjustWindowBoundsToolStripMenuItem.Enabled = (fav.SizeMode == Favorites.Favorite.SizeModes.FullScreen) && (!fav.ShouldMaximize); " is 129.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Load,The length of the statement  "	Text = "Borderless Gaming " + Assembly.GetExecutingAssembly ().GetName ().Version.ToString (2) + ((UAC.Elevated) ? " [Administrator]" : ""); " is 140.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Load,The length of the statement  "		disableSteamIntegrationToolStripMenuItem.CheckedChanged += new EventHandler (disableSteamIntegrationToolStripMenuItem_CheckChanged); " is 132.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_FormClosing,The length of the statement  "	// This prevents a scenario where the user can't (easily) get back to Borderless Gaming to undo the hidden mouse cursor. " is 120.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,addSelectedItem_MouseHover,The length of the statement  "	ttTemp.SetToolTip ((Control)sender' "Adds the currently-selected application to your favorites list (by the window title)."); " is 125.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(MainWindow)); " is 131.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.byTheWindowTitleTextToolStripMenuItem.Click += new System.EventHandler (this.byTheWindowTitleTextToolStripMenuItem_Click); " is 127.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.byTheWindowTitleTextregexToolStripMenuItem' "byTheWindowTitleTextregexToolStripMenuItem"); " is 121.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.byTheWindowTitleTextregexToolStripMenuItem.Click += new System.EventHandler (this.byTheWindowTitleTextregexToolStripMenuItem_Click); " is 137.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.byTheProcessBinaryNameToolStripMenuItem.Click += new System.EventHandler (this.byTheProcessBinaryNameToolStripMenuItem_Click); " is 131.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.adjustWindowBoundsToolStripMenuItem.Click += new System.EventHandler (this.adjustWindowBoundsToolStripMenuItem_Click); " is 123.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.hideWindowsTaskbarToolStripMenuItem.Click += new System.EventHandler (this.hideWindowsTaskbarToolStripMenuItem_Click); " is 123.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.useMouseHideHotkeyWinScrollLockToolStripMenuItem' "useMouseHideHotkeyWinScrollLockToolStripMenuItem"); " is 133.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.useMouseHideHotkeyWinScrollLockToolStripMenuItem.CheckedChanged += new System.EventHandler (this.useMouseHideHotkeyWinScrollLockToolStripMenuItem_CheckChanged); " is 165.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.startMinimizedToTrayToolStripMenuItem.CheckedChanged += new System.EventHandler (this.startMinimizedToTrayToolStripMenuItem_CheckedChanged); " is 145.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.closeToTrayToolStripMenuItem.CheckedChanged += new System.EventHandler (this.closeToTrayToolStripMenuItem_CheckedChanged); " is 127.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.hideBalloonTipsToolStripMenuItem.CheckedChanged += new System.EventHandler (this.hideBalloonTipsToolStripMenuItem_CheckedChanged); " is 135.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.useSlowerWindowDetectionToolStripMenuItem.Click += new System.EventHandler (this.useSlowerWindowDetectionToolStripMenuItem_Click); " is 135.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.viewFullProcessDetailsToolStripMenuItem.CheckedChanged += new System.EventHandler (this.viewFullProcessDetailsToolStripMenuItem_CheckedChanged); " is 149.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.pauseAutomaticProcessingToolStripMenuItem.Click += new System.EventHandler (this.pauseAutomaticProcessingToolStripMenuItem_Click); " is 135.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.toggleMouseCursorVisibilityToolStripMenuItem' "toggleMouseCursorVisibilityToolStripMenuItem"); " is 125.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.toggleMouseCursorVisibilityToolStripMenuItem.Click += new System.EventHandler (this.toggleMouseCursorVisibilityToolStripMenuItem_Click); " is 141.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.toggleWindowsTaskbarVisibilityToolStripMenuItem' "toggleWindowsTaskbarVisibilityToolStripMenuItem"); " is 131.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.toggleWindowsTaskbarVisibilityToolStripMenuItem.Click += new System.EventHandler (this.toggleWindowsTaskbarVisibilityToolStripMenuItem_Click); " is 147.
Long Statement,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The length of the statement  "	this.fullApplicationRefreshToolStripMenuItem.Click += new System.EventHandler (this.fullApplicationRefreshToolStripMenuItem_Click); " is 131.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,DesktopAreaSelector_Shown,The length of the statement  "	MessageBox.Show ("Draw a rectangle on the screen to outline where you want the game window to appear.\r\n\r\nYou can move' drag' and resize the rectangle after you have drawn it.\r\n\r\nDouble-click to confirm your selection or press Escape to abort."' "Draw Window Rectangle"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 328.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.X > CurrentTopLeft.X - 10 && RealCursorPosition.X < CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) { " is 209.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) { " is 209.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) { " is 217.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.X > CurrentBottomRight.X - 10 && RealCursorPosition.X < CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) { " is 217.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) { " is 217.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) { " is 225.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.Y > CurrentTopLeft.Y - 10) && (RealCursorPosition.Y < CurrentTopLeft.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) { " is 209.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if (((RealCursorPosition.Y > CurrentBottomRight.Y - 10) && (RealCursorPosition.Y < CurrentBottomRight.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) { " is 217.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The length of the statement  "	if ((RealCursorPosition.X >= CurrentTopLeft.X + 10 && RealCursorPosition.X <= CurrentBottomRight.X - 10) && (RealCursorPosition.Y >= CurrentTopLeft.Y + 10 && RealCursorPosition.Y <= CurrentBottomRight.Y - 10)) { " is 211.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The length of the statement  "			grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,DragSelection,The length of the statement  "	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 170.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,DragSelection,The length of the statement  "	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight); " is 166.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,DrawSelection,The length of the statement  "	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' TranslateRealPointToDrawn (CurrentBottomRight).X - TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentBottomRight).Y - TranslateRealPointToDrawn (CurrentTopLeft).Y); " is 331.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,DrawSelection,The length of the statement  "	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' TranslateRealPointToDrawn (CurrentBottomRight).X - TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentBottomRight).Y - TranslateRealPointToDrawn (CurrentTopLeft).Y); " is 327.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(DesktopAreaSelector)); " is 140.
Long Statement,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,InitializeComponent,The length of the statement  "	this.BackColor = System.Drawing.Color.FromArgb (((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(192))))); " is 120.
Long Statement,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(InputText)); " is 130.
Long Statement,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The length of the statement  "	this.lblInstructions.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 239.
Long Statement,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The length of the statement  "	this.txtInput.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 190.
Long Statement,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The length of the statement  "	this.btnOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 144.
Long Statement,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The length of the statement  "	this.btnCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 148.
Long Statement,BorderlessGaming.Utilities,ExceptionHandler,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The length of the statement  "			string filePath = Path.Combine (LogsPath' string.Format ("UnhandledException_{0}.json"' DateTime.Now.ToShortDateString ().Replace ("/"' "-"))); " is 143.
Long Statement,BorderlessGaming.Utilities,ExceptionHandler,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The length of the statement  "			MessageBox.Show (string.Format ("An Unhandled Exception was Caught and Logged to:\r\n{0}"' filePath)' "Exception Caught"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 166.
Long Statement,BorderlessGaming.Utilities,ExceptionHandler,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The length of the statement  "			string filePath = Path.Combine (LogsPath' string.Format ("ThreadException_{0}.json"' DateTime.Now.ToShortDateString ().Replace ("/"' "-"))); " is 140.
Long Statement,BorderlessGaming.Utilities,ExceptionHandler,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The length of the statement  "			MessageBox.Show (string.Format ("An Unhandled Thread Exception was Caught and Logged to:\r\n{0}"' filePath)' "Thread Exception Caught"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 180.
Long Statement,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,CheckForUpdates,The length of the statement  "				if (MessageBox.Show (Resources.InfoUpdateAvailable' Resources.InfoUpdatesHeader' MessageBoxButtons.YesNo' MessageBoxIcon.Information) == DialogResult.Yes) { " is 156.
Long Statement,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,GetDataPath,The length of the statement  "		return Environment.GetEnvironmentVariable ("AppData").Trim () + "\\" + Application.CompanyName + "\\" + Application.ProductName; " is 128.
Long Statement,BorderlessGaming.Utilities,UAC,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\UAC.cs,IsProcessElevated,The length of the statement  "		if (!NativeMethods.GetTokenInformation (hToken' TOKEN_INFORMATION_CLASS.TokenElevation' pTokenElevation' cbTokenElevation' out cbTokenElevation)) { " is 147.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "	var styleNewWindowStandard = (styleCurrentWindowStandard & ~(WindowStyleFlags.Caption // composite of Border and DialogFrame " is 124.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "	| WindowStyleFlags.ThickFrame | WindowStyleFlags.OverlappedWindow | WindowStyleFlags.SystemMenu | WindowStyleFlags.MaximizeBox // same as TabStop " is 145.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "	var styleNewWindowExtended = (styleCurrentWindowExtended & ~(WindowStyleFlags.ExtendedDlgModalFrame | WindowStyleFlags.ExtendedComposited | WindowStyleFlags.ExtendedWindowEdge | WindowStyleFlags.ExtendedClientEdge | WindowStyleFlags.ExtendedLayered | WindowStyleFlags.ExtendedStaticEdge | WindowStyleFlags.ExtendedToolWindow | WindowStyleFlags.ExtendedAppWindow)); " is 364.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "		processDetails.OriginalLocation = new Rectangle (rect_temp.Left' rect_temp.Top' rect_temp.Right - rect_temp.Left' rect_temp.Bottom - rect_temp.Top); " is 148.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "		if ((favDetails.SizeMode == Favorites.Favorite.SizeModes.FullScreen) || (favDetails.PositionW == 0) || (favDetails.PositionH == 0)) { " is 133.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "			Native.SetWindowPos (targetWindow' 0' targetFrame.X + favDetails.OffsetL' targetFrame.Y + favDetails.OffsetT' targetFrame.Width - favDetails.OffsetL + favDetails.OffsetR' targetFrame.Height - favDetails.OffsetT + favDetails.OffsetB' SetWindowPosFlags.ShowWindow | SetWindowPosFlags.NoOwnerZOrder | SetWindowPosFlags.NoSendChanging); " is 332.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "			Native.SetWindowPos (targetWindow' 0' favDetails.PositionX' favDetails.PositionY' favDetails.PositionW' favDetails.PositionH' SetWindowPosFlags.ShowWindow | SetWindowPosFlags.NoOwnerZOrder | SetWindowPosFlags.NoSendChanging); " is 225.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The length of the statement  "		Native.SetWindowPos (targetWindow' Native.HWND_TOPMOST' 0' 0' 0' 0' SetWindowPosFlags.ShowWindow | SetWindowPosFlags.NoMove | SetWindowPosFlags.NoSize | SetWindowPosFlags.NoSendChanging); " is 187.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RestoreWindow,The length of the statement  "	Native.SetWindowPos (pd.WindowHandle' IntPtr.Zero' pd.OriginalLocation.X' pd.OriginalLocation.Y' pd.OriginalLocation.Width' pd.OriginalLocation.Height' SetWindowPosFlags.ShowWindow | SetWindowPosFlags.NoZOrder); " is 211.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RestoreWindow,The length of the statement  "	Native.SetWindowPos (pd.WindowHandle' Native.HWND_NOTTOPMOST' 0' 0' 0' 0' SetWindowPosFlags.NoActivate | SetWindowPosFlags.NoMove | SetWindowPosFlags.NoSize); " is 158.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleWindowsTaskbarVisibility,The length of the statement  "		bool WantToMakeWindowsTaskbarVisible = (forced == Tools.Boolstate.True) ? true : (forced == Tools.Boolstate.False) ? false : !TaskBarIsCurrentlyVisible; " is 152.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleWindowsTaskbarVisibility,The length of the statement  "		Native.ShowWindow (hTaskBar' (WantToMakeWindowsTaskbarVisible) ? WindowShowStyle.ShowNoActivate : WindowShowStyle.Hide); " is 120.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleMouseCursorVisibility,The length of the statement  "	if (((forced == Tools.Boolstate.True) && (!MouseCursorIsHidden)) || ((forced == Tools.Boolstate.False) && MouseCursorIsHidden)) " is 127.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleMouseCursorVisibility,The length of the statement  "				// Can't load from a memory stream because the constructor new Cursor() does not accept animated or non-monochrome cursors " is 122.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The length of the statement  "		IntPtr hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "Notification Area"); " is 196.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The length of the statement  "			hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "User Promoted Notification Area"); " is 203.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The length of the statement  "		// Note: this doesn't actually move the mouse cursor on the screen -- this just sends a message to the system tray window " is 121.
Long Statement,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The length of the statement  "		//       that mouse movement occurred over it' forcing it to refresh.  Sending messages asking for a repaint or invalidated " is 123.
Long Statement,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,GetMainWindowForProcess_EnumWindows,The length of the statement  "				if (((styleCurrentWindow_standard & WindowStyleFlags.Caption) > 0) && (((styleCurrentWindow_standard & WindowStyleFlags.Border) > 0) || ((styleCurrentWindow_standard & WindowStyleFlags.ThickFrame) > 0))) { " is 205.
Long Statement,BorderlessGaming.WindowsAPI,Windows,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Windows.cs,GetMainWindowForProcess_EnumWindows,The length of the statement  "			if (((styleCurrentWindowStandard & WindowStyleFlags.Caption) > 0) && (((styleCurrentWindowStandard & WindowStyleFlags.Border) > 0) || ((styleCurrentWindowStandard & WindowStyleFlags.ThickFrame) > 0))) { " is 202.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.X > CurrentTopLeft.X - 10 && RealCursorPosition.X < CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.X > CurrentBottomRight.X - 10 && RealCursorPosition.X < CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.Y > CurrentTopLeft.Y - 10) && (RealCursorPosition.Y < CurrentTopLeft.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "((RealCursorPosition.Y > CurrentBottomRight.Y - 10) && (RealCursorPosition.Y < CurrentBottomRight.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))"  is complex.
Complex Conditional,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The conditional expression  "(RealCursorPosition.X >= CurrentTopLeft.X + 10 && RealCursorPosition.X <= CurrentBottomRight.X - 10) && (RealCursorPosition.Y >= CurrentTopLeft.Y + 10 && RealCursorPosition.Y <= CurrentBottomRight.Y - 10)"  is complex.
Complex Conditional,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleMouseCursorVisibility,The conditional expression  "((forced == Tools.Boolstate.True) && (!MouseCursorIsHidden)) || ((forced == Tools.Boolstate.False) && MouseCursorIsHidden)"  is complex.
Empty Catch Block,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The method has an empty catch block.
Empty Catch Block,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The method has an empty catch block.
Empty Catch Block,BorderlessGaming,Program,F:\newReposMay17\Codeusa_Borderless-Gaming\Program.cs,Main,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Common,Favorites,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\Favorites.cs,Load,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Common,Favorites,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\Favorites.cs,Load,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Common,HiddenProcesses,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\HiddenProcesses.cs,Save,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Common,HiddenProcesses,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\HiddenProcesses.cs,Load,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,DoEvents,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,openDataFolderToolStripMenuItem_Click,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,AppEnvironment,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\AppEnvironment.cs,Setting,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,AppEnvironment,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\AppEnvironment.cs,Setting,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,AppEnvironment,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\AppEnvironment.cs,SettingValue,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,ExceptionHandler,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,ExceptionHandler,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\ExceptionHandler.cs,AddGlobalHandlers,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,GotoSite,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,CheckForUpdates,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,Input_Text,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,GetDataPath,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodAndWait,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreaded,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.Utilities,UAC,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\UAC.cs,IsElevated,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleWindowsTaskbarVisibility,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleMouseCursorVisibility,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,ToggleMouseCursorVisibility,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,GetMainWindowForProcess,The method has an empty catch block.
Empty Catch Block,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,GetMainWindowForProcess,The method has an empty catch block.
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,DoMainWork,The following statement contains a magic number: while (!workerTaskToken.IsCancellationRequested) {  	// update the processlist  	UpdateProcesses ();  	if (AutoHandleFavorites) {  		// check favorites against the cache  		foreach (var pd in _processDetails) {  			foreach (var fav_process in Favorites) {  				if (fav_process.Matches (pd)) {  					RemoveBorder (pd' fav_process);  				}  			}  		}  	}  	Task.WaitAll (Task.Delay (3000));  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,DoMainWork,The following statement contains a magic number: Task.WaitAll (Task.Delay (3000));  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: lock (updateLock) {  	// check existing processes for changes (auto-prune)  	for (int i = 0; i < _processDetails.Count;) {  		try {  			var pd = _processDetails [i];  			var shouldBePruned = pd.ProcessHasExited;  			if (!shouldBePruned) {  				var currentTitle = "";  				if (!pd.NoAccess) {  					// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  					Tools.StartMethodMultithreadedAndWait (() => {  						currentTitle = Native.GetWindowTitle (pd.WindowHandle);  					}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  					shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  				}  			}  			if (shouldBePruned) {  				if (pd.MadeBorderless)  					HandlePrunedProcess (pd);  				_processDetails.RemoveAt (i);  			} else  				i++;  		} catch {  			// swallow any exceptions and move to the next item in the array  			i++;  		}  	}  	// add new process windows  	try {  		windows.QueryProcessesWithWindows (pd => {  			if (_hiddenProcesses.IsHidden (pd.Proc.ProcessName))  				return;  			if (!_processDetails.Select (p => p.Proc.Id).Contains (pd.Proc.Id) || !_processDetails.Select (p => p.WindowTitle).Contains (pd.WindowTitle))  				_processDetails.Add (pd);  		}' _processDetails.WindowPtrSet);  	} catch {  	}  	// swallow any exceptions in attempting to add new windows  	// update window  	window.lblUpdateStatus.Text = "Right-click for more options.  Last updated " + DateTime.Now.ToString ();  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: lock (updateLock) {  	// check existing processes for changes (auto-prune)  	for (int i = 0; i < _processDetails.Count;) {  		try {  			var pd = _processDetails [i];  			var shouldBePruned = pd.ProcessHasExited;  			if (!shouldBePruned) {  				var currentTitle = "";  				if (!pd.NoAccess) {  					// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  					Tools.StartMethodMultithreadedAndWait (() => {  						currentTitle = Native.GetWindowTitle (pd.WindowHandle);  					}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  					shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  				}  			}  			if (shouldBePruned) {  				if (pd.MadeBorderless)  					HandlePrunedProcess (pd);  				_processDetails.RemoveAt (i);  			} else  				i++;  		} catch {  			// swallow any exceptions and move to the next item in the array  			i++;  		}  	}  	// add new process windows  	try {  		windows.QueryProcessesWithWindows (pd => {  			if (_hiddenProcesses.IsHidden (pd.Proc.ProcessName))  				return;  			if (!_processDetails.Select (p => p.Proc.Id).Contains (pd.Proc.Id) || !_processDetails.Select (p => p.WindowTitle).Contains (pd.WindowTitle))  				_processDetails.Add (pd);  		}' _processDetails.WindowPtrSet);  	} catch {  	}  	// swallow any exceptions in attempting to add new windows  	// update window  	window.lblUpdateStatus.Text = "Right-click for more options.  Last updated " + DateTime.Now.ToString ();  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: for (int i = 0; i < _processDetails.Count;) {  	try {  		var pd = _processDetails [i];  		var shouldBePruned = pd.ProcessHasExited;  		if (!shouldBePruned) {  			var currentTitle = "";  			if (!pd.NoAccess) {  				// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  				Tools.StartMethodMultithreadedAndWait (() => {  					currentTitle = Native.GetWindowTitle (pd.WindowHandle);  				}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  				shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  			}  		}  		if (shouldBePruned) {  			if (pd.MadeBorderless)  				HandlePrunedProcess (pd);  			_processDetails.RemoveAt (i);  		} else  			i++;  	} catch {  		// swallow any exceptions and move to the next item in the array  		i++;  	}  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: for (int i = 0; i < _processDetails.Count;) {  	try {  		var pd = _processDetails [i];  		var shouldBePruned = pd.ProcessHasExited;  		if (!shouldBePruned) {  			var currentTitle = "";  			if (!pd.NoAccess) {  				// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  				Tools.StartMethodMultithreadedAndWait (() => {  					currentTitle = Native.GetWindowTitle (pd.WindowHandle);  				}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  				shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  			}  		}  		if (shouldBePruned) {  			if (pd.MadeBorderless)  				HandlePrunedProcess (pd);  			_processDetails.RemoveAt (i);  		} else  			i++;  	} catch {  		// swallow any exceptions and move to the next item in the array  		i++;  	}  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: try {  	var pd = _processDetails [i];  	var shouldBePruned = pd.ProcessHasExited;  	if (!shouldBePruned) {  		var currentTitle = "";  		if (!pd.NoAccess) {  			// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  			Tools.StartMethodMultithreadedAndWait (() => {  				currentTitle = Native.GetWindowTitle (pd.WindowHandle);  			}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  			shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  		}  	}  	if (shouldBePruned) {  		if (pd.MadeBorderless)  			HandlePrunedProcess (pd);  		_processDetails.RemoveAt (i);  	} else  		i++;  } catch {  	// swallow any exceptions and move to the next item in the array  	i++;  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: try {  	var pd = _processDetails [i];  	var shouldBePruned = pd.ProcessHasExited;  	if (!shouldBePruned) {  		var currentTitle = "";  		if (!pd.NoAccess) {  			// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  			Tools.StartMethodMultithreadedAndWait (() => {  				currentTitle = Native.GetWindowTitle (pd.WindowHandle);  			}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  			shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  		}  	}  	if (shouldBePruned) {  		if (pd.MadeBorderless)  			HandlePrunedProcess (pd);  		_processDetails.RemoveAt (i);  	} else  		i++;  } catch {  	// swallow any exceptions and move to the next item in the array  	i++;  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: if (!shouldBePruned) {  	var currentTitle = "";  	if (!pd.NoAccess) {  		// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  		Tools.StartMethodMultithreadedAndWait (() => {  			currentTitle = Native.GetWindowTitle (pd.WindowHandle);  		}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  		shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  	}  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: if (!shouldBePruned) {  	var currentTitle = "";  	if (!pd.NoAccess) {  		// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  		Tools.StartMethodMultithreadedAndWait (() => {  			currentTitle = Native.GetWindowTitle (pd.WindowHandle);  		}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  		shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  	}  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: if (!pd.NoAccess) {  	// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  	Tools.StartMethodMultithreadedAndWait (() => {  		currentTitle = Native.GetWindowTitle (pd.WindowHandle);  	}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  	shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: if (!pd.NoAccess) {  	// 2 or 10 seconds until window title timeout' depending on slow-window detection mode  	Tools.StartMethodMultithreadedAndWait (() => {  		currentTitle = Native.GetWindowTitle (pd.WindowHandle);  	}' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  	shouldBePruned = shouldBePruned || (pd.WindowTitle != currentTitle);  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: Tools.StartMethodMultithreadedAndWait (() => {  	currentTitle = Native.GetWindowTitle (pd.WindowHandle);  }' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,UpdateProcesses,The following statement contains a magic number: Tools.StartMethodMultithreadedAndWait (() => {  	currentTitle = Native.GetWindowTitle (pd.WindowHandle);  }' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,RemoveBorder,The following statement contains a magic number: if (favDetails != null && favDetails.DelayBorderless == true && overrideTimeout == false) {  	//Wait 10 seconds before removing the border.  	Task task = new Task (() => RemoveBorder (pd' favDetails' true));  	task.Wait (TimeSpan.FromSeconds (10));  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,RemoveBorder,The following statement contains a magic number: task.Wait (TimeSpan.FromSeconds (10));  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,RemoveBorder_ToSpecificScreen,The following statement contains a magic number: if (favDetails != null && favDetails.DelayBorderless == true && overrideTimeout == false) {  	//Wait 10 seconds before removing the border.  	Task task = new Task (() => RemoveBorder_ToSpecificScreen (hWnd' screen' favDetails' true));  	task.Wait (TimeSpan.FromSeconds (10));  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,RemoveBorder_ToSpecificScreen,The following statement contains a magic number: task.Wait (TimeSpan.FromSeconds (10));  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,RemoveBorder_ToSpecificRect,The following statement contains a magic number: if (favDetails != null && favDetails.DelayBorderless == true && overrideTimeout == false) {  	//Wait 10 seconds before removing the border.  	Task task = new Task (() => RemoveBorder_ToSpecificRect (hWnd' targetFrame' favDetails' true));  	task.Wait (TimeSpan.FromSeconds (10));  }  
Magic Number,BorderlessGaming,BorderlessGaming,F:\newReposMay17\Codeusa_Borderless-Gaming\BorderlessGaming.cs,RemoveBorder_ToSpecificRect,The following statement contains a magic number: task.Wait (TimeSpan.FromSeconds (10));  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ProcessDetails,The following statement contains a magic number: Tools.StartMethodMultithreadedAndWait (() => {  	WindowTitle = WindowsAPI.Native.GetWindowTitle (WindowHandle);  }' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ProcessDetails,The following statement contains a magic number: Tools.StartMethodMultithreadedAndWait (() => {  	WindowTitle = WindowsAPI.Native.GetWindowTitle (WindowHandle);  }' (AppEnvironment.SettingValue ("SlowWindowDetection"' false)) ? 10 : 2);  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: try {  	if (!string.IsNullOrEmpty (DescriptionOverride))  		return DescriptionOverride;  	if (AppEnvironment.SettingValue ("ViewAllProcessDetails"' false)) {  		WindowsAPI.WindowStyleFlags styleCurrentWindow_standard = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.Style);  		WindowsAPI.WindowStyleFlags styleCurrentWindow_extended = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.ExtendedStyle);  		string extra_details = string.Format (" [{0:X8}.{1:X8}]"' (UInt32)styleCurrentWindow_standard' (UInt32)styleCurrentWindow_extended);  		if (WindowTitle.Trim ().Length == 0)  			return BinaryName + " [#" + Proc.Id.ToString () + "]" + extra_details;  		return WindowTitle.Trim () + " [" + BinaryName + "' #" + Proc.Id.ToString () + "]" + extra_details;  	}  	if (WindowTitle.Trim ().Length == 0)  		return BinaryName;  	bool ProcessNameIsDissimilarToWindowTitle = true;  	if (WindowTitle_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Length >= 5)  			if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  				ProcessNameIsDissimilarToWindowTitle = false;  	if (ProcessNameIsDissimilarToWindowTitle)  		return WindowTitle.Trim () + " [" + BinaryName + "]";  	return WindowTitle.Trim ();  } catch {  }  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: try {  	if (!string.IsNullOrEmpty (DescriptionOverride))  		return DescriptionOverride;  	if (AppEnvironment.SettingValue ("ViewAllProcessDetails"' false)) {  		WindowsAPI.WindowStyleFlags styleCurrentWindow_standard = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.Style);  		WindowsAPI.WindowStyleFlags styleCurrentWindow_extended = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.ExtendedStyle);  		string extra_details = string.Format (" [{0:X8}.{1:X8}]"' (UInt32)styleCurrentWindow_standard' (UInt32)styleCurrentWindow_extended);  		if (WindowTitle.Trim ().Length == 0)  			return BinaryName + " [#" + Proc.Id.ToString () + "]" + extra_details;  		return WindowTitle.Trim () + " [" + BinaryName + "' #" + Proc.Id.ToString () + "]" + extra_details;  	}  	if (WindowTitle.Trim ().Length == 0)  		return BinaryName;  	bool ProcessNameIsDissimilarToWindowTitle = true;  	if (WindowTitle_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Length >= 5)  			if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  				ProcessNameIsDissimilarToWindowTitle = false;  	if (ProcessNameIsDissimilarToWindowTitle)  		return WindowTitle.Trim () + " [" + BinaryName + "]";  	return WindowTitle.Trim ();  } catch {  }  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: try {  	if (!string.IsNullOrEmpty (DescriptionOverride))  		return DescriptionOverride;  	if (AppEnvironment.SettingValue ("ViewAllProcessDetails"' false)) {  		WindowsAPI.WindowStyleFlags styleCurrentWindow_standard = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.Style);  		WindowsAPI.WindowStyleFlags styleCurrentWindow_extended = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.ExtendedStyle);  		string extra_details = string.Format (" [{0:X8}.{1:X8}]"' (UInt32)styleCurrentWindow_standard' (UInt32)styleCurrentWindow_extended);  		if (WindowTitle.Trim ().Length == 0)  			return BinaryName + " [#" + Proc.Id.ToString () + "]" + extra_details;  		return WindowTitle.Trim () + " [" + BinaryName + "' #" + Proc.Id.ToString () + "]" + extra_details;  	}  	if (WindowTitle.Trim ().Length == 0)  		return BinaryName;  	bool ProcessNameIsDissimilarToWindowTitle = true;  	if (WindowTitle_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Length >= 5)  			if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  				ProcessNameIsDissimilarToWindowTitle = false;  	if (ProcessNameIsDissimilarToWindowTitle)  		return WindowTitle.Trim () + " [" + BinaryName + "]";  	return WindowTitle.Trim ();  } catch {  }  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: try {  	if (!string.IsNullOrEmpty (DescriptionOverride))  		return DescriptionOverride;  	if (AppEnvironment.SettingValue ("ViewAllProcessDetails"' false)) {  		WindowsAPI.WindowStyleFlags styleCurrentWindow_standard = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.Style);  		WindowsAPI.WindowStyleFlags styleCurrentWindow_extended = WindowsAPI.Native.GetWindowLong (WindowHandle' WindowsAPI.WindowLongIndex.ExtendedStyle);  		string extra_details = string.Format (" [{0:X8}.{1:X8}]"' (UInt32)styleCurrentWindow_standard' (UInt32)styleCurrentWindow_extended);  		if (WindowTitle.Trim ().Length == 0)  			return BinaryName + " [#" + Proc.Id.ToString () + "]" + extra_details;  		return WindowTitle.Trim () + " [" + BinaryName + "' #" + Proc.Id.ToString () + "]" + extra_details;  	}  	if (WindowTitle.Trim ().Length == 0)  		return BinaryName;  	bool ProcessNameIsDissimilarToWindowTitle = true;  	if (WindowTitle_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Length >= 5)  			if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  				ProcessNameIsDissimilarToWindowTitle = false;  	if (ProcessNameIsDissimilarToWindowTitle)  		return WindowTitle.Trim () + " [" + BinaryName + "]";  	return WindowTitle.Trim ();  } catch {  }  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (WindowTitle_ForComparison.Length >= 5)  	if (BinaryName_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  			ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (WindowTitle_ForComparison.Length >= 5)  	if (BinaryName_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  			ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (WindowTitle_ForComparison.Length >= 5)  	if (BinaryName_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  			ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (WindowTitle_ForComparison.Length >= 5)  	if (BinaryName_ForComparison.Length >= 5)  		if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  			ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (BinaryName_ForComparison.Length >= 5)  	if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  		ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (BinaryName_ForComparison.Length >= 5)  	if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  		ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (BinaryName_ForComparison.Length >= 5)  	if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  		ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  	ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Common,ProcessDetails,F:\newReposMay17\Codeusa_Borderless-Gaming\Common\ProcessDetails.cs,ToString,The following statement contains a magic number: if (BinaryName_ForComparison.Substring (0' 5) == WindowTitle_ForComparison.Substring (0' 5))  	ProcessNameIsDissimilarToWindowTitle = false;  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.Yes) {  	using (DesktopAreaSelector frmSelectArea = new DesktopAreaSelector ()) {  		if (frmSelectArea.ShowDialog () != DialogResult.OK)  			return;  		// Temporarily disable compiler warning CS1690: http://msdn.microsoft.com/en-us/library/x524dkh4.aspx  		//  		// We know what we're doing: everything is safe here.  		#pragma  		fav.PositionX = frmSelectArea.CurrentTopLeft.X;  		fav.PositionY = frmSelectArea.CurrentTopLeft.Y;  		fav.PositionW = frmSelectArea.CurrentBottomRight.X - frmSelectArea.CurrentTopLeft.X;  		fav.PositionH = frmSelectArea.CurrentBottomRight.Y - frmSelectArea.CurrentTopLeft.Y;  		#pragma  	}  } else// System.Windows.Forms.DialogResult.No   {  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Pixel X location for the top left corner (X coordinate):"' fav.PositionX.ToString ())' out fav.PositionX);  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Pixel Y location for the top left corner (Y coordinate):"' fav.PositionY.ToString ())' out fav.PositionY);  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Window width (in pixels):"' fav.PositionW.ToString ())' out fav.PositionW);  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Window height (in pixels):"' fav.PositionH.ToString ())' out fav.PositionH);  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The following statement contains a magic number: if (result == DialogResult.Yes) {  	using (DesktopAreaSelector frmSelectArea = new DesktopAreaSelector ()) {  		if (frmSelectArea.ShowDialog () != DialogResult.OK)  			return;  		// Temporarily disable compiler warning CS1690: http://msdn.microsoft.com/en-us/library/x524dkh4.aspx  		//  		// We know what we're doing: everything is safe here.  		#pragma  		fav.PositionX = frmSelectArea.CurrentTopLeft.X;  		fav.PositionY = frmSelectArea.CurrentTopLeft.Y;  		fav.PositionW = frmSelectArea.CurrentBottomRight.X - frmSelectArea.CurrentTopLeft.X;  		fav.PositionH = frmSelectArea.CurrentBottomRight.Y - frmSelectArea.CurrentTopLeft.Y;  		#pragma  	}  } else// System.Windows.Forms.DialogResult.No   {  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Pixel X location for the top left corner (X coordinate):"' fav.PositionX.ToString ())' out fav.PositionX);  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Pixel Y location for the top left corner (Y coordinate):"' fav.PositionY.ToString ())' out fav.PositionY);  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Window width (in pixels):"' fav.PositionW.ToString ())' out fav.PositionW);  	int.TryParse (Tools.Input_Text ("Set Window Size"' "Window height (in pixels):"' fav.PositionH.ToString ())' out fav.PositionH);  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The following statement contains a magic number: using (DesktopAreaSelector frmSelectArea = new DesktopAreaSelector ()) {  	if (frmSelectArea.ShowDialog () != DialogResult.OK)  		return;  	// Temporarily disable compiler warning CS1690: http://msdn.microsoft.com/en-us/library/x524dkh4.aspx  	//  	// We know what we're doing: everything is safe here.  	#pragma  	fav.PositionX = frmSelectArea.CurrentTopLeft.X;  	fav.PositionY = frmSelectArea.CurrentTopLeft.Y;  	fav.PositionW = frmSelectArea.CurrentBottomRight.X - frmSelectArea.CurrentTopLeft.X;  	fav.PositionH = frmSelectArea.CurrentBottomRight.Y - frmSelectArea.CurrentTopLeft.Y;  	#pragma  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,setWindowSizeToolStripMenuItem_Click,The following statement contains a magic number: using (DesktopAreaSelector frmSelectArea = new DesktopAreaSelector ()) {  	if (frmSelectArea.ShowDialog () != DialogResult.OK)  		return;  	// Temporarily disable compiler warning CS1690: http://msdn.microsoft.com/en-us/library/x524dkh4.aspx  	//  	// We know what we're doing: everything is safe here.  	#pragma  	fav.PositionX = frmSelectArea.CurrentTopLeft.X;  	fav.PositionY = frmSelectArea.CurrentTopLeft.Y;  	fav.PositionW = frmSelectArea.CurrentBottomRight.X - frmSelectArea.CurrentTopLeft.X;  	fav.PositionH = frmSelectArea.CurrentBottomRight.Y - frmSelectArea.CurrentTopLeft.Y;  	#pragma  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,processContext_Opening,The following statement contains a magic number: if (Screen.AllScreens.Length < 2) {  	contextBorderlessOn.Visible = false;  } else {  	contextBorderlessOn.Visible = true;  	if (contextBorderlessOn.HasDropDownItems)  		contextBorderlessOn.DropDownItems.Clear ();  	Rectangle superSize = Screen.PrimaryScreen.Bounds;  	foreach (Screen screen in Screen.AllScreens) {  		superSize = Tools.GetContainingRectangle (superSize' screen.Bounds);  		// fix for a .net-bug on Windows XP  		int idx = screen.DeviceName.IndexOf ('\0');  		string fixedDeviceName = (idx > 0) ? screen.DeviceName.Substring (0' idx) : screen.DeviceName;  		string label = fixedDeviceName + ((screen.Primary) ? " (P)" : string.Empty);  		ToolStripMenuItem tsi = new ToolStripMenuItem (label);  		tsi.Click += (s' ea) => {  			controller.RemoveBorder_ToSpecificScreen (pd' screen);  		};  		contextBorderlessOn.DropDownItems.Add (tsi);  	}  	// add supersize Option  	ToolStripMenuItem superSizeItem = new ToolStripMenuItem ("SuperSize!");  	superSizeItem.Click += (s' ea) => {  		controller.RemoveBorder_ToSpecificRect (pd' superSize);  	};  	contextBorderlessOn.DropDownItems.Add (superSizeItem);  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Load,The following statement contains a magic number: Text = "Borderless Gaming " + Assembly.GetExecutingAssembly ().GetName ().Version.ToString (2) + ((UAC.Elevated) ? " [Administrator]" : "");  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Load,The following statement contains a magic number: if (Program.Steam_Loaded && disableSteamIntegrationToolStripMenuItem == null) {  	disableSteamIntegrationToolStripMenuItem = new ToolStripMenuItem ();  	disableSteamIntegrationToolStripMenuItem.Name = "disableSteamIntegrationToolStripMenuItem";  	disableSteamIntegrationToolStripMenuItem.Size = new Size (254' 22);  	disableSteamIntegrationToolStripMenuItem.Text = "Disable Steam integration/hook";  	disableSteamIntegrationToolStripMenuItem.ToolTipText = "Prevents \"In-App\" on Steam";  	disableSteamIntegrationToolStripMenuItem.Checked = AppEnvironment.SettingValue ("DisableSteamIntegration"' false);  	disableSteamIntegrationToolStripMenuItem.CheckOnClick = true;  	// let's do this before registering the CheckedChanged event  	disableSteamIntegrationToolStripMenuItem.CheckedChanged += new EventHandler (disableSteamIntegrationToolStripMenuItem_CheckChanged);  	toolsToolStripMenuItem.DropDownItems.Insert (0' disableSteamIntegrationToolStripMenuItem);  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Load,The following statement contains a magic number: if (Program.Steam_Loaded && disableSteamIntegrationToolStripMenuItem == null) {  	disableSteamIntegrationToolStripMenuItem = new ToolStripMenuItem ();  	disableSteamIntegrationToolStripMenuItem.Name = "disableSteamIntegrationToolStripMenuItem";  	disableSteamIntegrationToolStripMenuItem.Size = new Size (254' 22);  	disableSteamIntegrationToolStripMenuItem.Text = "Disable Steam integration/hook";  	disableSteamIntegrationToolStripMenuItem.ToolTipText = "Prevents \"In-App\" on Steam";  	disableSteamIntegrationToolStripMenuItem.Checked = AppEnvironment.SettingValue ("DisableSteamIntegration"' false);  	disableSteamIntegrationToolStripMenuItem.CheckOnClick = true;  	// let's do this before registering the CheckedChanged event  	disableSteamIntegrationToolStripMenuItem.CheckedChanged += new EventHandler (disableSteamIntegrationToolStripMenuItem_CheckChanged);  	toolsToolStripMenuItem.DropDownItems.Insert (0' disableSteamIntegrationToolStripMenuItem);  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Load,The following statement contains a magic number: disableSteamIntegrationToolStripMenuItem.Size = new Size (254' 22);  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Load,The following statement contains a magic number: disableSteamIntegrationToolStripMenuItem.Size = new Size (254' 22);  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Resize,The following statement contains a magic number: if (WindowState == FormWindowState.Minimized) {  	trayIcon.Visible = true;  	if (!AppEnvironment.SettingValue ("HideBalloonTips"' false) && !Tools.StartupParameters.Contains ("-silent")) {  		// Display a balloon tooltip message for 2 seconds  		trayIcon.BalloonTipText = string.Format (Resources.TrayMinimized' "Borderless Gaming");  		trayIcon.ShowBalloonTip (2000);  	}  	if (!Manipulation.WindowsTaskbarIsHidden)  		Hide ();  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Resize,The following statement contains a magic number: if (!AppEnvironment.SettingValue ("HideBalloonTips"' false) && !Tools.StartupParameters.Contains ("-silent")) {  	// Display a balloon tooltip message for 2 seconds  	trayIcon.BalloonTipText = string.Format (Resources.TrayMinimized' "Borderless Gaming");  	trayIcon.ShowBalloonTip (2000);  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,MainWindow_Resize,The following statement contains a magic number: trayIcon.ShowBalloonTip (2000);  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,WndProc,The following statement contains a magic number: if (m.Msg == Native.WM_HOTKEY) {  	uint keystroke = ((uint)m.LParam >> 16) & 0x0000FFFF;  	uint keystroke_modifier = ((uint)m.LParam) & 0x0000FFFF;  	// Global hotkey to make a window borderless  	if ((keystroke == MakeBorderless_HotKey) && (keystroke_modifier == MakeBorderless_HotKeyModifier)) {  		// Find the currently-active window  		IntPtr hCurrentActiveWindow = Native.GetForegroundWindow ();  		// Only if that window isn't Borderless Windows itself  		if (hCurrentActiveWindow != Handle) {  			// Figure out the process details based on the current window handle  			ProcessDetails pd = controller.Processes.FromHandle (hCurrentActiveWindow);  			if (pd == null) {  				Task.WaitAll (controller.RefreshProcesses ());  				pd = controller.Processes.FromHandle (hCurrentActiveWindow);  				if (pd == null)  					return;  			}  			// If we have information about this process -and- we've already made it borderless' then reverse the process  			if (pd.MadeBorderless)  				Manipulation.RestoreWindow (pd);  			// Otherwise' this is a fresh request to remove the border from the current window  			else  				controller.RemoveBorder (pd);  		}  		return;  		// handled the message' do not call base WndProc for this message  	}  	if ((keystroke == MouseHide_HotKey) && (keystroke_modifier == MouseHide_HotKeyModifier)) {  		Manipulation.ToggleMouseCursorVisibility (this);  		return;  		// handled the message' do not call base WndProc for this message  	}  	if ((keystroke == MouseLock_HotKey) && (keystroke_modifier == 0)) {  		IntPtr hWnd = Native.GetForegroundWindow ();  		// get size of clientarea  		Native.Rect rect = new Native.Rect ();  		Native.GetClientRect (hWnd' ref rect);  		// get top'left point of clientarea  		Native.POINTAPI p = new Native.POINTAPI {  			X = 0'  			Y = 0  		};  		Native.ClientToScreen (hWnd' ref p);  		Rectangle clipRect = new Rectangle (p.X' p.Y' rect.Right - rect.Left' rect.Bottom - rect.Top);  		Cursor.Clip = (Cursor.Clip.Equals (clipRect)) ? Rectangle.Empty : clipRect;  		return;  		// handled the message' do not call base WndProc for this message  	}  }  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.favoritesLabel' 2' 0);  
Magic Number,BorderlessGaming.Forms,MainWindow,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.lstFavorites' 2' 1);  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentTopLeft.X - 10 && RealCursorPosition.X < CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.LeftLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentTopLeft.X - 10 && RealCursorPosition.X < CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.LeftLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentTopLeft.X - 10 && RealCursorPosition.X < CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.LeftLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentTopLeft.X - 10 && RealCursorPosition.X < CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.LeftLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.TopLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.TopLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.TopLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.TopLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.BottomLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.BottomLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.BottomLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentTopLeft.X - 10 && RealCursorPosition.X <= CurrentTopLeft.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.BottomLeft;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentBottomRight.X - 10 && RealCursorPosition.X < CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.RightLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentBottomRight.X - 10 && RealCursorPosition.X < CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.RightLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentBottomRight.X - 10 && RealCursorPosition.X < CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.RightLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X > CurrentBottomRight.X - 10 && RealCursorPosition.X < CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y > CurrentTopLeft.Y + 10) && (RealCursorPosition.Y < CurrentBottomRight.Y - 10))) {  	Cursor = Cursors.SizeWE;  	return CursPos.RightLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.TopRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.TopRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.TopRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentTopLeft.Y - 10) && (RealCursorPosition.Y <= CurrentTopLeft.Y + 10))) {  	Cursor = Cursors.SizeNESW;  	return CursPos.TopRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.BottomRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.BottomRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.BottomRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.X >= CurrentBottomRight.X - 10 && RealCursorPosition.X <= CurrentBottomRight.X + 10)) && ((RealCursorPosition.Y >= CurrentBottomRight.Y - 10) && (RealCursorPosition.Y <= CurrentBottomRight.Y + 10))) {  	Cursor = Cursors.SizeNWSE;  	return CursPos.BottomRight;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentTopLeft.Y - 10) && (RealCursorPosition.Y < CurrentTopLeft.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.TopLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentTopLeft.Y - 10) && (RealCursorPosition.Y < CurrentTopLeft.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.TopLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentTopLeft.Y - 10) && (RealCursorPosition.Y < CurrentTopLeft.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.TopLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentTopLeft.Y - 10) && (RealCursorPosition.Y < CurrentTopLeft.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.TopLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentBottomRight.Y - 10) && (RealCursorPosition.Y < CurrentBottomRight.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.BottomLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentBottomRight.Y - 10) && (RealCursorPosition.Y < CurrentBottomRight.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.BottomLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentBottomRight.Y - 10) && (RealCursorPosition.Y < CurrentBottomRight.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.BottomLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if (((RealCursorPosition.Y > CurrentBottomRight.Y - 10) && (RealCursorPosition.Y < CurrentBottomRight.Y + 10)) && ((RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.X < CurrentBottomRight.X - 10))) {  	Cursor = Cursors.SizeNS;  	return CursPos.BottomLine;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if ((RealCursorPosition.X >= CurrentTopLeft.X + 10 && RealCursorPosition.X <= CurrentBottomRight.X - 10) && (RealCursorPosition.Y >= CurrentTopLeft.Y + 10 && RealCursorPosition.Y <= CurrentBottomRight.Y - 10)) {  	Cursor = Cursors.Hand;  	return CursPos.WithinSelectionArea;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if ((RealCursorPosition.X >= CurrentTopLeft.X + 10 && RealCursorPosition.X <= CurrentBottomRight.X - 10) && (RealCursorPosition.Y >= CurrentTopLeft.Y + 10 && RealCursorPosition.Y <= CurrentBottomRight.Y - 10)) {  	Cursor = Cursors.Hand;  	return CursPos.WithinSelectionArea;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if ((RealCursorPosition.X >= CurrentTopLeft.X + 10 && RealCursorPosition.X <= CurrentBottomRight.X - 10) && (RealCursorPosition.Y >= CurrentTopLeft.Y + 10 && RealCursorPosition.Y <= CurrentBottomRight.Y - 10)) {  	Cursor = Cursors.Hand;  	return CursPos.WithinSelectionArea;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,CursorPosition,The following statement contains a magic number: if ((RealCursorPosition.X >= CurrentTopLeft.X + 10 && RealCursorPosition.X <= CurrentBottomRight.X - 10) && (RealCursorPosition.Y >= CurrentTopLeft.Y + 10 && RealCursorPosition.Y <= CurrentBottomRight.Y - 10)) {  	Cursor = Cursors.Hand;  	return CursPos.WithinSelectionArea;  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.LeftSizing) {  	if (RealCursorPosition.X < CurrentBottomRight.X - 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentTopLeft.X = RealCursorPosition.X;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X < CurrentBottomRight.X - 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentTopLeft.X = RealCursorPosition.X;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.TopLeftSizing) {  	if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentTopLeft.X = RealCursorPosition.X;  		CurrentTopLeft.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.TopLeftSizing) {  	if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentTopLeft.X = RealCursorPosition.X;  		CurrentTopLeft.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentTopLeft.X = RealCursorPosition.X;  	CurrentTopLeft.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentTopLeft.X = RealCursorPosition.X;  	CurrentTopLeft.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.BottomLeftSizing) {  	if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentTopLeft.X = RealCursorPosition.X;  		CurrentBottomRight.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.BottomLeftSizing) {  	if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentTopLeft.X = RealCursorPosition.X;  		CurrentBottomRight.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentTopLeft.X = RealCursorPosition.X;  	CurrentBottomRight.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X < CurrentBottomRight.X - 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentTopLeft.X = RealCursorPosition.X;  	CurrentBottomRight.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.RightSizing) {  	if (RealCursorPosition.X > CurrentTopLeft.X + 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentBottomRight.X = RealCursorPosition.X;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X > CurrentTopLeft.X + 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentBottomRight.X = RealCursorPosition.X;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.TopRightSizing) {  	if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentBottomRight.X = RealCursorPosition.X;  		CurrentTopLeft.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.TopRightSizing) {  	if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentBottomRight.X = RealCursorPosition.X;  		CurrentTopLeft.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentBottomRight.X = RealCursorPosition.X;  	CurrentTopLeft.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentBottomRight.X = RealCursorPosition.X;  	CurrentTopLeft.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.BottomRightSizing) {  	if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentBottomRight.X = RealCursorPosition.X;  		CurrentBottomRight.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.BottomRightSizing) {  	if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentBottomRight.X = RealCursorPosition.X;  		CurrentBottomRight.Y = RealCursorPosition.Y;  		RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentBottomRight.X = RealCursorPosition.X;  	CurrentBottomRight.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.X > CurrentTopLeft.X + 10 && RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentBottomRight.X = RealCursorPosition.X;  	CurrentBottomRight.Y = RealCursorPosition.Y;  	RectangleWidth = CurrentBottomRight.X - CurrentTopLeft.X;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.TopSizing) {  	if (RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentTopLeft.Y = RealCursorPosition.Y;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.Y < CurrentBottomRight.Y - 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentTopLeft.Y = RealCursorPosition.Y;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (CurrentAction == ClickAction.BottomSizing) {  	if (RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  		//Erase the previous rectangle  		grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  		CurrentBottomRight.Y = RealCursorPosition.Y;  		RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  		grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	}  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,ResizeSelection,The following statement contains a magic number: if (RealCursorPosition.Y > CurrentTopLeft.Y + 10) {  	//Erase the previous rectangle  	grfxDrawingSurface.DrawRectangle (EraserPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  	CurrentBottomRight.Y = RealCursorPosition.Y;  	RectangleHeight = CurrentBottomRight.Y - CurrentTopLeft.Y;  	grfxDrawingSurface.DrawRectangle (MyPen' TranslateRealPointToDrawn (CurrentTopLeft).X' TranslateRealPointToDrawn (CurrentTopLeft).Y' RectangleWidth' RectangleHeight);  }  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,InitializeComponent,The following statement contains a magic number: this.BackColor = System.Drawing.Color.FromArgb (((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(192)))));  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,InitializeComponent,The following statement contains a magic number: this.BackColor = System.Drawing.Color.FromArgb (((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(192)))));  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,InitializeComponent,The following statement contains a magic number: this.BackColor = System.Drawing.Color.FromArgb (((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(192)))));  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (500' 400);  
Magic Number,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (500' 400);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.lblInstructions.Location = new System.Drawing.Point (13' 13);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.lblInstructions.Location = new System.Drawing.Point (13' 13);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.lblInstructions.Size = new System.Drawing.Size (54' 13);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.lblInstructions.Size = new System.Drawing.Size (54' 13);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Location = new System.Drawing.Point (16' 35);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Location = new System.Drawing.Point (16' 35);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Size = new System.Drawing.Size (370' 20);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Size = new System.Drawing.Size (370' 20);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point (310' 61);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point (310' 61);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size (75' 23);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size (75' 23);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 3;  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point (229' 61);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point (229' 61);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size (75' 23);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size (75' 23);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 2;  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (405' 102);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (405' 102);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size (413' 133);  
Magic Number,BorderlessGaming.Forms,InputText,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\InputText.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size (413' 133);  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The following statement contains a magic number: try {  	var tsGenericMethod = new ThreadStart (() => {  		try {  			target ();  		} catch {  		}  	});  	var trdGenericThread = new Thread (tsGenericMethod) {  		IsBackground = true  	};  	trdGenericThread.Start ();  	var dtStartTime = DateTime.Now;  	for (; ;) {  		if (iHowLongToWait > 0) {  			if ((DateTime.Now - dtStartTime).TotalSeconds > iHowLongToWait) {  				try {  					trdGenericThread.Abort ();  				} catch {  				}  				break;  			}  		}  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.Stopped)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.StopRequested)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.Aborted)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.AbortRequested)  			break;  		Thread.Sleep (15);  		Forms.MainWindow.DoEvents ();  	}  } catch {  	// ignored  }  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The following statement contains a magic number: for (; ;) {  	if (iHowLongToWait > 0) {  		if ((DateTime.Now - dtStartTime).TotalSeconds > iHowLongToWait) {  			try {  				trdGenericThread.Abort ();  			} catch {  			}  			break;  		}  	}  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.Stopped)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.StopRequested)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.Aborted)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.AbortRequested)  		break;  	Thread.Sleep (15);  	Forms.MainWindow.DoEvents ();  }  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The following statement contains a magic number: Thread.Sleep (15);  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The following statement contains a magic number: try {  	ThreadStart tsGenericMethod = new ThreadStart (() => {  		try {  			target ();  		} catch {  		}  	});  	Thread trdGenericThread = new Thread (tsGenericMethod);  	trdGenericThread.IsBackground = true;  	trdGenericThread.Start ();  	DateTime dtStartTime = DateTime.Now;  	for (; ;) {  		if (dHowLongToWait > 0.0) {  			if ((DateTime.Now - dtStartTime).TotalMilliseconds > dHowLongToWait) {  				try {  					trdGenericThread.Abort ();  				} catch {  				}  				break;  			}  		}  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.Stopped)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.StopRequested)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.Aborted)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.AbortRequested)  			break;  		Thread.Sleep (15);  		Forms.MainWindow.DoEvents ();  	}  } catch {  }  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The following statement contains a magic number: for (; ;) {  	if (dHowLongToWait > 0.0) {  		if ((DateTime.Now - dtStartTime).TotalMilliseconds > dHowLongToWait) {  			try {  				trdGenericThread.Abort ();  			} catch {  			}  			break;  		}  	}  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.Stopped)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.StopRequested)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.Aborted)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.AbortRequested)  		break;  	Thread.Sleep (15);  	Forms.MainWindow.DoEvents ();  }  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodMultithreadedAndWait,The following statement contains a magic number: Thread.Sleep (15);  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodAndWait,The following statement contains a magic number: try {  	ThreadStart tsGenericMethod = new ThreadStart (() => {  		try {  			target ();  		} catch {  		}  	});  	Thread trdGenericThread = new Thread (tsGenericMethod);  	trdGenericThread.IsBackground = false;  	trdGenericThread.Start ();  	DateTime dtStartTime = DateTime.Now;  	for (; ;) {  		if (dHowLongToWait > 0.0) {  			if ((DateTime.Now - dtStartTime).TotalMilliseconds > dHowLongToWait) {  				try {  					trdGenericThread.Abort ();  				} catch {  				}  				break;  			}  		}  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.Stopped)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.StopRequested)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.Aborted)  			break;  		if (trdGenericThread.ThreadState == System.Threading.ThreadState.AbortRequested)  			break;  		Thread.Sleep (15);  	}  } catch {  }  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodAndWait,The following statement contains a magic number: for (; ;) {  	if (dHowLongToWait > 0.0) {  		if ((DateTime.Now - dtStartTime).TotalMilliseconds > dHowLongToWait) {  			try {  				trdGenericThread.Abort ();  			} catch {  			}  			break;  		}  	}  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.Stopped)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.StopRequested)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.Aborted)  		break;  	if (trdGenericThread.ThreadState == System.Threading.ThreadState.AbortRequested)  		break;  	Thread.Sleep (15);  }  
Magic Number,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,StartMethodAndWait,The following statement contains a magic number: Thread.Sleep (15);  
Magic Number,BorderlessGaming.Utilities,UAC,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\UAC.cs,IsElevated,The following statement contains a magic number: try {  	// Windows version earlier than Vista  	if (Environment.OSVersion.Version.Major < 6)  		return true;  	if (IsRunAsAdmin ())  		return true;  	return IsProcessElevated ();  } catch {  }  
Magic Number,BorderlessGaming.Utilities,UAC,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\UAC.cs,IsElevated,The following statement contains a magic number: if (Environment.OSVersion.Version.Major < 6)  	return true;  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The following statement contains a magic number: if (processDetails != null)  	if (processDetails.MadeBorderless)  		if ((processDetails.MadeBorderlessAttempts > 3) || (!processDetails.WindowHasTargetableStyles))  			return;  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The following statement contains a magic number: if (processDetails.MadeBorderless)  	if ((processDetails.MadeBorderlessAttempts > 3) || (!processDetails.WindowHasTargetableStyles))  		return;  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,MakeWindowBorderless,The following statement contains a magic number: if ((processDetails.MadeBorderlessAttempts > 3) || (!processDetails.WindowHasTargetableStyles))  	return;  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: try {  	// Windows XP and earlier  	IntPtr hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "Notification Area");  	// Windows Vista and later  	if ((hNotificationArea == IntPtr.Zero) || (hNotificationArea.ToInt32 () == Native.INVALID_HANDLE_VALUE)) {  		hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "User Promoted Notification Area");  	}  	if ((hNotificationArea == IntPtr.Zero) || (hNotificationArea.ToInt32 () == Native.INVALID_HANDLE_VALUE))  		return;  	// Get the notification bounds  	Native.Rect rect = new Native.Rect ();  	Native.GetClientRect (hNotificationArea' ref rect);  	// Wiggle the mouse over the notification area  	// Note: this doesn't actually move the mouse cursor on the screen -- this just sends a message to the system tray window  	//       that mouse movement occurred over it' forcing it to refresh.  Sending messages asking for a repaint or invalidated  	//       area don't work' but this does.  	for (UInt32 x = 0; x < rect.Right; x += 5)  		for (UInt32 y = 0; y < rect.Bottom; y += 5)  			Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  } catch {  }  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: try {  	// Windows XP and earlier  	IntPtr hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "Notification Area");  	// Windows Vista and later  	if ((hNotificationArea == IntPtr.Zero) || (hNotificationArea.ToInt32 () == Native.INVALID_HANDLE_VALUE)) {  		hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "User Promoted Notification Area");  	}  	if ((hNotificationArea == IntPtr.Zero) || (hNotificationArea.ToInt32 () == Native.INVALID_HANDLE_VALUE))  		return;  	// Get the notification bounds  	Native.Rect rect = new Native.Rect ();  	Native.GetClientRect (hNotificationArea' ref rect);  	// Wiggle the mouse over the notification area  	// Note: this doesn't actually move the mouse cursor on the screen -- this just sends a message to the system tray window  	//       that mouse movement occurred over it' forcing it to refresh.  Sending messages asking for a repaint or invalidated  	//       area don't work' but this does.  	for (UInt32 x = 0; x < rect.Right; x += 5)  		for (UInt32 y = 0; y < rect.Bottom; y += 5)  			Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  } catch {  }  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: try {  	// Windows XP and earlier  	IntPtr hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "Notification Area");  	// Windows Vista and later  	if ((hNotificationArea == IntPtr.Zero) || (hNotificationArea.ToInt32 () == Native.INVALID_HANDLE_VALUE)) {  		hNotificationArea = Native.FindWindowEx (Native.FW (Native.FW (Native.FW (IntPtr.Zero' "Shell_TrayWnd")' "TrayNotifyWnd")' "SysPager")' IntPtr.Zero' "ToolbarWindow32"' "User Promoted Notification Area");  	}  	if ((hNotificationArea == IntPtr.Zero) || (hNotificationArea.ToInt32 () == Native.INVALID_HANDLE_VALUE))  		return;  	// Get the notification bounds  	Native.Rect rect = new Native.Rect ();  	Native.GetClientRect (hNotificationArea' ref rect);  	// Wiggle the mouse over the notification area  	// Note: this doesn't actually move the mouse cursor on the screen -- this just sends a message to the system tray window  	//       that mouse movement occurred over it' forcing it to refresh.  Sending messages asking for a repaint or invalidated  	//       area don't work' but this does.  	for (UInt32 x = 0; x < rect.Right; x += 5)  		for (UInt32 y = 0; y < rect.Bottom; y += 5)  			Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  } catch {  }  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: for (UInt32 x = 0; x < rect.Right; x += 5)  	for (UInt32 y = 0; y < rect.Bottom; y += 5)  		Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: for (UInt32 x = 0; x < rect.Right; x += 5)  	for (UInt32 y = 0; y < rect.Bottom; y += 5)  		Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: for (UInt32 x = 0; x < rect.Right; x += 5)  	for (UInt32 y = 0; y < rect.Bottom; y += 5)  		Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: x += 5
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: for (UInt32 y = 0; y < rect.Bottom; y += 5)  	Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: for (UInt32 y = 0; y < rect.Bottom; y += 5)  	Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: y += 5
Magic Number,BorderlessGaming.WindowsAPI,Manipulation,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Manipulation.cs,RedrawWindowsSystemTrayArea,The following statement contains a magic number: Native.SendMessage (hNotificationArea' Native.WM_MOUSEMOVE' 0' (y << 16) | x);  
Magic Number,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,GetWindowLong,The following statement contains a magic number: if (IntPtr.Size == 8)  	return GetWindowLong64 (hWnd' nIndex);  
Magic Number,BorderlessGaming.WindowsAPI,Native,F:\newReposMay17\Codeusa_Borderless-Gaming\WindowsAPI\Native.cs,SetWindowLong,The following statement contains a magic number: return IntPtr.Size == 8 ? SetWindowLong64 (hWnd' nIndex' dwNewLong) : SetWindowLong32 (hWnd' nIndex' dwNewLong);  
Missing Default,BorderlessGaming.Forms,DesktopAreaSelector,F:\newReposMay17\Codeusa_Borderless-Gaming\Forms\DesktopAreaSelector.cs,SetClickAction,The following switch statement is missing a default case: switch (CursorPosition ()) {  case CursPos.BottomLine:  	CurrentAction = ClickAction.BottomSizing;  	break;  case CursPos.TopLine:  	CurrentAction = ClickAction.TopSizing;  	break;  case CursPos.LeftLine:  	CurrentAction = ClickAction.LeftSizing;  	break;  case CursPos.TopLeft:  	CurrentAction = ClickAction.TopLeftSizing;  	break;  case CursPos.BottomLeft:  	CurrentAction = ClickAction.BottomLeftSizing;  	break;  case CursPos.RightLine:  	CurrentAction = ClickAction.RightSizing;  	break;  case CursPos.TopRight:  	CurrentAction = ClickAction.TopRightSizing;  	break;  case CursPos.BottomRight:  	CurrentAction = ClickAction.BottomRightSizing;  	break;  case CursPos.WithinSelectionArea:  	CurrentAction = ClickAction.Dragging;  	break;  case CursPos.OutsideSelectionArea:  	CurrentAction = ClickAction.Outside;  	break;  }  
Missing Default,BorderlessGaming.Utilities,Tools,F:\newReposMay17\Codeusa_Borderless-Gaming\Utilities\Tools.cs,CheckForUpdates,The following switch statement is missing a default case: switch (_elementName) {  case "version":  	_newVersion = new Version (_reader.Value);  	break;  case "url":  	_releasePageURL = _reader.Value;  	break;  }  
