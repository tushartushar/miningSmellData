Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Ntreev.Library.Commands.Shell,Prompt,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\Prompt.cs,ProcessKey,Cyclomatic complexity of the method is 28
Complex Method,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,ShowCompletions,Cyclomatic complexity of the method is 9
Complex Method,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,Complete,Cyclomatic complexity of the method is 11
Complex Method,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,WordForward,Cyclomatic complexity of the method is 8
Complex Method,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,WordBackward,Cyclomatic complexity of the method is 8
Complex Method,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,Cyclomatic complexity of the method is 8
Complex Method,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,EditLoop,Cyclomatic complexity of the method is 13
Long Statement,Ntreev.Library.Commands.Shell,ShellSummaryAttribute,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\ShellSummaryAttribute.cs,GetResourceString,The length of the statement  "	return (string)typeof(Resources).InvokeMember (resourceName' BindingFlags.GetProperty | BindingFlags.NonPublic | BindingFlags.Static' null' null' null); " is 152.
Long Statement,Ntreev.Library.Commands.Shell,ShellDescriptionAttribute,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\ShellDescriptionAttribute.cs,GetResourceString,The length of the statement  "	return (string)typeof(Resources).InvokeMember (resourceName' BindingFlags.GetProperty | BindingFlags.NonPublic | BindingFlags.Static' null' null' null); " is 152.
Long Statement,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,GetUnixConsoleReset,The length of the statement  "		var terminfo_driver = Type.GetType ("System.ConsoleDriver").GetField ("driver"' BindingFlags.Static | BindingFlags.NonPublic).GetValue (null); " is 142.
Long Statement,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,GetUnixConsoleReset,The length of the statement  "		var unix_reset_colors_str = (terminfo_driver.GetType ().GetField ("origPair"' BindingFlags.Instance | BindingFlags.NonPublic)).GetValue (terminfo_driver) as string; " is 164.
Long Statement,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,ForceCursor,The length of the statement  "	//log.WriteLine ("Going to cursor={0} row={1} col={2} actual={3} prompt={4} ttr={5} old={6}"' newpos' row' col' actual_pos' prompt.Length' TextToRenderPos (cursor)' cursor); " is 173.
Complex Conditional,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The conditional expression  "Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c)"  is complex.
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,LineEditor,The following statement contains a magic number: handlers = new Handler[] {  	new Handler (ConsoleKey.Home' CmdHome)'  	new Handler (ConsoleKey.End' CmdEnd)'  	new Handler (ConsoleKey.LeftArrow' CmdLeft)'  	new Handler (ConsoleKey.RightArrow' CmdRight)'  	new Handler (ConsoleKey.UpArrow' CmdUp' resetCompletion: false)'  	new Handler (ConsoleKey.DownArrow' CmdDown' resetCompletion: false)'  	new Handler (ConsoleKey.Enter' CmdDone' resetCompletion: false)'  	new Handler (ConsoleKey.Backspace' CmdBackspace' resetCompletion: false)'  	new Handler (ConsoleKey.Delete' CmdDeleteChar)'  	new Handler (ConsoleKey.Tab' CmdTabOrComplete' resetCompletion: false)'  	// Emacs keys  	Handler.Control ('A'' CmdHome)'  	Handler.Control ('E'' CmdEnd)'  	Handler.Control ('B'' CmdLeft)'  	Handler.Control ('F'' CmdRight)'  	Handler.Control ('P'' CmdUp' resetCompletion: false)'  	Handler.Control ('N'' CmdDown' resetCompletion: false)'  	Handler.Control ('K'' CmdKillToEOF)'  	Handler.Control ('Y'' CmdYank)'  	Handler.Control ('D'' CmdDeleteChar)'  	Handler.Control ('L'' CmdRefresh)'  	Handler.Control ('R'' CmdReverseSearch)'  	Handler.Control ('G'' delegate {  	})'  	Handler.Alt ('B'' ConsoleKey.B' CmdBackwardWord)'  	Handler.Alt ('F'' ConsoleKey.F' CmdForwardWord)'  	Handler.Alt ('D'' ConsoleKey.D' CmdDeleteWord)'  	Handler.Alt ((char)8' ConsoleKey.Backspace' CmdDeleteBackword)'  	// DEBUG  	//Handler.Control ('T'' CmdDebug)'  	// quote  	Handler.Control ('Q'' delegate {  		HandleChar (Console.ReadKey (true).KeyChar);  	})  };  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,ComputeRendered,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	int c = (int)text [i];  	if (c < 26) {  		if (c == '\t')  			rendered_text.Append ("    ");  		else {  			rendered_text.Append ('^');  			rendered_text.Append ((char)(c + (int)'A' - 1));  		}  	}  	else  		rendered_text.Append ((char)c);  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,ComputeRendered,The following statement contains a magic number: if (c < 26) {  	if (c == '\t')  		rendered_text.Append ("    ");  	else {  		rendered_text.Append ('^');  		rendered_text.Append ((char)(c + (int)'A' - 1));  	}  }  else  	rendered_text.Append ((char)c);  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++) {  	int c;  	c = (int)text [i];  	if (c < 26) {  		if (c == 9)  			p += 4;  		else  			p += 2;  	}  	else  		p++;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++) {  	int c;  	c = (int)text [i];  	if (c < 26) {  		if (c == 9)  			p += 4;  		else  			p += 2;  	}  	else  		p++;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++) {  	int c;  	c = (int)text [i];  	if (c < 26) {  		if (c == 9)  			p += 4;  		else  			p += 2;  	}  	else  		p++;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++) {  	int c;  	c = (int)text [i];  	if (c < 26) {  		if (c == 9)  			p += 4;  		else  			p += 2;  	}  	else  		p++;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: if (c < 26) {  	if (c == 9)  		p += 4;  	else  		p += 2;  }  else  	p++;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: if (c < 26) {  	if (c == 9)  		p += 4;  	else  		p += 2;  }  else  	p++;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: if (c < 26) {  	if (c == 9)  		p += 4;  	else  		p += 2;  }  else  	p++;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: if (c < 26) {  	if (c == 9)  		p += 4;  	else  		p += 2;  }  else  	p++;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: if (c == 9)  	p += 4;  else  	p += 2;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: if (c == 9)  	p += 4;  else  	p += 2;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: if (c == 9)  	p += 4;  else  	p += 2;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: p += 4;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,TextToRenderPos,The following statement contains a magic number: p += 2;  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The following statement contains a magic number: if (HeuristicsMode == "csharp") {  	// csharp heuristics  	if (wasCompleting) {  		if (insertedChar == ' ') {  			return false;  		}  		return true;  	}  	// If we were not completing' determine if we want to now  	if (insertedChar == '.') {  		// Avoid completing for numbers "1.2" for example  		if (cursor > 1 && Char.IsDigit (text [cursor - 2])) {  			for (int p = cursor - 3; p >= 0; p--) {  				char c = text [p];  				if (Char.IsDigit (c))  					continue;  				if (c == '_')  					return true;  				if (Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c))  					return true;  			}  			return false;  		}  		return true;  	}  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The following statement contains a magic number: if (HeuristicsMode == "csharp") {  	// csharp heuristics  	if (wasCompleting) {  		if (insertedChar == ' ') {  			return false;  		}  		return true;  	}  	// If we were not completing' determine if we want to now  	if (insertedChar == '.') {  		// Avoid completing for numbers "1.2" for example  		if (cursor > 1 && Char.IsDigit (text [cursor - 2])) {  			for (int p = cursor - 3; p >= 0; p--) {  				char c = text [p];  				if (Char.IsDigit (c))  					continue;  				if (c == '_')  					return true;  				if (Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c))  					return true;  			}  			return false;  		}  		return true;  	}  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The following statement contains a magic number: if (insertedChar == '.') {  	// Avoid completing for numbers "1.2" for example  	if (cursor > 1 && Char.IsDigit (text [cursor - 2])) {  		for (int p = cursor - 3; p >= 0; p--) {  			char c = text [p];  			if (Char.IsDigit (c))  				continue;  			if (c == '_')  				return true;  			if (Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c))  				return true;  		}  		return false;  	}  	return true;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The following statement contains a magic number: if (insertedChar == '.') {  	// Avoid completing for numbers "1.2" for example  	if (cursor > 1 && Char.IsDigit (text [cursor - 2])) {  		for (int p = cursor - 3; p >= 0; p--) {  			char c = text [p];  			if (Char.IsDigit (c))  				continue;  			if (c == '_')  				return true;  			if (Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c))  				return true;  		}  		return false;  	}  	return true;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The following statement contains a magic number: if (cursor > 1 && Char.IsDigit (text [cursor - 2])) {  	for (int p = cursor - 3; p >= 0; p--) {  		char c = text [p];  		if (Char.IsDigit (c))  			continue;  		if (c == '_')  			return true;  		if (Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c))  			return true;  	}  	return false;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The following statement contains a magic number: if (cursor > 1 && Char.IsDigit (text [cursor - 2])) {  	for (int p = cursor - 3; p >= 0; p--) {  		char c = text [p];  		if (Char.IsDigit (c))  			continue;  		if (c == '_')  			return true;  		if (Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c))  			return true;  	}  	return false;  }  
Magic Number,Mono.Terminal,LineEditor,C:\repos\NtreevSoft_CommandLineParser\Ntreev.Library.Commands.Shell\getline.cs,HeuristicAutoComplete,The following statement contains a magic number: for (int p = cursor - 3; p >= 0; p--) {  	char c = text [p];  	if (Char.IsDigit (c))  		continue;  	if (c == '_')  		return true;  	if (Char.IsLetter (c) || Char.IsPunctuation (c) || Char.IsSymbol (c) || Char.IsControl (c))  		return true;  }  
