Implementation smell,Namespace,Class,File,Method,Description
Long Method,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,Draw,The method has 197 lines of code.
Long Method,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The method has 112 lines of code.
Long Method,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,The method has 129 lines of code.
Long Method,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MonthCalendar,The method has 112 lines of code.
Long Method,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The method has 101 lines of code.
Complex Method,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnMouseDown,Cyclomatic complexity of the method is 11
Complex Method,Pabo.Calendar,DateItemCollection,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\DateItemCollection.cs,DateInfo,Cyclomatic complexity of the method is 11
Complex Method,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,GetStringAlignment,Cyclomatic complexity of the method is 9
Complex Method,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,Draw,Cyclomatic complexity of the method is 27
Complex Method,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,Cyclomatic complexity of the method is 9
Complex Method,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,MouseClick,Cyclomatic complexity of the method is 18
Complex Method,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,MouseMove,Cyclomatic complexity of the method is 20
Complex Method,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Draw,Cyclomatic complexity of the method is 17
Complex Method,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,Cyclomatic complexity of the method is 21
Complex Method,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,Init,Cyclomatic complexity of the method is 10
Complex Method,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,OnKeyDown,Cyclomatic complexity of the method is 12
Complex Method,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DaySelect,Cyclomatic complexity of the method is 12
Complex Method,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusMoved,Cyclomatic complexity of the method is 18
Complex Method,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,RemoveSelection,Cyclomatic complexity of the method is 8
Complex Method,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,Cyclomatic complexity of the method is 17
Complex Method,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectArea,Cyclomatic complexity of the method is 10
Complex Method,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectRange,Cyclomatic complexity of the method is 10
Complex Method,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,IntToDayOfWeek,Cyclomatic complexity of the method is 8
Complex Method,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,Cyclomatic complexity of the method is 27
Complex Method,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyUp,Cyclomatic complexity of the method is 10
Complex Method,Pabo.Calendar,FirstDayOfWeekConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,ConvertTo,Cyclomatic complexity of the method is 8
Long Parameter List,Pabo.Calendar,DayClickEventArgs,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,DayClickEventArgs,The method has 7 parameters. Parameters: date' button' dayX' dayY' x' y' rect
Long Parameter List,Pabo.Calendar,DayMouseMoveEventArgs,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,DayMouseMoveEventArgs,The method has 6 parameters. Parameters: date' dayX' dayY' x' y' rect
Long Parameter List,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,Init,The method has 5 parameters. Parameters: imageList' horizontal' vertical' columns' defaultImage
Long Parameter List,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DrawGradient,The method has 5 parameters. Parameters: e' rect' color1' color2' mode
Long Parameter List,Pabo.Calendar,NativeMethods,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\NativeMethods.cs,ToAscii,The method has 5 parameters. Parameters: uVirtKey' uScanCode' lpbKeyState' lpwTransKey' fuState
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_topLeft' (m_default != mcItemAlign.TopLeft) ? ButtonState.Normal : ButtonState.Checked); " is 125.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_center'(m_default != mcItemAlign.Center) ? ButtonState.Normal : ButtonState.Checked); " is 122.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_topRight'(m_default != mcItemAlign.TopRight) ? ButtonState.Normal : ButtonState.Checked); " is 126.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_bottomLeft'(m_default != mcItemAlign.BottomLeft) ? ButtonState.Normal : ButtonState.Checked); " is 130.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_bottomRight'(m_default != mcItemAlign.BottomRight) ? ButtonState.Normal : ButtonState.Checked); " is 132.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_leftCenter'(m_default != mcItemAlign.LeftCenter) ? ButtonState.Normal : ButtonState.Checked); " is 130.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_rightCenter'(m_default != mcItemAlign.RightCenter) ? ButtonState.Normal : ButtonState.Checked); " is 132.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_topCenter'(m_default != mcItemAlign.TopCenter) ? ButtonState.Normal : ButtonState.Checked); " is 128.
Long Statement,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,OnPaintBackground,The length of the statement  "			ControlPaint.DrawButton(e.Graphics'm_bottomCenter'(m_default != mcItemAlign.BottomCenter) ? ButtonState.Normal : ButtonState.Checked); " is 134.
Long Statement,Pabo.Calendar,GlobalHook,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\GlobalHook.cs,KeyboardHookProc,The length of the statement  "				NativeMethods.KeyboardHookStruct MyKeyboardHookStruct = (NativeMethods.KeyboardHookStruct) Marshal.PtrToStructure(lParam' typeof(NativeMethods.KeyboardHookStruct)); " is 164.
Long Statement,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Draw,The length of the statement  "				currentMonth = m_calendar.Month.SelectedMonth.Year.ToString()+"-"+m_calendar.Month.SelectedMonth.Month.ToString()+"-01"; " is 120.
Long Statement,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Draw,The length of the statement  "				DateTime minDate = DateTime.Parse(m_calendar.MinDate.Year.ToString()+"-"+m_calendar.MinDate.Month.ToString()+"-"+days.ToString()); " is 130.
Long Statement,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Draw,The length of the statement  "				DateTime maxDate = DateTime.Parse(m_calendar.MaxDate.Year.ToString()+"-"+m_calendar.MaxDate.Month.ToString()+"-"+days.ToString()); " is 130.
Long Statement,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Draw,The length of the statement  "			month = m_calendar.m_dateTimeFormat.GetMonthName(m_calendar.Month.SelectedMonth.Month)+" "+m_calendar.Month.SelectedMonth.Year.ToString();   " is 138.
Long Statement,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,OnPaintBackground,The length of the statement  "				offscreenGrfx.FillRectangle(new SolidBrush(BackgroundOverColor)' _nCoordX*_nItemWidth + 1' _nCoordY*_nItemHeight + 1' _nItemWidth-1' _nItemHeight-1); " is 149.
Long Statement,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,OnPaintBackground,The length of the statement  "				offscreenGrfx.DrawRectangle(new Pen(BorderColor)' _nCoordX*_nItemWidth' _nCoordY*_nItemHeight' _nItemWidth' _nItemHeight); " is 122.
Long Statement,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DaySelect,The length of the statement  "                                DayStateChangedEventArgs args = new DayStateChangedEventArgs(m_days[i].Date.ToShortDateString()' mcDayState.Selected' mcDayState.Normal); " is 137.
Long Statement,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DaySelect,The length of the statement  "                                DayStateChangedEventArgs args = new DayStateChangedEventArgs(m_days[i].Date.ToShortDateString()' mcDayState.Normal' mcDayState.Selected); " is 137.
Long Statement,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusMoved,The length of the statement  "                    args = new DayStateChangedEventArgs(m_days[m_dayInFocus].Date.ToShortDateString()' mcDayState.Selected' mcDayState.Normal); " is 123.
Long Statement,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,OnDragDrop,The length of the statement  "					DayDragDrop(this'new DayDragDropEventArgs(drgevent.Data'drgevent.KeyState'm_month.m_days[day].Date.ToShortDateString()));    " is 121.
Long Statement,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The length of the statement  "                                else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y)) " is 141.
Long Statement,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The length of the statement  "                                else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))    " is 141.
Long Statement,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,MouseClick,The length of the statement  "				week = gCalendar.GetWeekOfYear(m_calendar.Month.m_days[i*7].Date'm_calendar.m_dateTimeFormat.CalendarWeekRule'm_calendar.m_dateTimeFormat.FirstDayOfWeek); " is 154.
Long Statement,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,CalcWeek,The length of the statement  "				weeknr = gCalendar.GetWeekOfYear(dt'm_calendar.m_dateTimeFormat.CalendarWeekRule' m_calendar.m_dateTimeFormat.FirstDayOfWeek); " is 126.
Complex Conditional,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,Draw,The conditional expression  "((m_date.DayOfWeek == DayOfWeek.Saturday) && (m_month.Colors.Weekend.Saturday)) ||                   ((m_date.DayOfWeek == DayOfWeek.Sunday) && (m_month.Colors.Weekend.Sunday))"  is complex.
Complex Conditional,Pabo.Calendar,GlobalHook,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\GlobalHook.cs,KeyboardHookProc,The conditional expression  "(nCode >= 0) && (KeyDown!=null || KeyUp!=null || KeyPress!=null)"  is complex.
Complex Conditional,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DaySelect,The conditional expression  "((m_calendar.SelectTrailingDates) || (SelectedMonth.Month == m_days[i].Date.Month)) &&                              ((m_calendar.MinDate <= m_days[i].Date) && (m_calendar.MaxDate >= m_days[i].Date)) && (dayEnabled)"  is complex.
Complex Conditional,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusMoved,The conditional expression  "((m_calendar.SelectTrailingDates) || (SelectedMonth.Month == m_days[i].Date.Month)) &&                      ((m_calendar.MinDate <= m_days[i].Date) && (m_calendar.MaxDate >= m_days[i].Date)) && (dayEnabled) && (!args.Cancel)"  is complex.
Complex Conditional,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DaysInArea,The conditional expression  "(m_days[t].Rectangle.Left >= m_selLeft) &&  					(m_days[t].Rectangle.Right <= m_selRight) &&  					(m_days[t].Rectangle.Top >= m_selTop) &&  					(m_days[t].Rectangle.Bottom <= m_selBottom)"  is complex.
Complex Conditional,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,The conditional expression  "(m_calendar.ShowToday) && (today !=-1) &&   					((m_calendar.ShowTrailingDates) || (m_days[today].Date.Month == m_calendar.ActiveMonth.Month))"  is complex.
Complex Conditional,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectRange,The conditional expression  "(From>= m_minDate) && (From<=m_maxDate) &&   				(To>= m_minDate) && (To<=m_maxDate) &&  				(SelectionMode==mcSelectionMode.MultiExtended)"  is complex.
Complex Conditional,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectArea,The conditional expression  "(topLeft>= m_minDate) && (topLeft<=m_maxDate) &&   				(bottomRight>= m_minDate) && (bottomRight<=m_maxDate) &&  				(SelectionMode>=mcSelectionMode.MultiSimple)"  is complex.
Complex Conditional,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectArea,The conditional expression  "(topLeft>= m_minDate) && (topLeft<=m_maxDate) &&   				(bottomRight>= m_minDate) && (bottomRight<=m_maxDate) &&  				(SelectionMode==mcSelectionMode.MultiExtended)"  is complex.
Complex Conditional,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectRange,The conditional expression  "((fromDate>= m_minDate) && (toDate<=m_maxDate) &&  				(toDate>= m_minDate) && (toDate<=m_maxDate)) &&  				( (SelectionMode>=mcSelectionMode.MultiSimple) ||  				( (fromDate == toDate) &&  				(SelectionMode==mcSelectionMode.One)) )"  is complex.
Complex Conditional,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,PreProcessMessage,The conditional expression  "(keyCode == m_keyboard.Up) ||                               (keyCode == m_keyboard.Down) ||                               (keyCode == m_keyboard.Left) ||                               (keyCode == m_keyboard.Right) ||                               (keyCode == m_keyboard.Select) ||                               (keyCode == m_keyboard.NextMonth) ||                               (keyCode == m_keyboard.NextYear) ||                               (keyCode == m_keyboard.PreviousMonth) ||                               (keyCode == m_keyboard.PreviousYear)"  is complex.
Empty Catch Block,Pabo.Calendar,GlobalHook,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\GlobalHook.cs,InstallKeyboardHook,The method has an empty catch block.
Empty Catch Block,Pabo.Calendar,GlobalHook,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\GlobalHook.cs,RemoveKeyboardHook,The method has an empty catch block.
Empty Catch Block,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,OnMouseMove,The method has an empty catch block.
Empty Catch Block,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,PaintValue,The method has an empty catch block.
Empty Catch Block,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,The method has an empty catch block.
Empty Catch Block,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,Copy,The method has an empty catch block.
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,AlignControl,The following statement contains a magic number: this.Width = 75;
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,AlignControl,The following statement contains a magic number: this.Height = 75;
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: w = this.Width/3;
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: h = this.Height/3;
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: m_center = new Rectangle(w'h'System.Math.Max(this.Width-2*w'w)'h);
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: m_bottomLeft = new Rectangle(0'2*h'w'h);
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: m_bottomRight = new Rectangle(this.Width-w'2*h'w'h);
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: m_topCenter = new Rectangle(w'0'System.Math.Max(this.Width-2*w'w)'h);
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: m_bottomCenter = new Rectangle(w'2*h'System.Math.Max(this.Width-2*w'w)'h);
Magic Number,Pabo.Calendar,AlignControl,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\AlignControl.cs,SetupButtons,The following statement contains a magic number: m_bottomCenter = new Rectangle(w'2*h'System.Math.Max(this.Width-2*w'w)'h);
Magic Number,Pabo.Calendar,DateItemCollection,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\DateItemCollection.cs,DateInfo,The following statement contains a magic number: switch (this[i].Pattern)  					{  						case mcDayInfoRecurrence.None:  						{  							if (this[i].Date.ToShortDateString()  == dt.ToShortDateString())  							{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}    						case mcDayInfoRecurrence.Daily:  						{  							this[i].Index = i;  							ret = AddInfo(this[i]'ret);  							break;  						}  						case mcDayInfoRecurrence.Weekly:  						{  							if ( (this[i].Date.DayOfWeek == dt.DayOfWeek) )  							{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  						case mcDayInfoRecurrence.Monthly:  						{  							if ( (this[i].Date.Day == dt.Day))  							{  								this[i].Index = i;																			  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  						case mcDayInfoRecurrence.Yearly:  						{  							if (this[i].Date.ToShortDateString().Substring(5) ==                                  dt.ToShortDateString().Substring(5))                           		{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  					}
Magic Number,Pabo.Calendar,DateItemCollection,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\DateItemCollection.cs,DateInfo,The following statement contains a magic number: switch (this[i].Pattern)  					{  						case mcDayInfoRecurrence.None:  						{  							if (this[i].Date.ToShortDateString()  == dt.ToShortDateString())  							{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}    						case mcDayInfoRecurrence.Daily:  						{  							this[i].Index = i;  							ret = AddInfo(this[i]'ret);  							break;  						}  						case mcDayInfoRecurrence.Weekly:  						{  							if ( (this[i].Date.DayOfWeek == dt.DayOfWeek) )  							{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  						case mcDayInfoRecurrence.Monthly:  						{  							if ( (this[i].Date.Day == dt.Day))  							{  								this[i].Index = i;																			  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  						case mcDayInfoRecurrence.Yearly:  						{  							if (this[i].Date.ToShortDateString().Substring(5) ==                                  dt.ToShortDateString().Substring(5))                           		{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  					}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,Draw,The following statement contains a magic number: Color boldDateColor = Color.FromArgb(0' 127' 223);
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,Draw,The following statement contains a magic number: Color boldDateColor = Color.FromArgb(0' 127' 223);
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following statement contains a magic number: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Magic Number,Pabo.Calendar,Footer,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Footer.cs,Footer,The following statement contains a magic number: m_font = new Font("Microsoft Sans Serif"'(float)8.25'FontStyle.Bold);
Magic Number,Pabo.Calendar,Footer,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Footer.cs,Draw,The following statement contains a magic number: txtRect = new Rectangle(m_rect.Left + 2'm_rect.Top'm_rect.Width - (2*2)'m_rect.Height);
Magic Number,Pabo.Calendar,Footer,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Footer.cs,Draw,The following statement contains a magic number: txtRect = new Rectangle(m_rect.Left + 2'm_rect.Top'm_rect.Width - (2*2)'m_rect.Height);
Magic Number,Pabo.Calendar,Footer,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Footer.cs,Draw,The following statement contains a magic number: txtRect = new Rectangle(m_rect.Left + 2'm_rect.Top'm_rect.Width - (2*2)'m_rect.Height);
Magic Number,Pabo.Calendar,GlobalHook,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\GlobalHook.cs,KeyboardHookProc,The following statement contains a magic number: byte[] keyState = new byte[256];
Magic Number,Pabo.Calendar,GlobalHook,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\GlobalHook.cs,KeyboardHookProc,The following statement contains a magic number: byte[] inBuffer= new byte[2];
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Header,The following statement contains a magic number: m_backColor1 = Color.FromArgb(0'84'227);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Header,The following statement contains a magic number: m_backColor1 = Color.FromArgb(0'84'227);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Header,The following statement contains a magic number: m_font = new Font("Microsoft Sans Serif"'(float)8.25'FontStyle.Bold);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Header,The following statement contains a magic number: k<12
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: int x = 10;
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_prevYearBtnRect = new Rectangle(x'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_prevYearBtnRect = new Rectangle(x'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_prevYearBtnRect = new Rectangle(x'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextYearBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextYearBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextYearBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextYearBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: x+=20;
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_prevBtnRect = new Rectangle(x'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_prevBtnRect = new Rectangle(x'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_prevBtnRect = new Rectangle(x'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_nextBtnRect = new Rectangle(m_rect.Width-x-20'5'20'20);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: x+=20;
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_textRect = new Rectangle(x + 2'0'm_rect.Width - (2*x)-8'm_rect.Height);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_textRect = new Rectangle(x + 2'0'm_rect.Width - (2*x)-8'm_rect.Height);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Setup,The following statement contains a magic number: m_textRect = new Rectangle(x + 2'0'm_rect.Width - (2*x)-8'm_rect.Height);
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following statement contains a magic number: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Magic Number,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,Init,The following statement contains a magic number: imageList.Draw(grfx'  								i*_nItemWidth+_nHSpace/2'  								j*_nItemHeight+vertical/2'  								imageList.ImageSize.Width'  								imageList.ImageSize.Height'  								j*_nColumns+i);
Magic Number,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,Init,The following statement contains a magic number: imageList.Draw(grfx'  								i*_nItemWidth+_nHSpace/2'  								j*_nItemHeight+vertical/2'  								imageList.ImageSize.Width'  								imageList.ImageSize.Height'  								j*_nColumns+i);
Magic Number,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,OnPaintBackground,The following statement contains a magic number: _imageList.Draw(offscreenGrfx'  						_nCoordX*_nItemWidth + _nHSpace/2 + 1'  						_nCoordY*_nItemHeight + _nVSpace/2 + 1'  						_imageList.ImageSize.Width'  						_imageList.ImageSize.Height'  						_nCoordY*_nColumns + _nCoordX);
Magic Number,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,OnPaintBackground,The following statement contains a magic number: _imageList.Draw(offscreenGrfx'  						_nCoordX*_nItemWidth + _nHSpace/2 + 1'  						_nCoordY*_nItemHeight + _nVSpace/2 + 1'  						_imageList.ImageSize.Width'  						_imageList.ImageSize.Height'  						_nCoordY*_nColumns + _nCoordX);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.BackgroundColor = Color.FromArgb(241'241'241);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.BackgroundColor = Color.FromArgb(241'241'241);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.BackgroundColor = Color.FromArgb(241'241'241);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.BackgroundOverColor = Color.FromArgb(102'154'204);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.BackgroundOverColor = Color.FromArgb(102'154'204);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.BackgroundOverColor = Color.FromArgb(102'154'204);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.HLinesColor = Color.FromArgb(182'189'210);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.HLinesColor = Color.FromArgb(182'189'210);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.HLinesColor = Color.FromArgb(182'189'210);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.VLinesColor = Color.FromArgb(182'189'210);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.VLinesColor = Color.FromArgb(182'189'210);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.VLinesColor = Color.FromArgb(182'189'210);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.Init(imageList'12'12'6'(int)value);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.Init(imageList'12'12'6'(int)value);
Magic Number,Pabo.Calendar,ImageMapEditor,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageMapEditor.cs,EditValue,The following statement contains a magic number: m_imagePanel.Init(imageList'12'12'6'(int)value);
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Month,The following statement contains a magic number: m_dateFont = new Font("Segoe UI"' (float)8.25);
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Month,The following statement contains a magic number: m_textFont = new Font("Segoe UI"'(float)8.25);
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Month,The following statement contains a magic number: m_days = new Day[42];
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Month,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DaysInSelection,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SelectionDayCount,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,RemoveDay,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DoubleClick,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Click,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,MouseMove,The following statement contains a magic number: i < 42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,GetDay,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,RemoveFocus,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DaysInArea,The following statement contains a magic number: t<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,RemoveSelection,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Setup,The following statement contains a magic number: startPos = 7;
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Setup,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,The following statement contains a magic number: Brush selBrush = new SolidBrush(Color.FromArgb(25'Colors.Selected.BackColor));
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,The following statement contains a magic number: Brush focusBrush = new SolidBrush(Color.FromArgb(35'Colors.Focus.BackColor));
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,The following statement contains a magic number: Brush todayBrush = new SolidBrush(Color.FromArgb(50' Calendar.TodayColor));
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,Draw,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: m_dayHeight = (float)((m_rect.Height - (m_padding.Vertical*7))  / 6);
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: m_dayHeight = (float)((m_rect.Height - (m_padding.Vertical*7))  / 6);
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: m_dayWidth =  (float)((m_rect.Width - (m_padding.Horizontal*8)) / 7);
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: m_dayWidth =  (float)((m_rect.Width - (m_padding.Horizontal*8)) / 7);
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: dayRect.Width = m_rect.Width - (int)(m_padding.Horizontal*8) - (int)(m_dayWidth*6)-1;
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: dayRect.Width = m_rect.Width - (int)(m_padding.Horizontal*8) - (int)(m_dayWidth*6)-1;
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: j ==6
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: dayRect.Height = m_rect.Height - (int)(m_padding.Vertical*7) - (int)(m_dayHeight*5)-1;
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: dayRect.Height = m_rect.Height - (int)(m_padding.Vertical*7) - (int)(m_dayHeight*5)-1;
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: i==5
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: j<7
Magic Number,Pabo.Calendar,Month,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SetupDays,The following statement contains a magic number: i<6
Magic Number,Pabo.Calendar,DisabledColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DisabledColors,The following statement contains a magic number: m_backColor1 = Color.FromArgb(233' 233' 233);
Magic Number,Pabo.Calendar,DisabledColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DisabledColors,The following statement contains a magic number: m_backColor1 = Color.FromArgb(233' 233' 233);
Magic Number,Pabo.Calendar,DisabledColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,DisabledColors,The following statement contains a magic number: m_backColor1 = Color.FromArgb(233' 233' 233);
Magic Number,Pabo.Calendar,SelectedColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SelectedColors,The following statement contains a magic number: m_backColor = Color.FromArgb(200' 200' 200);
Magic Number,Pabo.Calendar,SelectedColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SelectedColors,The following statement contains a magic number: m_backColor = Color.FromArgb(200' 200' 200);
Magic Number,Pabo.Calendar,SelectedColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SelectedColors,The following statement contains a magic number: m_backColor = Color.FromArgb(200' 200' 200);
Magic Number,Pabo.Calendar,SelectedColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SelectedColors,The following statement contains a magic number: m_borderColor = Color.FromArgb(49' 106' 197);
Magic Number,Pabo.Calendar,SelectedColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SelectedColors,The following statement contains a magic number: m_borderColor = Color.FromArgb(49' 106' 197);
Magic Number,Pabo.Calendar,SelectedColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,SelectedColors,The following statement contains a magic number: m_borderColor = Color.FromArgb(49' 106' 197);
Magic Number,Pabo.Calendar,FocusColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusColors,The following statement contains a magic number: m_backColor = Color.FromArgb(200' 200' 200);
Magic Number,Pabo.Calendar,FocusColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusColors,The following statement contains a magic number: m_backColor = Color.FromArgb(200' 200' 200);
Magic Number,Pabo.Calendar,FocusColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusColors,The following statement contains a magic number: m_backColor = Color.FromArgb(200' 200' 200);
Magic Number,Pabo.Calendar,FocusColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusColors,The following statement contains a magic number: m_borderColor = Color.FromArgb(152' 180' 226);
Magic Number,Pabo.Calendar,FocusColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusColors,The following statement contains a magic number: m_borderColor = Color.FromArgb(152' 180' 226);
Magic Number,Pabo.Calendar,FocusColors,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,FocusColors,The following statement contains a magic number: m_borderColor = Color.FromArgb(152' 180' 226);
Magic Number,Pabo.Calendar,MonthPadding,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,MonthPadding,The following statement contains a magic number: m_horizontal = 2;
Magic Number,Pabo.Calendar,MonthPadding,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,MonthPadding,The following statement contains a magic number: m_vertical = 2;
Magic Number,Pabo.Calendar,TransparencyCollection,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,TransparencyCollection,The following statement contains a magic number: m_background = 175;
Magic Number,Pabo.Calendar,TransparencyCollection,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,TransparencyCollection,The following statement contains a magic number: m_text = 255;
Magic Number,Pabo.Calendar,MonthPaddingTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: string[] ss = value.ToString().Split(new char[] {';'}' 2);
Magic Number,Pabo.Calendar,MonthPaddingTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: ss.Length==2
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: string[] ss = value.ToString().Split(new char[] { ';' }' 2);
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: item.Text = 255;
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: item.Text > 255
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: item.Background = 255;
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: item.Background > 255
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertFrom,The following statement contains a magic number: ss.Length == 2
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertTo,The following statement contains a magic number: dest.Text = 255;
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertTo,The following statement contains a magic number: dest.Text > 255
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertTo,The following statement contains a magic number: dest.Background = 255;
Magic Number,Pabo.Calendar,TransparencyTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Month.cs,ConvertTo,The following statement contains a magic number: dest.Background > 255
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MonthCalendar,The following statement contains a magic number: m_minDate = DateTime.Now.AddYears(-10);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MonthCalendar,The following statement contains a magic number: m_maxDate = DateTime.Now.AddYears(10);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MonthCalendar,The following statement contains a magic number: this.Width = 176;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MonthCalendar,The following statement contains a magic number: this.Height = 184;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,IsSelected,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectRange,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectArea,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectArea,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectRange,The following statement contains a magic number: i<42
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectWeekday,The following statement contains a magic number: m_month.SelectArea(i'i+35);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectWeekday,The following statement contains a magic number: i<=6
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectWeekday,The following statement contains a magic number: m_month.DeselectArea(i'i+35);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectWeekday,The following statement contains a magic number: i<=6
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectWeek,The following statement contains a magic number: m_month.SelectRange(i*7'(i*7)+6);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectWeek,The following statement contains a magic number: m_month.SelectRange(i*7'(i*7)+6);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectWeek,The following statement contains a magic number: m_month.SelectRange(i*7'(i*7)+6);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectWeek,The following statement contains a magic number: m_month.m_days[i*7].Week == week
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,SelectWeek,The following statement contains a magic number: i<6
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectWeek,The following statement contains a magic number: m_month.DeselectArea(i*7'(i*7)+6);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectWeek,The following statement contains a magic number: m_month.DeselectArea(i*7'(i*7)+6);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectWeek,The following statement contains a magic number: m_month.DeselectArea(i*7'(i*7)+6);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectWeek,The following statement contains a magic number: m_month.m_days[i*7].Week == week
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DeselectWeek,The following statement contains a magic number: i<6
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,IntToDayOfWeek,The following statement contains a magic number: switch (d)  			{  				case 0 : return DayOfWeek.Sunday;  				case 1 : return DayOfWeek.Monday;  				case 2 : return DayOfWeek.Tuesday;  				case 3 : return DayOfWeek.Wednesday;  				case 4 : return DayOfWeek.Thursday;  				case 5 : return DayOfWeek.Friday;  				case 6 : return DayOfWeek.Saturday;  				default : return DayOfWeek.Friday; // should never be used.  	   			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,IntToDayOfWeek,The following statement contains a magic number: switch (d)  			{  				case 0 : return DayOfWeek.Sunday;  				case 1 : return DayOfWeek.Monday;  				case 2 : return DayOfWeek.Tuesday;  				case 3 : return DayOfWeek.Wednesday;  				case 4 : return DayOfWeek.Thursday;  				case 5 : return DayOfWeek.Friday;  				case 6 : return DayOfWeek.Saturday;  				default : return DayOfWeek.Friday; // should never be used.  	   			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,IntToDayOfWeek,The following statement contains a magic number: switch (d)  			{  				case 0 : return DayOfWeek.Sunday;  				case 1 : return DayOfWeek.Monday;  				case 2 : return DayOfWeek.Tuesday;  				case 3 : return DayOfWeek.Wednesday;  				case 4 : return DayOfWeek.Thursday;  				case 5 : return DayOfWeek.Friday;  				case 6 : return DayOfWeek.Saturday;  				default : return DayOfWeek.Friday; // should never be used.  	   			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,IntToDayOfWeek,The following statement contains a magic number: switch (d)  			{  				case 0 : return DayOfWeek.Sunday;  				case 1 : return DayOfWeek.Monday;  				case 2 : return DayOfWeek.Tuesday;  				case 3 : return DayOfWeek.Wednesday;  				case 4 : return DayOfWeek.Thursday;  				case 5 : return DayOfWeek.Friday;  				case 6 : return DayOfWeek.Saturday;  				default : return DayOfWeek.Friday; // should never be used.  	   			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,IntToDayOfWeek,The following statement contains a magic number: switch (d)  			{  				case 0 : return DayOfWeek.Sunday;  				case 1 : return DayOfWeek.Monday;  				case 2 : return DayOfWeek.Tuesday;  				case 3 : return DayOfWeek.Wednesday;  				case 4 : return DayOfWeek.Thursday;  				case 5 : return DayOfWeek.Friday;  				case 6 : return DayOfWeek.Saturday;  				default : return DayOfWeek.Friday; // should never be used.  	   			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,AllowedMonths,The following statement contains a magic number: string[] monthList = new string[12];
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,AllowedMonths,The following statement contains a magic number: i<12
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DayNames,The following statement contains a magic number: string[] dayList = new string[8];
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DayNames,The following statement contains a magic number: i<=7
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MonthNumber,The following statement contains a magic number: (Convert.ToInt32(m)>=1) && (Convert.ToInt32(m)<=12)
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DayNumber,The following statement contains a magic number: (Convert.ToInt32(m)>=0) && (Convert.ToInt32(m)<8)
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MonthName,The following statement contains a magic number: (m >=1) && (m <=12)
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: y = 2 + this.Font.Height + 2;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: y = 2 + this.Font.Height + 2;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: m_header.Font.Height > 31
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: x = 2 + (int)weekSize.Width + 2;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: x = 2 + (int)weekSize.Width + 2;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: m_weekdaysRect.Height = 2 + m_weekday.Font.Height + 2;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: m_weekdaysRect.Height = 2 + m_weekday.Font.Height + 2;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: m_footerRect.Height = 2 + m_footer.Font.Height + 2 ;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,DoLayout,The following statement contains a magic number: m_footerRect.Height = 2 + m_footer.Font.Height + 2 ;
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,OnEnter,The following statement contains a magic number: i < 42
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_hook_KeyDown,The following statement contains a magic number: switch(e.KeyCode)  			{  				case Keys.LControlKey:  				case Keys.RControlKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Ctrl)  						m_ctrlKey = true;  					break;  				}            		case Keys.LShiftKey:  				case Keys.RShiftKey:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Shift)  						m_ctrlKey = true;  					break;  				}  				case Keys.LMenu:  				{  					if (m_extendedKey == mcExtendedSelectionKey.Alt)  						m_ctrlKey = true;  					break;  				}                                    default:                  {                      if (m_keyboardEnabled)                      {                          if (Focused)                          {                              m_keyHandled = false;                              if (e.KeyCode == m_keyboard.Left)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-1);                                  else if ((m_month.DayInFocus-1 >=0) && (m_month.m_days[m_month.DayInFocus -1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                      m_month.FocusMoved(m_month.DayInFocus -1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Right)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(1);                                  else if ((m_month.DayInFocus+1 <=41) && (m_month.m_days[m_month.DayInFocus+1].Rectangle.Y == m_month.m_days[m_month.DayInFocus].Rectangle.Y))                                          m_month.FocusMoved(m_month.DayInFocus + 1);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.Up)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(-7);                                  else if (m_month.DayInFocus-7 >=0)                                      m_month.FocusMoved(m_month.DayInFocus -7);                                  m_keyHandled = true;                                 }                              if (e.KeyCode == m_keyboard.Down)                              {                                  if (!m_selectKeyDown)                                      MoveFocus(7);                                  else if (m_month.DayInFocus + 7 <=41)                                      m_month.FocusMoved(m_month.DayInFocus + 7);                                  m_keyHandled = true;                              }                              if (e.KeyCode == m_keyboard.NextMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(1);                              }                              if (e.KeyCode == m_keyboard.PreviousMonth)                              {                                  m_keyHandled = true;                                  ChangeMonth(-1);                              }                              if (e.KeyCode == m_keyboard.NextYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(12);                              }                              if (e.KeyCode == m_keyboard.PreviousYear)                              {                                  m_keyHandled = true;                                  ChangeMonth(-12);                              }                              if ((e.KeyCode == m_keyboard.Select) && (m_month.DayInFocus != -1))                              {                                  m_keyHandled = true;                                  if (!m_selectKeyDown)                                  {                                      m_selectKeyDown = true;                                          m_month.DaySelect(m_month.DayInFocus' m_selectButton'                                                        new Point(m_month.m_days[m_month.DayInFocus].Rectangle.X + 1'                                                                  m_month.m_days[m_month.DayInFocus].Rectangle.Y + 1));                                  }                                }                            }                      }                        break;                  }  			}
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MoveFocus,The following statement contains a magic number: (focus <= 41) && (focus>=0) && (m_month.m_days[focus].State == mcDayState.Focus)
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,MoveFocus,The following statement contains a magic number: (focus + step >= 0) && (focus +step <=41)
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,UpdateSelectedCollection,The following statement contains a magic number: i < 42
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_header_PrevYearButtonClick,The following statement contains a magic number: ChangeMonth(-12);
Magic Number,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,m_header_NextYearButtonClick,The following statement contains a magic number: ChangeMonth(12);
Magic Number,Pabo.Calendar,FirstDayOfWeekConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,ConvertTo,The following statement contains a magic number: string[] validNames = new string[8];
Magic Number,Pabo.Calendar,FirstDayOfWeekConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,ConvertTo,The following statement contains a magic number: i<=7
Magic Number,Pabo.Calendar,FirstDayOfWeekConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,ConvertFrom,The following statement contains a magic number: (ret >=0) && (ret<=7)
Magic Number,Pabo.Calendar,MonthConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,ConvertFrom,The following statement contains a magic number: (ret >=1) && (ret<=12)
Magic Number,Pabo.Calendar,ActiveMonthTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,ConvertFrom,The following statement contains a magic number: string[] ss = value.ToString().Split(new char[] {';'}' 2);
Magic Number,Pabo.Calendar,ActiveMonthTypeConverter,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,ConvertFrom,The following statement contains a magic number: ss.Length==2
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Weekday,The following statement contains a magic number: m_textColor = Color.FromArgb(0'84'227);
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Weekday,The following statement contains a magic number: m_textColor = Color.FromArgb(0'84'227);
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Weekday,The following statement contains a magic number: m_font = new Font("Microsoft Sans Serif"'(float)8.25);
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,GetWeekDays,The following statement contains a magic number: string[] weekdays = new string[7] ;
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Draw,The following statement contains a magic number: dayRect.Width = m_rect.Width - (int)(m_calendar.Month.Padding.Horizontal * 8) - (int)(dayWidth * 6) - 1;
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Draw,The following statement contains a magic number: dayRect.Width = m_rect.Width - (int)(m_calendar.Month.Padding.Horizontal * 8) - (int)(dayWidth * 6) - 1;
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Draw,The following statement contains a magic number: i==6
Magic Number,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Draw,The following statement contains a magic number: i<7
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Weeknumber,The following statement contains a magic number: m_textColor = Color.FromArgb(0'84'227);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Weeknumber,The following statement contains a magic number: m_textColor = Color.FromArgb(0'84'227);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Weeknumber,The following statement contains a magic number: m_font = new Font("Microsoft Sans Serif"'(float)8.25);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,MouseClick,The following statement contains a magic number: week = gCalendar.GetWeekOfYear(m_calendar.Month.m_days[i*7].Date'm_calendar.m_dateTimeFormat.CalendarWeekRule'm_calendar.m_dateTimeFormat.FirstDayOfWeek);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Draw,The following statement contains a magic number: weekRect.Height = m_rect.Height - (m_calendar.Month.Padding.Vertical*7) - (int)(dayHeight*5)-1;
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Draw,The following statement contains a magic number: weekRect.Height = m_rect.Height - (m_calendar.Month.Padding.Vertical*7) - (int)(dayHeight*5)-1;
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Draw,The following statement contains a magic number: i == 5
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Draw,The following statement contains a magic number: weeknr = GetWeek(m_calendar.Month.m_days[i*7].Date);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Draw,The following statement contains a magic number: i<6
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,GetISO8601Weeknumber,The following statement contains a magic number: dt >= new DateTime(IsoYear' 12' 29)
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,GetISO8601Weeknumber,The following statement contains a magic number: dt >= new DateTime(IsoYear' 12' 29)
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,GetISO8601Weeknumber,The following statement contains a magic number: IsoWeek = (IsoYear * 100) + ((dt - week1).Days / 7 + 1);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,GetISO8601Weeknumber,The following statement contains a magic number: IsoWeek = (IsoYear * 100) + ((dt - week1).Days / 7 + 1);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,GetISO8601Weeknumber,The following statement contains a magic number: return IsoWeek % 100;
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,GetIsoWeekOne,The following statement contains a magic number: DateTime dt = new DateTime(Year' 1' 4);
Magic Number,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,GetIsoWeekOne,The following statement contains a magic number: dayNumber = 7;
Missing Default,Pabo.Calendar,DateItemCollection,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\DateItemCollection.cs,DateInfo,The following switch statement is missing a default case: switch (this[i].Pattern)  					{  						case mcDayInfoRecurrence.None:  						{  							if (this[i].Date.ToShortDateString()  == dt.ToShortDateString())  							{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}    						case mcDayInfoRecurrence.Daily:  						{  							this[i].Index = i;  							ret = AddInfo(this[i]'ret);  							break;  						}  						case mcDayInfoRecurrence.Weekly:  						{  							if ( (this[i].Date.DayOfWeek == dt.DayOfWeek) )  							{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  						case mcDayInfoRecurrence.Monthly:  						{  							if ( (this[i].Date.Day == dt.Day))  							{  								this[i].Index = i;																			  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  						case mcDayInfoRecurrence.Yearly:  						{  							if (this[i].Date.ToShortDateString().Substring(5) ==                                  dt.ToShortDateString().Substring(5))                           		{  								this[i].Index = i;  								ret = AddInfo(this[i]'ret);  							}  							break;  						}  					}
Missing Default,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,GetStringAlignment,The following switch statement is missing a default case: switch (align)  			{  				case mcItemAlign.LeftCenter:  				{  					sf.Alignment = StringAlignment.Near;     					sf.LineAlignment = StringAlignment.Center;  					break;  				}  				case mcItemAlign.RightCenter:  				{  					sf.Alignment = StringAlignment.Far;     					sf.LineAlignment = StringAlignment.Center;  					break;  				}  				case mcItemAlign.TopCenter:  				{  					sf.Alignment = StringAlignment.Center;     					sf.LineAlignment = StringAlignment.Near;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					sf.Alignment = StringAlignment.Center;     					sf.LineAlignment = StringAlignment.Far;  					break;  				}  				case mcItemAlign.TopLeft:  				{  					sf.Alignment = StringAlignment.Near;     					sf.LineAlignment = StringAlignment.Near;  					break;  				}  				case mcItemAlign.TopRight:  				{  					sf.Alignment = StringAlignment.Far;     					sf.LineAlignment = StringAlignment.Near;  					break;  				}  				case mcItemAlign.Center:  				{  					sf.Alignment = StringAlignment.Center;     					sf.LineAlignment = StringAlignment.Center;  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					sf.Alignment = StringAlignment.Near;     					sf.LineAlignment = StringAlignment.Far;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					sf.Alignment = StringAlignment.Far;     					sf.LineAlignment = StringAlignment.Far;  					break;  				}  			}
Missing Default,Pabo.Calendar,Day,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Day.cs,ImageRect,The following switch statement is missing a default case: switch (align)  			{  				  				case mcItemAlign.LeftCenter:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.RightCenter:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.TopCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.BottomCenter:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				  				case mcItemAlign.TopLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.TopRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Y + 2;  					break;  				}  				case mcItemAlign.Center:  				{  					imageRect.X = m_rect.X +((m_rect.Width/2) - (m_dayImage.Width/2));  					imageRect.Y = m_rect.Top +((m_rect.Height/2) - (m_dayImage.Height/2));  					break;  				}  				case mcItemAlign.BottomLeft:  				{  					imageRect.X = m_rect.X + 2;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;  					break;  				}  				case mcItemAlign.BottomRight:  				{  					imageRect.X = m_rect.Right - 2 - m_dayImage.Width;  					imageRect.Y = m_rect.Bottom -2 - m_dayImage.Height;	  					break;  				}  			}
Missing Default,Pabo.Calendar,Footer,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Footer.cs,Draw,The following switch statement is missing a default case: switch (Align)  			{  				case mcTextAlign.Left:  				{  					textFormat.Alignment = StringAlignment.Near;  					break;  				}  				case mcTextAlign.Center:  				{  					textFormat.Alignment = StringAlignment.Center;  					break;  				}  				case mcTextAlign.Right:  				{  					textFormat.Alignment = StringAlignment.Far;  					break;  				}  			}
Missing Default,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,Draw,The following switch statement is missing a default case: switch (m_align)  			{  				case mcTextAlign.Center:  				{  					textFormat.Alignment = StringAlignment.Center;  					break;  				}  				case mcTextAlign.Left:  				{  					textFormat.Alignment = StringAlignment.Near;  					break;  				}  				case mcTextAlign.Right:  				{  					textFormat.Alignment = StringAlignment.Far;  					break;  				}  			}
Missing Default,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following switch statement is missing a default case: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          image = m_prevMonthVs;                          x = rect.Left + 5;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.PreviousYear:                      {                          image = m_prevYearVs;                          x = rect.Left + 4;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          image = m_nextMonthVs;                          x = rect.Right - 13;                          y = rect.Top + 5;                          break;                      }                      case mcHeaderButtons.NextYear:                      {                          image = m_nextYearVs;                          x = rect.Right - 16;                           y = rect.Top + 5;                          break;                      }                                    }
Missing Default,Pabo.Calendar,Header,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Header.cs,DrawButton,The following switch statement is missing a default case: switch (button)                  {                      case mcHeaderButtons.PreviousMonth:                      {                          ControlPaint.DrawScrollButton(e' rect' ScrollButton.Left' btnState);                          break;                      }                      case mcHeaderButtons.NextMonth:                      {                          ControlPaint.DrawScrollButton(e' rect' ScrollButton.Right' btnState);                          break;                      }                      case mcHeaderButtons.NextYear:                      {                            ControlPaint.DrawButton(e' rect' btnState);                          if (state == mcButtonState.Pushed)                              corr = 1;                          if ((m_calendar.Enabled) && (m_nextYearBtnState != mcButtonState.Inactive))                              e.DrawImage(m_nextYear' new Point(rect.Left + 3' rect.Top + 2 + corr));                          else                              e.DrawImage(m_nextYearDisabled' new Point(rect.Left + 3' rect.Top + 2 + corr));                                            break;                      }                      case mcHeaderButtons.PreviousYear:                      {                            ControlPaint.DrawButton(e' rect' btnState);                          if (state == mcButtonState.Pushed)                              corr = 1;                          if ((m_calendar.Enabled) && (m_prevYearBtnState != mcButtonState.Inactive))                              e.DrawImage(m_prevYear' new Point(rect.Left' rect.Top + 2 + corr));                          else                              e.DrawImage(m_prevYearDisabled' new Point(rect.Left' rect.Top + 2 + corr));                                              break;                      }                  }
Missing Default,Pabo.Calendar,ImageListPanel,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\ImageListPanel.cs,OnKeyDown,The following switch statement is missing a default case: switch(e.KeyCode)  				{  					case Keys.Down:  						if (_nCoordY<_nRows-1)  						{  							_nCoordY++;  							Invalidate();  						}  						break;  					case Keys.Up:  						if (_nCoordY>0)  						{  							_nCoordY--;  							Invalidate();  						}  						break;  					case Keys.Right:  						if (_nCoordX<_nColumns-1)  						{  							_nCoordX++;  							Invalidate();  						}  						break;  					case Keys.Left:  						if (_nCoordX>0)  						{  							_nCoordX--;  							Invalidate();  						}  						break;  					case Keys.Enter:  					case Keys.Space:  						// We fire the event only when the mouse is released  						int nImageId = _nCoordY*_nColumns + _nCoordX;  						if (ItemClick != null && nImageId>=0 && nImageId<_imageList.Images.Count)  						{  							ItemClick(this' new ImageListPanelEventArgs(nImageId));  							_nCoordX = -1;  							_nCoordY = -1;  							Hide();  						}  						break;  					case Keys.Escape:  						_nCoordX = -1;  						_nCoordY = -1;  						Hide();  						break;  				}
Missing Default,Pabo.Calendar,MonthCalendar,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\MonthCalendar.cs,WndProc,The following switch statement is missing a default case: switch (m.Msg)  			{  				case NativeMethods.WM_THEMECHANGED:  				{  					// Theme has changed ' get new colors if Theme = true  					if (Theme)  						GetThemeColors();  					break;  				}  			}
Missing Default,Pabo.Calendar,Weekday,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weekday.cs,Draw,The following switch statement is missing a default case: switch (Align)  			{  				case mcTextAlign.Left:  				{  					textFormat.Alignment = StringAlignment.Near;  					break;  				}  				case mcTextAlign.Center:  				{  					textFormat.Alignment = StringAlignment.Center;  					break;  				}  				case mcTextAlign.Right:  				{  					textFormat.Alignment = StringAlignment.Far;  					break;  				}  			}
Missing Default,Pabo.Calendar,Weeknumber,D:\research\architectureSmells\repos\yyoon_Journaley\MonthCalendar\Weeknumber.cs,Draw,The following switch statement is missing a default case: switch (m_align)              {                  case mcWeeknumberAlign.Top:                  {                        textFormat.LineAlignment = StringAlignment.Near;                      break;                  }                  case mcWeeknumberAlign.Center:                  {                        textFormat.LineAlignment = StringAlignment.Center;                      break;                  }                  case mcWeeknumberAlign.Bottom:                  {                        textFormat.LineAlignment = StringAlignment.Far;                      break;                  }                    }
