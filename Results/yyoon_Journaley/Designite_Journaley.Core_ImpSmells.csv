Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Journaley.Core.Utilities,FirstSentenceExtractor,C:\repos\yyoon_Journaley\Journaley.Core\Utilities\FirstSentenceExtractor.cs,IndexOfPunctuationMark,Cyclomatic complexity of the method is 8
Long Parameter List,Journaley.Core.Models,Entry,C:\repos\yyoon_Journaley\Journaley.Core\Models\Entry.cs,Entry,The method has 5 parameters. Parameters: dateTime' entryText' starred' uuid' isDirty
Long Statement,Journaley.Core.Models,Entry,C:\repos\yyoon_Journaley\Journaley.Core\Models\Entry.cs,Save,The length of the statement  "                using (StreamWriter streamWriter = new StreamWriter(Path.Combine(folderPath' this.FileName)' false' new UTF8Encoding())) " is 120.
Long Statement,Journaley.Core.Utilities,FirstSentenceExtractor,C:\repos\yyoon_Journaley\Journaley.Core\Utilities\FirstSentenceExtractor.cs,IndexOfPunctuationMark,The length of the statement  "                if (pos >= abbr.Length - 1 && line.Substring(pos - abbr.Length + 1' abbr.Length).Equals(abbr' StringComparison.OrdinalIgnoreCase)) " is 130.
Magic Number,Journaley.Core.Models,Entry,C:\repos\yyoon_Journaley\Journaley.Core\Models\Entry.cs,Entry,The following statement contains a magic number: this.Creator.Add("Software Agent"' string.Format("Journaley/{0}"' version.ToString(2)));
Magic Number,Journaley.Core.Models,Entry,C:\repos\yyoon_Journaley\Journaley.Core\Models\Entry.cs,LoadFromFile,The following statement contains a magic number: try              {                  using (StreamReader sr = new StreamReader(path' Encoding.UTF8))                  {                      Entry newEntry = new Entry();                        string fileContent = sr.ReadToEnd().TrimStart();                        // Remove all the invalid characters' if any.                      foreach (char ch in InvalidCharacters)                      {                          fileContent = fileContent.Replace(ch.ToString()' string.Empty);                      }                        XmlDocument doc = new XmlDocument();                      doc.XmlResolver = null;                      doc.LoadXml(fileContent);                        XmlNode dictNode = doc.SelectSingleNode("//dict");                      Debug.Assert(dictNode.ChildNodes.Count % 2 == 0' "A dict node must have even number of children (key' value)");                      for (int i = 0; i < dictNode.ChildNodes.Count; i += 2)                      {                          XmlNode keyNode = dictNode.ChildNodes[i];                          Debug.Assert(keyNode.Name == "key"' "key element must appear");                            XmlNode valueNode = keyNode.NextSibling;                            LoadKeyValue(newEntry' keyNode' valueNode);                      }                        // Check for some existing photo.                      if (settings != null)                      {                          newEntry.CheckExistingPhoto(settings.PhotoFolderPath);                      }                        newEntry.IsDirty = false;                        return newEntry;                  }              }              catch (Exception e)              {                  if (throwExceptions)                  {                      throw e;                  }                    // Write to a log file.                  StringBuilder builder = new StringBuilder();                  builder.AppendLine("An error occurred while reading entry \"" + path + "\"");                  builder.AppendLine(e.Message);                  builder.AppendLine(e.StackTrace);                    Logger.Log(builder.ToString());                    return null;              }
Magic Number,Journaley.Core.Models,Entry,C:\repos\yyoon_Journaley\Journaley.Core\Models\Entry.cs,LoadFromFile,The following statement contains a magic number: try              {                  using (StreamReader sr = new StreamReader(path' Encoding.UTF8))                  {                      Entry newEntry = new Entry();                        string fileContent = sr.ReadToEnd().TrimStart();                        // Remove all the invalid characters' if any.                      foreach (char ch in InvalidCharacters)                      {                          fileContent = fileContent.Replace(ch.ToString()' string.Empty);                      }                        XmlDocument doc = new XmlDocument();                      doc.XmlResolver = null;                      doc.LoadXml(fileContent);                        XmlNode dictNode = doc.SelectSingleNode("//dict");                      Debug.Assert(dictNode.ChildNodes.Count % 2 == 0' "A dict node must have even number of children (key' value)");                      for (int i = 0; i < dictNode.ChildNodes.Count; i += 2)                      {                          XmlNode keyNode = dictNode.ChildNodes[i];                          Debug.Assert(keyNode.Name == "key"' "key element must appear");                            XmlNode valueNode = keyNode.NextSibling;                            LoadKeyValue(newEntry' keyNode' valueNode);                      }                        // Check for some existing photo.                      if (settings != null)                      {                          newEntry.CheckExistingPhoto(settings.PhotoFolderPath);                      }                        newEntry.IsDirty = false;                        return newEntry;                  }              }              catch (Exception e)              {                  if (throwExceptions)                  {                      throw e;                  }                    // Write to a log file.                  StringBuilder builder = new StringBuilder();                  builder.AppendLine("An error occurred while reading entry \"" + path + "\"");                  builder.AppendLine(e.Message);                  builder.AppendLine(e.StackTrace);                    Logger.Log(builder.ToString());                    return null;              }
Magic Number,Journaley.Core.Models,EntryList,C:\repos\yyoon_Journaley\Journaley.Core\Models\EntryList.cs,GetThisWeekCount,The following statement contains a magic number: if (diff < 0)              {                  diff += 7;              }
Magic Number,Journaley.Core.PList,PListLoader,C:\repos\yyoon_Journaley\Journaley.Core\PList\PListLoader.cs,LoadFromXmlNode,The following statement contains a magic number: switch (node.Name.ToLower())              {                  case "string":                      return new PListString(node.InnerText);                    case "real":                      return new PListReal(decimal.Parse(node.InnerText));                    case "integer":                      return new PListInteger(int.Parse(node.InnerText));                    case "true":                      return new PListBoolean(true);                    case "false":                      return new PListBoolean(false);                    case "date":                      return new PListDate(DateTime.Parse(node.InnerText));                    case "data":                      return new PListData(Convert.FromBase64String(node.InnerText));                    case "array":                      {                          var array = new PListArray();                            foreach (XmlNode child in node.ChildNodes)                          {                              array.Add(LoadFromXmlNode(child));                          }                            return array;                      }                    case "dict":                      {                          var dict = new PListDictionary();                            for (int i = 0; i < node.ChildNodes.Count; i += 2)                          {                              var keyNode = node.ChildNodes[i];                              var key = keyNode.InnerText;                                dict.Add(key' LoadFromXmlNode(node.ChildNodes[i + 1]));                          }                            return dict;                      }                    default:                      return null;              }
