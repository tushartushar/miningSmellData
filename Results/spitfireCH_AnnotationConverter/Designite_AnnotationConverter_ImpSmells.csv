Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AnnotationConverter,FrmChooseReaders,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ChooseReaders.cs,btnOK_Click,Cyclomatic complexity of the method is 9
Complex Method,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,InstantiateSourceAndTarget,Cyclomatic complexity of the method is 14
Complex Method,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,InstantiateSourceAndTarget,Cyclomatic complexity of the method is 14
Complex Method,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,ExportRow,Cyclomatic complexity of the method is 26
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,ckbImportDone_CheckedChanged,The length of the statement  "	pnlSource.BackColor = ckbImportDone.Checked ? System.Drawing.SystemColors.ControlLight : System.Drawing.SystemColors.Control; " is 125.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,btnSource_Click,The length of the statement  "		this.lbSource.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,btnSource_Click,The length of the statement  "			MessageBox.Show ("The selected file cannot be processed.\r\nThe following error has occured:\r\n\r\n" + ex.Message' "Error: invalid file"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 183.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,cbBooks_SelectedIndexChanged,The length of the statement  "		lbTarget.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,cbBooks_SelectedIndexChanged,The length of the statement  "		lbTarget.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Italic' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,btnTarget_Click,The length of the statement  "	if (DialogResult.Cancel == MessageBox.Show ("The annotation file was not found automatically." + "\r\n\r\nPlease make sure the book has been previously" + "\r\nimportet into Adobe Digital Editions and" + "\r\nsearch for the .annot file manually." + "\r\nPlease check the .external-folder as well." + "\r\n\r\nThe file name used by ADE may differ from the reader."' "Warning: File not found"' MessageBoxButtons.OKCancel)) { " is 422.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,btnTarget_Click,The length of the statement  "		lbTarget.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,btnConvert_Click,The length of the statement  "	if (DialogResult.No == MessageBox.Show ("Existing annotations will be overwritten" + "\r\nby the annotations from the reader." + "\r\n\r\nAnnotations in the book that were" + "\r\nmade in Adobe Digital Editions and" + "\r\ndon't exist on the reader will be lost!" + "\r\n\r\nContinue?"' "Warning: File will be overwritten"' MessageBoxButtons.YesNo)) { " is 351.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,bgWorker_DoWork,The length of the statement  "	// see: http://stackoverflow.com/questions/11936837/c-sharp-backgroundworker-dowork-method-calling-another-class-and-progressreport " is 131.
Long Statement,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,bgWorker_RunWorkerCompleted,The length of the statement  "	MessageBox.Show (String.Format ("{0} bookmarks and {1} annotations have been converted."' _import.CountBookmarks.ToString ()' _import.CountAnnotations.ToString ())' "Conversion completed"); " is 189.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ckbImportDone_CheckedChanged,The length of the statement  "	pnlSource.BackColor = ckbImportDone.Checked ? System.Drawing.SystemColors.ControlLight : System.Drawing.SystemColors.Control; " is 125.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,btnSource_Click,The length of the statement  "	this.lbSource.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,btnSource_Click,The length of the statement  "		MessageBox.Show ("The selected file cannot be processed.\r\nThe following error has occured:\r\n\r\n" + ex.Message + "\r\n\r\nPlease make sure you have chosen books.db."' "Error: invalid file"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 238.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,btnTarget_Click,The length of the statement  "	this.lbTarget.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,btnTarget_Click,The length of the statement  "		MessageBox.Show ("The selected file cannot be processed.\r\nThe following error has occured:\r\n\r\n" + ex.Message + "\r\n\r\nPlease make sure you have chosen mreader-premium/light.db."' "Error: invalid file"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 254.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,cbType_SelectedIndexChanged,The length of the statement  "	cbColor.DataSource = highlightStyle == 0 ? new BindingSource (_diHighlightColors' null) : new BindingSource (_diUnderlineColors' null); " is 135.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,btnConvert_Click,The length of the statement  "	if (DialogResult.No == MessageBox.Show ("New and changed annotations will be added" + "\r\nto the indicated database." + "\r\n\r\n(see [?] for more details)" + "\r\n\r\nContinue?"' "Annotations will be added"' MessageBoxButtons.YesNo)) { " is 237.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,btnHelp_Click,The length of the statement  "	MessageBox.Show ("• Annotation exists in the Source but not in Mantano" + "\r\n\t-> Copy from Source to Mantano" + "\r\n\r\n• Annotation does not exist in the Source but in Mantano" + "\r\n\t-> Nothing (no deletions)" + "\r\n\r\n• Annotation starts or ends at the same position on both" + "\r\n  but has differnt length and is" + "\r\n  - newer on the source" + "\r\n\t-> update from Source to Mantano" + "\r\n  - newer on the Mantano" + "\r\n\t-> Nothing" + "\r\n\r\n• Annotation exists in both' but content is newer and not empty in Source" + "\r\n\t-> update from Source to Mantano" + "\r\n\r\n• Annotation overlaps' but does not start nor end at the same position" + "\r\n\t-> Copy from Source to Mantano" + "\r\n\t(can't recognize the overlap' leading to partial duplication)"' "Scenarios"' MessageBoxButtons.OK); " is 818.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,bgWorker_DoWork,The length of the statement  "	// see: http://stackoverflow.com/questions/11936837/c-sharp-backgroundworker-dowork-method-calling-another-class-and-progressreport " is 131.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,bgWorker_RunWorkerCompleted,The length of the statement  "	MessageBox.Show (String.Format ("{0} bookmark{1} and {2} annotation{3} have been converted:" + "\r\n{4} record{5} been skipped (already existing)'" + "\r\n{6} record{7} been inserted" + "\r\nand {8} record{9} been updated." + "\r\n{10} error{11} occured."' _import.CountBookmarks.ToString ()' _import.CountBookmarks != 1 ? "s" : ""' _import.CountAnnotations.ToString ()' _import.CountAnnotations != 1 ? "s" : ""' _export.RecordsSkipped.ToString ()' _export.RecordsSkipped != 1 ? "s have" : " has"' _export.RecordsInserted.ToString ()' _export.RecordsInserted != 1 ? "s have" : " has"' _export.RecordsUpdated.ToString ()' _export.RecordsUpdated != 1 ? "s have" : " has"' _export.RecordErrors.ToString ()' _export.RecordErrors != 1 ? "s have" : " has")' "Conversion completed"); " is 776.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,MatchBookLists,The length of the statement  "	var matchingItem = _liTargetBooksContent.Find (item => item.Item2 == ((Tuple<long' string' string' string>)cbBooks.SelectedItem).Item2); " is 136.
Long Statement,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,EvaluateBookLists,The length of the statement  "		lblBookFound.Text = "Book not found automatically' please select manually.\nIf it does not exist in Mantano yet' import it first and start at step 1)."; " is 152.
Long Statement,AnnotationConverter,ExportToADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToADE.cs,PrepareTarget,The length of the statement  "	throw new NotSupportedException (("'PrepareTarget(string dbFile' long bookID)' is not supported by ExportToMantano.\nUse 'PrepareTarget(string targetFile)' instead")); " is 167.
Long Statement,AnnotationConverter,ExportToADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToADE.cs,ExportRow,The length of the statement  "	// the ID is not required by digital editions. Hence' the _id from the Sony reader is used (although it has a different format). " is 128.
Long Statement,AnnotationConverter,ExportToADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToADE.cs,ExportRow,The length of the statement  "		_writer.WriteElementString (_prefix' "title"' _namespaceUrl' "Seite " + exportRowParams.Page + "' " + exportRowParams.AddedDate.ToString ("U") + " UTC"); " is 153.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,PrepareTarget,The length of the statement  "	throw new NotSupportedException ("'PrepareTarget(string targetFile)' is not supported by ExportToMantano.\nUse 'PrepareTarget(long bookID)' instead"); " is 150.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,BuildTargetBookList,The length of the statement  "			CommandText = "SELECT id' title' file_metadata\r\n" + "FROM Document\r\n" + "WHERE title IS NOT NULL\r\n" + "ORDER BY title" " is 124.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,BuildTargetBookList,The length of the statement  "				liBooksContent.Add (new Tuple<long' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " " + authors)); " is 128.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,ExportRow,The length of the statement  "		MessageBox.Show (string.Format ("Record {0} has been skipped due to empty parameters (StrMark' StrMarkEnd or Page)."' record)' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 184.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,ExportRow,The length of the statement  "	cmd.Parameters.AddWithValue ("@content"' exportRowParams.StrName != exportRowParams.StrMarkedText && !exportRowParams.IsBookmark ? exportRowParams.StrName : (object)DBNull.Value); " is 179.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,CompareRow,The length of the statement  "	cmd.CommandText = "WITH notes AS (SELECT * FROM note WHERE fk_document_id = @fk_document_id)" + "\r\nSELECT CASE" + "\r\n    WHEN NOT EXISTS ( SELECT 1 FROM notes WHERE start_pos = @start_pos OR end_pos = @end_pos )" + "\r\n     THEN 1  -- no match -> INSERT (taken first because it is the most likely case)" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos = @start_pos AND end_pos = @end_pos AND IFNULL(content''') = IFNULL(@content''') AND @kind = kind AND @content_type = content_type )" + "\r\n     THEN 0 -- identical -> SKIP" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos = @start_pos AND end_pos = @end_pos AND (IFNULL(content''') <> IFNULL(@content''') OR @kind <> kind OR @content_type <> content_type ) AND last_edit <= @last_edit)" + "\r\n     THEN 2 -- match' content not empty and not older -> UPDATE' both pos identical" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos = @start_pos AND end_pos = @end_pos)" + "\r\n     THEN 0 -- match' content empty or older -> SKIP" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos = @start_pos AND end_pos <> @end_pos AND last_edit >= @last_edit)" + "\r\n     THEN 0 -- partial match' source older -> SKIP" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos <> @start_pos AND end_pos = @end_pos AND last_edit >= @last_edit)" + "\r\n     THEN 0 -- partial match' source older -> SKIP" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos = @start_pos AND end_pos = @end_pos AND last_edit >= @last_edit)" + "\r\n     THEN 0 -- partial match' source older -> SKIP" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos = @start_pos AND end_pos <> @end_pos AND last_edit < @last_edit)" + "\r\n     THEN 3 -- partial match' source newer -> UPDATE' start identical" + "\r\n    WHEN EXISTS ( SELECT 1 FROM notes WHERE start_pos <> @start_pos AND end_pos = @end_pos AND last_edit < @last_edit)" + "\r\n     THEN 4 -- partial match' source newer -> UPDATE' end identical" + "\r\n    ELSE 9  -- unexpected case -> ERROR" + "\r\n  END"; " is 2053.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,InsertRow,The length of the statement  "	cmd.CommandText = "INSERT INTO note ( title" + "' created" + "' last_access" + "' last_edit" + "' kind" + "' content_type" + "' background_type" + "' start_pos" + "' end_pos" + "' text_snippet" + "' color" + "' highlight_style" + "' page_num" + "' content" + "' fk_document_id)" + " VALUES ( @title" + "' @created" + "' @last_access" + "' @last_edit" + "' @kind" + "' @content_type" + "' @background_type" + "' @start_pos" + "' @end_pos" + "' @text_snippet" + "' @color" + "' @highlight_style" + "' @page_num" + "' @content" + "' @fk_document_id )"; " is 549.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,InsertRow,The length of the statement  "		MessageBox.Show (string.Format ("Record {0} has been skipped due to the following error:\r\n{1}."' record' ex.Message)' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 177.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,UpdateRowBothIdentical,The length of the statement  "	cmd.CommandText = ("UPDATE note" + "\r\nSET created = @created" + "\r\n'    last_access = @last_access" + "\r\n'    last_edit = @last_edit" + "\r\n'    kind = @kind" + "\r\n'    content_type = @content_type" + "\r\n'    background_type = @background_type" + "\r\n'    start_pos = @start_pos" + "\r\n'    end_pos = @end_pos" + "\r\n'    text_snippet = @text_snippet" + "\r\n'    color = @color" + "\r\n'    highlight_style = @highlight_style" + "\r\n'    page_num = @page_num" + "\r\n'    content = @content" + "\r\nWHERE fk_document_id = @fk_document_id AND start_pos = @start_pos AND end_pos = @end_pos AND (IFNULL(content''') <> IFNULL(@content''') OR @kind <> kind OR @content_type <> content_type ) AND last_edit <= @last_edit"); " is 733.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,UpdateRowBothIdentical,The length of the statement  "		MessageBox.Show (string.Format ("Record {0} has been skipped due to the following error:\r\n{1}."' record' ex.Message)' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 177.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,UpdateRowStartPosIdentical,The length of the statement  "	cmd.CommandText = ("UPDATE note" + "\r\nSET created = @created" + "\r\n'    last_access = @last_access" + "\r\n'    last_edit = @last_edit" + "\r\n'    kind = @kind" + "\r\n'    content_type = @content_type" + "\r\n'    background_type = @background_type" + "\r\n'    start_pos = @start_pos" + "\r\n'    end_pos = @end_pos" + "\r\n'    text_snippet = @text_snippet" + "\r\n'    color = @color" + "\r\n'    highlight_style = @highlight_style" + "\r\n'    page_num = @page_num" + "\r\n'    content = @content" + "\r\nWHERE start_pos = @start_pos AND end_pos <> @end_pos AND last_edit < @last_edit"); " is 597.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,UpdateRowStartPosIdentical,The length of the statement  "		MessageBox.Show (string.Format ("Record {0} has been skipped due to the following error:\r\n{1}."' record' ex.Message)' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 177.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,UpdateRowEndPosIdentical,The length of the statement  "	cmd.CommandText = ("UPDATE note" + "\r\nSET created = @created" + "\r\n'    last_access = @last_access" + "\r\n'    last_edit = @last_edit" + "\r\n'    kind = @kind" + "\r\n'    content_type = @content_type" + "\r\n'    background_type = @background_type" + "\r\n'    start_pos = @start_pos" + "\r\n'    end_pos = @end_pos" + "\r\n'    text_snippet = @text_snippet" + "\r\n'    color = @color" + "\r\n'    highlight_style = @highlight_style" + "\r\n'    page_num = @page_num" + "\r\n'    content = @content" + "\r\nWHERE start_pos <> @start_pos AND end_pos = @end_pos AND last_edit < @last_edit"); " is 597.
Long Statement,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,UpdateRowEndPosIdentical,The length of the statement  "		MessageBox.Show (string.Format ("Record {0} has been skipped due to the following error:\r\n{1}."' record' ex.Message)' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 177.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The length of the statement  "		cmdBooks.CommandText = "SELECT A._id AS content_id' A.title' A.author' A.file_name FROM books A\r\n" + "WHERE mime_type = 'application/epub+zip'\r\n" + "AND (   EXISTS ( SELECT 1 FROM annotation B WHERE B.content_id = A._id)\r\n" + "    OR  EXISTS ( SELECT 1 FROM bookmark B WHERE B.content_id = A._id)   )"; " is 308.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The length of the statement  "				liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3])); " is 174.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The length of the statement  "				// System.Windows.Forms.MessageBox.Show(String.Format ("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2])); " is 135.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,GetTotalCountOfAnnotations,The length of the statement  "		_contentFilter = HasOutsourcedAnnotations ? " IN (" + ContentID.ToString () + "' " + (ContentID + 100000).ToString () + ")" : " = " + ContentID.ToString (); " is 156.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadAnnotations,The length of the statement  "		//_contentFilter = HasOutsourcedAnnotations ? " IN (" + ContentID.ToString() + "' " + (ContentID + 100000).ToString() + ")" : " = " + ContentID.ToString(); " is 155.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadAnnotations,The length of the statement  "		cmdAnnotations.CommandText = "SELECT _id' markup_type' added_date' modified_date' name' marked_text' mark' mark_end' page FROM annotation WHERE content_id " + _contentFilter; " is 174.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadBookmarks,The length of the statement  "		cmdBookmarks.CommandText = "SELECT _id' markup_type' added_date' modified_date' name' marked_text' mark' mark_end' page FROM bookmark WHERE content_id " + _contentFilter; " is 170.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The length of the statement  "		// especially bookmarks of markup type 1 sometimes have no blobMarkEnd --> workarround should at least work for ADE' which uses identical start and end coordinates for bookmarks " is 177.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The length of the statement  "	// decodes all the bytes in the specified byte array into a string. The last one is skipped as it is some unknown sign causing Mantano to fail reading the note. " is 160.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The length of the statement  "	// round digits >= 0.25 up to the next integer (unclear where the threshold for Digital editions really is. It is between .0074 and .309 " is 136.
Long Statement,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The length of the statement  "	expParams.Page = ((int)(((double)row [8]) % 1 >= .25 ? Math.Floor ((double)row [8]) + 1F : Math.Floor ((double)row [8]))).ToString (); " is 134.
Long Statement,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,VerifyDb,The length of the statement  "			CommandText = string.Format ("SELECT COUNT(*) FROM sqlite_master WHERE type='table' AND name IN ('{0}'''{1}'''{2}')"' table1' table2' table3) " is 141.
Long Statement,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,VerifyDb,The length of the statement  "		throw new InvalidDataException (string.Format ("The chosen database does not match the expected signature." + "\r\nAt least one of the following tables is missing in the indicated database:" + "\r\n'{0}'' '{1}'' '{2}'"' table1' table2' table3)); " is 245.
Magic Number,AnnotationConverter,FrmChooseReaders,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ChooseReaders.cs,AddRadioButtons,The following statement contains a magic number: foreach (KeyValuePair<Utils.EReader' string> pair in readers) {  	var rdb = new RadioButton {  		Name = "rdb" + pair.Value'  		Text = pair.Value'  		Tag = pair.Key'  		Location = new Point (20' vPos)'  		AutoSize = true  	};  	rdb.CheckedChanged += new System.EventHandler (this.radioButton_CheckedChanged);  	targetBox.Controls.Add (rdb);  	rdb.Checked = (i == 0);  	vPos += 20;  	i++;  }  
Magic Number,AnnotationConverter,FrmChooseReaders,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ChooseReaders.cs,AddRadioButtons,The following statement contains a magic number: foreach (KeyValuePair<Utils.EReader' string> pair in readers) {  	var rdb = new RadioButton {  		Name = "rdb" + pair.Value'  		Text = pair.Value'  		Tag = pair.Key'  		Location = new Point (20' vPos)'  		AutoSize = true  	};  	rdb.CheckedChanged += new System.EventHandler (this.radioButton_CheckedChanged);  	targetBox.Controls.Add (rdb);  	rdb.Checked = (i == 0);  	vPos += 20;  	i++;  }  
Magic Number,AnnotationConverter,FrmChooseReaders,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ChooseReaders.cs,AddRadioButtons,The following statement contains a magic number: vPos += 20;  
Magic Number,AnnotationConverter,FrmChooseReaders,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ChooseReaders.cs,ChooseReaders_Load,The following statement contains a magic number: gbImport.Height = gbExport.Height = radioHeight + 30;  
Magic Number,AnnotationConverter,FrmChooseReaders,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ChooseReaders.cs,ChooseReaders_Load,The following statement contains a magic number: this.Height = radioHeight + 140;  
Magic Number,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,bgWorker_DoWork,The following statement contains a magic number: bgw.ReportProgress (100);  
Magic Number,AnnotationConverter,ConverterGuiADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiADE.cs,bgWorker_DoWork,The following statement contains a magic number: e.Result = 100;  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diAnnotationTypes = new Dictionary<int' string> {  	{  		0'  		"highlight"  	}'  	{  		1'  		"underline"  	}'  	{  		2'  		"strikethrough"  	}'  	{  		3'  		"vertical bar in margin"  	}  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diAnnotationTypes = new Dictionary<int' string> {  	{  		0'  		"highlight"  	}'  	{  		1'  		"underline"  	}'  	{  		2'  		"strikethrough"  	}'  	{  		3'  		"vertical bar in margin"  	}  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diHighlightColors = new Dictionary<int' string> {  	{  		-131216'  		"yellow"  	}'  	{  		-5177488'  		"light green"  	}'  	{  		-9379841'  		"cyan"  	}'  	{  		-26923'  		"magenta"  	}'  	{  		-84410'  		"orange"  	}'  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diHighlightColors = new Dictionary<int' string> {  	{  		-131216'  		"yellow"  	}'  	{  		-5177488'  		"light green"  	}'  	{  		-9379841'  		"cyan"  	}'  	{  		-26923'  		"magenta"  	}'  	{  		-84410'  		"orange"  	}'  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diHighlightColors = new Dictionary<int' string> {  	{  		-131216'  		"yellow"  	}'  	{  		-5177488'  		"light green"  	}'  	{  		-9379841'  		"cyan"  	}'  	{  		-26923'  		"magenta"  	}'  	{  		-84410'  		"orange"  	}'  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diHighlightColors = new Dictionary<int' string> {  	{  		-131216'  		"yellow"  	}'  	{  		-5177488'  		"light green"  	}'  	{  		-9379841'  		"cyan"  	}'  	{  		-26923'  		"magenta"  	}'  	{  		-84410'  		"orange"  	}'  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diHighlightColors = new Dictionary<int' string> {  	{  		-131216'  		"yellow"  	}'  	{  		-5177488'  		"light green"  	}'  	{  		-9379841'  		"cyan"  	}'  	{  		-26923'  		"magenta"  	}'  	{  		-84410'  		"orange"  	}'  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diUnderlineColors = new Dictionary<int' string> {  	{  		-16761601'  		"blue"  	}'  	{  		-2226104'  		"red"  	}'  	{  		-16468926'  		"green"  	}'  	{  		-16777216'  		"black"  	}  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diUnderlineColors = new Dictionary<int' string> {  	{  		-16761601'  		"blue"  	}'  	{  		-2226104'  		"red"  	}'  	{  		-16468926'  		"green"  	}'  	{  		-16777216'  		"black"  	}  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diUnderlineColors = new Dictionary<int' string> {  	{  		-16761601'  		"blue"  	}'  	{  		-2226104'  		"red"  	}'  	{  		-16468926'  		"green"  	}'  	{  		-16777216'  		"black"  	}  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,ConverterGUIMantano_Load,The following statement contains a magic number: _diUnderlineColors = new Dictionary<int' string> {  	{  		-16761601'  		"blue"  	}'  	{  		-2226104'  		"red"  	}'  	{  		-16468926'  		"green"  	}'  	{  		-16777216'  		"black"  	}  };  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,bgWorker_DoWork,The following statement contains a magic number: bgw.ReportProgress (100);  
Magic Number,AnnotationConverter,ConverterGuiMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ConverterGuiMantano.cs,bgWorker_DoWork,The following statement contains a magic number: e.Result = 100;  
Magic Number,AnnotationConverter,ExportToADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToADE.cs,ExportRow,The following statement contains a magic number: if (exportRowParams.MarkupType > 10)// highlight with note -> make it visible   {  	_writer.WriteAttributeString ("isvisible"' "true");  }  
Magic Number,AnnotationConverter,ExportToADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToADE.cs,ExportRow,The following statement contains a magic number: if (exportRowParams.MarkupType < 2) {  	_writer.WriteAttributeString ("end"' exportRowParams.StrMark);  }  else {  	_writer.WriteAttributeString ("end"' exportRowParams.StrMarkEnd);  }  
Magic Number,AnnotationConverter,ExportToADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToADE.cs,ExportRow,The following statement contains a magic number: if (exportRowParams.MarkupType < 2) {  	_writer.WriteElementString ("text"' "");  }  else {  	_writer.WriteElementString ("text"' exportRowParams.StrMarkedText);  }  
Magic Number,AnnotationConverter,ExportToADE,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToADE.cs,ExportRow,The following statement contains a magic number: if (exportRowParams.MarkupType > 10) {  	_writer.WriteElementString (_prefix' "date"' _namespaceUrl' exportRowParams.AddedDate.ToString ("s") + "-00:00");  	_writer.WriteElementString ("text"' exportRowParams.StrName);  }  else {  	_writer.WriteElementString (_prefix' "date"' _namespaceUrl' null);  	_writer.WriteStartElement ("text");  	_writer.WriteEndElement ();  }  
Magic Number,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,BuildTargetBookList,The following statement contains a magic number: using (var connection = ProvideConnection ()) {  	var cmdBooks = new SQLiteCommand (connection) {  		CommandText = "SELECT id' title' file_metadata\r\n" + "FROM Document\r\n" + "WHERE title IS NOT NULL\r\n" + "ORDER BY title"  	};  	using (var reader = cmdBooks.ExecuteReader ()) {  		string authors;  		while (reader.Read ()) {  			authors = Helpers.Utils.GetAuthors (reader [2].ToString ());  			liBooksContent.Add (new Tuple<long' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " " + authors));  		}  	}  	cmdBooks.Dispose ();  }  
Magic Number,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,BuildTargetBookList,The following statement contains a magic number: using (var reader = cmdBooks.ExecuteReader ()) {  	string authors;  	while (reader.Read ()) {  		authors = Helpers.Utils.GetAuthors (reader [2].ToString ());  		liBooksContent.Add (new Tuple<long' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " " + authors));  	}  }  
Magic Number,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,BuildTargetBookList,The following statement contains a magic number: while (reader.Read ()) {  	authors = Helpers.Utils.GetAuthors (reader [2].ToString ());  	liBooksContent.Add (new Tuple<long' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " " + authors));  }  
Magic Number,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,BuildTargetBookList,The following statement contains a magic number: authors = Helpers.Utils.GetAuthors (reader [2].ToString ());  
Magic Number,AnnotationConverter,ExportToMantano,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ExportToMantano.cs,ExportRow,The following statement contains a magic number: switch (exportRowParams.MarkupType) // content_type' 0: w/o comment or bookmark'  1: w/ comment' 2: drawing  {  case 1:  	// bookmark with comment  	cmd.Parameters.AddWithValue ("@content_type"' 0);  	break;  case 11:  	// annotation with comment  	cmd.Parameters.AddWithValue ("@content_type"' 1);  	break;  default:  	// 0: bookmark w/o comment' 10: annotation w/o comment  	cmd.Parameters.AddWithValue ("@content_type"' 0);  	break;  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: using (var connection = (SQLiteConnection)ProvideConnection ()) {  	var cmdBooks = new SQLiteCommand (connection);  	cmdBooks.CommandText = "SELECT A._id AS content_id' A.title' A.author' A.file_name FROM books A\r\n" + "WHERE mime_type = 'application/epub+zip'\r\n" + "AND (   EXISTS ( SELECT 1 FROM annotation B WHERE B.content_id = A._id)\r\n" + "    OR  EXISTS ( SELECT 1 FROM bookmark B WHERE B.content_id = A._id)   )";  	using (var reader = cmdBooks.ExecuteReader ()) {  		while (reader.Read ()) {  			//  Console.WriteLine("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]);  			liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  			// System.Windows.Forms.MessageBox.Show(String.Format ("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]));  		}  	}  	cmdBooks.Dispose ();  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: using (var connection = (SQLiteConnection)ProvideConnection ()) {  	var cmdBooks = new SQLiteCommand (connection);  	cmdBooks.CommandText = "SELECT A._id AS content_id' A.title' A.author' A.file_name FROM books A\r\n" + "WHERE mime_type = 'application/epub+zip'\r\n" + "AND (   EXISTS ( SELECT 1 FROM annotation B WHERE B.content_id = A._id)\r\n" + "    OR  EXISTS ( SELECT 1 FROM bookmark B WHERE B.content_id = A._id)   )";  	using (var reader = cmdBooks.ExecuteReader ()) {  		while (reader.Read ()) {  			//  Console.WriteLine("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]);  			liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  			// System.Windows.Forms.MessageBox.Show(String.Format ("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]));  		}  	}  	cmdBooks.Dispose ();  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: using (var reader = cmdBooks.ExecuteReader ()) {  	while (reader.Read ()) {  		//  Console.WriteLine("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]);  		liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  		// System.Windows.Forms.MessageBox.Show(String.Format ("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]));  	}  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: using (var reader = cmdBooks.ExecuteReader ()) {  	while (reader.Read ()) {  		//  Console.WriteLine("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]);  		liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  		// System.Windows.Forms.MessageBox.Show(String.Format ("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]));  	}  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: while (reader.Read ()) {  	//  Console.WriteLine("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]);  	liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  	// System.Windows.Forms.MessageBox.Show(String.Format ("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]));  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: while (reader.Read ()) {  	//  Console.WriteLine("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]);  	liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  	// System.Windows.Forms.MessageBox.Show(String.Format ("{0}\t\t{1}\t\t{2}"' (long)_reader[0]' (string)_reader[1]' (string)_reader[2]));  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,BuildBookList,The following statement contains a magic number: liBooksContent.Add (new Tuple<long' string' string' string> ((long)reader [0]' (string)reader [1]' (string)reader [1] + " [" + (string)reader [2] + "]"' (string)reader [3]));  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,GetTotalCountOfAnnotations,The following statement contains a magic number: using (var connection = (SQLiteConnection)ProvideConnection ()) {  	var cmdCount = new SQLiteCommand (connection);  	_contentFilter = HasOutsourcedAnnotations ? " IN (" + ContentID.ToString () + "' " + (ContentID + 100000).ToString () + ")" : " = " + ContentID.ToString ();  	cmdCount.CommandText = "SELECT COUNT(*) AS number FROM annotation WHERE content_id " + _contentFilter;  	TotalCount = (int)(long)cmdCount.ExecuteScalar ();  	cmdCount.CommandText = "SELECT COUNT(*) AS number FROM bookmark WHERE content_id " + _contentFilter;  	TotalCount += (int)(long)cmdCount.ExecuteScalar ();  	cmdCount.Dispose ();  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,GetTotalCountOfAnnotations,The following statement contains a magic number: _contentFilter = HasOutsourcedAnnotations ? " IN (" + ContentID.ToString () + "' " + (ContentID + 100000).ToString () + ")" : " = " + ContentID.ToString ();  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadAnnotations,The following statement contains a magic number: using (var connection = (SQLiteConnection)ProvideConnection ()) {  	var cmdAnnotations = new SQLiteCommand (connection);  	//_contentFilter = HasOutsourcedAnnotations ? " IN (" + ContentID.ToString() + "' " + (ContentID + 100000).ToString() + ")" : " = " + ContentID.ToString();  	cmdAnnotations.CommandText = "SELECT _id' markup_type' added_date' modified_date' name' marked_text' mark' mark_end' page FROM annotation WHERE content_id " + _contentFilter;  	// +" LIMIT 10";  	using (var reader = cmdAnnotations.ExecuteReader ()) {  		while (reader.Read ()) {  			ConsumeAnnotationRow (reader' false);  			CountAnnotations++;  			var e = new ProgressChangedEventArgs (100 * (CountAnnotations + CountBookmarks) / TotalCount' null);  			OnProgressChanged (e);  		}  	}  	cmdAnnotations.Dispose ();  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadAnnotations,The following statement contains a magic number: using (var reader = cmdAnnotations.ExecuteReader ()) {  	while (reader.Read ()) {  		ConsumeAnnotationRow (reader' false);  		CountAnnotations++;  		var e = new ProgressChangedEventArgs (100 * (CountAnnotations + CountBookmarks) / TotalCount' null);  		OnProgressChanged (e);  	}  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadAnnotations,The following statement contains a magic number: while (reader.Read ()) {  	ConsumeAnnotationRow (reader' false);  	CountAnnotations++;  	var e = new ProgressChangedEventArgs (100 * (CountAnnotations + CountBookmarks) / TotalCount' null);  	OnProgressChanged (e);  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadBookmarks,The following statement contains a magic number: using (var connection = (SQLiteConnection)ProvideConnection ()) {  	var cmdBookmarks = new SQLiteCommand (connection);  	cmdBookmarks.CommandText = "SELECT _id' markup_type' added_date' modified_date' name' marked_text' mark' mark_end' page FROM bookmark WHERE content_id " + _contentFilter;  	using (var reader = cmdBookmarks.ExecuteReader ()) {  		while (reader.Read ()) {  			ConsumeAnnotationRow (reader' true);  			CountBookmarks++;  			var e = new ProgressChangedEventArgs (100 * (CountAnnotations + CountBookmarks) / TotalCount' null);  			OnProgressChanged (e);  		}  	}  	cmdBookmarks.Dispose ();  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadBookmarks,The following statement contains a magic number: using (var reader = cmdBookmarks.ExecuteReader ()) {  	while (reader.Read ()) {  		ConsumeAnnotationRow (reader' true);  		CountBookmarks++;  		var e = new ProgressChangedEventArgs (100 * (CountAnnotations + CountBookmarks) / TotalCount' null);  		OnProgressChanged (e);  	}  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ReadBookmarks,The following statement contains a magic number: while (reader.Read ()) {  	ConsumeAnnotationRow (reader' true);  	CountBookmarks++;  	var e = new ProgressChangedEventArgs (100 * (CountAnnotations + CountBookmarks) / TotalCount' null);  	OnProgressChanged (e);  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.StrName = (string)row [4];  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.StrMarkedText = (string)row [5];  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: _blobMark = (Byte[])(row [6]);  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: if (row [7] == DBNull.Value) {  	_blobMarkEnd = (Byte[])(row [6]);  	// especially bookmarks of markup type 1 sometimes have no blobMarkEnd --> workarround should at least work for ADE' which uses identical start and end coordinates for bookmarks  }  else {  	_blobMarkEnd = (Byte[])(row [7]);  	// mark_end' BLOB  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: if (row [7] == DBNull.Value) {  	_blobMarkEnd = (Byte[])(row [6]);  	// especially bookmarks of markup type 1 sometimes have no blobMarkEnd --> workarround should at least work for ADE' which uses identical start and end coordinates for bookmarks  }  else {  	_blobMarkEnd = (Byte[])(row [7]);  	// mark_end' BLOB  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: if (row [7] == DBNull.Value) {  	_blobMarkEnd = (Byte[])(row [6]);  	// especially bookmarks of markup type 1 sometimes have no blobMarkEnd --> workarround should at least work for ADE' which uses identical start and end coordinates for bookmarks  }  else {  	_blobMarkEnd = (Byte[])(row [7]);  	// mark_end' BLOB  }  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: _blobMarkEnd = (Byte[])(row [6]);  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: _blobMarkEnd = (Byte[])(row [7]);  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.Page = ((int)(((double)row [8]) % 1 >= .25 ? Math.Floor ((double)row [8]) + 1F : Math.Floor ((double)row [8]))).ToString ();  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.Page = ((int)(((double)row [8]) % 1 >= .25 ? Math.Floor ((double)row [8]) + 1F : Math.Floor ((double)row [8]))).ToString ();  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.Page = ((int)(((double)row [8]) % 1 >= .25 ? Math.Floor ((double)row [8]) + 1F : Math.Floor ((double)row [8]))).ToString ();  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.Page = ((int)(((double)row [8]) % 1 >= .25 ? Math.Floor ((double)row [8]) + 1F : Math.Floor ((double)row [8]))).ToString ();  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.AddedDate = Helpers.Utils.ConvertUnixToDateTime ((long)row [2]);  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.ModifiedDate = Helpers.Utils.ConvertUnixToDateTime ((long)(row [3] == DBNull.Value ? row [2] : row [3]));  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.ModifiedDate = Helpers.Utils.ConvertUnixToDateTime ((long)(row [3] == DBNull.Value ? row [2] : row [3]));  
Magic Number,AnnotationConverter,ImportFromSonyPRST,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\ImportFromSonyPRST.cs,ConsumeAnnotationRow,The following statement contains a magic number: expParams.ModifiedDate = Helpers.Utils.ConvertUnixToDateTime ((long)(row [3] == DBNull.Value ? row [2] : row [3]));  
Magic Number,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,GetAuthors,The following statement contains a magic number: if (i1 > -1 && i2 > i1) {  	return (metadata.Substring (i1 + 9' i2 - i1 - 7)).Replace (@"""'"""' "; ").Replace ("\""' "");  }  
Magic Number,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,GetAuthors,The following statement contains a magic number: if (i1 > -1 && i2 > i1) {  	return (metadata.Substring (i1 + 9' i2 - i1 - 7)).Replace (@"""'"""' "; ").Replace ("\""' "");  }  
Magic Number,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,GetAuthors,The following statement contains a magic number: return (metadata.Substring (i1 + 9' i2 - i1 - 7)).Replace (@"""'"""' "; ").Replace ("\""' "");  
Magic Number,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,GetAuthors,The following statement contains a magic number: return (metadata.Substring (i1 + 9' i2 - i1 - 7)).Replace (@"""'"""' "; ").Replace ("\""' "");  
Magic Number,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,VerifyDb,The following statement contains a magic number: using (var connection = (SQLiteConnection)provideConnection ()) {  	var cmdVerifyDb = new SQLiteCommand (connection) {  		CommandText = string.Format ("SELECT COUNT(*) FROM sqlite_master WHERE type='table' AND name IN ('{0}'''{1}'''{2}')"' table1' table2' table3)  	};  	dBvalid = (long)cmdVerifyDb.ExecuteScalar () == 3;  }  
Magic Number,AnnotationConverter.Helpers,Utils,C:\repos\spitfireCH_AnnotationConverter\AnnotationConverter\Utils.cs,VerifyDb,The following statement contains a magic number: dBvalid = (long)cmdVerifyDb.ExecuteScalar () == 3;  
