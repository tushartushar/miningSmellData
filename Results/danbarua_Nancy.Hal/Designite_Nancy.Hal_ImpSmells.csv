Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Nancy.Hal.Processors,HalJsonResponseProcessor,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Processors\HalJsonResponseProcessor.cs,BuildHypermedia,Cyclomatic complexity of the method is 8
Long Statement,Nancy.Hal.Configuration,HalTypeConfiguration<T>,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Configuration\HalTypeConfiguration.cs,Embeds,The length of the statement  "            return AddEmbeds(model => predicate(model) ? new EmbeddedResourceInfo<T>(propName.ToCamelCase()' propName' property.Compile()) : null); " is 135.
Long Statement,Nancy.Hal.Configuration,HalTypeConfiguration<T>,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Configuration\HalTypeConfiguration.cs,Embeds,The length of the statement  "            return AddEmbeds((model' ctx) => predicate(model' ctx) ? new EmbeddedResourceInfo<T>(propName.ToCamelCase()' propName' property.Compile()) : null); " is 147.
Long Statement,Nancy.Hal.Configuration,HalTypeConfiguration<T>,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Configuration\HalTypeConfiguration.cs,Embeds,The length of the statement  "            return AddEmbeds(model => predicate(model) ? new EmbeddedResourceInfo<T>(rel' property.ExtractPropertyInfo().Name' property.Compile()) : null); " is 143.
Long Statement,Nancy.Hal.Configuration,HalTypeConfiguration<T>,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Configuration\HalTypeConfiguration.cs,Embeds,The length of the statement  "            return AddEmbeds((model' ctx) => predicate(model' ctx) ? new EmbeddedResourceInfo<T>(rel' property.ExtractPropertyInfo().Name' property.Compile()) : null); " is 155.
Long Statement,Nancy.Hal.Configuration,HalTypeConfiguration<T>,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Configuration\HalTypeConfiguration.cs,Projects,The length of the statement  "            return AddEmbeds(new EmbeddedResourceInfo<T>(rel' property.ExtractPropertyInfo().Name' model => projection(getter(model)))); " is 124.
Long Statement,Nancy.Hal.Processors,HalJsonResponseProcessor,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Processors\HalJsonResponseProcessor.cs,BuildHypermedia,The length of the statement  "            var typeConfig = new AggregatingHalTypeConfiguration(new List<IHalTypeConfiguration> { globalTypeConfig' localTypeConfig }); " is 124.
Long Statement,Nancy.Hal.Processors,HalJsonResponseProcessor,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\Processors\HalJsonResponseProcessor.cs,BuildHypermedia,The length of the statement  "                halModel["_embedded"] = embeddedResources.ToDictionary(info => info.Rel' info => BuildHypermedia(info.GetEmbeddedResource(model)' context)); " is 140.
Complex Conditional,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,ProcessVariable,The conditional expression  "!this._Parameters.ContainsKey(varname)                  || this._Parameters[varname] == null                  || (this._Parameters[varname] is IList && ((IList)this._Parameters[varname]).Count == 0)                  || (this._Parameters[varname] is IDictionary && ((IDictionary)this._Parameters[varname]).Count == 0)"  is complex.
Complex Conditional,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,Encode,The conditional expression  "(c >= 'A' && c <= 'z') //Alpha                      || (c >= '0' && c <= '9') // Digit                      || _UriUnreservedSymbols.IndexOf(c) != -1                      // Unreserved symbols  - These should never be percent encoded                      || (allowReserved && _UriReservedSymbols.IndexOf(c) != -1)"  is complex.
Magic Number,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,HexEscape,The following statement contains a magic number: var esc = new char[3];
Magic Number,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,HexEscape,The following statement contains a magic number: esc[1] = HexDigits[(((int)c & 240) >> 4)];
Magic Number,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,HexEscape,The following statement contains a magic number: esc[1] = HexDigits[(((int)c & 240) >> 4)];
Magic Number,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,HexEscape,The following statement contains a magic number: esc[2] = HexDigits[((int)c & 15)];
Magic Number,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,HexEscape,The following statement contains a magic number: esc[2] = HexDigits[((int)c & 15)];
Missing Default,Nancy.Hal,UriTemplate,C:\repos\danbarua_Nancy.Hal\src\Nancy.Hal\UriTemplate.cs,Resolve,The following switch statement is missing a default case: switch (currentState)                  {                      case States.CopyingLiterals:                          if (character == '{')                          {                              currentState = States.ParsingExpression;                              currentExpression = new StringBuilder();                          }                          else if (character == '}')                          {                              throw new ArgumentException("Malformed template' unexpected } : " + this._Result.ToString());                          }                          else                          {                              this._Result.Append(character);                          }                          break;                      case States.ParsingExpression:                          if (character == '}')                          {                              this.ProcessExpression(currentExpression);                                currentState = States.CopyingLiterals;                          }                          else                          {                              currentExpression.Append(character);                          }                            break;                  }
