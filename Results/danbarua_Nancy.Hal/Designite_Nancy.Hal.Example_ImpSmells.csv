Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Nancy.Hal.Example,ExampleBootstrapper,D:\research\architectureSmells\repos\danbarua_Nancy.Hal\src\Nancy.Hal.Example\ExampleBootstrapper.cs,CreateTestDataIn,The length of the statement  "            db.CreateUser(new CreateUser {FullName = "Jonathon Channon"' UserName = "jonathon"' RoleId = createRole.Id.GetValueOrDefault()}); " is 129.
Long Statement,Nancy.Hal.Example,ExampleBootstrapper,D:\research\architectureSmells\repos\danbarua_Nancy.Hal\src\Nancy.Hal.Example\ExampleBootstrapper.cs,HypermediaConfiguration,The length of the statement  "                      LinkTemplates.Users.GetUsersPaged.CreateLink("Previous"' "prev"' ctx.Request.Query' new { page = model.PageNumber - 1 })' " is 121.
Magic Number,Nancy.Hal.Example,ExampleBootstrapper,D:\research\architectureSmells\repos\danbarua_Nancy.Hal\src\Nancy.Hal.Example\ExampleBootstrapper.cs,CreateTestDataIn,The following statement contains a magic number: var fixture = new Fixture {RepeatCount = 100};
Magic Number,Nancy.Hal.Example.Model.Users,RolesModule,D:\research\architectureSmells\repos\danbarua_Nancy.Hal\src\Nancy.Hal.Example\Model\Users\RolesModule.cs,RolesModule,The following statement contains a magic number: this.Get ("/{roleId:guid}"' _ => {                  var req = this.Bind<GetRoleDetails> ();                  var role = db.GetRoleById (req.RoleId);                    if (role == null) {                      return 404;                  }                    return Negotiate.WithModel (role);              });
Magic Number,Nancy.Hal.Example.Model.Users,UsersModule,D:\research\architectureSmells\repos\danbarua_Nancy.Hal\src\Nancy.Hal.Example\Model\Users\UsersModule.cs,UsersModule,The following statement contains a magic number: this.Get ("/{userId:guid}"' _ => {                  var request = this.Bind<GetUserDetails> ();                  var user = db.GetUserById (request.UserId);                  if (user == null) {                      return 404;                  }                    return Negotiate.WithModel (user);              });
