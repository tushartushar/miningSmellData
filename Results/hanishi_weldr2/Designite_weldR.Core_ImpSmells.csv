Implementation smell,Namespace,Class,File,Method,Description
Complex Method,weldR.Core,PluginLoader,C:\repos\hanishi_weldr2\src\weldR.Core\PluginLoader.cs,Run,Cyclomatic complexity of the method is 10
Complex Method,weldR.Core,UserPluginService,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginService.cs,SessionChange,Cyclomatic complexity of the method is 10
Long Parameter List,weldR.Core,DynamicHubConnectorHost,C:\repos\hanishi_weldr2\src\weldR.Core\DynamicHubConnectorHost.cs,DynamicHubConnectorHost,The method has 6 parameters.
Long Parameter List,weldR.Core,DynamicHubHost,C:\repos\hanishi_weldr2\src\weldR.Core\DynamicHubHost.cs,DynamicHubHost,The method has 5 parameters.
Long Parameter List,weldR.Core,HubConnectionConfigurator,C:\repos\hanishi_weldr2\src\weldR.Core\HubConnectionConfigurator.cs,LoadHubConnectorsFromDir,The method has 6 parameters.
Long Parameter List,weldR.Core,UserPluginServiceLoader,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginServiceLoader.cs,SetUp,The method has 6 parameters.
Long Statement,weldR.Core,DefaultHubHost,C:\repos\hanishi_weldr2\src\weldR.Core\DefaultHubHost.cs,CreateDomain,The length of the statement  "	SignalRSelfHost = (SignalRSelfHost)SandBox.CreateInstanceAndUnwrap (typeof(SignalRSelfHost).Assembly.FullName' typeof(SignalRSelfHost).FullName); " is 145.
Long Statement,weldR.Core,HubConnectionConfigurator,C:\repos\hanishi_weldr2\src\weldR.Core\HubConnectionConfigurator.cs,GetDeclaredHubs,The length of the statement  "	where paramInfo.Length == 1 && paramInfo [0].ParameterType == typeof(IHubProxy) && (methodInfo.ReturnType == typeof(void) || methodInfo.ReturnType == typeof(Task)) " is 163.
Long Statement,weldR.Core,HubConnectionConfigurator,C:\repos\hanishi_weldr2\src\weldR.Core\HubConnectionConfigurator.cs,LoadHubConnectorsFromDir,The length of the statement  "	d.ToObservable (0).Where (info => (info.Attributes & FileAttributes.Directory) == 0 && info.Extension.Equals (".dll")).Subscribe (dll =>  { " is 139.
Long Statement,weldR.Core,HubConnectionConfigurator,C:\repos\hanishi_weldr2\src\weldR.Core\HubConnectionConfigurator.cs,LoadHubConnectorsFromDir,The length of the statement  "		GetObjectByInterface<IHubConnector> (asm).Where (HasDefaultConstructor).Select (Activator.CreateInstance).ToList ().ForEach (connector =>  { " is 140.
Long Statement,weldR.Core,PluginLoader,C:\repos\hanishi_weldr2\src\weldR.Core\PluginLoader.cs,StartAppDomainHosts,The length of the statement  "		connectorDir.ToObservable ().Where (info => (info.Attributes & FileAttributes.Hidden) == 0 && (info.Attributes & FileAttributes.Directory) == FileAttributes.Directory).Subscribe (info =>  { " is 189.
Long Statement,weldR.Core,PluginLoader,C:\repos\hanishi_weldr2\src\weldR.Core\PluginLoader.cs,Run,The length of the statement  "	// The following code won't get executed if the process is terminated prematurely such as when user is logging off or system is shutting down. " is 142.
Long Statement,weldR.Core,UserPluginServiceLoader,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginServiceLoader.cs,SetUp,The length of the statement  "	d.ToObservable (0).Where (info => (info.Attributes & FileAttributes.Directory) == 0 && info.Extension.Equals (".dll")).Subscribe (dll =>  { " is 139.
Long Statement,weldR.Core,UserPluginServiceLoader,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginServiceLoader.cs,SetUp,The length of the statement  "		serviceType = asm.GetTypes ().Where (x => x.IsSubclassOf (typeof(UserPluginService))).Where (HasDefaultConstructor).First (); " is 125.
Empty Catch Block,weldR.Core,PluginLoader,C:\repos\hanishi_weldr2\src\weldR.Core\PluginLoader.cs,Run,The method has an empty catch block.
Empty Catch Block,weldR.Core,UserPluginService,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginService.cs,Work,The method has an empty catch block.
Empty Catch Block,weldR.Core,UserPluginService,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginService.cs,OnNext,The method has an empty catch block.
Magic Number,weldR.Core,UserPluginService,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginService.cs,Resuscitate,The following statement contains a magic number: Thread.Sleep (5000);  
Missing Default,weldR.Core,UserPluginService,C:\repos\hanishi_weldr2\src\weldR.Core\UserPluginService.cs,SessionChange,The following switch statement is missing a default case: switch ((string)json ["Reason"]) {  case "SessionLogon":  	Logger.InfoFormat ("SessionLogon:{0}"' Thread.CurrentThread.ManagedThreadId);  	if (_task.IsCompleted)  		Funcs.Add (StartClient);  	break;  case "SessionLogoff":  	Logger.InfoFormat ("SessionLogoff:{0}"' Thread.CurrentThread.ManagedThreadId);  	lock (Lock) {  		Sessions.Remove (json ["SessionId"].Value<int> ());  	}  	break;  }  
