Implementation smell,Namespace,Class,File,Method,Description
Long Statement,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The length of the statement  "				RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>()) " is 131.
Empty Catch Block,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The method has an empty catch block.
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: proxy.On<string> ("OnSessionChange"' val =>  {  	Logger.DebugFormat ("Received->{0}"' val);  	SessionSwitchReason reaosn;  	if (Enum.TryParse (val' out reaosn))  		switch (reaosn) {  		case SessionSwitchReason.SessionLock:  			CTS = new CancellationTokenSource ();  			RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  			.Subscribe (value =>  {  				Logger.DebugFormat ("Mocking aspect:  {0}"' value);  				switch (value) {  				case 0:  					ProxyAction = TimeoutShutdown ();  					break;  				case 1:  					ProxyAction = CreateResponse (1);  					break;  				case 2:  					ProxyAction = CreateResponse (2);  					break;  				}  			});  			break;  		case SessionSwitchReason.SessionUnlock:  			try {  				CTS.Cancel ();  			}  			catch (ObjectDisposedException) {  			}  			break;  		}  });  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: proxy.On<string> ("OnSessionChange"' val =>  {  	Logger.DebugFormat ("Received->{0}"' val);  	SessionSwitchReason reaosn;  	if (Enum.TryParse (val' out reaosn))  		switch (reaosn) {  		case SessionSwitchReason.SessionLock:  			CTS = new CancellationTokenSource ();  			RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  			.Subscribe (value =>  {  				Logger.DebugFormat ("Mocking aspect:  {0}"' value);  				switch (value) {  				case 0:  					ProxyAction = TimeoutShutdown ();  					break;  				case 1:  					ProxyAction = CreateResponse (1);  					break;  				case 2:  					ProxyAction = CreateResponse (2);  					break;  				}  			});  			break;  		case SessionSwitchReason.SessionUnlock:  			try {  				CTS.Cancel ();  			}  			catch (ObjectDisposedException) {  			}  			break;  		}  });  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: if (Enum.TryParse (val' out reaosn))  	switch (reaosn) {  	case SessionSwitchReason.SessionLock:  		CTS = new CancellationTokenSource ();  		RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  		.Subscribe (value =>  {  			Logger.DebugFormat ("Mocking aspect:  {0}"' value);  			switch (value) {  			case 0:  				ProxyAction = TimeoutShutdown ();  				break;  			case 1:  				ProxyAction = CreateResponse (1);  				break;  			case 2:  				ProxyAction = CreateResponse (2);  				break;  			}  		});  		break;  	case SessionSwitchReason.SessionUnlock:  		try {  			CTS.Cancel ();  		}  		catch (ObjectDisposedException) {  		}  		break;  	}  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: if (Enum.TryParse (val' out reaosn))  	switch (reaosn) {  	case SessionSwitchReason.SessionLock:  		CTS = new CancellationTokenSource ();  		RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  		.Subscribe (value =>  {  			Logger.DebugFormat ("Mocking aspect:  {0}"' value);  			switch (value) {  			case 0:  				ProxyAction = TimeoutShutdown ();  				break;  			case 1:  				ProxyAction = CreateResponse (1);  				break;  			case 2:  				ProxyAction = CreateResponse (2);  				break;  			}  		});  		break;  	case SessionSwitchReason.SessionUnlock:  		try {  			CTS.Cancel ();  		}  		catch (ObjectDisposedException) {  		}  		break;  	}  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: switch (reaosn) {  case SessionSwitchReason.SessionLock:  	CTS = new CancellationTokenSource ();  	RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  	.Subscribe (value =>  {  		Logger.DebugFormat ("Mocking aspect:  {0}"' value);  		switch (value) {  		case 0:  			ProxyAction = TimeoutShutdown ();  			break;  		case 1:  			ProxyAction = CreateResponse (1);  			break;  		case 2:  			ProxyAction = CreateResponse (2);  			break;  		}  	});  	break;  case SessionSwitchReason.SessionUnlock:  	try {  		CTS.Cancel ();  	}  	catch (ObjectDisposedException) {  	}  	break;  }  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: switch (reaosn) {  case SessionSwitchReason.SessionLock:  	CTS = new CancellationTokenSource ();  	RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  	.Subscribe (value =>  {  		Logger.DebugFormat ("Mocking aspect:  {0}"' value);  		switch (value) {  		case 0:  			ProxyAction = TimeoutShutdown ();  			break;  		case 1:  			ProxyAction = CreateResponse (1);  			break;  		case 2:  			ProxyAction = CreateResponse (2);  			break;  		}  	});  	break;  case SessionSwitchReason.SessionUnlock:  	try {  		CTS.Cancel ();  	}  	catch (ObjectDisposedException) {  	}  	break;  }  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  .Subscribe (value =>  {  	Logger.DebugFormat ("Mocking aspect:  {0}"' value);  	switch (value) {  	case 0:  		ProxyAction = TimeoutShutdown ();  		break;  	case 1:  		ProxyAction = CreateResponse (1);  		break;  	case 2:  		ProxyAction = CreateResponse (2);  		break;  	}  });  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  .Subscribe (value =>  {  	Logger.DebugFormat ("Mocking aspect:  {0}"' value);  	switch (value) {  	case 0:  		ProxyAction = TimeoutShutdown ();  		break;  	case 1:  		ProxyAction = CreateResponse (1);  		break;  	case 2:  		ProxyAction = CreateResponse (2);  		break;  	}  });  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: switch (value) {  case 0:  	ProxyAction = TimeoutShutdown ();  	break;  case 1:  	ProxyAction = CreateResponse (1);  	break;  case 2:  	ProxyAction = CreateResponse (2);  	break;  }  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: switch (value) {  case 0:  	ProxyAction = TimeoutShutdown ();  	break;  case 1:  	ProxyAction = CreateResponse (1);  	break;  case 2:  	ProxyAction = CreateResponse (2);  	break;  }  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following statement contains a magic number: ProxyAction = CreateResponse (2);  
Magic Number,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Mock,The following statement contains a magic number: _dynamicSettings.SetDefault ("ResponseDelay"' 100);  
Missing Default,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following switch statement is missing a default case: switch (reaosn) {  case SessionSwitchReason.SessionLock:  	CTS = new CancellationTokenSource ();  	RegistryKeyObservable.Create<int> (RegistryKey' "Aspect"' new TimeSpan (0' 0' 0' 1)' CTS.Token)//.Catch(Observable.Empty<object>())  	.Subscribe (value =>  {  		Logger.DebugFormat ("Mocking aspect:  {0}"' value);  		switch (value) {  		case 0:  			ProxyAction = TimeoutShutdown ();  			break;  		case 1:  			ProxyAction = CreateResponse (1);  			break;  		case 2:  			ProxyAction = CreateResponse (2);  			break;  		}  	});  	break;  case SessionSwitchReason.SessionUnlock:  	try {  		CTS.Cancel ();  	}  	catch (ObjectDisposedException) {  	}  	break;  }  
Missing Default,weldR.Sample.SecureSuiteMock,Mock,C:\repos\hanishi_weldr2\src\weldR.Sample.SecureSuiteMock\weldRMockClient.cs,Control,The following switch statement is missing a default case: switch (value) {  case 0:  	ProxyAction = TimeoutShutdown ();  	break;  case 1:  	ProxyAction = CreateResponse (1);  	break;  case 2:  	ProxyAction = CreateResponse (2);  	break;  }  
