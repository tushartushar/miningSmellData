Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,weldR.Common.Rx,FileSystemInfoReactiveExtensions,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\FileSystemInfoReactiveExtensions.cs,ToObservable,The method has 7 parameters.
Long Parameter List,weldR.Common.Rx,PipeStreamObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\PipeStreamObservable.cs,Create,The method has 9 parameters.
Long Parameter List,weldR.Common.Rx,PipeStreamObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\PipeStreamObservable.cs,Create,The method has 10 parameters.
Long Parameter List,weldR.Common.Rx,RegistryKeyObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\RegistryKeyObservable.cs,CreateValueChangeObservable,The method has 8 parameters.
Long Parameter List,weldR.Common.Rx,RegistryKeyObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\RegistryKeyObservable.cs,ToObservable,The method has 8 parameters.
Long Parameter List,weldR.Common.Rx,UserLogonObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\UserLogonObservable.cs,CreateValueChangeObservable,The method has 5 parameters.
Long Parameter List,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,CreateProcessAsUser,The method has 11 parameters.
Long Parameter List,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,DuplicateTokenEx,The method has 6 parameters.
Long Statement,weldR.Common.Rx,PipeStreamObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\PipeStreamObservable.cs,Create,The length of the statement  "	stream = new NamedPipeServerStream (pipeName' PipeDirection.InOut' -1' PipeTransmissionMode.Byte' PipeOptions.Asynchronous' 4096' 4096' PipeSecurity); " is 150.
Long Statement,weldR.Common.Rx,PipeStreamObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\PipeStreamObservable.cs,Create,The length of the statement  "		return NewThreadScheduler.Default.Schedule (new FormatterIterator<T> (resource' new BinaryFormatter ()' onConnected)' (state' self) =>  { " is 137.
Long Statement,weldR.Common.Rx,PipeStreamObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\PipeStreamObservable.cs,Create,The length of the statement  "		return NewThreadScheduler.Default.Schedule (new FormatterIterator<T> (resource' new BinaryFormatter ()' onConnected)' (state' self) =>  { " is 137.
Long Statement,weldR.Common.Rx,RegistryKeyObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\RegistryKeyObservable.cs,ToObservable,The length of the statement  "		return NewThreadScheduler.Default.Schedule (self => currentStateSubscription.Disposable = CreateValueChangeObservable (registryKey' name' currentValue' timeSpan' token).Subscribe (value =>  { " is 191.
Long Statement,weldR.Common.Settings,DynamicSetting,C:\repos\hanishi_weldr2\src\weldR.Common\Settings\DynamicSetting.cs,TryInvokeMember,The length of the statement  "		result = ourType.InvokeMember (binder.Name' BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Instance' null' RawValue' args); " is 139.
Long Statement,weldR.Common.Settings,DynamicSettings,C:\repos\hanishi_weldr2\src\weldR.Common\Settings\DynamicSettings.cs,GetSettingFromRegistry,The length of the statement  "		if (key.GetValueNames ().Any (valueName => String.Compare (valueName' name' StringComparison.OrdinalIgnoreCase) == 0)) { " is 120.
Long Statement,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,StartProcess,The length of the statement  "	if (!DuplicateTokenEx (currentToken' (uint)ACCESS_MASK.GENERIC_ALL' ref sa' (int)SECURITY_IMPERSONATION_LEVEL.SecurityImpersonation' (int)TOKEN_TYPE.TokenImpersonation' ref newToken)) { " is 185.
Long Statement,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,StartProcess,The length of the statement  "	if (!CreateProcessAsUser (newToken' null' applicationName' ref sa' ref sa' true' (int)CreateProcessFlags.CREATE_NEW_CONSOLE | (int)CreateProcessFlags.INHERIT_CALLER_PRIORITY' IntPtr.Zero' null' ref si' out procInfo)) { " is 218.
Long Statement,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,StartProcessAndBypassUAC,The length of the statement  "	if (!DuplicateTokenEx (hPToken' MAXIMUM_ALLOWED' ref sa' (int)SECURITY_IMPERSONATION_LEVEL.SecurityIdentification' (int)TOKEN_TYPE.TokenPrimary' ref hUserTokenDup)) { " is 166.
Long Statement,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,StartProcessAndBypassUAC,The length of the statement  "	// interactive window station parameter; basically this indicates that the process created can display a GUI on the desktop " is 123.
Complex Conditional,weldR.Common.Rx,RegistryKeyObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\RegistryKeyObservable.cs,CreateValueChangeObservable,The conditional expression  "current == null && value != null || current != null && !current.Equals (value)"  is complex.
Empty Catch Block,weldR.Common.Util.FileTools,ExtendedFileSystemWatcher,C:\repos\hanishi_weldr2\src\weldR.Common\Util\FileTools\ExtendedFileSystemWatcher.cs,WatchForCompletedFiles,The method has an empty catch block.
Magic Number,weldR.Common.Rx,PipeStreamObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\PipeStreamObservable.cs,Create,The following statement contains a magic number: stream = new NamedPipeServerStream (pipeName' PipeDirection.InOut' -1' PipeTransmissionMode.Byte' PipeOptions.Asynchronous' 4096' 4096' PipeSecurity);  
Magic Number,weldR.Common.Rx,PipeStreamObservable,C:\repos\hanishi_weldr2\src\weldR.Common\Rx\PipeStreamObservable.cs,Create,The following statement contains a magic number: stream = new NamedPipeServerStream (pipeName' PipeDirection.InOut' -1' PipeTransmissionMode.Byte' PipeOptions.Asynchronous' 4096' 4096' PipeSecurity);  
Magic Number,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,StartProcess,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,StartProcessAndBypassUAC,The following statement contains a magic number: while (!breakOuter) {  	// obtain the process id of the winlogon process that is running within the currently active session  	Process[] processes = Process.GetProcessesByName ("explorer");  	foreach (Process p in processes) {  		if ((uint)p.SessionId == dwSessionId) {  			explorerPid = (uint)p.Id;  			Logger.InfoFormat ("explorer:{0}"' explorerPid);  			breakOuter = true;  		}  	}  	Thread.Sleep (1000);  }  
Magic Number,weldR.Common.Win32API,ApplicationLoader,C:\repos\hanishi_weldr2\src\weldR.Common\Win32API\ApplicationLoader.cs,StartProcessAndBypassUAC,The following statement contains a magic number: Thread.Sleep (1000);  
