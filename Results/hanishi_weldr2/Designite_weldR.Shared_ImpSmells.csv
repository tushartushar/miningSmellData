Implementation smell,Namespace,Class,File,Method,Description
Complex Method,weldR.Shared,Session,C:\repos\hanishi_weldr2\src\weldR.Shared\Session.cs,MarshalTaskResults,Cyclomatic complexity of the method is 10
Long Parameter List,weldR.Shared,Session,C:\repos\hanishi_weldr2\src\weldR.Shared\Session.cs,Suspend,The method has 5 parameters.
Long Statement,weldR.Shared,InvokeMemberBinderExtensions,C:\repos\hanishi_weldr2\src\weldR.Shared\InvokeMemberBinderExtensions.cs,CreateTypeArgumentsGetter,The length of the statement  "		var binderType = typeof(Microsoft.CSharp.RuntimeBinder.RuntimeBinderException).Assembly.GetType ("Microsoft.CSharp.RuntimeBinder.CSharpInvokeMemberBinder"); " is 156.
Long Statement,weldR.Shared,InvokeMemberBinderExtensions,C:\repos\hanishi_weldr2\src\weldR.Shared\InvokeMemberBinderExtensions.cs,CreateTypeArgumentsGetter,The length of the statement  "			return Expression.Lambda<Func<InvokeMemberBinder' IList<Type>>> (Expression.TypeAs (Expression.Field (Expression.TypeAs (param' binderType)' "typeArguments")' typeof(IList<Type>))' param).Compile (); " is 199.
Long Statement,weldR.Shared,InvokeMemberBinderExtensions,C:\repos\hanishi_weldr2\src\weldR.Shared\InvokeMemberBinderExtensions.cs,CreateTypeArgumentsGetter,The length of the statement  "		var inter = typeof(Microsoft.CSharp.RuntimeBinder.RuntimeBinderException).Assembly.GetType ("Microsoft.CSharp.RuntimeBinder.ICSharpInvokeOrInvokeMemberBinder"); " is 160.
Long Statement,weldR.Shared,InvokeMemberBinderExtensions,C:\repos\hanishi_weldr2\src\weldR.Shared\InvokeMemberBinderExtensions.cs,CreateTypeArgumentsGetter,The length of the statement  "			return Expression.Lambda<Func<InvokeMemberBinder' IList<Type>>> (Expression.TypeAs (Expression.Property (Expression.TypeAs (objParm' inter)' prop.Name)' typeof(IList<Type>))' objParm).Compile (); " is 195.
Long Statement,weldR.Shared,InvokeMemberBinderExtensions,C:\repos\hanishi_weldr2\src\weldR.Shared\InvokeMemberBinderExtensions.cs,GetGenericTypeArguments,The length of the statement  "		var field = binder.GetType ().GetField ("typeArguments"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static); " is 149.
Missing Default,weldR.Shared,Session,C:\repos\hanishi_weldr2\src\weldR.Shared\Session.cs,MarshalTaskResults,The following switch statement is missing a default case: switch (source.Status) {  case TaskStatus.Faulted:  	proxy.TrySetException (source.Exception);  	break;  case TaskStatus.Canceled:  	proxy.TrySetCanceled ();  	break;  case TaskStatus.RanToCompletion:  	var casted = source as Task<TResult>;  	proxy.TrySetResult (casted == null ? default(TResult) : casted.Result);  	break;  }  
