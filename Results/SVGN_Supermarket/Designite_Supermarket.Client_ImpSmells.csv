Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,InsertToDB,The method has 7 parameters.
Long Parameter List,Supermarket.Client,MongoDbEngine,C:\repos\SVGN_Supermarket\Supermarket.Client\MongoDbEngine.cs,ImportProductReportsFromSqlServer,The method has 6 parameters.
Long Statement,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,InsertToDB,The length of the statement  "	int locationId = supermarketDb.Locations.Where (x => x.Name == location.Name).Select (x => x.LocationId).FirstOrDefault (); " is 123.
Long Statement,Supermarket.Client,MongoDbEngine,C:\repos\SVGN_Supermarket\Supermarket.Client\MongoDbEngine.cs,ImportProductReportsFromSqlServer,The length of the statement  "		int productId = MongoDbProvider.LoadData<Mongo.Product> ().Where (x => x.ProductId == sale.ProductId).Select (x => x.ProductId).FirstOrDefault (); " is 146.
Long Statement,Supermarket.Client,MongoDbEngine,C:\repos\SVGN_Supermarket\Supermarket.Client\MongoDbEngine.cs,GenerateJsonReports,The length of the statement  "		using (StreamWriter writer = new StreamWriter (String.Format ("../../../JSONReports/{0:00}.json"' product.ProductId))) { " is 120.
Long Statement,Supermarket.Client,XMLWriter,C:\repos\SVGN_Supermarket\Supermarket.Client\XMLWriter.cs,GenerateReports,The length of the statement  "				sale.Add (new XElement ("summary"' new XAttribute ("date"' entry.Date.SaleDate)' new XAttribute ("total-sum"' entry.Sum.ToString ("0.00")))); " is 141.
Empty Catch Block,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,GenerateFilesPaths,The method has an empty catch block.
Magic Number,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,ReadExcelFiles,The following statement contains a magic number: foreach (string filePath in filesPaths) {  	csbuilder.DataSource = filePath;  	DataTable dt = new DataTable ("newtable");  	FillData (csbuilder' dt);  	string reportDate = GetDateFromFileName (filePath);  	string reportLocation = dt.Rows [0].ItemArray [0].ToString ();  	Location location = new Location () {  		Name = reportLocation  	};  	Date date = new Date () {  		SaleDate = reportDate  	};  	int reportsCount = dt.Rows.Count - 1;  	for (int i = 2; i < reportsCount; i++) {  		string saleProductId = dt.Rows [i].ItemArray [0].ToString ();  		string saleQuantity = dt.Rows [i].ItemArray [1].ToString ();  		string saleUnitPrice = dt.Rows [i].ItemArray [2].ToString ();  		string saleSum = dt.Rows [i].ItemArray [3].ToString ();  		if (!IsSaleReport (saleProductId)) {  			break;  		}  		Sale sale = new Sale () {  			Quantity = int.Parse (saleQuantity)'  			UnitPrice = decimal.Parse (saleUnitPrice)'  			Sum = decimal.Parse (saleSum)'  			ProductId = int.Parse (saleProductId)  		};  		InsertToDB (location' date' sale);  	}  }  
Magic Number,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,ReadExcelFiles,The following statement contains a magic number: foreach (string filePath in filesPaths) {  	csbuilder.DataSource = filePath;  	DataTable dt = new DataTable ("newtable");  	FillData (csbuilder' dt);  	string reportDate = GetDateFromFileName (filePath);  	string reportLocation = dt.Rows [0].ItemArray [0].ToString ();  	Location location = new Location () {  		Name = reportLocation  	};  	Date date = new Date () {  		SaleDate = reportDate  	};  	int reportsCount = dt.Rows.Count - 1;  	for (int i = 2; i < reportsCount; i++) {  		string saleProductId = dt.Rows [i].ItemArray [0].ToString ();  		string saleQuantity = dt.Rows [i].ItemArray [1].ToString ();  		string saleUnitPrice = dt.Rows [i].ItemArray [2].ToString ();  		string saleSum = dt.Rows [i].ItemArray [3].ToString ();  		if (!IsSaleReport (saleProductId)) {  			break;  		}  		Sale sale = new Sale () {  			Quantity = int.Parse (saleQuantity)'  			UnitPrice = decimal.Parse (saleUnitPrice)'  			Sum = decimal.Parse (saleSum)'  			ProductId = int.Parse (saleProductId)  		};  		InsertToDB (location' date' sale);  	}  }  
Magic Number,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,ReadExcelFiles,The following statement contains a magic number: foreach (string filePath in filesPaths) {  	csbuilder.DataSource = filePath;  	DataTable dt = new DataTable ("newtable");  	FillData (csbuilder' dt);  	string reportDate = GetDateFromFileName (filePath);  	string reportLocation = dt.Rows [0].ItemArray [0].ToString ();  	Location location = new Location () {  		Name = reportLocation  	};  	Date date = new Date () {  		SaleDate = reportDate  	};  	int reportsCount = dt.Rows.Count - 1;  	for (int i = 2; i < reportsCount; i++) {  		string saleProductId = dt.Rows [i].ItemArray [0].ToString ();  		string saleQuantity = dt.Rows [i].ItemArray [1].ToString ();  		string saleUnitPrice = dt.Rows [i].ItemArray [2].ToString ();  		string saleSum = dt.Rows [i].ItemArray [3].ToString ();  		if (!IsSaleReport (saleProductId)) {  			break;  		}  		Sale sale = new Sale () {  			Quantity = int.Parse (saleQuantity)'  			UnitPrice = decimal.Parse (saleUnitPrice)'  			Sum = decimal.Parse (saleSum)'  			ProductId = int.Parse (saleProductId)  		};  		InsertToDB (location' date' sale);  	}  }  
Magic Number,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,ReadExcelFiles,The following statement contains a magic number: for (int i = 2; i < reportsCount; i++) {  	string saleProductId = dt.Rows [i].ItemArray [0].ToString ();  	string saleQuantity = dt.Rows [i].ItemArray [1].ToString ();  	string saleUnitPrice = dt.Rows [i].ItemArray [2].ToString ();  	string saleSum = dt.Rows [i].ItemArray [3].ToString ();  	if (!IsSaleReport (saleProductId)) {  		break;  	}  	Sale sale = new Sale () {  		Quantity = int.Parse (saleQuantity)'  		UnitPrice = decimal.Parse (saleUnitPrice)'  		Sum = decimal.Parse (saleSum)'  		ProductId = int.Parse (saleProductId)  	};  	InsertToDB (location' date' sale);  }  
Magic Number,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,ReadExcelFiles,The following statement contains a magic number: for (int i = 2; i < reportsCount; i++) {  	string saleProductId = dt.Rows [i].ItemArray [0].ToString ();  	string saleQuantity = dt.Rows [i].ItemArray [1].ToString ();  	string saleUnitPrice = dt.Rows [i].ItemArray [2].ToString ();  	string saleSum = dt.Rows [i].ItemArray [3].ToString ();  	if (!IsSaleReport (saleProductId)) {  		break;  	}  	Sale sale = new Sale () {  		Quantity = int.Parse (saleQuantity)'  		UnitPrice = decimal.Parse (saleUnitPrice)'  		Sum = decimal.Parse (saleSum)'  		ProductId = int.Parse (saleProductId)  	};  	InsertToDB (location' date' sale);  }  
Magic Number,Supermarket.Client,ExcelReader,C:\repos\SVGN_Supermarket\Supermarket.Client\ExcelReader.cs,ReadExcelFiles,The following statement contains a magic number: for (int i = 2; i < reportsCount; i++) {  	string saleProductId = dt.Rows [i].ItemArray [0].ToString ();  	string saleQuantity = dt.Rows [i].ItemArray [1].ToString ();  	string saleUnitPrice = dt.Rows [i].ItemArray [2].ToString ();  	string saleSum = dt.Rows [i].ItemArray [3].ToString ();  	if (!IsSaleReport (saleProductId)) {  		break;  	}  	Sale sale = new Sale () {  		Quantity = int.Parse (saleQuantity)'  		UnitPrice = decimal.Parse (saleUnitPrice)'  		Sum = decimal.Parse (saleSum)'  		ProductId = int.Parse (saleProductId)  	};  	InsertToDB (location' date' sale);  }  
