Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OctgnImageDb.Imaging.Cache,ImagePackManager,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Cache\ImagePackManager.cs,ImportImagePacks,Cyclomatic complexity of the method is 8
Complex Method,OctgnImageDb.Imaging.Doomtown,DoomtownDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Doomtown\DoomTownDbImages.cs,GetCardImages,Cyclomatic complexity of the method is 8
Complex Method,OctgnImageDb.Imaging.Got2,Got2DbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Got2\Got2DbImages.cs,GetCardImages,Cyclomatic complexity of the method is 8
Long Parameter List,OctgnImageDb.Imaging.Doomtown,DoomtownDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Doomtown\DoomTownDbImages.cs,GetCardImages,The method has 5 parameters.
Long Statement,OctgnImageDb.Imaging.Doomtown,DoomtownDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Doomtown\DoomTownDbImages.cs,GetCardImages,The length of the statement  "			// Certain card names can found acrosss multiple sets.  DTDB labels them with (Ext.#).  Need to strip that out for OCTGN lookup. " is 128.
Long Statement,OctgnImageDb.Imaging.Doomtown,DoomtownDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Doomtown\DoomTownDbImages.cs,GetCardImages,The length of the statement  "			set.Cards.FirstOrDefault (c => c.Name.Equals (apiTile' StringComparison.OrdinalIgnoreCase)) ?? // Try appending a missing the " is 125.
Long Statement,OctgnImageDb.Imaging.Doomtown,DoomtownDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Doomtown\DoomTownDbImages.cs,GetCardImages,The length of the statement  "			set.Cards.FirstOrDefault (c => String.Concat ("The "' c.Name).Equals (apiTile' StringComparison.OrdinalIgnoreCase)) ?? // Fun with ampersand " is 140.
Long Statement,OctgnImageDb.Imaging.Doomtown,DoomtownDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Doomtown\DoomTownDbImages.cs,GetCardImages,The length of the statement  "			set.Cards.FirstOrDefault (c => c.Name.Replace ("&"' " & ").Equals (apiTile' StringComparison.OrdinalIgnoreCase)) ?? // There is some inconsitent nameing with Ã© between the definition files and dtdb.  Try both ways if necessary  " is 226.
Long Statement,OctgnImageDb.Imaging.Doomtown,DoomtownDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Doomtown\DoomTownDbImages.cs,GetCardImages,The length of the statement  "			set.Cards.FirstOrDefault (c => c.Name.Trim ().Equals (apiTile.Replace ("\u00e9"' "e")' StringComparison.OrdinalIgnoreCase)); " is 124.
Long Statement,OctgnImageDb.Imaging,ImageEngine,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\ImageEngine.cs,TryGetProvider,The length of the statement  "		var attribute = (ImageProviderAttribute)provider.GetType ().GetCustomAttributes (typeof(ImageProviderAttribute)' true).FirstOrDefault (); " is 137.
Long Statement,OctgnImageDb.Imaging,ImageWriter,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\ImageWriter.cs,PrepareDirectory,The length of the statement  "	foreach (FileInfo f in new DirectoryInfo (directory).GetFiles (file.Remove (file.IndexOf ("."' System.StringComparison.Ordinal)) + ".*")) " is 137.
Long Statement,OctgnImageDb.Models,ModelExtensions,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Models\OctgnExtentions.cs,FindSetByName,The length of the statement  "	return sets.FirstOrDefault (s => s.Name.IndexOf (name' StringComparison.OrdinalIgnoreCase) >= 0) ?? sets.FirstOrDefault (s => s.Name.IndexOf (name.Replace ("&"' "and").Replace ("Base"' "Core")' StringComparison.OrdinalIgnoreCase) >= 0); " is 236.
Magic Number,OctgnImageDb.Imaging.Got2,Got2DbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Got2\Got2DbImages.cs,GetCardImages,The following statement contains a magic number: foreach (var apiSet in apiSets) {  	// The maintainers of Got2 appear to be colapsing all cycle packs into a single set' so we have  	// to grab the set by the cycle number.  	string setName = apiSet.name;  	int cycle = apiSet.cycle_position;  	var set = game.Sets.SingleOrDefault (s => s.Name.StartsWith (cycle.ToString ().PadLeft (2' '0')));  	if (set == null || !set.ImagesNeeded) {  		if (set == null)  			LogManager.GetLogger ().Log ("Unable to map set: " + setName + ".  It may not be on OCTGN yet."' LogType.Error);  		continue;  	}  	LogManager.GetLogger ().Log (set.Name + ": " + apiSet.name' LogType.Set);  	dynamic apiCards = Json.Decode (wc.DownloadString (ApiBaseUrl + "/api/public/cards/" + apiSet.code));  	foreach (var apiCard in apiCards) {  		var card = set.Cards.FirstOrDefault (c => c.Id.Equals (apiCard.octgn_id));  		if (card != null && apiCard.imagesrc != string.Empty) {  			try {  				byte[] image = _cache.GetImage (card.Id);  				if (image == null) {  					image = wc.DownloadData (ApiBaseUrl + apiCard.imagesrc);  					_cache.SaveImage (card.Id' ".jpg"' image);  				}  				_imageWriter.WriteImage (OctgnPaths.CardImagePath (game.Id' set.Id' card.Id' ".jpg")' image);  			}  			catch (WebException ex) {  				LogManager.GetLogger ().Log ("Unable to find: " + card.Name' LogType.Card);  				if (((HttpWebResponse)ex.Response).StatusCode != HttpStatusCode.NotFound)  					throw;  			}  		}  		else  			LogManager.GetLogger ().Log ("Unable to find: " + apiCard.title' LogType.Card);  	}  }  
Magic Number,OctgnImageDb.Imaging.Netrunner,NetrunnerDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Netrunner\NetrunnerDbImages.cs,GetCardImages,The following statement contains a magic number: foreach (var set in game.Sets) {  	if (set == null || !set.ImagesNeeded)  		continue;  	LogManager.GetLogger ().Log (set.Name' LogType.Set);  	foreach (var card in set.Cards) {  		try {  			byte[] image = _cache.GetImage (card.Id);  			if (image == null) {  				image = wc.DownloadData (ApiBaseUrl + "/img/cards/" + card.Id.Substring (card.Id.Length - 5) + ".png");  				_cache.SaveImage (card.Id' ".png"' image);  			}  			_imageWriter.WriteImage (OctgnPaths.CardImagePath (game.Id' set.Id' card.Id' ".png")' image);  		}  		catch (WebException ex) {  			LogManager.GetLogger ().Log ("Unable to find: " + card.Name' LogType.Card);  			if (((HttpWebResponse)ex.Response).StatusCode != HttpStatusCode.NotFound)  				throw;  		}  	}  }  
Magic Number,OctgnImageDb.Imaging.Netrunner,NetrunnerDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Netrunner\NetrunnerDbImages.cs,GetCardImages,The following statement contains a magic number: foreach (var card in set.Cards) {  	try {  		byte[] image = _cache.GetImage (card.Id);  		if (image == null) {  			image = wc.DownloadData (ApiBaseUrl + "/img/cards/" + card.Id.Substring (card.Id.Length - 5) + ".png");  			_cache.SaveImage (card.Id' ".png"' image);  		}  		_imageWriter.WriteImage (OctgnPaths.CardImagePath (game.Id' set.Id' card.Id' ".png")' image);  	}  	catch (WebException ex) {  		LogManager.GetLogger ().Log ("Unable to find: " + card.Name' LogType.Card);  		if (((HttpWebResponse)ex.Response).StatusCode != HttpStatusCode.NotFound)  			throw;  	}  }  
Magic Number,OctgnImageDb.Imaging.Netrunner,NetrunnerDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Netrunner\NetrunnerDbImages.cs,GetCardImages,The following statement contains a magic number: try {  	byte[] image = _cache.GetImage (card.Id);  	if (image == null) {  		image = wc.DownloadData (ApiBaseUrl + "/img/cards/" + card.Id.Substring (card.Id.Length - 5) + ".png");  		_cache.SaveImage (card.Id' ".png"' image);  	}  	_imageWriter.WriteImage (OctgnPaths.CardImagePath (game.Id' set.Id' card.Id' ".png")' image);  }  catch (WebException ex) {  	LogManager.GetLogger ().Log ("Unable to find: " + card.Name' LogType.Card);  	if (((HttpWebResponse)ex.Response).StatusCode != HttpStatusCode.NotFound)  		throw;  }  
Magic Number,OctgnImageDb.Imaging.Netrunner,NetrunnerDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Netrunner\NetrunnerDbImages.cs,GetCardImages,The following statement contains a magic number: if (image == null) {  	image = wc.DownloadData (ApiBaseUrl + "/img/cards/" + card.Id.Substring (card.Id.Length - 5) + ".png");  	_cache.SaveImage (card.Id' ".png"' image);  }  
Magic Number,OctgnImageDb.Imaging.Netrunner,NetrunnerDbImages,C:\repos\jrmitch120_OctgnImageDb\OctgnImageDb\Imaging\Netrunner\NetrunnerDbImages.cs,GetCardImages,The following statement contains a magic number: image = wc.DownloadData (ApiBaseUrl + "/img/cards/" + card.Id.Substring (card.Id.Length - 5) + ".png");  
