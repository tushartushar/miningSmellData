Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,FlickrSyncProvider.Domain,FlickrFile,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\FlickrFile.cs,FlickrFile,The method has 7 parameters.
Long Parameter List,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,InsertItem,The method has 5 parameters.
Long Parameter List,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,UpdateItem,The method has 6 parameters.
Long Parameter List,FlickrSyncProvider,PhotosetTree,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\PhotoSetTree.cs,ScanCollection,The method has 6 parameters.
Long Identifier,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,LoadChangeData,The length of the parameter recoverableErrorReportingContext is 32.
Long Identifier,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,InsertItem,The length of the parameter recoverableErrorReportingContext is 32.
Long Identifier,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,UpdateItem,The length of the parameter recoverableErrorReportingContext is 32.
Long Identifier,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,DeleteItem,The length of the parameter recoverableErrorReportingContext is 32.
Long Statement,FlickrSyncProvider.Domain,FlickrFile,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\FlickrFile.cs,UpdateRemote,The length of the statement  "	else if (String.Compare (Title' Path.GetFileNameWithoutExtension (newFileData.FileData.Name)' StringComparison.CurrentCultureIgnoreCase) != 0) { " is 144.
Long Statement,FlickrSyncProvider.Domain,MachineTag,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\MachineTag.cs,ParseMachineTags,The length of the statement  "		result.Add (new MachineTag (matches [0].Groups [1].Value' matches [0].Groups [2].Value' matches [0].Groups [3].Value.Trim (new[] { " is 130.
Long Statement,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,EnumerateItems,The length of the statement  "			var photosInSet = PhotosetsGetPhotosAllPages (photoSet.PhotosetId' PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated).ToList (); " is 207.
Long Statement,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,EnumerateItems,The length of the statement  "		var notInSetPhotos = PhotosGetNotInSetAllPages (PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated); " is 178.
Long Statement,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,InsertItem,The length of the statement  "			photoId = _flickr.UploadPicture (fileData.AbsoluteSourceFilePath' Path.GetFileNameWithoutExtension (fileData.FileData.Name)' ""' tags' false' false' false); " is 156.
Long Statement,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,DeleteItem,The length of the statement  "			recoverableErrorReportingContext.RecordRecoverableErrorForChange (new RecoverableErrorData (null' mediaObject.VirtualPath' "File modified on Flickr")); " is 151.
Long Statement,FlickrSyncProvider,PhotosetTree,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\PhotoSetTree.cs,ScanCollection,The length of the statement  "	if (isRoot)// since FlickrNet treats the root collection slightly differently we'll have to fake the root Collection for consistency " is 132.
Long Statement,FlickrSyncProvider,PhotosetTree,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\PhotoSetTree.cs,ResolvePhotosetMapping,The length of the statement  "	// since FlickrNet treats the root collection slightly differently we'll hace to fake the root Collection for consistency " is 121.
Long Statement,FlickrSyncProvider.Extensions,ItemFieldDictionaryExtensions,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Extensions\ItemFieldDictionaryExtensions.cs,ToFlickrMediaObject,The length of the statement  "	var isDirectory = !itm.ContainsKey (FlickrMediaObject.photoId) || string.IsNullOrWhiteSpace ((string)itm [FlickrMediaObject.photoId].Value); " is 140.
Magic Number,FlickrSyncProvider.Domain,FlickrDirectory,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\FlickrDirectory.cs,FlickrDirectory,The following statement contains a magic number: FirstUploadedTime = photoset.DateCreated == new DateTime (1' 1' 1) ? new DateTime (1970' 01' 01) : photoset.DateCreated;  
Magic Number,FlickrSyncProvider.Domain,FlickrFile,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\FlickrFile.cs,FlickrFile,The following statement contains a magic number: PhotoHashCheckTime = new DateTime (1970' 01' 01);  
Magic Number,FlickrSyncProvider.Domain,FlickrFile,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\FlickrFile.cs,FlickrFile,The following statement contains a magic number: PhotoHashCheckTime = tags.Where (x => x.Ns == "flickrsync" && x.Predicate == "checktime").Select (x => x.Value.UnixTimeStampToDateTime ()).FirstOrDefault () ?? new DateTime (1970' 01' 01);  
Magic Number,FlickrSyncProvider.Domain,MachineTag,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\MachineTag.cs,ParseMachineTags,The following statement contains a magic number: foreach (var machineTag in Regex.Split (tags' @"\s")) {  	var matches = Regex.Matches (machineTag' @"^([0-9a-zA-Z]+):([0-9a-zA-Z]+)=(.+)$");  	if (matches.Count == 0)  		continue;  	if (matches [0].Groups.Count < 4)  		continue;  	result.Add (new MachineTag (matches [0].Groups [1].Value' matches [0].Groups [2].Value' matches [0].Groups [3].Value.Trim (new[] {  		'"'  	})));  }  
Magic Number,FlickrSyncProvider.Domain,MachineTag,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\MachineTag.cs,ParseMachineTags,The following statement contains a magic number: foreach (var machineTag in Regex.Split (tags' @"\s")) {  	var matches = Regex.Matches (machineTag' @"^([0-9a-zA-Z]+):([0-9a-zA-Z]+)=(.+)$");  	if (matches.Count == 0)  		continue;  	if (matches [0].Groups.Count < 4)  		continue;  	result.Add (new MachineTag (matches [0].Groups [1].Value' matches [0].Groups [2].Value' matches [0].Groups [3].Value.Trim (new[] {  		'"'  	})));  }  
Magic Number,FlickrSyncProvider.Domain,MachineTag,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\MachineTag.cs,ParseMachineTags,The following statement contains a magic number: foreach (var machineTag in Regex.Split (tags' @"\s")) {  	var matches = Regex.Matches (machineTag' @"^([0-9a-zA-Z]+):([0-9a-zA-Z]+)=(.+)$");  	if (matches.Count == 0)  		continue;  	if (matches [0].Groups.Count < 4)  		continue;  	result.Add (new MachineTag (matches [0].Groups [1].Value' matches [0].Groups [2].Value' matches [0].Groups [3].Value.Trim (new[] {  		'"'  	})));  }  
Magic Number,FlickrSyncProvider.Domain,MachineTag,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\MachineTag.cs,ParseMachineTags,The following statement contains a magic number: if (matches [0].Groups.Count < 4)  	continue;  
Magic Number,FlickrSyncProvider.Domain,MachineTag,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\MachineTag.cs,ParseMachineTags,The following statement contains a magic number: result.Add (new MachineTag (matches [0].Groups [1].Value' matches [0].Groups [2].Value' matches [0].Groups [3].Value.Trim (new[] {  	'"'  })));  
Magic Number,FlickrSyncProvider.Domain,MachineTag,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Domain\MachineTag.cs,ParseMachineTags,The following statement contains a magic number: result.Add (new MachineTag (matches [0].Groups [1].Value' matches [0].Groups [2].Value' matches [0].Groups [3].Value.Trim (new[] {  	'"'  })));  
Magic Number,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,EnumerateItems,The following statement contains a magic number: try {  	var photoSets = PhotosetsGetListAllPages (_user' PhotoSearchExtras.None).ToList ();  	_photosetTree.UpdateCollectionTree (photoSets);  	foreach (var photoSet in photoSets.Take (2)) {  		// we represent photosets as folders  		items.Add (photoSet.ToItemFieldDictionary (_photosetTree));  		var photosInSet = PhotosetsGetPhotosAllPages (photoSet.PhotosetId' PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated).ToList ();  		foreach (var photo in photosInSet.Take (5)) {  			var p = new FlickrFile (photo' photoSet.PhotosetId' _photosetTree.ResolvePathByPhotoset (photoSet.PhotosetId));  			_cachedMetadata.Add (p);  			items.Add (p.ToItemFieldDictionary ());  		}  	}  	// go process Not In set special case. We'll dump all files in home folder root  	var notInSetPhotos = PhotosGetNotInSetAllPages (PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated);  	foreach (var photo in notInSetPhotos) {  		var p = new FlickrFile (photo' string.Empty' _photosetTree.ResolvePathByPhotoset (string.Empty));  		_cachedMetadata.Add (p);  		// PhotoSetTreeResolver.ResolvePathByPhotoset(string.Empty) will be hardcoded to root virtual path  		items.Add (p.ToItemFieldDictionary ());  	}  	// Report item to Simple Provider framework  	context.ReportItems (items);  }  catch (Exception ex) {  	_logger.Error ("Error Polling Flickr"' ex);  	throw;  }  
Magic Number,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,EnumerateItems,The following statement contains a magic number: try {  	var photoSets = PhotosetsGetListAllPages (_user' PhotoSearchExtras.None).ToList ();  	_photosetTree.UpdateCollectionTree (photoSets);  	foreach (var photoSet in photoSets.Take (2)) {  		// we represent photosets as folders  		items.Add (photoSet.ToItemFieldDictionary (_photosetTree));  		var photosInSet = PhotosetsGetPhotosAllPages (photoSet.PhotosetId' PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated).ToList ();  		foreach (var photo in photosInSet.Take (5)) {  			var p = new FlickrFile (photo' photoSet.PhotosetId' _photosetTree.ResolvePathByPhotoset (photoSet.PhotosetId));  			_cachedMetadata.Add (p);  			items.Add (p.ToItemFieldDictionary ());  		}  	}  	// go process Not In set special case. We'll dump all files in home folder root  	var notInSetPhotos = PhotosGetNotInSetAllPages (PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated);  	foreach (var photo in notInSetPhotos) {  		var p = new FlickrFile (photo' string.Empty' _photosetTree.ResolvePathByPhotoset (string.Empty));  		_cachedMetadata.Add (p);  		// PhotoSetTreeResolver.ResolvePathByPhotoset(string.Empty) will be hardcoded to root virtual path  		items.Add (p.ToItemFieldDictionary ());  	}  	// Report item to Simple Provider framework  	context.ReportItems (items);  }  catch (Exception ex) {  	_logger.Error ("Error Polling Flickr"' ex);  	throw;  }  
Magic Number,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,EnumerateItems,The following statement contains a magic number: foreach (var photoSet in photoSets.Take (2)) {  	// we represent photosets as folders  	items.Add (photoSet.ToItemFieldDictionary (_photosetTree));  	var photosInSet = PhotosetsGetPhotosAllPages (photoSet.PhotosetId' PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated).ToList ();  	foreach (var photo in photosInSet.Take (5)) {  		var p = new FlickrFile (photo' photoSet.PhotosetId' _photosetTree.ResolvePathByPhotoset (photoSet.PhotosetId));  		_cachedMetadata.Add (p);  		items.Add (p.ToItemFieldDictionary ());  	}  }  
Magic Number,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,EnumerateItems,The following statement contains a magic number: foreach (var photoSet in photoSets.Take (2)) {  	// we represent photosets as folders  	items.Add (photoSet.ToItemFieldDictionary (_photosetTree));  	var photosInSet = PhotosetsGetPhotosAllPages (photoSet.PhotosetId' PhotoSearchExtras.OriginalUrl | PhotoSearchExtras.MachineTags | PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.LastUpdated).ToList ();  	foreach (var photo in photosInSet.Take (5)) {  		var p = new FlickrFile (photo' photoSet.PhotosetId' _photosetTree.ResolvePathByPhotoset (photoSet.PhotosetId));  		_cachedMetadata.Add (p);  		items.Add (p.ToItemFieldDictionary ());  	}  }  
Magic Number,FlickrSyncProvider,FlickrFullEnumerationProvider,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\FlickrFullEnumerationProvider.cs,EnumerateItems,The following statement contains a magic number: foreach (var photo in photosInSet.Take (5)) {  	var p = new FlickrFile (photo' photoSet.PhotosetId' _photosetTree.ResolvePathByPhotoset (photoSet.PhotosetId));  	_cachedMetadata.Add (p);  	items.Add (p.ToItemFieldDictionary ());  }  
Magic Number,FlickrSyncProvider.Extensions,MiscExtensions,C:\repos\tkhadimullin_MS-Sync-Flickr-Provider\FlickrSyncProvider\Extensions\MiscExtensions.cs,ToUnixTimestamp,The following statement contains a magic number: return (int)(dateTime.Subtract (new DateTime (1970' 1' 1))).TotalSeconds;  
