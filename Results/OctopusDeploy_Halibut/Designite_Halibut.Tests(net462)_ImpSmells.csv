Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Halibut.Tests,Extensions,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Extensions.cs,GetVisibility,Cyclomatic complexity of the method is 8
Long Parameter List,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,RunWebSocketPollingClient,The method has 5 parameters. Parameters: server' clientCertificate' remoteThumbprint' trustedCertificate' expectSuccess
Long Parameter List,Halibut.Tests.TestServices,ISupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\ISupportedServices.cs,Hello,The method has 5 parameters. Parameters: a' b' c' d' e
Long Parameter List,Halibut.Tests.TestServices,ISupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\ISupportedServices.cs,Hello,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Halibut.Tests.TestServices,ISupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\ISupportedServices.cs,Hello,The method has 7 parameters. Parameters: a' b' c' d' e' f' g
Long Parameter List,Halibut.Tests.TestServices,ISupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\ISupportedServices.cs,Hello,The method has 8 parameters. Parameters: a' b' c' d' e' f' g' h
Long Parameter List,Halibut.Tests.TestServices,ISupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\ISupportedServices.cs,Hello,The method has 9 parameters. Parameters: a' b' c' d' e' f' g' h' i
Long Parameter List,Halibut.Tests.TestServices,ISupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\ISupportedServices.cs,Hello,The method has 10 parameters. Parameters: a' b' c' d' e' f' g' h' i' j
Long Parameter List,Halibut.Tests.TestServices,ISupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\ISupportedServices.cs,Hello,The method has 11 parameters. Parameters: a' b' c' d' e' f' g' h' i' j' k
Long Parameter List,Halibut.Tests.TestServices,SupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\SupportedServices.cs,Hello,The method has 5 parameters. Parameters: a' b' c' d' e
Long Parameter List,Halibut.Tests.TestServices,SupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\SupportedServices.cs,Hello,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Halibut.Tests.TestServices,SupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\SupportedServices.cs,Hello,The method has 7 parameters. Parameters: a' b' c' d' e' f' g
Long Parameter List,Halibut.Tests.TestServices,SupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\SupportedServices.cs,Hello,The method has 8 parameters. Parameters: a' b' c' d' e' f' g' h
Long Parameter List,Halibut.Tests.TestServices,SupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\SupportedServices.cs,Hello,The method has 9 parameters. Parameters: a' b' c' d' e' f' g' h' i
Long Parameter List,Halibut.Tests.TestServices,SupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\SupportedServices.cs,Hello,The method has 10 parameters. Parameters: a' b' c' d' e' f' g' h' i' j
Long Parameter List,Halibut.Tests.TestServices,SupportedServices,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\SupportedServices.cs,Hello,The method has 11 parameters. Parameters: a' b' c' d' e' f' g' h' i' j' k
Long Identifier,Halibut.Tests,Certificates,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Certificates.cs,,The length of the parameter TentacleListeningPublicThumbprint is 33.
Long Identifier,Halibut.Tests,Certificates,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Certificates.cs,,The length of the parameter TentaclePollingPublicThumbprint is 31.
Long Identifier,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,GetHeadersIgnoringCertificateValidation,The length of the parameter existingServerCertificateValidationCallback is 43.
Long Statement,Halibut.Tests,ConnectionManagerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionManagerFixture.cs,DisposedConnectionsAreRemovedFromActive_WhenMultipleConnectionsAreActive,The length of the statement  "            //do it twice because this bug only triggers on multiple enumeration' having 1 in the collection doesn't trigger the bug " is 120.
Long Statement,Halibut.Tests,ConnectionManagerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionManagerFixture.cs,DisposedConnectionsAreRemovedFromActive_WhenMultipleConnectionsAreActive,The length of the statement  "            connectionManager.AcquireConnection(connectionFactory' serviceEndpoint' new InMemoryConnectionLog(serviceEndpoint.ToString())); " is 127.
Long Statement,Halibut.Tests,ConnectionManagerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionManagerFixture.cs,DisposedConnectionsAreRemovedFromActive_WhenMultipleConnectionsAreActive,The length of the statement  "            connectionManager.AcquireConnection(connectionFactory' serviceEndpoint' new InMemoryConnectionLog(serviceEndpoint.ToString())); " is 127.
Long Statement,Halibut.Tests,ConnectionManagerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionManagerFixture.cs,ReleasedConnectionsAreNotActive,The length of the statement  "            var activeConnection = connectionManager.AcquireConnection(connectionFactory' serviceEndpoint' new InMemoryConnectionLog(serviceEndpoint.ToString())); " is 150.
Long Statement,Halibut.Tests,ConnectionManagerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionManagerFixture.cs,DisposedConnectionsAreRemovedFromActive,The length of the statement  "            var activeConnection = connectionManager.AcquireConnection(connectionFactory' serviceEndpoint' new InMemoryConnectionLog(serviceEndpoint.ToString())); " is 150.
Long Statement,Halibut.Tests,ConnectionManagerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionManagerFixture.cs,DisconnectDisposesActiveConnections,The length of the statement  "            var activeConnection = connectionManager.AcquireConnection(connectionFactory' serviceEndpoint' new InMemoryConnectionLog(serviceEndpoint.ToString())); " is 150.
Long Statement,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailWhenServerThrowsAnException,The length of the statement  "                var echo = octopus.CreateClient<IEchoService>("https://localhost:" + tentaclePort' Certificates.TentacleListeningPublicThumbprint); " is 131.
Long Statement,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailWhenServerThrowsAnExceptionOnPolling,The length of the statement  "                tentaclePolling.Poll(new Uri("poll://SQ-TENTAPOLL")' new ServiceEndPoint(new Uri("https://localhost:" + octopusPort)' Certificates.OctopusPublicThumbprint)); " is 157.
Long Statement,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailOnInvalidHostname,The length of the statement  "                var echo = octopus.CreateClient<IEchoService>("https://sduj08ud9382ujd98dw9fh934hdj2389u982:8000"' Certificates.TentacleListeningPublicThumbprint); " is 147.
Long Statement,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailOnInvalidHostname,The length of the statement  "                message.Should().Contain("when sending a request to 'https://sduj08ud9382ujd98dw9fh934hdj2389u982:8000/'' before the request"); " is 127.
Long Statement,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailOnInvalidPort,The length of the statement  "                ex.Message.Should().Be("An error occurred when sending a request to 'https://google.com:88/'' before the request could begin: The client was unable to establish the initial connection within the timeout 00:00:02."); " is 215.
Long Statement,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailWhenListeningClientPresentsWrongCertificate,The length of the statement  "                var echo = octopus.CreateClient<IEchoService>("https://localhost:" + tentaclePort' Certificates.TentacleListeningPublicThumbprint); " is 131.
Long Statement,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailWhenListeningServerPresentsWrongCertificate,The length of the statement  "                var echo = octopus.CreateClient<IEchoService>("https://localhost:" + tentaclePort' Certificates.TentaclePollingPublicThumbprint); " is 129.
Long Statement,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,TcpClientsAreDisposedCorrectly,The length of the statement  "                Assert.Inconclusive("This test is meant to be run under dotMemory Unit. In your IDE' right click on the test icon and choose 'Run under dotMemory Unit'."); " is 155.
Long Statement,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,TcpClientsAreDisposedCorrectly,The length of the statement  "                    expectedTcpClientCount++; // each time the server polls' it keeps a tcpclient (as we dont have support to say StopPolling) " is 122.
Long Statement,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,TcpClientsAreDisposedCorrectly,The length of the statement  "                    RunWebSocketPollingClient(server' Certificates.TentaclePolling' Certificates.TentaclePollingPublicThumbprint' Certificates.OctopusPublicThumbprint); " is 148.
Long Statement,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,TcpClientsAreDisposedCorrectly,The length of the statement  "                //https://dotnettools-support.jetbrains.com/hc/en-us/community/posts/360000088690-How-reproduce-DotMemory-s-Force-GC-button-s-behaviour-on-code-with-c-?page=1#community_comment_360000072750 " is 189.
Long Statement,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,TcpClientsAreDisposedCorrectly,The length of the statement  "                    Assert.That(tcpClientCount' Is.LessThanOrEqualTo(expectedTcpClientCount)' "Unexpected number of TcpClient objects in memory"); " is 126.
Long Statement,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,RunPollingClient,The length of the statement  "                var serverEndpoint = new ServiceEndPoint(new Uri("https://localhost:8433")' Certificates.TentaclePollingPublicThumbprint) " is 121.
Long Statement,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,AddSslCertToLocalStoreAndRegisterFor,The length of the statement  "                StartInfo = new ProcessStartInfo("netsh"' $"http add sslcert ipport={address} certhash={certificate.Thumbprint} appid={{2e282bfb-fce9-40fc-a594-2136043e1c8f}}") " is 160.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfClient,The length of the statement  "            protocol.ExchangeAsServer(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => new PendingRequestQueue(new InMemoryConnectionLog("x"))); " is 165.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsClientWithPooling,The length of the statement  "            // When connections are pooled (kept alive)' we send HELLO and expect a PROCEED before each request' that way we can know whether " is 129.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfClientWithPooling,The length of the statement  "            protocol.ExchangeAsServer(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => new PendingRequestQueue(new InMemoryConnectionLog("x"))); " is 165.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsSubscriber,The length of the statement  "            protocol.ExchangeAsSubscriber(new Uri("poll://12831")' req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' 5); " is 134.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriber,The length of the statement  "            protocol.ExchangeAsServer(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => requestQueue); " is 122.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberAsync,The length of the statement  "            protocol.ExchangeAsServerAsync(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => requestQueue).Wait(); " is 134.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsSubscriberWithPooling,The length of the statement  "            protocol.ExchangeAsSubscriber(new Uri("poll://12831")' req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' 5); " is 134.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsSubscriberWithPooling,The length of the statement  "            protocol.ExchangeAsSubscriber(new Uri("poll://12831")' req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' 5); " is 134.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberWithPooling,The length of the statement  "            protocol.ExchangeAsServer(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => requestQueue); " is 122.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberWithPooling,The length of the statement  "            protocol.ExchangeAsServer(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => requestQueue); " is 122.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberWithPoolingAsync,The length of the statement  "            protocol.ExchangeAsServerAsync(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => requestQueue).Wait(); " is 134.
Long Statement,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberWithPoolingAsync,The length of the statement  "            protocol.ExchangeAsServerAsync(req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' ri => requestQueue).Wait(); " is 134.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatType,The length of the statement  "            var interfaces = ((type.BaseType == null || type.BaseType == typeof(Object)) ? new Type[0] : type.BaseType.InArray()).Concat(type.GetInterfaces().Where(i => i.GetTypeInfo().IsVisible)); " is 185.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatType,The length of the statement  "            var members = type.GetMembers(BindingFlags.Instance | BindingFlags.Static | BindingFlags.DeclaredOnly | BindingFlags.Public | BindingFlags.NonPublic) " is 149.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatType,The length of the statement  "            var other = members.Except(methods).Except(properties).Except(fields).Except(ctors).Except(events).Except(types).ToArray(); " is 123.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatType,The length of the statement  "                $"{VisibilityString(type.GetVisibility())}{kind} {FormatTypeName(type' true)}{interfaceSeparator}{interfacesList}".InArray() " is 124.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatProperty,The length of the statement  "            return $"{VisibilityString(p.GetMethod?.GetVisibility())}{Static(isStatic)}{FormatTypeName(p.PropertyType)} {p.Name} {{ {string.Join(" "' accessors)} }}".InArray(); " is 164.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatCtor,The length of the statement  "            return $"{VisibilityString(c.GetVisibility())}{TypeNameWithoutGeneric(c.DeclaringType.Name)}({parameters.CommaSeperate()}) {{ }}".InArray(); " is 140.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatMethods,The length of the statement  "            var genericProperties = m.IsGenericMethod ? $"<{m.GetGenericArguments().Select(t => FormatTypeName(t)).CommaSeperate()}>" : ""; " is 127.
Long Statement,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatMethods,The length of the statement  "            return $"{VisibilityString(m.GetVisibility())}{Static(m.IsStatic)}{FormatTypeName(m.ReturnType)} {m.Name}{genericProperties}({properties.CommaSeperate()}) {{ }}".InArray(); " is 172.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,OctopusCanSendMessagesToListeningTentacle,The length of the statement  "                var echo = octopus.CreateClient<IEchoService>("https://localhost:" + tentaclePort' Certificates.TentacleListeningPublicThumbprint); " is 131.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,OctopusCanSendMessagesToPollingTentacle,The length of the statement  "                tentaclePolling.Poll(new Uri("poll://SQ-TENTAPOLL")' new ServiceEndPoint(new Uri("https://localhost:" + octopusPort)' Certificates.OctopusPublicThumbprint)); " is 157.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,OctopusCanSendMessagesToWebSocketPollingTentacle,The length of the statement  "                    tentaclePolling.Poll(new Uri("poll://SQ-TENTAPOLL")' new ServiceEndPoint(new Uri($"wss://localhost:{octopusPort}/Halibut")' Certificates.SslThumbprint)); " is 153.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,OctopusCanSendMessagesToWebSocketPollingTentacle,The length of the statement  "            catch(NotSupportedException nse) when (nse.Message == "The netstandard build of this library cannot act as the client in a WebSocket polling setup") " is 148.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListening,The length of the statement  "                var echo = octopus.CreateClient<IEchoService>("https://localhost:" + tentaclePort' Certificates.TentacleListeningPublicThumbprint); " is 131.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToPolling,The length of the statement  "                tentaclePolling.Poll(new Uri("poll://SQ-TENTAPOLL")' new ServiceEndPoint(new Uri("https://localhost:" + octopusPort)' Certificates.OctopusPublicThumbprint)); " is 157.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The length of the statement  "                var echo = octopus.CreateClient<ISupportedServices>("https://localhost:" + tentaclePort' Certificates.TentacleListeningPublicThumbprint); " is 137.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The length of the statement  "                var echo = octopus.CreateClient<IEchoService>("https://localhost:" + tentaclePort' Certificates.TentacleListeningPublicThumbprint); " is 131.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,CanSetCustomFriendlyHtmlPageHeaders,The length of the statement  "                octopus.SetFriendlyHtmlPageHeaders(new Dictionary<string' string> {{"X-Content-Type-Options"' "nosniff"}' {"X-Frame-Options"' "DENY"}}); " is 136.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,DoConnectingOverHttpShouldFailQuickly,The length of the statement  "                Assert.ThrowsAsync<HttpRequestException>(() => DownloadStringIgnoringCertificateValidation("http://localhost:" + listenPort)); " is 126.
Long Statement,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,AddSslCertToLocalStoreAndRegisterFor,The length of the statement  "                StartInfo = new ProcessStartInfo("netsh"' $"http add sslcert ipport={address} certhash={Certificates.SslThumbprint} appid={{2e282bfb-fce9-40fc-a594-2136043e1c8f}}") " is 164.
Long Statement,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCancelled_ThrowsTaskCanceledException,The length of the statement  "            // [CS4014] Because this call is not awaited' execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. " is 183.
Long Statement,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCancelled_ThrowsTaskCanceledException,The length of the statement  "            triggered.Should().Be(true' "task should have continued executing in the background (not entirely ideal' but this task is designed to handle non-cancelable tasks)"); " is 165.
Long Statement,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCanceledButStillThrowsExceptionAfterCancellation_ExceptionsAreObserved,The length of the statement  "            // [CS4014] Because this call is not awaited' execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. " is 183.
Complex Conditional,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatField,The conditional expression  "f.IsSpecialName || !(f.IsPublic || f.IsFamily || f.IsFamilyOrAssembly)"  is complex.
Complex Conditional,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatCtor,The conditional expression  "c.IsStatic || !(c.IsPublic || c.IsFamily || c.IsFamilyOrAssembly)"  is complex.
Complex Conditional,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,FormatMethods,The conditional expression  "m.IsSpecialName || !(m.IsPublic || m.IsFamily || m.IsFamilyOrAssembly)"  is complex.
Magic Number,Halibut.Tests,ConnectionPoolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionPoolFixture.cs,ShouldLetConnectionsExpire,The following statement contains a magic number: connection.UsageCount.Should().Be(2);
Magic Number,Halibut.Tests,ConnectionPoolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionPoolFixture.cs,ShouldLetConnectionsExpire,The following statement contains a magic number: connection.UsageCount.Should().Be(3);
Magic Number,Halibut.Tests,Connection,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ConnectionPoolFixture.cs,HasExpired,The following statement contains a magic number: return UsageCount >= 3;
Magic Number,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailsWhenSendingToPollingMachineButNothingPicksItUp,The following statement contains a magic number: var endpoint = new ServiceEndPoint("poll://SQ-TENTAPOLL"' Certificates.TentaclePollingPublicThumbprint)                  {                      TcpClientConnectTimeout = TimeSpan.FromSeconds(1)'                      PollingRequestQueueTimeout = TimeSpan.FromSeconds(5)                  };
Magic Number,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailOnInvalidPort,The following statement contains a magic number: var endpoint = new ServiceEndPoint("https://google.com:88"' Certificates.TentacleListeningPublicThumbprint)                  {                      TcpClientConnectTimeout = TimeSpan.FromSeconds(2)'                      RetryCountLimit = 2                  };
Magic Number,Halibut.Tests,FailureModesFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\FailureModesFixture.cs,FailOnInvalidPort,The following statement contains a magic number: var endpoint = new ServiceEndPoint("https://google.com:88"' Certificates.TentacleListeningPublicThumbprint)                  {                      TcpClientConnectTimeout = TimeSpan.FromSeconds(2)'                      RetryCountLimit = 2                  };
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,TcpClientsAreDisposedCorrectly,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced' true);
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,TcpClientsAreDisposedCorrectly,The following statement contains a magic number: i < 4
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,RunPollingClient,The following statement contains a magic number: runtime.Listen(new IPEndPoint(IPAddress.IPv6Any' 8433));
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,RunPollingClient,The following statement contains a magic number: var serverEndpoint = new ServiceEndPoint(new Uri("https://localhost:8433")' Certificates.TentaclePollingPublicThumbprint)                  {                      TcpClientConnectTimeout = TimeSpan.FromSeconds(5)                  };
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,RunWebSocketPollingClient,The following statement contains a magic number: var serverEndpoint = new ServiceEndPoint(new Uri("wss://localhost:8434/Halibut")' Certificates.SslThumbprint)                  {                      TcpClientConnectTimeout = TimeSpan.FromSeconds(5)                  };
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,MakeRequest,The following statement contains a magic number: var result = calculator.Add(12' 18);
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,MakeRequest,The following statement contains a magic number: var result = calculator.Add(12' 18);
Magic Number,Halibut.Tests,MemoryFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\MemoryFixture.cs,MakeRequest,The following statement contains a magic number: Assert.That(result' Is.EqualTo(30));
Magic Number,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsSubscriber,The following statement contains a magic number: protocol.ExchangeAsSubscriber(new Uri("poll://12831")' req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' 5);
Magic Number,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriber,The following statement contains a magic number: stream.SetNumberOfReads(2);
Magic Number,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberAsync,The following statement contains a magic number: stream.SetNumberOfReads(2);
Magic Number,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsSubscriberWithPooling,The following statement contains a magic number: protocol.ExchangeAsSubscriber(new Uri("poll://12831")' req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' 5);
Magic Number,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsSubscriberWithPooling,The following statement contains a magic number: protocol.ExchangeAsSubscriber(new Uri("poll://12831")' req => ResponseMessage.FromException(req' new Exception("Divide by zero"))' 5);
Magic Number,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberWithPooling,The following statement contains a magic number: stream.SetNumberOfReads(2);
Magic Number,Halibut.Tests,ProtocolFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\ProtocolFixture.cs,ShouldExchangeAsServerOfSubscriberWithPoolingAsync,The following statement contains a magic number: stream.SetNumberOfReads(2);
Magic Number,Halibut.Tests,PublicSurfaceAreaFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\PublicSurfaceAreaFixture.cs,ThePublicSurfaceAreaShouldNotRegress,The following statement contains a magic number: var framework = string.Concat(RuntimeInformation.FrameworkDescription.Split(' ').Take(2));
Magic Number,Halibut.Tests,SecureClientFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\SecureClientFixture.cs,SecureClientClearsPoolWhenAllConnectionsCorrupt,The following statement contains a magic number: stream.Received(2).IdentifyAsClient();
Magic Number,Halibut.Tests,SecureListenerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\SecureListenerFixture.cs,SecureListenerDoesNotCreateHundredsOfIOEventsPerSecondOnWindows,The following statement contains a magic number: const int secondsToSample = 5;
Magic Number,Halibut.Tests,SecureListenerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\SecureListenerFixture.cs,SecureListenerDoesNotCreateHundredsOfIOEventsPerSecondOnWindows,The following statement contains a magic number: var client = new SecureListener(                      new IPEndPoint(new IPAddress(new byte[]{ 127' 0' 0' 1 })' 1093)'                       Certificates.TentacleListening'                      p => { }'                      thumbprint => true'                      new LogFactory()'                       () => ""                  );
Magic Number,Halibut.Tests,SecureListenerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\SecureListenerFixture.cs,SecureListenerDoesNotCreateHundredsOfIOEventsPerSecondOnWindows,The following statement contains a magic number: var client = new SecureListener(                      new IPEndPoint(new IPAddress(new byte[]{ 127' 0' 0' 1 })' 1093)'                       Certificates.TentacleListening'                      p => { }'                      thumbprint => true'                      new LogFactory()'                       () => ""                  );
Magic Number,Halibut.Tests,SecureListenerFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\SecureListenerFixture.cs,SecureListenerDoesNotCreateHundredsOfIOEventsPerSecondOnWindows,The following statement contains a magic number: var idleAverageWithErrorMargin = idleAverage * 250f;
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,OctopusCanSendMessagesToWebSocketPollingTentacle,The following statement contains a magic number: const int octopusPort = 8450;
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListening,The following statement contains a magic number: var data = new byte[1024 * 1024 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListening,The following statement contains a magic number: var data = new byte[1024 * 1024 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListening,The following statement contains a magic number: var data = new byte[1024 * 1024 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListening,The following statement contains a magic number: count.Should().Be(1024 * 1024 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListening,The following statement contains a magic number: count.Should().Be(1024 * 1024 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListening,The following statement contains a magic number: count.Should().Be(1024 * 1024 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToPolling,The following statement contains a magic number: var data = new byte[1024 * 1024 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToPolling,The following statement contains a magic number: var data = new byte[1024 * 1024 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToPolling,The following statement contains a magic number: var data = new byte[1024 * 1024 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToPolling,The following statement contains a magic number: count.Should().Be(1024 * 1024 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToPolling,The following statement contains a magic number: count.Should().Be(1024 * 1024 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToPolling,The following statement contains a magic number: count.Should().Be(1024 * 1024 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.MethodReturningVoid(12' 14);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.MethodReturningVoid(12' 14);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.Add(1' 2).Should().Be(3);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.Add(1' 2).Should().Be(3);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.Add(1.00' 2.00).Should().Be(3.00);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.Add(1.00' 2.00).Should().Be(3.00);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.Add(1.10M' 2.10M).Should().Be(3.20M);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.Add(1.10M' 2.10M).Should().Be(3.20M);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,SupportsDifferentServiceContractMethods,The following statement contains a magic number: echo.Add(1.10M' 2.10M).Should().Be(3.20M);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: var data = new byte[1024 * 1024 * 16 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: var data = new byte[1024 * 1024 * 16 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: var data = new byte[1024 * 1024 * 16 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: var data = new byte[1024 * 1024 * 16 + 15];
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: count.Should().Be(1024 * 1024 * 16 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: count.Should().Be(1024 * 1024 * 16 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: count.Should().Be(1024 * 1024 * 16 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: count.Should().Be(1024 * 1024 * 16 + 15);
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,StreamsCanBeSentToListeningWithProgressReporting,The following statement contains a magic number: progressReported.Should().ContainInOrder(Enumerable.Range(1' 100));
Magic Number,Halibut.Tests,UsageFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\UsageFixture.cs,ConnectingOverHttpShouldFailQuickly,The following statement contains a magic number: !task.Wait(5000)
Magic Number,Halibut.Tests.TestServices,EchoService,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\EchoService.cs,LongRunningOperation,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,Halibut.Tests.TestServices,EchoService,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\TestServices\EchoService.cs,LongRunningOperation,The following statement contains a magic number: return 12;
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskCompletesWithinTimeout_TaskCompletesSuccessfully,The following statement contains a magic number: var task = Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(100));                  triggered = true;              });
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskCompletesWithinTimeout_TaskCompletesSuccessfully,The following statement contains a magic number: await task.TimeoutAfter(TimeSpan.FromMilliseconds(300)' CancellationToken.None);
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskDoesNotCompleteWithinTimeout_ThrowsTimeoutException,The following statement contains a magic number: var task = Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(200));                  triggered = true;              });
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskDoesNotCompleteWithinTimeout_ThrowsTimeoutException,The following statement contains a magic number: Func<Task> act = async () => await task.TimeoutAfter(TimeSpan.FromMilliseconds(100)' CancellationToken.None);
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskDoesNotCompleteWithinTimeout_ThrowsTimeoutException,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCancelled_ThrowsTaskCanceledException,The following statement contains a magic number: Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(100));                  cancellationTokenSource.Cancel();              });
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCancelled_ThrowsTaskCanceledException,The following statement contains a magic number: var task = Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(200));                  triggered = true;              });
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCancelled_ThrowsTaskCanceledException,The following statement contains a magic number: Func<Task> act = async () => await task.TimeoutAfter(TimeSpan.FromMilliseconds(150)' cancellationTokenSource.Token);
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCancelled_ThrowsTaskCanceledException,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskThrowsExceptionAfterTimeout_ExceptionsAreObserved,The following statement contains a magic number: await VerifyNoUnobservedExceptions<TimeoutException>(Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(200));                  throw new ApplicationException("this task threw an exception after timeout");              }).TimeoutAfter(TimeSpan.FromMilliseconds(100)' CancellationToken.None));
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskThrowsExceptionAfterTimeout_ExceptionsAreObserved,The following statement contains a magic number: await VerifyNoUnobservedExceptions<TimeoutException>(Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(200));                  throw new ApplicationException("this task threw an exception after timeout");              }).TimeoutAfter(TimeSpan.FromMilliseconds(100)' CancellationToken.None));
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCanceledButStillThrowsExceptionAfterCancellation_ExceptionsAreObserved,The following statement contains a magic number: Task.Run(async () =>  #pragma warning restore 4014              {                  await Task.Delay(TimeSpan.FromMilliseconds(100));                  cancellationTokenSource.Cancel();              });
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCanceledButStillThrowsExceptionAfterCancellation_ExceptionsAreObserved,The following statement contains a magic number: await VerifyNoUnobservedExceptions<TaskCanceledException>(Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(200));                  throw new ApplicationException("this task threw an exception after timeout");              }).TimeoutAfter(TimeSpan.FromMilliseconds(150)' cancellationTokenSource.Token));
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,When_TaskGetsCanceledButStillThrowsExceptionAfterCancellation_ExceptionsAreObserved,The following statement contains a magic number: await VerifyNoUnobservedExceptions<TaskCanceledException>(Task.Run(async () =>              {                  await Task.Delay(TimeSpan.FromMilliseconds(200));                  throw new ApplicationException("this task threw an exception after timeout");              }).TimeoutAfter(TimeSpan.FromMilliseconds(150)' cancellationTokenSource.Token));
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,VerifyNoUnobservedExceptions,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Halibut.Tests.Util.AsyncEx,TaskExtensionsFixture,C:\research\architectureSmells\repos\OctopusDeploy_Halibut\source\Halibut.Tests\Util\AsyncEx\TaskExtensionsFixture.cs,VerifyNoUnobservedExceptions,The following statement contains a magic number: mre.WaitOne(2000)
