Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ProcessDirectoryListingRequest,Cyclomatic complexity of the method is 9
Long Identifier,Cassini,Host,C:\repos\AustinWise_m2net\m2net.Asp\Host.cs,,The length of the parameter _lowerCasedVirtualPathWithTrailingSlash is 39.
Long Identifier,Cassini,Host,C:\repos\AustinWise_m2net\m2net.Asp\Host.cs,,The length of the parameter _lowerCasedClientScriptPathWithTrailingSlash is 44.
Long Statement,Cassini,Host,C:\repos\AustinWise_m2net\m2net.Asp\Host.cs,Configure,The length of the statement  "            _lowerCasedVirtualPathWithTrailingSlash = virtualPath.EndsWith("/"' StringComparison.Ordinal) ? virtualPath : virtualPath + "/"; " is 128.
Long Statement,Cassini,Host,C:\repos\AustinWise_m2net\m2net.Asp\Host.cs,Configure,The length of the statement  "            _lowerCasedVirtualPathWithTrailingSlash = CultureInfo.InvariantCulture.TextInfo.ToLower(_lowerCasedVirtualPathWithTrailingSlash); " is 129.
Long Statement,Cassini,Host,C:\repos\AustinWise_m2net\m2net.Asp\Host.cs,Configure,The length of the statement  "            _lowerCasedClientScriptPathWithTrailingSlash = CultureInfo.InvariantCulture.TextInfo.ToLower(HttpRuntime.AspClientScriptVirtualPath + "/"); " is 139.
Long Statement,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,Process,The length of the statement  "                _connection.WriteEntireResponseFromFile(_host.PhysicalClientScriptPath + _path.Substring(_host.NormalizedClientScriptPath.Length)' false); " is 138.
Long Statement,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,MapPath,The length of the statement  "            if (mappedPath.Length > 0 && mappedPath[mappedPath.Length - 1] == Path.DirectorySeparatorChar && !mappedPath.EndsWith(":" + Path.DirectorySeparatorChar' StringComparison.Ordinal)) " is 179.
Long Statement,Cassini,Server,C:\repos\AustinWise_m2net\m2net.Asp\Server.cs,CreateWorkerAppDomainWithHost,The length of the statement  "                Console.WriteLine("m2net.AspNetHandler.dll needs to either be put into the GAC or the directory containing it has to be put on"); " is 129.
Empty Catch Block,Cassini,Connection,C:\repos\AustinWise_m2net\m2net.Asp\Connection.cs,WriteEntireResponseFromString,The method has an empty catch block.
Empty Catch Block,Cassini,Connection,C:\repos\AustinWise_m2net\m2net.Asp\Connection.cs,WriteEntireResponseFromFile,The method has an empty catch block.
Empty Catch Block,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ParsePostedContent,The method has an empty catch block.
Empty Catch Block,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ProcessDirectoryListingRequest,The method has an empty catch block.
Empty Catch Block,Cassini,Server,C:\repos\AustinWise_m2net\m2net.Asp\Server.cs,Stop,The method has an empty catch block.
Empty Catch Block,Cassini,Server,C:\repos\AustinWise_m2net\m2net.Asp\Server.cs,Stop,The method has an empty catch block.
Magic Number,Cassini,Connection,C:\repos\AustinWise_m2net\m2net.Asp\Connection.cs,Write100Continue,The following statement contains a magic number: WriteEntireResponseFromString(100' null' null' true);
Magic Number,Cassini,Connection,C:\repos\AustinWise_m2net\m2net.Asp\Connection.cs,WriteEntireResponseFromFile,The following statement contains a magic number: if (!File.Exists(fileName))              {                  WriteErrorAndClose(404);                  return;              }
Magic Number,Cassini,Connection,C:\repos\AustinWise_m2net\m2net.Asp\Connection.cs,WriteEntireResponseFromFile,The following statement contains a magic number: if (contentTypeHeader == null)              {                  WriteErrorAndClose(403);                  return;              }
Magic Number,Cassini,Connection,C:\repos\AustinWise_m2net\m2net.Asp\Connection.cs,WriteEntireResponseFromFile,The following statement contains a magic number: try              {                  fs = new FileStream(fileName' FileMode.Open' FileAccess.Read' FileShare.Read);                  int len = (int)fs.Length;                  byte[] fileBytes = new byte[len];                  int bytesRead = fs.Read(fileBytes' 0' len);                    String headers = MakeResponseHeaders(200' contentTypeHeader' bytesRead' keepAlive);                  byte[] headerBytes = Encoding.ASCII.GetBytes(headers);                    _server.Mongrel2Connection.Reply(_mongrel2Request' headerBytes);                  _server.Mongrel2Connection.Reply(_mongrel2Request' fileBytes);                    completed = true;              }              catch (SocketException)              {              }              finally              {                  if (!keepAlive || !completed)                      Close();                    if (fs != null)                      fs.Close();              }
Magic Number,Cassini,Host,C:\repos\AustinWise_m2net\m2net.Asp\Host.cs,WaitForPendingCallsToFinish,The following statement contains a magic number: for (; ; )              {                  if (_pendingCallsCount <= 0)                      break;                    Thread.Sleep(250);              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,Process,The following statement contains a magic number: if (IsRequestForRestrictedDirectory())              {                  _connection.WriteErrorAndClose(403);                  return;              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,TryParseRequest,The following statement contains a magic number: if (IsBadPath())              {                  _connection.WriteErrorAndClose(400);                  return false;              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,TryParseRequest,The following statement contains a magic number: if (!_host.IsVirtualPathInApp(_path' out _isClientScriptPath))              {                  _connection.WriteErrorAndClose(404);                  return false;              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ParseHeaders,The following statement contains a magic number: int n = headers.Count / 2;
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ParseHeaders,The following statement contains a magic number: for (int i = 0; i < n; i++)              {                  _unknownRequestHeaders[i] = new string[2];                  _unknownRequestHeaders[i][0] = headers[j++];                  _unknownRequestHeaders[i][1] = headers[j++];              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ProcessDirectoryListingRequest,The following statement contains a magic number: if (!_path.EndsWith("/"' StringComparison.Ordinal))              {                  string newPath = _path + "/";                  string location = "Location: " + UrlEncodeRedirect(newPath) + "\r\n";                  string body = "<html><head><title>Object moved</title></head><body>\r\n" +                                "<h2>Object moved to <a href='" + newPath + "'>here</a>.</h2>\r\n" +                                "</body></html>\r\n";                    _connection.WriteEntireResponseFromString(302' location' body' false);                  return true;              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ProcessDirectoryListingRequest,The following statement contains a magic number: if (_path.Length > 1)              {                  int i = _path.LastIndexOf('/'' _path.Length - 2);                    parentPath = (i > 0) ? _path.Substring(0' i) : "/";                  if (!_host.IsVirtualPathInApp(parentPath))                  {                      parentPath = null;                  }              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,ProcessDirectoryListingRequest,The following statement contains a magic number: _connection.WriteEntireResponseFromString(200' "Content-type: text/html; charset=utf-8\r\n"'                                                        Messages.FormatDirectoryListing(_path' parentPath' infos)'                                                        false);
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,UrlEncodeRedirect,The following statement contains a magic number: if (countNonAscii > 0)              {                  // expand not 'safe' characters into %XX' spaces to +s                  byte[] expandedBytes = new byte[count + countNonAscii * 2];                  int pos = 0;                  for (int i = 0; i < count; i++)                  {                      byte b = bytes[i];                        if ((b & 0x80) == 0)                      {                          expandedBytes[pos++] = b;                      }                      else                      {                          expandedBytes[pos++] = (byte)'%';                          expandedBytes[pos++] = (byte)IntToHex[(b >> 4) & 0xf];                          expandedBytes[pos++] = (byte)IntToHex[b & 0xf];                      }                  }                    path = Encoding.ASCII.GetString(expandedBytes);              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,UrlEncodeRedirect,The following statement contains a magic number: if (countNonAscii > 0)              {                  // expand not 'safe' characters into %XX' spaces to +s                  byte[] expandedBytes = new byte[count + countNonAscii * 2];                  int pos = 0;                  for (int i = 0; i < count; i++)                  {                      byte b = bytes[i];                        if ((b & 0x80) == 0)                      {                          expandedBytes[pos++] = b;                      }                      else                      {                          expandedBytes[pos++] = (byte)'%';                          expandedBytes[pos++] = (byte)IntToHex[(b >> 4) & 0xf];                          expandedBytes[pos++] = (byte)IntToHex[b & 0xf];                      }                  }                    path = Encoding.ASCII.GetString(expandedBytes);              }
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,PrepareResponse,The following statement contains a magic number: _responseStatus = 200;
Magic Number,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,GetLocalPort,The following statement contains a magic number: return 80;
Magic Number,Cassini,Server,C:\repos\AustinWise_m2net\m2net.Asp\Server.cs,Start,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate              {                  while (!_shutdownInProgress)                  {                      try                      {                          m2net.Request acceptedSocket = _mongrel2Connection.Receive();                            ThreadPool.QueueUserWorkItem(delegate                          {                              if (!_shutdownInProgress)                              {                                  var conn = new Connection(this' acceptedSocket);                                    //// wait for at least some input                                  //if (conn.WaitForRequestBytes() == 0)                                  //{                                  //    conn.WriteErrorAndClose(400);                                  //    return;                                  //}                                    // find or create host                                  Host host = GetHost();                                  if (host == null)                                  {                                      conn.WriteErrorAndClose(500);                                      return;                                  }                                    // process request in worker app domain                                  host.ProcessRequest(conn);                              }                          });                      }                      catch                      {                          Thread.Sleep(100);                      }                  }              });
Magic Number,Cassini,Server,C:\repos\AustinWise_m2net\m2net.Asp\Server.cs,Start,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate              {                  while (!_shutdownInProgress)                  {                      try                      {                          m2net.Request acceptedSocket = _mongrel2Connection.Receive();                            ThreadPool.QueueUserWorkItem(delegate                          {                              if (!_shutdownInProgress)                              {                                  var conn = new Connection(this' acceptedSocket);                                    //// wait for at least some input                                  //if (conn.WaitForRequestBytes() == 0)                                  //{                                  //    conn.WriteErrorAndClose(400);                                  //    return;                                  //}                                    // find or create host                                  Host host = GetHost();                                  if (host == null)                                  {                                      conn.WriteErrorAndClose(500);                                      return;                                  }                                    // process request in worker app domain                                  host.ProcessRequest(conn);                              }                          });                      }                      catch                      {                          Thread.Sleep(100);                      }                  }              });
Magic Number,Cassini,Server,C:\repos\AustinWise_m2net\m2net.Asp\Server.cs,Stop,The following statement contains a magic number: try              {                  if (_host != null)                  {                      _host.Shutdown();                  }                    while (_host != null)                  {                      Thread.Sleep(100);                  }              }              catch              {              }              finally              {                  _host = null;              }
Magic Number,Cassini,Server,C:\repos\AustinWise_m2net\m2net.Asp\Server.cs,CreateWorkerAppDomainWithHost,The following statement contains a magic number: if (buildManagerHostType != null)              {                  //on the Microsoft .NET framework we can make sure the DLL is loaded into the ASP.NET AppDomain by                  //using this internal path.  A nice solution does not exist for Mono (as far as I can tell)' so this                  //DLL will just need to be in the probing path or in the GAC.                    var buildManagerHost = appManager.CreateObject(appId' buildManagerHostType' virtualPath' physicalPath' false);                    buildManagerHostType.InvokeMember(                      "RegisterAssembly"'                      BindingFlags.Instance | BindingFlags.InvokeMethod | BindingFlags.NonPublic'                      null'                      buildManagerHost'                      new object[2] { hostType.Assembly.FullName' hostType.Assembly.Location });              }
Missing Default,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,GetServerVariable,The following switch statement is missing a default case: switch (name)              {                  case "ALL_RAW":                      //this is may not be stricly correct' as it includes headers that mongrel2 adds in                      //and also this has not be checked to strictly conform to the format                      //that Casinni uses.                      s = string.Join("\r\n"' _connection.GetHeaders().Select(h => h.Key + ": " + h.Value).ToArray());                      break;                    case "SERVER_PROTOCOL":                      s = _prot;                      break;                    case "SERVER_SOFTWARE":                      s = "Cassini/" + Messages.VersionString;                      break;              }
Missing Default,Cassini,Request,C:\repos\AustinWise_m2net\m2net.Asp\Request.cs,SendKnownResponseHeader,The following switch statement is missing a default case: switch (index)              {                  case HttpWorkerRequest.HeaderServer:                  case HttpWorkerRequest.HeaderDate:                  case HttpWorkerRequest.HeaderConnection:                      // ignore these                      return;                  case HttpWorkerRequest.HeaderAcceptRanges:                      if (value == "bytes")                      {                          // use this header to detect when we're processing a static file                          _specialCaseStaticFileHeaders = true;                          return;                      }                      break;                  case HttpWorkerRequest.HeaderExpires:                  case HttpWorkerRequest.HeaderLastModified:                      if (_specialCaseStaticFileHeaders)                      {                          // NOTE: Ignore these for static files. These are generated                          //       by the StaticFileHandler' but they shouldn't be.                          return;                      }                      break;              }
