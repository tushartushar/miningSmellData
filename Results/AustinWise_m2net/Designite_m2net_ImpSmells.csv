Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,m2net,Connection,C:\repos\AustinWise_m2net\m2net\Connection.cs,Send,The method has 5 parameters. Parameters: uuid' conn_id' msg' offset' length
Long Parameter List,m2net,Connection,C:\repos\AustinWise_m2net\m2net\Connection.cs,ReplyHttp,The method has 5 parameters. Parameters: req' body' code' status' headers
Long Parameter List,m2net,Connection,C:\repos\AustinWise_m2net\m2net\Connection.cs,ReplyHttp,The method has 5 parameters. Parameters: req' body' code' status' headers
Long Parameter List,m2net,Connection,C:\repos\AustinWise_m2net\m2net\Connection.cs,ReplyHttp,The method has 5 parameters. Parameters: req' body' code' status' headers
Long Parameter List,m2net,Request,C:\repos\AustinWise_m2net\m2net\Request.cs,Request,The method has 5 parameters. Parameters: sender' conn_id' path' headers' body
Long Statement,m2net,ByteArrayExtensions,C:\repos\AustinWise_m2net\m2net\ByteArrayExtensions.cs,ParseNetstring,The length of the statement  "            return new ArraySegment<byte>[] { Substring(split[1]' 0' len)' Substring(split[1]' len + 1' split[1].Count - len - 1) }; " is 120.
Magic Number,m2net,ByteArrayExtensions,C:\repos\AustinWise_m2net\m2net\ByteArrayExtensions.cs,ParseNetstring,The following statement contains a magic number: var split = msg.Split(':'' 2);
Magic Number,m2net,Connection,C:\repos\AustinWise_m2net\m2net\Connection.cs,recvProc,The following statement contains a magic number: while (isRunning)              {                  int res = CTX.Poll(items' 1000 * 1000);                  if (res == 0)                      continue;                  foreach (byte[] data in reqs.RecvAll(ZMQ.SendRecvOpt.NOBLOCK))                  {                      if (data == null)                          continue;                      recvQ.Enqueue(data);                      itemsReadyToRecv.Set();                  }              }
Magic Number,m2net,Connection,C:\repos\AustinWise_m2net\m2net\Connection.cs,recvProc,The following statement contains a magic number: while (isRunning)              {                  int res = CTX.Poll(items' 1000 * 1000);                  if (res == 0)                      continue;                  foreach (byte[] data in reqs.RecvAll(ZMQ.SendRecvOpt.NOBLOCK))                  {                      if (data == null)                          continue;                      recvQ.Enqueue(data);                      itemsReadyToRecv.Set();                  }              }
Magic Number,m2net,NetString,C:\repos\AustinWise_m2net\m2net\NetString.cs,NetString,The following statement contains a magic number: this.ByteCount = sLengthEncoder.GetByteCount(mLengthStr) + 2 + byteCount;
Magic Number,m2net,Request,C:\repos\AustinWise_m2net\m2net\Request.cs,Parse,The following statement contains a magic number: var threeChunks = msg.Split(' '' 4);
Magic Number,m2net,Request,C:\repos\AustinWise_m2net\m2net\Request.cs,Parse,The following statement contains a magic number: var path = threeChunks[2].ToAsciiString();
Magic Number,m2net,Request,C:\repos\AustinWise_m2net\m2net\Request.cs,Parse,The following statement contains a magic number: var rest = threeChunks[3];
Magic Number,m2net,Tnetstring,C:\repos\AustinWise_m2net\m2net\Tnetstring.cs,TParsePayload,The following statement contains a magic number: var dataSplit = data.Split(':'' 2);
