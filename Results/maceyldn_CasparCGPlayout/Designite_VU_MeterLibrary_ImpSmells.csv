Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,Cyclomatic complexity of the method is 20
Complex Method,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,Cyclomatic complexity of the method is 17
Complex Method,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,Cyclomatic complexity of the method is 17
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The length of the statement  "		this.Size = new Size (Led.Width + LedSpacing * 2' (LedCount1 + LedCount2 + LedCount3) * (Led.Height + LedSpacing) + LedSpacing); " is 128.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The length of the statement  "		this.Size = new Size ((LedCount1 + LedCount2 + LedCount3) * (Led.Width + LedSpacing) + LedSpacing' Led.Height + LedSpacing * 2); " is 128.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The length of the statement  "			g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9)); " is 246.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The length of the statement  "	g.DrawLine (DialPen' (int)(DialRadiusLow * SinD + this.Width * 0.5)' (int)(DialRadiusLow * CosD + this.Height * 0.9)' (int)(DialRadiusHigh * SinD + this.Width * 0.5)' (int)(DialRadiusHigh * CosD + this.Height * 0.9)); " is 217.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The length of the statement  "		g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9)); " is 217.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The length of the statement  "			Rectangle current = new Rectangle (this.ClientRectangle.X + LedSpacing' this.ClientRectangle.Height - ((i + 1) * (Led.Height + LedSpacing))' Led.Width' Led.Height); " is 164.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The length of the statement  "			Rectangle current = new Rectangle (this.ClientRectangle.X + (i * (Led.Width + LedSpacing)) + LedSpacing' this.ClientRectangle.Y + LedSpacing' Led.Width' Led.Height); " is 165.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawBorder,The length of the statement  "	Rectangle Border = new Rectangle (this.ClientRectangle.X' this.ClientRectangle.Y' this.ClientRectangle.Width' this.ClientRectangle.Height); " is 139.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The length of the statement  "		curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9)); " is 136.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The length of the statement  "		curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9)); " is 141.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The length of the statement  "			g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9)); " is 246.
Long Statement,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The length of the statement  "			g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat); " is 157.
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: if (MeterAnalog) {  	this.Size = new Size (this.Width' (int)(this.Width * 0.8));  }  else if (Vertical) {  	this.Size = new Size (Led.Width + LedSpacing * 2' (LedCount1 + LedCount2 + LedCount3) * (Led.Height + LedSpacing) + LedSpacing);  }  else {  	this.Size = new Size ((LedCount1 + LedCount2 + LedCount3) * (Led.Width + LedSpacing) + LedSpacing' Led.Height + LedSpacing * 2);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: if (MeterAnalog) {  	this.Size = new Size (this.Width' (int)(this.Width * 0.8));  }  else if (Vertical) {  	this.Size = new Size (Led.Width + LedSpacing * 2' (LedCount1 + LedCount2 + LedCount3) * (Led.Height + LedSpacing) + LedSpacing);  }  else {  	this.Size = new Size ((LedCount1 + LedCount2 + LedCount3) * (Led.Width + LedSpacing) + LedSpacing' Led.Height + LedSpacing * 2);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: if (MeterAnalog) {  	this.Size = new Size (this.Width' (int)(this.Width * 0.8));  }  else if (Vertical) {  	this.Size = new Size (Led.Width + LedSpacing * 2' (LedCount1 + LedCount2 + LedCount3) * (Led.Height + LedSpacing) + LedSpacing);  }  else {  	this.Size = new Size ((LedCount1 + LedCount2 + LedCount3) * (Led.Width + LedSpacing) + LedSpacing' Led.Height + LedSpacing * 2);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: this.Size = new Size (this.Width' (int)(this.Width * 0.8));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: if (Vertical) {  	this.Size = new Size (Led.Width + LedSpacing * 2' (LedCount1 + LedCount2 + LedCount3) * (Led.Height + LedSpacing) + LedSpacing);  }  else {  	this.Size = new Size ((LedCount1 + LedCount2 + LedCount3) * (Led.Width + LedSpacing) + LedSpacing' Led.Height + LedSpacing * 2);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: if (Vertical) {  	this.Size = new Size (Led.Width + LedSpacing * 2' (LedCount1 + LedCount2 + LedCount3) * (Led.Height + LedSpacing) + LedSpacing);  }  else {  	this.Size = new Size ((LedCount1 + LedCount2 + LedCount3) * (Led.Width + LedSpacing) + LedSpacing' Led.Height + LedSpacing * 2);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: this.Size = new Size (Led.Width + LedSpacing * 2' (LedCount1 + LedCount2 + LedCount3) * (Led.Height + LedSpacing) + LedSpacing);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,CalcSize,The following statement contains a magic number: this.Size = new Size ((LedCount1 + LedCount2 + LedCount3) * (Led.Width + LedSpacing) + LedSpacing' Led.Height + LedSpacing * 2);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (UseLedLightInAnalog) {  	if (FormType == MeterScale.Log10) {  		calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	}  	if (FormType == MeterScale.Analog) {  		calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  		if (ShowLedPeakInAnalog)  			calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	}  	Double DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	double i;  	double SinI' CosI;  	Pen scalePen;  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  			scalePen = new Pen (Led3ColorOn' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOn' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOn' Led.Width);  		}  		else {  			scalePen = new Pen (Led3ColorOff' Led.Width);  			if (lc < LedCount1 + LedCount2)  				scalePen = new Pen (Led2ColorOff' Led.Width);  			if (lc < LedCount1)  				scalePen = new Pen (Led1ColorOff' Led.Width);  		}  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (FormType == MeterScale.Log10) {  	calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	if (ShowLedPeakInAnalog)  		calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (FormType == MeterScale.Log10) {  	calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	if (ShowLedPeakInAnalog)  		calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (ShowLedPeakInAnalog)  	calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (FormType == MeterScale.Analog) {  	calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	if (ShowLedPeakInAnalog)  		calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (FormType == MeterScale.Analog) {  	calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	if (ShowLedPeakInAnalog)  		calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (ShowLedPeakInAnalog)  	calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (!ShowTextInDial)  	LedRadiusStart = (int)(this.Width * 0.65);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: LedRadiusStart = (int)(this.Width * 0.65);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  		scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  	}  	else {  		scalePen = new Pen (Led3ColorOff' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOff' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOff' Led.Width);  	}  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  		scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  	}  	else {  		scalePen = new Pen (Led3ColorOff' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOff' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOff' Led.Width);  	}  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  		scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  	}  	else {  		scalePen = new Pen (Led3ColorOff' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOff' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOff' Led.Width);  	}  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  		scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  	}  	else {  		scalePen = new Pen (Led3ColorOff' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOff' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOff' Led.Width);  	}  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	if ((lc < calcValue) | (((lc + 1) == calcPeak) & ShowLedPeakInAnalog)) {  		scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  	}  	else {  		scalePen = new Pen (Led3ColorOff' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOff' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOff' Led.Width);  	}  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (FormType == MeterScale.Log10) {  	calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * Max);  	if (ShowPeak)  		calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * Max);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (FormType == MeterScale.Log10) {  	calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * Max);  	if (ShowPeak)  		calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * Max);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * Max);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (ShowPeak)  	calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * Max);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * Max);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (DialPen' (int)(DialRadiusLow * SinD + this.Width * 0.5)' (int)(DialRadiusLow * CosD + this.Height * 0.9)' (int)(DialRadiusHigh * SinD + this.Width * 0.5)' (int)(DialRadiusHigh * CosD + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (DialPen' (int)(DialRadiusLow * SinD + this.Width * 0.5)' (int)(DialRadiusLow * CosD + this.Height * 0.9)' (int)(DialRadiusHigh * SinD + this.Width * 0.5)' (int)(DialRadiusHigh * CosD + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (DialPen' (int)(DialRadiusLow * SinD + this.Width * 0.5)' (int)(DialRadiusLow * CosD + this.Height * 0.9)' (int)(DialRadiusHigh * SinD + this.Width * 0.5)' (int)(DialRadiusHigh * CosD + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (DialPen' (int)(DialRadiusLow * SinD + this.Width * 0.5)' (int)(DialRadiusLow * CosD + this.Height * 0.9)' (int)(DialRadiusHigh * SinD + this.Width * 0.5)' (int)(DialRadiusHigh * CosD + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (ShowPeak) {  	Pen PeakPen = new Pen (DialPeak' this.Width * 0.01f);  	if (calcPeak > 0)  		DialPos = DegHigh - (((double)calcPeak / Max) * (DegHigh - DegLow));  	else  		DialPos = DegHigh;  	Double SinP = Math.Sin (DialPos)' CosP = Math.Cos (DialPos);  	g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (ShowPeak) {  	Pen PeakPen = new Pen (DialPeak' this.Width * 0.01f);  	if (calcPeak > 0)  		DialPos = DegHigh - (((double)calcPeak / Max) * (DegHigh - DegLow));  	else  		DialPos = DegHigh;  	Double SinP = Math.Sin (DialPos)' CosP = Math.Cos (DialPos);  	g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (ShowPeak) {  	Pen PeakPen = new Pen (DialPeak' this.Width * 0.01f);  	if (calcPeak > 0)  		DialPos = DegHigh - (((double)calcPeak / Max) * (DegHigh - DegLow));  	else  		DialPos = DegHigh;  	Double SinP = Math.Sin (DialPos)' CosP = Math.Cos (DialPos);  	g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: if (ShowPeak) {  	Pen PeakPen = new Pen (DialPeak' this.Width * 0.01f);  	if (calcPeak > 0)  		DialPos = DegHigh - (((double)calcPeak / Max) * (DegHigh - DegLow));  	else  		DialPos = DegHigh;  	Double SinP = Math.Sin (DialPos)' CosP = Math.Cos (DialPos);  	g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogDial,The following statement contains a magic number: g.DrawLine (PeakPen' (int)(DialRadiusLow * SinP + this.Width * 0.5)' (int)(DialRadiusLow * CosP + this.Height * 0.9)' (int)(DialRadiusHigh * SinP + this.Width * 0.5)' (int)(DialRadiusHigh * CosP + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: if (FormType == MeterScale.Log10) {  	calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	if (ShowPeak)  		calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: if (FormType == MeterScale.Log10) {  	calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  	if (ShowPeak)  		calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: calcValue = (int)(Math.Log10 ((double)CurrentLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: if (ShowPeak)  	calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: calcPeak = (int)(Math.Log10 ((double)PeakLevel / (Max / 10) + 1) * (LedCount1 + LedCount2 + LedCount3));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: if (FormType == MeterScale.Analog) {  	calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	if (ShowPeak)  		calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: if (FormType == MeterScale.Analog) {  	calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  	if (ShowPeak)  		calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: calcValue = (int)(((double)CurrentLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: if (ShowPeak)  	calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The following statement contains a magic number: calcPeak = (int)(((double)PeakLevel / Max) * (LedCount1 + LedCount2 + LedCount3) + 0.5);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (int cp = 0; cp < 20; cp++) {  	i = i - DegStep;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  	curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [cp] = new PointF ((float)(SinI * this.Width * 0.7 + this.Width / 2)' (float)(CosI * this.Width * 0.7 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [38 - cp] = new PointF ((float)(SinI * this.Width * 0.3 + this.Width / 2)' (float)(CosI * this.Width * 0.3 + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: curvePoints [39] = curvePoints [0];  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!UseLedLightInAnalog) {  	DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		//Graphics scale = g.Graphics;  		Pen scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  		scalePen.Dispose ();  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!UseLedLightInAnalog) {  	DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		//Graphics scale = g.Graphics;  		Pen scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  		scalePen.Dispose ();  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!UseLedLightInAnalog) {  	DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		//Graphics scale = g.Graphics;  		Pen scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  		scalePen.Dispose ();  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!UseLedLightInAnalog) {  	DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		//Graphics scale = g.Graphics;  		Pen scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  		scalePen.Dispose ();  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!UseLedLightInAnalog) {  	DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		//Graphics scale = g.Graphics;  		Pen scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  		scalePen.Dispose ();  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!UseLedLightInAnalog) {  	DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		//Graphics scale = g.Graphics;  		Pen scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  		scalePen.Dispose ();  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!UseLedLightInAnalog) {  	DegStep = (DegHigh - DegLow) / (LedCount1 + LedCount2 + LedCount3 - 1);  	int lc = 0;  	int LedRadiusStart = (int)(this.Width * 0.6);  	if (!ShowTextInDial)  		LedRadiusStart = (int)(this.Width * 0.65);  	for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  		//Graphics scale = g.Graphics;  		Pen scalePen = new Pen (Led3ColorOn' Led.Width);  		if (lc < LedCount1 + LedCount2)  			scalePen = new Pen (Led2ColorOn' Led.Width);  		if (lc < LedCount1)  			scalePen = new Pen (Led1ColorOn' Led.Width);  		lc++;  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  		scalePen.Dispose ();  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (!ShowTextInDial)  	LedRadiusStart = (int)(this.Width * 0.65);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: LedRadiusStart = (int)(this.Width * 0.65);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	//Graphics scale = g.Graphics;  	Pen scalePen = new Pen (Led3ColorOn' Led.Width);  	if (lc < LedCount1 + LedCount2)  		scalePen = new Pen (Led2ColorOn' Led.Width);  	if (lc < LedCount1)  		scalePen = new Pen (Led1ColorOn' Led.Width);  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	scalePen.Dispose ();  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	//Graphics scale = g.Graphics;  	Pen scalePen = new Pen (Led3ColorOn' Led.Width);  	if (lc < LedCount1 + LedCount2)  		scalePen = new Pen (Led2ColorOn' Led.Width);  	if (lc < LedCount1)  		scalePen = new Pen (Led1ColorOn' Led.Width);  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	scalePen.Dispose ();  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	//Graphics scale = g.Graphics;  	Pen scalePen = new Pen (Led3ColorOn' Led.Width);  	if (lc < LedCount1 + LedCount2)  		scalePen = new Pen (Led2ColorOn' Led.Width);  	if (lc < LedCount1)  		scalePen = new Pen (Led1ColorOn' Led.Width);  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	scalePen.Dispose ();  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	//Graphics scale = g.Graphics;  	Pen scalePen = new Pen (Led3ColorOn' Led.Width);  	if (lc < LedCount1 + LedCount2)  		scalePen = new Pen (Led2ColorOn' Led.Width);  	if (lc < LedCount1)  		scalePen = new Pen (Led1ColorOn' Led.Width);  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	scalePen.Dispose ();  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DegStep / 2; i = i - DegStep) {  	//Graphics scale = g.Graphics;  	Pen scalePen = new Pen (Led3ColorOn' Led.Width);  	if (lc < LedCount1 + LedCount2)  		scalePen = new Pen (Led2ColorOn' Led.Width);  	if (lc < LedCount1)  		scalePen = new Pen (Led1ColorOn' Led.Width);  	lc++;  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  	scalePen.Dispose ();  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: g.DrawLine (scalePen' (int)((LedRadiusStart - Led.Height) * SinI + this.Width / 2)' (int)((LedRadiusStart - Led.Height) * CosI + this.Height * 0.9)' (int)(LedRadiusStart * SinI + this.Width / 2)' (int)(LedRadiusStart * CosI + this.Height * 0.9));  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (MeterFontSize < 4)  	MeterFontSize = 4;  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (MeterFontSize < 4)  	MeterFontSize = 4;  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: MeterFontSize = 4;  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (MeterFontSize > 72)  	MeterFontSize = 72;  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (MeterFontSize > 72)  	MeterFontSize = 72;  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: MeterFontSize = 72;  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: g.DrawString (this.MeterText' MeterFont' new SolidBrush (this.ForeColor)' this.Width / 2' this.Height * 0.43f' format);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (ShowDialText) {  	double DialTextStep = (DegHigh - DegLow) / (DialText.Length - 1);  	int dt = 0;  	MeterFontSize = MeterFontSize * 0.6f;  	int TextRadiusStart = (int)(this.Width * 0.64);  	for (i = DegHigh; i > DegLow - DialTextStep / 2; i = i - DialTextStep) {  		//Graphics scale = g.Graphics;  		Brush dtColor = new SolidBrush (DialTextHigh);  		StringFormat dtformat = new StringFormat ();  		dtformat.Alignment = StringAlignment.Center;  		dtformat.LineAlignment = StringAlignment.Center;  		try {  			if (int.Parse (DialText [dt]) < 0)  				dtColor = new SolidBrush (DialTextLow);  			if (int.Parse (DialText [dt]) == 0)  				dtColor = new SolidBrush (DialTextNeutral);  		}  		catch {  			dtColor = new SolidBrush (DialTextHigh);  		}  		Font dtfont = new Font (this.Font.FontFamily' MeterFontSize);  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (ShowDialText) {  	double DialTextStep = (DegHigh - DegLow) / (DialText.Length - 1);  	int dt = 0;  	MeterFontSize = MeterFontSize * 0.6f;  	int TextRadiusStart = (int)(this.Width * 0.64);  	for (i = DegHigh; i > DegLow - DialTextStep / 2; i = i - DialTextStep) {  		//Graphics scale = g.Graphics;  		Brush dtColor = new SolidBrush (DialTextHigh);  		StringFormat dtformat = new StringFormat ();  		dtformat.Alignment = StringAlignment.Center;  		dtformat.LineAlignment = StringAlignment.Center;  		try {  			if (int.Parse (DialText [dt]) < 0)  				dtColor = new SolidBrush (DialTextLow);  			if (int.Parse (DialText [dt]) == 0)  				dtColor = new SolidBrush (DialTextNeutral);  		}  		catch {  			dtColor = new SolidBrush (DialTextHigh);  		}  		Font dtfont = new Font (this.Font.FontFamily' MeterFontSize);  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (ShowDialText) {  	double DialTextStep = (DegHigh - DegLow) / (DialText.Length - 1);  	int dt = 0;  	MeterFontSize = MeterFontSize * 0.6f;  	int TextRadiusStart = (int)(this.Width * 0.64);  	for (i = DegHigh; i > DegLow - DialTextStep / 2; i = i - DialTextStep) {  		//Graphics scale = g.Graphics;  		Brush dtColor = new SolidBrush (DialTextHigh);  		StringFormat dtformat = new StringFormat ();  		dtformat.Alignment = StringAlignment.Center;  		dtformat.LineAlignment = StringAlignment.Center;  		try {  			if (int.Parse (DialText [dt]) < 0)  				dtColor = new SolidBrush (DialTextLow);  			if (int.Parse (DialText [dt]) == 0)  				dtColor = new SolidBrush (DialTextNeutral);  		}  		catch {  			dtColor = new SolidBrush (DialTextHigh);  		}  		Font dtfont = new Font (this.Font.FontFamily' MeterFontSize);  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: if (ShowDialText) {  	double DialTextStep = (DegHigh - DegLow) / (DialText.Length - 1);  	int dt = 0;  	MeterFontSize = MeterFontSize * 0.6f;  	int TextRadiusStart = (int)(this.Width * 0.64);  	for (i = DegHigh; i > DegLow - DialTextStep / 2; i = i - DialTextStep) {  		//Graphics scale = g.Graphics;  		Brush dtColor = new SolidBrush (DialTextHigh);  		StringFormat dtformat = new StringFormat ();  		dtformat.Alignment = StringAlignment.Center;  		dtformat.LineAlignment = StringAlignment.Center;  		try {  			if (int.Parse (DialText [dt]) < 0)  				dtColor = new SolidBrush (DialTextLow);  			if (int.Parse (DialText [dt]) == 0)  				dtColor = new SolidBrush (DialTextNeutral);  		}  		catch {  			dtColor = new SolidBrush (DialTextHigh);  		}  		Font dtfont = new Font (this.Font.FontFamily' MeterFontSize);  		SinI = Math.Sin (i);  		CosI = Math.Cos (i);  		g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  	}  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DialTextStep / 2; i = i - DialTextStep) {  	//Graphics scale = g.Graphics;  	Brush dtColor = new SolidBrush (DialTextHigh);  	StringFormat dtformat = new StringFormat ();  	dtformat.Alignment = StringAlignment.Center;  	dtformat.LineAlignment = StringAlignment.Center;  	try {  		if (int.Parse (DialText [dt]) < 0)  			dtColor = new SolidBrush (DialTextLow);  		if (int.Parse (DialText [dt]) == 0)  			dtColor = new SolidBrush (DialTextNeutral);  	}  	catch {  		dtColor = new SolidBrush (DialTextHigh);  	}  	Font dtfont = new Font (this.Font.FontFamily' MeterFontSize);  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DialTextStep / 2; i = i - DialTextStep) {  	//Graphics scale = g.Graphics;  	Brush dtColor = new SolidBrush (DialTextHigh);  	StringFormat dtformat = new StringFormat ();  	dtformat.Alignment = StringAlignment.Center;  	dtformat.LineAlignment = StringAlignment.Center;  	try {  		if (int.Parse (DialText [dt]) < 0)  			dtColor = new SolidBrush (DialTextLow);  		if (int.Parse (DialText [dt]) == 0)  			dtColor = new SolidBrush (DialTextNeutral);  	}  	catch {  		dtColor = new SolidBrush (DialTextHigh);  	}  	Font dtfont = new Font (this.Font.FontFamily' MeterFontSize);  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: for (i = DegHigh; i > DegLow - DialTextStep / 2; i = i - DialTextStep) {  	//Graphics scale = g.Graphics;  	Brush dtColor = new SolidBrush (DialTextHigh);  	StringFormat dtformat = new StringFormat ();  	dtformat.Alignment = StringAlignment.Center;  	dtformat.LineAlignment = StringAlignment.Center;  	try {  		if (int.Parse (DialText [dt]) < 0)  			dtColor = new SolidBrush (DialTextLow);  		if (int.Parse (DialText [dt]) == 0)  			dtColor = new SolidBrush (DialTextNeutral);  	}  	catch {  		dtColor = new SolidBrush (DialTextHigh);  	}  	Font dtfont = new Font (this.Font.FontFamily' MeterFontSize);  	SinI = Math.Sin (i);  	CosI = Math.Cos (i);  	g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  }  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  
Magic Number,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawAnalogBorder,The following statement contains a magic number: g.DrawString (DialText [dt++]' dtfont' dtColor' (int)(TextRadiusStart * SinI + this.Width / 2)' (int)(TextRadiusStart * CosI + this.Height * 0.9)' dtformat);  
Duplicate Code,CasparCGPlayout.Components,VuMeter,C:\repos\maceyldn_CasparCGPlayout\CasparCGPlayout\components\VU_MeterLibrary\VU_Meter.cs,DrawLeds,The method contains a code clone-set at the following line numbers (starting from the method definition): ((16' 37)' (41' 62))
