Implementation smell,Namespace,Class,File,Method,Description
Long Method,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The method has 106 lines of code.
Long Parameter List,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The method has 14 parameters.
Long Statement,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,ParseDate,The length of the statement  "	if (DateTime.TryParseExact (cleanedUpDate' "yyyy-MM-dd hh:mm:ss.fff"' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal' out date)) { " is 144.
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: subTitleColumn.MinimumWidth = 50;  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: subTitleColumn.FillWeight = 65;  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: summaryColumn.MinimumWidth = 50;  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: summaryColumn.FillWeight = 200;  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: timer = new Timer {  	Enabled = true'  	Interval = 500  };  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: timer.Elapsed += (sender' e) =>  {  	timer.Stop ();  	try {  		if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  			UpdateAuthorisationDetails ();  		}  		var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  		var client = new AppHarborClient (authInfo);  		var applications = client.GetApplications ();  		if (applications == null || applications.Count () == 0)  			return;  		var application = applications.First ();  		var builds = client.GetBuilds (application.Slug);  		var errors = client.GetErrors (application.Slug);  		if (errors != null && errors.Count () > 0) {  			var errorInfo = errors.Take (10).Select (x => new {  				//2012-07-03T00:36:44.292Z  				Date = ParseDate (x.Date).ToString ()'  				Value = x.Exception.Message  			}).ToList ();  			if (_formHasBeenShown) {  				dataGridViewErrors.Invoke ((Action)delegate {  					dataGridViewErrors.DataSource = errorInfo;  					dataGridViewErrors.Show ();  				});  			}  		}  		//var tests = client.GetTests(application.Slug' build.Id);  		var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  		.FirstOrDefault ();  		if (latestBuild == null)  			return;  		var currentBuildStatus = GetBuildStatus (latestBuild.Status);  		SetNotifyIcon (currentBuildStatus);  		if (currentBuildStatus != _lastBuildStatus) {  			string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  			if (String.IsNullOrEmpty (msg) == false)  				notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  		}  		if (_formHasBeenShown) {  			UpdateBuildUI (application' latestBuild' currentBuildStatus);  		}  		else {  			//Store the info' so when the form is popped up' we can populate it??  		}  		if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  			//We only really care about failed/succeeded changes  			_lastBuildStatus = currentBuildStatus;  		}  	}  	catch (System.Exception ex) {  		notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  	}  	finally {  		#if DEBUG  		timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  		#else  		                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  		timer.Start ();  	}  };  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: timer.Elapsed += (sender' e) =>  {  	timer.Stop ();  	try {  		if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  			UpdateAuthorisationDetails ();  		}  		var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  		var client = new AppHarborClient (authInfo);  		var applications = client.GetApplications ();  		if (applications == null || applications.Count () == 0)  			return;  		var application = applications.First ();  		var builds = client.GetBuilds (application.Slug);  		var errors = client.GetErrors (application.Slug);  		if (errors != null && errors.Count () > 0) {  			var errorInfo = errors.Take (10).Select (x => new {  				//2012-07-03T00:36:44.292Z  				Date = ParseDate (x.Date).ToString ()'  				Value = x.Exception.Message  			}).ToList ();  			if (_formHasBeenShown) {  				dataGridViewErrors.Invoke ((Action)delegate {  					dataGridViewErrors.DataSource = errorInfo;  					dataGridViewErrors.Show ();  				});  			}  		}  		//var tests = client.GetTests(application.Slug' build.Id);  		var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  		.FirstOrDefault ();  		if (latestBuild == null)  			return;  		var currentBuildStatus = GetBuildStatus (latestBuild.Status);  		SetNotifyIcon (currentBuildStatus);  		if (currentBuildStatus != _lastBuildStatus) {  			string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  			if (String.IsNullOrEmpty (msg) == false)  				notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  		}  		if (_formHasBeenShown) {  			UpdateBuildUI (application' latestBuild' currentBuildStatus);  		}  		else {  			//Store the info' so when the form is popped up' we can populate it??  		}  		if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  			//We only really care about failed/succeeded changes  			_lastBuildStatus = currentBuildStatus;  		}  	}  	catch (System.Exception ex) {  		notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  	}  	finally {  		#if DEBUG  		timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  		#else  		                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  		timer.Start ();  	}  };  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: timer.Elapsed += (sender' e) =>  {  	timer.Stop ();  	try {  		if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  			UpdateAuthorisationDetails ();  		}  		var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  		var client = new AppHarborClient (authInfo);  		var applications = client.GetApplications ();  		if (applications == null || applications.Count () == 0)  			return;  		var application = applications.First ();  		var builds = client.GetBuilds (application.Slug);  		var errors = client.GetErrors (application.Slug);  		if (errors != null && errors.Count () > 0) {  			var errorInfo = errors.Take (10).Select (x => new {  				//2012-07-03T00:36:44.292Z  				Date = ParseDate (x.Date).ToString ()'  				Value = x.Exception.Message  			}).ToList ();  			if (_formHasBeenShown) {  				dataGridViewErrors.Invoke ((Action)delegate {  					dataGridViewErrors.DataSource = errorInfo;  					dataGridViewErrors.Show ();  				});  			}  		}  		//var tests = client.GetTests(application.Slug' build.Id);  		var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  		.FirstOrDefault ();  		if (latestBuild == null)  			return;  		var currentBuildStatus = GetBuildStatus (latestBuild.Status);  		SetNotifyIcon (currentBuildStatus);  		if (currentBuildStatus != _lastBuildStatus) {  			string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  			if (String.IsNullOrEmpty (msg) == false)  				notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  		}  		if (_formHasBeenShown) {  			UpdateBuildUI (application' latestBuild' currentBuildStatus);  		}  		else {  			//Store the info' so when the form is popped up' we can populate it??  		}  		if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  			//We only really care about failed/succeeded changes  			_lastBuildStatus = currentBuildStatus;  		}  	}  	catch (System.Exception ex) {  		notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  	}  	finally {  		#if DEBUG  		timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  		#else  		                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  		timer.Start ();  	}  };  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: timer.Elapsed += (sender' e) =>  {  	timer.Stop ();  	try {  		if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  			UpdateAuthorisationDetails ();  		}  		var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  		var client = new AppHarborClient (authInfo);  		var applications = client.GetApplications ();  		if (applications == null || applications.Count () == 0)  			return;  		var application = applications.First ();  		var builds = client.GetBuilds (application.Slug);  		var errors = client.GetErrors (application.Slug);  		if (errors != null && errors.Count () > 0) {  			var errorInfo = errors.Take (10).Select (x => new {  				//2012-07-03T00:36:44.292Z  				Date = ParseDate (x.Date).ToString ()'  				Value = x.Exception.Message  			}).ToList ();  			if (_formHasBeenShown) {  				dataGridViewErrors.Invoke ((Action)delegate {  					dataGridViewErrors.DataSource = errorInfo;  					dataGridViewErrors.Show ();  				});  			}  		}  		//var tests = client.GetTests(application.Slug' build.Id);  		var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  		.FirstOrDefault ();  		if (latestBuild == null)  			return;  		var currentBuildStatus = GetBuildStatus (latestBuild.Status);  		SetNotifyIcon (currentBuildStatus);  		if (currentBuildStatus != _lastBuildStatus) {  			string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  			if (String.IsNullOrEmpty (msg) == false)  				notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  		}  		if (_formHasBeenShown) {  			UpdateBuildUI (application' latestBuild' currentBuildStatus);  		}  		else {  			//Store the info' so when the form is popped up' we can populate it??  		}  		if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  			//We only really care about failed/succeeded changes  			_lastBuildStatus = currentBuildStatus;  		}  	}  	catch (System.Exception ex) {  		notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  	}  	finally {  		#if DEBUG  		timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  		#else  		                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  		timer.Start ();  	}  };  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: try {  	if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  		UpdateAuthorisationDetails ();  	}  	var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  	var client = new AppHarborClient (authInfo);  	var applications = client.GetApplications ();  	if (applications == null || applications.Count () == 0)  		return;  	var application = applications.First ();  	var builds = client.GetBuilds (application.Slug);  	var errors = client.GetErrors (application.Slug);  	if (errors != null && errors.Count () > 0) {  		var errorInfo = errors.Take (10).Select (x => new {  			//2012-07-03T00:36:44.292Z  			Date = ParseDate (x.Date).ToString ()'  			Value = x.Exception.Message  		}).ToList ();  		if (_formHasBeenShown) {  			dataGridViewErrors.Invoke ((Action)delegate {  				dataGridViewErrors.DataSource = errorInfo;  				dataGridViewErrors.Show ();  			});  		}  	}  	//var tests = client.GetTests(application.Slug' build.Id);  	var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  	.FirstOrDefault ();  	if (latestBuild == null)  		return;  	var currentBuildStatus = GetBuildStatus (latestBuild.Status);  	SetNotifyIcon (currentBuildStatus);  	if (currentBuildStatus != _lastBuildStatus) {  		string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  		if (String.IsNullOrEmpty (msg) == false)  			notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  	}  	if (_formHasBeenShown) {  		UpdateBuildUI (application' latestBuild' currentBuildStatus);  	}  	else {  		//Store the info' so when the form is popped up' we can populate it??  	}  	if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  		//We only really care about failed/succeeded changes  		_lastBuildStatus = currentBuildStatus;  	}  }  catch (System.Exception ex) {  	notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  }  finally {  	#if DEBUG  	timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  	#else  	                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  	timer.Start ();  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: try {  	if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  		UpdateAuthorisationDetails ();  	}  	var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  	var client = new AppHarborClient (authInfo);  	var applications = client.GetApplications ();  	if (applications == null || applications.Count () == 0)  		return;  	var application = applications.First ();  	var builds = client.GetBuilds (application.Slug);  	var errors = client.GetErrors (application.Slug);  	if (errors != null && errors.Count () > 0) {  		var errorInfo = errors.Take (10).Select (x => new {  			//2012-07-03T00:36:44.292Z  			Date = ParseDate (x.Date).ToString ()'  			Value = x.Exception.Message  		}).ToList ();  		if (_formHasBeenShown) {  			dataGridViewErrors.Invoke ((Action)delegate {  				dataGridViewErrors.DataSource = errorInfo;  				dataGridViewErrors.Show ();  			});  		}  	}  	//var tests = client.GetTests(application.Slug' build.Id);  	var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  	.FirstOrDefault ();  	if (latestBuild == null)  		return;  	var currentBuildStatus = GetBuildStatus (latestBuild.Status);  	SetNotifyIcon (currentBuildStatus);  	if (currentBuildStatus != _lastBuildStatus) {  		string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  		if (String.IsNullOrEmpty (msg) == false)  			notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  	}  	if (_formHasBeenShown) {  		UpdateBuildUI (application' latestBuild' currentBuildStatus);  	}  	else {  		//Store the info' so when the form is popped up' we can populate it??  	}  	if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  		//We only really care about failed/succeeded changes  		_lastBuildStatus = currentBuildStatus;  	}  }  catch (System.Exception ex) {  	notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  }  finally {  	#if DEBUG  	timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  	#else  	                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  	timer.Start ();  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: try {  	if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  		UpdateAuthorisationDetails ();  	}  	var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  	var client = new AppHarborClient (authInfo);  	var applications = client.GetApplications ();  	if (applications == null || applications.Count () == 0)  		return;  	var application = applications.First ();  	var builds = client.GetBuilds (application.Slug);  	var errors = client.GetErrors (application.Slug);  	if (errors != null && errors.Count () > 0) {  		var errorInfo = errors.Take (10).Select (x => new {  			//2012-07-03T00:36:44.292Z  			Date = ParseDate (x.Date).ToString ()'  			Value = x.Exception.Message  		}).ToList ();  		if (_formHasBeenShown) {  			dataGridViewErrors.Invoke ((Action)delegate {  				dataGridViewErrors.DataSource = errorInfo;  				dataGridViewErrors.Show ();  			});  		}  	}  	//var tests = client.GetTests(application.Slug' build.Id);  	var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  	.FirstOrDefault ();  	if (latestBuild == null)  		return;  	var currentBuildStatus = GetBuildStatus (latestBuild.Status);  	SetNotifyIcon (currentBuildStatus);  	if (currentBuildStatus != _lastBuildStatus) {  		string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  		if (String.IsNullOrEmpty (msg) == false)  			notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  	}  	if (_formHasBeenShown) {  		UpdateBuildUI (application' latestBuild' currentBuildStatus);  	}  	else {  		//Store the info' so when the form is popped up' we can populate it??  	}  	if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  		//We only really care about failed/succeeded changes  		_lastBuildStatus = currentBuildStatus;  	}  }  catch (System.Exception ex) {  	notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  }  finally {  	#if DEBUG  	timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  	#else  	                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  	timer.Start ();  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: try {  	if (String.IsNullOrWhiteSpace (Settings.Default.AccessToken)) {  		UpdateAuthorisationDetails ();  	}  	var authInfo = new AuthInfo (Settings.Default.AccessToken' Settings.Default.TokenType);  	var client = new AppHarborClient (authInfo);  	var applications = client.GetApplications ();  	if (applications == null || applications.Count () == 0)  		return;  	var application = applications.First ();  	var builds = client.GetBuilds (application.Slug);  	var errors = client.GetErrors (application.Slug);  	if (errors != null && errors.Count () > 0) {  		var errorInfo = errors.Take (10).Select (x => new {  			//2012-07-03T00:36:44.292Z  			Date = ParseDate (x.Date).ToString ()'  			Value = x.Exception.Message  		}).ToList ();  		if (_formHasBeenShown) {  			dataGridViewErrors.Invoke ((Action)delegate {  				dataGridViewErrors.DataSource = errorInfo;  				dataGridViewErrors.Show ();  			});  		}  	}  	//var tests = client.GetTests(application.Slug' build.Id);  	var latestBuild = builds.OrderByDescending (x => x.Created)//.Skip(1)  	.FirstOrDefault ();  	if (latestBuild == null)  		return;  	var currentBuildStatus = GetBuildStatus (latestBuild.Status);  	SetNotifyIcon (currentBuildStatus);  	if (currentBuildStatus != _lastBuildStatus) {  		string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  		if (String.IsNullOrEmpty (msg) == false)  			notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  	}  	if (_formHasBeenShown) {  		UpdateBuildUI (application' latestBuild' currentBuildStatus);  	}  	else {  		//Store the info' so when the form is popped up' we can populate it??  	}  	if (currentBuildStatus == BuildStatus.Succeeded || currentBuildStatus == BuildStatus.Failed) {  		//We only really care about failed/succeeded changes  		_lastBuildStatus = currentBuildStatus;  	}  }  catch (System.Exception ex) {  	notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  }  finally {  	#if DEBUG  	timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  	#else  	                    timer.Interval = (int)TimeSpan.FromMinutes(1).TotalMilliseconds; #endif  	timer.Start ();  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: if (errors != null && errors.Count () > 0) {  	var errorInfo = errors.Take (10).Select (x => new {  		//2012-07-03T00:36:44.292Z  		Date = ParseDate (x.Date).ToString ()'  		Value = x.Exception.Message  	}).ToList ();  	if (_formHasBeenShown) {  		dataGridViewErrors.Invoke ((Action)delegate {  			dataGridViewErrors.DataSource = errorInfo;  			dataGridViewErrors.Show ();  		});  	}  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: if (currentBuildStatus != _lastBuildStatus) {  	string msg = GetBuildStatusMsg (currentBuildStatus' _lastBuildStatus);  	if (String.IsNullOrEmpty (msg) == false)  		notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: if (String.IsNullOrEmpty (msg) == false)  	notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: notifyIcon.ShowBalloonTip (1000' "Build Status"' msg' ToolTipIcon.Warning);  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Error"' ex.Message + "\n" + ex.StackTrace' ToolTipIcon.Error);  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: timer.Interval = (int)TimeSpan.FromSeconds (10).TotalMilliseconds;  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,AppHarborForm,The following statement contains a magic number: notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout"' "Monitoring your builds"' ToolTipIcon.Info);  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,UpdateAuthorisationDetails,The following statement contains a magic number: if (credentials != null) {  	Settings.Default.AccessToken = credentials.AccessToken;  	Settings.Default.TokenType = credentials.TokenType;  	Settings.Default.Save ();  }  else if (result.Item2 != null) {  	notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Authorisation error"' result.Item2' ToolTipIcon.Error);  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,UpdateAuthorisationDetails,The following statement contains a magic number: if (result.Item2 != null) {  	notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Authorisation error"' result.Item2' ToolTipIcon.Error);  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,UpdateAuthorisationDetails,The following statement contains a magic number: notifyIcon.ShowBalloonTip (1000' "AppHarbor Lookout - Authorisation error"' result.Item2' ToolTipIcon.Error);  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,SetNotifyIcon,The following statement contains a magic number: notifyIcon.Text = String.Join (""' text.Take (63));  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,GetAuthorisation,The following statement contains a magic number: try {  	var authDetails = AppHarborClient.AskForAuthorization (clientId' clientSecret' TimeSpan.FromSeconds (30));  	return Tuple.Create<AuthInfo' string> (authDetails' null);  }  catch (AuthenticationException) {  	return Tuple.Create<AuthInfo' string> (null' "Failed to get authorization");  }  catch (TimeoutException) {  	return Tuple.Create<AuthInfo' string> (null' "Timeout' you have to be faster than that");  }  catch (System.Exception ex) {  	return Tuple.Create<AuthInfo' string> (null' ex.Message);  }  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,ShowMainScreen,The following statement contains a magic number: if (mouseLocation.Y < 15)  	mouseLocation.Y = 15;  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,ShowMainScreen,The following statement contains a magic number: if (mouseLocation.Y < 15)  	mouseLocation.Y = 15;  
Magic Number,AppHarborLookout,AppHarborForm,C:\repos\mattwarren_AppHarborLookout\AppHarbor.Lookout\AppHarborForm.cs,ShowMainScreen,The following statement contains a magic number: mouseLocation.Y = 15;  
