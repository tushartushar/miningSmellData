Implementation smell,Namespace,Class,File,Method,Description
Long Method,Playr.Api,Routes,D:\newReposJune17\osbornm_Playr\Playr.Api\Routes.cs,RegisterRoutes,The method has 87 lines of code.
Complex Method,Playr.Api.Controller,FanartController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\FanartController.cs,GetUrlsForArtist,Cyclomatic complexity of the method is 8
Complex Method,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Upload,Cyclomatic complexity of the method is 9
Long Parameter List,Playr.Api,Helpers,D:\newReposJune17\osbornm_Playr\Playr.Api\Helpers.cs,toSong,The method has 4 parameters.
Long Statement,Playr.Api,Helpers,D:\newReposJune17\osbornm_Playr\Playr.Api\Helpers.cs,InitializeTrackCache,The length of the statement  "		_lookup.GetOrAdd (t.TrackDatabaseID' _ => new Tuple<int' int> (itunes.ITObjectPersistentIDHigh [t]' itunes.ITObjectPersistentIDLow [t])); " is 137.
Long Statement,Playr.Api,Helpers,D:\newReposJune17\osbornm_Playr\Playr.Api\Helpers.cs,toSong,The length of the statement  "	_lookup.GetOrAdd (t.TrackDatabaseID' _ => new Tuple<int' int> (itunes.ITObjectPersistentIDHigh [t]' itunes.ITObjectPersistentIDLow [t])); " is 137.
Long Statement,Playr.Api,RequireTokenAttribute,D:\newReposJune17\osbornm_Playr\Playr.Api\RequireTokenAttribute.cs,OnActionExecuting,The length of the statement  "		throw new HttpResponseException (context.Request.CreateErrorResponse (HttpStatusCode.Unauthorized' "Must provide a valid token.")); " is 131.
Long Statement,Playr.Api,RequireTokenAttribute,D:\newReposJune17\osbornm_Playr\Playr.Api\RequireTokenAttribute.cs,OnActionExecuting,The length of the statement  "			throw new HttpResponseException (context.Request.CreateErrorResponse (HttpStatusCode.Unauthorized' "Must provide a valid token.")); " is 131.
Long Statement,Playr.Api,Program,D:\newReposJune17\osbornm_Playr\Playr.Api\Program.cs,SetUp,The length of the statement  "	ApplicationSettings.iTunesAddFolder = Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.MyMusic)' "iTunes\\iTunes Media\\Automatically Add to iTunes"); " is 168.
Long Statement,Playr.Api,Routes,D:\newReposJune17\osbornm_Playr\Playr.Api\Routes.cs,RegisterRoutes,The length of the statement  "	routes.MapHttpRoute (name: "playr/fanart/artist/file"' routeTemplate: "artists/{artist}/fanart/{fileName}"' defaults: new { " is 123.
Long Statement,Playr.Api.Controller,FanartController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\FanartController.cs,GetUrlsForArtist,The length of the statement  "	var musicbrainzUrl = String.Format ("http://search.musicbrainz.org/ws/2/artist/?query={0}&fmt=json"' HttpUtility.UrlEncode (artist)); " is 133.
Long Statement,Playr.Api.Controller,FanartController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\FanartController.cs,GetUrlsForArtist,The length of the statement  "	if (searchResult.artist_list != null && searchResult.artist_list.artist != null && searchResult.artist_list.artist.Count > 0) { " is 127.
Long Statement,Playr.Api.Controller,FanartController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\FanartController.cs,GetUrlsForArtist,The length of the statement  "			var url = String.Format ("http://fanart.tv/webservice/artist/c530881c38da5630652532a36dd8983a/{0}/JSON"' HttpUtility.UrlEncode (mid)); " is 134.
Long Statement,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Artwork,The length of the statement  "		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.NotFound' "There is no song with that ID.")); " is 122.
Long Statement,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,DownloadSong,The length of the statement  "		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.NotFound' "There is no song with that ID.")); " is 122.
Long Statement,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,DownloadAlbum,The length of the statement  "		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.NotFound' "There is no album by that name.")); " is 123.
Long Statement,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Upload,The length of the statement  "			zip.ExtractSelectedEntries ("name = *.m4a or name = *.mp3 or name = *.aac or name = *.wav"' String.Empty' ApplicationSettings.iTunesAddFolder); " is 143.
Long Statement,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Upload,The length of the statement  "		// TOOO: itunes is stupid and requires the extension for the file to be picked up. For now assume MIME type is audio/{extension}  " is 128.
Long Statement,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Upload,The length of the statement  "		var localFile = Path.Combine (ApplicationSettings.iTunesAddFolder' String.Format ("{0}.{1}"' Guid.NewGuid ()' mediaType.Substring (6))); " is 136.
Long Statement,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Upload,The length of the statement  "		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.UnsupportedMediaType' "The file type is unsupported.")); " is 133.
Long Statement,Playr.Api.Controller,UsersController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\UsersController.cs,Register,The length of the statement  "		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.BadRequest' "Must Pass in Email and Name.")); " is 122.
Long Statement,Playr.Api.Controller,UsersController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\UsersController.cs,Register,The length of the statement  "			throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.Conflict' "There is already a user with that email.")); " is 132.
Long Statement,Playr.Api.Controller,UsersController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\UsersController.cs,ResetToken,The length of the statement  "		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.BadRequest' "Must Pass in Email and Toekn.")); " is 123.
Empty Catch Block,Playr.Api.Controller,FanartController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\FanartController.cs,GetUrlsForArtist,The method has an empty catch block.
Magic Number,Playr.Api,Program,D:\newReposJune17\osbornm_Playr\Playr.Api\Program.cs,Main,The following statement contains a magic number: config.MaxReceivedMessageSize = 1024 * 1024 * 1024;  
Magic Number,Playr.Api,Program,D:\newReposJune17\osbornm_Playr\Playr.Api\Program.cs,Main,The following statement contains a magic number: config.MaxReceivedMessageSize = 1024 * 1024 * 1024;  
Magic Number,Playr.Api,Program,D:\newReposJune17\osbornm_Playr\Playr.Api\Program.cs,Main,The following statement contains a magic number: config.MaxReceivedMessageSize = 1024 * 1024 * 1024;  
Magic Number,Playr.Api.Controller,FanartController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\FanartController.cs,Fanart,The following statement contains a magic number: response.Headers.CacheControl.MaxAge = TimeSpan.FromHours (24);  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Artwork,The following statement contains a magic number: response.Headers.CacheControl.MaxAge = TimeSpan.FromHours (24);  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,DownloadSong,The following statement contains a magic number: response.Headers.CacheControl.MaxAge = TimeSpan.FromHours (24);  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,DownloadAlbum,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	foreach (var t in tracks) {  		zip.AddFile (t.Location' String.Empty);  	}  	zip.Name = name;  	var stream = new MemoryStream ();  	zip.Save (stream);  	stream.Position = 0;  	response.Content = new StreamContent (stream);  	response.Content.Headers.ContentType = new MediaTypeHeaderValue ("application/zip");  	response.Headers.CacheControl = new CacheControlHeaderValue ();  	response.Headers.CacheControl.MaxAge = TimeSpan.FromHours (24);  	response.Headers.CacheControl.MustRevalidate = true;  	response.Content.Headers.ContentDisposition = new ContentDispositionHeaderValue ("attachment") {  		FileName = String.Format ("{0}.zip"' name)  	};  	return response;  }  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,DownloadAlbum,The following statement contains a magic number: response.Headers.CacheControl.MaxAge = TimeSpan.FromHours (24);  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,FavoriteSong,The following statement contains a magic number: using (var session = Helpers.DocumentStore.OpenSession ()) {  	var token = Request.GetToken ();  	var user = session.Query<User> ().Where (u => u.Token == token).First ();  	var track = itunes.GetTrackById (id);  	if (track == null) {  		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.NotFound' "No such song"));  	}  	if (!user.Favorites.Where (fav => fav.Id == id).Any ()) {  		track.Rating += 5;  		user.Favorites.Add (track.toSong (itunes));  		session.SaveChanges ();  	}  }  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,FavoriteSong,The following statement contains a magic number: if (!user.Favorites.Where (fav => fav.Id == id).Any ()) {  	track.Rating += 5;  	user.Favorites.Add (track.toSong (itunes));  	session.SaveChanges ();  }  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,FavoriteSong,The following statement contains a magic number: track.Rating += 5;  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,UnfavoriteSong,The following statement contains a magic number: using (var session = Helpers.DocumentStore.OpenSession ()) {  	var token = Request.GetToken ();  	var user = session.Query<User> ().Where (u => u.Token == token).First ();  	var track = itunes.GetTrackById (id);  	if (track == null) {  		throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.NotFound' "No such song"));  	}  	if (user.Favorites.Where (fav => fav.Id == id).Any ()) {  		track.Rating -= 5;  		user.Favorites.RemoveAll (s => s.Id == id);  		session.SaveChanges ();  	}  }  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,UnfavoriteSong,The following statement contains a magic number: if (user.Favorites.Where (fav => fav.Id == id).Any ()) {  	track.Rating -= 5;  	user.Favorites.RemoveAll (s => s.Id == id);  	session.SaveChanges ();  }  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,UnfavoriteSong,The following statement contains a magic number: track.Rating -= 5;  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Upload,The following statement contains a magic number: if (mediaType.Equals ("application/x-zip-compressed"' StringComparison.InvariantCultureIgnoreCase)) {  	// We assume this is going to be a large file lets copy it to disc  	var tempFile = Path.Combine (ApplicationSettings.TempPath' string.Format ("{0}.zip"' Guid.NewGuid ()));  	using (var fileStream = File.Create (tempFile)) {  		task.Result.CopyTo (fileStream);  		fileStream.Close ();  		task.Result.Close ();  	}  	// Extract all the audio files for the temp file and copy them to iTunes Add Folder.  	using (var zip = ZipFile.Read (tempFile)) {  		zip.ExtractSelectedEntries ("name = *.m4a or name = *.mp3 or name = *.aac or name = *.wav"' String.Empty' ApplicationSettings.iTunesAddFolder);  	}  	// Delete the temp zip file we created  	File.Delete (tempFile);  } // Did they upload just a single file?  else if (Regex.IsMatch (mediaType' "audio*"' RegexOptions.IgnoreCase)) {  	// TOOO: itunes is stupid and requires the extension for the file to be picked up. For now assume MIME type is audio/{extension}   	var localFile = Path.Combine (ApplicationSettings.iTunesAddFolder' String.Format ("{0}.{1}"' Guid.NewGuid ()' mediaType.Substring (6)));  	using (var fileStream = File.Create (localFile)) {  		task.Result.CopyTo (fileStream);  		fileStream.Close ();  		task.Result.Close ();  	}  } // Well they uploaded something we don't support!  else {  	throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.UnsupportedMediaType' "The file type is unsupported."));  }  
Magic Number,Playr.Api.Controller,InfoController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\InfoController.cs,Upload,The following statement contains a magic number: if (Regex.IsMatch (mediaType' "audio*"' RegexOptions.IgnoreCase)) {  	// TOOO: itunes is stupid and requires the extension for the file to be picked up. For now assume MIME type is audio/{extension}   	var localFile = Path.Combine (ApplicationSettings.iTunesAddFolder' String.Format ("{0}.{1}"' Guid.NewGuid ()' mediaType.Substring (6)));  	using (var fileStream = File.Create (localFile)) {  		task.Result.CopyTo (fileStream);  		fileStream.Close ();  		task.Result.Close ();  	}  } // Well they uploaded something we don't support!  else {  	throw new HttpResponseException (Request.CreateErrorResponse (HttpStatusCode.UnsupportedMediaType' "The file type is unsupported."));  }  
Magic Number,Playr.Api.Controller,ControlController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\ControlController.cs,VolumeUp,The following statement contains a magic number: itunes.SoundVolume += 5;  
Magic Number,Playr.Api.Controller,ControlController,D:\newReposJune17\osbornm_Playr\Playr.Api\Controller\ControlController.cs,VolumeDown,The following statement contains a magic number: itunes.SoundVolume -= 5;  
