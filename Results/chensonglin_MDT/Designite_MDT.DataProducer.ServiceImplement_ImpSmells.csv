Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MDT.DataProducer.ServiceImplement,DataProducerService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataProducerService.cs,executeTask,Cyclomatic complexity of the method is 15
Complex Method,MDT.DataProducer.ServiceImplement,DataProducerService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataProducerService.cs,executeAPI,Cyclomatic complexity of the method is 13
Complex Method,MDT.DataProducer.ServiceImplement,DataProducerService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataProducerService.cs,executeDB,Cyclomatic complexity of the method is 8
Complex Method,MDT.DataProducer.ServiceImplement,DataProducerService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataProducerService.cs,mergeResult,Cyclomatic complexity of the method is 8
Complex Method,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,startWork,Cyclomatic complexity of the method is 15
Long Statement,MDT.DataProducer.ServiceImplement,DataProducerService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataProducerService.cs,buildDbCommand,The length of the statement  "		if (command.SourceType != SourceType.Http && command.SourceType != SourceType.Tcp && command.SourceType != SourceType.DLL) { " is 124.
Long Statement,MDT.DataProducer.ServiceImplement,DataProducerService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataProducerService.cs,buildDbCommand,The length of the statement  "				dbComm.CommandType = (CommandType)Enum.Parse (typeof(CommandType)' Enum.GetName (typeof(ECommandType)' command.CommandType)); " is 125.
Long Statement,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,Stop,The length of the statement  "			if (kvp.Value.Status == TaskStatus.Running || kvp.Value.Status == TaskStatus.Created || kvp.Value.Status == TaskStatus.WaitingToRun || kvp.Value.Status == TaskStatus.WaitingForActivation || kvp.Value.Status == TaskStatus.WaitingForChildrenToComplete) { " is 252.
Complex Conditional,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,Stop,The conditional expression  "kvp.Value.Status == TaskStatus.Running || kvp.Value.Status == TaskStatus.Created || kvp.Value.Status == TaskStatus.WaitingToRun || kvp.Value.Status == TaskStatus.WaitingForActivation || kvp.Value.Status == TaskStatus.WaitingForChildrenToComplete"  is complex.
Empty Catch Block,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,sendEmail,The method has an empty catch block.
Magic Number,MDT.DataProducer.ServiceImplement,DataTransformService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataTransformService.cs,GetXSLT,The following statement contains a magic number: if (!cache.Contains (taskId.ToString ())) {  	var str = Center.GetXSLT (taskId);  	cache.Add (taskId.ToString ()' str' CacheItemPriority.Normal' null' new AbsoluteTime (TimeSpan.FromMinutes (5)));  	return str;  }  else {  	var data = cache.GetData (taskId.ToString ());  	if (data == null) {  		data = GetXSLT (taskId);  	}  	return data.ToString ();  }  
Magic Number,MDT.DataProducer.ServiceImplement,DataTransformService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataTransformService.cs,GetXSLT,The following statement contains a magic number: cache.Add (taskId.ToString ()' str' CacheItemPriority.Normal' null' new AbsoluteTime (TimeSpan.FromMinutes (5)));  
Magic Number,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,getDataProducerService,The following statement contains a magic number: if (!cache.Contains (key)) {  	DataProducerService service = new DataProducerService (task);  	cache.Add (key' service' CacheItemPriority.Normal' null' new AbsoluteTime (TimeSpan.FromMinutes (5)));  	return service;  }  else {  	var service = (DataProducerService)cache [key];  	if (service == null) {  		service = getDataProducerService (task);  	}  	return service;  }  
Magic Number,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,getDataProducerService,The following statement contains a magic number: cache.Add (key' service' CacheItemPriority.Normal' null' new AbsoluteTime (TimeSpan.FromMinutes (5)));  
Magic Number,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,startWork,The following statement contains a magic number: while (execute) {  	try {  		// 获取本服务负责的任务列表      		var tasks = getTasks ();  		// 测试开启  		//Console.WriteLine("任务数：" + tasks.Count);  		foreach (var t in tasks) {  			if (!dic.ContainsKey (t.ID)) {  				var nt = executeTask (t);  				dic.Add (t.ID' nt);  			}  			else {  				var n = dic [t.ID];  				switch (n.Status) {  				case TaskStatus.Faulted:  					foreach (var e in n.Exception.Flatten ().InnerExceptions) {  						message = String.Format ("服务节点：数据生产\n任务名称: {0}\n异常信息：{1}'{2}"' t.TaskName' e.Message' e.StackTrace);  						//记录文本日志  						MDT.Utility.TextWriter.WriteExceptionLog (e' message' true);  						//发送邮件  						sendEmail (message);  					}  					dic [t.ID].Dispose ();  					dic [t.ID] = executeTask (t);  					break;  				case TaskStatus.RanToCompletion:  				case TaskStatus.Canceled:  					dic [t.ID].Dispose ();  					dic [t.ID] = executeTask (t);  					break;  				}  				// 测试开启  				//Console.WriteLine(String.Format("任务状态：{0}{1}"' t.ID' n.Status));  			}  		}  	}  	catch (Exception ex) {  		message = String.Format ("服务节点：数据生产\n异常信息：{0}\n{1}"' ex.Message' ex.StackTrace);  		//记录文本日志  		MDT.Utility.TextWriter.WriteExceptionLog (ex' message' true);  		//发送邮件  		sendEmail (message);  		// 测试开启  		//Console.WriteLine(String.Format("异常信息：{0}"' ex.Message));  	}  	// 当前线程挂起时间为10毫秒  	Thread.Sleep (10);  }  
Magic Number,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,startWork,The following statement contains a magic number: Thread.Sleep (10);  
Missing Default,MDT.DataProducer.ServiceImplement,DataProducerService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DataProducerService.cs,executeAPI,The following switch statement is missing a default case: switch (command.CommandType) {  case ECommandType.Post:  	result = HttpRequestUtils.DoPost (command.CommandText' dic);  	break;  case ECommandType.Get:  	result = HttpRequestUtils.DoGet (command.CommandText' dic);  	break;  }  
Missing Default,MDT.DataProducer.ServiceImplement,MonitorService,C:\repos\chensonglin_MDT\MDT.DataProducer.ServiceImplement\DBMonitorService.cs,startWork,The following switch statement is missing a default case: switch (n.Status) {  case TaskStatus.Faulted:  	foreach (var e in n.Exception.Flatten ().InnerExceptions) {  		message = String.Format ("服务节点：数据生产\n任务名称: {0}\n异常信息：{1}'{2}"' t.TaskName' e.Message' e.StackTrace);  		//记录文本日志  		MDT.Utility.TextWriter.WriteExceptionLog (e' message' true);  		//发送邮件  		sendEmail (message);  	}  	dic [t.ID].Dispose ();  	dic [t.ID] = executeTask (t);  	break;  case TaskStatus.RanToCompletion:  case TaskStatus.Canceled:  	dic [t.ID].Dispose ();  	dic [t.ID] = executeTask (t);  	break;  }  
