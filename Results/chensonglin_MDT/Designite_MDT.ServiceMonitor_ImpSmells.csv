Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MDT.ServiceMonitor,Monitor,C:\repos\chensonglin_MDT\MDT.ServiceMonitor\MDT.ServiceMonitor\Monitor.cs,ScanTable,The length of the statement  "	//strSql = "select getdate() as [current_time]'max(endtime)stoptime'datediff(ss'max(endtime)'getdate()) as stopduration from tracelogmaster"; " is 141.
Long Statement,MDT.ServiceMonitor,Monitor,C:\repos\chensonglin_MDT\MDT.ServiceMonitor\MDT.ServiceMonitor\Monitor.cs,Reset,The length of the statement  "		ProcessStartInfo a = new ProcessStartInfo (@"c:/windows/system32/cmd.exe"' string.Format ("/c  net start {0}"' serviceName)); " is 125.
Long Statement,MDT.ServiceMonitor,webUtils,C:\repos\chensonglin_MDT\MDT.ServiceMonitor\MDT.ServiceMonitor\webUtils.cs,DoPostGBK,The length of the statement  "			Encoding encoding = string.IsNullOrEmpty (rsp.CharacterSet) || rsp.CharacterSet == "null" ? Encoding.GetEncoding ("GBK") : Encoding.GetEncoding (rsp.CharacterSet); " is 163.
Magic Number,MDT.ServiceMonitor,Monitor,C:\repos\chensonglin_MDT\MDT.ServiceMonitor\MDT.ServiceMonitor\Monitor.cs,Monitor,The following statement contains a magic number: DurationTimer.Interval = (parms.ScanSeconds * 1000);  
Magic Number,MDT.ServiceMonitor,webUtils,C:\repos\chensonglin_MDT\MDT.ServiceMonitor\MDT.ServiceMonitor\webUtils.cs,DoPostGBK,The following statement contains a magic number: while (sendCount != 5) {  	try {  		HttpWebRequest req = (HttpWebRequest)WebRequest.Create (url);  		req.Method = "POST";  		req.KeepAlive = true;  		req.ContentType = "application/x-www-form-urlencoded;charset=GBK";  		byte[] postData = System.Text.Encoding.GetEncoding ("GBK").GetBytes (BuildPostDataGBK (parameters));  		Stream reqStream = req.GetRequestStream ();  		reqStream.Write (postData' 0' postData.Length);  		reqStream.Close ();  		HttpWebResponse rsp = (HttpWebResponse)req.GetResponse ();  		Encoding encoding = string.IsNullOrEmpty (rsp.CharacterSet) || rsp.CharacterSet == "null" ? Encoding.GetEncoding ("GBK") : Encoding.GetEncoding (rsp.CharacterSet);  		return GetResponseAsString (rsp' encoding);  	}  	catch (Exception ex) {  		sendCount++;  		err = ex.Message;  	}  }  
Magic Number,MDT.ServiceMonitor,webUtils,C:\repos\chensonglin_MDT\MDT.ServiceMonitor\MDT.ServiceMonitor\webUtils.cs,GetResponseAsString,The following statement contains a magic number: try {  	// 以字符流的方式读取HTTP响应  	stream = rsp.GetResponseStream ();  	reader = new StreamReader (stream' encoding);  	// 每次读取不大于512个字符，并写入字符串  	char[] buffer = new char[512];  	int readBytes = 0;  	while ((readBytes = reader.Read (buffer' 0' buffer.Length)) > 0) {  		result.Append (buffer' 0' readBytes);  	}  }  finally {  	// 释放资源  	if (reader != null)  		reader.Close ();  	if (stream != null)  		stream.Close ();  	if (rsp != null)  		rsp.Close ();  }  
