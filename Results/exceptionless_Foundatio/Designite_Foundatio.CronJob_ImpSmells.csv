Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Foundatio.CronJob,CronService,C:\repos\exceptionless_Foundatio\samples\Foundatio.CronJob\CronService.cs,RunAsService,The length of the statement  "                        cancellationTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancellationTokenSource.Token' JobRunner.GetShutdownCancellationToken()); " is 147.
Long Statement,Foundatio.CronJob,Program,C:\repos\exceptionless_Foundatio\samples\Foundatio.CronJob\Program.cs,Main,The length of the statement  "                        logger.LogInformation("Cron Service ({Instance}) Running on {ManagedThreadId}"' i' Thread.CurrentThread.ManagedThreadId); " is 121.
Long Statement,Foundatio.SampleJob,SampleServiceProvider,C:\repos\exceptionless_Foundatio\samples\Foundatio.CronJob\SampleServiceProvider.cs,Create,The length of the statement  "            container.RegisterSingleton<ILockProvider>(() => new CacheLockProvider(container.GetInstance<ICacheClient>()' container.GetInstance<IMessageBus>()' loggerFactory)); " is 164.
Magic Number,Foundatio.CronJob,ScheduledJobRunner,C:\repos\exceptionless_Foundatio\samples\Foundatio.CronJob\CronService.cs,ScheduledJobRunner,The following statement contains a magic number: var dates = _cronSchedule.GetNextOccurrences(SystemClock.UtcNow' DateTime.MaxValue).Take(2).ToList();
Magic Number,Foundatio.CronJob,ScheduledJobRunner,C:\repos\exceptionless_Foundatio\samples\Foundatio.CronJob\CronService.cs,ScheduledJobRunner,The following statement contains a magic number: if (dates.Count == 2)                  interval = dates[1].Subtract(dates[0]);
Magic Number,Foundatio.CronJob,Scheduler,C:\repos\exceptionless_Foundatio\samples\Foundatio.CronJob\CronService.cs,Start,The following statement contains a magic number: _timer.Change(0' 5000);
Magic Number,Foundatio.CronJob,Program,C:\repos\exceptionless_Foundatio\samples\Foundatio.CronJob\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 5; i++) {                  Task.Run(() => {                      var cronService = new CronService(serviceProvider.GetService<ICacheClient>()' loggerFactory);                        // every minute                      cronService.Add(serviceProvider.GetService<EveryMinuteJob>()' "* * * * *");                        // every even minute                      cronService.Add(() => serviceProvider.GetService<EvenMinuteJob>()' "*/2 * * * *");                        if (logger.IsEnabled(LogLevel.Information))                          logger.LogInformation("Cron Service ({Instance}) Running on {ManagedThreadId}"' i' Thread.CurrentThread.ManagedThreadId);                      cronService.Run();                  });              }
