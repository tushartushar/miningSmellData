Implementation smell,Namespace,Class,File,Method,Description
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Main,The following statement contains a magic number: Console.WriteLine("This application is running as a " + (IntPtr.Size == 4 ? "32" : "64") + " bit process.");
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,TestEmpty,The following statement contains a magic number: var bytes = new byte[50];
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Test,The following statement contains a magic number: for(int j=0;j<10;j++)              foreach (var bytes in Read(directory))              {                  uncompressedTotal += bytes.Length;                  byte[] compressed = new byte[compressor.CalculateMaxCompressedLength(bytes.Length)];                  w.Start();                  int compressedLength = compressor.Compress(bytes' compressed);                  compressedTotal += compressedLength;                  w.Stop();                    byte[] uncompressed = new byte[bytes.Length];                    dw.Start();                  decompressor.DecompressKnownSize(compressed' uncompressed' uncompressed.Length);                  dw.Stop();                    for (int i = 0; i < uncompressed.Length; i++)                  {                      if (uncompressed[i] != bytes[i])                          throw new Exception("Original bytes and decompressed bytes differ starting at byte " + i);                  }              }
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Test,The following statement contains a magic number: Console.WriteLine("Compression Time (MB / sec) = " + uncompressedTotal / 1024.0 / 1024.0 / w.Elapsed.TotalSeconds);
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Test,The following statement contains a magic number: Console.WriteLine("Compression Time (MB / sec) = " + uncompressedTotal / 1024.0 / 1024.0 / w.Elapsed.TotalSeconds);
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Test,The following statement contains a magic number: Console.WriteLine("Uncompression Time (MB / sec) = " + uncompressedTotal / 1024.0 / 1024.0 / dw.Elapsed.TotalSeconds);
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Test,The following statement contains a magic number: Console.WriteLine("Uncompression Time (MB / sec) = " + uncompressedTotal / 1024.0 / 1024.0 / dw.Elapsed.TotalSeconds);
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Read,The following statement contains a magic number: foreach (var file in Directory.GetFiles(directory))              {                  using (var reader = new BinaryReader(File.OpenRead(file)))                  {                      while (reader.BaseStream.Length != reader.BaseStream.Position)                          yield return reader.ReadBytes(8 * 1024 * 1024);                  }              }
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Read,The following statement contains a magic number: foreach (var file in Directory.GetFiles(directory))              {                  using (var reader = new BinaryReader(File.OpenRead(file)))                  {                      while (reader.BaseStream.Length != reader.BaseStream.Position)                          yield return reader.ReadBytes(8 * 1024 * 1024);                  }              }
Magic Number,LZ4Sharp.Main,Program,C:\repos\stangelandcl_LZ4Sharp\LZ4Sharp.Main\Program.cs,Read,The following statement contains a magic number: foreach (var file in Directory.GetFiles(directory))              {                  using (var reader = new BinaryReader(File.OpenRead(file)))                  {                      while (reader.BaseStream.Length != reader.BaseStream.Position)                          yield return reader.ReadBytes(8 * 1024 * 1024);                  }              }
