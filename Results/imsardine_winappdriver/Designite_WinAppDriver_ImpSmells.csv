Implementation smell,Namespace,Class,File,Method,Description
Long Method,WinAppDriver.Handlers,NewSessionHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\NewSessionHandler.cs,Handle,The method has 121 lines of code.
Long Parameter List,WinAppDriver,Server,C:\repos\imsardine_winappdriver\src\WinAppDriver\Server.cs,ResponseException,The method has 5 parameters. Parameters: method' path' ex' session' response
Long Parameter List,WinAppDriver,Server,C:\repos\imsardine_winappdriver\src\WinAppDriver\Server.cs,ResponseResult,The method has 5 parameters. Parameters: method' path' result' session' response
Long Parameter List,WinAppDriver.WinUserWrapper,IWinUserWrap,C:\repos\imsardine_winappdriver\src\WinAppDriver\Wrappers\WinUserWrapper\IWinUserWrap.cs,mouse_event,The method has 5 parameters. Parameters: mouseEventFlag' incrementX' incrementY' data' extraInfo
Long Parameter List,WinAppDriver.WinUserWrapper,WinUserWrap,C:\repos\imsardine_winappdriver\src\WinAppDriver\Wrappers\WinUserWrapper\WinUserWrap.cs,mouse_event,The method has 5 parameters. Parameters: mouseEventFlag' incrementX' incrementY' data' extraInfo
Long Parameter List,WinAppDriver.WinUserWrapper,WinUserExtern,C:\repos\imsardine_winappdriver\src\WinAppDriver\Wrappers\WinUserWrapper\WinUserWrap.cs,mouse_event,The method has 5 parameters. Parameters: mouseEventFlag' incrementX' incrementY' data' extraInfo
Long Identifier,WinAppDriver.Modern,IPackageDebugSettings,C:\repos\imsardine_winappdriver\src\WinAppDriver\Modern\StoreApp.cs,RegisterForPackageStateChanges,The length of the parameter pPackageExecutionStateChangeNotification is 40.
Long Statement,WinAppDriver,AppInstaller<T>,C:\repos\imsardine_winappdriver\src\WinAppDriver\AppInstaller.cs,PrepareInstallationPackage,The length of the statement  "                logger.Debug("Checksum matching (case-insensitive); caps.AppChecksum = [{0}]' cached checksum = [{1}]"' caps.AppChecksum' checksum); " is 132.
Long Statement,WinAppDriver,Utils,C:\repos\imsardine_winappdriver\src\WinAppDriver\IUtils.cs,GetAppFileFromWeb,The length of the statement  "            string storeFileName = Environment.GetEnvironmentVariable("TEMP") + @"\StoreApp_" + DateTime.Now.ToString("yyyyMMddHHmmss") + webResource.Substring(webResource.LastIndexOf(".")); " is 178.
Long Statement,WinAppDriver,Utils,C:\repos\imsardine_winappdriver\src\WinAppDriver\IUtils.cs,GetAppFileFromWeb,The length of the statement  "                        string msg = "You got a wrong file. Expected checksum is \"" + checksum + "\"' but downloaded file checksum is \"" + checksumActual + "\"."; " is 140.
Long Statement,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,OnPaint,The length of the statement  "                    g.DrawString(i.ToString()' new Font("Arial"' 13)' new SolidBrush(Color.Red)' new PointF(bounds.Value.X' bounds.Value.Y)); " is 121.
Empty Catch Block,WinAppDriver.UI,Element,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Element.cs,ScrollIntoView,The method has an empty catch block.
Empty Catch Block,WinAppDriver.UI,Element,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Element.cs,ScrollIntoView,The method has an empty catch block.
Empty Catch Block,WinAppDriver.UI,Element,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Element.cs,ScrollIntoView,The method has an empty catch block.
Empty Catch Block,WinAppDriver.UI,Element,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Element.cs,ScrollIntoView,The method has an empty catch block.
Empty Catch Block,WinAppDriver.UAC,UACPromptHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\UAC\UACPromptHandler.cs,Handle,The method has an empty catch block.
Magic Number,WinAppDriver,AppInstaller<T>,C:\repos\imsardine_winappdriver\src\WinAppDriver\AppInstaller.cs,Install,The following statement contains a magic number: System.Threading.Thread.Sleep(5000);
Magic Number,WinAppDriver,Logger,C:\repos\imsardine_winappdriver\src\WinAppDriver\ILogger.cs,Error,The following statement contains a magic number: this.trace.TraceEvent(TraceEventType.Error' 2' message);
Magic Number,WinAppDriver,Logger,C:\repos\imsardine_winappdriver\src\WinAppDriver\ILogger.cs,Warn,The following statement contains a magic number: this.trace.TraceEvent(TraceEventType.Warning' 3' message);
Magic Number,WinAppDriver,Logger,C:\repos\imsardine_winappdriver\src\WinAppDriver\ILogger.cs,Info,The following statement contains a magic number: this.trace.TraceEvent(TraceEventType.Information' 4' message);
Magic Number,WinAppDriver,Logger,C:\repos\imsardine_winappdriver\src\WinAppDriver\ILogger.cs,Debug,The following statement contains a magic number: this.trace.TraceEvent(TraceEventType.Verbose' 5' message);
Magic Number,WinAppDriver,Utils,C:\repos\imsardine_winappdriver\src\WinAppDriver\IUtils.cs,DeleteDirectoryIfExists,The following statement contains a magic number: if (this.DirectoryExists(path))              {                  foreach (var subdir in Directory.GetDirectories(path))                  {                      this.DeleteDirectoryIfExists(subdir);                  }                    foreach (var file in Directory.GetFiles(path))                  {                      logger.Debug("Delete file: {0}"' file);                      File.Delete(file);                  }                    logger.Debug("Delete directory: {0}"' path);                    try                  {                      Directory.Delete(path);                  }                  catch (IOException e)                  {                      // Seems like a timing issue that the built-in Directory.Delete(path' true)                      // did not take into account.                      logger.Warn("IOException raised while deleting the directory: {0} ({1})"' path' e.Message);                      logger.Debug("Sleep for a while (5s)' and try again...");                        System.Threading.Thread.Sleep(5000);                      Directory.Delete(path);                  }                    return true;              }              else              {                  return false;              }
Magic Number,WinAppDriver,Utils,C:\repos\imsardine_winappdriver\src\WinAppDriver\IUtils.cs,GetAppFileFromWeb,The following statement contains a magic number: int retryCounter = 3;
Magic Number,WinAppDriver,Server,C:\repos\imsardine_winappdriver\src\WinAppDriver\Server.cs,WriteResponse,The following statement contains a magic number: string bodyHead = body.Length > 200 ? body.Substring(0' 200) : body;
Magic Number,WinAppDriver,Server,C:\repos\imsardine_winappdriver\src\WinAppDriver\Server.cs,WriteResponse,The following statement contains a magic number: string bodyHead = body.Length > 200 ? body.Substring(0' 200) : body;
Magic Number,WinAppDriver.Handlers,ElementSearcher,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ElementSearcher.cs,FindFirst,The following statement contains a magic number: switch (strategy)              {                  case LocatorStrategy.Id:                  case LocatorStrategy.Name:                  case LocatorStrategy.ClassName:                      element = context.AutomationElement.FindFirst(                          TreeScope.Descendants'                          new PropertyCondition(property' locator));                      break;                    case LocatorStrategy.TagName:                      ControlType type = this.uiAutomation.FromTagName(locator);                      element = context.AutomationElement.FindFirst(                          TreeScope.Descendants'                          new PropertyCondition(property' type));                      break;                    case LocatorStrategy.XPath:                      element = this.uiAutomation.FindFirstByXPath(context.AutomationElement' locator);                      break;                    default:                      throw new FailedCommandException(                          string.Format("Usupported locator startegy: {0}"' strategy.ToString())'                          32); // InvalidSelector (32)              }
Magic Number,WinAppDriver.Handlers,ElementSearcher,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ElementSearcher.cs,FindAll,The following statement contains a magic number: switch (strategy)              {                  case LocatorStrategy.Id:                  case LocatorStrategy.Name:                  case LocatorStrategy.ClassName:                      elements = context.AutomationElement.FindAll(                          TreeScope.Descendants'                          new PropertyCondition(property' locator));                      break;                    case LocatorStrategy.TagName:                      ControlType type = this.uiAutomation.FromTagName(locator);                      elements = context.AutomationElement.FindAll(                          TreeScope.Descendants'                          new PropertyCondition(property' type));                      break;                    case LocatorStrategy.XPath:                      elements = this.uiAutomation.FindAllByXPath(context.AutomationElement' locator);                      break;                    default:                      throw new FailedCommandException(                          string.Format("Usupported locator startegy: {0}"' strategy.ToString())'                          32); // InvalidSelector (32)              }
Magic Number,WinAppDriver.Handlers,ClickElementHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ClickElementHandler.cs,Handle,The following statement contains a magic number: if (!element.Visible)              {                  throw new FailedCommandException("The element is not visible."' 11); // ElementNotVisible              }
Magic Number,WinAppDriver.Handlers,ClickElementHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ClickElementHandler.cs,Handle,The following statement contains a magic number: int x = element.X.Value + (element.Width.Value / 2);
Magic Number,WinAppDriver.Handlers,ClickElementHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ClickElementHandler.cs,Handle,The following statement contains a magic number: int y = element.Y.Value + (element.Height.Value / 2);
Magic Number,WinAppDriver.Handlers,GetElementTagNameHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\GetElementTagNameHandler.cs,Handle,The following statement contains a magic number: return element.Current.ControlType.ProgrammaticName.Substring(12);
Magic Number,WinAppDriver.Handlers,NewSessionHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\NewSessionHandler.cs,Handle,The following statement contains a magic number: switch (caps.Platform)              {                  case Platform.Windows:                      app = new DesktopApp(this.context' caps' this.uacHandler' this.utils);                      break;                    case Platform.WindowsModern:                      app = new StoreApp(this.context' caps' this.utils);                      break;                    case Platform.WindowsPhone:                      throw new FailedCommandException("Windows Phone is not supported yet."' 33);                  default:                      throw new FailedCommandException("The platform name '{0}' is invalid."' 33);              }
Magic Number,WinAppDriver.Handlers,NewSessionHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\NewSessionHandler.cs,Handle,The following statement contains a magic number: switch (caps.Platform)              {                  case Platform.Windows:                      app = new DesktopApp(this.context' caps' this.uacHandler' this.utils);                      break;                    case Platform.WindowsModern:                      app = new StoreApp(this.context' caps' this.utils);                      break;                    case Platform.WindowsPhone:                      throw new FailedCommandException("Windows Phone is not supported yet."' 33);                  default:                      throw new FailedCommandException("The platform name '{0}' is invalid."' 33);              }
Magic Number,WinAppDriver.Handlers,MoveToHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\MoveToHandler.cs,Handle,The following statement contains a magic number: if (request.ID != null)              {                  // TODO not visible? scroll into view                  var id = int.Parse(request.ID);                  var element = this.elementFactory.GetElement(session.GetUIElement(id));                    if (!element.Bounds.HasValue)                  {                      throw new FailedCommandException("Element's bounds are unknown."' 29); // InvalidElementCoordinates                  }                    int x = 0' y = 0;                  if (request.XOffset == null)                  {                      x = element.X.Value + (element.Width.Value / 2);                      y = element.Y.Value + (element.Height.Value / 2);                  }                  else                  {                      x = element.X.Value + int.Parse(request.XOffset);                      y = element.Y.Value + int.Parse(request.YOffset);                  }                    this.overlay.Clear();                  this.overlay.Target = new Point(x' y);                  this.overlay.ShowAndWait(session.Capabilities.OverlayTargetDelay);                    this.mouse.MoveTo(x' y);              }              else              {                  // relative to current position of the mouse                  int x = int.Parse(request.XOffset);                  int y = int.Parse(request.YOffset);                    Point pos = this.mouse.Position;                  this.overlay.Clear();                  this.overlay.Target = new Point(pos.X + x' pos.Y + y);                  this.overlay.ShowAndWait(session.Capabilities.OverlayTargetDelay);                    this.mouse.Move(x' y);              }
Magic Number,WinAppDriver.Handlers,MoveToHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\MoveToHandler.cs,Handle,The following statement contains a magic number: if (request.ID != null)              {                  // TODO not visible? scroll into view                  var id = int.Parse(request.ID);                  var element = this.elementFactory.GetElement(session.GetUIElement(id));                    if (!element.Bounds.HasValue)                  {                      throw new FailedCommandException("Element's bounds are unknown."' 29); // InvalidElementCoordinates                  }                    int x = 0' y = 0;                  if (request.XOffset == null)                  {                      x = element.X.Value + (element.Width.Value / 2);                      y = element.Y.Value + (element.Height.Value / 2);                  }                  else                  {                      x = element.X.Value + int.Parse(request.XOffset);                      y = element.Y.Value + int.Parse(request.YOffset);                  }                    this.overlay.Clear();                  this.overlay.Target = new Point(x' y);                  this.overlay.ShowAndWait(session.Capabilities.OverlayTargetDelay);                    this.mouse.MoveTo(x' y);              }              else              {                  // relative to current position of the mouse                  int x = int.Parse(request.XOffset);                  int y = int.Parse(request.YOffset);                    Point pos = this.mouse.Position;                  this.overlay.Clear();                  this.overlay.Target = new Point(pos.X + x' pos.Y + y);                  this.overlay.ShowAndWait(session.Capabilities.OverlayTargetDelay);                    this.mouse.Move(x' y);              }
Magic Number,WinAppDriver.Handlers,MoveToHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\MoveToHandler.cs,Handle,The following statement contains a magic number: if (request.ID != null)              {                  // TODO not visible? scroll into view                  var id = int.Parse(request.ID);                  var element = this.elementFactory.GetElement(session.GetUIElement(id));                    if (!element.Bounds.HasValue)                  {                      throw new FailedCommandException("Element's bounds are unknown."' 29); // InvalidElementCoordinates                  }                    int x = 0' y = 0;                  if (request.XOffset == null)                  {                      x = element.X.Value + (element.Width.Value / 2);                      y = element.Y.Value + (element.Height.Value / 2);                  }                  else                  {                      x = element.X.Value + int.Parse(request.XOffset);                      y = element.Y.Value + int.Parse(request.YOffset);                  }                    this.overlay.Clear();                  this.overlay.Target = new Point(x' y);                  this.overlay.ShowAndWait(session.Capabilities.OverlayTargetDelay);                    this.mouse.MoveTo(x' y);              }              else              {                  // relative to current position of the mouse                  int x = int.Parse(request.XOffset);                  int y = int.Parse(request.YOffset);                    Point pos = this.mouse.Position;                  this.overlay.Clear();                  this.overlay.Target = new Point(pos.X + x' pos.Y + y);                  this.overlay.ShowAndWait(session.Capabilities.OverlayTargetDelay);                    this.mouse.Move(x' y);              }
Magic Number,WinAppDriver.Desktop,DesktopApp,C:\repos\imsardine_winappdriver\src\WinAppDriver\Desktop\DesktopApp.cs,TriggerCustomAction,The following statement contains a magic number: process.WaitForExit(3 * 60 * 1000);
Magic Number,WinAppDriver.Desktop,DesktopApp,C:\repos\imsardine_winappdriver\src\WinAppDriver\Desktop\DesktopApp.cs,TriggerCustomAction,The following statement contains a magic number: process.WaitForExit(3 * 60 * 1000);
Magic Number,WinAppDriver.Desktop,DesktopApp,C:\repos\imsardine_winappdriver\src\WinAppDriver\Desktop\DesktopApp.cs,TriggerCustomAction,The following statement contains a magic number: process.WaitForExit(3 * 60 * 1000);
Magic Number,WinAppDriver.UI,Element,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Element.cs,ScrollIntoView,The following statement contains a magic number: do              {                  // dimensions of partially displayed elements only reveal visible parts. (XAML-based only)                  int? before = horizontally ? this.Width : this.Height;                  if (horizontally)                  {                      scrollbar.Scroll(step' ScrollAmount.NoAmount);                  }                  else                  {                      scrollbar.Scroll(ScrollAmount.NoAmount' step);                  }                    System.Threading.Thread.Sleep(20); // or the following readings could be stale                  this.ResetCache();                  int? after = horizontally ? this.Width : this.Height;                    if (horizontally)                  {                      if (increasing)                      {                          done = this.X + this.Width <= container.X + container.Width;                      }                      else                      {                          done = this.X >= container.X;                      }                  }                  else                  {                      if (increasing)                      {                          done = this.Y + this.Height <= container.Y + container.Height;                      }                      else                      {                          done = this.Y >= container.Y;                      }                  }                    done = done && (after <= before); // leaving the element                    logger.Debug(                      "Done? {0}; element [{1}'{2}][{3}'{4}] in the scrollable container [{5}'{6}][{7}'{8}]"'                      done' this.X' this.Y' this.Width' this.Height' container.X' container.Y' container.Width' container.Height);              }              while (!done);
Magic Number,WinAppDriver.UI,Keyboard,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Keyboard.cs,Type,The following statement contains a magic number: if (vkeyModifiers != -1)              {                  var vkey = vkeyModifiers & 0xff;                  var modifiers = vkeyModifiers >> 8; // high-order byte = shift state                  bool shiftNeeded = (modifiers & 1) != 0;                  bool shiftPressed = this.IsModifierKeysPressed(System.Windows.Input.ModifierKeys.Shift);                    if (shiftNeeded && !shiftPressed)                  {                      this.SendKeyboardInput(Key.LeftShift' KEYEVENTF.KEYDOWN);                      this.SendKeyboardInput(vkey' KEYEVENTF.KEYDOWN);                      this.SendKeyboardInput(vkey' KEYEVENTF.KEYUP);                      this.SendKeyboardInput(Key.LeftShift' KEYEVENTF.KEYUP);                  }                  else                  {                      this.SendKeyboardInput(vkey' KEYEVENTF.KEYDOWN);                      this.SendKeyboardInput(vkey' KEYEVENTF.KEYUP);                  }              }              else              {                  var message = string.Format("Unicode input is not supported yet. (U+{0})"' ((int)key).ToString("X"));                  throw new WinAppDriverException(message); // TODO Unicode input              }
Magic Number,WinAppDriver.UI,Mouse,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Mouse.cs,MoveTo,The following statement contains a magic number: int duration = 200;
Magic Number,WinAppDriver.UI,Mouse,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\Mouse.cs,MoveTo,The following statement contains a magic number: int steps = 20;
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,OnPaint,The following statement contains a magic number: var contextPen = new Pen(Color.Green' 2);
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,OnPaint,The following statement contains a magic number: var elementPen = new Pen(Color.Red' 2);
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,OnPaint,The following statement contains a magic number: for (int i = 0; i < this.HighlightedElements.Count; i++)              {                  var element = this.HighlightedElements[i];                  var bounds = element.Bounds;                  if (!bounds.HasValue)                  {                      continue;                  }                    elementPen.DashStyle = element.Visible ? DashStyle.Solid : DashStyle.Dash;                  g.DrawRectangle(elementPen' bounds.Value);                  if (numbered)                  {                      g.DrawString(i.ToString()' new Font("Arial"' 13)' new SolidBrush(Color.Red)' new PointF(bounds.Value.X' bounds.Value.Y));                  }              }
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,OnPaint,The following statement contains a magic number: if (this.Target.HasValue)              {                  Point target = this.Target.Value;                  this.DrawTarget(g' target.X' target.Y' 10);              }
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,DrawTarget,The following statement contains a magic number: var pen = new Pen(Color.Red' 2);
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,DrawTarget,The following statement contains a magic number: int segment = radius * 2 / 3;
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,DrawTarget,The following statement contains a magic number: int segment = radius * 2 / 3;
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,DrawTarget,The following statement contains a magic number: g.DrawLine(pen' x - (segment / 2)' y' x + (segment / 2)' y);
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,DrawTarget,The following statement contains a magic number: g.DrawLine(pen' x - (segment / 2)' y' x + (segment / 2)' y);
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,DrawTarget,The following statement contains a magic number: g.DrawLine(pen' x' y - (segment / 2)' x' y + (segment / 2));
Magic Number,WinAppDriver.UI,OverlayForm,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\OverlayForm.cs,DrawTarget,The following statement contains a magic number: g.DrawLine(pen' x' y - (segment / 2)' x' y + (segment / 2));
Magic Number,WinAppDriver.UI,UIAutomation,C:\repos\imsardine_winappdriver\src\WinAppDriver\UI\UIAutomation.cs,UIAutomation,The following statement contains a magic number: foreach (var type in types)              {                  var tag = type.ProgrammaticName.Substring(12); // ControlType.                  controlTypes.Add(new KeyValuePair<ControlType' string>(type' tag));                  tagNames.Add(new KeyValuePair<string' ControlType>(tag' type));              }
Magic Number,WinAppDriver.Modern,StoreAppInstaller,C:\repos\imsardine_winappdriver\src\WinAppDriver\Modern\StoreAppInstaller.cs,InstallImpl,The following statement contains a magic number: string sourceFolder = package.Remove(package.Length - 4);
Magic Number,WinAppDriver.Modern,StoreAppInstaller,C:\repos\imsardine_winappdriver\src\WinAppDriver\Modern\StoreAppInstaller.cs,InstallImpl,The following statement contains a magic number: if (files.Length > 0)              {                  logger.Info("Installing Windows Store App.");                  var command = string.Format(                      "Powershell.exe -executionpolicy remotesigned -NonInteractive -File \"{0}\""'                       files[0].FullName);                  logger.Debug("Command: {0}"' command);                    var process = this.utils.Execute(command' null);                  process.WaitForExit();                  if (process.ExitCode != 0)                  {                      throw new FailedCommandException(                          string.Format("Failed to install the store app. exit = {0}."' process.ExitCode)' 13);                  }              }              else              {                  throw new FailedCommandException("Cannot find .ps1 file in \"" + sourceFolder + "\"."' 13);              }
Magic Number,WinAppDriver.Modern,StoreAppInstaller,C:\repos\imsardine_winappdriver\src\WinAppDriver\Modern\StoreAppInstaller.cs,InstallImpl,The following statement contains a magic number: if (files.Length > 0)              {                  logger.Info("Installing Windows Store App.");                  var command = string.Format(                      "Powershell.exe -executionpolicy remotesigned -NonInteractive -File \"{0}\""'                       files[0].FullName);                  logger.Debug("Command: {0}"' command);                    var process = this.utils.Execute(command' null);                  process.WaitForExit();                  if (process.ExitCode != 0)                  {                      throw new FailedCommandException(                          string.Format("Failed to install the store app. exit = {0}."' process.ExitCode)' 13);                  }              }              else              {                  throw new FailedCommandException("Cannot find .ps1 file in \"" + sourceFolder + "\"."' 13);              }
Magic Number,WinAppDriver.UAC,UACPromptHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\UAC\UACPromptHandler.cs,Handle,The following statement contains a magic number: while (!this.stopped)              {                  while (!this.stopped && this.alive)                  {                      try                      {                          if (this.DismissUACPrompts())                          {                              this.alive = false;                                // wait for the next activation                              Thread.Sleep(Timeout.Infinite);                          }                          else                          {                              Thread.Sleep(1000);                          }                      }                      catch (ThreadInterruptedException)                      {                      }                  }              }
Missing Default,WinAppDriver.Handlers,ButtonUpHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ButtonUpHandler.cs,Handle,The following switch statement is missing a default case: switch (request.Button)              {                  case "1":                      button = MouseButton.Middle;                      break;                    case "2":                      button = MouseButton.Right;                      break;              }
Missing Default,WinAppDriver.Handlers,ClickHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ClickHandler.cs,Handle,The following switch statement is missing a default case: switch (request.Button)              {                  case "1":                      button = MouseButton.Middle;                      break;                    case "2":                      button = MouseButton.Right;                      break;              }
Missing Default,WinAppDriver.Handlers,ButtonDownHandler,C:\repos\imsardine_winappdriver\src\WinAppDriver\Handlers\ButtonDownHandler.cs,Handle,The following switch statement is missing a default case: switch (request.Button)              {                  case "1":                      button = MouseButton.Middle;                      break;                    case "2":                      button = MouseButton.Right;                      break;              }
