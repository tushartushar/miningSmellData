Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,Cyclomatic complexity of the method is 8
Complex Method,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,Cyclomatic complexity of the method is 48
Long Statement,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The length of the statement  "			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat); " is 168.
Long Statement,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The length of the statement  "			g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat); " is 173.
Long Statement,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,menuItemGPS_Start_Click,The length of the statement  "			//GPS.EnableEmulate(@"..\Bristol_Nottingham.txt"); //Uncomment this and change filepath to valid NMEA log file for emulating GPS data " is 133.
Long Statement,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The length of the statement  "		lbGGATimeOfFix.Text = GPS.GPGGA.TimeOfFix.Hour.ToString () + ":" + GPS.GPGGA.TimeOfFix.Minute.ToString () + ":" + GPS.GPGGA.TimeOfFix.Second.ToString (); " is 153.
Long Statement,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The length of the statement  "		lbGLLTimeOfSolution.Text = (GPS.GPGLL.TimeOfSolution.HasValue ? GPS.GPGLL.TimeOfSolution.Value.Hours.ToString () + ":" + GPS.GPGLL.TimeOfSolution.Value.Minutes.ToString () + ":" + GPS.GPGLL.TimeOfSolution.Value.Seconds.ToString () : ""); " is 237.
Long Statement,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,btnNTRIPGetSourceTable_Click,The length of the statement  "	SharpGPS.NTRIP.NTRIPClient ntrip = new SharpGPS.NTRIP.NTRIPClient (new System.Net.IPEndPoint (System.Net.IPAddress.Parse (tbNTRIPServerIP.Text.Trim ())' int.Parse (tbNTRIPPort.Text))' GPS); " is 189.
Long Statement,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The length of the statement  "			int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin))); " is 137.
Long Statement,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The length of the statement  "			int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin))); " is 139.
Long Statement,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The length of the statement  "				g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat); " is 124.
Long Statement,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The length of the statement  "				g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat); " is 125.
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSignals)) {  	g.Clear (Color.White);  	Pen penBlack = new Pen (Color.Black' 1);  	Pen penGray = new Pen (Color.LightGray' 1);  	int iMargin = 4;  	//Distance to edge of image  	int iPadding = 4;  	//Distance between signal bars  	g.DrawRectangle (penBlack' 0' 0' imgSignals.Width - 1' imgSignals.Height - 1);  	StringFormat sFormat = new StringFormat ();  	int barWidth = 1;  	if (SatCount > 0)  		barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  	//Draw horisontal lines  	for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  		g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  	sFormat.Alignment = StringAlignment.Center;  	//Draw satellites  	for (int i = 0; i < SatCount; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		int startx = i * (barWidth + iPadding) + iMargin;  		int starty = imgSignals.Height - 15;  		int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  		g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  		if (gpgsa.PRNInSolution.Contains (sat.PRN))  			g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  		sFormat.LineAlignment = StringAlignment.Near;  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  		sFormat.LineAlignment = StringAlignment.Far;  		g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: if (SatCount > 0)  	barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: barWidth = (imgSignals.Width - 2 * iMargin - iPadding * (SatCount - 1)) / SatCount;  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  	g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  	g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  	g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = imgSignals.Height - 15; i > iMargin; i -= (imgSignals.Height - 15 - iMargin) / 5)  	g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: i -= (imgSignals.Height - 15 - iMargin) / 5
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: i -= (imgSignals.Height - 15 - iMargin) / 5
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: g.DrawLine (penGray' 1' i' imgSignals.Width - 2' i);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: for (int i = 0; i < SatCount; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	int startx = i * (barWidth + iPadding) + iMargin;  	int starty = imgSignals.Height - 15;  	int height = (imgSignals.Height - 15 - iMargin) / 50 * sat.SNR;  	g.FillRectangle (new System.Drawing.SolidBrush (Colors [i])' startx' starty - height' barWidth' height + 1);  	if (gpgsa.PRNInSolution.Contains (sat.PRN))  		g.DrawRectangle (penBlack' startx' starty - height' barWidth' height);  	sFormat.LineAlignment = StringAlignment.Near;  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  	sFormat.LineAlignment = StringAlignment.Far;  	g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  }  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' imgSignals.Height - 15' sFormat);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  
Magic Number,SharpGPS.Demo,GpsSignalLevelChart,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\GpsSignalLevelChart.cs,DrawSignals,The following statement contains a magic number: g.DrawString (sat.SNR.ToString ()' new Font ("Verdana"' 9' FontStyle.Regular)' new System.Drawing.SolidBrush (Color.Black)' startx + barWidth / 2' starty - height' sFormat);  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,MainForm,The following statement contains a magic number: GPS.TimeOut = 5;  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: if (tbRawLog.Text.Length > 20 * 1024 * 1024)//20Kb maximum - prevents crash   {  	tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: if (tbRawLog.Text.Length > 20 * 1024 * 1024)//20Kb maximum - prevents crash   {  	tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: if (tbRawLog.Text.Length > 20 * 1024 * 1024)//20Kb maximum - prevents crash   {  	tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: if (tbRawLog.Text.Length > 20 * 1024 * 1024)//20Kb maximum - prevents crash   {  	tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: if (tbRawLog.Text.Length > 20 * 1024 * 1024)//20Kb maximum - prevents crash   {  	tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: if (tbRawLog.Text.Length > 20 * 1024 * 1024)//20Kb maximum - prevents crash   {  	tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: tbRawLog.Text = tbRawLog.Text.Substring (10 * 1024 * 1024);  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: switch (e.TypeOfEvent) {  case GPSEventType.GPRMC:  	//Recommended minimum specific GPS/Transit data  	if (GPS.HasGPSFix)//Is a GPS fix available?  	 {  		//lbRMCPosition.Text = GPS.GPRMC.Position.ToString("#.000000");  		lbRMCPosition.Text = GPS.GPRMC.Position.ToString ("DMS");  		double[] utmpos = TransformToUTM (GPS.GPRMC.Position);  		lbRMCPositionUTM.Text = utmpos [0].ToString ("#.0N ") + utmpos [0].ToString ("#.0E") + " (Zone: " + utmpos [2] + ")";  		lbRMCCourse.Text = GPS.GPRMC.Course.ToString ();  		lbRMCSpeed.Text = GPS.GPRMC.Speed.ToString () + " mph";  		lbRMCTimeOfFix.Text = GPS.GPRMC.TimeOfFix.ToString ("F");  		lbRMCMagneticVariation.Text = GPS.GPRMC.MagneticVariation.ToString ();  	}  	else {  		statusBar1.Text = "No fix";  		lbRMCCourse.Text = "N/A";  		lbRMCSpeed.Text = "N/A";  		lbRMCTimeOfFix.Text = GPS.GPRMC.TimeOfFix.ToString ();  	}  	break;  case GPSEventType.GPGGA:  	//Global Positioning System Fix Data  	if (GPS.GPGGA.Position != null)  		lbGGAPosition.Text = GPS.GPGGA.Position.ToString ("DM");  	else  		lbGGAPosition.Text = "";  	lbGGATimeOfFix.Text = GPS.GPGGA.TimeOfFix.Hour.ToString () + ":" + GPS.GPGGA.TimeOfFix.Minute.ToString () + ":" + GPS.GPGGA.TimeOfFix.Second.ToString ();  	lbGGAFixQuality.Text = GPS.GPGGA.FixQuality.ToString ();  	lbGGANoOfSats.Text = GPS.GPGGA.NoOfSats.ToString ();  	lbGGAAltitude.Text = GPS.GPGGA.Altitude.ToString () + " " + GPS.GPGGA.AltitudeUnits;  	lbGGAHDOP.Text = GPS.GPGGA.Dilution.ToString ();  	lbGGAGeoidHeight.Text = GPS.GPGGA.HeightOfGeoid.ToString ();  	lbGGADGPSupdate.Text = GPS.GPGGA.DGPSUpdate.ToString ();  	lbGGADGPSID.Text = GPS.GPGGA.DGPSStationID;  	break;  case GPSEventType.GPGLL:  	//Geographic position' Latitude and Longitude  	lbGLLPosition.Text = GPS.GPGLL.Position.ToString ();  	lbGLLTimeOfSolution.Text = (GPS.GPGLL.TimeOfSolution.HasValue ? GPS.GPGLL.TimeOfSolution.Value.Hours.ToString () + ":" + GPS.GPGLL.TimeOfSolution.Value.Minutes.ToString () + ":" + GPS.GPGLL.TimeOfSolution.Value.Seconds.ToString () : "");  	lbGLLDataValid.Text = GPS.GPGLL.DataValid.ToString ();  	break;  case GPSEventType.GPGSA:  	//GPS DOP and active satellites  	if (GPS.GPGSA.Mode == 'A')  		lbGSAMode.Text = "Auto";  	else if (GPS.GPGSA.Mode == 'M')  		lbGSAMode.Text = "Manual";  	else  		lbGSAMode.Text = "";  	lbGSAFixMode.Text = GPS.GPGSA.FixMode.ToString ();  	lbGSAPRNs.Text = "";  	if (GPS.GPGSA.PRNInSolution.Count > 0)  		foreach (string prn in GPS.GPGSA.PRNInSolution)  			lbGSAPRNs.Text += prn + " ";  	else  		lbGSAPRNs.Text += "none";  	lbGSAPDOP.Text = GPS.GPGSA.PDOP.ToString () + " (" + DOPtoWord (GPS.GPGSA.PDOP) + ")";  	lbGSAHDOP.Text = GPS.GPGSA.HDOP.ToString () + " (" + DOPtoWord (GPS.GPGSA.HDOP) + ")";  	lbGSAVDOP.Text = GPS.GPGSA.VDOP.ToString () + " (" + DOPtoWord (GPS.GPGSA.VDOP) + ")";  	break;  case GPSEventType.GPGSV:  	//Satellites in view  	if (NMEAtabs.TabPages [NMEAtabs.SelectedIndex].Text == "GPGSV")  		//Only update this tab when it is active  		DrawGSV ();  	break;  case GPSEventType.PGRME:  	//Garmin proprietary sentences.  	lbRMEHorError.Text = GPS.PGRME.EstHorisontalError.ToString ();  	lbRMEVerError.Text = GPS.PGRME.EstVerticalError.ToString ();  	lbRMESphericalError.Text = GPS.PGRME.EstSphericalError.ToString ();  	break;  case GPSEventType.TimeOut:  	//Serialport timeout.  	statusBar1.Text = "Serialport timeout";  	/*notification1.Caption = "GPS Serialport timeout"; 					notification1.InitialDuration = 5; 					notification1.Text = "Check your settings and connection"; 					notification1.Critical = false; 					notification1.Visible = true; 					 */break;  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: if (GPS.HasGPSFix)//Is a GPS fix available?   {  	//lbRMCPosition.Text = GPS.GPRMC.Position.ToString("#.000000");  	lbRMCPosition.Text = GPS.GPRMC.Position.ToString ("DMS");  	double[] utmpos = TransformToUTM (GPS.GPRMC.Position);  	lbRMCPositionUTM.Text = utmpos [0].ToString ("#.0N ") + utmpos [0].ToString ("#.0E") + " (Zone: " + utmpos [2] + ")";  	lbRMCCourse.Text = GPS.GPRMC.Course.ToString ();  	lbRMCSpeed.Text = GPS.GPRMC.Speed.ToString () + " mph";  	lbRMCTimeOfFix.Text = GPS.GPRMC.TimeOfFix.ToString ("F");  	lbRMCMagneticVariation.Text = GPS.GPRMC.MagneticVariation.ToString ();  }  else {  	statusBar1.Text = "No fix";  	lbRMCCourse.Text = "N/A";  	lbRMCSpeed.Text = "N/A";  	lbRMCTimeOfFix.Text = GPS.GPRMC.TimeOfFix.ToString ();  }  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following statement contains a magic number: lbRMCPositionUTM.Text = utmpos [0].ToString ("#.0N ") + utmpos [0].ToString ("#.0E") + " (Zone: " + utmpos [2] + ")";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 1.5)  	return "Ideal";  else if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 1.5)  	return "Ideal";  else if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 1.5)  	return "Ideal";  else if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 1.5)  	return "Ideal";  else if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 1.5)  	return "Ideal";  else if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 3)  	return "Excellent";  else if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 6)  	return "Good";  else if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 8)  	return "Moderate";  else if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,DOPtoWord,The following statement contains a magic number: if (dop < 20)  	return "Fair";  else  	return "Poor";  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (imgSkyview)) {  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.White' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' 0' 0' imgSkyview.Width - 1' imgSkyview.Height - 1);  	g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  	g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  	g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  	sFormat.LineAlignment = StringAlignment.Near;  	sFormat.Alignment = StringAlignment.Near;  	float radius = 6f;  	for (int i = 0; i < gpgsv.Satellites.Count; i++) {  		SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  		double ang = 90.0 - sat.Azimuth;  		ang = ang / 180.0 * Math.PI;  		int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  		int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  		g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  			g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  			g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  		}  		else  			g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  	}  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawEllipse (penGray' imgSkyview.Width / 4' imgSkyview.Height / 4' imgSkyview.Width / 2' imgSkyview.Height / 2);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawLine (penGray' imgSkyview.Width / 2' 0' imgSkyview.Width / 2' imgSkyview.Height);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawLine (penGray' 0' imgSkyview.Height / 2' imgSkyview.Width' imgSkyview.Height / 2);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: for (int i = 0; i < gpgsv.Satellites.Count; i++) {  	SharpGPS.NMEA.GPGSV.Satellite sat = gpgsv.Satellites [i];  	double ang = 90.0 - sat.Azimuth;  	ang = ang / 180.0 * Math.PI;  	int x = imgSkyview.Width / 2 + (int)Math.Round ((Math.Cos (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Width / 2.0 - iMargin)));  	int y = imgSkyview.Height / 2 - (int)Math.Round ((Math.Sin (ang) * ((90.0 - sat.Elevation) / 90.0) * (imgSkyview.Height / 2.0 - iMargin)));  	g.FillEllipse (new System.Drawing.SolidBrush (Colors [i])' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  		g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  		g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  	}  	else  		g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  }  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: ang = ang / 180.0 * Math.PI;  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  	g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  }  else  	g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: if (gpgsa.PRNInSolution.Contains (sat.PRN)) {  	g.DrawEllipse (penBlack' x - radius * 0.5f' y - radius * 0.5f' radius' radius);  	g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  }  else  	g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawString (sat.PRN' new Font ("Verdana"' 9' FontStyle.Bold)' new System.Drawing.SolidBrush (Color.Black)' x' y' sFormat);  
Magic Number,SharpGPS.Demo,SkyView,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\Skyview.cs,DrawGSV,The following statement contains a magic number: g.DrawString (sat.PRN' new Font ("Verdana"' 8' FontStyle.Italic)' new System.Drawing.SolidBrush (Color.Gray)' x' y' sFormat);  
Missing Default,SharpGPS.Demo,MainForm,C:\repos\fivepmtechnology_SharpGPS\src\Demo_WinForms\MainForm.cs,GPSEventHandler,The following switch statement is missing a default case: switch (e.TypeOfEvent) {  case GPSEventType.GPRMC:  	//Recommended minimum specific GPS/Transit data  	if (GPS.HasGPSFix)//Is a GPS fix available?  	 {  		//lbRMCPosition.Text = GPS.GPRMC.Position.ToString("#.000000");  		lbRMCPosition.Text = GPS.GPRMC.Position.ToString ("DMS");  		double[] utmpos = TransformToUTM (GPS.GPRMC.Position);  		lbRMCPositionUTM.Text = utmpos [0].ToString ("#.0N ") + utmpos [0].ToString ("#.0E") + " (Zone: " + utmpos [2] + ")";  		lbRMCCourse.Text = GPS.GPRMC.Course.ToString ();  		lbRMCSpeed.Text = GPS.GPRMC.Speed.ToString () + " mph";  		lbRMCTimeOfFix.Text = GPS.GPRMC.TimeOfFix.ToString ("F");  		lbRMCMagneticVariation.Text = GPS.GPRMC.MagneticVariation.ToString ();  	}  	else {  		statusBar1.Text = "No fix";  		lbRMCCourse.Text = "N/A";  		lbRMCSpeed.Text = "N/A";  		lbRMCTimeOfFix.Text = GPS.GPRMC.TimeOfFix.ToString ();  	}  	break;  case GPSEventType.GPGGA:  	//Global Positioning System Fix Data  	if (GPS.GPGGA.Position != null)  		lbGGAPosition.Text = GPS.GPGGA.Position.ToString ("DM");  	else  		lbGGAPosition.Text = "";  	lbGGATimeOfFix.Text = GPS.GPGGA.TimeOfFix.Hour.ToString () + ":" + GPS.GPGGA.TimeOfFix.Minute.ToString () + ":" + GPS.GPGGA.TimeOfFix.Second.ToString ();  	lbGGAFixQuality.Text = GPS.GPGGA.FixQuality.ToString ();  	lbGGANoOfSats.Text = GPS.GPGGA.NoOfSats.ToString ();  	lbGGAAltitude.Text = GPS.GPGGA.Altitude.ToString () + " " + GPS.GPGGA.AltitudeUnits;  	lbGGAHDOP.Text = GPS.GPGGA.Dilution.ToString ();  	lbGGAGeoidHeight.Text = GPS.GPGGA.HeightOfGeoid.ToString ();  	lbGGADGPSupdate.Text = GPS.GPGGA.DGPSUpdate.ToString ();  	lbGGADGPSID.Text = GPS.GPGGA.DGPSStationID;  	break;  case GPSEventType.GPGLL:  	//Geographic position' Latitude and Longitude  	lbGLLPosition.Text = GPS.GPGLL.Position.ToString ();  	lbGLLTimeOfSolution.Text = (GPS.GPGLL.TimeOfSolution.HasValue ? GPS.GPGLL.TimeOfSolution.Value.Hours.ToString () + ":" + GPS.GPGLL.TimeOfSolution.Value.Minutes.ToString () + ":" + GPS.GPGLL.TimeOfSolution.Value.Seconds.ToString () : "");  	lbGLLDataValid.Text = GPS.GPGLL.DataValid.ToString ();  	break;  case GPSEventType.GPGSA:  	//GPS DOP and active satellites  	if (GPS.GPGSA.Mode == 'A')  		lbGSAMode.Text = "Auto";  	else if (GPS.GPGSA.Mode == 'M')  		lbGSAMode.Text = "Manual";  	else  		lbGSAMode.Text = "";  	lbGSAFixMode.Text = GPS.GPGSA.FixMode.ToString ();  	lbGSAPRNs.Text = "";  	if (GPS.GPGSA.PRNInSolution.Count > 0)  		foreach (string prn in GPS.GPGSA.PRNInSolution)  			lbGSAPRNs.Text += prn + " ";  	else  		lbGSAPRNs.Text += "none";  	lbGSAPDOP.Text = GPS.GPGSA.PDOP.ToString () + " (" + DOPtoWord (GPS.GPGSA.PDOP) + ")";  	lbGSAHDOP.Text = GPS.GPGSA.HDOP.ToString () + " (" + DOPtoWord (GPS.GPGSA.HDOP) + ")";  	lbGSAVDOP.Text = GPS.GPGSA.VDOP.ToString () + " (" + DOPtoWord (GPS.GPGSA.VDOP) + ")";  	break;  case GPSEventType.GPGSV:  	//Satellites in view  	if (NMEAtabs.TabPages [NMEAtabs.SelectedIndex].Text == "GPGSV")  		//Only update this tab when it is active  		DrawGSV ();  	break;  case GPSEventType.PGRME:  	//Garmin proprietary sentences.  	lbRMEHorError.Text = GPS.PGRME.EstHorisontalError.ToString ();  	lbRMEVerError.Text = GPS.PGRME.EstVerticalError.ToString ();  	lbRMESphericalError.Text = GPS.PGRME.EstSphericalError.ToString ();  	break;  case GPSEventType.TimeOut:  	//Serialport timeout.  	statusBar1.Text = "Serialport timeout";  	/*notification1.Caption = "GPS Serialport timeout"; 					notification1.InitialDuration = 5; 					notification1.Text = "Check your settings and connection"; 					notification1.Critical = false; 					notification1.Visible = true; 					 */break;  }  
