Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Distance,Cyclomatic complexity of the method is 8
Complex Method,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,CompareTo,Cyclomatic complexity of the method is 12
Complex Method,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Distance,Cyclomatic complexity of the method is 8
Complex Method,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,GeoAPI,GeometryServiceProvider,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\GeometryServiceProvider.cs,InitializeInstance,Cyclomatic complexity of the method is 10
Long Parameter List,GeoAPI.Geometries,ICoordinateBuffer,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\ICoordinateBuffer.cs,AddCoordinate,The method has 5 parameters. Parameters: x' y' z' m' allowRepeated
Long Parameter List,GeoAPI.Geometries,ICoordinateBuffer,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\ICoordinateBuffer.cs,InsertCoordinate,The method has 6 parameters. Parameters: index' x' y' z' m' allowRepeated
Long Statement,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The length of the statement  "                if (!ValueParser.TryParse(ordinates[0].Trim()' NumberStyles.Number' NumberFormatInfo.InvariantInfo' out ordinatesValues[2 * j]))" is 128.
Long Statement,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The length of the statement  "                if (!ValueParser.TryParse(ordinates[1].Trim()' NumberStyles.Number' NumberFormatInfo.InvariantInfo' out ordinatesValues[2 * j + 1]))" is 132.
Long Statement,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Matches,The length of the statement  "            if (requiredDimensionSymbol == DimensionUtility.SymTrue && (actualDimensionValue >= Dimension.Point || actualDimensionValue == Dimension.True))" is 143.
Long Statement,GeoAPI,GeometryServiceProvider,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\GeometryServiceProvider.cs,InitializeInstance,The length of the statement  "#if COMPAT_BOOTSTRAP_USING_REFLECTION && HAS_SYSTEM_APPDOMAIN_GETASSEMBLIES && HAS_SYSTEM_REFLECTION_ASSEMBLY_GETEXPORTEDTYPES" is 126.
Complex Conditional,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,IsTouches,The conditional expression  "(dimensionOfGeometryA == Dimension.Surface && dimensionOfGeometryB == Dimension.Surface) ||                 (dimensionOfGeometryA == Dimension.Curve && dimensionOfGeometryB == Dimension.Curve) ||                 (dimensionOfGeometryA == Dimension.Curve && dimensionOfGeometryB == Dimension.Surface) ||                 (dimensionOfGeometryA == Dimension.Point && dimensionOfGeometryB == Dimension.Surface) ||                 (dimensionOfGeometryA == Dimension.Point && dimensionOfGeometryB == Dimension.Curve)"  is complex.
Complex Conditional,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,IsCrosses,The conditional expression  "(dimensionOfGeometryA == Dimension.Point && dimensionOfGeometryB == Dimension.Curve) ||                 (dimensionOfGeometryA == Dimension.Point && dimensionOfGeometryB == Dimension.Surface) ||                 (dimensionOfGeometryA == Dimension.Curve && dimensionOfGeometryB == Dimension.Surface)"  is complex.
Complex Conditional,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,IsCrosses,The conditional expression  "(dimensionOfGeometryA == Dimension.Curve && dimensionOfGeometryB == Dimension.Point) ||                 (dimensionOfGeometryA == Dimension.Surface && dimensionOfGeometryB == Dimension.Point) ||                 (dimensionOfGeometryA == Dimension.Surface && dimensionOfGeometryB == Dimension.Curve)"  is complex.
Complex Conditional,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,IsOverlaps,The conditional expression  "(dimensionOfGeometryA == Dimension.Point && dimensionOfGeometryB == Dimension.Point) ||                 (dimensionOfGeometryA == Dimension.Surface && dimensionOfGeometryB == Dimension.Surface)"  is complex.
Complex Conditional,GeoAPI,GeometryServiceProvider,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\GeometryServiceProvider.cs,InitializeInstance,The conditional expression  "type.IsNotPublic || type.IsInterface || type.IsAbstract || !requiredType.IsAssignableFrom(type)"  is complex.
Magic Number,GeoAPI.DataStructures,Interval,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\DataStructures\Interval.cs,GetHashCode,The following statement contains a magic number: return 52876 ^ Min.GetHashCode();
Magic Number,GeoAPI.Geometries,Coordinate,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Coordinate.cs,GetHashCode,The following statement contains a magic number: var result = 17;
Magic Number,GeoAPI.Geometries,Coordinate,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Coordinate.cs,GetHashCode,The following statement contains a magic number: result = 37 * result + GetHashCode(X);
Magic Number,GeoAPI.Geometries,Coordinate,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Coordinate.cs,GetHashCode,The following statement contains a magic number: result = 37 * result + GetHashCode(Y);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,GetHashCode,The following statement contains a magic number: var result = 17;
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,GetHashCode,The following statement contains a magic number: result = 37 * result + GetHashCode(_minx);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,GetHashCode,The following statement contains a magic number: result = 37 * result + GetHashCode(_maxx);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,GetHashCode,The following statement contains a magic number: result = 37 * result + GetHashCode(_miny);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,GetHashCode,The following statement contains a magic number: result = 37 * result + GetHashCode(_maxy);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,SetCentre,The following statement contains a magic number: _minx = centre.X - (width / 2);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,SetCentre,The following statement contains a magic number: _maxx = centre.X + (width / 2);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,SetCentre,The following statement contains a magic number: _miny = centre.Y - (height / 2);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,SetCentre,The following statement contains a magic number: _maxy = centre.Y + (height / 2);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Zoom,The following statement contains a magic number: double w = (Width * perCent / 100);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Zoom,The following statement contains a magic number: double h = (Height * perCent / 100);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: envelope = envelope.Substring(4' envelope.Length - 5);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: envelope = envelope.Substring(4' envelope.Length - 5);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: var ordinatesValues = new double[4];
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: parts.Length != 2
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: ordinates.Length != 2
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: !ValueParser.TryParse(ordinates[0].Trim()' NumberStyles.Number' NumberFormatInfo.InvariantInfo' out ordinatesValues[2 * j])
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: !ValueParser.TryParse(ordinates[1].Trim()' NumberStyles.Number' NumberFormatInfo.InvariantInfo' out ordinatesValues[2 * j + 1])
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: return new Envelope(ordinatesValues[0]' ordinatesValues[1]'                                 ordinatesValues[2]' ordinatesValues[3]);
Magic Number,GeoAPI.Geometries,Envelope,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Envelope.cs,Parse,The following statement contains a magic number: return new Envelope(ordinatesValues[0]' ordinatesValues[1]'                                 ordinatesValues[2]' ordinatesValues[3]);
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,IntersectionMatrix,The following statement contains a magic number: _matrix = new Dimension[3' 3];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,IntersectionMatrix,The following statement contains a magic number: _matrix = new Dimension[3' 3];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Add,The following statement contains a magic number: i < 3
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Set,The following statement contains a magic number: int row = i / 3;
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Set,The following statement contains a magic number: int col = i % 3;
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,SetAtLeast,The following statement contains a magic number: int row = i / 3;
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,SetAtLeast,The following statement contains a magic number: int col = i % 3;
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,SetAll,The following statement contains a magic number: ai < 3
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Matches,The following statement contains a magic number: requiredDimensionSymbols.Length != 9
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Matches,The following statement contains a magic number: !Matches(_matrix[ai' bi]' requiredDimensionSymbols[3 * ai + bi])
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Matches,The following statement contains a magic number: ai < 3
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: temp = _matrix[2' 0];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: _matrix[2' 0] = _matrix[0' 2];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: _matrix[2' 0] = _matrix[0' 2];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: _matrix[0' 2] = temp;
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: temp = _matrix[2' 1];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: _matrix[2' 1] = _matrix[1' 2];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: _matrix[2' 1] = _matrix[1' 2];
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,Transpose,The following statement contains a magic number: _matrix[1' 2] = temp;
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,ToString,The following statement contains a magic number: buf[3 * ai + bi] = DimensionUtility.ToDimensionSymbol(_matrix[ai' bi]);
Magic Number,GeoAPI.Geometries,IntersectionMatrix,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\IntersectionMatrix.cs,ToString,The following statement contains a magic number: ai < 3
Magic Number,GeoAPI.Geometries,OrdinatesUtility,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\OridinatesUtility.cs,OrdinatesToDimension,The following statement contains a magic number: var ret = 2;
Magic Number,GeoAPI.Geometries,OrdinatesUtility,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\OridinatesUtility.cs,DimensionToOrdinates,The following statement contains a magic number: dimension == 3
Magic Number,GeoAPI.Geometries,OrdinatesUtility,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\OridinatesUtility.cs,DimensionToOrdinates,The following statement contains a magic number: dimension == 4
Magic Number,GeoAPI.Geometries,OrdinatesUtility,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\OridinatesUtility.cs,ToOrdinateArray,The following statement contains a magic number: maxEval = 32;
Magic Number,GeoAPI.Geometries,OrdinatesUtility,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\OridinatesUtility.cs,ToOrdinateArray,The following statement contains a magic number: maxEval > 32
Missing Default,GeoAPI.Geometries,LocationUtility,C:\research\architectureSmells\repos\NetTopologySuite_GeoAPI\src\GeoAPI\Geometries\Location.cs,ToLocationSymbol,The following switch statement is missing a default case: switch (locationValue)             {                 case Location.Exterior:                     return 'e';                 case Location.Boundary:                     return 'b';                 case Location.Interior:                     return 'i';                 case Location.Null:                     return '-';             }
