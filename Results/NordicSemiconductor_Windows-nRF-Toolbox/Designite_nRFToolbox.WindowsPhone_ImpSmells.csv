Implementation smell,Namespace,Class,File,Method,Description
Long Method,nRFToolbox.ViewModels,NordicUartControlButtonViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\NordicUartControlButtonViewModel.cs,InitializeAllControlButton,The method has 125 lines of code.
Complex Method,nRFToolbox,MainPage,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\MainPage.xaml.cs,profileGridView_ItemClick,Cyclomatic complexity of the method is 22
Complex Method,nRFToolbox,Settings,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Settings.xaml.cs,ResolvePageHeader,Cyclomatic complexity of the method is 24
Complex Method,nRFToolbox.Common,ContinuationManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Common\ContinuationManager.cs,Continue,Cyclomatic complexity of the method is 22
Complex Method,nRFToolbox.DataModel,DeviceInformationItem,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\DataModel\DeviceInformation.cs,DeviceInformationItem,Cyclomatic complexity of the method is 77
Complex Method,nRFToolbox.ViewModels,BloodPressureMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\BloodPressureMonitorViewModel.cs,GetService,Cyclomatic complexity of the method is 11
Complex Method,nRFToolbox.ViewModels,GlucoseMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\GlucoseMonitorViewModel.cs,GetGlocuseServices,Cyclomatic complexity of the method is 11
Complex Method,nRFToolbox.ViewModels,ProximityViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\ProximityViewModel.cs,GetProximityMonitorServices,Cyclomatic complexity of the method is 12
Long Parameter List,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,StartDeviceFirmwareUpdate,The method has 5 parameters.
Long Parameter List,nRFToolbox.UI,NavigationHelper,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Structure\NavigationHelper.cs,NavigationHelper,The method has 5 parameters.
Long Identifier,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateGlucoseMonitorSettingViewModel,The length of the parameter glucoseMonitorSettingViewModel is 30.
Long Identifier,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateHeartRateMonitorSettingViewModel,The length of the parameter heartRateMonitorSettingViewModel is 32.
Long Identifier,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateDFUSettingPageViewModel,The length of the parameter deviceFirmwareUpdateSettingPageViewModel is 40.
Long Identifier,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateBloodPressureMonitorSettingViewModel,The length of the parameter bloodPressureMonitorSettingPageViewModel is 40.
Long Statement,nRFToolbox,BloodPressureMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\BloodPressureMonitor.xaml.cs,InitialControls,The length of the statement  "	if (chosenDevice != null && chosenDevice.ConnectionStatus == BluetoothConnectionStatus.Connected && BloodPressureMonitorViewModel.IsServiceStarted) { " is 149.
Long Statement,nRFToolbox,BloodPressureMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\BloodPressureMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	deviceSelectionFlyout = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.DEVICE_SELECTION_FLYOUT) as Flyout; " is 121.
Long Statement,nRFToolbox,BloodPressureMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\BloodPressureMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.AVAILABLE_DEVICE_LIST) as ListView; " is 150.
Long Statement,nRFToolbox,BloodPressureMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\BloodPressureMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent.ItemsSource = BloodPressureMonitorViewModel.DeviceSelectionViewModel.BleDevices; " is 131.
Long Statement,nRFToolbox,DeviceFirmwareUpdate,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\DeviceFirmwareUpdate.xaml.cs,RegisterFramworkElements,The length of the statement  "	deviceSelectionFlyout = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.DEVICE_SELECTION_FLYOUT) as Flyout; " is 121.
Long Statement,nRFToolbox,DeviceFirmwareUpdate,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\DeviceFirmwareUpdate.xaml.cs,RegisterFramworkElements,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.AVAILABLE_DEVICE_LIST) as ListView; " is 150.
Long Statement,nRFToolbox,DeviceFirmwareUpdate,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\DeviceFirmwareUpdate.xaml.cs,RegisterFramworkElements,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent.ItemsSource = deviceFirmwareUpdateViewModel.DeviceSelectionViewModel.BleDevices; " is 131.
Long Statement,nRFToolbox,GattServiceManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Gatt\GATTServiceManager.cs,RegisterServices,The length of the statement  "	container.RegisterType<IDeviceFirmwareUpdateControlPointCharacteristics' DeviceFirmwareUpdateControlPointCharacteristics> (); " is 125.
Long Statement,nRFToolbox,GattServiceManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Gatt\GATTServiceManager.cs,RegisterServices,The length of the statement  "	container.RegisterType<HeartRateService> (new InjectionConstructor (container.Resolve<HeartRateMeasurementCharacteristic> ()' container.Resolve<BodySensorLocationCharacteristics> ())); " is 184.
Long Statement,nRFToolbox,GattServiceManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Gatt\GATTServiceManager.cs,RegisterServices,The length of the statement  "	container.RegisterType<ImmediateAlertService> (new InjectionConstructor (container.Resolve<AlertLevelCharacteristics> ())); " is 123.
Long Statement,nRFToolbox,GattServiceManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Gatt\GATTServiceManager.cs,RegisterServices,The length of the statement  "	container.RegisterType<DeviceFirmwareUpdateService> (new InjectionConstructor (container.Resolve<DeviceFirmwareUpdatePacketCharacteristics> ()' container.Resolve<DeviceFirmwareUpdateControlPointCharacteristics> ())); " is 216.
Long Statement,nRFToolbox,GattServiceManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Gatt\GATTServiceManager.cs,RegisterServices,The length of the statement  "	container.RegisterType<UARTService> (new InjectionConstructor (container.Resolve<IRXCharacteristic> ()' container.Resolve<ITXCharacteristic> ())); " is 146.
Long Statement,nRFToolbox,GattServiceManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Gatt\GATTServiceManager.cs,RegisterServices,The length of the statement  "	container.RegisterType<GlocuseService> (new InjectionConstructor (container.Resolve<IGlucoseMeasurementCharacteristic> ()' container.Resolve<IGlucoseFeatureCharacteristic> ()' container.Resolve<IRecordAccessControlPointCharacteristic> ())); " is 240.
Long Statement,nRFToolbox,GattServiceManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Gatt\GATTServiceManager.cs,RegisterServices,The length of the statement  "	container.RegisterType<BloodPressureService> (new InjectionConstructor (container.Resolve<IBloodPressureMeasurementCharacteristic> ()' container.Resolve<IBloodPressureFeatureCharacterisctic> ())); " is 196.
Long Statement,nRFToolbox,GlucoseMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\GlucoseMonitor.xaml.cs,InitialControls,The length of the statement  "	if (chosenDevice != null && chosenDevice.ConnectionStatus == BluetoothConnectionStatus.Connected && GlucoseMonitorViewModel.IsServiceStarted) { " is 143.
Long Statement,nRFToolbox,GlucoseMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\GlucoseMonitor.xaml.cs,InitialControls,The length of the statement  "	if (chosenDevice != null && chosenDevice.ConnectionStatus == BluetoothConnectionStatus.Disconnected && GlucoseMonitorViewModel.IsServiceStarted) { " is 146.
Long Statement,nRFToolbox,GlucoseMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\GlucoseMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	deviceSelectionFlyout = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.DEVICE_SELECTION_FLYOUT) as Flyout; " is 121.
Long Statement,nRFToolbox,GlucoseMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\GlucoseMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.AVAILABLE_DEVICE_LIST) as ListView; " is 150.
Long Statement,nRFToolbox,GlucoseMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\GlucoseMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent.ItemsSource = GlucoseMonitorViewModel.DeviceSelectionViewModel.BleDevices; " is 125.
Long Statement,nRFToolbox,HeartRateMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\HeartRateMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	deviceSelectionFlyout = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.DEVICE_SELECTION_FLYOUT) as Flyout; " is 121.
Long Statement,nRFToolbox,HeartRateMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\HeartRateMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.AVAILABLE_DEVICE_LIST) as ListView; " is 150.
Long Statement,nRFToolbox,HeartRateMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\HeartRateMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent.ItemsSource = heartRateMonitorViewModel.DeviceSelectionViewModel.BleDevices; " is 127.
Long Statement,nRFToolbox,NordicUART,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUART.xaml.cs,NavigationHelper_LoadState,The length of the statement  "	if (nordicUARTViewModel.chosenDevice != null && nordicUARTViewModel.chosenDevice.ConnectionStatus == BluetoothConnectionStatus.Connected && nordicUARTViewModel.uartService.IsServiceStarted) { " is 191.
Long Statement,nRFToolbox,NordicUART,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUART.xaml.cs,RegisterFramworkElements,The length of the statement  "	deviceSelectionFlyout = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.DEVICE_SELECTION_FLYOUT) as Flyout; " is 121.
Long Statement,nRFToolbox,NordicUART,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUART.xaml.cs,RegisterFramworkElements,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.AVAILABLE_DEVICE_LIST) as ListView; " is 150.
Long Statement,nRFToolbox,NordicUART,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUART.xaml.cs,RegisterFramworkElements,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent.ItemsSource = nordicUARTViewModel.DeviceSelectionViewModel.BleDevices; " is 121.
Long Statement,nRFToolbox,NordicUART,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUART.xaml.cs,RegisterUartVoiceCommand,The length of the statement  "	var storageFile = await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync (new Uri ("ms-appx:///UartVoiceCommand.xml")); " is 129.
Long Statement,nRFToolbox,NordicUART,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUART.xaml.cs,VoiceIconTapped,The length of the statement  "	Windows.Media.SpeechRecognition.SpeechRecognitionResult speechRecognitionResult = await speechRecognizer.RecognizeWithUIAsync (); " is 129.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,NavigationHelper_LoadState,The length of the statement  "	if (nordicUartControlButtonViewModel.chosenDevice != null && nordicUartControlButtonViewModel.chosenDevice.ConnectionStatus == BluetoothConnectionStatus.Connected && nordicUartControlButtonViewModel.uartService.IsServiceStarted) { " is 230.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,RegisterFramworkElements,The length of the statement  "	deviceSelectionFlyout = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.DEVICE_SELECTION_FLYOUT) as Flyout; " is 121.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,RegisterFramworkElements,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.AVAILABLE_DEVICE_LIST) as ListView; " is 150.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,RegisterFramworkElements,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent.ItemsSource = this.nordicUartControlButtonViewModel.DeviceSelectionViewModel.BleDevices; " is 139.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,RegisterFramworkElements,The length of the statement  "	buttonSelectionFlyout = buttonSelectionControl.FindName (ControlButtonSelectionFlyoutControl.BUTTON_SELECTION_FLYOUT) as Flyout; " is 128.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,RegisterFramworkElements,The length of the statement  "	availableButtonsGridView = buttonSelectionControl.FindName (ControlButtonSelectionFlyoutControl.AVAILABLE_BUTTON) as GridView; " is 126.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,VoiceIconTapped,The length of the statement  "	Windows.Media.SpeechRecognition.SpeechRecognitionResult speechRecognitionResult = await speechRecognizer.RecognizeWithUIAsync (); " is 129.
Long Statement,nRFToolbox,NordicUartButtonControlPanel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\NordicUartButtonControlPanel.xaml.cs,RegisterUartVoiceCommand,The length of the statement  "	var storageFile = await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync (new Uri ("ms-appx:///UartVoiceCommand.xml")); " is 129.
Long Statement,nRFToolbox,ProximityMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ProximityMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	deviceSelectionFlyout = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.DEVICE_SELECTION_FLYOUT) as Flyout; " is 121.
Long Statement,nRFToolbox,ProximityMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ProximityMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent = deviceSelectionControl.FindName (DeviceSelectionFlyoutControl.AVAILABLE_DEVICE_LIST) as ListView; " is 150.
Long Statement,nRFToolbox,ProximityMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ProximityMonitor.xaml.cs,RegisterDeviceSelectionControl,The length of the statement  "	availableDevicesListInDeviceSelectionFlyoutContent.ItemsSource = proximityViewModel.DeviceSelectionViewModel.BleDevices; " is 120.
Long Statement,nRFToolbox,Settings,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Settings.xaml.cs,NavigationHelper_SaveState,The length of the statement  "	//	localSettings.Containers[toolboxSettingContainerKey].Values[dfuSettingViewModel.FavoriteFolderToken] = dfuSettingViewModel.FavoriteFolder; " is 141.
Long Statement,nRFToolbox,Settings,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Settings.xaml.cs,WriteReview_Clicked,The length of the statement  "	await Windows.System.Launcher.LaunchUriAsync (new Uri ("ms-windows-store:reviewapp?appid=" + SettingPivotViewModel.GetInstance ().GetAboutPageViewModel ().AppID)); " is 163.
Long Statement,nRFToolbox,Settings,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Settings.xaml.cs,DFUSettingPage_Loaded,The length of the statement  "	if (DeviceFirmwareUpdateSettingPageViewModel.FavoriteFolderToken != null && StorageApplicationPermissions.FutureAccessList.ContainsItem (DeviceFirmwareUpdateSettingPageViewModel.FavoriteFolderToken)) { " is 201.
Long Statement,nRFToolbox,Settings,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Settings.xaml.cs,DFUSettingPage_Loaded,The length of the statement  "		var cachedFolder = await StorageApplicationPermissions.FutureAccessList.GetFolderAsync (DeviceFirmwareUpdateSettingPageViewModel.FavoriteFolderToken' AccessCacheOptions.None) as StorageFolder; " is 192.
Long Statement,nRFToolbox,App,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\App.xaml.cs,RegisterUartVoiceCommand,The length of the statement  "	var storageFile = await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync (new Uri ("ms-appx:///UartVoiceCommand.xml")); " is 129.
Long Statement,nRFToolbox.ViewModels,BloodPressureMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\BloodPressureMonitorViewModel.cs,UpdateAvailableDevice,The length of the statement  "		var result = await DeviceInformation.FindAllAsync (GattDeviceService.GetDeviceSelectorFromUuid (GattServiceUuids.BloodPressure)); " is 129.
Long Statement,nRFToolbox.ViewModels,BloodPressureMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\BloodPressureMonitorViewModel.cs,Start,The length of the statement  "	if (chosenDevice.Services.TryGetValue (ToolboxIdentifications.GattServiceNames.BLOOD_PRESSURE' out bloodPressureService)) " is 121.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,LoadDFUSettings,The length of the statement  "	this.SelectedDeviceFirmwareTypeName = dfuSettingViewModel.SelectedDeviceFirmwareTypeName == null ? "Image type:" : dfuSettingViewModel.SelectedDeviceFirmwareTypeName; " is 166.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,deviceFirmwareUpdateService_ServiceChanged,The length of the statement  "	if (newDevice != null && newDevice.Services.TryGetValue (ToolboxIdentifications.GattServiceNames.DEVICE_FIRMWARE_UPDATE' out dfuService)) { " is 139.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,StartDeviceFirmwareUpdate,The length of the statement  "	targetDevice.Services.TryGetValue (ToolboxIdentifications.GattServiceNames.DEVICE_FIRMWARE_UPDATE' out deviceFirmwareUpdate); " is 125.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,StartDeviceFirmwareUpdate,The length of the statement  "				var imageFile = ChosenFiles.Find (x => x.Name == dfuSettingViewModel.manifestObject.manifest.softdevice_bootloader.bin_file); " is 125.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,StartDeviceFirmwareUpdate,The length of the statement  "				var dataFile = ChosenFiles.Find (x => x.Name == dfuSettingViewModel.manifestObject.manifest.softdevice_bootloader.dat_file); " is 124.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,StartDeviceFirmwareUpdate,The length of the statement  "				await deviceFirmwareUpdateService.Start (deviceFirmwareUpdate' genericAttribute' type' dataFile' imageFile' sdSize' blSize); " is 124.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,StartDeviceFirmwareUpdate,The length of the statement  "			await UpdateDFUStatus (DeviceFirmwareUpdateStatusEnum.DFU_ERROR' 0' this.exception.GetType ().ToString ()' this.exception.Message); " is 131.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,UpdateAvailableDevice,The length of the statement  "		var result = await DeviceInformation.FindAllAsync (GattDeviceService.GetDeviceSelectorFromUuid (ToolboxIdentifications.GattServiceUuids.DeviceFirmwareUpdate)); " is 159.
Long Statement,nRFToolbox.ViewModels,GlucoseMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\GlucoseMonitorViewModel.cs,UpdateAvailableDevice,The length of the statement  "		var result = await DeviceInformation.FindAllAsync (GattDeviceService.GetDeviceSelectorFromUuid (GattServiceUuids.Glucose)); " is 123.
Long Statement,nRFToolbox.ViewModels,HeartRateMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\HeartRateMonitorViewModel.cs,UpdateAvailableDevice,The length of the statement  "		var result = await DeviceInformation.FindAllAsync (GattDeviceService.GetDeviceSelectorFromUuid (GattServiceUuids.HeartRate)); " is 125.
Long Statement,nRFToolbox.ViewModels,NordicUartControlButtonViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\NordicUartControlButtonViewModel.cs,UpdateAvailableDevice,The length of the statement  "		var result = await DeviceInformation.FindAllAsync (GattDeviceService.GetDeviceSelectorFromUuid (ToolboxIdentifications.GattServiceUuids.Nordic_UART)); " is 150.
Long Statement,nRFToolbox.ViewModels,NordicUartControlButtonViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\NordicUartControlButtonViewModel.cs,TalkTo,The length of the statement  "		if (IsReadyToTalk && !IsTextExceed (text) && chosenDevice != null && chosenDevice.ConnectionStatus == BluetoothConnectionStatus.Connected) { " is 140.
Long Statement,nRFToolbox.ViewModels,NordicUartControlButtonViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\NordicUartControlButtonViewModel.cs,ChangeColorOnSelectedItem,The length of the statement  "		var result = this.allControlButtons.FirstOrDefault (x => x.ButtonId == SelectedAvailableButton.ButtonId) as ControlButtonViewModel; " is 131.
Long Statement,nRFToolbox.ViewModels,NordicUARTViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\NordicUARTViewModel.cs,UpdateAvailableDevice,The length of the statement  "		var result = await DeviceInformation.FindAllAsync (GattDeviceService.GetDeviceSelectorFromUuid (ToolboxIdentifications.GattServiceUuids.Nordic_UART)); " is 150.
Long Statement,nRFToolbox.ViewModels,ProximityViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\ProximityViewModel.cs,UpdateAvailableDevice,The length of the statement  "		var result = await DeviceInformation.FindAllAsync (GattDeviceService.GetDeviceSelectorFromUuid (GattServiceUuids.LinkLoss)); " is 124.
Long Statement,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateHeartRateMonitorSettingViewModel,The length of the statement  "	SettingPivotViewModel.GetInstance ().SettingPageViewModelDictionary [HEART_RATE_MONITOR_SETTING] = heartRateMonitorSettingViewModel; " is 132.
Long Statement,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateDFUSettingPageViewModel,The length of the statement  "	SettingPivotViewModel.GetInstance ().SettingPageViewModelDictionary [DEVICE_FIRMWARE_UPDATE_SETTING] = deviceFirmwareUpdateSettingPageViewModel; " is 144.
Long Statement,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateProximitySettingViewModel,The length of the statement  "	SettingPivotViewModel.GetInstance ().SettingPageViewModelDictionary [PROXIMITY_SETTING] = proximitySettingPageViewModel; " is 120.
Long Statement,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,CreateBloodPressureMonitorSettingViewModel,The length of the statement  "	SettingPivotViewModel.GetInstance ().SettingPageViewModelDictionary [BPM_SETTING] = bloodPressureMonitorSettingPageViewModel; " is 125.
Long Statement,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,GetDeviceFirmwareUpdateSettingPageViewModel,The length of the statement  "	if (SettingPivotViewModel.GetInstance ().SettingPageViewModelDictionary.TryGetValue (DEVICE_FIRMWARE_UPDATE_SETTING' out viewModel)) " is 132.
Long Statement,nRFToolbox.ViewModels,SettingPivotViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,GetHeartRateMonitorSettingViewModel,The length of the statement  "	if (SettingPivotViewModel.GetInstance ().SettingPageViewModelDictionary.TryGetValue (HEART_RATE_MONITOR_SETTING' out viewModel)) " is 128.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateSettingPageViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,SaveFolder,The length of the statement  "		// Application now has read/write access to all contents in the picked favoriteFolder (including other sub-favoriteFolder contents) " is 131.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateSettingPageViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,SaveFolder,The length of the statement  "		StorageApplicationPermissions.MostRecentlyUsedList.AddOrReplace (DeviceFirmwareUpdateSettingPageViewModel.FavoriteFolderToken' folder); " is 135.
Long Statement,nRFToolbox.ViewModels,DeviceFirmwareUpdateSettingPageViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\SettingPageViewModel.cs,SaveFolder,The length of the statement  "		StorageApplicationPermissions.MostRecentlyUsedList.Remove (DeviceFirmwareUpdateSettingPageViewModel.FavoriteFolderToken); " is 121.
Long Statement,nRFToolbox.UI,ObservableDictionary,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Structure\ObservableDictionary.cs,Remove,The length of the statement  "	if (this._dictionary.TryGetValue (item.Key' out currentValue) && Object.Equals (item.Value' currentValue) && this._dictionary.Remove (item.Key)) { " is 146.
Long Statement,nRFToolbox.UI,SuspensionManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Structure\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,nRFToolbox.UI,SuspensionManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Structure\SuspensionManager.cs,RestoreAsync,The length of the statement  "			if (weakFrameReference.TryGetTarget (out frame) && (string)frame.GetValue (FrameSessionBaseKeyProperty) == sessionBaseKey) { " is 124.
Long Statement,nRFToolbox.UI,SuspensionManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Structure\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Long Statement,nRFToolbox.UI,SuspensionManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Structure\SuspensionManager.cs,RegisterFrame,The length of the statement  "	// Use a dependency property to associate the session toolboxSettingContainerKey with a frame' and keep a list of frames whose " is 126.
Complex Conditional,nRFToolbox.ViewModels,NordicUartControlButtonViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\NordicUartControlButtonViewModel.cs,TalkTo,The conditional expression  "IsReadyToTalk && !IsTextExceed (text) && chosenDevice != null && chosenDevice.ConnectionStatus == BluetoothConnectionStatus.Connected"  is complex.
Empty Catch Block,nRFToolbox,App,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\App.xaml.cs,RestoreStatusAsync,The method has an empty catch block.
Empty Catch Block,nRFToolbox.Common,SmartDispatcherTimer,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Common\SmartDispatcherTimer.cs,SmartDispatcherTimer_Tick,The method has an empty catch block.
Empty Catch Block,nRFToolbox.DataModel,DeviceInformationItem,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\DataModel\DeviceInformation.cs,DeviceInformationItem,The method has an empty catch block.
Empty Catch Block,nRFToolbox.ViewModels,GlucoseMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\GlucoseMonitorViewModel.cs,GetAllStoredRecords,The method has an empty catch block.
Empty Catch Block,nRFToolbox.ViewModels,GlucoseMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\GlucoseMonitorViewModel.cs,DeleteAllStoredRecords,The method has an empty catch block.
Empty Catch Block,nRFToolbox.ViewModels,GlucoseMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\GlucoseMonitorViewModel.cs,GetFirstRecords,The method has an empty catch block.
Empty Catch Block,nRFToolbox.ViewModels,GlucoseMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\GlucoseMonitorViewModel.cs,GetLastRecords,The method has an empty catch block.
Empty Catch Block,nRFToolbox.ViewModels,GlucoseMonitorViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\GlucoseMonitorViewModel.cs,ClearMeasurements,The method has an empty catch block.
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,FillOffsetList,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	offsetList = new List<DataPoint> ();  	var valueDiff = renderingOptions.MaxValue - renderingOptions.MinValue;  	// Add a 10% buffer to the extreme value on the chart for framing  	var diffBuffer = (valueDiff > 0) ? (valueDiff * 0.1) : 2;  	renderingOptions.MaxValueBuffered = renderingOptions.MaxValue + diffBuffer;  	renderingOptions.MinValueBuffered = renderingOptions.MinValue - diffBuffer;  	renderingOptions.MinValueBuffered = (renderingOptions.MinValueBuffered > 0) ? renderingOptions.MinValueBuffered : 0;  	valueDiff = renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered;  	// Calculate the number of receivedBytes points used  	var pointsDisplayed = (dataSet.Length > DataPointCount) ? DataPointCount : dataSet.Length;  	// Add a 5% horizontal buffer to the displayed values' for framing  	var bufferWidth = ActualWidth * 0.05;  	var tickOffset = (ActualWidth - (bufferWidth * 2)) / pointsDisplayed;  	var currentOffset = bufferWidth;  	for (int i = dataSet.Length - pointsDisplayed; i < dataSet.Length; i++) {  		var currentDiff = renderingOptions.MaxValueBuffered - dataSet [i].Beat;  		offsetList.Add (new DataPoint {  			OffsetX = currentOffset'  			OffsetY = (currentDiff / valueDiff) * ActualHeight'  			Value = dataSet [i].Beat  		});  		currentOffset += tickOffset;  	}  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,FillOffsetList,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	offsetList = new List<DataPoint> ();  	var valueDiff = renderingOptions.MaxValue - renderingOptions.MinValue;  	// Add a 10% buffer to the extreme value on the chart for framing  	var diffBuffer = (valueDiff > 0) ? (valueDiff * 0.1) : 2;  	renderingOptions.MaxValueBuffered = renderingOptions.MaxValue + diffBuffer;  	renderingOptions.MinValueBuffered = renderingOptions.MinValue - diffBuffer;  	renderingOptions.MinValueBuffered = (renderingOptions.MinValueBuffered > 0) ? renderingOptions.MinValueBuffered : 0;  	valueDiff = renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered;  	// Calculate the number of receivedBytes points used  	var pointsDisplayed = (dataSet.Length > DataPointCount) ? DataPointCount : dataSet.Length;  	// Add a 5% horizontal buffer to the displayed values' for framing  	var bufferWidth = ActualWidth * 0.05;  	var tickOffset = (ActualWidth - (bufferWidth * 2)) / pointsDisplayed;  	var currentOffset = bufferWidth;  	for (int i = dataSet.Length - pointsDisplayed; i < dataSet.Length; i++) {  		var currentDiff = renderingOptions.MaxValueBuffered - dataSet [i].Beat;  		offsetList.Add (new DataPoint {  			OffsetX = currentOffset'  			OffsetY = (currentDiff / valueDiff) * ActualHeight'  			Value = dataSet [i].Beat  		});  		currentOffset += tickOffset;  	}  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,FillOffsetList,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	offsetList = new List<DataPoint> ();  	var valueDiff = renderingOptions.MaxValue - renderingOptions.MinValue;  	// Add a 10% buffer to the extreme value on the chart for framing  	var diffBuffer = (valueDiff > 0) ? (valueDiff * 0.1) : 2;  	renderingOptions.MaxValueBuffered = renderingOptions.MaxValue + diffBuffer;  	renderingOptions.MinValueBuffered = renderingOptions.MinValue - diffBuffer;  	renderingOptions.MinValueBuffered = (renderingOptions.MinValueBuffered > 0) ? renderingOptions.MinValueBuffered : 0;  	valueDiff = renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered;  	// Calculate the number of receivedBytes points used  	var pointsDisplayed = (dataSet.Length > DataPointCount) ? DataPointCount : dataSet.Length;  	// Add a 5% horizontal buffer to the displayed values' for framing  	var bufferWidth = ActualWidth * 0.05;  	var tickOffset = (ActualWidth - (bufferWidth * 2)) / pointsDisplayed;  	var currentOffset = bufferWidth;  	for (int i = dataSet.Length - pointsDisplayed; i < dataSet.Length; i++) {  		var currentDiff = renderingOptions.MaxValueBuffered - dataSet [i].Beat;  		offsetList.Add (new DataPoint {  			OffsetX = currentOffset'  			OffsetY = (currentDiff / valueDiff) * ActualHeight'  			Value = dataSet [i].Beat  		});  		currentOffset += tickOffset;  	}  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,FillOffsetList,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	offsetList = new List<DataPoint> ();  	var valueDiff = renderingOptions.MaxValue - renderingOptions.MinValue;  	// Add a 10% buffer to the extreme value on the chart for framing  	var diffBuffer = (valueDiff > 0) ? (valueDiff * 0.1) : 2;  	renderingOptions.MaxValueBuffered = renderingOptions.MaxValue + diffBuffer;  	renderingOptions.MinValueBuffered = renderingOptions.MinValue - diffBuffer;  	renderingOptions.MinValueBuffered = (renderingOptions.MinValueBuffered > 0) ? renderingOptions.MinValueBuffered : 0;  	valueDiff = renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered;  	// Calculate the number of receivedBytes points used  	var pointsDisplayed = (dataSet.Length > DataPointCount) ? DataPointCount : dataSet.Length;  	// Add a 5% horizontal buffer to the displayed values' for framing  	var bufferWidth = ActualWidth * 0.05;  	var tickOffset = (ActualWidth - (bufferWidth * 2)) / pointsDisplayed;  	var currentOffset = bufferWidth;  	for (int i = dataSet.Length - pointsDisplayed; i < dataSet.Length; i++) {  		var currentDiff = renderingOptions.MaxValueBuffered - dataSet [i].Beat;  		offsetList.Add (new DataPoint {  			OffsetX = currentOffset'  			OffsetY = (currentDiff / valueDiff) * ActualHeight'  			Value = dataSet [i].Beat  		});  		currentOffset += tickOffset;  	}  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,DrawYAxis,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	const int RightTextMargin = 9;  	const int BottomTextMargin = 24;  	const int NoOfStripes = DefaultGradients;  	const int FontSize = 22;  	TextBlock text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MaxValueBuffered.ToString ("#.#");  	this.Children.Add (text);  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	var percent = (renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered) * (1.0 / (NoOfStripes));  	SetTop (text' 2);  	for (int i = 1; i < NoOfStripes; i++) {  		var percentVal = renderingOptions.MaxValueBuffered - (percent * i);  		text = new TextBlock ();  		text.FontSize = FontSize;  		text.Foreground = new SolidColorBrush (Colors.Blue);  		text.Text = percentVal.ToString ("#.#");  		text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  		this.Children.Add (text);  		SetTop (text' (i * (ActualHeight / NoOfStripes)) - RightTextMargin);  	}  	text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MinValueBuffered.ToString ("#.#");  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	this.Children.Add (text);  	SetTop (text' ActualHeight - BottomTextMargin);  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,DrawYAxis,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	const int RightTextMargin = 9;  	const int BottomTextMargin = 24;  	const int NoOfStripes = DefaultGradients;  	const int FontSize = 22;  	TextBlock text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MaxValueBuffered.ToString ("#.#");  	this.Children.Add (text);  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	var percent = (renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered) * (1.0 / (NoOfStripes));  	SetTop (text' 2);  	for (int i = 1; i < NoOfStripes; i++) {  		var percentVal = renderingOptions.MaxValueBuffered - (percent * i);  		text = new TextBlock ();  		text.FontSize = FontSize;  		text.Foreground = new SolidColorBrush (Colors.Blue);  		text.Text = percentVal.ToString ("#.#");  		text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  		this.Children.Add (text);  		SetTop (text' (i * (ActualHeight / NoOfStripes)) - RightTextMargin);  	}  	text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MinValueBuffered.ToString ("#.#");  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	this.Children.Add (text);  	SetTop (text' ActualHeight - BottomTextMargin);  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,DrawYAxis,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	const int RightTextMargin = 9;  	const int BottomTextMargin = 24;  	const int NoOfStripes = DefaultGradients;  	const int FontSize = 22;  	TextBlock text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MaxValueBuffered.ToString ("#.#");  	this.Children.Add (text);  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	var percent = (renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered) * (1.0 / (NoOfStripes));  	SetTop (text' 2);  	for (int i = 1; i < NoOfStripes; i++) {  		var percentVal = renderingOptions.MaxValueBuffered - (percent * i);  		text = new TextBlock ();  		text.FontSize = FontSize;  		text.Foreground = new SolidColorBrush (Colors.Blue);  		text.Text = percentVal.ToString ("#.#");  		text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  		this.Children.Add (text);  		SetTop (text' (i * (ActualHeight / NoOfStripes)) - RightTextMargin);  	}  	text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MinValueBuffered.ToString ("#.#");  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	this.Children.Add (text);  	SetTop (text' ActualHeight - BottomTextMargin);  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,DrawYAxis,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	const int RightTextMargin = 9;  	const int BottomTextMargin = 24;  	const int NoOfStripes = DefaultGradients;  	const int FontSize = 22;  	TextBlock text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MaxValueBuffered.ToString ("#.#");  	this.Children.Add (text);  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	var percent = (renderingOptions.MaxValueBuffered - renderingOptions.MinValueBuffered) * (1.0 / (NoOfStripes));  	SetTop (text' 2);  	for (int i = 1; i < NoOfStripes; i++) {  		var percentVal = renderingOptions.MaxValueBuffered - (percent * i);  		text = new TextBlock ();  		text.FontSize = FontSize;  		text.Foreground = new SolidColorBrush (Colors.Blue);  		text.Text = percentVal.ToString ("#.#");  		text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  		this.Children.Add (text);  		SetTop (text' (i * (ActualHeight / NoOfStripes)) - RightTextMargin);  	}  	text = new TextBlock ();  	text.FontSize = FontSize;  	text.Foreground = new SolidColorBrush (Colors.Blue);  	text.Text = renderingOptions.MinValueBuffered.ToString ("#.#");  	text.HorizontalAlignment = Windows.UI.Xaml.HorizontalAlignment.Right;  	this.Children.Add (text);  	SetTop (text' ActualHeight - BottomTextMargin);  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,DrawYAxis,The following statement contains a magic number: SetTop (text' 2);  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,DrawChart,The following statement contains a magic number: if ((dataSet != null) && (dataSet.Length > 0)) {  	var path = new Windows.UI.Xaml.Shapes.Path ();  	path.Stroke = chartColor;  	path.StrokeThickness = 15;  	path.StrokeLineJoin = PenLineJoin.Round;  	path.StrokeStartLineCap = PenLineCap.Round;  	path.StrokeEndLineCap = PenLineCap.Round;  	var geometry = new PathGeometry ();  	var figure = new PathFigure ();  	figure.IsClosed = false;  	figure.StartPoint = new Point (offsetList [0].OffsetX' offsetList [0].OffsetY);  	for (int i = 0; i < offsetList.Count; i++) {  		var segment = new LineSegment ();  		segment.Point = new Point (offsetList [i].OffsetX' offsetList [i].OffsetY);  		figure.Segments.Add (segment);  	}  	geometry.Figures.Add (figure);  	path.Data = geometry;  	Children.Add (path);  }  
Magic Number,nRFToolbox,ChartControl,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\Controls\ChartControl.cs,DrawChart,The following statement contains a magic number: path.StrokeThickness = 15;  
Magic Number,nRFToolbox,HeartRateMonitor,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\HeartRateMonitor.xaml.cs,Device_Clicked,The following statement contains a magic number: await Task.Delay (TimeSpan.FromSeconds (3));  
Magic Number,nRFToolbox,MainPage,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\MainPage.xaml.cs,NavigationHelper_LoadState,The following statement contains a magic number: br.ForegroundColor = Color.FromArgb (1' 0' 156' 222);  
Magic Number,nRFToolbox,MainPage,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\MainPage.xaml.cs,NavigationHelper_LoadState,The following statement contains a magic number: br.ForegroundColor = Color.FromArgb (1' 0' 156' 222);  
Magic Number,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,deviceFirmwareUpdateService_DeviceFirmwareUpdateComplete,The following statement contains a magic number: await UpdatePogressBar (100);  
Magic Number,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,deviceFirmwareUpdateService_ServiceChanged,The following statement contains a magic number: await Task.Delay (TimeSpan.FromMilliseconds (300));  
Magic Number,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,IsImagesReadyToSend,The following statement contains a magic number: if (ChosenFiles.Count == 2) {  	var flag1 = ChosenFiles.Exists (x => x.FileType == DeviceFirmwareUpdateSettingPageViewModel.ImageFile_Bin);  	var flag2 = ChosenFiles.Exists (x => x.FileType == DeviceFirmwareUpdateSettingPageViewModel.DataFile_dat);  	if (flag1 && flag2)  		ready = true;  }  else {  	ready = false;  }  
Magic Number,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,RegisterTimer,The following statement contains a magic number: timer.Interval = TimeSpan.FromSeconds (20);  
Missing Default,nRFToolbox.Common,ContinuationManager,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox.Shared\Common\ContinuationManager.cs,Continue,The following switch statement is missing a default case: switch (args.Kind) {  case ActivationKind.PickFileContinuation:  	var fileOpenPickerPage = rootFrame.Content as IFileOpenPickerContinuable;  	if (fileOpenPickerPage != null) {  		fileOpenPickerPage.ContinueFileOpenPicker (args as FileOpenPickerContinuationEventArgs);  	}  	break;  case ActivationKind.PickSaveFileContinuation:  	var fileSavePickerPage = rootFrame.Content as IFileSavePickerContinuable;  	if (fileSavePickerPage != null) {  		fileSavePickerPage.ContinueFileSavePicker (args as FileSavePickerContinuationEventArgs);  	}  	break;  case ActivationKind.PickFolderContinuation:  	var folderPickerPage = rootFrame.Content as IFolderPickerContinuable;  	if (folderPickerPage != null) {  		folderPickerPage.ContinueFolderPicker (args as FolderPickerContinuationEventArgs);  	}  	break;  case ActivationKind.WebAuthenticationBrokerContinuation:  	var wabPage = rootFrame.Content as IWebAuthenticationContinuable;  	if (wabPage != null) {  		wabPage.ContinueWebAuthentication (args as WebAuthenticationBrokerContinuationEventArgs);  	}  	break;  }  
Missing Default,nRFToolbox.ViewModels,DeviceFirmwareUpdateViewModel,C:\repos\NordicSemiconductor_Windows-nRF-Toolbox\nRFToolbox\ViewModels\DeviceFirmwareUpdateViewModel.cs,UpdateDFUStatus,The following switch statement is missing a default case: switch (status) {  case DeviceFirmwareUpdateStatusEnum.FILES_NOT_CHOSEN:  	this.Status = FILES_NOT_CHOSEN;  	break;  case DeviceFirmwareUpdateStatusEnum.DEVICE_NOT_CONNECTED:  	this.Status = DEVICE_NOT_CONNECTED;  	break;  case DeviceFirmwareUpdateStatusEnum.SERVICES_NOT_AVAILABLE:  	this.Status = SERVICES_NOT_AVAILABLE;  	break;  case DeviceFirmwareUpdateStatusEnum.READY:  	this.Status = READY;  	break;  case DeviceFirmwareUpdateStatusEnum.START_DFU:  	this.Status = START_DFU;  	break;  case DeviceFirmwareUpdateStatusEnum.SENDING:  	SendingPackStatus (SENDING' percentSent);  	break;  case DeviceFirmwareUpdateStatusEnum.SENDING_COMPLETE:  	this.Status = SENDING_COMPLETE;  	break;  case DeviceFirmwareUpdateStatusEnum.DFU_TIMEOUT:  	this.Status = DFU_TIMEOUT;  	break;  case DeviceFirmwareUpdateStatusEnum.DFU_ERROR:  	SendingErrors (DFU_ERROR' errorType' errorCode);  	break;  }  
