Implementation smell,Namespace,Class,File,Method,Description
Complex Method,JetBrains.ReSharper.GoToWord,GotoWordIndexProvider,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexProvider.cs,GetAllSolutionFiles,Cyclomatic complexity of the method is 7
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordController,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordController.cs,GotoWordController,The method has 5 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,LocalOccurrence,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordController.cs,LocalOccurrence,The method has 5 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordControllerFactory,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordControllerFactory.cs,GotoWordControllerFactory,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,LocalOccurrencesHighlighter,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\LocalOccurrencesHighlighter.cs,LocalOccurrencesHighlighter,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexAction,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexAction.cs,SetShowInFindResultsAction,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexController,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexController.cs,GotoWordIndexController,The method has 6 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexProvider,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexProvider.cs,GetNextChainedScopes,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexProvider,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexProvider.cs,FindMatchingInfos,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexProvider,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexProvider.cs,FindByWords,The method has 5 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexProvider,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexProvider.cs,FindTextual,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexProvider,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexProvider.cs,SearchInFile,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord,GotoWordIndexProvider,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordIndexProvider.cs,GetOccurencesByMatchingInfo,The method has 4 parameters.
Long Parameter List,JetBrains.ReSharper.GoToWord.Navigation.Presentation,GotoWordBrowserDescriptor,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\Presentation\GotoWordBrowserDescriptor.cs,GotoWordBrowserDescriptor,The method has 4 parameters.
Long Statement,JetBrains.ReSharper.GoToWord,GotoWordControllerFactory,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordControllerFactory.cs,ShowMenu,The length of the statement  "	var controller = new GotoWordController (definition.Lifetime' myShellLocks' projectElement' textControl' myMarkupManager); " is 122.
Long Statement,JetBrains.ReSharper.GoToWord,GotoWordControllerFactory,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordControllerFactory.cs,ShowMenu,The length of the statement  "	menuDoc.SelectedItem.FlowInto (definition.Lifetime' controller.SelectedItem' FConverter: item => (item != null) ? item.Key : null); " is 131.
Long Statement,JetBrains.ReSharper.GoToWord,LocalOccurrencesHighlighter,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\LocalOccurrencesHighlighter.cs,UpdateOccurrences,The length of the statement  "			myShellLocks.ExecuteOrQueueReadLock (lifetime' Prefix + "UpdateOccurrence"' () => UpdateOccurrencesHighlighting (lifetime' occurrences)); " is 137.
Long Statement,JetBrains.ReSharper.GoToWord,LocalOccurrencesHighlighter,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\LocalOccurrencesHighlighter.cs,UpdateFocusedOccurrence,The length of the statement  "		documentMarkup.AddHighlighter (GotoWordFocusedOccurrence' range' AreaType.EXACT_RANGE' 0' CustomHighlightingManagerIds.NavigationHighlighterID' ErrorStripeAttributes.Empty' null); " is 179.
Long Statement,JetBrains.ReSharper.GoToWord,LocalOccurrencesHighlighter,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\LocalOccurrencesHighlighter.cs,UpdateFocusedOccurrence,The length of the statement  "		var target = myTextControl.Coords.FromDocLineColumn (new DocumentCoords ((Int32<DocLine>)position' (Int32<DocColumn>)0)); " is 121.
Long Statement,JetBrains.ReSharper.GoToWord,LocalOccurrencesHighlighter,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\LocalOccurrencesHighlighter.cs,UpdateOccurrencesHighlighting,The length of the statement  "		documentMarkup.AddHighlighter (GotoWordOccurrence' occurrence.Range.TextRange' AreaType.EXACT_RANGE' 0' HotspotSessionUi.CURRENT_HOTSPOT_HIGHLIGHTER' ErrorStripeUsagesAttributes' null); " is 185.
Magic Number,JetBrains.ReSharper.GoToWord,GotoWordController,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordController.cs,UpdateItems,The following statement contains a magic number: if (currentFile != null) {  	if (filterString.Length > 0) {  		var lazyOccurences = SearchInCurrentFile (filterString' currentFile);  		var presentationService = Shell.Instance.GetComponent<PsiSourceFilePresentationService> ();  		var sourceFileIcon = presentationService.GetIconId (currentFile);  		var displayName = currentFile.Name;  		IEnumerable<LocalOccurrence> tailConcurrences;  		var occurences = lazyOccurences.TakeFirstAndTail (40' out tailConcurrences);  		var menuItems = new List<JetPopupMenuItem> ();  		foreach (var localOccurrence in occurences) {  			var descriptor = new Foo1 (localOccurrence' displayName' sourceFileIcon);  			var item = new JetPopupMenuItem (localOccurrence' descriptor);  			menuItems.Add (item);  		}  		itemsConsumer (menuItems' AddItemsBehavior.Replace);  		if (myHighlighter != null)  			myHighlighter.UpdateOccurrences (occurences' tailConcurrences);  	} else {  		// todo: do not do it? revert viewport?  		if (myHighlighter != null)  			myHighlighter.UpdateOccurrences (EmptyList<LocalOccurrence>.InstanceList);  	}  }  
Magic Number,JetBrains.ReSharper.GoToWord,GotoWordController,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordController.cs,UpdateItems,The following statement contains a magic number: if (filterString.Length > 0) {  	var lazyOccurences = SearchInCurrentFile (filterString' currentFile);  	var presentationService = Shell.Instance.GetComponent<PsiSourceFilePresentationService> ();  	var sourceFileIcon = presentationService.GetIconId (currentFile);  	var displayName = currentFile.Name;  	IEnumerable<LocalOccurrence> tailConcurrences;  	var occurences = lazyOccurences.TakeFirstAndTail (40' out tailConcurrences);  	var menuItems = new List<JetPopupMenuItem> ();  	foreach (var localOccurrence in occurences) {  		var descriptor = new Foo1 (localOccurrence' displayName' sourceFileIcon);  		var item = new JetPopupMenuItem (localOccurrence' descriptor);  		menuItems.Add (item);  	}  	itemsConsumer (menuItems' AddItemsBehavior.Replace);  	if (myHighlighter != null)  		myHighlighter.UpdateOccurrences (occurences' tailConcurrences);  } else {  	// todo: do not do it? revert viewport?  	if (myHighlighter != null)  		myHighlighter.UpdateOccurrences (EmptyList<LocalOccurrence>.InstanceList);  }  
Magic Number,JetBrains.ReSharper.GoToWord,GotoWordController,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordController.cs,SearchInCurrentFile,The following statement contains a magic number: while ((offset = fileText.IndexOf (searchText' offset' StringComparison.OrdinalIgnoreCase)) >= 0) {  	var occurrenceRange = TextRange.FromLength (offset' searchText.Length);  	var documentRange = new DocumentRange (document' occurrenceRange);  	var documentLine = (int)document.GetCoordsByOffset (offset).Line;  	var foundText = fileText.Substring (offset' searchText.Length);  	var leftIndex = Math.Max (0' offset - 10);  	var leftFragment = fileText.Substring (leftIndex' offset - leftIndex);  	var endOffset = offset + searchText.Length;  	var rightIndex = Math.Min (endOffset + 10' fileText.Length);  	var rightFragment = fileText.Substring (endOffset' rightIndex - endOffset);  	yield return new LocalOccurrence (documentRange' documentLine' foundText' leftFragment' rightFragment);  	offset++;  }  
Magic Number,JetBrains.ReSharper.GoToWord,GotoWordController,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\GotoWordController.cs,SearchInCurrentFile,The following statement contains a magic number: while ((offset = fileText.IndexOf (searchText' offset' StringComparison.OrdinalIgnoreCase)) >= 0) {  	var occurrenceRange = TextRange.FromLength (offset' searchText.Length);  	var documentRange = new DocumentRange (document' occurrenceRange);  	var documentLine = (int)document.GetCoordsByOffset (offset).Line;  	var foundText = fileText.Substring (offset' searchText.Length);  	var leftIndex = Math.Max (0' offset - 10);  	var leftFragment = fileText.Substring (leftIndex' offset - leftIndex);  	var endOffset = offset + searchText.Length;  	var rightIndex = Math.Min (endOffset + 10' fileText.Length);  	var rightFragment = fileText.Substring (endOffset' rightIndex - endOffset);  	yield return new LocalOccurrence (documentRange' documentLine' foundText' leftFragment' rightFragment);  	offset++;  }  
Magic Number,JetBrains.ReSharper.GoToWord,LocalOccurrencesHighlighter,D:\newReposJune17\controlflow_resharper-gotoword\GoToWord\Navigation\LocalOccurrencesHighlighter.cs,UpdateFocusedOccurrence,The following statement contains a magic number: if (selectedOccurrence != null) {  	var range = selectedOccurrence.Range.TextRange;  	documentMarkup.AddHighlighter (GotoWordFocusedOccurrence' range' AreaType.EXACT_RANGE' 0' CustomHighlightingManagerIds.NavigationHighlighterID' ErrorStripeAttributes.Empty' null);  	myShouldDropHighlightings = true;  	// todo: better positioning  	var position = Math.Max (selectedOccurrence.LineNumber - 2' 0);  	var target = myTextControl.Coords.FromDocLineColumn (new DocumentCoords ((Int32<DocLine>)position' (Int32<DocColumn>)0));  	myTextControl.Scrolling.ScrollTo (target' TextControlScrollType.TopOfView);  } else {  	myTextControl.Scrolling.ScrollTo (myTextControlViewportRect.Location);  }  
