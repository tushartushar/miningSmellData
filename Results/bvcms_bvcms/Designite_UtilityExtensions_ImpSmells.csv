Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,,The length of the parameter UserThumbPictureBgPosSessionKey is 31.
Long Statement,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ValidEmail,The length of the statement  "            var re1 = new Regex(@"^(.*\b(?=\w))\b[A-Z0-9._%+-]+(?<=[^.])@[A-Z0-9.-]+(?<!\.)\.[A-Z]{2'}\b\b(?!\w)$"' RegexOptions.IgnoreCase); " is 129.
Long Statement,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ShowError,The length of the statement  "                $"/Home/ShowError/?error={HttpContext.Current.Server.UrlEncode(message)}&url={HttpContext.Current.Request.Url.OriginalString}"); " is 128.
Empty Catch Block,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,TryGetMailAddress,The method has an empty catch block.
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,EncryptForUrl,The following statement contains a magic number: des.IV = sSalt.Split(' ').Select(ss => Convert.ToByte(ss' 10)).ToArray();
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,DecryptFromUrl,The following statement contains a magic number: try              {                  string result = string.Empty;                  byte[] buffer = HttpServerUtility.UrlTokenDecode(s);                  var des = new TripleDESCryptoServiceProvider();                  var MD5 = new MD5CryptoServiceProvider();                    var sSalt = getSalt("PublicSalt");                  des.Key = MD5.ComputeHash(ASCIIEncoding.ASCII.GetBytes(getKey("PublicKey")));                  des.IV = sSalt.Split(' ').Select(ss => Convert.ToByte(ss' 10)).ToArray();                    result = Encoding.ASCII.GetString(                      des.CreateDecryptor().TransformFinalBlock(buffer' 0' buffer.Length));                  return result;              }              catch              {                  return string.Empty;              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Encrypt,The following statement contains a magic number: des.IV = sSalt.Split(' ').Select(s => Convert.ToByte(s' 10)).ToArray();
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Decrypt,The following statement contains a magic number: try              {                  string result = string.Empty;                  byte[] buffer = Convert.FromBase64String(sText);                    var des = new TripleDESCryptoServiceProvider();                  var MD5 = new MD5CryptoServiceProvider();                    des.Key = MD5.ComputeHash(ASCIIEncoding.ASCII.GetBytes(getKey(sPrefix + "Key")));                  des.IV = getSalt(sPrefix + "Salt").Split(' ').Select(s => Convert.ToByte(s' 10)).ToArray();                    result = Encoding.ASCII.GetString(des.CreateDecryptor().TransformFinalBlock(buffer' 0' buffer.Length));                  return result;              }              catch              {                  return string.Empty;              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetUserName,The following statement contains a magic number: if (a.Length == 2)                  return a[1];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GoodDate,The following statement contains a magic number: while (dt.Value.Year < 1900)                  dt = dt.Value.AddYears(100);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GoodDate,The following statement contains a magic number: while (dt.Value.Year < 1900)                  dt = dt.Value.AddYears(100);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,AgeAsOf,The following statement contains a magic number: if (y < 1000)                  if (y < 50)                      y = y + 2000;                  else y = y + 1900;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,AgeAsOf,The following statement contains a magic number: if (y < 1000)                  if (y < 50)                      y = y + 2000;                  else y = y + 1900;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,AgeAsOf,The following statement contains a magic number: if (y < 1000)                  if (y < 50)                      y = y + 2000;                  else y = y + 1900;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,AgeAsOf,The following statement contains a magic number: if (y < 1000)                  if (y < 50)                      y = y + 2000;                  else y = y + 1900;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,DateValid,The following statement contains a magic number: var s = dt.Substring(0' 2) + "/" + dt.Substring(2' 2) + "/" + dt.Substring(4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,DateValid,The following statement contains a magic number: var s = dt.Substring(0' 2) + "/" + dt.Substring(2' 2) + "/" + dt.Substring(4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,DateValid,The following statement contains a magic number: var s = dt.Substring(0' 2) + "/" + dt.Substring(2' 2) + "/" + dt.Substring(4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,DateValid,The following statement contains a magic number: var s = dt.Substring(0' 2) + "/" + dt.Substring(2' 2) + "/" + dt.Substring(4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,BirthDateValid,The following statement contains a magic number: if (dt2 > Util.Now)                  dt2 = dt2.AddYears(-100);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,SundayForWeek,The following statement contains a magic number: var result = firstSunday.AddDays((weekNum-1) * 7);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Sunday,The following statement contains a magic number: return new DateTime(year' month'                  1 + (7 - (int)first.DayOfWeek) % 7);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Sunday,The following statement contains a magic number: return new DateTime(year' month'                  1 + (7 - (int)first.DayOfWeek) % 7);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,SundaysInMonth,The following statement contains a magic number: var sun = new DateTime(year' month' 1 + (7 - (int)first.DayOfWeek) % 7);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,SundaysInMonth,The following statement contains a magic number: var sun = new DateTime(year' month' 1 + (7 - (int)first.DayOfWeek) % 7);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,SundaysInMonth,The following statement contains a magic number: while (sun.Month == month)              {                  n++;                  sun = sun.AddDays(7);              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,NextSemiMonthlyDate,The following statement contains a magic number: var a = DateTime.DaysInMonth(d.Year' d.Month) / 2.0;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ParseyyyyMMdd,The following statement contains a magic number: if (s == null || s.Length != 8)                  return null;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetNextDayOfWeek,The following statement contains a magic number: var daysToAdd = ((int) nextDayOfWeek - (int) start.DayOfWeek + 7) % 7;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetNextDayOfWeek,The following statement contains a magic number: var daysToAdd = ((int) nextDayOfWeek - (int) start.DayOfWeek + 7) % 7;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetBuildDate,The following statement contains a magic number: const int cPeHeaderOffset = 60;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetBuildDate,The following statement contains a magic number: const int cLinkerTimestampOffset = 8;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetBuildDate,The following statement contains a magic number: byte[] b = new byte[2048];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetBuildDate,The following statement contains a magic number: try              {                  s = new FileStream(filePath' FileMode.Open' FileAccess.Read);                  s.Read(b' 0' 2048);              }              finally              {                  if (s != null)                      s.Close();              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,GetBuildDate,The following statement contains a magic number: var dt = new DateTime(1970' 1' 1' 0' 0' 0);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ObscureEmail,The following statement contains a magic number: var rest = new string('.'' 6);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ObscureAccount,The following statement contains a magic number: var rest = new string('x'' acct.Length - 4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ObscureAccount,The following statement contains a magic number: return rest + acct.Substring(acct.Length - 4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ToDate,The following statement contains a magic number: if (s.AllDigits() && s.Length == 8)              {                  var d = ParseMMddyy(s);                  if (d.HasValue)                      return GoodDate(d);              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ToDate,The following statement contains a magic number: if (s.AllDigits() && s.Length == 10)              {                  var d = ParseMMddyy(s);                  if (d.HasValue)                      return GoodDate(d);              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ToSuitableEvName,The following statement contains a magic number: return string.Join(""' a.Select(vv => vv.ToProper())).Truncate(150);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,ToCode,The following statement contains a magic number: return encoded.Substring(0' 22);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtBirthday,The following statement contains a magic number: try              {                  if (m.HasValue && d.HasValue)                      if (!y.HasValue)                          return new DateTime(2000' m.Value' d.Value).ToString("m");                      else                          return new DateTime(y.Value' m.Value' d.Value).ToString("d");                  if (y.HasValue)                      if (m.HasValue)                          return new DateTime(y.Value' m.Value' 1).ToString("y");                      else                          return y.ToString();              }              catch (Exception)              {                  return $"bad date {m ?? 0}/{d ?? 0}/{y ?? 0}";              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtFone7,The following statement contains a magic number: var ph = GetDigits(phone).PadLeft(10' '0');
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtFone7,The following statement contains a magic number: var p7 = ph.Substring(3);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtFone7,The following statement contains a magic number: if (t.Length >= 4)                  t.Insert(3' "-");
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtFone7,The following statement contains a magic number: if (t.Length >= 4)                  t.Insert(3' "-");
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtFone,The following statement contains a magic number: if (ph.Length == 7)                  return Regex.Replace(ph' @"(\d{3})(\d{4})"' "$1-$2").Trim();
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtFone,The following statement contains a magic number: if (ph.Length == 10)                  return Regex.Replace(ph' @"(\d{3})(\d{3})(\d{4})"' "$1-$2-$3").Trim();
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtFone,The following statement contains a magic number: if (ph.Length > 10)                  return Regex.Replace(ph' @"(\d{3})(\d{3})(\d{4})(\d*)"' "$1-$2-$3 $4").Trim();
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtZip,The following statement contains a magic number: if (t.Length != 9 && t.Length != 5)                  return zip;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtZip,The following statement contains a magic number: if (t.Length != 9 && t.Length != 5)                  return zip;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtZip,The following statement contains a magic number: if (t.Length > 5)                  t.Insert(5' "-");
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FmtZip,The following statement contains a magic number: if (t.Length > 5)                  t.Insert(5' "-");
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Zip5,The following statement contains a magic number: if (t.Length != 9 && t.Length != 5)                  return zip;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Zip5,The following statement contains a magic number: if (t.Length != 9 && t.Length != 5)                  return zip;
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Zip5,The following statement contains a magic number: if (t.Length > 5)                  return t.Substring(0' 5);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,Zip5,The following statement contains a magic number: if (t.Length > 5)                  return t.Substring(0' 5);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,fmtcoupon,The following statement contains a magic number: if (s.Length == 12)                  return s.Insert(8' " ").Insert(4' " ");
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,fmtcoupon,The following statement contains a magic number: if (s.Length == 12)                  return s.Insert(8' " ").Insert(4' " ");
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,fmtcoupon,The following statement contains a magic number: if (s.Length == 12)                  return s.Insert(8' " ").Insert(4' " ");
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,MaskCC,The following statement contains a magic number: return Mask(sb' 4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,MaskAccount,The following statement contains a magic number: return Mask(new StringBuilder(s)' 4);
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: var b = new byte[4];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: var seed = (b[0] & 0x7f) << 24 | b[1] << 16 | b[2] << 8 | b[3];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: var seed = (b[0] & 0x7f) << 24 | b[1] << 16 | b[2] << 8 | b[3];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: var seed = (b[0] & 0x7f) << 24 | b[1] << 16 | b[2] << 8 | b[3];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: var seed = (b[0] & 0x7f) << 24 | b[1] << 16 | b[2] << 8 | b[3];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: var seed = (b[0] & 0x7f) << 24 | b[1] << 16 | b[2] << 8 | b[3];
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: for (var i = 0; i < password.Length; i++)              {                  var r = i % 4;                  if (r == 1 || r == 2)                      password[i] = pdigits[random.Next(pdigits.Length - 1)];                  else                      password[i] = pchars[random.Next(pchars.Length - 1)];              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,RandomPassword,The following statement contains a magic number: for (var i = 0; i < password.Length; i++)              {                  var r = i % 4;                  if (r == 1 || r == 2)                      password[i] = pdigits[random.Next(pdigits.Length - 1)];                  else                      password[i] = pchars[random.Next(pchars.Length - 1)];              }
Magic Number,UtilityExtensions,Util,C:\repos\bvcms_bvcms\UtilityExtensions\EnDeCrypt.cs,FastFileExists,The following statement contains a magic number: return task.Wait(1000) && task.Result;
