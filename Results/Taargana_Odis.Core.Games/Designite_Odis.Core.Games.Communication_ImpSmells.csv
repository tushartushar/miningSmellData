Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Odis.Core.Games.Communication,WebSocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\WebSocketComponent.cs,StartListen,Cyclomatic complexity of the method is 11
Long Statement,Odis.Core.Games.Communication,WebSocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\WebSocketComponent.cs,StartListen,The length of the statement  "							Byte[] response = Encoding.UTF8.GetBytes ("HTTP/1.1 101 Switching Protocols" + Environment.NewLine + "Connection: Upgrade" + Environment.NewLine + "Upgrade: websocket" + Environment.NewLine + "Sec-WebSocket-Accept: " + Convert.ToBase64String (SHA1.Create ().ComputeHash (Encoding.UTF8.GetBytes (new Regex ("Sec-WebSocket-Key: (.*)").Match (request).Groups [1].Value.Trim () + "258EAFA5-E914-47DA-95CA-C5AB0DC85B11"))) + Environment.NewLine + Environment.NewLine); " is 463.
Magic Number,Odis.Core.Games.Communication,SocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\SocketComponent.cs,StartListen,The following statement contains a magic number: try {  	myListener = new TcpListener (new IPAddress (new byte[] {  		127'  		0'  		0'  		1  	})' ((SocketEntity)this.Entity).Port);  	myListener.Start ();  	SocketState = SocketState.Listenning;  	while (true) {  		//Accept a new connection  		using (Socket mySocket = myListener.AcceptSocket ()) {  			if (!mySocket.Connected)  				continue;  			//make a byte array and receive data from the client   			Byte[] bReceive = new Byte[1024];  			int i = mySocket.Receive (bReceive' bReceive.Length' 0);  			//Convert Byte to String  			string sBuffer = Encoding.ASCII.GetString (bReceive);  			this.Entity.GameManager.MessageCollection.Enqueue (new Message (sBuffer));  		}  	}  }  catch (ThreadAbortException abortException) {  	SocketState = SocketState.Stopped;  }  
Magic Number,Odis.Core.Games.Communication,SocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\SocketComponent.cs,StartListen,The following statement contains a magic number: try {  	myListener = new TcpListener (new IPAddress (new byte[] {  		127'  		0'  		0'  		1  	})' ((SocketEntity)this.Entity).Port);  	myListener.Start ();  	SocketState = SocketState.Listenning;  	while (true) {  		//Accept a new connection  		using (Socket mySocket = myListener.AcceptSocket ()) {  			if (!mySocket.Connected)  				continue;  			//make a byte array and receive data from the client   			Byte[] bReceive = new Byte[1024];  			int i = mySocket.Receive (bReceive' bReceive.Length' 0);  			//Convert Byte to String  			string sBuffer = Encoding.ASCII.GetString (bReceive);  			this.Entity.GameManager.MessageCollection.Enqueue (new Message (sBuffer));  		}  	}  }  catch (ThreadAbortException abortException) {  	SocketState = SocketState.Stopped;  }  
Magic Number,Odis.Core.Games.Communication,SocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\SocketComponent.cs,StartListen,The following statement contains a magic number: myListener = new TcpListener (new IPAddress (new byte[] {  	127'  	0'  	0'  	1  })' ((SocketEntity)this.Entity).Port);  
Magic Number,Odis.Core.Games.Communication,SocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\SocketComponent.cs,StartListen,The following statement contains a magic number: while (true) {  	//Accept a new connection  	using (Socket mySocket = myListener.AcceptSocket ()) {  		if (!mySocket.Connected)  			continue;  		//make a byte array and receive data from the client   		Byte[] bReceive = new Byte[1024];  		int i = mySocket.Receive (bReceive' bReceive.Length' 0);  		//Convert Byte to String  		string sBuffer = Encoding.ASCII.GetString (bReceive);  		this.Entity.GameManager.MessageCollection.Enqueue (new Message (sBuffer));  	}  }  
Magic Number,Odis.Core.Games.Communication,SocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\SocketComponent.cs,StartListen,The following statement contains a magic number: using (Socket mySocket = myListener.AcceptSocket ()) {  	if (!mySocket.Connected)  		continue;  	//make a byte array and receive data from the client   	Byte[] bReceive = new Byte[1024];  	int i = mySocket.Receive (bReceive' bReceive.Length' 0);  	//Convert Byte to String  	string sBuffer = Encoding.ASCII.GetString (bReceive);  	this.Entity.GameManager.MessageCollection.Enqueue (new Message (sBuffer));  }  
Magic Number,Odis.Core.Games.Communication,WebSocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\WebSocketComponent.cs,StartListen,The following statement contains a magic number: try {  	myListener = new TcpListener (new IPAddress (new byte[] {  		127'  		0'  		0'  		1  	})' ((SocketEntity)this.Entity).Port);  	myListener.Start ();  	SocketState = SocketState.Listenning;  	while (true) {  		//Accept a new connection  		using (TcpClient client = myListener.AcceptTcpClient ()) {  			using (NetworkStream stream = client.GetStream ()) {  				while (true) {  					while (!stream.DataAvailable)  						;  					Byte[] bytes = new Byte[client.Available];  					stream.Read (bytes' 0' bytes.Length);  					this.Entity.GameManager.MessageCollection.Enqueue (new Message (Encoding.UTF8.GetString (bytes)));  					//translate bytes of request to string  					String request = Encoding.UTF8.GetString (bytes);  					if (new Regex ("^GET").IsMatch (request)) {  						Byte[] response = Encoding.UTF8.GetBytes ("HTTP/1.1 101 Switching Protocols" + Environment.NewLine + "Connection: Upgrade" + Environment.NewLine + "Upgrade: websocket" + Environment.NewLine + "Sec-WebSocket-Accept: " + Convert.ToBase64String (SHA1.Create ().ComputeHash (Encoding.UTF8.GetBytes (new Regex ("Sec-WebSocket-Key: (.*)").Match (request).Groups [1].Value.Trim () + "258EAFA5-E914-47DA-95CA-C5AB0DC85B11"))) + Environment.NewLine + Environment.NewLine);  						stream.Write (response' 0' response.Length);  					}  					else {  						//some bug in this part  						Byte[] response = Encoding.UTF8.GetBytes ("Data received");  						stream.Write (response' 0' response.Length);  					}  				}  			}  		}  	}  }  catch (ThreadAbortException abortException) {  	SocketState = SocketState.Stopped;  }  
Magic Number,Odis.Core.Games.Communication,WebSocketComponent,C:\repos\Taargana_Odis.Core.Games\Odis.Core.Games\Odis.Core.Games.Communication\WebSocketComponent.cs,StartListen,The following statement contains a magic number: myListener = new TcpListener (new IPAddress (new byte[] {  	127'  	0'  	0'  	1  })' ((SocketEntity)this.Entity).Port);  
