Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GitTools,Repository,C:\repos\yysun_Git-Web-Access\GitTools\Repository.cs,IsValid,Cyclomatic complexity of the method is 11
Long Statement,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,GetInfoRefs,The length of the statement  "            Git.RunGitCmd(string.Format("{0} --stateless-rpc --advertise-refs \"{1}\" > \"{2}\""' serviceName' gitWorkingDir' fout)); " is 121.
Complex Conditional,GitTools,GitWebVirtualPathProvider,C:\repos\yysun_Git-Web-Access\GitTools\GitWebVirtualPathProvider.cs,GetProjectWebPath,The conditional expression  "fileExt == "" || fileExt == ".htm" || fileExt == ".html" || fileExt == ".css" ||                      fileExt == ".jpg" || fileExt == ".js" || fileExt == ".png""  is complex.
Empty Catch Block,GitTools,GitWebVirtualPathProvider,C:\repos\yysun_Git-Web-Access\GitTools\GitWebVirtualPathProvider.cs,GetProjectWebPath,The method has an empty catch block.
Magic Number,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,ProcessRequest,The following statement contains a magic number: if(string.IsNullOrEmpty(gitWorkingDir) ||                  !File.Exists(gitExePath) ||                 !Directory.Exists(Path.Combine(gitBaseDir' gitWorkingDir)))              {                  context.Response.StatusCode = 400;                  context.Response.End();                  return;              }
Magic Number,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,GetGitDir,The following statement contains a magic number: var path = rawUrl.Substring(0' rawUrl.IndexOf(".git") + 4);
Magic Number,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,HasAccess,The following statement contains a magic number: if (string.Compare(authMode' "all"' true) == 0 || context.Request.RawUrl.IndexOf("git-receive-pack") >= 0)              {                  string authHeader = context.Request.Headers["Authorization"];                    if (string.IsNullOrEmpty(authHeader))                  {                      context.Response.StatusCode = 401;                      context.Response.AddHeader("WWW-Authenticate"' "Basic");                      return false;                  }                  else                  {                      try                      {                          string userNameAndPassword = Encoding.Default.GetString(                              Convert.FromBase64String(authHeader.Substring(6)));                          string[] parts = userNameAndPassword.Split(':');                          var username = parts[0];                          var password = parts[1];                          var gitWorkingDir = GetGitDir(context.Request.RawUrl);                                                    return username == gitWorkingDir.Substring(0' gitWorkingDir.IndexOf("/")) &&                                 System.Web.Security.Membership.ValidateUser(username' password);                        }                      catch                      {                          return false;                      }                  }              }
Magic Number,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,HasAccess,The following statement contains a magic number: if (string.Compare(authMode' "all"' true) == 0 || context.Request.RawUrl.IndexOf("git-receive-pack") >= 0)              {                  string authHeader = context.Request.Headers["Authorization"];                    if (string.IsNullOrEmpty(authHeader))                  {                      context.Response.StatusCode = 401;                      context.Response.AddHeader("WWW-Authenticate"' "Basic");                      return false;                  }                  else                  {                      try                      {                          string userNameAndPassword = Encoding.Default.GetString(                              Convert.FromBase64String(authHeader.Substring(6)));                          string[] parts = userNameAndPassword.Split(':');                          var username = parts[0];                          var password = parts[1];                          var gitWorkingDir = GetGitDir(context.Request.RawUrl);                                                    return username == gitWorkingDir.Substring(0' gitWorkingDir.IndexOf("/")) &&                                 System.Web.Security.Membership.ValidateUser(username' password);                        }                      catch                      {                          return false;                      }                  }              }
Magic Number,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,PutFileInChunks,The following statement contains a magic number: const int chunkSize = 16384;
Magic Number,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,GitString,The following statement contains a magic number: var len = (s.Length + 4).ToString("x");
Magic Number,GitTools,GitHandler,C:\repos\yysun_Git-Web-Access\GitTools\GitHandler.cs,GitString,The following statement contains a magic number: while (len.Length < 4) len = "0" + len;
