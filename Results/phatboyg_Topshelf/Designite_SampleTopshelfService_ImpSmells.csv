Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SampleTopshelfService,Program,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\Program.cs,Main,The following statement contains a magic number: return (int)HostFactory.Run(x =>                  {                      x.UseLog4Net("log4net.config");                        x.UseAssemblyInfoForServiceInfo();                        bool throwOnStart = false;                      bool throwOnStop = false;                      bool throwUnhandled = false;                        x.Service(settings => new SampleService(throwOnStart' throwOnStop' throwUnhandled)' s =>                      {                          s.BeforeStartingService(_ => Console.WriteLine("BeforeStart"));                          s.BeforeStoppingService(_ => Console.WriteLine("BeforeStop"));                      });                        x.SetStartTimeout(TimeSpan.FromSeconds(10));                      x.SetStopTimeout(TimeSpan.FromSeconds(10));                        x.EnableServiceRecovery(r =>                          {                              r.RestartService(3);                              r.RunProgram(7' "ping google.com");                              r.RestartComputer(5' "message");                                r.OnCrashOnly();                              r.SetResetPeriod(2);                          });                        x.AddCommandLineSwitch("throwonstart"' v => throwOnStart = v);                      x.AddCommandLineSwitch("throwonstop"' v => throwOnStop = v);                      x.AddCommandLineSwitch("throwunhandled"' v => throwUnhandled = v);                  });
Magic Number,SampleTopshelfService,Program,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\Program.cs,Main,The following statement contains a magic number: return (int)HostFactory.Run(x =>                  {                      x.UseLog4Net("log4net.config");                        x.UseAssemblyInfoForServiceInfo();                        bool throwOnStart = false;                      bool throwOnStop = false;                      bool throwUnhandled = false;                        x.Service(settings => new SampleService(throwOnStart' throwOnStop' throwUnhandled)' s =>                      {                          s.BeforeStartingService(_ => Console.WriteLine("BeforeStart"));                          s.BeforeStoppingService(_ => Console.WriteLine("BeforeStop"));                      });                        x.SetStartTimeout(TimeSpan.FromSeconds(10));                      x.SetStopTimeout(TimeSpan.FromSeconds(10));                        x.EnableServiceRecovery(r =>                          {                              r.RestartService(3);                              r.RunProgram(7' "ping google.com");                              r.RestartComputer(5' "message");                                r.OnCrashOnly();                              r.SetResetPeriod(2);                          });                        x.AddCommandLineSwitch("throwonstart"' v => throwOnStart = v);                      x.AddCommandLineSwitch("throwonstop"' v => throwOnStop = v);                      x.AddCommandLineSwitch("throwunhandled"' v => throwUnhandled = v);                  });
Magic Number,SampleTopshelfService,Program,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\Program.cs,Main,The following statement contains a magic number: return (int)HostFactory.Run(x =>                  {                      x.UseLog4Net("log4net.config");                        x.UseAssemblyInfoForServiceInfo();                        bool throwOnStart = false;                      bool throwOnStop = false;                      bool throwUnhandled = false;                        x.Service(settings => new SampleService(throwOnStart' throwOnStop' throwUnhandled)' s =>                      {                          s.BeforeStartingService(_ => Console.WriteLine("BeforeStart"));                          s.BeforeStoppingService(_ => Console.WriteLine("BeforeStop"));                      });                        x.SetStartTimeout(TimeSpan.FromSeconds(10));                      x.SetStopTimeout(TimeSpan.FromSeconds(10));                        x.EnableServiceRecovery(r =>                          {                              r.RestartService(3);                              r.RunProgram(7' "ping google.com");                              r.RestartComputer(5' "message");                                r.OnCrashOnly();                              r.SetResetPeriod(2);                          });                        x.AddCommandLineSwitch("throwonstart"' v => throwOnStart = v);                      x.AddCommandLineSwitch("throwonstop"' v => throwOnStop = v);                      x.AddCommandLineSwitch("throwunhandled"' v => throwUnhandled = v);                  });
Magic Number,SampleTopshelfService,Program,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\Program.cs,Main,The following statement contains a magic number: return (int)HostFactory.Run(x =>                  {                      x.UseLog4Net("log4net.config");                        x.UseAssemblyInfoForServiceInfo();                        bool throwOnStart = false;                      bool throwOnStop = false;                      bool throwUnhandled = false;                        x.Service(settings => new SampleService(throwOnStart' throwOnStop' throwUnhandled)' s =>                      {                          s.BeforeStartingService(_ => Console.WriteLine("BeforeStart"));                          s.BeforeStoppingService(_ => Console.WriteLine("BeforeStop"));                      });                        x.SetStartTimeout(TimeSpan.FromSeconds(10));                      x.SetStopTimeout(TimeSpan.FromSeconds(10));                        x.EnableServiceRecovery(r =>                          {                              r.RestartService(3);                              r.RunProgram(7' "ping google.com");                              r.RestartComputer(5' "message");                                r.OnCrashOnly();                              r.SetResetPeriod(2);                          });                        x.AddCommandLineSwitch("throwonstart"' v => throwOnStart = v);                      x.AddCommandLineSwitch("throwonstop"' v => throwOnStop = v);                      x.AddCommandLineSwitch("throwunhandled"' v => throwUnhandled = v);                  });
Magic Number,SampleTopshelfService,Program,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\Program.cs,Main,The following statement contains a magic number: return (int)HostFactory.Run(x =>                  {                      x.UseLog4Net("log4net.config");                        x.UseAssemblyInfoForServiceInfo();                        bool throwOnStart = false;                      bool throwOnStop = false;                      bool throwUnhandled = false;                        x.Service(settings => new SampleService(throwOnStart' throwOnStop' throwUnhandled)' s =>                      {                          s.BeforeStartingService(_ => Console.WriteLine("BeforeStart"));                          s.BeforeStoppingService(_ => Console.WriteLine("BeforeStop"));                      });                        x.SetStartTimeout(TimeSpan.FromSeconds(10));                      x.SetStopTimeout(TimeSpan.FromSeconds(10));                        x.EnableServiceRecovery(r =>                          {                              r.RestartService(3);                              r.RunProgram(7' "ping google.com");                              r.RestartComputer(5' "message");                                r.OnCrashOnly();                              r.SetResetPeriod(2);                          });                        x.AddCommandLineSwitch("throwonstart"' v => throwOnStart = v);                      x.AddCommandLineSwitch("throwonstop"' v => throwOnStop = v);                      x.AddCommandLineSwitch("throwunhandled"' v => throwUnhandled = v);                  });
Magic Number,SampleTopshelfService,Program,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\Program.cs,Main,The following statement contains a magic number: return (int)HostFactory.Run(x =>                  {                      x.UseLog4Net("log4net.config");                        x.UseAssemblyInfoForServiceInfo();                        bool throwOnStart = false;                      bool throwOnStop = false;                      bool throwUnhandled = false;                        x.Service(settings => new SampleService(throwOnStart' throwOnStop' throwUnhandled)' s =>                      {                          s.BeforeStartingService(_ => Console.WriteLine("BeforeStart"));                          s.BeforeStoppingService(_ => Console.WriteLine("BeforeStop"));                      });                        x.SetStartTimeout(TimeSpan.FromSeconds(10));                      x.SetStopTimeout(TimeSpan.FromSeconds(10));                        x.EnableServiceRecovery(r =>                          {                              r.RestartService(3);                              r.RunProgram(7' "ping google.com");                              r.RestartComputer(5' "message");                                r.OnCrashOnly();                              r.SetResetPeriod(2);                          });                        x.AddCommandLineSwitch("throwonstart"' v => throwOnStart = v);                      x.AddCommandLineSwitch("throwonstop"' v => throwOnStop = v);                      x.AddCommandLineSwitch("throwunhandled"' v => throwUnhandled = v);                  });
Magic Number,SampleTopshelfService,SampleService,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\SampleService.cs,Start,The following statement contains a magic number: hostControl.RequestAdditionalTime(TimeSpan.FromSeconds(10));
Magic Number,SampleTopshelfService,SampleService,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\SampleService.cs,Start,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SampleTopshelfService,SampleService,C:\research\architectureSmells\repos\phatboyg_Topshelf\src\SampleTopshelfService\SampleService.cs,Start,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(3000);                        if(_throwUnhandled)                          throw new InvalidOperationException("Throw Unhandled In Random Thread");                        _log.Info("Requesting stop");                        hostControl.Stop();                  });
