Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BuilderGenerator,BuilderConfigUtils,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderConfigUtils.cs,GetConfig,Cyclomatic complexity of the method is 16
Complex Method,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,Cyclomatic complexity of the method is 12
Long Parameter List,BuilderGenerator,BuilderConfigUtils,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderConfigUtils.cs,CreateConfigFile,The method has 9 parameters.
Long Parameter List,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,BuilderCodeGenerator,The method has 7 parameters.
Long Parameter List,BuilderGenerator,IBuilderConfigUtils,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\Interfaces\IBuilderConfigUtils.cs,CreateConfigFile,The method has 7 parameters.
Long Statement,BuilderGenerator,BuilderConfigUtils,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderConfigUtils.cs,CreateConfigFile,The length of the statement  "	xDoc.Add (new XElement ("builders"' new XElement ("outputNamespace"' outputNamespace)' new XElement ("outputPath"' fullOutputPath)' new XElement ("assemblies"))); " is 162.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "							CodeMemberField member = this.CodeGenUtils.CreateMember (assemblyType.Name.ToCamelCaseCurrent ()' assemblyType.FullName); " is 121.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "							withNoDefaultsMethod.Statements.Add (this.CodeGenUtils.CreateMemberInitialization (member.Name' assemblyType.FullName)); " is 120.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "								method.Parameters.Add (this.CodeGenUtils.CreateMethodParameter (listItemType.Name.ToCamelCaseCurrent ()' listItemType.FullName)); " is 129.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "								method.Statements.Add (this.CodeGenUtils.CreateMemberMethodInvocation (member.Name' "Add"' listItemType.Name.ToCamelCaseCurrent ())); " is 133.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "									method.Parameters.Add (this.CodeGenUtils.CreateMethodParameter (propInfo.Name.ToCamelCaseCurrent ()' propInfo.PropertyType.FullName)); " is 134.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "									method.Statements.Add (this.CodeGenUtils.CreateMemberPropertyAssignment (member.Name' propInfo.Name' propInfo.Name.ToCamelCaseCurrent ())); " is 139.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "									method.Parameters.Add (this.CodeGenUtils.CreateMethodParameter (fieldInfo.Name.ToCamelCaseCurrent ()' fieldInfo.FieldType.FullName)); " is 133.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,Execute,The length of the statement  "									method.Statements.Add (this.CodeGenUtils.CreateMemberPropertyAssignment (member.Name' fieldInfo.Name' fieldInfo.Name.ToCamelCaseCurrent ())); " is 141.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,CreateGenericListBuilder,The length of the statement  "	CodeMemberField member = this.CodeGenUtils.CreateMember ("list"' genericListType.BaseType' attributes: MemberAttributes.Family); " is 128.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,CreateGenericListBuilder,The length of the statement  "	CodeMemberMethod withNoDefaultsMethod = this.CodeGenUtils.CreateMethod ("WithNoDefaults"' codeType.UserData ["GenericType"].ToString ()); " is 137.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,CreateGenericListBuilder,The length of the statement  "	withNoDefaultsMethod.Statements.Add (this.CodeGenUtils.CreateMemberInitialization (member.Name' genericListType.BaseType)); " is 123.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,GetAssemblyTypes,The length of the statement  "		where t != null && t.Namespace != null && t.Namespace.Contains (builderType.Namespace) && !t.IsEnum && !t.IsInterface && !t.IsNested " is 132.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,GetCodeFilePath,The length of the statement  "		codeFilePath = Path.Combine (Path.Combine (builderConfig.OutputPath' builderType.OutputPath)' this.CodeGenUtils.CreateCodeFileName (this.CodeLanguage' codeType.Name)); " is 167.
Long Statement,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,GetCodeFilePath,The length of the statement  "		codeFilePath = Path.Combine (builderConfig.OutputPath' this.CodeGenUtils.CreateCodeFileName (this.CodeLanguage' codeType.Name)); " is 128.
Magic Number,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,GetListItemType,The following statement contains a magic number: foreach (Type type in listType.GetInterfaces ()) {  	if (type.IsGenericType && type.GetGenericTypeDefinition ().Equals (typeof(IList<>))) {  		int startIndex = type.FullName.IndexOf ("[[") + 2;  		int endIndex = type.FullName.IndexOf ("'"' startIndex);  		string listItemTypeName = type.FullName.Substring (startIndex' endIndex - startIndex);  		listItemType = listType.Assembly.GetType (listItemTypeName);  		break;  	}  }  
Magic Number,BuilderGenerator,BuilderCodeGenerator,C:\repos\cjaehnen_BuilderGenerator\Source\BuilderGenerator\BuilderCodeGenerator.cs,GetListItemType,The following statement contains a magic number: if (type.IsGenericType && type.GetGenericTypeDefinition ().Equals (typeof(IList<>))) {  	int startIndex = type.FullName.IndexOf ("[[") + 2;  	int endIndex = type.FullName.IndexOf ("'"' startIndex);  	string listItemTypeName = type.FullName.Substring (startIndex' endIndex - startIndex);  	listItemType = listType.Assembly.GetType (listItemTypeName);  	break;  }  
