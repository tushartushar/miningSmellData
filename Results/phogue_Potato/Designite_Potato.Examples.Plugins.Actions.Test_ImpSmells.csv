Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Potato.Examples.Plugins.Actions.Test,MockNetworkLayer,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\MockNetworkLayer.cs,NetworkProtocolActionKick,The length of the statement  "                    DebugText = String.Format("[0-admin.say] [1-{0}] [2-player] [3-{1}]"' kick.Scope.Content.First()' kick.Scope.Players.First().Name)'" is 131.
Long Statement,Potato.Examples.Plugins.Actions.Test,TestActions,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\TestActions.cs,TestKickPlayerAction,The length of the statement  "            Assert.AreEqual("KickPlayer.Result.packet: Client Request 100 [0-admin.kickPlayer] [1-Phogue]"' result.Now.Content.First());" is 124.
Long Statement,Potato.Examples.Plugins.Actions.Test,TestActions,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\TestActions.cs,TestKickPlayerAction,The length of the statement  "            Assert.AreEqual("KickPlayer.Result.packet: Client Request 101 [0-admin.say] [1-This is a reason to kick this person] [2-player] [3-Phogue]"' result.Now.Content.Last());" is 168.
Long Statement,Potato.Examples.Plugins.Actions.Test,TestActions,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\TestActions.cs,TestDeferredKickPlayerAction,The length of the statement  "            Assert.AreEqual("KickPlayer.Result.packet: Client Request 100 [0-admin.kickPlayer] [1-Phogue]"' result.Now.Content.First());" is 124.
Long Statement,Potato.Examples.Plugins.Actions.Test,TestActions,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\TestActions.cs,TestDeferredKickPlayerAction,The length of the statement  "            Assert.AreEqual("KickPlayer.Result.packet: Client Request 101 [0-admin.say] [1-This is a reason to kick this person] [2-player] [3-Phogue]"' result.Now.Content.Last());" is 168.
Magic Number,Potato.Examples.Plugins.Actions.Test,MockNetworkLayer,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\MockNetworkLayer.cs,MockResponses,The following statement contains a magic number: this.Waiting.Mark(new Packet() {                 RequestId = 100'                 Words = new List<string>() {                     "OK"                 }'                 DebugText = "[0-OK]"'                 Origin = PacketOrigin.Client'                 Type = PacketType.Response             });
Magic Number,Potato.Examples.Plugins.Actions.Test,MockNetworkLayer,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\MockNetworkLayer.cs,MockResponses,The following statement contains a magic number: this.Waiting.Mark(new Packet() {                 RequestId = 101'                 Words = new List<string>() {                     "OK"                 }'                 DebugText = "[0-OK]"'                 Origin = PacketOrigin.Client'                 Type = PacketType.Response             });
Magic Number,Potato.Examples.Plugins.Actions.Test,MockNetworkLayer,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\MockNetworkLayer.cs,NetworkProtocolActionKick,The following statement contains a magic number: List<IPacket> requests = new List<IPacket>() {                 new Packet() {                     RequestId = 100'                     Words = new List<string>() {                         "admin.kickPlayer"'                         kick.Scope.Players.First().Name                     }'                     DebugText = String.Format("[0-admin.kickPlayer] [1-{0}]"' kick.Scope.Players.First().Name)'                     Origin = PacketOrigin.Client'                     Type = PacketType.Request                 }'                 new Packet() {                     RequestId = 101'                     Words = new List<string>() {                         "admin.say"'                         kick.Scope.Content.First()'                         "player"'                         kick.Scope.Players.First().Name'                     }'                     DebugText = String.Format("[0-admin.say] [1-{0}] [2-player] [3-{1}]"' kick.Scope.Content.First()' kick.Scope.Players.First().Name)'                     Origin = PacketOrigin.Client'                     Type = PacketType.Request                 }             };
Magic Number,Potato.Examples.Plugins.Actions.Test,MockNetworkLayer,C:\research\architectureSmells\repos\phogue_Potato\src\Potato.Examples.Plugins.Actions.Test\MockNetworkLayer.cs,NetworkProtocolActionKick,The following statement contains a magic number: List<IPacket> requests = new List<IPacket>() {                 new Packet() {                     RequestId = 100'                     Words = new List<string>() {                         "admin.kickPlayer"'                         kick.Scope.Players.First().Name                     }'                     DebugText = String.Format("[0-admin.kickPlayer] [1-{0}]"' kick.Scope.Players.First().Name)'                     Origin = PacketOrigin.Client'                     Type = PacketType.Request                 }'                 new Packet() {                     RequestId = 101'                     Words = new List<string>() {                         "admin.say"'                         kick.Scope.Content.First()'                         "player"'                         kick.Scope.Players.First().Name'                     }'                     DebugText = String.Format("[0-admin.say] [1-{0}] [2-player] [3-{1}]"' kick.Scope.Content.First()' kick.Scope.Players.First().Name)'                     Origin = PacketOrigin.Client'                     Type = PacketType.Request                 }             };
