Implementation smell,Namespace,Class,File,Method,Description
Long Method,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,FrostbiteGame,The method has 242 lines of code.
Complex Method,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ActionMap,Cyclomatic complexity of the method is 13
Complex Method,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,BanListListDispatchHandler,Cyclomatic complexity of the method is 8
Complex Method,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ActionMap,Cyclomatic complexity of the method is 13
Complex Method,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionChat,Cyclomatic complexity of the method is 9
Complex Method,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionBan,Cyclomatic complexity of the method is 11
Complex Method,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMove,Cyclomatic complexity of the method is 14
Complex Method,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMap,Cyclomatic complexity of the method is 12
Complex Method,Myrcon.Protocols.Frostbite.Objects,FrostbitePlayer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbitePlayer.cs,Parse,Cyclomatic complexity of the method is 17
Complex Method,Myrcon.Protocols.Frostbite.Objects,FrostbiteServerInfo,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteServerInfo.cs,Parse,Cyclomatic complexity of the method is 8
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ServerOnLevelLoadedDispatchHandler,The length of the statement  "                if (int.TryParse(request.Packet.Words[3]' out currentRound) == true && int.TryParse(request.Packet.Words[4]' out totalRounds) == true) {" is 136.
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,PlayerOnKillDispatchHandler,The length of the statement  "                    ItemModel item = this.State.Items.Select(i => i.Value).FirstOrDefault(i => i.Name == Regex.Replace(request.Packet.Words[3]' @"[^\w\/_-]+"' "")) ?? new ItemModel() { Name = request.Packet.Words[3] };" is 198.
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ActionMap,The length of the statement  "                        wrappers.Add(this.CreatePacket("mapList.add \"{0}\" \"{1}\" {2} {3}"' map.Name' closureMap.GameMode.Name' map.Rounds' map.Index));" is 130.
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ActionMap,The length of the statement  "                if (action.ActionType == NetworkActionType.NetworkMapRestart || action.ActionType == NetworkActionType.NetworkMapRoundRestart) {" is 128.
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ActionMap,The length of the statement  "                else if (action.ActionType == NetworkActionType.NetworkMapNext || action.ActionType == NetworkActionType.NetworkMapRoundNext) {" is 127.
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,MedalOfHonorGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\MedalOfHonorGame.cs,ActionMove,The length of the statement  "            bool forceMove = (action.ActionType == NetworkActionType.NetworkPlayerMoveForce || action.ActionType == NetworkActionType.NetworkPlayerMoveRotateForce);" is 152.
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,MedalOfHonorGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\MedalOfHonorGame.cs,ActionMove,The length of the statement  "            MapModel selectedMap = this.State.MapPool.Values.FirstOrDefault(x => String.Compare(x.Name' this.State.Settings.Current.MapNameText' StringComparison.OrdinalIgnoreCase) == 0);" is 175.
Long Statement,Myrcon.Protocols.Frostbite.Generations.First.Games,MedalOfHonorGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\MedalOfHonorGame.cs,ActionMove,The length of the statement  "                if (action.ActionType == NetworkActionType.NetworkPlayerMoveRotate || action.ActionType == NetworkActionType.NetworkPlayerMoveRotateForce) {" is 140.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,Battlefield3Game,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\Battlefield3Game.cs,AdminListPlayersFinalize,The length of the statement  "                    Players = new ConcurrentDictionary<String' PlayerModel>(this.State.Players.Where(existing => players.Select(current => current.Uid).Contains(existing.Key) == false).ToDictionary(item => item.Key' item => item.Value))" is 216.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ServerOnLevelLoadedDispatchHandler,The length of the statement  "                if (int.TryParse(request.Packet.Words[3]' out currentRound) == true && int.TryParse(request.Packet.Words[4]' out totalRounds) == true) {" is 136.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnKillDispatchHandler,The length of the statement  "                    ItemModel item = this.State.Items.Select(i => i.Value).FirstOrDefault(i => i.Name == Regex.Replace(request.Packet.Words[3]' @"[^\w\/_-]+"' "")) ?? new ItemModel() { Name = request.Packet.Words[3] };" is 198.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,BanListListDispatchHandler,The length of the statement  "                List<BanModel> banList = SecondFrostbiteBanList.Parse(response.Packet.Words.GetRange(1' response.Packet.Words.Count - 1));" is 122.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,BanListListDispatchHandler,The length of the statement  "                            var key = String.Format("{0}/{1}"' ban.Scope.Times.First().Context' ban.Scope.Players.First().Uid ?? ban.Scope.Players.First().Name ?? ban.Scope.Players.First().Ip);" is 165.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,MapListListDispatchHandler,The length of the statement  "                    MapModel mapInfo = this.State.MapPool.Values.FirstOrDefault(m => String.Compare(m.Name' closureMap.Name' StringComparison.OrdinalIgnoreCase) == 0 && String.Compare(m.GameMode.Name' closureMap.GameMode.Name' StringComparison.OrdinalIgnoreCase) == 0);" is 249.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,MapListListDispatchHandler,The length of the statement  "                    modified.AddOrUpdate(String.Format("{0}/{1}"' closureMap.GameMode.Name' closureMap.Name)' id => closureMap' (id' model) => closureMap);" is 135.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,AdminListPlayersResponseDispatchHandler,The length of the statement  "            List<PlayerModel> players = SecondFrostbitePlayerList.Parse(response.Packet.Words.GetRange(1' response.Packet.Words.Count - 1));" is 128.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ActionMap,The length of the statement  "                        wrappers.Add(this.CreatePacket("mapList.add \"{0}\" \"{1}\" {2} {3}"' map.Name' closureMap.GameMode.Name' map.Rounds' map.Index));" is 130.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ActionMap,The length of the statement  "                if (action.ActionType == NetworkActionType.NetworkMapRestart || action.ActionType == NetworkActionType.NetworkMapRoundRestart) {" is 128.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ActionMap,The length of the statement  "                else if (action.ActionType == NetworkActionType.NetworkMapNext || action.ActionType == NetworkActionType.NetworkMapRoundNext) {" is 127.
Long Statement,Myrcon.Protocols.Frostbite.Generations.Second.Objects,SecondFrostbiteMapList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Objects\SecondFrostbiteMapList.cs,Parse,The length of the statement  "                    for (int mapOffset = 0' wordIndex = 2; mapOffset < mapsCount && wordIndex < words.Count; mapOffset++' wordIndex += wordsPerMap) {" is 129.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,UpdateSettingsMap,The length of the statement  "            var modified = this.State.Settings.Current.MapNameText != name || this.State.Settings.Current.GameModeNameText != gameModeName;" is 127.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,UpdateSettingsMap,The length of the statement  "                MapModel oldMap = this.State.MapPool.Select(m => m.Value).FirstOrDefault(map => String.Compare(map.Name' this.State.Settings.Current.MapNameText' StringComparison.OrdinalIgnoreCase) == 0 && String.Compare(map.GameMode.Name' this.State.Settings.Current.GameModeNameText' StringComparison.OrdinalIgnoreCase) == 0);" is 312.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,UpdateSettingsMap,The length of the statement  "                MapModel currentMap = this.State.MapPool.Select(m => m.Value).FirstOrDefault(map => String.Compare(map.Name' this.State.Settings.Current.MapNameText' StringComparison.OrdinalIgnoreCase) == 0 && String.Compare(map.GameMode.Name' this.State.Settings.Current.GameModeNameText' StringComparison.OrdinalIgnoreCase) == 0);" is 316.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerInfoDispatchHandler,The length of the statement  "                FrostbiteServerInfo info = new FrostbiteServerInfo().Parse(response.Packet.Words.GetRange(1' response.Packet.Words.Count - 1)' this.ServerInfoParameters);" is 154.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerInfoDispatchHandler,The length of the statement  "                        config = ProtocolConfigLoader.Load<ProtocolConfigModel>(this.Options.ConfigDirectory' new ProtocolType(this.ProtocolType) {" is 123.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,LoginHashedDispatchHandler,The length of the statement  "                    this.SendRequest("login.hashed"' this.GeneratePasswordHash(this.HashToByteArray(response.Packet.Words[1])' this.Options.Password));" is 131.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,AdminListPlayersFinalize,The length of the statement  "                    Players = new ConcurrentDictionary<String' PlayerModel>(this.State.Players.Where(existing => players.Select(current => current.Uid).Contains(existing.Key) == false).ToDictionary(item => item.Key' item => item.Value))" is 216.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,MapListListDispatchHandler,The length of the statement  "                    MapModel mapInfo = this.State.MapPool.Values.FirstOrDefault(m => String.Compare(m.Name' closureMap.Name' StringComparison.OrdinalIgnoreCase) == 0 && String.Compare(m.GameMode.Name' closureMap.GameMode.Name' StringComparison.OrdinalIgnoreCase) == 0);" is 249.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,MapListListDispatchHandler,The length of the statement  "                    modified.AddOrUpdate(String.Format("{0}/{1}"' closureMap.GameMode.Name' closureMap.Name)' id => closureMap' (id' model) => closureMap);" is 135.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,BanListListDispatchHandler,The length of the statement  "                        var key = String.Format("{0}/{1}"' ban.Scope.Times.First().Context' ban.Scope.Players.First().Uid ?? ban.Scope.Players.First().Name ?? ban.Scope.Players.First().Ip);" is 165.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,BanListAddDispatchHandler,The length of the statement  "                            { String.Format("{0}/{1}"' ban.Scope.Times.First().Context' ban.Scope.Players.First().Uid ?? ban.Scope.Players.First().Name ?? ban.Scope.Players.First().Ip)' ban }" is 163.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,BanListRemoveDispatchHandler,The length of the statement  "                            { String.Format("{0}/{1}"' ban.Scope.Times.First().Context' ban.Scope.Players.First().Uid ?? ban.Scope.Players.First().Name ?? ban.Scope.Players.First().Ip)' ban }" is 163.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerOnLoadingLevelDispatchHandler,The length of the statement  "                if (int.TryParse(request.Packet.Words[2]' out currentRound) == true && int.TryParse(request.Packet.Words[3]' out totalRounds) == true) {" is 136.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerOnLoadingLevelDispatchHandler,The length of the statement  "                    if (String.Compare(this.State.Settings.Current.MapNameText' request.Packet.Words[1]' StringComparison.OrdinalIgnoreCase) == 0) {" is 128.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerOnLoadingLevelDispatchHandler,The length of the statement  "                        MapModel selectedMap = this.State.MapPool.Select(m => m.Value).FirstOrDefault(x => String.Compare(x.Name' request.Packet.Words[1]' StringComparison.OrdinalIgnoreCase) == 0);" is 173.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnJoinDispatchHandler,The length of the statement  "                // todo this is blanked out to follow a "no unique id' no existence" type of policy instead of juggling different states of players" is 131.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnLeaveDispatchHandler,The length of the statement  "                PlayerModel player = FrostbitePlayers.Parse(request.Packet.Words.GetRange(2' request.Packet.Words.Count - 2)).FirstOrDefault();" is 127.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnChatDispatchHandler,The length of the statement  "                        this.State.Players.Select(p => p.Value).FirstOrDefault(player => player.Uid == chat.Scope.Groups.First(group => @group.Type == GroupModel.Player).Uid)" is 150.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnChatDispatchHandler,The length of the statement  "                if (chat.Now.Players != null && chat.Now.Players.Count > 0 && this.State.Players.Select(p => p.Value).FirstOrDefault(p => p.Name == chat.Now.Players.First().Name) != null) {" is 173.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnAuthenticatedDispatchHandler,The length of the statement  "                PlayerModel statePlayer = this.State.Players.Select(p => p.Value).FirstOrDefault(p => p.Name == request.Packet.Words[1]);" is 121.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnSquadChangeDispatchHandler,The length of the statement  "            if (player != null && int.TryParse(request.Packet.Words[2]' out teamId) == true && int.TryParse(request.Packet.Words[3]' out squadId) == true) {" is 144.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnTeamChangeDispatchHandler,The length of the statement  "            if (player != null && int.TryParse(request.Packet.Words[2]' out teamId) == true && int.TryParse(request.Packet.Words[3]' out squadId) == true) {" is 144.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionChat,The length of the statement  "                    else if (action.Scope.Groups != null && action.Scope.Groups.Any(group => @group.Type == GroupModel.Team) == true && action.Scope.Groups.Any(group => @group.Type == GroupModel.Squad) == true) {" is 192.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionChat,The length of the statement  "                        subset = String.Format("squad {0} {1}"' action.Scope.Groups.First(group => @group.Type == GroupModel.Team).Uid' action.Scope.Groups.First(group => @group.Type == GroupModel.Squad).Uid);" is 185.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionChat,The length of the statement  "                    else if (action.ActionType == NetworkActionType.NetworkTextYell || action.ActionType == NetworkActionType.NetworkTextYellOnly) {" is 128.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionKick,The length of the statement  "                wrappers.Add(string.IsNullOrEmpty(reason) == false ? this.CreatePacket("admin.kickPlayer \"{0}\" \"{1}\""' player.Name' reason) : this.CreatePacket("admin.kickPlayer \"{0}\""' player.Name));" is 190.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionBan,The length of the statement  "            TimeSubsetModel time = action.Scope.Times != null ? action.Scope.Times.FirstOrDefault() ?? new TimeSubsetModel() : new TimeSubsetModel();" is 137.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionBan,The length of the statement  "                        wrappers.Add(this.CreatePacket("banList.add guid \"{0}\" seconds {1}"' action.Scope.Players.First().Uid' time.Length.Value.TotalSeconds));" is 138.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionBan,The length of the statement  "                        wrappers.Add(this.CreatePacket("banList.add guid \"{0}\" seconds {1} \"{2}\""' action.Scope.Players.First().Uid' time.Length.Value.TotalSeconds' reason));" is 154.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMove,The length of the statement  "                bool forceMove = (action.ActionType == NetworkActionType.NetworkPlayerMoveForce || action.ActionType == NetworkActionType.NetworkPlayerMoveRotateForce);" is 152.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMove,The length of the statement  "                MapModel selectedMap = this.State.MapPool.Select(m => m.Value).FirstOrDefault(map => String.Compare(map.Name' this.State.Settings.Current.MapNameText' StringComparison.OrdinalIgnoreCase) == 0 && map.GameMode != null && String.Compare(map.GameMode.Name' this.State.Settings.Current.GameModeNameText' StringComparison.OrdinalIgnoreCase) == 0);" is 341.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMove,The length of the statement  "                            if (action.ActionType == NetworkActionType.NetworkPlayerMoveRotate || action.ActionType == NetworkActionType.NetworkPlayerMoveRotateForce) {" is 140.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMove,The length of the statement  "                            if (selectedMap != null && selectedMap.GameMode != null && selectedMap.GameMode.DefaultGroups.FirstOrDefault(group => @group.Type == GroupModel.Squad) != null) {" is 161.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMap,The length of the statement  "                else if (action.ActionType == NetworkActionType.NetworkMapRestart || action.ActionType == NetworkActionType.NetworkMapRoundRestart) {" is 133.
Long Statement,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ActionMap,The length of the statement  "                else if (action.ActionType == NetworkActionType.NetworkMapNext || action.ActionType == NetworkActionType.NetworkMapRoundNext) {" is 127.
Long Statement,Myrcon.Protocols.Frostbite,FrostbitePacketDispatcher,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketDispatcher.cs,Dispatch,The length of the statement  "                    if (wrapper.Packet.Words.Count >= 1 && String.CompareOrdinal(wrapper.Packet.Words[0]' FrostbitePacket.StringResponseOkay) == 0) {" is 129.
Long Statement,Myrcon.Protocols.Frostbite,FrostbitePacketDispatcher,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketDispatcher.cs,Dispatch,The length of the statement  "            else if (wrapper.Packet.Words.Count >= 1 && wrapper.Packet.Origin == PacketOrigin.Server && wrapper.Packet.Type == PacketType.Request) {" is 136.
Long Statement,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The length of the statement  "                UInt32 header = frostbiteWrapper.Packet.RequestId != null ? (UInt32)frostbiteWrapper.Packet.RequestId & 0x3fffffff : 0x3fffffff;" is 128.
Long Statement,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The length of the statement  "                    Encoding.GetEncoding(1252).GetBytes(convertedWord + Convert.ToChar(0x00)).CopyTo(appendEncodedWords' encodedWords.Length + 4);" is 126.
Long Statement,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The length of the statement  "                wrapper.Packet.DebugText = String.Join(" "' wrapper.Packet.Words.Select((word' index) => String.Format("[{0}-{1}]"' index' word)));" is 131.
Long Statement,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Deserialize,The length of the statement  "                wrapper.Packet.Words.Add(Encoding.GetEncoding(1252).GetString(packetData' (int)this.PacketHeaderSize + wordOffset + 4' (int)wordLength));" is 137.
Long Statement,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Deserialize,The length of the statement  "            wrapper.Packet.DebugText = String.Join(" "' wrapper.Packet.Words.Select((word' index) => String.Format("[{0}-{1}]"' index' word)));" is 131.
Long Statement,Myrcon.Protocols.Frostbite.Objects,FrostbiteChat,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteChat.cs,Parse,The length of the statement  "            for (int paramCount = 0' varCount = 0; paramCount < parameters.Count && varCount < words.Count; paramCount++' varCount++) {" is 123.
Long Statement,Myrcon.Protocols.Frostbite.Objects,FrostbiteGroupingList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteGroupingList.cs,Parse,The length of the statement  "                        if (context == FrostbitePlayerSubsetContext.Squad && int.TryParse(words[1]' out parsedTeamId) == true && int.TryParse(words[2]' out parsedSquadId) == true) {" is 157.
Long Statement,Myrcon.Protocols.Frostbite.Objects,FrostbiteServerInfo,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteServerInfo.cs,Parse,The length of the statement  "            for (int paramCount = 0' varCount = 0; paramCount < parameters.Count && varCount < words.Count; paramCount++' varCount++) {" is 123.
Long Statement,Myrcon.Protocols.Frostbite.Objects,FrostbiteTimeSubset,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteTimeSubset.cs,Parse,The length of the statement  "            else if (words.Count == 2 && String.CompareOrdinal(words[0]' "seconds") == 0 && int.TryParse(words[1]' out seconds) == true) {" is 126.
Empty Catch Block,Myrcon.Protocols.Frostbite.Objects,FrostbiteChat,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteChat.cs,Parse,The method has an empty catch block.
Empty Catch Block,Myrcon.Protocols.Frostbite.Objects,FrostbiteServerInfo,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteServerInfo.cs,Parse,The method has an empty catch block.
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: this.UpdateSettingsMap(request.Packet.Words[1]' request.Packet.Words[2]);
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: int.TryParse(request.Packet.Words[3]' out currentRound) == true && int.TryParse(request.Packet.Words[4]' out totalRounds) == true
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: int.TryParse(request.Packet.Words[3]' out currentRound) == true && int.TryParse(request.Packet.Words[4]' out totalRounds) == true
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 5
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: ItemModel item = this.State.Items.Select(i => i.Value).FirstOrDefault(i => i.Name == Regex.Replace(request.Packet.Words[3]' @"[^\w\/_-]+"' "")) ?? new ItemModel() { Name = request.Packet.Words[3] };
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: ItemModel item = this.State.Items.Select(i => i.Value).FirstOrDefault(i => i.Name == Regex.Replace(request.Packet.Words[3]' @"[^\w\/_-]+"' "")) ?? new ItemModel() { Name = request.Packet.Words[3] };
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: var victim = this.State.Players.Select(p => p.Value).FirstOrDefault(p => p.Name == request.Packet.Words[2]);
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: bool.TryParse(request.Packet.Words[4]' out headshot) == true
Magic Number,Myrcon.Protocols.Frostbite.Generations.First.Games,FirstGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\First\Games\FirstGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 5
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,Battlefield3Game,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\Battlefield3Game.cs,PlayerPingResponseDispatchHandler,The following statement contains a magic number: player.Ping = ping > 1000 ? 0 : ping;
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,Battlefield3Game,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\Battlefield3Game.cs,PlayerPingResponseDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2 && response != null && response.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,Battlefield3Game,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\Battlefield3Game.cs,PlayerPingResponseDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2 && response != null && response.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: this.UpdateSettingsMap(request.Packet.Words[1]' request.Packet.Words[2]);
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: int.TryParse(request.Packet.Words[3]' out currentRound) == true && int.TryParse(request.Packet.Words[4]' out totalRounds) == true
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: int.TryParse(request.Packet.Words[3]' out currentRound) == true && int.TryParse(request.Packet.Words[4]' out totalRounds) == true
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,ServerOnLevelLoadedDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 5
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: ItemModel item = this.State.Items.Select(i => i.Value).FirstOrDefault(i => i.Name == Regex.Replace(request.Packet.Words[3]' @"[^\w\/_-]+"' "")) ?? new ItemModel() { Name = request.Packet.Words[3] };
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: ItemModel item = this.State.Items.Select(i => i.Value).FirstOrDefault(i => i.Name == Regex.Replace(request.Packet.Words[3]' @"[^\w\/_-]+"' "")) ?? new ItemModel() { Name = request.Packet.Words[3] };
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: var victim = this.State.Players.Select(p => p.Value).FirstOrDefault(p => p.Name == request.Packet.Words[2]);
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: bool.TryParse(request.Packet.Words[4]' out headshot) == true
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 5
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,BanListListDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,BanListListDispatchHandler,The following statement contains a magic number: this.Send(this.CreatePacket("banList.list {0}"' startOffset + 100));
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnJoinDispatchHandler,The following statement contains a magic number: PlayerModel player = new PlayerModel() {                     Name = request.Packet.Words[1]'                     Uid = request.Packet.Words[2]                 };
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Games,SecondGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Games\SecondGame.cs,PlayerOnJoinDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Objects,SecondFrostbiteBanList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Objects\SecondFrostbiteBanList.cs,Parse,The following statement contains a magic number: List<string> banWords = words.GetRange(i' 6);
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Objects,SecondFrostbiteBanList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Objects\SecondFrostbiteBanList.cs,Parse,The following statement contains a magic number: banWords.RemoveAt(4);
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Objects,SecondFrostbiteMapList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Objects\SecondFrostbiteMapList.cs,Parse,The following statement contains a magic number: maps.Add(                                 new MapModel() {                                     Index = mapOffset'                                     Rounds = rounds == 0 ? 2 : rounds'                                     Name = words[wordIndex]'                                     GameMode = new GameModeModel() {                                         Name = words[wordIndex + 1]                                     }                                 }                             );
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Objects,SecondFrostbiteMapList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Objects\SecondFrostbiteMapList.cs,Parse,The following statement contains a magic number: int.TryParse(words[wordIndex + 2]' out rounds) == true
Magic Number,Myrcon.Protocols.Frostbite.Generations.Second.Objects,SecondFrostbiteMapList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Generations\Second\Objects\SecondFrostbiteMapList.cs,Parse,The following statement contains a magic number: words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,FrostbiteGame,The following statement contains a magic number: this.State.Settings.Maximum.ChatLinesCount = 100;
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,Synchronize,The following statement contains a magic number: this.NextAuxiliarySynchronization = DateTime.Now.AddSeconds(120);
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,HashToByteArray,The following statement contains a magic number: byte[] returnHash = new byte[hexString.Length / 2];
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,HashToByteArray,The following statement contains a magic number: returnHash[i] = Convert.ToByte(hexString.Substring(i * 2' 2)' 16);
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,HashToByteArray,The following statement contains a magic number: returnHash[i] = Convert.ToByte(hexString.Substring(i * 2' 2)' 16);
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,HashToByteArray,The following statement contains a magic number: returnHash[i] = Convert.ToByte(hexString.Substring(i * 2' 2)' 16);
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerInfoDispatchHandler,The following statement contains a magic number: this.State.Settings.Current.UpTimeMilliseconds = info.ServerUptime * 1000;
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerInfoDispatchHandler,The following statement contains a magic number: this.State.Settings.Current.RoundTimeMilliseconds = info.RoundTime * 1000;
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,LoginPlainTextDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2 && response.Packet.Words.Count == 1 && response.Packet.Words[0] == "OK"
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,LoginHashedDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count == 1 && response.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,AdminEventsEnabledDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2 && response.Packet.Words.Count == 1 && response.Packet.Words[0] == "OK"
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,AdminListPlayersFinalize,The following statement contains a magic number: player.Ping = player.Ping > 1000 ? 0 : player.Ping;
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,AdminSayDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 3
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VersionDispatchHandler,The following statement contains a magic number: this.State.Settings.Current.ServerVersionText = request.Packet.Words[2];
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VersionDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 3
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,BanListListDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,BanListListDispatchHandler,The following statement contains a magic number: this.Send(this.CreatePacket("banList.list {0}"' startOffset + 100));
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsServerNameDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsGamePasswordDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsGamePunkbusterDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsHardcoreDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsRankedDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsRankLimitDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && int.TryParse(response.Packet.Words[1]' out intOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsTeamBalanceDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsFriendlyFireDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsBannerUrlDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsServerDescriptionDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsKillCamDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsMiniMapDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsCrossHairDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsIdleTimeoutDispatchHandler,The following statement contains a magic number: this.State.Settings.Maximum.IdleTimeoutMilliseconds = intOut * 1000;
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsIdleTimeoutDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && int.TryParse(response.Packet.Words[1]' out intOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,VarsProfanityFilterDispatchHandler,The following statement contains a magic number: response.Packet.Words.Count >= 2 && bool.TryParse(response.Packet.Words[1]' out boolOut)
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: var victim = this.State.Players.Select(p => p.Value).FirstOrDefault(p => p.Name == request.Packet.Words[2]);
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                         ProtocolEventType.ProtocolPlayerKill'                         difference'                         new ProtocolEventData() {                             Kills = new List<KillModel>() {                                 new KillModel() {                                     Scope = {                                         Players = new List<PlayerModel>() {                                             victim                                         }'                                         Items = new List<ItemModel>() {                                             new ItemModel() {                                                 Name = request.Packet.Words[3]                                             }                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[8]' request.Packet.Words[10]' request.Packet.Words[9])                                         }'                                         HumanHitLocations = new List<HumanHitLocation>() {                                             headshot == true ? FrostbiteGame.Headshot : FrostbiteGame.Bodyshot                                         }                                     }'                                     Now = {                                         Players = new List<PlayerModel>() {                                             killer                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[5]' request.Packet.Words[7]' request.Packet.Words[6])                                         }                                     }                                 }                             }                         }                     );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                         ProtocolEventType.ProtocolPlayerKill'                         difference'                         new ProtocolEventData() {                             Kills = new List<KillModel>() {                                 new KillModel() {                                     Scope = {                                         Players = new List<PlayerModel>() {                                             victim                                         }'                                         Items = new List<ItemModel>() {                                             new ItemModel() {                                                 Name = request.Packet.Words[3]                                             }                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[8]' request.Packet.Words[10]' request.Packet.Words[9])                                         }'                                         HumanHitLocations = new List<HumanHitLocation>() {                                             headshot == true ? FrostbiteGame.Headshot : FrostbiteGame.Bodyshot                                         }                                     }'                                     Now = {                                         Players = new List<PlayerModel>() {                                             killer                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[5]' request.Packet.Words[7]' request.Packet.Words[6])                                         }                                     }                                 }                             }                         }                     );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                         ProtocolEventType.ProtocolPlayerKill'                         difference'                         new ProtocolEventData() {                             Kills = new List<KillModel>() {                                 new KillModel() {                                     Scope = {                                         Players = new List<PlayerModel>() {                                             victim                                         }'                                         Items = new List<ItemModel>() {                                             new ItemModel() {                                                 Name = request.Packet.Words[3]                                             }                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[8]' request.Packet.Words[10]' request.Packet.Words[9])                                         }'                                         HumanHitLocations = new List<HumanHitLocation>() {                                             headshot == true ? FrostbiteGame.Headshot : FrostbiteGame.Bodyshot                                         }                                     }'                                     Now = {                                         Players = new List<PlayerModel>() {                                             killer                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[5]' request.Packet.Words[7]' request.Packet.Words[6])                                         }                                     }                                 }                             }                         }                     );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                         ProtocolEventType.ProtocolPlayerKill'                         difference'                         new ProtocolEventData() {                             Kills = new List<KillModel>() {                                 new KillModel() {                                     Scope = {                                         Players = new List<PlayerModel>() {                                             victim                                         }'                                         Items = new List<ItemModel>() {                                             new ItemModel() {                                                 Name = request.Packet.Words[3]                                             }                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[8]' request.Packet.Words[10]' request.Packet.Words[9])                                         }'                                         HumanHitLocations = new List<HumanHitLocation>() {                                             headshot == true ? FrostbiteGame.Headshot : FrostbiteGame.Bodyshot                                         }                                     }'                                     Now = {                                         Players = new List<PlayerModel>() {                                             killer                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[5]' request.Packet.Words[7]' request.Packet.Words[6])                                         }                                     }                                 }                             }                         }                     );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                         ProtocolEventType.ProtocolPlayerKill'                         difference'                         new ProtocolEventData() {                             Kills = new List<KillModel>() {                                 new KillModel() {                                     Scope = {                                         Players = new List<PlayerModel>() {                                             victim                                         }'                                         Items = new List<ItemModel>() {                                             new ItemModel() {                                                 Name = request.Packet.Words[3]                                             }                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[8]' request.Packet.Words[10]' request.Packet.Words[9])                                         }'                                         HumanHitLocations = new List<HumanHitLocation>() {                                             headshot == true ? FrostbiteGame.Headshot : FrostbiteGame.Bodyshot                                         }                                     }'                                     Now = {                                         Players = new List<PlayerModel>() {                                             killer                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[5]' request.Packet.Words[7]' request.Packet.Words[6])                                         }                                     }                                 }                             }                         }                     );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                         ProtocolEventType.ProtocolPlayerKill'                         difference'                         new ProtocolEventData() {                             Kills = new List<KillModel>() {                                 new KillModel() {                                     Scope = {                                         Players = new List<PlayerModel>() {                                             victim                                         }'                                         Items = new List<ItemModel>() {                                             new ItemModel() {                                                 Name = request.Packet.Words[3]                                             }                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[8]' request.Packet.Words[10]' request.Packet.Words[9])                                         }'                                         HumanHitLocations = new List<HumanHitLocation>() {                                             headshot == true ? FrostbiteGame.Headshot : FrostbiteGame.Bodyshot                                         }                                     }'                                     Now = {                                         Players = new List<PlayerModel>() {                                             killer                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[5]' request.Packet.Words[7]' request.Packet.Words[6])                                         }                                     }                                 }                             }                         }                     );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                         ProtocolEventType.ProtocolPlayerKill'                         difference'                         new ProtocolEventData() {                             Kills = new List<KillModel>() {                                 new KillModel() {                                     Scope = {                                         Players = new List<PlayerModel>() {                                             victim                                         }'                                         Items = new List<ItemModel>() {                                             new ItemModel() {                                                 Name = request.Packet.Words[3]                                             }                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[8]' request.Packet.Words[10]' request.Packet.Words[9])                                         }'                                         HumanHitLocations = new List<HumanHitLocation>() {                                             headshot == true ? FrostbiteGame.Headshot : FrostbiteGame.Bodyshot                                         }                                     }'                                     Now = {                                         Players = new List<PlayerModel>() {                                             killer                                         }'                                         Points = new List<Point3DModel>() {                                             new Point3DModel(request.Packet.Words[5]' request.Packet.Words[7]' request.Packet.Words[6])                                         }                                     }                                 }                             }                         }                     );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: bool.TryParse(request.Packet.Words[4]' out headshot) == true
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKillDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 11
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerOnLoadingLevelDispatchHandler,The following statement contains a magic number: int.TryParse(request.Packet.Words[2]' out currentRound) == true && int.TryParse(request.Packet.Words[3]' out totalRounds) == true
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerOnLoadingLevelDispatchHandler,The following statement contains a magic number: int.TryParse(request.Packet.Words[2]' out currentRound) == true && int.TryParse(request.Packet.Words[3]' out totalRounds) == true
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,ServerOnLoadingLevelDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 4
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnJoinDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnLeaveDispatchHandler,The following statement contains a magic number: PlayerModel player = FrostbitePlayers.Parse(request.Packet.Words.GetRange(2' request.Packet.Words.Count - 2)).FirstOrDefault();
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnLeaveDispatchHandler,The following statement contains a magic number: PlayerModel player = FrostbitePlayers.Parse(request.Packet.Words.GetRange(2' request.Packet.Words.Count - 2)).FirstOrDefault();
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnLeaveDispatchHandler,The following statement contains a magic number: statePlayer.Ping = player.Ping > 1000 ? 0 : player.Ping;
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnLeaveDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnChatDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnAuthenticatedDispatchHandler,The following statement contains a magic number: statePlayer.Uid = request.Packet.Words[2];
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnAuthenticatedDispatchHandler,The following statement contains a magic number: request.Packet.Words.Count >= 3
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnKickedDispatchHandler,The following statement contains a magic number: this.OnProtocolEvent(                     ProtocolEventType.ProtocolPlayerKicked'                     difference'                     new ProtocolEventData() {                         Kicks = new List<KickModel>() {                             new KickModel() {                                 Now = {                                     Players = new List<PlayerModel>() {                                         player                                     }'                                     Content = new List<String>() {                                         request.Packet.Words[2]                                     }                                 }                             }                         }                     }                 );
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnSquadChangeDispatchHandler,The following statement contains a magic number: player != null && int.TryParse(request.Packet.Words[2]' out teamId) == true && int.TryParse(request.Packet.Words[3]' out squadId) == true
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnSquadChangeDispatchHandler,The following statement contains a magic number: player != null && int.TryParse(request.Packet.Words[2]' out teamId) == true && int.TryParse(request.Packet.Words[3]' out squadId) == true
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnTeamChangeDispatchHandler,The following statement contains a magic number: player != null && int.TryParse(request.Packet.Words[2]' out teamId) == true && int.TryParse(request.Packet.Words[3]' out squadId) == true
Magic Number,Myrcon.Protocols.Frostbite,FrostbiteGame,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbiteGame.cs,PlayerOnTeamChangeDispatchHandler,The following statement contains a magic number: player != null && int.TryParse(request.Packet.Words[2]' out teamId) == true && int.TryParse(request.Packet.Words[3]' out squadId) == true
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,FrostbitePacketSerializer,The following statement contains a magic number: this.PacketHeaderSize = 12;
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The following statement contains a magic number: byte[] appendEncodedWords = new byte[encodedWords.Length + convertedWord.Length + 5];
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The following statement contains a magic number: Encoding.GetEncoding(1252).GetBytes(convertedWord + Convert.ToChar(0x00)).CopyTo(appendEncodedWords' encodedWords.Length + 4);
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The following statement contains a magic number: Encoding.GetEncoding(1252).GetBytes(convertedWord + Convert.ToChar(0x00)).CopyTo(appendEncodedWords' encodedWords.Length + 4);
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The following statement contains a magic number: BitConverter.GetBytes(packetSize).CopyTo(serialized' 4);
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Serialize,The following statement contains a magic number: BitConverter.GetBytes(wordCount).CopyTo(serialized' 8);
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Deserialize,The following statement contains a magic number: int wordsTotal = BitConverter.ToInt32(packetData' 8);
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Deserialize,The following statement contains a magic number: wrapper.Packet.Words.Add(Encoding.GetEncoding(1252).GetString(packetData' (int)this.PacketHeaderSize + wordOffset + 4' (int)wordLength));
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Deserialize,The following statement contains a magic number: wrapper.Packet.Words.Add(Encoding.GetEncoding(1252).GetString(packetData' (int)this.PacketHeaderSize + wordOffset + 4' (int)wordLength));
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,Deserialize,The following statement contains a magic number: wordOffset += Convert.ToInt32(wordLength) + 5;
Magic Number,Myrcon.Protocols.Frostbite,FrostbitePacketSerializer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\FrostbitePacketSerializer.cs,ReadPacketSize,The following statement contains a magic number: length = BitConverter.ToUInt32(packetData' 4);
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBan,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBan.cs,ParseBanListItem,The following statement contains a magic number: ban.Scope.Times.Add(FrostbiteTimeSubset.Parse(words.GetRange(2' 2)));
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBan,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBan.cs,ParseBanListItem,The following statement contains a magic number: ban.Scope.Times.Add(FrostbiteTimeSubset.Parse(words.GetRange(2' 2)));
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBan,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBan.cs,ParseBanListItem,The following statement contains a magic number: ban.Scope.Content = new List<String>() {                     words[4]                 };
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBan,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBan.cs,ParseBanListItem,The following statement contains a magic number: words.Count == 5
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBan,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBan.cs,ParseBanAdd,The following statement contains a magic number: ban.Scope.Times.Add(FrostbiteTimeSubset.Parse(words.GetRange(2' 1)));
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBan,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBan.cs,ParseBanAdd,The following statement contains a magic number: words.Count == 3
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBanList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBanList.cs,Parse,The following statement contains a magic number: bans.Add(FrostbiteBan.ParseBanListItem(words.GetRange(i * 5' 5)));
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteBanList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteBanList.cs,Parse,The following statement contains a magic number: bans.Add(FrostbiteBan.ParseBanListItem(words.GetRange(i * 5' 5)));
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteMapList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteMapList.cs,Parse,The following statement contains a magic number: maps.Add(                         new MapModel() {                             Index = i > 0 ? i / 2 : 0'                             Rounds = rounds == 0 ? 2 : rounds'                             Name = words[i]                         }                     );
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteMapList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteMapList.cs,Parse,The following statement contains a magic number: maps.Add(                         new MapModel() {                             Index = i > 0 ? i / 2 : 0'                             Rounds = rounds == 0 ? 2 : rounds'                             Name = words[i]                         }                     );
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteGroupingList,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteGroupingList.cs,Parse,The following statement contains a magic number: words.Count >= 2
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteSpawn,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteSpawn.cs,Parse,The following statement contains a magic number: return new SpawnModel {                 Player = new PlayerModel() {                     Name = words[0]                 }'                 Role = new RoleModel() {                     Name = words[1]                 }'                 Inventory = new InventoryModel() {                     Now = {                         Items = new List<ItemModel>(words.GetRange(2' words.Count - 2).Select(x => new ItemModel() {                             Name = x                         }))                     }                 }             };
Magic Number,Myrcon.Protocols.Frostbite.Objects,FrostbiteSpawn,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbiteSpawn.cs,Parse,The following statement contains a magic number: return new SpawnModel {                 Player = new PlayerModel() {                     Name = words[0]                 }'                 Role = new RoleModel() {                     Name = words[1]                 }'                 Inventory = new InventoryModel() {                     Now = {                         Items = new List<ItemModel>(words.GetRange(2' words.Count - 2).Select(x => new ItemModel() {                             Name = x                         }))                     }                 }             };
Missing Default,Myrcon.Protocols.Frostbite.Objects,FrostbitePlayer,C:\research\architectureSmells\repos\phogue_Potato\src\Myrcon.Protocols.Frostbite\Objects\FrostbitePlayer.cs,Parse,The following switch statement is missing a default case: switch (parameters[i].ToLower()) {                         case "guid":                             player.Uid = variables[i];                             break;                         case "name":                             player.Name = variables[i];                             break;                         case "clantag":                             player.ClanTag = variables[i];                             break;                         case "teamid":                             if (int.TryParse(variables[i]' out intValue)) {                                 player.Groups.Add(new GroupModel() {                                     Type = GroupModel.Team'                                     Uid = intValue.ToString(CultureInfo.InvariantCulture)                                 });                             }                             break;                         case "squadid":                             if (int.TryParse(variables[i]' out intValue)) {                                 player.Groups.Add(new GroupModel() {                                     Type = GroupModel.Squad'                                     Uid = intValue.ToString(CultureInfo.InvariantCulture)                                 });                             }                             break;                         case "kills":                             if (int.TryParse(variables[i]' out intValue))                                 player.Kills = intValue;                             break;                         case "deaths":                             if (int.TryParse(variables[i]' out intValue))                                 player.Deaths = intValue;                             break;                         case "score":                             if (int.TryParse(variables[i]' out intValue))                                 player.Score = intValue;                             break;                         case "ping":                             uint uintValue = 0;                             if (uint.TryParse(variables[i]' out uintValue))                                 player.Ping = uintValue;                             break;                     }
