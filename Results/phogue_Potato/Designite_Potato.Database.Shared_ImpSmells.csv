Implementation smell,Namespace,Class,File,Method,Description
Long Method,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,Compile,The method has 159 lines of code.
Long Method,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,Compile,The method has 181 lines of code.
Complex Method,Potato.Database.Shared,DatabaseObject,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\DatabaseObject.cs,BuildValue,Cyclomatic complexity of the method is 12
Complex Method,Potato.Database.Shared.Serializers.NoSql,SerializerMongoDb,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\NoSql\SerializerMongoDb.cs,ParseValue,Cyclomatic complexity of the method is 7
Complex Method,Potato.Database.Shared.Serializers.NoSql,SerializerMongoDb,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\NoSql\SerializerMongoDb.cs,ParseMethod,Cyclomatic complexity of the method is 9
Complex Method,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseMethod,Cyclomatic complexity of the method is 11
Complex Method,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseValue,Cyclomatic complexity of the method is 7
Complex Method,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,Compile,Cyclomatic complexity of the method is 37
Complex Method,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseMethod,Cyclomatic complexity of the method is 12
Complex Method,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseValue,Cyclomatic complexity of the method is 7
Complex Method,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,Compile,Cyclomatic complexity of the method is 41
Long Parameter List,Potato.Database.Shared,DatabaseObject,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\DatabaseObject.cs,BuildEquality,The method has 4 parameters.
Long Parameter List,Potato.Database.Shared,DatabaseObject,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\DatabaseObject.cs,Index,The method has 4 parameters.
Long Parameter List,Potato.Database.Shared,DatabaseObject,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\DatabaseObject.cs,Condition,The method has 4 parameters.
Long Parameter List,Potato.Database.Shared,IDatabaseObject,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\IDatabaseObject.cs,Index,The method has 4 parameters.
Long Parameter List,Potato.Database.Shared,IDatabaseObject,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\IDatabaseObject.cs,Condition,The method has 4 parameters.
Long Statement,Potato.Database.Shared.Builders.Values,CollectionValue,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Builders\Values\CollectionValue.cs,ToObject,The length of the statement  "	return this.Where (statement => statement is Value).Cast<Value> ().Select (statement => statement.ToObject ()).ToList (); " is 121.
Long Statement,Potato.Database.Shared,Serializer,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializer.cs,ParseSkip,The length of the statement  "	return query.Where (skip => skip is Skip && skip.Any (value => value is NumericValue)).Select (skip => ((NumericValue)skip.First (value => value is NumericValue)).Long).FirstOrDefault (); " is 187.
Long Statement,Potato.Database.Shared,Serializer,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializer.cs,ParseLimit,The length of the statement  "	return query.Where (limit => limit is Limit && limit.Any (value => value is NumericValue)).Select (limit => ((NumericValue)limit.First (value => value is NumericValue)).Long).FirstOrDefault (); " is 193.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseIndices,The length of the statement  "	}.Where (owner => owner is Index)).Select (index => this.ParseIndex (index as Index)).Where (index => String.IsNullOrEmpty (index) == false).ToList (); " is 151.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseDatabases,The length of the statement  "	return query.Where (statement => statement is Builders.Database).Select (database => this.ParseDatabase (database as Builders.Database)).ToList (); " is 147.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseMethod,The length of the statement  "		if (method.Any (statement => statement is Builders.Database) == true || method.Any (statement => statement is Collection) == true) { " is 132.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseField,The length of the statement  "	parsed.Add (collection == null ? String.Format ("`{0}`"' field.Name) : String.Format ("`{0}`.`{1}`"' collection.Name' field.Name)); " is 131.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseCollections,The length of the statement  "	return query.Where (logical => logical is Collection).Select (collection => this.ParseCollection (collection as Collection)).ToList (); " is 135.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseEqualities,The length of the statement  "			equalities.Add (String.Format ("{0} {1} {2}"' this.ParseField (field)' this.ParseEquality (equality)' this.ParseValue (value))); " is 128.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,Compile,The length of the statement  "		compiled.Add (String.Join ("' "' serializedQuery.Children.Where (child => child.Root is Create || child.Root is Drop).SelectMany (child => child.Compiled))); " is 157.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseIndices,The length of the statement  "	}.Where (owner => owner is Index)).Select (index => this.ParseIndex (index as Index)).Where (index => String.IsNullOrEmpty (index) == false).ToList (); " is 151.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseDatabases,The length of the statement  "	return query.Where (statement => statement is Builders.Database).Select (database => this.ParseDatabase (database as Builders.Database)).ToList (); " is 147.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseMethod,The length of the statement  "		if (method.Any (statement => statement is Builders.Database) == true || method.Any (statement => statement is Collection) == true) { " is 132.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseField,The length of the statement  "	parsed.Add (collection == null ? String.Format ("`{0}`"' field.Name) : String.Format ("`{0}`.`{1}`"' collection.Name' field.Name)); " is 131.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseCollections,The length of the statement  "	return query.Where (logical => logical is Collection).Select (collection => this.ParseCollection (collection as Collection)).ToList (); " is 135.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseEqualities,The length of the statement  "			equalities.Add (String.Format ("{0} {1} {2}"' this.ParseField (field)' this.ParseEquality (equality)' this.ParseValue (value))); " is 128.
Long Statement,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,Compile,The length of the statement  "		compiled.Add (String.Join ("' "' serializedQuery.Children.Where (child => child.Root is Create || child.Root is Drop).SelectMany (child => child.Compiled))); " is 157.
Magic Number,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseType,The following statement contains a magic number: if (type is StringType) {  	parsed.Add (String.Format ("VARCHAR({0})"' length == null ? 255 : length.Value));  } else if (type is IntegerType) {  	parsed.Add ("INT");  	if (unsigned != null) {  		parsed.Add ("UNSIGNED");  	}  } else if (type is DateTimeType) {  	parsed.Add ("DATETIME");  }  
Magic Number,Potato.Database.Shared.Serializers.Sql,SerializerMySql,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerMySql.cs,ParseType,The following statement contains a magic number: parsed.Add (String.Format ("VARCHAR({0})"' length == null ? 255 : length.Value));  
Magic Number,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseType,The following statement contains a magic number: if (type is StringType) {  	parsed.Add (String.Format ("VARCHAR({0})"' length == null ? 255 : length.Value));  } else if (type is IntegerType) {  	parsed.Add ("INTEGER");  } else if (type is DateTimeType) {  	parsed.Add ("DATETIME");  }  
Magic Number,Potato.Database.Shared.Serializers.Sql,SerializerSqLite,D:\newReposJune17\phogue_Potato\src\Potato.Database.Shared\Serializers\Sql\SerializerSqLite.cs,ParseType,The following statement contains a magic number: parsed.Add (String.Format ("VARCHAR({0})"' length == null ? 255 : length.Value));  
