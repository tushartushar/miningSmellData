Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.AddinMaker.Editor.ManifestSchema,ExtensionElement,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\ExtensionElement.cs,GetPathCompletions,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.AddinMaker.Editor.ManifestSchema,NodeTypeAttributeCompletionData,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\ExtensionNodeElement.cs,GenerateDescriptionMarkup,Cyclomatic complexity of the method is 8
Long Parameter List,MonoDevelop.AddinMaker.Pads,RoslynSyntaxVisualizer,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Pads\RoslynSyntaxVisualizer.cs,SetNodeText,The method has 5 parameters. Parameters: nav' text' span' color' node
Long Statement,MonoDevelop.AddinMaker.Editor,AddinManifestEditorExtension,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\AddinManifestEditorExtension.cs,CreateSchema,The length of the statement  "						new SchemaAttribute ("id"' "The identifier of the add-in. It is mandatory for add-in roots and for add-ins that can be extended' optional for other add-ins.")' " is 159.
Long Statement,MonoDevelop.AddinMaker.Editor,AddinManifestEditorExtension,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\AddinManifestEditorExtension.cs,CreateSchema,The length of the statement  "						new SchemaAttribute ("namespace"' "Namespace of the add-in. The full ID of an add-in is composed by 'namespace.name'.")' " is 120.
Long Statement,MonoDevelop.AddinMaker.Editor,AddinManifestEditorExtension,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\AddinManifestEditorExtension.cs,CreateSchema,The length of the statement  "						new SchemaAttribute ("version"' "The version of the add-in. It is mandatory for add-in roots and for add-ins that can be extended.")' " is 133.
Long Statement,MonoDevelop.AddinMaker.Editor,AddinManifestEditorExtension,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\AddinManifestEditorExtension.cs,CreateSchema,The length of the statement  "						new SchemaAttribute ("compatVersion"' "Version of the add-in with which this add-in is backwards compatible (optional).")' " is 122.
Long Statement,MonoDevelop.AddinMaker.Editor,AddinManifestEditorExtension,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\AddinManifestEditorExtension.cs,CreateSchema,The length of the statement  "						new SchemaAttribute ("defaultEnabled"' "When set to 'false'' the add-in won't be enabled until it is explicitly enabled by the user. The default is 'true'.")' " is 158.
Long Statement,MonoDevelop.AddinMaker.Editor,FileTemplateEditorExtension,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\FileTemplateEditorExtension.cs,CreateSchema,The length of the statement  "							new SchemaElement ("LanguageName"' "If specified' the template will only be displayed for projects targeting this language.")' " is 126.
Long Statement,MonoDevelop.AddinMaker.Editor.ManifestSchema,ExtensionNodeElement,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\ExtensionNodeElement.cs,GetAttributeCompletions,The length of the statement  "				list.Add (new CompletionData ("id"' null' "ID for the extension' unique in this extension point.") { CompletionCategory = ordering }); " is 134.
Long Statement,MonoDevelop.AddinMaker.Editor.ManifestSchema,ExtensionNodeElement,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\ExtensionNodeElement.cs,GetAttributeCompletions,The length of the statement  "				list.Add (new CompletionData ("insertbefore"' null' "ID of an existing extension before which to insert this.") { CompletionCategory = ordering }); " is 147.
Long Statement,MonoDevelop.AddinMaker.Editor.ManifestSchema,ExtensionNodeElement,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\ExtensionNodeElement.cs,GetAttributeCompletions,The length of the statement  "				list.Add (new CompletionData ("insertafter"' null' "ID of an existing extension after which to insert this.") { CompletionCategory = ordering }); " is 145.
Long Statement,MonoDevelop.AddinMaker.Editor.ManifestSchema,LocalizerSchemaElement,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\LocalizerSchemaItem.cs,GetAttributeCompletions,The length of the statement  "					list.Add ("location"' null' "Relative path to the location of the catalog. This path must be relative to the add-in location.."); " is 129.
Long Statement,MonoDevelop.AddinMaker.Pads,RoslynSyntaxVisualizer,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Pads\RoslynSyntaxVisualizer.cs,SelectBestMatchForCaret,The length of the statement  "			var point = editorTracker.TextView.Caret.Position.BufferPosition.TranslateTo (roslynSnapshot' PointTrackingMode.Positive);" is 122.
Magic Number,MonoDevelop.AddinMaker,AddAddinReferenceDialog,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddAddinReferenceDialog.cs,AddAddinReferenceDialog,The following statement contains a magic number: WidthRequest = 400;
Magic Number,MonoDevelop.AddinMaker,AddAddinReferenceDialog,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddAddinReferenceDialog.cs,AddAddinReferenceDialog,The following statement contains a magic number: HeightRequest = 400;
Magic Number,MonoDevelop.AddinMaker,AddinReferencesNodeBuilder,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\NodeBuilders\AddinReferencesNodeBuilder.cs,GetSortIndex,The following statement contains a magic number: return -200;
Magic Number,MonoDevelop.AddinMaker.AddinBrowser,AddinBrowserWidget,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddinBrowser\AddinBrowserWidget.cs,AddinBrowserWidget,The following statement contains a magic number: gtkTreeView.WidthRequest = 300;
Magic Number,MonoDevelop.AddinMaker.AddinBrowser,AddinBrowserWidget,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddinBrowser\AddinBrowserWidget.cs,SetDetailWidget,The following statement contains a magic number: detail.WidthRequest = 300;
Magic Number,MonoDevelop.AddinMaker.AddinBrowser,AddinDependencyNodeCommandHandler,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddinBrowser\AddinDependencyNodeBuilder.cs,ActivateItem,The following statement contains a magic number: GLib.Timeout.Add (200' () => {  						tree.SelectObject (resolved);  						return false;  					});
Magic Number,MonoDevelop.AddinMaker.AddinBrowser,AddinDetailWidget,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddinBrowser\AddinNodeBuilder.cs,AddinDetailWidget,The following statement contains a magic number: BorderWidth = 12;
Magic Number,MonoDevelop.AddinMaker.AddinBrowser,ExtensionDetailWidget,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddinBrowser\ExtensionNodeBuilder.cs,ExtensionDetailWidget,The following statement contains a magic number: BorderWidth = 12;
Magic Number,MonoDevelop.AddinMaker.AddinBrowser,ExtensionPointDetailWidget,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\AddinBrowser\ExtensionPointNodeBuilder.cs,ExtensionPointDetailWidget,The following statement contains a magic number: BorderWidth = 12;
Magic Number,MonoDevelop.AddinMaker.Editor.ManifestSchema,ExtensionNodeElement,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\ExtensionNodeElement.cs,GetAttributeCompletions,The following statement contains a magic number: var ordering = new NodeCompletionCategory ("Ordering"' 2);
Magic Number,MonoDevelop.AddinMaker.Pads,EditorTagVisualizer,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Pads\EditorTagVisualizer.cs,EditorTagVisualizer,The following statement contains a magic number: Position = 600;
Magic Number,MonoDevelop.AddinMaker.Pads,RoslynSyntaxVisualizer,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Pads\RoslynSyntaxVisualizer.cs,RoslynSyntaxVisualizer,The following statement contains a magic number: Position = 600;
Missing Default,MonoDevelop.AddinMaker.Editor.ManifestSchema,NodeTypeAttributeCompletionData,D:\research\architectureSmells\repos\mhutch_MonoDevelop.AddinMaker\MonoDevelop.AddinMaker\Editor\ManifestSchema\ExtensionNodeElement.cs,GenerateDescriptionMarkup,The following switch statement is missing a default case: switch (att.ContentType) {  				case Mono.Addins.ContentType.Text:  					if (att.Localizable) {  						sb.AppendLine ("<i>Localizable</i>");  					}  					break;  				case Mono.Addins.ContentType.Class:  					sb.Append ("<i>Type");  					if (string.IsNullOrEmpty (att.Type)) {  						sb.Append (": ");  						sb.Append (GLib.Markup.EscapeText (att.Type));  					}  					sb.AppendLine ("</i>");  					break;  				case Mono.Addins.ContentType.Resource:  					sb.AppendLine ("<i>Resource</i>");  					break;  				case Mono.Addins.ContentType.File:  					sb.AppendLine ("<i>File</i>");  					break;  				}
