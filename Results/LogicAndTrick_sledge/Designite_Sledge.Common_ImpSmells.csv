Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sledge.Common.Extensions,StringExtensions,C:\repos\LogicAndTrick_sledge\Sledge.Common\Extensions\StringExtensions.cs,SplitWithQuotes,Cyclomatic complexity of the method is 8
Complex Method,Sledge.Common.Translations,TranslationStringsCatalog,C:\repos\LogicAndTrick_sledge\Sledge.Common\Translations\TranslationStringsCatalog.cs,LoadFile,Cyclomatic complexity of the method is 9
Long Parameter List,Sledge.Common.Shell.Menu,CommandMenuItem,C:\repos\LogicAndTrick_sledge\Sledge.Common\Shell\Menu\CommandMenuItem.cs,CommandMenuItem,The method has 8 parameters. Parameters: command' section' path' group' orderHint' icon' shortcutText' allowedInToolbar
Long Statement,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Vary,The length of the statement  "            return Color.FromArgb(color.A' Math.Min(255' Math.Max(0' color.R + by))' Math.Min(255' Math.Max(0' color.G + by))' Math.Min(255' Math.Max(0' color.B + by))); " is 157.
Long Statement,Sledge.Common.Shell.Components,OrderHintAttribute,C:\repos\LogicAndTrick_sledge\Sledge.Common\Shell\Components\OrderHintAttribute.cs,GetOrderHint,The length of the statement  "            return ty.GetCustomAttributes(typeof(OrderHintAttribute)' false).OfType<OrderHintAttribute>().FirstOrDefault()?.OrderHint; " is 122.
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 256)' Rand.Next(0' 256)' Rand.Next(0' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 256)' Rand.Next(0' 256)' Rand.Next(0' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 256)' Rand.Next(0' 256)' Rand.Next(0' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 256)' Rand.Next(0' 256)' Rand.Next(0' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomBrushColour,The following statement contains a magic number: return Color.FromArgb(255' 0' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomBrushColour,The following statement contains a magic number: return Color.FromArgb(255' 0' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomBrushColour,The following statement contains a magic number: return Color.FromArgb(255' 0' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomBrushColour,The following statement contains a magic number: return Color.FromArgb(255' 0' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomBrushColour,The following statement contains a magic number: return Color.FromArgb(255' 0' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomGroupColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' 0);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomGroupColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' 0);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomGroupColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' 0);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomGroupColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' 0);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomGroupColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' 0);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomLightColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomLightColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomLightColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomLightColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomLightColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomLightColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomLightColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(128' 256)' Rand.Next(128' 256)' Rand.Next(128' 256));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomDarkColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 128)' Rand.Next(0' 128)' Rand.Next(0' 128));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomDarkColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 128)' Rand.Next(0' 128)' Rand.Next(0' 128));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomDarkColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 128)' Rand.Next(0' 128)' Rand.Next(0' 128));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetRandomDarkColour,The following statement contains a magic number: return Color.FromArgb(255' Rand.Next(0' 128)' Rand.Next(0' 128)' Rand.Next(0' 128));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetDefaultEntityColour,The following statement contains a magic number: return Color.FromArgb(255' 255' 0' 255);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetDefaultEntityColour,The following statement contains a magic number: return Color.FromArgb(255' 255' 0' 255);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,GetDefaultEntityColour,The following statement contains a magic number: return Color.FromArgb(255' 255' 0' 255);
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Vary,The following statement contains a magic number: return Color.FromArgb(color.A' Math.Min(255' Math.Max(0' color.R + by))' Math.Min(255' Math.Max(0' color.G + by))' Math.Min(255' Math.Max(0' color.B + by)));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Vary,The following statement contains a magic number: return Color.FromArgb(color.A' Math.Min(255' Math.Max(0' color.R + by))' Math.Min(255' Math.Max(0' color.G + by))' Math.Min(255' Math.Max(0' color.B + by)));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Vary,The following statement contains a magic number: return Color.FromArgb(color.A' Math.Min(255' Math.Max(0' color.R + by))' Math.Min(255' Math.Max(0' color.G + by))' Math.Min(255' Math.Max(0' color.B + by)));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Lighten,The following statement contains a magic number: return Color.FromArgb(color.A' Math.Min(255' color.R + by)' Math.Min(255' color.G + by)' Math.Min(255' color.B + by));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Lighten,The following statement contains a magic number: return Color.FromArgb(color.A' Math.Min(255' color.R + by)' Math.Min(255' color.G + by)' Math.Min(255' color.B + by));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Lighten,The following statement contains a magic number: return Color.FromArgb(color.A' Math.Min(255' color.R + by)' Math.Min(255' color.G + by)' Math.Min(255' color.B + by));
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Blend,The following statement contains a magic number: return Color.FromArgb(                  (byte) ((color.A) / 255f * (other.A / 255f) * 255)'                  (byte) ((color.R) / 255f * (other.R / 255f) * 255)'                  (byte) ((color.G) / 255f * (other.G / 255f) * 255)'                  (byte) ((color.B) / 255f * (other.B / 255f) * 255)                  );
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Blend,The following statement contains a magic number: return Color.FromArgb(                  (byte) ((color.A) / 255f * (other.A / 255f) * 255)'                  (byte) ((color.R) / 255f * (other.R / 255f) * 255)'                  (byte) ((color.G) / 255f * (other.G / 255f) * 255)'                  (byte) ((color.B) / 255f * (other.B / 255f) * 255)                  );
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Blend,The following statement contains a magic number: return Color.FromArgb(                  (byte) ((color.A) / 255f * (other.A / 255f) * 255)'                  (byte) ((color.R) / 255f * (other.R / 255f) * 255)'                  (byte) ((color.G) / 255f * (other.G / 255f) * 255)'                  (byte) ((color.B) / 255f * (other.B / 255f) * 255)                  );
Magic Number,Sledge.Common,Colour,C:\repos\LogicAndTrick_sledge\Sledge.Common\Colour.cs,Blend,The following statement contains a magic number: return Color.FromArgb(                  (byte) ((color.A) / 255f * (other.A / 255f) * 255)'                  (byte) ((color.R) / 255f * (other.R / 255f) * 255)'                  (byte) ((color.G) / 255f * (other.G / 255f) * 255)'                  (byte) ((color.B) / 255f * (other.B / 255f) * 255)                  );
Magic Number,Sledge.Common,DMath,C:\repos\LogicAndTrick_sledge\Sledge.Common\DMath.cs,DegreesToRadians,The following statement contains a magic number: return degrees * PI / 180;
Magic Number,Sledge.Common,DMath,C:\repos\LogicAndTrick_sledge\Sledge.Common\DMath.cs,RadiansToDegrees,The following statement contains a magic number: return radians * 180 / PI;
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,Evaluate,The following statement contains a magic number: switch (Direction)              {                  case EasingDirection.In:                      return Function(input);                  case EasingDirection.Out:                      return 1 - Function(1 - input);                  case EasingDirection.InOut:                      return input < 0.5m                          ? Function(input * 2) / 2                          : 1 - Function(input * -2 + 2) / 2;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,Evaluate,The following statement contains a magic number: switch (Direction)              {                  case EasingDirection.In:                      return Function(input);                  case EasingDirection.Out:                      return 1 - Function(1 - input);                  case EasingDirection.InOut:                      return input < 0.5m                          ? Function(input * 2) / 2                          : 1 - Function(input * -2 + 2) / 2;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,Evaluate,The following statement contains a magic number: switch (Direction)              {                  case EasingDirection.In:                      return Function(input);                  case EasingDirection.Out:                      return 1 - Function(1 - input);                  case EasingDirection.InOut:                      return input < 0.5m                          ? Function(input * 2) / 2                          : 1 - Function(input * -2 + 2) / 2;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,Evaluate,The following statement contains a magic number: switch (Direction)              {                  case EasingDirection.In:                      return Function(input);                  case EasingDirection.Out:                      return 1 - Function(1 - input);                  case EasingDirection.InOut:                      return input < 0.5m                          ? Function(input * 2) / 2                          : 1 - Function(input * -2 + 2) / 2;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,Evaluate,The following statement contains a magic number: switch (Direction)              {                  case EasingDirection.In:                      return Function(input);                  case EasingDirection.Out:                      return 1 - Function(1 - input);                  case EasingDirection.InOut:                      return input < 0.5m                          ? Function(input * 2) / 2                          : 1 - Function(input * -2 + 2) / 2;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,FunctionFromType,The following statement contains a magic number: switch (easing)              {                  case EasingType.Constant:                      return x => 1;                  case EasingType.Linear:                      return x => x;                  case EasingType.Quadratic:                      return x => DMath.Pow(x' 2);                  case EasingType.Cubic:                      return x => DMath.Pow(x' 3);                  case EasingType.Quartic:                      return x => DMath.Pow(x' 4);                  case EasingType.Quintic:                      return x => DMath.Pow(x' 5);                  case EasingType.Sinusoidal:                      return x => 1 - DMath.Cos(x * DMath.PI / 2); // Wait... That's not Sine!                  case EasingType.Exponential:                      return x => DMath.Pow(x' 5);                  case EasingType.Circular:                      return x => 1 - DMath.Sqrt(1 - x * x);                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,FunctionFromType,The following statement contains a magic number: switch (easing)              {                  case EasingType.Constant:                      return x => 1;                  case EasingType.Linear:                      return x => x;                  case EasingType.Quadratic:                      return x => DMath.Pow(x' 2);                  case EasingType.Cubic:                      return x => DMath.Pow(x' 3);                  case EasingType.Quartic:                      return x => DMath.Pow(x' 4);                  case EasingType.Quintic:                      return x => DMath.Pow(x' 5);                  case EasingType.Sinusoidal:                      return x => 1 - DMath.Cos(x * DMath.PI / 2); // Wait... That's not Sine!                  case EasingType.Exponential:                      return x => DMath.Pow(x' 5);                  case EasingType.Circular:                      return x => 1 - DMath.Sqrt(1 - x * x);                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,FunctionFromType,The following statement contains a magic number: switch (easing)              {                  case EasingType.Constant:                      return x => 1;                  case EasingType.Linear:                      return x => x;                  case EasingType.Quadratic:                      return x => DMath.Pow(x' 2);                  case EasingType.Cubic:                      return x => DMath.Pow(x' 3);                  case EasingType.Quartic:                      return x => DMath.Pow(x' 4);                  case EasingType.Quintic:                      return x => DMath.Pow(x' 5);                  case EasingType.Sinusoidal:                      return x => 1 - DMath.Cos(x * DMath.PI / 2); // Wait... That's not Sine!                  case EasingType.Exponential:                      return x => DMath.Pow(x' 5);                  case EasingType.Circular:                      return x => 1 - DMath.Sqrt(1 - x * x);                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,FunctionFromType,The following statement contains a magic number: switch (easing)              {                  case EasingType.Constant:                      return x => 1;                  case EasingType.Linear:                      return x => x;                  case EasingType.Quadratic:                      return x => DMath.Pow(x' 2);                  case EasingType.Cubic:                      return x => DMath.Pow(x' 3);                  case EasingType.Quartic:                      return x => DMath.Pow(x' 4);                  case EasingType.Quintic:                      return x => DMath.Pow(x' 5);                  case EasingType.Sinusoidal:                      return x => 1 - DMath.Cos(x * DMath.PI / 2); // Wait... That's not Sine!                  case EasingType.Exponential:                      return x => DMath.Pow(x' 5);                  case EasingType.Circular:                      return x => 1 - DMath.Sqrt(1 - x * x);                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,FunctionFromType,The following statement contains a magic number: switch (easing)              {                  case EasingType.Constant:                      return x => 1;                  case EasingType.Linear:                      return x => x;                  case EasingType.Quadratic:                      return x => DMath.Pow(x' 2);                  case EasingType.Cubic:                      return x => DMath.Pow(x' 3);                  case EasingType.Quartic:                      return x => DMath.Pow(x' 4);                  case EasingType.Quintic:                      return x => DMath.Pow(x' 5);                  case EasingType.Sinusoidal:                      return x => 1 - DMath.Cos(x * DMath.PI / 2); // Wait... That's not Sine!                  case EasingType.Exponential:                      return x => DMath.Pow(x' 5);                  case EasingType.Circular:                      return x => 1 - DMath.Sqrt(1 - x * x);                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Easings,Easing,C:\repos\LogicAndTrick_sledge\Sledge.Common\Easings\Easing.cs,FunctionFromType,The following statement contains a magic number: switch (easing)              {                  case EasingType.Constant:                      return x => 1;                  case EasingType.Linear:                      return x => x;                  case EasingType.Quadratic:                      return x => DMath.Pow(x' 2);                  case EasingType.Cubic:                      return x => DMath.Pow(x' 3);                  case EasingType.Quartic:                      return x => DMath.Pow(x' 4);                  case EasingType.Quintic:                      return x => DMath.Pow(x' 5);                  case EasingType.Sinusoidal:                      return x => 1 - DMath.Cos(x * DMath.PI / 2); // Wait... That's not Sine!                  case EasingType.Exponential:                      return x => DMath.Pow(x' 5);                  case EasingType.Circular:                      return x => 1 - DMath.Sqrt(1 - x * x);                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Sledge.Common.Extensions,BinaryExtensions,C:\repos\LogicAndTrick_sledge\Sledge.Common\Extensions\BinaryExtensions.cs,ReadRGBColour,The following statement contains a magic number: return Color.FromArgb(255' br.ReadByte()' br.ReadByte()' br.ReadByte());
Magic Number,Sledge.Common.Transport,SerialisedObjectExtensions,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectExtensions.cs,GetColor,The following statement contains a magic number: if (spl.Length != 3) spl = new[] {"0"' "0"' "0"};
Magic Number,Sledge.Common.Transport,SerialisedObjectExtensions,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectExtensions.cs,GetColor,The following statement contains a magic number: byte.TryParse(spl[2]' NumberStyles.Any' CultureInfo.InvariantCulture' out byte b);
Magic Number,Sledge.Common.Transport,SerialisedObjectExtensions,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectExtensions.cs,GetColor,The following statement contains a magic number: return Color.FromArgb(255' r' g' b);
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,Serialize,The following statement contains a magic number: using (var writer = new StreamWriter(serializationStream' Encoding.UTF8' 1024' true))              {                  foreach (var obj in objects.Where(x => x != null))                  {                      Print(obj' writer);                  }              }
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,Deserialize,The following statement contains a magic number: using (var reader = new StreamReader(serializationStream' Encoding.UTF8' true' 1024' true))              {                  return Parse(reader);              }
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,Print,The following statement contains a magic number: var preTabStr = new string(' '' tabs * 4);
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,Print,The following statement contains a magic number: var postTabStr = new string(' '' (tabs + 1) * 4);
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,Print,The following statement contains a magic number: foreach (var kv in obj.Properties)              {                  tw.Write(postTabStr);                  tw.Write('"');                  tw.Write(LengthLimit(kv.Key' 1024));                  tw.Write('"');                  tw.Write(' ');                  tw.Write('"');                  tw.Write(LengthLimit((kv.Value ?? "").Replace('"'' '`')' 1024));                  tw.Write('"');                  tw.WriteLine();              }
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,Print,The following statement contains a magic number: foreach (var kv in obj.Properties)              {                  tw.Write(postTabStr);                  tw.Write('"');                  tw.Write(LengthLimit(kv.Key' 1024));                  tw.Write('"');                  tw.Write(' ');                  tw.Write('"');                  tw.Write(LengthLimit((kv.Value ?? "").Replace('"'' '`')' 1024));                  tw.Write('"');                  tw.WriteLine();              }
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,ParseStructure,The following statement contains a magic number: if (spl.Length != 2 || spl[1] != "{")              {                  do                  {                      line = CleanLine(reader.ReadLine());                  } while (String.IsNullOrWhiteSpace(line));                  if (line != "{")                  {                      return gs;                  }              }
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,ValidStructStartString,The following statement contains a magic number: return split.Length == 1 || (split.Length == 2 && split[1] == "{");
Magic Number,Sledge.Common.Transport,SerialisedObjectFormatter,C:\repos\LogicAndTrick_sledge\Sledge.Common\Transport\SerialisedObjectFormatter.cs,ValidStructPropertyString,The following statement contains a magic number: return split.Length == 2;
