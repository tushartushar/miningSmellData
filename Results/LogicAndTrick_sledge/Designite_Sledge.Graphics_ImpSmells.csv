Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sledge.Graphics.Arrays,ArrayIndex,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArrayIndex.cs,GetSize,Cyclomatic complexity of the method is 11
Complex Method,Sledge.Graphics.Arrays,ArraySpecification,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArraySpecification.cs,ArraySpecification,Cyclomatic complexity of the method is 18
Complex Method,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,Cyclomatic complexity of the method is 9
Long Parameter List,Sledge.Graphics.Arrays,Subset,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\VBO.cs,Subset,The method has 5 parameters.
Long Parameter List,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The method has 5 parameters.
Long Parameter List,Sledge.Graphics.Helpers,Text,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\Text.cs,Print,The method has 5 parameters.
Long Parameter List,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,Create,The method has 5 parameters.
Long Parameter List,Sledge.Graphics.Helpers,Viewport,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\Viewport.cs,Perspective,The method has 7 parameters.
Long Parameter List,Sledge.Graphics.Helpers,Viewport,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\Viewport.cs,Orthographic,The method has 6 parameters.
Long Statement,Sledge.Graphics.Arrays,VBO,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\VBO.cs,Commit,The length of the statement  "	GL.BufferData (BufferTarget.ElementArrayBuffer' new IntPtr (elementData.Length * sizeof(uint))' elementData' BufferUsageHint.StreamDraw); " is 137.
Long Statement,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,Create,The length of the statement  "	var data = actualBitmap.LockBits (new Rectangle (0' 0' actualBitmap.Width' actualBitmap.Height)' ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb); " is 173.
Long Statement,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,Create,The length of the statement  "	GL.TexImage2D (TextureTarget.Texture2D' 0' PixelInternalFormat' data.Width' data.Height' 0' PixelFormat.Bgra' PixelType.UnsignedByte' data.Scan0); " is 146.
Long Statement,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,SetTextureParameters,The length of the statement  "	GL.TexParameter (TextureTarget.Texture2D' TextureParameterName.TextureMinFilter' (int)(DisableTextureFiltering ? TextureMinFilter.Linear : TextureMinFilter.LinearMipmapLinear)); " is 177.
Magic Number,Sledge.Graphics.Arrays,ArrayIndex,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArrayIndex.cs,Vector4,The following statement contains a magic number: return new ArrayIndex (name' VertexAttribPointerType.Float' 4);  
Magic Number,Sledge.Graphics.Arrays,ArrayIndex,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArrayIndex.cs,Vector3,The following statement contains a magic number: return new ArrayIndex (name' VertexAttribPointerType.Float' 3);  
Magic Number,Sledge.Graphics.Arrays,ArrayIndex,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArrayIndex.cs,Vector2,The following statement contains a magic number: return new ArrayIndex (name' VertexAttribPointerType.Float' 2);  
Magic Number,Sledge.Graphics.Arrays,ArrayIndex,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArrayIndex.cs,GetSize,The following statement contains a magic number: switch (type) {  case VertexAttribPointerType.Byte:  case VertexAttribPointerType.UnsignedByte:  	return sizeof(byte);  case VertexAttribPointerType.Short:  case VertexAttribPointerType.UnsignedShort:  	return sizeof(short);  case VertexAttribPointerType.Int:  case VertexAttribPointerType.UnsignedInt:  	return sizeof(int);  case VertexAttribPointerType.Float:  	return sizeof(float);  case VertexAttribPointerType.Double:  	return sizeof(double);  case VertexAttribPointerType.HalfFloat:  	return sizeof(float) / 2;  default:  	throw new ArgumentOutOfRangeException ("type");  }  
Magic Number,Sledge.Graphics.Arrays,ArrayIndex,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArrayIndex.cs,GetSize,The following statement contains a magic number: return sizeof(float) / 2;  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,Camera,The following statement contains a magic number: FOV = 60;  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,Camera,The following statement contains a magic number: ClipDistance = 4000;  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,GetRotation,The following statement contains a magic number: if (rot < 0)  	rot += 2 * Math.PI;  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,GetRotation,The following statement contains a magic number: rot += 2 * Math.PI;  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,GetRotation,The following statement contains a magic number: if (rot > 2 * Math.PI)  	rot = rot % (2 * Math.PI);  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,GetRotation,The following statement contains a magic number: if (rot > 2 * Math.PI)  	rot = rot % (2 * Math.PI);  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,GetRotation,The following statement contains a magic number: rot = rot % (2 * Math.PI);  
Magic Number,Sledge.Graphics,Camera,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Camera.cs,Tilt,The following statement contains a magic number: SetElevation (GetElevation () + (degrees * ((decimal)Math.PI / 180)));  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (sides < 3) {  	if (radius < 20)  		sides = 16;  	else if (radius < 50)  		sides = 24;  	else if (radius < 100)  		sides = 42;  	else if (radius < 300)  		sides = 64;  	else  		sides = 128;  }  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 20)  	sides = 16;  else if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: sides = 16;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 50)  	sides = 24;  else if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: sides = 24;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 100)  	sides = 42;  else if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: sides = 42;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: if (radius < 300)  	sides = 64;  else  	sides = 128;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: sides = 64;  
Magic Number,Sledge.Graphics,GLX,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\GLX.cs,Circle,The following statement contains a magic number: sides = 128;  
Magic Number,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,NextPowerOfTwo,The following statement contains a magic number: x |= (x >> 2);  
Magic Number,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,NextPowerOfTwo,The following statement contains a magic number: x |= (x >> 4);  
Magic Number,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,NextPowerOfTwo,The following statement contains a magic number: x |= (x >> 8);  
Magic Number,Sledge.Graphics.Helpers,TextureHelper,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Helpers\TextureHelper.cs,NextPowerOfTwo,The following statement contains a magic number: x |= (x >> 16);  
Magic Number,Sledge.Graphics.Shaders,Shader,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Shaders\Shader.cs,ReplaceLayoutLocations,The following statement contains a magic number: ShaderCode = regex.Replace (ShaderCode' x => {  	_attribLocations.Add (int.Parse (x.Groups [1].Value)' x.Groups [3].Value);  	return "attribute " + x.Groups [2].Value + " " + x.Groups [3].Value + ";";  });  
Magic Number,Sledge.Graphics.Shaders,Shader,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Shaders\Shader.cs,ReplaceLayoutLocations,The following statement contains a magic number: ShaderCode = regex.Replace (ShaderCode' x => {  	_attribLocations.Add (int.Parse (x.Groups [1].Value)' x.Groups [3].Value);  	return "attribute " + x.Groups [2].Value + " " + x.Groups [3].Value + ";";  });  
Magic Number,Sledge.Graphics.Shaders,Shader,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Shaders\Shader.cs,ReplaceLayoutLocations,The following statement contains a magic number: ShaderCode = regex.Replace (ShaderCode' x => {  	_attribLocations.Add (int.Parse (x.Groups [1].Value)' x.Groups [3].Value);  	return "attribute " + x.Groups [2].Value + " " + x.Groups [3].Value + ";";  });  
Magic Number,Sledge.Graphics.Shaders,Shader,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Shaders\Shader.cs,ReplaceLayoutLocations,The following statement contains a magic number: _attribLocations.Add (int.Parse (x.Groups [1].Value)' x.Groups [3].Value);  
Magic Number,Sledge.Graphics.Shaders,Shader,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Shaders\Shader.cs,ReplaceLayoutLocations,The following statement contains a magic number: return "attribute " + x.Groups [2].Value + " " + x.Groups [3].Value + ";";  
Magic Number,Sledge.Graphics.Shaders,Shader,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Shaders\Shader.cs,ReplaceLayoutLocations,The following statement contains a magic number: return "attribute " + x.Groups [2].Value + " " + x.Groups [3].Value + ";";  
Missing Default,Sledge.Graphics.Arrays,ArraySpecification,F:\newReposMay17\LogicAndTrick_sledge\Sledge.Graphics\Arrays\ArraySpecification.cs,ArraySpecification,The following switch statement is missing a default case: switch (field.FieldType.Name) {  case "Vector2":  	Indices.Add (ArrayIndex.Vector2 (field.Name));  	break;  case "Vector3":  	Indices.Add (ArrayIndex.Vector3 (field.Name));  	break;  case "Vector4":  case "Color4":  	Indices.Add (ArrayIndex.Vector4 (field.Name));  	break;  case "Single":  	Indices.Add (ArrayIndex.Float (field.Name));  	break;  case "Int32":  	Indices.Add (ArrayIndex.Integer (field.Name));  	break;  }  
