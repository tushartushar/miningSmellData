Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Fanabrary.Security.Hashing,Hash,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Hashing\Hashing.cs,Compute,Cyclomatic complexity of the method is 18
Long Parameter List,Fanabrary.Security.Hashing,Hash,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Hashing\Hashing.cs,TryCompute,The method has 6 parameters.
Long Parameter List,Fanabrary.Security.Hashing,Hash,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Hashing\Hashing.cs,Compute,The method has 5 parameters.
Long Statement,Fanabrary.Security.Encryption,Encryption,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Encryption\Encryption.cs,Encrypt,The length of the statement  "	using (ICryptoTransform encryptor = this.RijndaelCipher.CreateEncryptor (this.SecretKey.GetBytes (32)' this.SecretKey.GetBytes (16))) { " is 135.
Long Statement,Fanabrary.Security.Encryption,Encryption,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Encryption\Encryption.cs,Decrypt,The length of the statement  "	using (ICryptoTransform decryptor = this.RijndaelCipher.CreateDecryptor (this.SecretKey.GetBytes (32)' this.SecretKey.GetBytes (16))) { " is 135.
Magic Number,Fanabrary.Security.Encryption,Encryption,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Encryption\Encryption.cs,Encrypt,The following statement contains a magic number: using (ICryptoTransform encryptor = this.RijndaelCipher.CreateEncryptor (this.SecretKey.GetBytes (32)' this.SecretKey.GetBytes (16))) {  	using (MemoryStream memoryStream = new MemoryStream ()) {  		using (CryptoStream cryptoStream = new CryptoStream (memoryStream' encryptor' CryptoStreamMode.Write)) {  			cryptoStream.Write (plainData' 0' plainData.Length);  			cryptoStream.FlushFinalBlock ();  			return Convert.ToBase64String (memoryStream.ToArray ());  		}  	}  }  
Magic Number,Fanabrary.Security.Encryption,Encryption,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Encryption\Encryption.cs,Encrypt,The following statement contains a magic number: using (ICryptoTransform encryptor = this.RijndaelCipher.CreateEncryptor (this.SecretKey.GetBytes (32)' this.SecretKey.GetBytes (16))) {  	using (MemoryStream memoryStream = new MemoryStream ()) {  		using (CryptoStream cryptoStream = new CryptoStream (memoryStream' encryptor' CryptoStreamMode.Write)) {  			cryptoStream.Write (plainData' 0' plainData.Length);  			cryptoStream.FlushFinalBlock ();  			return Convert.ToBase64String (memoryStream.ToArray ());  		}  	}  }  
Magic Number,Fanabrary.Security.Encryption,Encryption,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Encryption\Encryption.cs,Decrypt,The following statement contains a magic number: using (ICryptoTransform decryptor = this.RijndaelCipher.CreateDecryptor (this.SecretKey.GetBytes (32)' this.SecretKey.GetBytes (16))) {  	using (MemoryStream memoryStream = new MemoryStream (encryptedData)) {  		using (CryptoStream cryptoStream = new CryptoStream (memoryStream' decryptor' CryptoStreamMode.Read)) {  			byte[] plainData = new byte[encryptedData.Length];  			int decryptedCount = cryptoStream.Read (plainData' 0' plainData.Length);  			return Encoding.Unicode.GetString (plainData' 0' decryptedCount);  		}  	}  }  
Magic Number,Fanabrary.Security.Encryption,Encryption,C:\repos\Fanatorium_Fanabrary\Fanabrary\Security\Encryption\Encryption.cs,Decrypt,The following statement contains a magic number: using (ICryptoTransform decryptor = this.RijndaelCipher.CreateDecryptor (this.SecretKey.GetBytes (32)' this.SecretKey.GetBytes (16))) {  	using (MemoryStream memoryStream = new MemoryStream (encryptedData)) {  		using (CryptoStream cryptoStream = new CryptoStream (memoryStream' decryptor' CryptoStreamMode.Read)) {  			byte[] plainData = new byte[encryptedData.Length];  			int decryptedCount = cryptoStream.Read (plainData' 0' plainData.Length);  			return Encoding.Unicode.GetString (plainData' 0' decryptedCount);  		}  	}  }  
