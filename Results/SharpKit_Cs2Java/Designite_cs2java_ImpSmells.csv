Implementation smell,Namespace,Class,File,Method,Description
Long Method,JSharp.Compiler,JCodeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JCodeImporter.cs,Visit,The method has 177 lines of code.
Complex Method,JSharp.Compiler,CompilerLogger,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerLogger.cs,TryResolveMissingInfo,Cyclomatic complexity of the method is 9
Complex Method,JSharp.Compiler,CompilerTool,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerTool.cs,OrganizeImports,Cyclomatic complexity of the method is 11
Complex Method,JSharp.Compiler,CommentsExporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\CommentsExporter.cs,ExportCommentsUptoNode,Cyclomatic complexity of the method is 8
Complex Method,JSharp.Compiler,ExpressionExtensions,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\ExpressionExtensions.cs,ExtractCompoundAssignment,Cyclomatic complexity of the method is 9
Complex Method,JSharp.Compiler,Extensions_Metadata,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\Extensions_Metadata.cs,ConvertToCustomAttribute,Cyclomatic complexity of the method is 8
Complex Method,JSharp.Compiler,JCodeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JCodeImporter.cs,Visit,Cyclomatic complexity of the method is 135
Complex Method,JSharp.Compiler,JCodeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JCodeImporter.cs,Visit,Cyclomatic complexity of the method is 9
Complex Method,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,ExportMethodBody,Cyclomatic complexity of the method is 15
Complex Method,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,ShouldExportMember,Cyclomatic complexity of the method is 8
Complex Method,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,UnsafeVisit,Cyclomatic complexity of the method is 21
Complex Method,JSharp.Compiler,JNaming,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\JNaming.cs,JName2,Cyclomatic complexity of the method is 10
Complex Method,JSharp.Compiler,Manifest,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Manifest.cs,GetManifestDiff,Cyclomatic complexity of the method is 10
Complex Method,JSharp.Compiler,ManifestDiff,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Manifest.cs,ToString,Cyclomatic complexity of the method is 14
Complex Method,JSharp.Compiler.SourceMapping,SourceMappingGenerator,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\SourceMapping\SourceMappingGenerator.cs,Generate,Cyclomatic complexity of the method is 10
Complex Method,JSharp.Java.Ast,JCompilationUnit,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JModel2.cs,Children,Cyclomatic complexity of the method is 9
Complex Method,JSharp.Java.Ast,JAnnotationDeclaration,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JModel2.cs,Children,Cyclomatic complexity of the method is 9
Complex Method,JSharp.Java.Ast,JSwitchSection,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JModel2.cs,Children,Cyclomatic complexity of the method is 9
Complex Method,JSharp.Java.Ast,JForStatement,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JModel2.cs,Children,Cyclomatic complexity of the method is 11
Complex Method,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitMethodDeclaration,Cyclomatic complexity of the method is 8
Complex Method,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,WriteModifiers,Cyclomatic complexity of the method is 8
Complex Method,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitMemberExpression,Cyclomatic complexity of the method is 8
Complex Method,JSharp,JTypeAttribute,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\JAttributes.cs,GoNative,Cyclomatic complexity of the method is 11
Complex Method,JSharp,JTypeAttribute,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\JAttributes.cs,ApplyJsMode,Cyclomatic complexity of the method is 11
Complex Method,JSharp.Utils.Misc,CSharpHelper,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\CSharpHelper.cs,QuoteSnippetStringCStyle,Cyclomatic complexity of the method is 29
Complex Method,JSharp.Utils,XmlHelper,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\XmlHelper.cs,XmlConvertTo,Cyclomatic complexity of the method is 9
Complex Method,JSharp.Utils,XSerializer,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\XSerializer.cs,Serialize,Cyclomatic complexity of the method is 8
Complex Method,JSharp.Utils,XSerializer,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\XSerializer.cs,Deserialize,Cyclomatic complexity of the method is 14
Long Parameter List,JSharp.Compiler,CompilerTool,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerTool.cs,JsModelImporter_ConfigureJsTypeImporter,The method has 8 parameters.
Long Parameter List,JSharp.Compiler,CompilerTool,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerTool.cs,OrganizeImports,The method has 6 parameters.
Long Parameter List,JSharp.Compiler,CsExternalMetadata,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\CsExternalMetadata.cs,Process,The method has 10 parameters.
Long Parameter List,JSharp.Compiler,JMeta,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\JMeta.cs,IsJsExported_Internal,The method has 8 parameters.
Long Parameter List,JSharp.Compiler,ManifestDiff,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Manifest.cs,ToString,The method has 6 parameters.
Long Parameter List,JSharp.Java.Ast,J,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\J.cs,CreateActionOrFunc,The method has 5 parameters.
Long Parameter List,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitsJsonObjectExpression,The method has 6 parameters.
Long Statement,JSharp.Compiler,CompilerTool,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerTool.cs,InternalRun,The length of the statement  "		VersionKey = this.SkcVersion + "||" + File.GetLastWriteTime (Process.GetCurrentProcess ().MainModule.FileName).ToBinary (); " is 123.
Long Statement,JSharp.Compiler,CompilerTool,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerTool.cs,SaveNewManifest,The length of the statement  "	//TODO: CreateManifest(FileMerger.ExternalJsFiles.Select(t => t.JsFile.Filename).Concat(EmbeddedResourceFiles).ToList()).SaveToFile(Args.ManifestFile); " is 151.
Long Statement,JSharp.Compiler,CompilerTool,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerTool.cs,CalculateMissingArgs,The length of the statement  "		Args.SecurityAnalysisFile = Path.Combine (Path.GetDirectoryName (Args.Output)' Args.AssemblyName + ".securityanalysis"); " is 120.
Long Statement,JSharp.Compiler,CsExternalMetadata,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\CsExternalMetadata.cs,Process,The length of the statement  "		}).Where (t => t.Att != null && (t.Att.TargetType != null || t.Att.TargetTypeName.IsNotNullOrEmpty ())).Select (t => new ExternalAttribute { " is 140.
Long Statement,JSharp.Compiler,CsExternalMetadata,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\CsExternalMetadata.cs,Process,The length of the statement  "		}).Where (t => t.Att != null && (t.Att.TargetType != null || t.Att.TargetTypeName.IsNotNullOrEmpty ())).Select (t => new ExternalAttribute { " is 140.
Long Statement,JSharp.Compiler,CsExternalMetadata,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\CsExternalMetadata.cs,Process,The length of the statement  "						Log.Error (t.GetDeclaration ()' String.Format ("Type {0} does not contain a method named {1}' please modify the TargetMethod property on the specified JsMethodAttribute' if this method is inherited' set the please set the base type as the TargetType."' ce.FullName' att.TargetMethod)); " is 285.
Long Statement,JSharp.Compiler,CsExternalMetadata,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\CsExternalMetadata.cs,Process,The length of the statement  "						Log.Error (t.IAttribute.GetDeclaration ()' String.Format ("Type {0} does not contain a property named {1}' please modify the TargetMethod property on the specified JsMethodAttribute' if this method is inherited' set the please set the base type as the TargetType."' ce.FullName' att.TargetProperty)); " is 300.
Long Statement,JSharp.Compiler,Extensions_Metadata,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\Extensions_Metadata.cs,ConvertToCustomAttribute,The length of the statement  "				throw new CompilerException (att' String.Format ("Cannot find property {0} for attribute {1}"' arg.Key.Name' type.Name)); " is 121.
Long Statement,JSharp.Compiler,JCodeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JCodeImporter.cs,ToDebug,The length of the statement  "		return String.Format ("{1}: [{2}' {3}] - {0}"' node.GetType ().Name' region.FileName' region.BeginLine' region.BeginColumn); " is 124.
Long Statement,JSharp.Compiler,JCodeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JCodeImporter.cs,CreateJsDelegateIfNeeded,The length of the statement  "	if (currentMember != null && !currentMember.IsStatic && !UseNativeFunctions (delType) && !JMeta.ForceDelegatesAsNativeFunctions (currentMember)) { " is 146.
Long Statement,JSharp.Compiler,Extensions5,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JCodeImporter3.cs,ToCSharpInvocationResolveResult,The length of the statement  "	var res2 = new CSharpInvocationResolveResult (res.TargetResult' res.Member' res.Arguments' initializerStatements: res.InitializerStatements); " is 141.
Long Statement,JSharp.Compiler,JModelImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JModelImporter.cs,GetExternalTypesToExport,The length of the statement  "	//            Log.Warn(att.GetDeclaration()' "Only enums and interfaces can be exported externally' set Export=false on this JsTypeAttribute"); " is 143.
Long Statement,JSharp.Compiler,JModelImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JModelImporter.cs,Process,The length of the statement  "	//    var file = new JsFile { Filename = pair.Key' Units = new List<JsUnit> { new JsUnit { Statements = new List<JsStatement>() } } }; " is 134.
Long Statement,JSharp.Compiler,JModelImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JModelImporter.cs,SortByNativeInheritance,The length of the statement  "	var list2 = list.Where (t => JMeta.IsNativeType (t) && t.GetBaseTypeDefinition () != null && JMeta.IsNativeType (t.GetBaseTypeDefinition ())).ToList (); " is 152.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,ApplyYield,The length of the statement  "	if (JsCodeImporter.SupportClrYield && func.Block.Descendants ().OfType<JsYieldStatement> ().FirstOrDefault () != null) { " is 120.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GetValueTypeInitializer,The length of the statement  "			else if (def.KnownTypeCode == KnownTypeCode.SByte || def.KnownTypeCode == KnownTypeCode.Int16 || def.KnownTypeCode == KnownTypeCode.Int32 || def.KnownTypeCode == KnownTypeCode.Int64 || def.KnownTypeCode == KnownTypeCode.UInt16 || def.KnownTypeCode == KnownTypeCode.UInt32 || def.KnownTypeCode == KnownTypeCode.UInt64 || def.KnownTypeCode == KnownTypeCode.Byte || def.KnownTypeCode == KnownTypeCode.Decimal || def.KnownTypeCode == KnownTypeCode.Double || def.KnownTypeCode == KnownTypeCode.Single) { " is 498.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GetValueTypeInitializer,The length of the statement  "		var defaultEnumMember = enumMembers.Where (t => (t.ConstantValue is int) && (int)t.ConstantValue == 0).FirstOrDefault () ?? enumMembers.FirstOrDefault (); " is 154.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GetBaseClassIfValid,The length of the statement  "		if (JMeta.IsClrType (baseClass.GetDefinition ()) || (JMeta.IsNativeType (baseClass.GetDefinition ()) && !JMeta.IsGlobalType (baseClass.GetDefinition ())) || !recursive) " is 168.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GetConstructorBaseOrThisInvocation2,The length of the statement  "			var baseCtor = baseType.GetConstructors (t => t.Parameters.Count == 0' GetMemberOptions.IgnoreInheritedMembers).Where (t => !t.IsStatic).FirstOrDefault (); " is 155.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GenerateDefaultConstructor,The length of the statement  "		var x = new DefaultResolvedMethod (me2' Compiler.Project.Compilation.TypeResolveContext.WithCurrentTypeDefinition (ce)); " is 120.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GenerateAutomaticEventAccessor,The length of the statement  "		var remover = J.Function ("value").Add (J.This ().Member (ee.Name).Assign (J.Member ("$RemoveDelegate").Invoke (J.This ().Member (ee.Name)' J.Member ("value"))).Statement ()); " is 175.
Long Statement,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GenerateAutomaticEventAccessor,The length of the statement  "	var adder = J.Function ("value").Add (J.This ().Member (ee.Name).Assign (J.Member ("$CombineDelegates").Invoke (J.This ().Member (ee.Name)' J.Member ("value"))).Statement ()); " is 175.
Long Statement,JSharp.Compiler,JMeta,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\JMeta.cs,IgnoreGenericMethodArguments,The length of the statement  "	return MD_JMethodOrJType (me' t => t._IgnoreGenericArguments' t => t._IgnoreGenericMethodArguments).GetValueOrDefault (); " is 121.
Long Statement,JSharp.Compiler,JMeta,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\JMeta.cs,ForceDelegatesAsNativeFunctions,The length of the statement  "	return me.MD_JMethodOrJType (t => t._ForceDelegatesAsNativeFunctions' t => t._ForceDelegatesAsNativeFunctions).GetValueOrDefault (); " is 132.
Long Statement,JSharp.Compiler,ManifestDiff,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Manifest.cs,ToString,The length of the statement  "		sb.AppendFormat (RemovedSourceFilenames.Select (t => t.ToString ()).StringConcat ("Removed source files:\n"' "'\n"' "\n")); " is 123.
Long Statement,JSharp.Compiler,ManifestDiff,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Manifest.cs,ToString,The length of the statement  "		sb.AppendFormat (RemovedContentFiles.Select (t => t.ToString ()).StringConcat ("Removed content files:\n"' "'\n"' "\n")); " is 121.
Long Statement,JSharp.Compiler.SourceMapping,SourceMappingGenerator,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\SourceMapping\SourceMappingGenerator.cs,Generate,The length of the statement  "	//    CompilerTool.Current.Log.WriteLine("Cannot generate source mapping file: " + mappingFilename + " - document not found"); " is 126.
Long Statement,JSharp.Compiler.SourceMapping,SourceMappingGenerator,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\SourceMapping\SourceMappingGenerator.cs,Generate,The length of the statement  "	//    var lines = doc.Mappings.OrderBy(t => t.GeneratedLocation.Line).ThenBy(t => t.GeneratedLocation.Column).Select(t => String.Format("{0} -> {1} = {2}"' t.GeneratedLocation' t.SourceLocation' t.SourceName)).ToArray(); " is 220.
Long Statement,JSharp.Java.Ast,JFile,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JFile.cs,SaveAs,The length of the statement  "					Compiler.Log.Debug (String.Format ("JsWriter: Visit JsNode: {0}: [{1}' {2}]"' filename' writer.CurrentLine' writer.CurrentColumn)); " is 131.
Long Statement,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitsJsonObjectExpression,The length of the statement  "		var singleLine = node.NamesValues.Where (t => t.Value.IsAny (typeof(JFunction)' typeof(JJsonObjectExpression))).FirstOrDefault () == null; " is 138.
Long Statement,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitsJsonObjectExpression,The length of the statement  "				if (EmptyLineBetweenJsonMethods && ((prev.Value != null && prev.Value is JFunction) || (next.Value != null && next.Value is JFunction))) " is 136.
Long Statement,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,SkipSemicolon,The length of the statement  "	//if (node.Expression.NodeType == JsNodeType.AssignmentExpression && ((JsAssignmentExpression)node.Expression).Right.NodeType == JsNodeType.Function)//TODO: check parent is unit " is 177.
Long Statement,JSharp.Utils,JavaScriptHelper,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\JavaScriptHelper.cs,ToClrValue,The length of the statement  "	Trace.TraceData (TraceEventType.Error' 0' "JavaScriptHelper"' "JsTypeName"' "Couldn't identify jsTypeName " + jsTypeName' ""' ""); " is 130.
Long Statement,JSharp.Utils,JavaScriptHelper,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\JavaScriptHelper.cs,ToJavaScriptValue,The length of the statement  "		jsValue = String.Format ("new Date({0}'{1}'{2}'{3}'{4}'{5}'{6})"' date.Year' date.Month - 1' date.Day' date.Hour' date.Minute' date.Second' date.Millisecond); " is 158.
Complex Conditional,JSharp.Compiler,JCodeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JCodeImporter.cs,CreateJsDelegateIfNeeded,The conditional expression  "currentMember != null && !currentMember.IsStatic && !UseNativeFunctions (delType) && !JMeta.ForceDelegatesAsNativeFunctions (currentMember)"  is complex.
Complex Conditional,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GetValueTypeInitializer,The conditional expression  "def.KnownTypeCode == KnownTypeCode.SByte || def.KnownTypeCode == KnownTypeCode.Int16 || def.KnownTypeCode == KnownTypeCode.Int32 || def.KnownTypeCode == KnownTypeCode.Int64 || def.KnownTypeCode == KnownTypeCode.UInt16 || def.KnownTypeCode == KnownTypeCode.UInt32 || def.KnownTypeCode == KnownTypeCode.UInt64 || def.KnownTypeCode == KnownTypeCode.Byte || def.KnownTypeCode == KnownTypeCode.Decimal || def.KnownTypeCode == KnownTypeCode.Double || def.KnownTypeCode == KnownTypeCode.Single"  is complex.
Complex Conditional,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,GetBaseClassIfValid,The conditional expression  "JMeta.IsClrType (baseClass.GetDefinition ()) || (JMeta.IsNativeType (baseClass.GetDefinition ()) && !JMeta.IsGlobalType (baseClass.GetDefinition ())) || !recursive"  is complex.
Complex Conditional,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitsJsonObjectExpression,The conditional expression  "EmptyLineBetweenJsonMethods && !singleLine && first.Value != null && first.Value is JFunction"  is complex.
Complex Conditional,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitsJsonObjectExpression,The conditional expression  "EmptyLineBetweenJsonMethods && ((prev.Value != null && prev.Value is JFunction) || (next.Value != null && next.Value is JFunction))"  is complex.
Complex Conditional,JSharp.Java.Ast,JWriter,C:\repos\SharpKit_Cs2Java\src\cs2java\Java\Ast\JWriter.cs,VisitsJsonObjectExpression,The conditional expression  "EmptyLineBetweenJsonMethods && !singleLine && last.Value != null && last.Value is JFunction"  is complex.
Empty Catch Block,JSharp.Compiler,CompilerLogger,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CompilerLogger.cs,TryResolveMissingInfo,The method has an empty catch block.
Magic Number,JSharp.Compiler,JMeta,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\JMeta.cs,GetExportPath,The following statement contains a magic number: if (att != null && att.Filename.IsNotNullOrEmpty ()) {  	path = att.Filename.Replace ("/"' JMeta.DirectorySeparator);  	if (path.StartsWith (@"~\") || path.StartsWith (@"~/"))  		path = path.Substring (2);  	else  		path = Path.Combine (Path.GetDirectoryName (ce.GetFileOrigin ())' path);  	var asm = ce.ParentAssembly;  	var att2 = asm.GetMetadata<JExportAttribute> ();  	if (att2 != null && att2.FilenameFormat.IsNotNullOrEmpty ())  		path = String.Format (att2.FilenameFormat' path);  }  else {  	path = GetDefaultJsFilename (ce);  }  
Magic Number,JSharp.Compiler,JMeta,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\JMeta.cs,GetExportPath,The following statement contains a magic number: if (path.StartsWith (@"~\") || path.StartsWith (@"~/"))  	path = path.Substring (2);  else  	path = Path.Combine (Path.GetDirectoryName (ce.GetFileOrigin ())' path);  
Magic Number,JSharp.Compiler,JMeta,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\JMeta.cs,GetExportPath,The following statement contains a magic number: path = path.Substring (2);  
Magic Number,JSharp.Java.Ast,TextLocation,C:\repos\SharpKit_Cs2Java\src\cs2java\Text\TextLocation.cs,GetHashCode,The following statement contains a magic number: return unchecked(191 * column.GetHashCode () ^ line.GetHashCode ());  
Magic Number,JSharp.Utils.Http,JsonServer,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Http\JsonServer.cs,ProcessRequest,The following statement contains a magic number: try {  	var returnValue = me.Invoke (Service' new object[] {  		prm  	});  	context.Response.StatusCode = 200;  	if (returnValue != null) {  		var ser2 = new DataContractJsonSerializer (returnValue.GetType ());  		ser2.WriteObject (context.Response.OutputStream' returnValue);  	}  	context.Response.OutputStream.Close ();  }  catch (TargetInvocationException e) {  	context.Response.StatusCode = 500;  	context.Response.StatusDescription = e.Message;  	context.Response.OutputStream.Close ();  }  
Magic Number,JSharp.Utils.Http,JsonServer,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Http\JsonServer.cs,ProcessRequest,The following statement contains a magic number: try {  	var returnValue = me.Invoke (Service' new object[] {  		prm  	});  	context.Response.StatusCode = 200;  	if (returnValue != null) {  		var ser2 = new DataContractJsonSerializer (returnValue.GetType ());  		ser2.WriteObject (context.Response.OutputStream' returnValue);  	}  	context.Response.OutputStream.Close ();  }  catch (TargetInvocationException e) {  	context.Response.StatusCode = 500;  	context.Response.StatusDescription = e.Message;  	context.Response.OutputStream.Close ();  }  
Magic Number,JSharp.Utils.Http,JsonServer,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Http\JsonServer.cs,ProcessRequest,The following statement contains a magic number: context.Response.StatusCode = 200;  
Magic Number,JSharp.Utils.Http,JsonServer,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Http\JsonServer.cs,ProcessRequest,The following statement contains a magic number: context.Response.StatusCode = 500;  
Magic Number,JSharp.Utils.Misc,CSharpHelper,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\CSharpHelper.cs,QuoteSnippetStringCStyle,The following statement contains a magic number: while (i < value.Length) {  	char c = value [i];  	if (c <= '"') {  		if (c != '\0') {  			switch (c) {  			case '\t':  				stringBuilder.Append ("\\t");  				break;  			case '\n':  				stringBuilder.Append ("\\n");  				break;  			case '\v':  			case '\f':  				goto IL_107;  			case '\r':  				stringBuilder.Append ("\\r");  				break;  			default:  				if (c != '"') {  					goto IL_107;  				}  				stringBuilder.Append ("\\\"");  				break;  			}  		}  		else {  			stringBuilder.Append ("\\0");  		}  	}  	else {  		if (c != '\'') {  			if (c != '\\') {  				switch (c) {  				case '\u2028':  				case '\u2029':  					AppendEscapedChar (stringBuilder' value [i]);  					break;  				default:  					goto IL_107;  				}  			}  			else {  				stringBuilder.Append ("\\\\");  			}  		}  		else {  			stringBuilder.Append ("\\'");  		}  	}  	IL_115:  	if (i > 0 && i % 80 == 0) {  		if (char.IsHighSurrogate (value [i]) && i < value.Length - 1 && char.IsLowSurrogate (value [i + 1])) {  			stringBuilder.Append (value [++i]);  		}  		//stringBuilder.Append("\" +");  		//stringBuilder.Append(Environment.NewLine);  		//stringBuilder.Append(indentation.IndentationString);  		//stringBuilder.Append('"');  	}  	i++;  	continue;  	IL_107:  	stringBuilder.Append (value [i]);  	goto IL_115;  }  
Magic Number,JSharp.Utils.Misc,CSharpHelper,C:\repos\SharpKit_Cs2Java\src\cs2java\Utils\Misc\CSharpHelper.cs,QuoteSnippetStringCStyle,The following statement contains a magic number: if (i > 0 && i % 80 == 0) {  	if (char.IsHighSurrogate (value [i]) && i < value.Length - 1 && char.IsLowSurrogate (value [i + 1])) {  		stringBuilder.Append (value [++i]);  	}  	//stringBuilder.Append("\" +");  	//stringBuilder.Append(Environment.NewLine);  	//stringBuilder.Append(indentation.IndentationString);  	//stringBuilder.Append('"');  }  
Missing Default,JSharp.Compiler,ExpressionExtensions,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\CSharp\ExpressionExtensions.cs,ExtractCompoundAssignment,The following switch statement is missing a default case: switch (x) {  case ExpressionType.PostIncrementAssign:  	return ExpressionType.AddAssign;  case ExpressionType.PostDecrementAssign:  	return ExpressionType.SubtractAssign;  case ExpressionType.PreIncrementAssign:  	return ExpressionType.AddAssign;  case ExpressionType.PreDecrementAssign:  	return ExpressionType.SubtractAssign;  case ExpressionType.AddAssign:  	return ExpressionType.Add;  case ExpressionType.SubtractAssign:  	return ExpressionType.Subtract;  case ExpressionType.DivideAssign:  	return ExpressionType.Divide;  case ExpressionType.ModuloAssign:  	return ExpressionType.Modulo;  case ExpressionType.MultiplyAssign:  	return ExpressionType.Multiply;  }  
Missing Default,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,ShouldExportMember,The following switch statement is missing a default case: switch (entity.SymbolKind) {  case SymbolKind.Field:  	return ShouldExportField ((IField)entity);  //case EntityType.ent_constant: return ShouldExportConstant((IConst)entity);  case SymbolKind.Event:  	return ShouldExportEvent ((IEvent)entity);  case SymbolKind.Property:  case SymbolKind.Indexer:  	var pe = (IProperty)entity;  	return ShouldExportProperty (pe);  case SymbolKind.Constructor:  	return ShouldExportConstructor ((IMethod)entity);  case SymbolKind.Method:  	return ShouldExportMethod ((IMethod)entity);  case SymbolKind.Operator:  	return ShouldExportMethod ((IMethod)entity);  }  
Missing Default,JSharp.Compiler,JTypeImporter,C:\repos\SharpKit_Cs2Java\src\cs2java\Compiler\Java\JTypeImporter.cs,UnsafeVisit,The following switch statement is missing a default case: switch (me.SymbolKind) {  #region switch case  case SymbolKind.TypeDefinition:  	node2 = _Visit ((ITypeDefinition)me);  	break;  case SymbolKind.Event:  	node2 = _Visit ((IEvent)me);  	break;  case SymbolKind.Method:  case SymbolKind.Constructor:  case SymbolKind.Operator:  case SymbolKind.Accessor:  	node2 = _Visit ((IMethod)me);  	break;  case SymbolKind.Property:  case SymbolKind.Indexer:  	node2 = _Visit ((IProperty)me);  	break;  case SymbolKind.Field:  	node2 = _Visit ((IField)me);  	break;  #endregion  }  
