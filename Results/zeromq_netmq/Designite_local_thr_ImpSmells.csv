Implementation smell,Namespace,Class,File,Method,Description
Magic Number,local_thr,Program,C:\repos\zeromq_netmq\src\Performance\local_thr\Program.cs,Main,The following statement contains a magic number: if (args.Length != 3)              {                  Console.WriteLine("usage: local_thr <bind-to> <message-size> <message-count>");                  return 1;              }
Magic Number,local_thr,Program,C:\repos\zeromq_netmq\src\Performance\local_thr\Program.cs,Main,The following statement contains a magic number: int messageCount = int.Parse(args[2]);
Magic Number,local_thr,Program,C:\repos\zeromq_netmq\src\Performance\local_thr\Program.cs,Main,The following statement contains a magic number: using (var pullSocket = new PullSocket())              {                  pullSocket.Bind(bindTo);                    var msg = new Msg();                  msg.InitEmpty();                    pullSocket.Receive(ref msg);                    var stopWatch = Stopwatch.StartNew();                  for (int i = 0; i != messageCount - 1; i++)                  {                      pullSocket.Receive(ref msg);                      if (msg.Size != messageSize)                      {                          Console.WriteLine("message of incorrect size received. Received: " + msg.Size + " Expected: " + messageSize);                          return -1;                      }                  }                  stopWatch.Stop();                  var millisecondsElapsed = stopWatch.ElapsedMilliseconds;                  if (millisecondsElapsed == 0)                      millisecondsElapsed = 1;                    msg.Close();                    double messagesPerSecond = (double)messageCount/millisecondsElapsed*1000;                  double megabits = messagesPerSecond*messageSize*8/1000000;                    Console.WriteLine("message size: {0} [B]"' messageSize);                  Console.WriteLine("message count: {0}"' messageCount);                  Console.WriteLine("mean throughput: {0:0.000} [msg/s]"' messagesPerSecond);                  Console.WriteLine("mean throughput: {0:0.000} [Mb/s]"' megabits);              }
Magic Number,local_thr,Program,C:\repos\zeromq_netmq\src\Performance\local_thr\Program.cs,Main,The following statement contains a magic number: using (var pullSocket = new PullSocket())              {                  pullSocket.Bind(bindTo);                    var msg = new Msg();                  msg.InitEmpty();                    pullSocket.Receive(ref msg);                    var stopWatch = Stopwatch.StartNew();                  for (int i = 0; i != messageCount - 1; i++)                  {                      pullSocket.Receive(ref msg);                      if (msg.Size != messageSize)                      {                          Console.WriteLine("message of incorrect size received. Received: " + msg.Size + " Expected: " + messageSize);                          return -1;                      }                  }                  stopWatch.Stop();                  var millisecondsElapsed = stopWatch.ElapsedMilliseconds;                  if (millisecondsElapsed == 0)                      millisecondsElapsed = 1;                    msg.Close();                    double messagesPerSecond = (double)messageCount/millisecondsElapsed*1000;                  double megabits = messagesPerSecond*messageSize*8/1000000;                    Console.WriteLine("message size: {0} [B]"' messageSize);                  Console.WriteLine("message count: {0}"' messageCount);                  Console.WriteLine("mean throughput: {0:0.000} [msg/s]"' messagesPerSecond);                  Console.WriteLine("mean throughput: {0:0.000} [Mb/s]"' megabits);              }
Magic Number,local_thr,Program,C:\repos\zeromq_netmq\src\Performance\local_thr\Program.cs,Main,The following statement contains a magic number: using (var pullSocket = new PullSocket())              {                  pullSocket.Bind(bindTo);                    var msg = new Msg();                  msg.InitEmpty();                    pullSocket.Receive(ref msg);                    var stopWatch = Stopwatch.StartNew();                  for (int i = 0; i != messageCount - 1; i++)                  {                      pullSocket.Receive(ref msg);                      if (msg.Size != messageSize)                      {                          Console.WriteLine("message of incorrect size received. Received: " + msg.Size + " Expected: " + messageSize);                          return -1;                      }                  }                  stopWatch.Stop();                  var millisecondsElapsed = stopWatch.ElapsedMilliseconds;                  if (millisecondsElapsed == 0)                      millisecondsElapsed = 1;                    msg.Close();                    double messagesPerSecond = (double)messageCount/millisecondsElapsed*1000;                  double megabits = messagesPerSecond*messageSize*8/1000000;                    Console.WriteLine("message size: {0} [B]"' messageSize);                  Console.WriteLine("message count: {0}"' messageCount);                  Console.WriteLine("mean throughput: {0:0.000} [msg/s]"' messagesPerSecond);                  Console.WriteLine("mean throughput: {0:0.000} [Mb/s]"' megabits);              }
