Implementation smell,Namespace,Class,File,Method,Description
Long Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,ThreadMain,The method has 151 lines of code.
Long Method,FBPLib,Connection,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Connection.cs,Send,The method has 67 lines of code.
Long Method,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 78 lines of code.
Long Method,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Go,The method has 82 lines of code.
Long Method,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,WaitForAll,The method has 65 lines of code.
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,InitBlock,Cyclomatic complexity of the method is 7
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,ProcIpt,Cyclomatic complexity of the method is 9
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,ProcOpt,Cyclomatic complexity of the method is 9
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,OpenInputArray,Cyclomatic complexity of the method is 10
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,OpenOutputArray,Cyclomatic complexity of the method is 13
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,GetPortArray,Cyclomatic complexity of the method is 9
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,CheckPorts,Cyclomatic complexity of the method is 7
Complex Method,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,ThreadMain,Cyclomatic complexity of the method is 30
Complex Method,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Component,Cyclomatic complexity of the method is 8
Complex Method,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,Cyclomatic complexity of the method is 16
Complex Method,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Initiate,Cyclomatic complexity of the method is 8
Complex Method,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,WaitForAll,Cyclomatic complexity of the method is 15
Complex Method,FBPLib,Packet,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Packet.cs,Attach,Cyclomatic complexity of the method is 9
Complex Method,FBPLib,SubInSS,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\SubInSS.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,FBPLib,SubNet,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\SubNet.cs,Execute,Cyclomatic complexity of the method is 9
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 6 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 5 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 5 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 4 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 5 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 4 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 4 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 5 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 4 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 4 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 4 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 6 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 5 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 5 parameters.
Long Parameter List,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The method has 4 parameters.
Long Statement,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,ProcIpt,The length of the statement  "			FlowError.Complain (_name + "." + s + ": @InPort specified setDimension but valueList did not contain any strings ending with asterisks"); " is 138.
Long Statement,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,ProcOpt,The length of the statement  "			FlowError.Complain (_name + "." + s + ": @OutPort specified setDimension but valueList did not contain any strings ending with asterisks"); " is 139.
Long Statement,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,OpenInputArray,The length of the statement  "		FlowError.Complain ("Array port fixedSize option in metadata doesn't match specified size: " + this._name + "." + name); " is 120.
Long Statement,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,OpenInputArray,The length of the statement  "		FlowError.Complain ("Number of elements specified for array port less than actual number used: " + this._name + "." + name); " is 124.
Long Statement,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,OpenOutputArray,The length of the statement  "		FlowError.Complain ("Array port fixedSize option in metadata doesn't match specified size: " + this._name + "." + name); " is 120.
Long Statement,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,OpenOutputArray,The length of the statement  "			FlowError.Complain ("Number of elements specified for array port less than actual number used: " + this._name + "." + name); " is 124.
Long Statement,FBPLib,Connection,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Connection.cs,IndicateOneSenderClosed,The length of the statement  "					if (_receiver.Status == Component.States.Dormant || _receiver.Status == Component.States.NotStarted || _receiver.Status == Component.States.SuspFIPE) " is 149.
Long Statement,FBPLib,Connection,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Connection.cs,Receive,The length of the statement  "				//UPGRADE_NOTE: Exception 'java.lang.ThreadDeath' was converted to ' ' which has different behavior. 'ms-help://MS.VSCC/commoner/redir/redirect.htm?keyword="jlca1100"' " is 167.
Long Statement,FBPLib,Connection,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Connection.cs,Send,The length of the statement  "					//UPGRADE_NOTE: Exception 'java.lang.ThreadDeath' was converted to ' ' which has different behavior. 'ms-help://MS.VSCC/commoner/redir/redirect.htm?keyword="jlca1100"' " is 167.
Long Statement,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Component,The length of the statement  "	//UPGRADE_NOTE: Exception 'java.lang.InstantiationException' was converted to ' ' which has different behavior. 'ms-help://MS.VSCC/commoner/redir/redirect.htm?keyword="jlca1100"' " is 178.
Long Statement,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The length of the statement  "			FlowError.Complain ("Connection capacity does not agree with previous specification\n " + receiver._name + "." + inP._displayName); " is 131.
Long Statement,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Connect,The length of the statement  "	return Connect (Component (sParts [0])' Port (sParts [1])' Component (rParts [0])' Port (rParts [1])' arraySize' IPCount); " is 122.
Long Statement,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,Go,The length of the statement  "		Console.Out.WriteLine ("Counts: C: {0}' D: {1}' S: {2}' R (non-null): {3}' DO: {4}"' creates' drops' sends' receives' dropOlds); " is 128.
Empty Catch Block,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,ThreadMain,The method has an empty catch block.
Magic Number,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,GetPortArray,The following statement contains a magic number: foreach (KeyValuePair<string' T> kvp in ports) {  	Match m = re.Match (kvp.Key);  	if (!m.Success)  		FlowError.Complain ("Invalid port name :" + kvp.Key);  	if (!(kvp.Value is T))  		// ignore other types than IInputPort or OutputPort (depending on T)  		continue;  	string s = m.Groups [1].Value;  	if (!s.Equals (name))  		continue;  	int subs = 0;  	if (m.Groups [2].Value.Equals (""))  		continue;  	subs = Convert.ToInt32 (m.Groups [3].Value);  	if (subs < 0 || subs >= 1000)  		FlowError.Complain ("bad subscript " + name);  	if (ret == null)  		ret = new T[0];  	if (subs >= ret.Length)  		Array.Resize (ref ret' subs + 1);  	ret [subs] = kvp.Value;  }  
Magic Number,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,GetPortArray,The following statement contains a magic number: foreach (KeyValuePair<string' T> kvp in ports) {  	Match m = re.Match (kvp.Key);  	if (!m.Success)  		FlowError.Complain ("Invalid port name :" + kvp.Key);  	if (!(kvp.Value is T))  		// ignore other types than IInputPort or OutputPort (depending on T)  		continue;  	string s = m.Groups [1].Value;  	if (!s.Equals (name))  		continue;  	int subs = 0;  	if (m.Groups [2].Value.Equals (""))  		continue;  	subs = Convert.ToInt32 (m.Groups [3].Value);  	if (subs < 0 || subs >= 1000)  		FlowError.Complain ("bad subscript " + name);  	if (ret == null)  		ret = new T[0];  	if (subs >= ret.Length)  		Array.Resize (ref ret' subs + 1);  	ret [subs] = kvp.Value;  }  
Magic Number,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,GetPortArray,The following statement contains a magic number: foreach (KeyValuePair<string' T> kvp in ports) {  	Match m = re.Match (kvp.Key);  	if (!m.Success)  		FlowError.Complain ("Invalid port name :" + kvp.Key);  	if (!(kvp.Value is T))  		// ignore other types than IInputPort or OutputPort (depending on T)  		continue;  	string s = m.Groups [1].Value;  	if (!s.Equals (name))  		continue;  	int subs = 0;  	if (m.Groups [2].Value.Equals (""))  		continue;  	subs = Convert.ToInt32 (m.Groups [3].Value);  	if (subs < 0 || subs >= 1000)  		FlowError.Complain ("bad subscript " + name);  	if (ret == null)  		ret = new T[0];  	if (subs >= ret.Length)  		Array.Resize (ref ret' subs + 1);  	ret [subs] = kvp.Value;  }  
Magic Number,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,GetPortArray,The following statement contains a magic number: if (m.Groups [2].Value.Equals (""))  	continue;  
Magic Number,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,GetPortArray,The following statement contains a magic number: subs = Convert.ToInt32 (m.Groups [3].Value);  
Magic Number,FBPLib,Component,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Component.cs,GetPortArray,The following statement contains a magic number: if (subs < 0 || subs >= 1000)  	FlowError.Complain ("bad subscript " + name);  
Magic Number,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,ListCompStatus,The following statement contains a magic number: lock (_network)// JPM   {  	foreach (Component comp in _components.Values) {  		if (comp is SubNet) {  			SubNet subnet = comp as SubNet;  			if (!subnet.ListCompStatus (msgs))  				return false;  		} else {  			if (comp._status == States.Active || comp._status == States.LongWait) {  				return false;  			}  			if (comp.Status != States.Terminated)  				terminated = false;  			string compPort = comp.Name;  			if (comp.Status == States.SuspRecv || comp.Status == States.SuspSend)  				compPort += "." + comp.currPort;  			string st = Enum.GetName (typeof(States)' comp._status);  			st = (st + "            ").Substring (0' 13);  			msgs.Add (String.Format ("--- {0}     {1}"' st' compPort));  		}  	}  	return !terminated;  }  
Magic Number,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,ListCompStatus,The following statement contains a magic number: foreach (Component comp in _components.Values) {  	if (comp is SubNet) {  		SubNet subnet = comp as SubNet;  		if (!subnet.ListCompStatus (msgs))  			return false;  	} else {  		if (comp._status == States.Active || comp._status == States.LongWait) {  			return false;  		}  		if (comp.Status != States.Terminated)  			terminated = false;  		string compPort = comp.Name;  		if (comp.Status == States.SuspRecv || comp.Status == States.SuspSend)  			compPort += "." + comp.currPort;  		string st = Enum.GetName (typeof(States)' comp._status);  		st = (st + "            ").Substring (0' 13);  		msgs.Add (String.Format ("--- {0}     {1}"' st' compPort));  	}  }  
Magic Number,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,ListCompStatus,The following statement contains a magic number: if (comp is SubNet) {  	SubNet subnet = comp as SubNet;  	if (!subnet.ListCompStatus (msgs))  		return false;  } else {  	if (comp._status == States.Active || comp._status == States.LongWait) {  		return false;  	}  	if (comp.Status != States.Terminated)  		terminated = false;  	string compPort = comp.Name;  	if (comp.Status == States.SuspRecv || comp.Status == States.SuspSend)  		compPort += "." + comp.currPort;  	string st = Enum.GetName (typeof(States)' comp._status);  	st = (st + "            ").Substring (0' 13);  	msgs.Add (String.Format ("--- {0}     {1}"' st' compPort));  }  
Magic Number,FBPLib,Network,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Network.cs,ListCompStatus,The following statement contains a magic number: st = (st + "            ").Substring (0' 13);  
Magic Number,FBPLib,Port,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Port.cs,Port,The following statement contains a magic number: if (_index == -1) {  	Regex re = new Regex (@"^(\w+)\[(\d+)\]$");  	// test for square bracket  	Match m = re.Match (_name);  	if (m.Success) {  		_name = m.Groups [1].Value;  		_index = Int32.Parse (m.Groups [2].Value);  	}  }  
Magic Number,FBPLib,Port,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Port.cs,Port,The following statement contains a magic number: if (m.Success) {  	_name = m.Groups [1].Value;  	_index = Int32.Parse (m.Groups [2].Value);  }  
Magic Number,FBPLib,Port,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\Port.cs,Port,The following statement contains a magic number: _index = Int32.Parse (m.Groups [2].Value);  
Magic Number,FBPLib,TimeoutHandler,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\TimeoutHandler.cs,TimeoutHandler,The following statement contains a magic number: lock (comp._network._timeouts) {  	comp.Timeout = this;  	comp._network._timeouts.Add (comp' this);  	double ms = dur * 1000.0 + 500.0;  	_dur = (int)ms;  	//convert to msecs  	comp.Status = Component.States.LongWait;  	_comp = comp;  }  
Magic Number,FBPLib,TimeoutHandler,D:\newReposJune17\jpaulm_csharpfbp\FBPLib\Lib\TimeoutHandler.cs,TimeoutHandler,The following statement contains a magic number: lock (comp._network._timeouts) {  	comp.Timeout = this;  	comp._network._timeouts.Add (comp' this);  	double ms = dur * 1000.0 + 500.0;  	_dur = (int)ms;  	//convert to msecs  	comp.Status = Component.States.LongWait;  	_comp = comp;  }  
