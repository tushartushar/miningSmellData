Implementation smell,Namespace,Class,File,Method,Description
Long Method,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The method has 60 lines of code.
Complex Method,Components,SubstreamSensitiveMerge,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\SubstreamSensitiveMerge.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,Components,Collate,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Collate.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,Components,LoadBalance,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\LoadBalance.cs,Execute,Cyclomatic complexity of the method is 7
Complex Method,Components,Output,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Output.cs,Execute,Cyclomatic complexity of the method is 12
Complex Method,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,Cyclomatic complexity of the method is 7
Complex Method,Components,ReadOdbc,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadOdbc.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,Components,WriteText,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\WriteText.cs,Execute,Cyclomatic complexity of the method is 14
Magic Number,Components,ProcessSlowly,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ProcessSlowly.cs,Execute,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,Components,GenerateSlowly,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenerateSlowly.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	Packet p = Create (i);  	Thread.Sleep (100);  	_outport.Send (p);  }  
Magic Number,Components,GenerateSlowly,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenerateSlowly.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	Packet p = Create (i);  	Thread.Sleep (100);  	_outport.Send (p);  }  
Magic Number,Components,GenerateSlowly,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenerateSlowly.cs,Execute,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Components,GenSS,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenSS.cs,Execute,The following statement contains a magic number: for (int i = 0; i < ct; i++) {  	int j = 100 - i;  	string s = String.Format ("{0:d4}"' j) + " abc";  	p = Create (s);  	_outport.Send (p);  	if (i < ct - 1)// prevent empty bracket pair at end  	 {  		if (i % 5 == 4) {  			p = Create (Packet.Types.Close' "");  			_outport.Send (p);  			p = Create (Packet.Types.Open' "");  			_outport.Send (p);  		}  	}  }  
Magic Number,Components,GenSS,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenSS.cs,Execute,The following statement contains a magic number: for (int i = 0; i < ct; i++) {  	int j = 100 - i;  	string s = String.Format ("{0:d4}"' j) + " abc";  	p = Create (s);  	_outport.Send (p);  	if (i < ct - 1)// prevent empty bracket pair at end  	 {  		if (i % 5 == 4) {  			p = Create (Packet.Types.Close' "");  			_outport.Send (p);  			p = Create (Packet.Types.Open' "");  			_outport.Send (p);  		}  	}  }  
Magic Number,Components,GenSS,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenSS.cs,Execute,The following statement contains a magic number: for (int i = 0; i < ct; i++) {  	int j = 100 - i;  	string s = String.Format ("{0:d4}"' j) + " abc";  	p = Create (s);  	_outport.Send (p);  	if (i < ct - 1)// prevent empty bracket pair at end  	 {  		if (i % 5 == 4) {  			p = Create (Packet.Types.Close' "");  			_outport.Send (p);  			p = Create (Packet.Types.Open' "");  			_outport.Send (p);  		}  	}  }  
Magic Number,Components,GenSS,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenSS.cs,Execute,The following statement contains a magic number: if (i < ct - 1)// prevent empty bracket pair at end   {  	if (i % 5 == 4) {  		p = Create (Packet.Types.Close' "");  		_outport.Send (p);  		p = Create (Packet.Types.Open' "");  		_outport.Send (p);  	}  }  
Magic Number,Components,GenSS,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenSS.cs,Execute,The following statement contains a magic number: if (i < ct - 1)// prevent empty bracket pair at end   {  	if (i % 5 == 4) {  		p = Create (Packet.Types.Close' "");  		_outport.Send (p);  		p = Create (Packet.Types.Open' "");  		_outport.Send (p);  	}  }  
Magic Number,Components,GenSS,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenSS.cs,Execute,The following statement contains a magic number: if (i % 5 == 4) {  	p = Create (Packet.Types.Close' "");  	_outport.Send (p);  	p = Create (Packet.Types.Open' "");  	_outport.Send (p);  }  
Magic Number,Components,GenSS,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\GenSS.cs,Execute,The following statement contains a magic number: if (i % 5 == 4) {  	p = Create (Packet.Types.Close' "");  	_outport.Send (p);  	p = Create (Packet.Types.Open' "");  	_outport.Send (p);  }  
Magic Number,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The following statement contains a magic number: while (!(theString.Equals ("Closedown"))) {  	LongWaitEnd ();  	string s = theString.Substring (0' 4);  	theString = theString.Substring (5);  	int i = Int32.Parse (s);  	if (i != cyclic_count) {  		Console.Error.WriteLine ("Sequence error: " + this.Name);  		break;  	}  	//Console.Out.WriteLine("RS read: " + theString);  	///* Experimental  	if (cyclic_count % 20 == 0) {  		streamWriter.WriteLine (theString);  		//Console.Out.WriteLine("RS ack: " + theString);  		streamWriter.Flush ();  	}  	//*/  	p = Create (theString);  	_outport.Send (p);  	LongWaitStart (_timeout);  	cyclic_count = (cyclic_count + 1) % 10000;  	theString = streamReader.ReadLine ();  }  
Magic Number,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The following statement contains a magic number: while (!(theString.Equals ("Closedown"))) {  	LongWaitEnd ();  	string s = theString.Substring (0' 4);  	theString = theString.Substring (5);  	int i = Int32.Parse (s);  	if (i != cyclic_count) {  		Console.Error.WriteLine ("Sequence error: " + this.Name);  		break;  	}  	//Console.Out.WriteLine("RS read: " + theString);  	///* Experimental  	if (cyclic_count % 20 == 0) {  		streamWriter.WriteLine (theString);  		//Console.Out.WriteLine("RS ack: " + theString);  		streamWriter.Flush ();  	}  	//*/  	p = Create (theString);  	_outport.Send (p);  	LongWaitStart (_timeout);  	cyclic_count = (cyclic_count + 1) % 10000;  	theString = streamReader.ReadLine ();  }  
Magic Number,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The following statement contains a magic number: while (!(theString.Equals ("Closedown"))) {  	LongWaitEnd ();  	string s = theString.Substring (0' 4);  	theString = theString.Substring (5);  	int i = Int32.Parse (s);  	if (i != cyclic_count) {  		Console.Error.WriteLine ("Sequence error: " + this.Name);  		break;  	}  	//Console.Out.WriteLine("RS read: " + theString);  	///* Experimental  	if (cyclic_count % 20 == 0) {  		streamWriter.WriteLine (theString);  		//Console.Out.WriteLine("RS ack: " + theString);  		streamWriter.Flush ();  	}  	//*/  	p = Create (theString);  	_outport.Send (p);  	LongWaitStart (_timeout);  	cyclic_count = (cyclic_count + 1) % 10000;  	theString = streamReader.ReadLine ();  }  
Magic Number,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The following statement contains a magic number: while (!(theString.Equals ("Closedown"))) {  	LongWaitEnd ();  	string s = theString.Substring (0' 4);  	theString = theString.Substring (5);  	int i = Int32.Parse (s);  	if (i != cyclic_count) {  		Console.Error.WriteLine ("Sequence error: " + this.Name);  		break;  	}  	//Console.Out.WriteLine("RS read: " + theString);  	///* Experimental  	if (cyclic_count % 20 == 0) {  		streamWriter.WriteLine (theString);  		//Console.Out.WriteLine("RS ack: " + theString);  		streamWriter.Flush ();  	}  	//*/  	p = Create (theString);  	_outport.Send (p);  	LongWaitStart (_timeout);  	cyclic_count = (cyclic_count + 1) % 10000;  	theString = streamReader.ReadLine ();  }  
Magic Number,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The following statement contains a magic number: theString = theString.Substring (5);  
Magic Number,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The following statement contains a magic number: if (cyclic_count % 20 == 0) {  	streamWriter.WriteLine (theString);  	//Console.Out.WriteLine("RS ack: " + theString);  	streamWriter.Flush ();  }  
Magic Number,Components,ReadFromSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadFromSocket.cs,Execute,The following statement contains a magic number: cyclic_count = (cyclic_count + 1) % 10000;  
Magic Number,Components,ReadOdbc,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadOdbc.cs,Execute,The following statement contains a magic number: _table = parmArray [2];  
Magic Number,Components,ReadOdbc,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\ReadOdbc.cs,Execute,The following statement contains a magic number: _timeout = Double.Parse (parmArray [3]);  
Magic Number,Components,Splitter1,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Splitter1.cs,Execute,The following statement contains a magic number: for (Packet p = _inp.Receive (); p != null; p = _inp.Receive ()) {  	// Console.Out.WriteLine("{0} {1}"' count' i);  	_outps [i].Send (p);  	if (++count == 30 && i != _outps.Length - 1) {  		_outps [i].Close ();  		i++;  		count = 0;  	}  }  
Magic Number,Components,Splitter1,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Splitter1.cs,Execute,The following statement contains a magic number: if (++count == 30 && i != _outps.Length - 1) {  	_outps [i].Close ();  	i++;  	count = 0;  }  
Magic Number,Components,TextToWords,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\TextToWords.cs,Execute,The following statement contains a magic number: foreach (char c in text + ' ') {  	if (Char.IsLetterOrDigit (c)) {  		sb.Append (c);  		if (!inword) {  			inword = true;  			offset = offs;  		}  	} else if (inword) {  		Packet pp = Create (sb.ToString ());  		pp.Attributes.Add ("Text"' text);  		pp.Attributes.Add ("Offset"' offset);  		if (sb.Length >= 4)  			_outp.Send (pp);  		else  			_outpn.Send (pp);  		sb.Length = 0;  		inword = false;  	}  	++offs;  }  
Magic Number,Components,TextToWords,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\TextToWords.cs,Execute,The following statement contains a magic number: if (Char.IsLetterOrDigit (c)) {  	sb.Append (c);  	if (!inword) {  		inword = true;  		offset = offs;  	}  } else if (inword) {  	Packet pp = Create (sb.ToString ());  	pp.Attributes.Add ("Text"' text);  	pp.Attributes.Add ("Offset"' offset);  	if (sb.Length >= 4)  		_outp.Send (pp);  	else  		_outpn.Send (pp);  	sb.Length = 0;  	inword = false;  }  
Magic Number,Components,TextToWords,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\TextToWords.cs,Execute,The following statement contains a magic number: if (inword) {  	Packet pp = Create (sb.ToString ());  	pp.Attributes.Add ("Text"' text);  	pp.Attributes.Add ("Offset"' offset);  	if (sb.Length >= 4)  		_outp.Send (pp);  	else  		_outpn.Send (pp);  	sb.Length = 0;  	inword = false;  }  
Magic Number,Components,TextToWords,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\TextToWords.cs,Execute,The following statement contains a magic number: if (sb.Length >= 4)  	_outp.Send (pp);  else  	_outpn.Send (pp);  
Magic Number,Components,Tune,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Tune.cs,Execute,The following statement contains a magic number: Thread.Sleep (750);  
Magic Number,Components,Tune,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Tune.cs,Execute,The following statement contains a magic number: while ((p = _inport.Receive ()) != null) {  	int[] intArray = p.Content as int[];  	Console.Beep (intArray [0]' intArray [1] - 50);  	Thread.Sleep (50);  	// 1/20 sec  	Drop (p);  }  
Magic Number,Components,Tune,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Tune.cs,Execute,The following statement contains a magic number: while ((p = _inport.Receive ()) != null) {  	int[] intArray = p.Content as int[];  	Console.Beep (intArray [0]' intArray [1] - 50);  	Thread.Sleep (50);  	// 1/20 sec  	Drop (p);  }  
Magic Number,Components,Tune,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Tune.cs,Execute,The following statement contains a magic number: Console.Beep (intArray [0]' intArray [1] - 50);  
Magic Number,Components,Tune,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\Tune.cs,Execute,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,Components,WriteToSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\WriteToSocket.cs,Execute,The following statement contains a magic number: while ((p = _inport.Receive ()) != null) {  	try {  		string s = String.Format ("{0:D4}"' cyclic_count);  		streamWriter.WriteLine (s + ":" + p.Content);  		//Console.WriteLine("WS write: " + p.Content);  		streamWriter.Flush ();  		///* Experimental  		//if (cyclic_count % 20 == 0)  		//{  		LongWaitStart (_timeout);  		theString = streamReader.ReadLine ();  		//Console.WriteLine("WS ack: " + theString);  		LongWaitEnd ();  		// }  		//*/  	} catch {  		Console.Error.WriteLine ("Exception reading from Server");  	}  	if (_outport.IsConnected ())  		_outport.Send (p);  	else  		Drop (p);  	cyclic_count = (cyclic_count + 1) % 10000;  }  
Magic Number,Components,WriteToSocket,D:\newReposJune17\jpaulm_csharpfbp\FBPVerbs\FBPComponents\WriteToSocket.cs,Execute,The following statement contains a magic number: cyclic_count = (cyclic_count + 1) % 10000;  
