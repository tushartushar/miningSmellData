Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The length of the statement  "	float fx = e.Graphics.MeasureString (" "' new Font ("Courier new"' 12' FontStyle.Regular)' 100' new StringFormat (StringFormat.GenericTypographic) { " is 148.
Long Statement,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The length of the statement  "			e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p))); " is 127.
Long Statement,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The length of the statement  "		e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p)); " is 132.
Long Statement,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The length of the statement  "		e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p)); " is 131.
Long Statement,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The length of the statement  "		e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p)); " is 172.
Long Statement,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,VirtualTerminal_Load,The length of the statement  "	using (BinaryReader br = new BinaryReader (System.Reflection.Assembly.GetExecutingAssembly ().GetManifestResourceStream ("GruntXProductions.Blazar.Resources.font.bin"))) { " is 171.
Long Statement,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,performScroll,The length of the statement  "	BitmapData img = display.LockBits (new Rectangle (Point.Empty' display.Size)' System.Drawing.Imaging.ImageLockMode.ReadWrite' display.PixelFormat); " is 147.
Long Statement,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,drawCharacter,The length of the statement  "	//graphics.DrawString(c.ToString()' new Font("Lucida Console"' 9f' FontStyle.Regular)' Brushes.White' new PointF(xP' yP)); " is 122.
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,DisassemblerView,The following statement contains a magic number: this.AutoScrollMinSize = new Size (0' 1000);  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: for (uint i = startAddress; i < endAddress; i += 4) {  	int word = (int)(i - startAddress) / 4;  	tmp [0] = host.GetMemory ().ReadByte (i);  	tmp [1] = host.GetMemory ().ReadByte (i + 1);  	tmp [2] = host.GetMemory ().ReadByte (i + 2);  	tmp [3] = host.GetMemory ().ReadByte (i + 3);  	string bytes = string.Format ("{0:x2} {1:x2} {2:x2} {3:x2}"' tmp [0]' tmp [1]' tmp [2]' tmp [3]);  	uint ins = BitConverter.ToUInt32 (tmp' 0);  	int iw = (int)((p) * (float)ico.Size.Height / (float)ico.Size.Width);  	if (i == ip) {  		e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  		e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  	}  	string addr = i.ToString ("x8").PadRight (10);  	e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  	e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  	e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: i += 4
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: tmp [2] = host.GetMemory ().ReadByte (i + 2);  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: tmp [2] = host.GetMemory ().ReadByte (i + 2);  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: tmp [3] = host.GetMemory ().ReadByte (i + 3);  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: tmp [3] = host.GetMemory ().ReadByte (i + 3);  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: if (i == ip) {  	e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  	e.Graphics.FillRectangle (Brushes.LightYellow' new Rectangle (new Point (iw' (int)(word * p))' new Size (this.Width' (int)p)));  }  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawImage (ico' 0' (int)(word * p) + 4' iw' fx);  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (i.ToString ("x8")' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Blue' new PointF (iw' word * p));  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (bytes' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 10' word * p));  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  
Magic Number,GruntXProductions.Blazar,DisassemblerView,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\DisassemblerView.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (InstructionHelper.DisassembleInstruction (ins)' new Font ("Courier new"' 12' FontStyle.Regular)' Brushes.Black' new PointF (iw + fx * 25' word * p));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,FormEmulator_Load,The following statement contains a magic number: emulator.Speed = 10000000;  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,FormEmulator_Load,The following statement contains a magic number: disassember.AutoScrollMinSize = new Size (0' 18000);  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR2.Text = String.Format ("R2: 0x{0:x8}"' emulator.GetRegister (2));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR3.Text = String.Format ("R3: 0x{0:x8}"' emulator.GetRegister (3));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR4.Text = String.Format ("R4: 0x{0:x8}"' emulator.GetRegister (4));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR5.Text = String.Format ("R5: 0x{0:x8}"' emulator.GetRegister (5));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR6.Text = String.Format ("R6: 0x{0:x8}"' emulator.GetRegister (6));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR7.Text = String.Format ("R7: 0x{0:x8}"' emulator.GetRegister (7));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR8.Text = String.Format ("R8: 0x{0:x8}"' emulator.GetRegister (8));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR9.Text = String.Format ("R9: 0x{0:x8}"' emulator.GetRegister (9));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelR10.Text = String.Format ("R10:   0x{0:x8}"' emulator.GetRegister (10));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelLr.Text = String.Format ("LR:    0x{0:x8}"' emulator.GetRegister (11));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelFlags.Text = String.Format ("FLAGS: 0x{0:x8}"' emulator.GetRegister (12));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelBp.Text = String.Format ("BP:    0x{0:x8}"' emulator.GetRegister (13));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelSp.Text = String.Format ("SP:    0x{0:x8}"' emulator.GetRegister (14));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelIp.Text = String.Format ("IP:  0x{0:x8}"' emulator.GetRegister (15));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelCtl.Text = String.Format ("CTL: 0x{0:x8}"' emulator.GetRegister (15));  
Magic Number,GruntXProductions.Blazar,FormEmulator,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\FormEmulator.cs,setRegisterText,The following statement contains a magic number: labelIvt.Text = String.Format ("IVT: 0x{0:x8}"' emulator.GetRegister (15));  
Magic Number,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,VirtualTerminal_Load,The following statement contains a magic number: this.display = new Bitmap (this.bufferWidth * 8' this.bufferHeight * 16);  
Magic Number,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,VirtualTerminal_Load,The following statement contains a magic number: this.display = new Bitmap (this.bufferWidth * 8' this.bufferHeight * 16);  
Magic Number,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,drawCharacter,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	int pixels = fontMap [start + y];  	for (int r = 0; r < 8; r++) {  		if (((1 << r) & pixels) != 0)  			display.SetPixel (xP + r' yP + y' Color.FromArgb ((int)colors [fg]));  		else  			display.SetPixel (xP + r' yP + y' Color.FromArgb ((int)colors [bg]));  	}  }  
Magic Number,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,drawCharacter,The following statement contains a magic number: for (int y = 0; y < 16; y++) {  	int pixels = fontMap [start + y];  	for (int r = 0; r < 8; r++) {  		if (((1 << r) & pixels) != 0)  			display.SetPixel (xP + r' yP + y' Color.FromArgb ((int)colors [fg]));  		else  			display.SetPixel (xP + r' yP + y' Color.FromArgb ((int)colors [bg]));  	}  }  
Magic Number,GruntXProductions.Blazar,VirtualTerminal,C:\repos\GruntTheDivine_BlazarVM\src\BlazarVirtualMachine\TerminalControl.cs,drawCharacter,The following statement contains a magic number: for (int r = 0; r < 8; r++) {  	if (((1 << r) & pixels) != 0)  		display.SetPixel (xP + r' yP + y' Color.FromArgb ((int)colors [fg]));  	else  		display.SetPixel (xP + r' yP + y' Color.FromArgb ((int)colors [bg]));  }  
