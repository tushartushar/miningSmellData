Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DisassembleInstruction,Cyclomatic complexity of the method is 11
Complex Method,GruntXProductions.Blazar.Emulator,PeripheralSerialController,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\PeripheralSerialController.cs,interpretCommand,Cyclomatic complexity of the method is 12
Complex Method,GruntXProductions.Blazar.Emulator.Instructions,InstructionBl,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBl.cs,Interpret,Cyclomatic complexity of the method is 30
Complex Method,GruntXProductions.Blazar.Emulator.Instructions,InstructionBr,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBr.cs,Interpret,Cyclomatic complexity of the method is 30
Long Parameter List,GruntXProductions.Blazar.Emulator,IDirectMemoryAccess,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\IDirectMemoryAccess.cs,BeginRead,The method has 5 parameters.
Long Parameter List,GruntXProductions.Blazar.Emulator,IDirectMemoryAccess,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\IDirectMemoryAccess.cs,BeginWrite,The method has 5 parameters.
Long Parameter List,GruntXProductions.Blazar.Emulator,MemoryPhysical,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\MemoryPhysical.cs,BeginRead,The method has 5 parameters.
Long Parameter List,GruntXProductions.Blazar.Emulator,MemoryPhysical,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\MemoryPhysical.cs,BeginWrite,The method has 5 parameters.
Long Statement,GruntXProductions.Blazar,Program,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Program.cs,Main,The length of the statement  "	emu.LoadProgram (System.IO.File.ReadAllBytes (@"C:\Users\Grunt\Documents\visual studio 2013\Projects\Blazar420\BlazarAssembler\bin\Debug\test.bin")); " is 149.
Magic Number,GruntXProductions.Blazar.Emulator,BlazarEmulator,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\BlazarEmulator.cs,BlazarEmulator,The following statement contains a magic number: this.Speed = 100000;  
Magic Number,GruntXProductions.Blazar.Emulator,BlazarEmulator,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\BlazarEmulator.cs,FetchInstruction,The following statement contains a magic number: SetRegister (15' pc + 4);  
Magic Number,GruntXProductions.Blazar.Emulator,BlazarEmulator,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\BlazarEmulator.cs,FetchInstruction,The following statement contains a magic number: SetRegister (15' pc + 4);  
Magic Number,GruntXProductions.Blazar.Emulator,BlazarEmulator,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\BlazarEmulator.cs,Emulate,The following statement contains a magic number: clock = new Timer (100);  
Magic Number,GruntXProductions.Blazar.Emulator,BlazarEmulator,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\BlazarEmulator.cs,cpuTick,The following statement contains a magic number: for (int i = 0; i < this.Speed / 100; i++) {  	if (!halted) {  		Step ();  	}  }  
Magic Number,GruntXProductions.Blazar.Emulator,BlazarEmulator,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\BlazarEmulator.cs,Reset,The following statement contains a magic number: for (byte i = 0; i < 16; i++)  	SetRegister (i' 0);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg1 = (byte)((instruction >> 8) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg2 = (byte)((instruction >> 12) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg3 = (byte)((instruction >> 16) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg = (byte)((instruction >> 8) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: rlist = (ushort)((instruction >> 16) & 0xFFFF);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg1 = (byte)((instruction >> 8) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: data = (ushort)((instruction >> 16) & 0xFFFF);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg1 = (byte)((instruction >> 8) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: data = (short)((instruction >> 16) & 0xFFFF);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg1 = (byte)((instruction >> 8) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg2 = (byte)((instruction >> 12) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: offset = (short)((instruction >> 16) & 0xFFFF);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg1 = (byte)((instruction >> 8) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: reg2 = (byte)((instruction >> 12) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: offset = (ushort)((instruction >> 16) & 0xFFFF);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: code = (ConditionCode)((instruction >> 8) & 0x0F);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,DecodeInstruction,The following statement contains a magic number: jump = (short)((instruction >> 16) & 0xFFFF);  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,disassembleRegisterList,The following statement contains a magic number: for (byte reg = 0; reg < 16; reg++) {  	if (((2 << reg) & list) != 0) {  		accum.AppendFormat ("{0} %r{1}"' c' reg);  		c = "'";  	}  }  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,disassembleRegisterList,The following statement contains a magic number: for (byte reg = 0; reg < 16; reg++) {  	if (((2 << reg) & list) != 0) {  		accum.AppendFormat ("{0} %r{1}"' c' reg);  		c = "'";  	}  }  
Magic Number,GruntXProductions.Blazar.Emulator,InstructionHelper,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\InstructionHelper.cs,disassembleRegisterList,The following statement contains a magic number: if (((2 << reg) & list) != 0) {  	accum.AppendFormat ("{0} %r{1}"' c' reg);  	c = "'";  }  
Magic Number,GruntXProductions.Blazar.Emulator,MemoryPhysical,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\MemoryPhysical.cs,WriteWord,The following statement contains a magic number: writeBytes (BitConverter.GetBytes (word)' address' 0' 4);  
Magic Number,GruntXProductions.Blazar.Emulator,MemoryPhysical,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\MemoryPhysical.cs,ReadWord,The following statement contains a magic number: readBytes (wordReg' address' 0' 4);  
Magic Number,GruntXProductions.Blazar.Emulator,MemoryVirtual,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\MemoryVirtual.cs,getPhysicalAddress,The following statement contains a magic number: return host.ReadWord (table + 4 * (vaddr % 1024));  
Magic Number,GruntXProductions.Blazar.Emulator,MemoryVirtual,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\MemoryVirtual.cs,getPhysicalAddress,The following statement contains a magic number: return host.ReadWord (table + 4 * (vaddr % 1024));  
Magic Number,GruntXProductions.Blazar.Emulator,PeripheralSerialController,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\PeripheralSerialController.cs,interpretCommand,The following statement contains a magic number: switch (command) {  case 0:  	selectedPort = dataRegister;  	break;  case 1:  	if (devices [selectedPort] != null) {  		bool sucess = devices [selectedPort].WriteByte (dataRegister);  		this.statusRegister = sucess ? StatusSuccess : StatusError;  	}  	else  		this.statusRegister = StatusError;  	break;  case 2:  	if (devices [selectedPort] != null) {  		int data = devices [selectedPort].ReadByte ();  		if (data == -1)  			this.statusRegister = StatusEmpty;  		else {  			this.statusRegister = StatusSuccess;  			this.dataRegister = (byte)data;  		}  	}  	else  		this.statusRegister = StatusSuccess;  	break;  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionAdc,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionAdc.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionAdd,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionAdd.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionAddi,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionAddi.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionAddu,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionAddu.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBl,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBl.cs,Interpret,The following statement contains a magic number: if (shouldJump) {  	vm.SetRegister (11' vm.GetRegister (15));  	vm.SetRegister (15' ip);  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBl,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBl.cs,Interpret,The following statement contains a magic number: if (shouldJump) {  	vm.SetRegister (11' vm.GetRegister (15));  	vm.SetRegister (15' ip);  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBl,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBl.cs,Interpret,The following statement contains a magic number: if (shouldJump) {  	vm.SetRegister (11' vm.GetRegister (15));  	vm.SetRegister (15' ip);  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBl,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBl.cs,Interpret,The following statement contains a magic number: vm.SetRegister (11' vm.GetRegister (15));  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBl,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBl.cs,Interpret,The following statement contains a magic number: vm.SetRegister (11' vm.GetRegister (15));  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBl,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBl.cs,Interpret,The following statement contains a magic number: vm.SetRegister (15' ip);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBr,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBr.cs,Interpret,The following statement contains a magic number: if (shouldJump)  	vm.SetRegister (15' ip);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionBr,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionBr.cs,Interpret,The following statement contains a magic number: vm.SetRegister (15' ip);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionCmp,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionCmp.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionCmpi,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionCmpi.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionDiv,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionDiv.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionMul,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionMul.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPop,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPop.cs,Interpret,The following statement contains a magic number: for (int reg = 15; reg > -1; reg--) {  	if (((2 << reg) & rlist) != 0) {  		vm.SetRegister ((byte)reg' pop (vm' memory));  	}  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPop,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPop.cs,Interpret,The following statement contains a magic number: for (int reg = 15; reg > -1; reg--) {  	if (((2 << reg) & rlist) != 0) {  		vm.SetRegister ((byte)reg' pop (vm' memory));  	}  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPop,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPop.cs,Interpret,The following statement contains a magic number: if (((2 << reg) & rlist) != 0) {  	vm.SetRegister ((byte)reg' pop (vm' memory));  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPop,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPop.cs,pop,The following statement contains a magic number: vm.SetRegister (14' sp + 4);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPop,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPop.cs,pop,The following statement contains a magic number: vm.SetRegister (14' sp + 4);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPush,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPush.cs,Interpret,The following statement contains a magic number: for (byte reg = 0; reg < 16; reg++) {  	if (((2 << reg) & rlist) != 0) {  		push (vm.GetRegister (reg)' vm' memory);  	}  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPush,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPush.cs,Interpret,The following statement contains a magic number: for (byte reg = 0; reg < 16; reg++) {  	if (((2 << reg) & rlist) != 0) {  		push (vm.GetRegister (reg)' vm' memory);  	}  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPush,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPush.cs,Interpret,The following statement contains a magic number: if (((2 << reg) & rlist) != 0) {  	push (vm.GetRegister (reg)' vm' memory);  }  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPush,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPush.cs,push,The following statement contains a magic number: memory.WriteWord (sp - 4' val);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPush,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPush.cs,push,The following statement contains a magic number: vm.SetRegister (14' sp - 4);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionPush,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionPush.cs,push,The following statement contains a magic number: vm.SetRegister (14' sp - 4);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionSbc,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionSbc.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionSub,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionSub.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionSubi,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionSubi.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Magic Number,GruntXProductions.Blazar.Emulator.Instructions,InstructionSubu,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\Instructions\InstructionSubu.cs,Interpret,The following statement contains a magic number: vm.SetRegister (12' flags);  
Missing Default,GruntXProductions.Blazar.Emulator,PeripheralSerialController,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\PeripheralSerialController.cs,RecieveData,The following switch statement is missing a default case: switch (port) {  case 0x05:  	this.dataRegister = (byte)data;  	break;  case 0x06:  	interpretCommand ((byte)data);  	break;  }  
Missing Default,GruntXProductions.Blazar.Emulator,PeripheralSerialController,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\PeripheralSerialController.cs,RequestData,The following switch statement is missing a default case: switch (port) {  case 0x05:  	return this.dataRegister;  case 0x07:  	return this.statusRegister;  }  
Missing Default,GruntXProductions.Blazar.Emulator,PeripheralSerialController,C:\repos\GruntTheDivine_BlazarVM\src\Blazar420\Emulator\PeripheralSerialController.cs,interpretCommand,The following switch statement is missing a default case: switch (command) {  case 0:  	selectedPort = dataRegister;  	break;  case 1:  	if (devices [selectedPort] != null) {  		bool sucess = devices [selectedPort].WriteByte (dataRegister);  		this.statusRegister = sucess ? StatusSuccess : StatusError;  	}  	else  		this.statusRegister = StatusError;  	break;  case 2:  	if (devices [selectedPort] != null) {  		int data = devices [selectedPort].ReadByte ();  		if (data == -1)  			this.statusRegister = StatusEmpty;  		else {  			this.statusRegister = StatusSuccess;  			this.dataRegister = (byte)data;  		}  	}  	else  		this.statusRegister = StatusSuccess;  	break;  }  
