Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Chinchilla.Sample.Timeouts.Consumer,ConsumerService,D:\newReposJune17\jonnii_chinchilla\src\Chinchilla.Sample.Timeouts\Consumer\ConsumerService.cs,ConfigureWithDeadLetter,The length of the statement  "	builder.SetTopology<DeadLetterTopology> ().DeliverUsing<WorkerPoolDeliveryStrategy> (s => s.NumWorkers = 1).WithPrefetchCount (1); " is 130.
Long Statement,Chinchilla.Sample.Timeouts.Publisher,PublisherService,D:\newReposJune17\jonnii_chinchilla\src\Chinchilla.Sample.Timeouts\Publisher\PublisherService.cs,Start,The length of the statement  "	var subscription = bus.Subscribe<TimeoutMessage> (OnMessageTimeout' s => s.SetTopology<TimeoutSubscriptionTopology> ()); " is 120.
Magic Number,Chinchilla.Sample.Timeouts.Consumer,ConsumerService,D:\newReposJune17\jonnii_chinchilla\src\Chinchilla.Sample.Timeouts\Consumer\ConsumerService.cs,OnMessage,The following statement contains a magic number: Thread.Sleep (8000);  
Magic Number,Chinchilla.Sample.Timeouts.Publisher,PublisherService,D:\newReposJune17\jonnii_chinchilla\src\Chinchilla.Sample.Timeouts\Publisher\PublisherService.cs,Start,The following statement contains a magic number: using (var requester = bus.CreateRequester<TimeoutMessage' TimeoutResponse> ()) {  	while (isRunning) {  		Console.WriteLine ("[Publisher] Publishing new timeout message");  		// set the routing key on each message to the subscription  		// queue name' this will route our timeout message to our  		// timeout subscription  		var message = new TimeoutMessage {  			JobId = Guid.NewGuid ().ToString ()'  			RoutingKey = timeoutSubscriptionQueueName  		};  		requester.Request (message' OnResponse);  		Thread.Sleep (3000);  	}  }  
Magic Number,Chinchilla.Sample.Timeouts.Publisher,PublisherService,D:\newReposJune17\jonnii_chinchilla\src\Chinchilla.Sample.Timeouts\Publisher\PublisherService.cs,Start,The following statement contains a magic number: while (isRunning) {  	Console.WriteLine ("[Publisher] Publishing new timeout message");  	// set the routing key on each message to the subscription  	// queue name' this will route our timeout message to our  	// timeout subscription  	var message = new TimeoutMessage {  		JobId = Guid.NewGuid ().ToString ()'  		RoutingKey = timeoutSubscriptionQueueName  	};  	requester.Request (message' OnResponse);  	Thread.Sleep (3000);  }  
Magic Number,Chinchilla.Sample.Timeouts.Publisher,PublisherService,D:\newReposJune17\jonnii_chinchilla\src\Chinchilla.Sample.Timeouts\Publisher\PublisherService.cs,Start,The following statement contains a magic number: Thread.Sleep (3000);  
