Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestGetPeople,The length of the statement  "            var persons = new List<Person>() {new Person {Id= 1' Name = "Person Name"}' new Person {Id = 2' Name = "Person Name 2"}}; " is 121.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestGetPeople,The length of the statement  "            var persons = new RestResponse<List<Person>> { Data = new List<Person>() { new Person { Name = "name_1" }' new Person { Name = "name_2" } } }; " is 142.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestGetPerson,The length of the statement  "                request.Method == Method.GET && request.Resource == "people/{id}" && request.Parameters[0].Name == "id" && request.Parameters[0].Value.Equals("2") " is 146.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestGetPersonQuery,The length of the statement  "                request.Parameters[0].Name == "id" && request.Parameters[0].Value.Equals("2") && request.Parameters[0].Type == ParameterType.UrlSegment && " is 138.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestGetPersonQuery,The length of the statement  "                request.Parameters[1].Name == "q" && request.Parameters[1].Value.Equals("blah") && request.Parameters[1].Type == ParameterType.GetOrPost " is 136.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestAddPerson,The length of the statement  "                request.Parameters[0].Type == ParameterType.RequestBody && request.Parameters[0].Value.ToString() == "{\"Name\":\"name_1\"}" " is 124.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestUpdatePerson,The length of the statement  "                request.Parameters[0].Type == ParameterType.UrlSegment && request.Parameters[0].Value.ToString() == "2" && request.Parameters[0].Name == "id" && " is 144.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestUpdatePerson,The length of the statement  "                request.Parameters[1].Type == ParameterType.RequestBody && request.Parameters[1].Value.ToString() == "{\"Name\":\"name_1\"}" " is 124.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestHeadPerson,The length of the statement  "                request.Method == Method.HEAD && request.Resource == "people/{id}" && request.Parameters[0].Name == "id" && request.Parameters[0].Value.Equals("2") " is 147.
Long Statement,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestDeletePerson,The length of the statement  "                request.Method == Method.DELETE && request.Resource == "people/{id}" && request.Parameters[0].Name == "id" && request.Parameters[0].Value.Equals("2") " is 149.
Magic Number,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestGetPeople,The following statement contains a magic number: var persons = new List<Person>() {new Person {Id= 1' Name = "Person Name"}' new Person {Id = 2' Name = "Person Name 2"}};
Magic Number,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestGetPerson,The following statement contains a magic number: var person = new Person { Id = 3' Name = "Person Name" };
Magic Number,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestGetPerson,The following statement contains a magic number: var personResponse = service.GetPerson(3);
Magic Number,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestGetPersonQuery,The following statement contains a magic number: var person = new Person { Id = 3' Name = "Person Name" };
Magic Number,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestGetPersonQuery,The following statement contains a magic number: var personResponse = service.GetPerson(3' 100' "tsst");
Magic Number,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestGetPersonQuery,The following statement contains a magic number: var personResponse = service.GetPerson(3' 100' "tsst");
Magic Number,Retrofit.Net.Tests,TestRestCallsIntegration,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,TestAddPerson,The following statement contains a magic number: var person = new Person { Id = 5'  Name = "Person Name" };
Magic Number,Retrofit.Net.Tests,Person,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsIntegrationTest.cs,GetHashCode,The following statement contains a magic number: return (Id*397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestGetPerson,The following statement contains a magic number: var people = client.GetPerson(2);
Magic Number,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestGetPersonQuery,The following statement contains a magic number: var people = client.GetPerson(2' "blah");
Magic Number,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestUpdatePerson,The following statement contains a magic number: var people = client.UpdatePerson(2' person);
Magic Number,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestHeadPerson,The following statement contains a magic number: var people = client.HeadPerson(2);
Magic Number,Retrofit.Net.Tests,TestRestCalls,D:\research\architectureSmells\repos\jordan-thoms_Retrofit.Net\Retrofit.Net.Tests\RestCallsTest.cs,TestDeletePerson,The following statement contains a magic number: var people = client.DeletePerson(2);
