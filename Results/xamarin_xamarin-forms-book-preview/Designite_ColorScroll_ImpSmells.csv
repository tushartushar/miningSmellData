Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,ColorScrollPage,The following statement contains a magic number: Label radioLabel = new Label                  {                      Text = modeLabels[(int)colorMode]'                      StyleId = colorMode.ToString()'                      XAlign = TextAlignment.Center'                      Opacity = 0.5                  };
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,ColorScrollPage,The following statement contains a magic number: component < 3
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,ColorScrollPage,The following statement contains a magic number: this.Padding = new Thickness(0' Device.OnPlatform(20' 0' 0)' 0' 0);
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,OnRadioLabelToggled,The following statement contains a magic number: view.Opacity = view.GetRadioState() ? 1.0 : 0.5;
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliderMax = 255;                      format = rgbHexFormat;                      valueConverter = new DoubleToIntegerConverter();                      break;                    case ColorMode.RgbFloat:                      format = rgbFloatFormat;                      break;                    case ColorMode.Hsl:                      format = hslFormat;                      break;              }
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: i < 3
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliders[0].Value = 255 * currentColor.R;                      sliders[1].Value = 255 * currentColor.G;                      sliders[2].Value = 255 * currentColor.B;                      break;                    case ColorMode.RgbFloat:                      sliders[0].Value = currentColor.R;                      sliders[1].Value = currentColor.G;                      sliders[2].Value = currentColor.B;                      break;                    case ColorMode.Hsl:                      sliders[0].Value = currentColor.Hue;                      sliders[1].Value = currentColor.Saturation;                      sliders[2].Value = currentColor.Luminosity;                      break;              }
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliders[0].Value = 255 * currentColor.R;                      sliders[1].Value = 255 * currentColor.G;                      sliders[2].Value = 255 * currentColor.B;                      break;                    case ColorMode.RgbFloat:                      sliders[0].Value = currentColor.R;                      sliders[1].Value = currentColor.G;                      sliders[2].Value = currentColor.B;                      break;                    case ColorMode.Hsl:                      sliders[0].Value = currentColor.Hue;                      sliders[1].Value = currentColor.Saturation;                      sliders[2].Value = currentColor.Luminosity;                      break;              }
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliders[0].Value = 255 * currentColor.R;                      sliders[1].Value = 255 * currentColor.G;                      sliders[2].Value = 255 * currentColor.B;                      break;                    case ColorMode.RgbFloat:                      sliders[0].Value = currentColor.R;                      sliders[1].Value = currentColor.G;                      sliders[2].Value = currentColor.B;                      break;                    case ColorMode.Hsl:                      sliders[0].Value = currentColor.Hue;                      sliders[1].Value = currentColor.Saturation;                      sliders[2].Value = currentColor.Luminosity;                      break;              }
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliders[0].Value = 255 * currentColor.R;                      sliders[1].Value = 255 * currentColor.G;                      sliders[2].Value = 255 * currentColor.B;                      break;                    case ColorMode.RgbFloat:                      sliders[0].Value = currentColor.R;                      sliders[1].Value = currentColor.G;                      sliders[2].Value = currentColor.B;                      break;                    case ColorMode.Hsl:                      sliders[0].Value = currentColor.Hue;                      sliders[1].Value = currentColor.Saturation;                      sliders[2].Value = currentColor.Luminosity;                      break;              }
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliders[0].Value = 255 * currentColor.R;                      sliders[1].Value = 255 * currentColor.G;                      sliders[2].Value = 255 * currentColor.B;                      break;                    case ColorMode.RgbFloat:                      sliders[0].Value = currentColor.R;                      sliders[1].Value = currentColor.G;                      sliders[2].Value = currentColor.B;                      break;                    case ColorMode.Hsl:                      sliders[0].Value = currentColor.Hue;                      sliders[1].Value = currentColor.Saturation;                      sliders[2].Value = currentColor.Luminosity;                      break;              }
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following statement contains a magic number: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliders[0].Value = 255 * currentColor.R;                      sliders[1].Value = 255 * currentColor.G;                      sliders[2].Value = 255 * currentColor.B;                      break;                    case ColorMode.RgbFloat:                      sliders[0].Value = currentColor.R;                      sliders[1].Value = currentColor.G;                      sliders[2].Value = currentColor.B;                      break;                    case ColorMode.Hsl:                      sliders[0].Value = currentColor.Hue;                      sliders[1].Value = currentColor.Saturation;                      sliders[2].Value = currentColor.Luminosity;                      break;              }
Magic Number,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetColorFromSliders,The following statement contains a magic number: double d2 = sliders[2].Value;
Missing Default,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following switch statement is missing a default case: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliderMax = 255;                      format = rgbHexFormat;                      valueConverter = new DoubleToIntegerConverter();                      break;                    case ColorMode.RgbFloat:                      format = rgbFloatFormat;                      break;                    case ColorMode.Hsl:                      format = hslFormat;                      break;              }
Missing Default,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetSlidersAndBindings,The following switch statement is missing a default case: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      sliders[0].Value = 255 * currentColor.R;                      sliders[1].Value = 255 * currentColor.G;                      sliders[2].Value = 255 * currentColor.B;                      break;                    case ColorMode.RgbFloat:                      sliders[0].Value = currentColor.R;                      sliders[1].Value = currentColor.G;                      sliders[2].Value = currentColor.B;                      break;                    case ColorMode.Hsl:                      sliders[0].Value = currentColor.Hue;                      sliders[1].Value = currentColor.Saturation;                      sliders[2].Value = currentColor.Luminosity;                      break;              }
Missing Default,ColorScroll,ColorScrollPage,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview\Chapter06\ColorScroll\ColorScroll\ColorScroll\ColorScrollPage.cs,SetColorFromSliders,The following switch statement is missing a default case: switch (currentColorMode)              {                  case ColorMode.RgbHex:                      currentColor = Color.FromRgb((int)d0' (int)d1' (int)d2);                      break;                    case ColorMode.RgbFloat:                      currentColor = Color.FromRgb(d0' d1' d2);                      break;                    case ColorMode.Hsl:                      currentColor = Color.FromHsla(d0' d1' d2);                      break;              }
