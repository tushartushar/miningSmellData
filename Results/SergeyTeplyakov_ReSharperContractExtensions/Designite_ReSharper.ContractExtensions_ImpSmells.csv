Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers,AccessVisibilityChecker,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ProblemAnalyzers\PreconditionAnalyzers\PreconditionIncosistentVisibility\AccessVisibilityChecker.cs,CombineTypeAndMemberAccessRights,Cyclomatic complexity of the method is 12
Complex Method,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers,RequiresInconsistentVisibiityQuickFix,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ProblemAnalyzers\PreconditionAnalyzers\PreconditionIncosistentVisibility\RequiresInconsistentVisibiityQuickFix.cs,ComputeDestinationTypeAndMemberAccessCore,Cyclomatic complexity of the method is 8
Long Parameter List,ReSharper.ContractExtensions.ContextActions.Requires,AddRequiresExecutor,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\AddRequiresExecutor.cs,AddRequiresExecutor,The method has 5 parameters. Parameters: provider' shouldBeGeneric' functionDeclaration' parameterName' propertyType
Long Parameter List,ReSharper.ContractExtensions.ContextActions.Requires,AddRequiresExecutor,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\AddRequiresExecutor.cs,AddRequiresExecutor,The method has 5 parameters. Parameters: provider' shouldBeGeneric' functionsDeclaration' parameterName' propertyType
Long Parameter List,ReSharper.ContractExtensions.ContractsEx.Assertions,MessageExtensions,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Assertions\Messages\MessageExtensions.cs,Match,The method has 5 parameters. Parameters: message' stringFunc' referenceFunc' invocationFunc' noMessageFunc
Long Identifier,ReSharper.ContractExtensions.ContextActions.ContractsFor,AddContractClassExecutor,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\ContractsFor\AddContractClassExecutor.cs,AddToPhysicalDeclaration,The length of the parameter physicalContractClassDeclaration is 32.
Long Identifier,ReSharper.ContractExtensions.ContextActions.Ensures,EnsuresAvailability,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Ensures\EnsuresAvailability.cs,,The length of the parameter _returnTypeEnsuresAvailability is 30.
Long Identifier,ReSharper.ContractExtensions.ContextActions.Requires,ComboRequiresAvailability,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\ComboRequiresAvailability.cs,IsRequiresAvailableFor,The length of the parameter propertySetterRequiresAvailability is 34.
Long Identifier,ReSharper.ContractExtensions.ContextActions.Requires,FunctionRequiresAvailability,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\FunctionRequiresAvailability.cs,,The length of the parameter _functionsToInsertPrecondition is 30.
Long Identifier,ReSharper.ContractExtensions.ContextActions.Requires,AddRequiresAvailability,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\AddRequiresAvailability.cs,,The length of the parameter _functionsToInsertPrecondition is 30.
Long Identifier,ReSharper.ContractExtensions.ContractsEx.Assertions,PredicateArgumentEx,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Assertions\PredicateChecks\PredicateArgument.cs,CompareContractResultArgument,The length of the parameter contractResultPredicateArgument is 31.
Long Identifier,ReSharper.ContractExtensions.ContractUtils,ContractExtensions,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\ContractExtensions.cs,GetContractClassDeclaration,The length of the parameter contractClassAttributeInstance is 30.
Long Identifier,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers,AccessVisibilityChecker,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ProblemAnalyzers\PreconditionAnalyzers\PreconditionIncosistentVisibility\AccessVisibilityChecker.cs,IsAccessibleFrom,The length of the parameter referencedMemberCombinedVisibility is 34.
Long Identifier,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers,AccessVisibilityChecker,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ProblemAnalyzers\PreconditionAnalyzers\PreconditionIncosistentVisibility\AccessVisibilityChecker.cs,IsAccessibleFrom,The length of the parameter contractHolderCombinedVisibility is 32.
Long Identifier,ReSharper.ContractExtensions.Settings,ContractExtensionsOptionsViewModel,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\Settings\ContractExtensionsOptionsViewModel.cs,,The length of the parameter UseExcludeFromCodeCoverageAttributeEx is 37.
Long Statement,ReSharper.ContractExtensions.ContextActions.ContractsFor,AddContractClassExecutor,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\ContractsFor\AddContractClassExecutor.cs,GenerateGenericContractClassDeclaration,The length of the statement  "                ITypeParameterConstraintsClause clause = _factory.CreateTypeParameterConstraintsClause(typeParameter' substitution' declaration4.DeclaredName); " is 143.
Long Statement,ReSharper.ContractExtensions.ContextActions.EnumChecks,EnumCheckRequiresAvailability,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\EnumChecks\EnumCheckRequiresAvailability.cs,ComputeAvailability,The length of the statement  "            if (!ContractFunctionIsWellDefinedAndDidntContainPrecondition(parameterDeclaration.DeclaredName' out functionToInsertPrecondition)) " is 131.
Long Statement,ReSharper.ContractExtensions.ContextActions.Requires,ComboMethodRequiresContextAction,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\ComboMethodRequiresContextAction.cs,AddRequiresTo,The length of the statement  "                .Reverse() // This fix an issue that ArgumentCheckExecutor can't find newly created Contract.Requires and adds new Contract.Requires in the opposite order! " is 155.
Long Statement,ReSharper.ContractExtensions.ContextActions.Requires,ComboMethodRequiresContextAction,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\ComboMethodRequiresContextAction.cs,ArgumentCheckExecutor,The length of the statement  "            return new AddRequiresExecutor(_provider' _requiresShouldBeGeneric' new []{functionWithContract}' argumentName' argumentType); " is 126.
Long Statement,ReSharper.ContractExtensions.ContextActions.Requires,PropertySetterRequiresAvailability,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\PropertySetterRequiresAvailability.cs,ObjectInvariant,The length of the statement  "            //Contract.Invariant(!IsAvailable || (IsIndexer || _getterIndexerDeclaration != null || _setterIndexerDeclaration != null)' " is 123.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,ConvertPreconditionToAssertFix,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ProblemAnalyzers\PreconditionAnalyzers\MalformContractAnalyzers\QuickFixes\MalformedContractStatementFix.cs,CreateAssertStatement,The length of the statement  "            return factory.CreateStatement("Contract.Assert($0' $1);"' invocationExpression.Arguments[0]' invocationExpression.Arguments[1]); " is 129.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,ContractStatementValidator,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Validation\ContractStatementValidator.cs,ValidateStatement,The length of the statement  "                .FirstOrDefault(vr => vr.ErrorType != ErrorType.NoError) ?? ValidationResult.CreateNoError(codeContractStatement.Statement); " is 124.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,MalformedContractErrorEx,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Validation\MalformedContractErrors.cs,GetErrorText,The length of the statement  "                    return string.Format("Malformed contract. Detected expression statement evaluated for side-effect in contracts of method '{0}'"' " is 128.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,MalformedContractErrorEx,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Validation\MalformedContractErrors.cs,GetErrorText,The length of the statement  "                    // Code Contract error:  error CC1016: Contract.Assert/Contract.Assume cannot be used in contract section. Use only Requires and Ensures. " is 137.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,MalformedContractErrorEx,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Validation\MalformedContractErrors.cs,GetErrorText,The length of the statement  "                    return string.Format("Contract.Assert/Contract.Assume cannot be used in contract section of method '{0}'. Use only Requires and Ensures"' " is 137.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,MalformedContractErrorEx,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Validation\MalformedContractErrors.cs,GetErrorText,The length of the statement  "                    // Code Contract error: error CC1004: Malformed contract. Found Requires after assignment in method 'CodeContractInvestigations.InconsistentPreconditionVisibility.AssignmentBeforeRequires'. " is 189.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,MalformedContractErrorEx,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Validation\MalformedContractErrors.cs,GetErrorText,The length of the statement  "                    // error CC1017: Malformed contract section in method 'MalformedContractErrors.ContractInTheMiddleOfTheMethod(System.String)' " is 125.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,MalformedContractWarningEx,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Validation\MalformedContractErrors.cs,GetErrorText,The length of the statement  "                    //Code Contract warning: warning CC1069: Detected expression statement evaluated for potential side-effect in contracts of method 'RequiresInconsistentVisibility.WarningForMalformedContract.WarningOnMethodCallWithResul'. " is 220.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers.MalformContractAnalyzers,MalformedMethodContractChecker,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ProblemAnalyzers\PreconditionAnalyzers\MalformContractAnalyzers\MalformedMethodContractChecker.cs,Run,The length of the statement  "            var validateContractBlock = CodeContractBlockValidator.ValidateCodeContractBlock(element.GetCodeContractBlockStatements()); " is 123.
Long Statement,ReSharper.ContractExtensions.ProblemAnalyzers.PreconditionAnalyzers,RequiresExceptionInconsistentVisibilityChecker,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ProblemAnalyzers\PreconditionAnalyzers\PreconditionIncosistentVisibility\RequiresExceptionChecker.cs,DoRun,The length of the statement  "                    yield return new RequiresExceptionValidityHighlighting(invocationExpression' preconditionException' preconditionContainer); " is 123.
Complex Conditional,ReSharper.ContractExtensions.ContextActions.Requires,ComboRequiresAvailability,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContextActions\Requires\ComboRequiresAvailability.cs,ComboRequiresAvailability,The conditional expression  "_selectedAbstractMethod != null                  && IsAbstractClassOrInterface()                   && IsRequiresAvailableFor(out _parameterName' out _parameterType)                   && CanAddContractForSelectedMethod(_selectedAbstractMethod' out _addContractAvailability)"  is complex.
Magic Number,ReSharper.ContractExtensions.ContractsEx.Assertions,EnumValidationPredicateCheck,C:\repos\SergeyTeplyakov_ReSharperContractExtensions\ContractExtensions\ContractsEx\Assertions\PredicateChecks\EnumValidationPredicateCheck.cs,TryCreateEnumPredicateCheck,The following statement contains a magic number: if (arguments.Count != 2)                  return null;
