Implementation smell,Namespace,Class,File,Method,Description
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_fulfilled_all_respective_onFulfilled_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then_1,The following statement contains a magic number: promise.Then(_ =>                  {                      Assert.Equal(2' ++order);                  });
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_fulfilled_all_respective_onFulfilled_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then_1,The following statement contains a magic number: promise.Then(_ =>                  {                      Assert.Equal(3' ++order);                  });
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_fulfilled_all_respective_onFulfilled_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then_1,The following statement contains a magic number: Assert.Equal(3' order);
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_fulfilled_all_respective_onFulfilled_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then_2,The following statement contains a magic number: promise.Then(_ =>                  {                      Assert.Equal(2' ++order);                        return Promise<object>.Resolved(new object());                  });
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_fulfilled_all_respective_onFulfilled_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then_2,The following statement contains a magic number: promise.Then(_ =>                  {                      Assert.Equal(3' ++order);                        return Promise<object>.Resolved(new object());                  });
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_fulfilled_all_respective_onFulfilled_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then_2,The following statement contains a magic number: Assert.Equal(3' order);
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_rejected_all_respective_onRejected_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then,The following statement contains a magic number: promise.Catch(_ =>                  {                      Assert.Equal(2' ++order);                  });
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_rejected_all_respective_onRejected_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then,The following statement contains a magic number: promise.Catch(_ =>                  {                      Assert.Equal(3' ++order);                  });
Magic Number,RSG.Tests.A__Spec,then_may_be_called_multiple_times_on_the_same_promise_,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\A+ Spec\2.2.cs,_when_promise_is_rejected_all_respective_onRejected_callbacks_must_execute_in_the_order_of_their_originating_calls_to_then,The following statement contains a magic number: Assert.Equal(3' order);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_report_simple_progress,The following statement contains a magic number: const float expectedStep = 0.25f;
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_handle_chained_onProgress,The following statement contains a magic number: promiseA.Resolve(-17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_handle_chained_onProgress,The following statement contains a magic number: promiseB.ReportProgress(2f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_handle_chained_onProgress,The following statement contains a magic number: promiseB.Resolve(17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_handle_chained_onProgress,The following statement contains a magic number: Assert.Equal(2f' progressB);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_handle_chained_onProgress,The following statement contains a magic number: Assert.Equal(17' result);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: var expectedProgress = new[] { 0.1f' 0.2f' 0.6f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: var expectedProgress = new[] { 0.1f' 0.2f' 0.6f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: var expectedProgress = new[] { 0.1f' 0.2f' 0.6f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.                  Progress(v => promiseC.ReportProgress(v * 0.2f))                  .Then(v => promiseB' null)                  .Progress(v => promiseC.ReportProgress(0.2f + 0.8f * v))                  .Then(v => promiseC.Resolve(v))                  .Catch(ex => promiseC.Reject(ex))              ;
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.                  Progress(v => promiseC.ReportProgress(v * 0.2f))                  .Then(v => promiseB' null)                  .Progress(v => promiseC.ReportProgress(0.2f + 0.8f * v))                  .Then(v => promiseC.Resolve(v))                  .Catch(ex => promiseC.Reject(ex))              ;
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.                  Progress(v => promiseC.ReportProgress(v * 0.2f))                  .Then(v => promiseB' null)                  .Progress(v => promiseC.ReportProgress(0.2f + 0.8f * v))                  .Then(v => promiseC.Resolve(v))                  .Catch(ex => promiseC.Reject(ex))              ;
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.Resolve(-17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseB.ReportProgress(0.5f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseB.Resolve(17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: Assert.Equal(17' result);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,chain_multiple_promises_reporting_progress,The following statement contains a magic number: promiseA.Resolve(-17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,chain_multiple_promises_reporting_progress,The following statement contains a magic number: promiseB.ReportProgress(2f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,chain_multiple_promises_reporting_progress,The following statement contains a magic number: promiseB.Resolve(17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,chain_multiple_promises_reporting_progress,The following statement contains a magic number: Assert.Equal(2f' progressB);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,chain_multiple_promises_reporting_progress,The following statement contains a magic number: Assert.Equal(17' result);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,exception_is_thrown_for_progress_after_resolve,The following statement contains a magic number: promise.Resolve(17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,first_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,first_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,first_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,all_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,all_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,all_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: Promise<int>.Race(promiseA' promiseB)                  .Progress(progress =>                  {                      Assert.Equal(progress' 0.5f);                      ++reportCount;                  });
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.1f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.2f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.3f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.4f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.5f);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: Assert.Equal(6' reportCount);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,all_progress_with_resolved,The following statement contains a magic number: var promiseB = Promise<int>.Resolved(17);
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,all_progress_with_resolved,The following statement contains a magic number: Promise<int>.All(promiseA' promiseB)                  .Progress(progress =>                  {                      ++reportedCount;                      Assert.Equal(0.75f' progress);                  });
Magic Number,RSG.Tests,PromiseProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseProgressTests.cs,all_progress_with_resolved,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_report_simple_progress,The following statement contains a magic number: const float expectedStep = 0.25f;
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_handle_chained_onProgress,The following statement contains a magic number: promiseB.ReportProgress(2f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_handle_chained_onProgress,The following statement contains a magic number: Assert.Equal(2f' progressB);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: var expectedProgress = new[] { 0.1f' 0.2f' 0.6f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: var expectedProgress = new[] { 0.1f' 0.2f' 0.6f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: var expectedProgress = new[] { 0.1f' 0.2f' 0.6f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.                  Progress(v => promiseC.ReportProgress(v * 0.2f))                  .Then(() => promiseB)                  .Progress(v => promiseC.ReportProgress(0.2f + 0.8f * v))                  .Then(() => promiseC.Resolve())                  .Catch(ex => promiseC.Reject(ex))              ;
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.                  Progress(v => promiseC.ReportProgress(v * 0.2f))                  .Then(() => promiseB)                  .Progress(v => promiseC.ReportProgress(0.2f + 0.8f * v))                  .Then(() => promiseC.Resolve())                  .Catch(ex => promiseC.Reject(ex))              ;
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.                  Progress(v => promiseC.ReportProgress(v * 0.2f))                  .Then(() => promiseB)                  .Progress(v => promiseC.ReportProgress(0.2f + 0.8f * v))                  .Then(() => promiseC.Resolve())                  .Catch(ex => promiseC.Reject(ex))              ;
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,can_do_progress_weighted_average,The following statement contains a magic number: promiseB.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,chain_multiple_promises_reporting_progress,The following statement contains a magic number: promiseB.ReportProgress(2f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,chain_multiple_promises_reporting_progress,The following statement contains a magic number: Assert.Equal(2f' progressB);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,all_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,all_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,all_progress_is_averaged,The following statement contains a magic number: var expectedProgress = new[] { 0.25f' 0.50f' 0.75f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: Promise.Race(promiseA' promiseB)                  .Progress(progress =>                  {                      Assert.Equal(progress' 0.5f);                      ++reportCount;                  });
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.1f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.2f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.3f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.4f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: promiseB.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,race_progress_is_maxed,The following statement contains a magic number: Assert.Equal(6' reportCount);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,all_progress_with_resolved,The following statement contains a magic number: Promise.All(promiseA' promiseB)                  .Progress(progress =>                  {                      ++reportedCount;                      Assert.Equal(0.75f' progress);                  });
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,all_progress_with_resolved,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: var expectedProgress = new[] { 0.125f' 0.25f' 0.25f' 0.3125f' 0.375f' 0.4375f' 0.5f' 0.75f' 0.875f' 1f };
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: promiseB.ReportProgress(0.25f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: promiseB.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: promiseB.ReportProgress(0.75f);
Magic Number,RSG.Tests,Promise_NonGeneric_ProgressTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_ProgressTests.cs,sequence_reports_progress,The following statement contains a magic number: promiseD.ReportProgress(0.5f);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_resolve_simple_promise,The following statement contains a magic number: const int promisedValue = 5;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_is_thrown_for_reject_after_resolve,The following statement contains a magic number: promise.Resolve(5);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_is_thrown_for_resolve_after_reject,The following statement contains a magic number: Assert.Throws<PromiseStateException>(() => promise.Resolve(5));
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_resolve_promise_and_trigger_then_handler,The following statement contains a magic number: const int promisedValue = 15;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_is_thrown_for_resolve_after_resolve,The following statement contains a magic number: promise.Resolve(5);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_is_thrown_for_resolve_after_resolve,The following statement contains a magic number: Assert.Throws<PromiseStateException>(() => promise.Resolve(5));
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_resolve_promise_and_trigger_multiple_then_handlers_in_order,The following statement contains a magic number: promise.Then(v => Assert.Equal(2' ++completed));
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_resolve_promise_and_trigger_multiple_then_handlers_in_order,The following statement contains a magic number: Assert.Equal(2' completed);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_resolve_promise_and_trigger_then_handler_with_callback_registration_after_resolve,The following statement contains a magic number: const int promisedValue = -10;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_reject_promise_and_trigger_multiple_error_handlers_in_order,The following statement contains a magic number: promise.Catch(e =>              {                  Assert.Equal(ex' e);                  Assert.Equal(2' ++completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_reject_promise_and_trigger_multiple_error_handlers_in_order,The following statement contains a magic number: Assert.Equal(2' completed);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,error_handler_is_not_invoked_for_resolved_promised,The following statement contains a magic number: promise.Resolve(5);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_first,The following statement contains a magic number: var chainedPromise3 = Promise<int>.Resolved(9001);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_first,The following statement contains a magic number: Promise<int>                  .First(() => chainedPromise1' () => chainedPromise2' () => chainedPromise3' () =>                  {                      Assert.True(false' "Didn't stop on the first resolved promise");                      return Promise<int>.Rejected(null);                  })                  .Then(result =>                  {                      Assert.Equal(9001' result);                      completed = true;                  })              ;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_all,The following statement contains a magic number: const int chainedResult1 = 10;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_all,The following statement contains a magic number: const int chainedResult2 = 15;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_all,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  promise                      .ThenAll(i => EnumerableExt.FromItems(chainedPromise1' chainedPromise2)                          .Cast<IPromise<int>>())                      .Then(result =>                      {                          var items = result.ToArray();                          Assert.Equal(2' items.Length);                          Assert.Equal(chainedResult1' items[0]);                          Assert.Equal(chainedResult2' items[1]);                            ++completed;                      });                    Assert.Equal(0' completed);                    promise.Resolve("hello");                    Assert.Equal(0' completed);                    chainedPromise1.Resolve(chainedResult1);                    Assert.Equal(0' completed);                    chainedPromise2.Resolve(chainedResult2);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_all_that_are_resolved_out_of_order,The following statement contains a magic number: const int chainedResult1 = 10;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_all_that_are_resolved_out_of_order,The following statement contains a magic number: const int chainedResult2 = 15;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,chain_multiple_promises_using_all_that_are_resolved_out_of_order,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  promise                      .ThenAll(i => EnumerableExt.FromItems(chainedPromise1' chainedPromise2)                          .Cast<IPromise<int>>())                      .Then(result =>                      {                          var items = result.ToArray();                          Assert.Equal(2' items.Length);                          Assert.Equal(chainedResult1' items[0]);                          Assert.Equal(chainedResult2' items[1]);                            ++completed;                      });                    Assert.Equal(0' completed);                    promise.Resolve("hello");                    Assert.Equal(0' completed);                    chainedPromise2.Resolve(chainedResult2);                    Assert.Equal(0' completed);                    chainedPromise1.Resolve(chainedResult1);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = Promise<int>.All(EnumerableExt.FromItems<IPromise<int>>(promise1' promise2));                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        var values = v.ToArray();                      Assert.Equal(2' values.Length);                      Assert.Equal(1' values[0]);                      Assert.Equal(2' values[1]);                  });                    promise1.Resolve(1);                  promise2.Resolve(2);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = Promise<int>.All(EnumerableExt.FromItems<IPromise<int>>(promise1' promise2));                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        var values = v.ToArray();                      Assert.Equal(2' values.Length);                      Assert.Equal(1' values[0]);                      Assert.Equal(2' values[1]);                  });                    promise1.Resolve(1);                  promise2.Resolve(2);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = Promise<int>.All(EnumerableExt.FromItems<IPromise<int>>(promise1' promise2));                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        var values = v.ToArray();                      Assert.Equal(2' values.Length);                      Assert.Equal(1' values[0]);                      Assert.Equal(2' values[1]);                  });                    promise1.Resolve(1);                  promise2.Resolve(2);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_of_three_types_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = PromiseHelpers.All(promise1' promise2' promise3);                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        Assert.Equal(1' v.Item1);                      Assert.Equal(true' v.Item2);                      Assert.Equal(3.0f' v.Item3);                  });                    promise1.Resolve(1);                  promise2.Resolve(true);                  promise3.Resolve(3.0f);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_of_three_types_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = PromiseHelpers.All(promise1' promise2' promise3);                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        Assert.Equal(1' v.Item1);                      Assert.Equal(true' v.Item2);                      Assert.Equal(3.0f' v.Item3);                  });                    promise1.Resolve(1);                  promise2.Resolve(true);                  promise3.Resolve(3.0f);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_of_four_types_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = PromiseHelpers.All(promise1' promise2' promise3' promise4);                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        Assert.Equal(1' v.Item1);                      Assert.Equal(true' v.Item2);                      Assert.Equal(3.0f' v.Item3);                      Assert.Equal(4.0' v.Item4);                  });                    promise1.Resolve(1);                  promise2.Resolve(true);                  promise3.Resolve(3.0f);                  promise4.Resolve(4.0);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_of_four_types_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = PromiseHelpers.All(promise1' promise2' promise3' promise4);                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        Assert.Equal(1' v.Item1);                      Assert.Equal(true' v.Item2);                      Assert.Equal(3.0f' v.Item3);                      Assert.Equal(4.0' v.Item4);                  });                    promise1.Resolve(1);                  promise2.Resolve(true);                  promise3.Resolve(3.0f);                  promise4.Resolve(4.0);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_of_four_types_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = PromiseHelpers.All(promise1' promise2' promise3' promise4);                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        Assert.Equal(1' v.Item1);                      Assert.Equal(true' v.Item2);                      Assert.Equal(3.0f' v.Item3);                      Assert.Equal(4.0' v.Item4);                  });                    promise1.Resolve(1);                  promise2.Resolve(true);                  promise3.Resolve(3.0f);                  promise4.Resolve(4.0);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_of_four_types_is_resolved_when_children_are_resolved,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = PromiseHelpers.All(promise1' promise2' promise3' promise4);                    var completed = 0;                    all.Then(v =>                  {                      ++completed;                        Assert.Equal(1' v.Item1);                      Assert.Equal(true' v.Item2);                      Assert.Equal(3.0f' v.Item3);                      Assert.Equal(4.0' v.Item4);                  });                    promise1.Resolve(1);                  promise2.Resolve(true);                  promise3.Resolve(3.0f);                  promise4.Resolve(4.0);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_is_rejected_when_first_promise_is_rejected,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = Promise<int>.All(EnumerableExt.FromItems<IPromise<int>>(promise1' promise2));                    all.Then(v => throw new Exception("Shouldn't happen"));                    var errors = 0;                  all.Catch(e => ++errors);                    promise1.Reject(new Exception("Error!"));                  promise2.Resolve(2);                    Assert.Equal(1' errors);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_is_rejected_when_second_promise_is_rejected,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = Promise<int>.All(EnumerableExt.FromItems<IPromise<int>>(promise1' promise2));                    all.Then(v => throw new Exception("Shouldn't happen"));                    var errors = 0;                  all.Catch(e => ++errors);                    promise1.Resolve(2);                  promise2.Reject(new Exception("Error!"));                    Assert.Equal(1' errors);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,combined_promise_of_multiple_types_is_rejected_when_second_promise_is_rejected,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  var all = PromiseHelpers.All(promise1' promise2);                    all.Then(v => throw new Exception("Shouldn't happen"));                    var errors = 0;                  all.Catch(e => ++errors);                    promise1.Resolve(2);                  promise2.Reject(new Exception("Error!"));                    Assert.Equal(1' errors);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,all_with_rejected_promise,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_transform_promise_value,The following statement contains a magic number: var promisedValue = 15;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_thrown_during_transform_rejects_transformed_promise,The following statement contains a magic number: const int promisedValue = 15;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_chain_promise_and_convert_type_of_value,The following statement contains a magic number: const int promisedValue = 15;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_chain_promise_and_convert_to_non_value_promise,The following statement contains a magic number: const int promisedValue = 15;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_thrown_in_chain_rejects_resulting_promise,The following statement contains a magic number: promise.Resolve(15);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,race_is_resolved_when_first_promise_is_resolved_first,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  Promise<int>                      .Race(promise1' promise2)                      .Then(i => resolved = i);                    promise1.Resolve(5);                    Assert.Equal(5' resolved);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,race_is_resolved_when_first_promise_is_resolved_first,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  Promise<int>                      .Race(promise1' promise2)                      .Then(i => resolved = i);                    promise1.Resolve(5);                    Assert.Equal(5' resolved);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,race_is_resolved_when_second_promise_is_resolved_first,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  Promise<int>                      .Race(promise1' promise2)                      .Then(i => resolved = i);                    promise2.Resolve(12);                    Assert.Equal(12' resolved);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,race_is_resolved_when_second_promise_is_resolved_first,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  Promise<int>                      .Race(promise1' promise2)                      .Then(i => resolved = i);                    promise2.Resolve(12);                    Assert.Equal(12' resolved);              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_resolve_promise_via_resolver_function,The following statement contains a magic number: var promise = new Promise<int>((resolve' reject) => resolve(5));
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_resolve_promise_via_resolver_function,The following statement contains a magic number: promise.Then(v =>               {                  Assert.Equal(5' v);                  ++completed;              });
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,unhandled_exception_is_propagated_via_event,The following statement contains a magic number: promise.Resolve(5);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_in_done_callback_is_propagated_via_event,The following statement contains a magic number: promise.Resolve(5);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,handled_exception_is_not_propagated_via_event,The following statement contains a magic number: promise.Resolve(5);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_handle_Done_onResolved,The following statement contains a magic number: const int expectedValue = 5;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_handle_Done_onResolved_with_onReject,The following statement contains a magic number: const int expectedValue = 5;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_during_Then_onResolved_triggers_error_hander,The following statement contains a magic number: promise.Resolve(6);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,resolved_chain_continues_after_finally,The following statement contains a magic number: const int expectedValue = 42;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,resolved_chain_continues_after_finally,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,rejected_chain_rejects_after_finally,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,rejected_chain_continues_after_ContinueWith_returning_non_value_promise,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,rejected_chain_continues_after_ContinueWith_returning_value_promise,The following statement contains a magic number: const int expectedValue = 42;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,rejected_chain_continues_after_ContinueWith_returning_value_promise,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_chain_promise_generic_after_finally,The following statement contains a magic number: const int expectedValue = 5;
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_chain_promise_generic_after_finally,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,can_chain_promise_after_finally,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_in_finally_callback_is_caught_by_chained_catch,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_in_ContinueWith_callback_returning_non_value_promise_is_caught_by_chained_catch,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTests.cs,exception_in_ContinueWith_callback_returning_value_promise_is_caught_by_chained_catch,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,PromiseTimerTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTimerTests.cs,wait_until_elapsedUpdates_resolves_when_predicate_is_true,The following statement contains a magic number: const int testFrame = 3;
Magic Number,RSG.Tests,PromiseTimerTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTimerTests.cs,wait_until_elapsedUpdates_resolves_when_predicate_is_true,The following statement contains a magic number: testObject.Update(2);
Magic Number,RSG.Tests,PromiseTimerTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTimerTests.cs,wait_until_elapsedUpdates_resolves_when_predicate_is_true,The following statement contains a magic number: testObject.Update(3);
Magic Number,RSG.Tests,PromiseTimerTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTimerTests.cs,wait_for_doesnt_resolve_before_specified_time,The following statement contains a magic number: const float testTime = 2f;
Magic Number,RSG.Tests,PromiseTimerTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTimerTests.cs,wait_for_resolves_after_specified_time,The following statement contains a magic number: testObject.Update(2f);
Magic Number,RSG.Tests,PromiseTimerTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTimerTests.cs,all_promises_are_updated_when_a_pending_promise_is_resolved_during_update,The following statement contains a magic number: testObject.Update(0.01f);
Magic Number,RSG.Tests,PromiseTimerTests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\PromiseTimerTests.cs,all_promises_are_updated_when_a_pending_promise_is_canceled_during_update,The following statement contains a magic number: testObject.Update(0.01f);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,can_resolve_promise_and_trigger_multiple_then_handlers_in_order,The following statement contains a magic number: promise.Then(() => Assert.Equal(2' ++completed));
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,can_resolve_promise_and_trigger_multiple_then_handlers_in_order,The following statement contains a magic number: Assert.Equal(2' completed);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,can_reject_promise_and_trigger_multiple_error_handlers_in_order,The following statement contains a magic number: promise.Catch(e =>              {                  Assert.Equal(ex' e);                  Assert.Equal(2' ++completed);              });
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,can_reject_promise_and_trigger_multiple_error_handlers_in_order,The following statement contains a magic number: Assert.Equal(2' completed);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,chain_multiple_promises_using_all_that_are_resolved_out_of_order,The following statement contains a magic number: const int chainedResult1 = 10;
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,chain_multiple_promises_using_all_that_are_resolved_out_of_order,The following statement contains a magic number: const int chainedResult2 = 15;
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,chain_multiple_promises_using_all_that_are_resolved_out_of_order,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  promise                      .ThenAll(() => EnumerableExt.FromItems(chainedPromise1' chainedPromise2)                          .Cast<IPromise<int>>())                      .Then(result =>                      {                          var items = result.ToArray();                          Assert.Equal(2' items.Length);                          Assert.Equal(chainedResult1' items[0]);                          Assert.Equal(chainedResult2' items[1]);                            ++completed;                      });                    Assert.Equal(0' completed);                    promise.Resolve();                    Assert.Equal(0' completed);                    chainedPromise1.Resolve(chainedResult1);                    Assert.Equal(0' completed);                    chainedPromise2.Resolve(chainedResult2);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,chain_multiple_value_promises_using_all_resolved_out_of_order,The following statement contains a magic number: const int chainedResult1 = 10;
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,chain_multiple_value_promises_using_all_resolved_out_of_order,The following statement contains a magic number: const int chainedResult2 = 15;
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,chain_multiple_value_promises_using_all_resolved_out_of_order,The following statement contains a magic number: TestHelpers.VerifyDoesntThrowUnhandledException(() =>              {                  promise                      .ThenAll(() => EnumerableExt.FromItems(chainedPromise1' chainedPromise2)                          .Cast<IPromise<int>>())                      .Then(result =>                      {                          var items = result.ToArray();                          Assert.Equal(2' items.Length);                          Assert.Equal(chainedResult1' items[0]);                          Assert.Equal(chainedResult2' items[1]);                            ++completed;                      });                    Assert.Equal(0' completed);                    promise.Resolve();                    Assert.Equal(0' completed);                    chainedPromise2.Resolve(chainedResult2);                    Assert.Equal(0' completed);                    chainedPromise1.Resolve(chainedResult1);                    Assert.Equal(1' completed);              });
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,all_with_rejected_promise,The following statement contains a magic number: promiseA.ReportProgress(0.5f);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,sequenced_operations_are_run_in_order_is_directly_resolved,The following statement contains a magic number: Promise                  .Sequence(                      () =>                      {                          Assert.Equal(1' ++order);                          return Promise.Resolved();                      }'                      () =>                      {                          Assert.Equal(2' ++order);                          return Promise.Resolved();                      }'                      () =>                      {                          Assert.Equal(3' ++order);                          return Promise.Resolved();                      }                  );
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,sequenced_operations_are_run_in_order_is_directly_resolved,The following statement contains a magic number: Promise                  .Sequence(                      () =>                      {                          Assert.Equal(1' ++order);                          return Promise.Resolved();                      }'                      () =>                      {                          Assert.Equal(2' ++order);                          return Promise.Resolved();                      }'                      () =>                      {                          Assert.Equal(3' ++order);                          return Promise.Resolved();                      }                  );
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,sequenced_operations_are_run_in_order_is_directly_resolved,The following statement contains a magic number: Assert.Equal(3' order);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,inner_exception_handled_by_outer_promise_with_results,The following statement contains a magic number: promise                      .Then(_ => Promise<int>.Resolved(5).Then(__ => throw expectedException))                      .Catch(ex =>                      {                          Assert.Equal(expectedException' ex);                            ++errorCallback;                      });
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,inner_exception_handled_by_outer_promise_with_results,The following statement contains a magic number: promise.Resolve(2);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,resolved_chain_continues_after_finally,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,rejected_chain_rejects_after_finally,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,rejected_chain_continues_after_ContinueWith_returning_non_value_promise,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,rejected_chain_continues_after_ContinueWith_returning_value_promise,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,exception_in_finally_callback_is_caught_by_chained_catch,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,exception_in_ContinueWith_callback_returning_non_value_promise_is_caught_by_chained_catch,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,exception_in_ContinueWith_callback_returning_value_promise_is_caught_by_chained_catch,The following statement contains a magic number: Assert.Equal(2' callback);
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,can_chain_promise_after_ContinueWith,The following statement contains a magic number: const int expectedValue = 5;
Magic Number,RSG.Tests,Promise_NonGeneric_Tests,C:\research\architectureSmells\repos\Real-Serious-Games_C-Sharp-Promise\Tests\Promise_NonGeneric_Tests.cs,can_chain_promise_after_ContinueWith,The following statement contains a magic number: Assert.Equal(2' callback);
