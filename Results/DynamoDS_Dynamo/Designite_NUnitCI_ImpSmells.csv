Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,AppendNuintDiff,Cyclomatic complexity of the method is 15
Complex Method,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,NuintDiff,Cyclomatic complexity of the method is 11
Complex Method,NUnitCI,NuintTestResult,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,checkTestCaseAttribute,Cyclomatic complexity of the method is 29
Long Parameter List,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,GetNunitRegressionInfo,The method has 5 parameters.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,GetNunitRegressionInfo,The length of the statement  "				if (preTestResult.results [ix1].Result == NuintTestCaseResult.ResultType.SUCCESS && (curTestResult.results [ix2].Result == NuintTestCaseResult.ResultType.ERROR || curTestResult.results [ix2].Result == NuintTestCaseResult.ResultType.FAILURE)) " is 241.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,GetNunitRegressionInfo,The length of the statement  "				else if ((preTestResult.results [ix1].Result == NuintTestCaseResult.ResultType.FAILURE || curTestResult.results [ix2].Result == NuintTestCaseResult.ResultType.ERROR) && curTestResult.results [ix2].Result == NuintTestCaseResult.ResultType.SUCCESS) " is 246.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,AppendNunitSummary,The length of the statement  "				body.Append ("<td>" + preData + "</td><td>" + ((difference > 0) ? ("<font color=\"red\">+" + difference.ToString () + "</font>") : ("<font color=\"green\">" + difference.ToString () + "</font>")) + "</td>"); " is 207.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,AppendNuintDiff,The length of the statement  "			if (result.result1.Result == NuintTestCaseResult.ResultType.SUCCESS && (result.result2.Result == NuintTestCaseResult.ResultType.FAILURE || result.result2.Result == NuintTestCaseResult.ResultType.ERROR)) " is 202.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,AppendNuintDiff,The length of the statement  "			if ((result.result1.Result == NuintTestCaseResult.ResultType.FAILURE || result.result1.Result == NuintTestCaseResult.ResultType.ERROR) && result.result2.Result == NuintTestCaseResult.ResultType.SUCCESS) " is 202.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,AppendNuintDiff,The length of the statement  "	body.AppendLine ("<h2>" + "<b><u>Regression Summary</u></b>" + ": Success and Error to Failure: " + "<font color=\"red\"> <b>" + successToFailure + "</b> <font color=\"black\">" + " Failure and Error to Success: " + "<font color=\"green\"> <b>" + failureToSuccess + "</b> </h2>"); " is 280.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,AppendNuintDiff,The length of the statement  "	body.AppendLine ("<tr><td  bgcolor=\"grey\">TestCase Name</td><td bgcolor=\"grey\">Directory</td><td bgcolor=\"grey\">Previous</td><td bgcolor=\"grey\">Current</td></tr>"); " is 172.
Long Statement,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,NuintDiff,The length of the statement  "			if (result1.results [ix1].Executed != result2.results [ix2].Executed || result1.results [ix1].Result != result2.results [ix2].Result) " is 133.
Complex Conditional,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,GetNunitRegressionInfo,The conditional expression  "preXml == null || curXml == null || !File.Exists (preXml) || !File.Exists (curXml)"  is complex.
Magic Number,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,Main,The following statement contains a magic number: try {  	string curPath = @args [0];  	string prePath = @args [1];  	string outPath = @args [2];  	Console.WriteLine (curPath);  	Console.WriteLine (prePath);  	AppendNunitSummary (curPath' prePath' ref body);  	AppendNuintDiff (curPath' prePath' ref body);  	using (StreamWriter outfile = new StreamWriter (outPath)) {  		outfile.Write (body.ToString ());  	}  } catch (Exception e) {  	Console.WriteLine ("Less than 3 arguments passed in");  }  
Magic Number,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,buildSummary,The following statement contains a magic number: try {  	var xmlDoc = new XmlDocument ();  	xmlDoc.Load (filePath);  	XmlNode rootNode = null;  	foreach (XmlNode xmlNode in xmlDoc.ChildNodes) {  		if (xmlNode.Name == "test-results") {  			rootNode = xmlNode;  			break;  		}  	}  	if (summary.ContainsKey (keyValues [0])) {  		summary ["total"] -= summary ["not-run"];  		for (int i = 0; i < 8; i++) {  			summary [keyValues [i]] = summary [keyValues [i]] + Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value);  		}  		summary ["total"] += summary ["not-run"];  	} else {  		for (int i = 0; i < 8; i++) {  			summary.Add (keyValues [i]' Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value));  		}  		summary ["total"] += summary ["not-run"];  	}  } catch (Exception ex) {  	summary.Clear ();  }  
Magic Number,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,buildSummary,The following statement contains a magic number: try {  	var xmlDoc = new XmlDocument ();  	xmlDoc.Load (filePath);  	XmlNode rootNode = null;  	foreach (XmlNode xmlNode in xmlDoc.ChildNodes) {  		if (xmlNode.Name == "test-results") {  			rootNode = xmlNode;  			break;  		}  	}  	if (summary.ContainsKey (keyValues [0])) {  		summary ["total"] -= summary ["not-run"];  		for (int i = 0; i < 8; i++) {  			summary [keyValues [i]] = summary [keyValues [i]] + Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value);  		}  		summary ["total"] += summary ["not-run"];  	} else {  		for (int i = 0; i < 8; i++) {  			summary.Add (keyValues [i]' Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value));  		}  		summary ["total"] += summary ["not-run"];  	}  } catch (Exception ex) {  	summary.Clear ();  }  
Magic Number,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,buildSummary,The following statement contains a magic number: if (summary.ContainsKey (keyValues [0])) {  	summary ["total"] -= summary ["not-run"];  	for (int i = 0; i < 8; i++) {  		summary [keyValues [i]] = summary [keyValues [i]] + Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value);  	}  	summary ["total"] += summary ["not-run"];  } else {  	for (int i = 0; i < 8; i++) {  		summary.Add (keyValues [i]' Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value));  	}  	summary ["total"] += summary ["not-run"];  }  
Magic Number,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,buildSummary,The following statement contains a magic number: if (summary.ContainsKey (keyValues [0])) {  	summary ["total"] -= summary ["not-run"];  	for (int i = 0; i < 8; i++) {  		summary [keyValues [i]] = summary [keyValues [i]] + Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value);  	}  	summary ["total"] += summary ["not-run"];  } else {  	for (int i = 0; i < 8; i++) {  		summary.Add (keyValues [i]' Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value));  	}  	summary ["total"] += summary ["not-run"];  }  
Magic Number,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,buildSummary,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	summary [keyValues [i]] = summary [keyValues [i]] + Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value);  }  
Magic Number,NUnitCI,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\CI-html\NUnitCI\Program.cs,buildSummary,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	summary.Add (keyValues [i]' Convert.ToInt32 (rootNode.Attributes [keyValues [i]].Value));  }  
