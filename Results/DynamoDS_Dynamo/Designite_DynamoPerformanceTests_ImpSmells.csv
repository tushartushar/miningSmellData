Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DynamoPerformanceTests,Program,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\PerformanceTestConsoleApp.cs,Main,Cyclomatic complexity of the method is 9
Long Parameter List,DynamoPerformanceTests,BenchmarkResult,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,BenchmarkResult,The method has 8 parameters. Parameters: method' graph' mean' meanUnits' error' errorUnits' stdDev' stdDevUnits
Long Statement,DynamoPerformanceTests,Program,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\PerformanceTestConsoleApp.cs,Main,The length of the statement  "                { "g=|graphs="' "Path to Directory containing test graphs. Defaults to 'Dynamo/tools/Performance/DynamoPerformanceTests/graphs/'"' v => { testDirectory = v; } }' " is 161.
Long Statement,DynamoPerformanceTests,Program,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\PerformanceTestConsoleApp.cs,Main,The length of the statement  "                { "b=|base="' "Path to Directory containing performance results files to use as comparison base. Defaults to 'BenchmarkDotNet.Artifacts/results/'"' v => { baseResultsPath = v; }}' " is 179.
Long Statement,DynamoPerformanceTests,Program,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\PerformanceTestConsoleApp.cs,Main,The length of the statement  "                { "n=|new="' "Path to Directory containing new performance results files to compare against the baseline"' v => { newResultsPath = v; }}' " is 137.
Long Statement,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,ImportResultsCSV,The length of the statement  "                throw new Exception(string.Format("The csv file at {0} does not contain the following required columns: {1}."' csvPath' string.Join("' "' missingColumns))); " is 156.
Long Statement,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,ImportResultsCSV,The length of the statement  "                benchmarkResults[method+graph] = (new BenchmarkResult(method' graph' mean' meanUnits' error' errorUnits' stdDev' stdDevUnits)); " is 127.
Long Statement,DynamoPerformanceTests,BenchmarkComparison,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,LogComparison,The length of the statement  "                var baseData = new string[] { BaseResult.Method' BaseResult.Graph' "Base"' BaseResult.MeanString' BaseResult.ErrorString' BaseResult.StdDevString }; " is 148.
Long Statement,DynamoPerformanceTests,BenchmarkComparison,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,LogComparison,The length of the statement  "                var deltaData = new string[] { ""' ""' ""' meanDeltaString + "%"' ErrorDelta.ToString() + "%"' StdDevDelta.ToString() + "%" }; " is 126.
Long Statement,DynamoPerformanceTests,BenchmarkComparison,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,GetComparisonData,The length of the statement  "                var baseData = new string[] { BaseResult.Method' BaseResult.Graph' "Base"' BaseResult.MeanString' BaseResult.ErrorString' BaseResult.StdDevString }; " is 148.
Long Statement,DynamoPerformanceTests,BenchmarkComparison,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,GetComparisonData,The length of the statement  "                var deltaData = new string[] { ""' ""' ""' MeanDelta.ToString() + "%"' ErrorDelta.ToString() + "%"' StdDevDelta.ToString() + "%"' " is 129.
Magic Number,DynamoPerformanceTests,DynamoBenchmarkConfig,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\PerformanceTestHelper.cs,DynamoBenchmarkConfig,The following statement contains a magic number: defaultColumns.RemoveAt(3);
Magic Number,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,DefaultBenchmarkComparison,The following statement contains a magic number: comparisonData.MeanDelta > (10 + (1000/comparisonData.BaseResult.Mean))
Magic Number,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,DefaultBenchmarkComparison,The following statement contains a magic number: comparisonData.MeanDelta > (10 + (1000/comparisonData.BaseResult.Mean))
Magic Number,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,ImportResultsCSV,The following statement contains a magic number: var iMean = Array.IndexOf(header' columnNames[2]);
Magic Number,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,ImportResultsCSV,The following statement contains a magic number: var iError = Array.IndexOf(header' columnNames[3]);
Magic Number,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,ImportResultsCSV,The following statement contains a magic number: var iStdDev = Array.IndexOf(header' columnNames[4]);
Magic Number,DynamoPerformanceTests,ResultsComparer,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,GetColumnWidths,The following statement contains a magic number: columnWidths = columnWidths.Select(c => c + 2).ToArray();
Magic Number,DynamoPerformanceTests,BenchmarkComparison,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\ResultsComparer.cs,LogComparison,The following statement contains a magic number: i == 3
Missing Default,DynamoPerformanceTests,Program,D:\research\architectureSmells\repos\DynamoDS_Dynamo\tools\Performance\DynamoPerformanceTests\PerformanceTestConsoleApp.cs,Main,The following switch statement is missing a default case: switch (command)              {                  case Command.NonOptimizedBenchmark:                      config = PerformanceTestHelper.getDebugConfig();                      goto case Command.Benchmark;                    case Command.DebugInProcess:                      config = PerformanceTestHelper.getDebugInProcessConfig();                      goto case Command.Benchmark;                    case Command.Benchmark:                      DynamoViewPerformanceTestBase.testDirectory = testDirectory;                      var runSummaryWithUI = BenchmarkRunner.Run<DynamoViewPerformanceTestBase>(config);                        goto case Command.ModelOnlyBenchmark;                    case Command.ModelOnlyBenchmark:                      DynamoModelPerformanceTestBase.testDirectory = testDirectory;                      var runSummaryWithoutUI = BenchmarkRunner.Run<DynamoModelPerformanceTestBase>(config);                      break;                    case Command.StandardConfigModelOnlyBenchmark:                      config = PerformanceTestHelper.getReleaseConfig();                      goto case Command.ModelOnlyBenchmark;                    case Command.Compare:                      Compare(baseResultsPath' newResultsPath' saveComparisonPath);                      break;              }
