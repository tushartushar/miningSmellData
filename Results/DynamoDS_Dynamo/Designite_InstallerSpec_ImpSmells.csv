Implementation smell,Namespace,Class,File,Method,Description
Complex Method,InstallerSpec,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\InstallerSpec\InstallerSpec\Program.cs,Main,Cyclomatic complexity of the method is 16
Empty Catch Block,InstallerSpec,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\InstallerSpec\InstallerSpec\Program.cs,Main,The method has an empty catch block.
Magic Number,InstallerSpec,DynamoCoreVersion,F:\newReposMay17\DynamoDS_Dynamo\tools\InstallerSpec\InstallerSpec\Program.cs,FromPath,The following statement contains a magic number: return new DynamoCoreVersion () {  	BaseDirectory = binpath'  	//Drop last two characters from the version string to consider version diff  	//in localized resources and any other binaries coming from different repo.  	BaseVersion = info.FileVersion.Substring (0' info.FileVersion.Length - 2)'  };  
Magic Number,InstallerSpec,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\InstallerSpec\InstallerSpec\Program.cs,Main,The following statement contains a magic number: while (index < nArgs) {  	var value = args [index++];  	if (value.StartsWith ("/f:")) {  		var textFilePath = value.Substring (3);  		if (File.Exists (textFilePath)) {  			try {  				using (var streamReader = File.OpenText (textFilePath)) {  					while (!streamReader.EndOfStream) {  						// WARNING: The following codes are written with the assumption that   						// files with listed names are residing under "binpath"' but this may   						// not be true in the future. Rewrite this logic and make "textFilePath"  						// contains fully qualified paths instead of doing the prefix here.  						//   						var fileNameWithoutPath = streamReader.ReadLine ().Trim ();  						var fileNameWithPath = Path.Combine (binpath' fileNameWithoutPath);  						if (!string.IsNullOrEmpty (fileNameWithPath))  							fileList.Add (fileNameWithPath);  					}  				}  			} catch {  			}  		}  	} else {  		corefile = value;  		// Without "/f" flag' it's a file name.  	}  }  
Magic Number,InstallerSpec,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\InstallerSpec\InstallerSpec\Program.cs,Main,The following statement contains a magic number: if (value.StartsWith ("/f:")) {  	var textFilePath = value.Substring (3);  	if (File.Exists (textFilePath)) {  		try {  			using (var streamReader = File.OpenText (textFilePath)) {  				while (!streamReader.EndOfStream) {  					// WARNING: The following codes are written with the assumption that   					// files with listed names are residing under "binpath"' but this may   					// not be true in the future. Rewrite this logic and make "textFilePath"  					// contains fully qualified paths instead of doing the prefix here.  					//   					var fileNameWithoutPath = streamReader.ReadLine ().Trim ();  					var fileNameWithPath = Path.Combine (binpath' fileNameWithoutPath);  					if (!string.IsNullOrEmpty (fileNameWithPath))  						fileList.Add (fileNameWithPath);  				}  			}  		} catch {  		}  	}  } else {  	corefile = value;  	// Without "/f" flag' it's a file name.  }  
