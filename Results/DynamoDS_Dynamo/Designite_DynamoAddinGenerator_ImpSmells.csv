Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DynamoAddinGenerator,Program,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Program.cs,GenerateDynamoAddin,The length of the statement  "		var addin = String.Format ("<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n" + "<RevitAddIns>\n" + "<AddIn Type=\"Application\">\n" + "<Name>Dynamo For Revit</Name>\n" + "<Assembly>\"{0}\"</Assembly>\n" + "<AddInId>{1}</AddInId>\n" + "<FullClassName>{2}</FullClassName>\n" + "<VendorId>ADSK</VendorId>\n" + "<VendorDescription>Dynamo</VendorDescription>\n" + "</AddIn>\n" + "</RevitAddIns>"' data.AssemblyPath' data.Id' data.ClassName); " is 451.
Long Statement,DynamoAddinGenerator,Tests,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Tests.cs,AddinData_071a,The length of the statement  "	Assert.AreEqual (addinData.AssemblyPath' Path.Combine (DynamoVersions.dynamo_071_x86' "Revit_2014\\DynamoRevitVersionSelector.dll")); " is 133.
Long Statement,DynamoAddinGenerator,Tests,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Tests.cs,AddinData_071b_2014,The length of the statement  "	Assert.AreEqual (addinData.AssemblyPath' Path.Combine (DynamoVersions.dynamo_071_x64' "Revit_2014\\DynamoRevitVersionSelector.dll")); " is 133.
Long Statement,DynamoAddinGenerator,Tests,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Tests.cs,AddinData_07x_2015,The length of the statement  "	Assert.AreEqual (addinData.AssemblyPath' Path.Combine (DynamoVersions.dynamo_07x' "Revit_2015\\DynamoRevitVersionSelector.dll")); " is 129.
Long Statement,DynamoAddinGenerator,Tests,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Tests.cs,AddinDataIsCorrectInstallingOnMultipleRevits,The length of the statement  "	Assert.AreEqual (addinData.AssemblyPath' Path.Combine (DynamoVersions.dynamo_07x' "Revit_2014\\DynamoRevitVersionSelector.dll")); " is 129.
Complex Conditional,DynamoAddinGenerator,RevitProductCollection,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Types.cs,RevitProductCollection,The conditional expression  "prod.VersionString == RevitVersion.Revit2011.ToString () || prod.VersionString == RevitVersion.Revit2012.ToString () || prod.VersionString == RevitVersion.Revit2013.ToString () || prod.VersionString == RevitVersion.Revit2014.ToString ()"  is complex.
Magic Number,DynamoAddinGenerator,Tests,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Tests.cs,GetValidProducts_FindsValidProducts,The following statement contains a magic number: Assert.AreEqual (3' prods.Products.Count ());  
Magic Number,DynamoAddinGenerator,DynamoAddinData,F:\newReposMay17\DynamoDS_Dynamo\tools\DynamoAddinGenerator\Types.cs,Create,The following statement contains a magic number: foreach (var p in products) {  	//If the current product is being uninstalled' don't generate addin data  	if (DynamoInstall.PathEquals (p.InstallLocation' dynamoUninstallPath))  		continue;  	var path = Path.Combine (p.InstallLocation' "DynamoRevit.dll");  	//Should be 0.6.3 only supported for Revit2014  	if (File.Exists (path) && revit.VersionString == "Revit2014")  		return new DynamoAddinData (revit' new DynamoInstall (p.InstallLocation));  	var subfolder = revit.VersionString.Insert (5' "_");  	path = Path.Combine (p.InstallLocation' subfolder' "DynamoRevitVersionSelector.dll");  	if (File.Exists (path))  		return new DynamoAddinData (revit' new DynamoInstall (p.InstallLocation));  }  
