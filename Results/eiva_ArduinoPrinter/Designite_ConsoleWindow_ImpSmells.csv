Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,Cyclomatic complexity of the method is 9
Long Statement,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,Text_PrintButtonClicked,The length of the statement  "	var formattedText = new FormattedText (text' CultureInfo.InvariantCulture' FlowDirection.LeftToRight' typeface' 12' Brushes.Black) { " is 132.
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	var cb = new TextBox {  		Width = 30'  		Text = "0"  	};  	_headRawMask [i] = cb;  	_bitMask.Children.Add (cb);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	var cb = new TextBox {  		Width = 30'  		Text = "0"  	};  	_headRawMask [i] = cb;  	_bitMask.Children.Add (cb);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,onOpenPort,The following statement contains a magic number: try {  	_port = new SerialPort ((string)_ports.SelectedItem) {  		BaudRate = 9600  	};  	_port.Open ();  	_tabControl.IsEnabled = true;  	log ("Port Opened");  }  catch (Exception ex) {  	log ("Error: {0}"' ex.Message);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,onOpenPort,The following statement contains a magic number: _port = new SerialPort ((string)_ports.SelectedItem) {  	BaudRate = 9600  };  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,Button_Click,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	mask [i] = byte.Parse (_headRawMask [i].Text);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int i = 0; i < 128; i++) {  	if (bits [i]) {  		++_1;  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: if (_1 <= 16) {  	rawPrintCommand (delay' bits);  	return;  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int iteration = 0; iteration < 4; ++iteration) {  	var bankBitArray = new BitArray (128);  	for (int bank = 0; bank < 4; ++bank) {  		for (int bit = 0; bit < 8; ++bit) {  			bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  		}  	}  	rawPrintCommand (delay' bankBitArray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bank = 0; bank < 4; ++bank) {  	for (int bit = 0; bit < 8; ++bit) {  		bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bank = 0; bank < 4; ++bank) {  	for (int bit = 0; bit < 8; ++bit) {  		bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bank = 0; bank < 4; ++bank) {  	for (int bit = 0; bit < 8; ++bit) {  		bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bank = 0; bank < 4; ++bank) {  	for (int bit = 0; bit < 8; ++bit) {  		bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bank = 0; bank < 4; ++bank) {  	for (int bit = 0; bit < 8; ++bit) {  		bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bank = 0; bank < 4; ++bank) {  	for (int bit = 0; bit < 8; ++bit) {  		bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bit = 0; bit < 8; ++bit) {  	bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bit = 0; bit < 8; ++bit) {  	bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bit = 0; bit < 8; ++bit) {  	bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bit = 0; bit < 8; ++bit) {  	bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: for (int bit = 0; bit < 8; ++bit) {  	bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,commandPrint,The following statement contains a magic number: bankBitArray [8 * iteration + 32 * bank + bit] = bits [8 * iteration + 32 * bank + bit];  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,Graphics_PrintButtonClicked,The following statement contains a magic number: group.Children.Add (new ImageDrawing (rtb' new Rect (0' 0' 128' 128)));  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,Graphics_PrintButtonClicked,The following statement contains a magic number: group.Children.Add (new ImageDrawing (rtb' new Rect (0' 0' 128' 128)));  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (renderTarget.PixelWidth != 128) {  	throw new ArgumentOutOfRangeException ();  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: renderTarget.CopyPixels (arrBits' 4 * renderTarget.PixelWidth' 0);  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int i = 0; i < renderTarget.PixelHeight - 1; i++) {  	commadNextLine ();  	var bitMaskBlack = new BitArray (128' false);  	var bitMaskGray = new BitArray (128' false);  	int countGray = 0;  	int countBlack = 0;  	for (int j = 0; j < 128; j++' pos++) {  		if (arrBits [pos] == 0) {  			// Skip transparent pixel.  		}  		else if (arrBits [pos] <= black) {  			bitMaskBlack [127 - j] = true;  			++countBlack;  		}  		else if (arrBits [pos] <= gray) {  			bitMaskGray [127 - j] = true;  			++countGray;  		}  	}  	if (countBlack > 0) {  		commandPrint (15' bitMaskBlack);  	}  	if (countGray > 0 && printGray) {  		commandPrint (2' bitMaskGray);  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int i = 0; i < renderTarget.PixelHeight - 1; i++) {  	commadNextLine ();  	var bitMaskBlack = new BitArray (128' false);  	var bitMaskGray = new BitArray (128' false);  	int countGray = 0;  	int countBlack = 0;  	for (int j = 0; j < 128; j++' pos++) {  		if (arrBits [pos] == 0) {  			// Skip transparent pixel.  		}  		else if (arrBits [pos] <= black) {  			bitMaskBlack [127 - j] = true;  			++countBlack;  		}  		else if (arrBits [pos] <= gray) {  			bitMaskGray [127 - j] = true;  			++countGray;  		}  	}  	if (countBlack > 0) {  		commandPrint (15' bitMaskBlack);  	}  	if (countGray > 0 && printGray) {  		commandPrint (2' bitMaskGray);  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int i = 0; i < renderTarget.PixelHeight - 1; i++) {  	commadNextLine ();  	var bitMaskBlack = new BitArray (128' false);  	var bitMaskGray = new BitArray (128' false);  	int countGray = 0;  	int countBlack = 0;  	for (int j = 0; j < 128; j++' pos++) {  		if (arrBits [pos] == 0) {  			// Skip transparent pixel.  		}  		else if (arrBits [pos] <= black) {  			bitMaskBlack [127 - j] = true;  			++countBlack;  		}  		else if (arrBits [pos] <= gray) {  			bitMaskGray [127 - j] = true;  			++countGray;  		}  	}  	if (countBlack > 0) {  		commandPrint (15' bitMaskBlack);  	}  	if (countGray > 0 && printGray) {  		commandPrint (2' bitMaskGray);  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int i = 0; i < renderTarget.PixelHeight - 1; i++) {  	commadNextLine ();  	var bitMaskBlack = new BitArray (128' false);  	var bitMaskGray = new BitArray (128' false);  	int countGray = 0;  	int countBlack = 0;  	for (int j = 0; j < 128; j++' pos++) {  		if (arrBits [pos] == 0) {  			// Skip transparent pixel.  		}  		else if (arrBits [pos] <= black) {  			bitMaskBlack [127 - j] = true;  			++countBlack;  		}  		else if (arrBits [pos] <= gray) {  			bitMaskGray [127 - j] = true;  			++countGray;  		}  	}  	if (countBlack > 0) {  		commandPrint (15' bitMaskBlack);  	}  	if (countGray > 0 && printGray) {  		commandPrint (2' bitMaskGray);  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int i = 0; i < renderTarget.PixelHeight - 1; i++) {  	commadNextLine ();  	var bitMaskBlack = new BitArray (128' false);  	var bitMaskGray = new BitArray (128' false);  	int countGray = 0;  	int countBlack = 0;  	for (int j = 0; j < 128; j++' pos++) {  		if (arrBits [pos] == 0) {  			// Skip transparent pixel.  		}  		else if (arrBits [pos] <= black) {  			bitMaskBlack [127 - j] = true;  			++countBlack;  		}  		else if (arrBits [pos] <= gray) {  			bitMaskGray [127 - j] = true;  			++countGray;  		}  	}  	if (countBlack > 0) {  		commandPrint (15' bitMaskBlack);  	}  	if (countGray > 0 && printGray) {  		commandPrint (2' bitMaskGray);  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int i = 0; i < renderTarget.PixelHeight - 1; i++) {  	commadNextLine ();  	var bitMaskBlack = new BitArray (128' false);  	var bitMaskGray = new BitArray (128' false);  	int countGray = 0;  	int countBlack = 0;  	for (int j = 0; j < 128; j++' pos++) {  		if (arrBits [pos] == 0) {  			// Skip transparent pixel.  		}  		else if (arrBits [pos] <= black) {  			bitMaskBlack [127 - j] = true;  			++countBlack;  		}  		else if (arrBits [pos] <= gray) {  			bitMaskGray [127 - j] = true;  			++countGray;  		}  	}  	if (countBlack > 0) {  		commandPrint (15' bitMaskBlack);  	}  	if (countGray > 0 && printGray) {  		commandPrint (2' bitMaskGray);  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int i = 0; i < renderTarget.PixelHeight - 1; i++) {  	commadNextLine ();  	var bitMaskBlack = new BitArray (128' false);  	var bitMaskGray = new BitArray (128' false);  	int countGray = 0;  	int countBlack = 0;  	for (int j = 0; j < 128; j++' pos++) {  		if (arrBits [pos] == 0) {  			// Skip transparent pixel.  		}  		else if (arrBits [pos] <= black) {  			bitMaskBlack [127 - j] = true;  			++countBlack;  		}  		else if (arrBits [pos] <= gray) {  			bitMaskGray [127 - j] = true;  			++countGray;  		}  	}  	if (countBlack > 0) {  		commandPrint (15' bitMaskBlack);  	}  	if (countGray > 0 && printGray) {  		commandPrint (2' bitMaskGray);  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int j = 0; j < 128; j++' pos++) {  	if (arrBits [pos] == 0) {  		// Skip transparent pixel.  	}  	else if (arrBits [pos] <= black) {  		bitMaskBlack [127 - j] = true;  		++countBlack;  	}  	else if (arrBits [pos] <= gray) {  		bitMaskGray [127 - j] = true;  		++countGray;  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int j = 0; j < 128; j++' pos++) {  	if (arrBits [pos] == 0) {  		// Skip transparent pixel.  	}  	else if (arrBits [pos] <= black) {  		bitMaskBlack [127 - j] = true;  		++countBlack;  	}  	else if (arrBits [pos] <= gray) {  		bitMaskGray [127 - j] = true;  		++countGray;  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: for (int j = 0; j < 128; j++' pos++) {  	if (arrBits [pos] == 0) {  		// Skip transparent pixel.  	}  	else if (arrBits [pos] <= black) {  		bitMaskBlack [127 - j] = true;  		++countBlack;  	}  	else if (arrBits [pos] <= gray) {  		bitMaskGray [127 - j] = true;  		++countGray;  	}  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (arrBits [pos] == 0) {  	// Skip transparent pixel.  }  else if (arrBits [pos] <= black) {  	bitMaskBlack [127 - j] = true;  	++countBlack;  }  else if (arrBits [pos] <= gray) {  	bitMaskGray [127 - j] = true;  	++countGray;  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (arrBits [pos] == 0) {  	// Skip transparent pixel.  }  else if (arrBits [pos] <= black) {  	bitMaskBlack [127 - j] = true;  	++countBlack;  }  else if (arrBits [pos] <= gray) {  	bitMaskGray [127 - j] = true;  	++countGray;  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (arrBits [pos] <= black) {  	bitMaskBlack [127 - j] = true;  	++countBlack;  }  else if (arrBits [pos] <= gray) {  	bitMaskGray [127 - j] = true;  	++countGray;  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (arrBits [pos] <= black) {  	bitMaskBlack [127 - j] = true;  	++countBlack;  }  else if (arrBits [pos] <= gray) {  	bitMaskGray [127 - j] = true;  	++countGray;  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: bitMaskBlack [127 - j] = true;  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (arrBits [pos] <= gray) {  	bitMaskGray [127 - j] = true;  	++countGray;  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: bitMaskGray [127 - j] = true;  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (countBlack > 0) {  	commandPrint (15' bitMaskBlack);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: commandPrint (15' bitMaskBlack);  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: if (countGray > 0 && printGray) {  	commandPrint (2' bitMaskGray);  }  
Magic Number,ConsoleWindow,MainWindow,C:\repos\eiva_ArduinoPrinter\PrinterTest\ConsoleWindow\MainWindow.xaml.cs,printRenderTarget,The following statement contains a magic number: commandPrint (2' bitMaskGray);  
