Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Semaview.Shared.ICalParser,Parser,C:\repos\dblock_sncore\ICalParser.Net\Parser.cs,Parse,Cyclomatic complexity of the method is 13
Complex Method,Semaview.Shared.ICalParser,Parser,C:\repos\dblock_sncore\ICalParser.Net\Parser.cs,parseID,Cyclomatic complexity of the method is 33
Complex Method,Semaview.Shared.ICalParser,Parser,C:\repos\dblock_sncore\ICalParser.Net\Parser.cs,parseAttributes,Cyclomatic complexity of the method is 13
Complex Method,Semaview.Shared.ICalParser,Parser,C:\repos\dblock_sncore\ICalParser.Net\Parser.cs,parseValue,Cyclomatic complexity of the method is 10
Complex Method,Semaview.Shared.ICalParser,Scanner,C:\repos\dblock_sncore\ICalParser.Net\Scanner.cs,GetNextToken,Cyclomatic complexity of the method is 8
Complex Method,Semaview.Shared.ICalParser,Scanner,C:\repos\dblock_sncore\ICalParser.Net\Scanner.cs,GetNextParms,Cyclomatic complexity of the method is 8
Complex Method,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,Token,Cyclomatic complexity of the method is 23
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,realIntro,The length of the statement  "	return ("Session.namespaces[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n" + "Session.namespaces[\"ical\"] = \"" + ical + "\";\n" + "Session.namespaces[\"x\"] = \"http://www.w3.org/2002/12/cal/prod_apple#\";\n" + "INSERT \n"); " is 242.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doEnd,The length of the statement  "			accumulator.Append ("{{[" + context + "] [" + NS (pred.id.TokenText) + "] [" + Peek ().guid + "] [" + pred.guid + "]}}\n"); " is 123.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doSymbolic,The length of the statement  "	accumulator.Append ("{{[" + context + "] [" + NS (elem.id.TokenText) + "] [" + Peek ().guid + "] [" + NS (Token.CamelCase (t.TokenText.ToLower ())) + "]}}\n"); " is 159.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doResource,The length of the statement  "	accumulator.Append ("{{[" + context + "] [" + NS (elem.id.TokenText) + "] [" + Peek ().guid + "] [" + NS (t.TokenText) + "]}}\n"); " is 130.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doURIResource,The length of the statement  "	accumulator.Append ("{{[" + context + "] [" + NS (elem.id.TokenText) + "] [" + Peek ().guid + "] [" + NS (t.TokenText) + "]}}\n"); " is 130.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doMailto,The length of the statement  "	accumulator.Append ("{{[" + context + "] [" + NS (elem.id.TokenText) + "] [" + Peek ().guid + "] [" + elem.guid + "]}}\n"); " is 123.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doValueProperty,The length of the statement  "	accumulator.Append ("{{[" + context + "] [" + NS (elem.id.TokenText) + "] [" + Peek ().guid + "] [" + elem.guid + "]}}\n"); " is 123.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doValueProperty,The length of the statement  "		//accumulator.Append( "<" + Token.CamelCase( iprop.TokenText.ToLower()) + ">" + t.TokenText + "</" + Token.CamelCase( iprop.TokenText.ToLower()) + ">\n" ); " is 155.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doValueProperty,The length of the statement  "		accumulator.Append ("{{[" + context + "] [ical:dateTime] [" + elem.guid + "] '" + Token.ParseDateTime (t.TokenText) + "'}}\n"); " is 127.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doIprop,The length of the statement  "	accumulator.Append ("{{[" + context + "] [" + NS (elem.id.TokenText) + "] [" + Peek ().guid + "] [" + NS (iprop.TokenText) + "]}}\n"); " is 134.
Long Statement,Semaview.Shared.ICalParser,RQLEmitter,C:\repos\dblock_sncore\ICalParser.Net\Emitter.cs,doRest,The length of the statement  "	accumulator.Append ("{{[" + context + "] [" + NS (elem.id.TokenText) + "] [" + Peek ().guid + "] '" + t.TokenText + "'}}\n"); " is 125.
Long Statement,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The length of the statement  "			string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2); " is 212.
Long Statement,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDate,The length of the statement  "		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + "T00:00:00"; " is 122.
Long Statement,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,doSymbolic,The length of the statement  "	accumulator.Add (new Triple (NS (elem.id.TokenText)' Peek ().guid' NS (Token.CamelCase (t.TokenText.ToLower ()))' true)); " is 121.
Complex Conditional,Semaview.Shared.ICalParser,Parser,C:\repos\dblock_sncore\ICalParser.Net\Parser.cs,parseID,The conditional expression  "t == null || t.isError () || (!t.isBeginEndValue () && !t.isResourceProperty ())"  is complex.
Complex Conditional,Semaview.Shared.ICalParser,Parser,C:\repos\dblock_sncore\ICalParser.Net\Parser.cs,parseID,The conditional expression  "t == null || t.isError () || (!t.isBeginEndValue () && !t.isResourceProperty ())"  is complex.
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (line != null) {  	int start = 0;  	int len = line.Length;  	// I chose 72 instead of the max 75 cause I wanted to' so :P  	while (len > 72) {  		// Indent if not first line  		if (start != 0)  			folded.Append (" ");  		folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  		start += 72;  		len -= 72;  	}  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' len));  	line = reader.ReadLine ();  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (line != null) {  	int start = 0;  	int len = line.Length;  	// I chose 72 instead of the max 75 cause I wanted to' so :P  	while (len > 72) {  		// Indent if not first line  		if (start != 0)  			folded.Append (" ");  		folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  		start += 72;  		len -= 72;  	}  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' len));  	line = reader.ReadLine ();  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (line != null) {  	int start = 0;  	int len = line.Length;  	// I chose 72 instead of the max 75 cause I wanted to' so :P  	while (len > 72) {  		// Indent if not first line  		if (start != 0)  			folded.Append (" ");  		folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  		start += 72;  		len -= 72;  	}  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' len));  	line = reader.ReadLine ();  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (line != null) {  	int start = 0;  	int len = line.Length;  	// I chose 72 instead of the max 75 cause I wanted to' so :P  	while (len > 72) {  		// Indent if not first line  		if (start != 0)  			folded.Append (" ");  		folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  		start += 72;  		len -= 72;  	}  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' len));  	line = reader.ReadLine ();  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (len > 72) {  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  	start += 72;  	len -= 72;  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (len > 72) {  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  	start += 72;  	len -= 72;  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (len > 72) {  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  	start += 72;  	len -= 72;  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: while (len > 72) {  	// Indent if not first line  	if (start != 0)  		folded.Append (" ");  	folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  	start += 72;  	len -= 72;  }  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: folded.AppendFormat ("{0}\r\n"' line.Substring (start' 72));  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: start += 72;  
Magic Number,Semaview.Shared.ICalParser,ICalUtil,C:\repos\dblock_sncore\ICalParser.Net\ICalUtil.cs,FoldLines,The following statement contains a magic number: len -= 72;  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: try {  	if (icalDate.Length >= 15) {  		string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  		if (icalDate.EndsWith ("Z"))  			rval += "Z";  		return rval;  	}  	return ParseDate (icalDate);  }  catch (Exception) {  	return ParseDate (icalDate);  	// if we can't convert it' try just the date format  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDateTime,The following statement contains a magic number: if (icalDate.Length >= 15) {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + 'T' + icalDate.Substring (9' 2) + ':' + icalDate.Substring (11' 2) + ':' + icalDate.Substring (13' 2);  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDate,The following statement contains a magic number: try {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + "T00:00:00";  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  catch (Exception) {  	//return icalDate;  // if we can't convert it - return maxdate string...  	string rval = String.Format ("{0:s}"' DateTime.MaxValue);  	rval.Replace (" "' "T");  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDate,The following statement contains a magic number: try {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + "T00:00:00";  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  catch (Exception) {  	//return icalDate;  // if we can't convert it - return maxdate string...  	string rval = String.Format ("{0:s}"' DateTime.MaxValue);  	rval.Replace (" "' "T");  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDate,The following statement contains a magic number: try {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + "T00:00:00";  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  catch (Exception) {  	//return icalDate;  // if we can't convert it - return maxdate string...  	string rval = String.Format ("{0:s}"' DateTime.MaxValue);  	rval.Replace (" "' "T");  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDate,The following statement contains a magic number: try {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + "T00:00:00";  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  catch (Exception) {  	//return icalDate;  // if we can't convert it - return maxdate string...  	string rval = String.Format ("{0:s}"' DateTime.MaxValue);  	rval.Replace (" "' "T");  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,ParseDate,The following statement contains a magic number: try {  	string rval = icalDate.Substring (0' 4) + '-' + icalDate.Substring (4' 2) + '-' + icalDate.Substring (6' 2) + "T00:00:00";  	if (icalDate.EndsWith ("Z"))  		rval += "Z";  	return rval;  }  catch (Exception) {  	//return icalDate;  // if we can't convert it - return maxdate string...  	string rval = String.Format ("{0:s}"' DateTime.MaxValue);  	rval.Replace (" "' "T");  	return rval;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,Token,The following statement contains a magic number: switch (state) {  case ScannerState.ParseID:  	tokenText = _tokenText.ToLower ();  	if (reservedWords.Contains (tokenText)) {  		tokenVal = (TokenValue)reservedWords [tokenText];  	}  	else if (tokenText.StartsWith ("x-")) {  		tokenVal = TokenValue.Xtension;  		tokenText = "x:" + tokenText.Substring (2);  	}  	else if (isID (tokenText))// this check may be unnecessary by virute of the scanner....  	 {  		tokenVal = TokenValue.ID;  	}  	else {  		tokenVal = TokenValue.Error;  		errorMessage = "Illegal value for ID";  	}  	if (isBeginEndValue ()) {  		tokenText = CapsCamelCase (tokenText);  	}  	else {  		tokenText = CamelCase (tokenText);  	}  	break;  case ScannerState.ParseParms:  	tokenText = _tokenText;  	// HttpUtility.HtmlEncode(_tokenText);  	if (quoteFlag) {  		tokenVal = TokenValue.QuotedString;  	}  	else {  		tokenVal = TokenValue.Parm;  	}  	break;  case ScannerState.ParseValue:  	tokenText = _tokenText;  	// HttpUtility.HtmlEncode(_tokenText);  	tokenVal = TokenValue.Value;  	break;  case ScannerState.ParseSimple:  	tokenVal = TokenValue.Error;  	errorMessage = "Bad constructor call - ParseSimple and text...";  	break;  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,Token,The following statement contains a magic number: if (reservedWords.Contains (tokenText)) {  	tokenVal = (TokenValue)reservedWords [tokenText];  }  else if (tokenText.StartsWith ("x-")) {  	tokenVal = TokenValue.Xtension;  	tokenText = "x:" + tokenText.Substring (2);  }  else if (isID (tokenText))// this check may be unnecessary by virute of the scanner....   {  	tokenVal = TokenValue.ID;  }  else {  	tokenVal = TokenValue.Error;  	errorMessage = "Illegal value for ID";  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,Token,The following statement contains a magic number: if (tokenText.StartsWith ("x-")) {  	tokenVal = TokenValue.Xtension;  	tokenText = "x:" + tokenText.Substring (2);  }  else if (isID (tokenText))// this check may be unnecessary by virute of the scanner....   {  	tokenVal = TokenValue.ID;  }  else {  	tokenVal = TokenValue.Error;  	errorMessage = "Illegal value for ID";  }  
Magic Number,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,Token,The following statement contains a magic number: tokenText = "x:" + tokenText.Substring (2);  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,NS,The following statement contains a magic number: if (tag.IndexOf (':') == -1) {  	return ical + tag;  }  else if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,NS,The following statement contains a magic number: if (tag.IndexOf (':') == -1) {  	return ical + tag;  }  else if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,NS,The following statement contains a magic number: if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,NS,The following statement contains a magic number: if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,NS,The following statement contains a magic number: return apple + tag.Substring (2);  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,RDF,The following statement contains a magic number: if (tag.IndexOf (':') == -1) {  	return rdf + tag;  }  else if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,RDF,The following statement contains a magic number: if (tag.IndexOf (':') == -1) {  	return rdf + tag;  }  else if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,RDF,The following statement contains a magic number: if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,RDF,The following statement contains a magic number: if (tag.StartsWith ("x:") && tag.Length > 2) {  	return apple + tag.Substring (2);  }  else {  	return tag;  }  
Magic Number,Semaview.Shared.ICalParser,TripleEmitter,C:\repos\dblock_sncore\ICalParser.Net\TripleEmitter.cs,RDF,The following statement contains a magic number: return apple + tag.Substring (2);  
Missing Default,Semaview.Shared.ICalParser,Scanner,C:\repos\dblock_sncore\ICalParser.Net\Scanner.cs,GetNextToken,The following switch statement is missing a default case: switch (state) {  case ScannerState.ParseKey:  	eatWhitespace ();  	return GetNextID ();  case ScannerState.ParseID:  	return GetNextID ();  case ScannerState.ParseParms:  	return GetNextParms ();  case ScannerState.ParseSimple:  	eatWhitespace ();  	return GetNextSimple ();  case ScannerState.ParseValue:  	Token rval = GetNextValue ();  	//ConsumeToEOL();  	return rval;  }  
Missing Default,Semaview.Shared.ICalParser,Token,C:\repos\dblock_sncore\ICalParser.Net\Token.cs,Token,The following switch statement is missing a default case: switch (state) {  case ScannerState.ParseID:  	tokenText = _tokenText.ToLower ();  	if (reservedWords.Contains (tokenText)) {  		tokenVal = (TokenValue)reservedWords [tokenText];  	}  	else if (tokenText.StartsWith ("x-")) {  		tokenVal = TokenValue.Xtension;  		tokenText = "x:" + tokenText.Substring (2);  	}  	else if (isID (tokenText))// this check may be unnecessary by virute of the scanner....  	 {  		tokenVal = TokenValue.ID;  	}  	else {  		tokenVal = TokenValue.Error;  		errorMessage = "Illegal value for ID";  	}  	if (isBeginEndValue ()) {  		tokenText = CapsCamelCase (tokenText);  	}  	else {  		tokenText = CamelCase (tokenText);  	}  	break;  case ScannerState.ParseParms:  	tokenText = _tokenText;  	// HttpUtility.HtmlEncode(_tokenText);  	if (quoteFlag) {  		tokenVal = TokenValue.QuotedString;  	}  	else {  		tokenVal = TokenValue.Parm;  	}  	break;  case ScannerState.ParseValue:  	tokenText = _tokenText;  	// HttpUtility.HtmlEncode(_tokenText);  	tokenVal = TokenValue.Value;  	break;  case ScannerState.ParseSimple:  	tokenVal = TokenValue.Error;  	errorMessage = "Bad constructor call - ParseSimple and text...";  	break;  }  
