Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,RepositoryExample.Data,CharacterBindings,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Bindings\CharacterBindings.cs,CharacterBindings,The method has 5 parameters.
Long Parameter List,RepositoryExample.Data,AccountValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\AccountValidator.cs,AccountValidator,The method has 5 parameters.
Long Parameter List,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The method has 13 parameters.
Long Statement,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,FactionAllowsRace,The length of the statement  "	if (character.Faction == CharacterFaction.Alliance && (race == CharacterRace.Gnome || race == CharacterRace.Human || race == CharacterRace.Worgen)) " is 147.
Long Statement,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,FactionAllowsRace,The length of the statement  "	if (character.Faction == CharacterFaction.Horde && (race == CharacterRace.BloodElf || race == CharacterRace.Orc || race == CharacterRace.Tauren)) " is 145.
Long Statement,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,RaceAllowsClass,The length of the statement  "	if (classs == CharacterClass.Druid && (character.Race != CharacterRace.Worgen && character.Race != CharacterRace.Tauren)) " is 121.
Complex Conditional,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,FactionAllowsRace,The conditional expression  "character.Faction == CharacterFaction.Alliance && (race == CharacterRace.Gnome || race == CharacterRace.Human || race == CharacterRace.Worgen)"  is complex.
Complex Conditional,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,FactionAllowsRace,The conditional expression  "character.Faction == CharacterFaction.Horde && (race == CharacterRace.BloodElf || race == CharacterRace.Orc || race == CharacterRace.Tauren)"  is complex.
Magic Number,RepositoryExample.Data,CharacterBindings,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Bindings\CharacterBindings.cs,CharacterBindings,The following statement contains a magic number: Property (m => m.Name).IsRequired ().HasMaxLength (12);  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The following statement contains a magic number: RuleFor (m => m.Name).NotEmpty ().Length (2' 12);  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The following statement contains a magic number: RuleFor (m => m.Name).NotEmpty ().Length (2' 12);  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The following statement contains a magic number: RuleFor (m => m.Level).NotEmpty ().InclusiveBetween (1' 85).Must (AboveDeathKnightMinimum).WithMessage ("Death Knight may not go below level 55");  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The following statement contains a magic number: RuleSet ("insert"' () =>  {  	// name validation rules  	RuleFor (m => m.Name).NotEmpty ().Length (2' 12).Must (NameIsAvailable).WithMessage ("{0} is already taken"' m => m.Name);  });  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The following statement contains a magic number: RuleSet ("insert"' () =>  {  	// name validation rules  	RuleFor (m => m.Name).NotEmpty ().Length (2' 12).Must (NameIsAvailable).WithMessage ("{0} is already taken"' m => m.Name);  });  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The following statement contains a magic number: RuleFor (m => m.Name).NotEmpty ().Length (2' 12).Must (NameIsAvailable).WithMessage ("{0} is already taken"' m => m.Name);  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,CharacterValidator,The following statement contains a magic number: RuleFor (m => m.Name).NotEmpty ().Length (2' 12).Must (NameIsAvailable).WithMessage ("{0} is already taken"' m => m.Name);  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,AboveDeathKnightMinimum,The following statement contains a magic number: if (character.Class == CharacterClass.DeathKnight && level < 55)  	return false;  
Magic Number,RepositoryExample.Data,CharacterValidator,C:\repos\ryancole_RepositoryExample\RepositoryExample.Data\Validators\CharacterValidator.cs,LevelAllowsDeathKnight,The following statement contains a magic number: if (m_characters.Count (m => m.Account.AccountId == character.Account.AccountId && m.Level >= 55) > 0)  	return true;  
