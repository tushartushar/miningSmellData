Implementation smell,Namespace,Class,File,Method,Description
Long Statement,JurassicCoffee.Core,CoffeeCompiler,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\CoffeeCompiler.cs,Compile,The length of the statement  "            var context = new CompilerContext(compilationRecorder' _isDebug) { WorkingDirectory = coffeeScriptFileInfo.Directory.FullName }; " is 128.
Long Statement,JurassicCoffee.Core,CoffeeCompiler,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\CoffeeCompiler.cs,Compile,The length of the statement  "            var inputFilePath = _preScriptLoadActions.Aggregate(coffeeScriptFileInfo.FullName' (current' action) => action(context' current)); " is 130.
Long Statement,JurassicCoffee.Core,CoffeeCompiler,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\CoffeeCompiler.cs,Compile,The length of the statement  "            context = new CompilerContext(context.CompilationRecorder' _isDebug) { WorkingDirectory = coffeeScriptFileInfo.Directory.FullName }; " is 132.
Long Statement,JurassicCoffee.Core,CoffeeCompiler,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\CoffeeCompiler.cs,Compile,The length of the statement  "            var javaScriptFilePath = Regex.Replace(coffeeScriptFileInfo.FullName' coffeeScriptFileInfo.Extension + "$"' ".js"' RegexOptions.IgnoreCase); " is 140.
Long Statement,JurassicCoffee.Core,CoffeeCompiler,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\CoffeeCompiler.cs,Compile,The length of the statement  "            javaScriptFilePath = _preScriptOutputActions.Aggregate(javaScriptFilePath' (current' action) => action(context' current)); " is 122.
Long Statement,JurassicCoffee.Core.Plugins,RequiredCoffeeFiles,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\Plugins\RequiredCoffeeFiles.cs,InsertRequiredFiles,The length of the statement  "                    requiredScriptSource = file.IsEmbedded ? requiredScriptSource.Replace("`"' "#JurassicCoffeeSplot#" + context.Id.ToString()) : requiredScriptSource; " is 147.
Long Statement,JurassicCoffee.Core.Plugins,RequiredCoffeeFiles,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\Plugins\RequiredCoffeeFiles.cs,InsertRequiredFiles,The length of the statement  "                        source = string.Format("`/*[DBG:BEGIN] FILE: {0}*/`{2}{1}{2}`/*[DBG:END] FILE: {0}*/`"' file.Location' source' Environment.NewLine); " is 132.
Long Statement,JurassicCoffee.Core.Plugins,RequiredCoffeeFiles,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\Plugins\RequiredCoffeeFiles.cs,InsertRequiredFiles,The length of the statement  "                context.CompilationRecorder.AddRecordEntry(new FileRecordEntry(file.Location' file.Protocol' file.IsEmbedded ? FileRecordEntry.FileInsertionMode.Embedded : FileRecordEntry.FileInsertionMode.Compiled' file.Location)); " is 216.
Magic Number,JurassicCoffee.Core.Plugins,RequiredCoffeeFiles,C:\repos\creamdog_JurassicCoffee\Source\JurassicCoffee.Core\Plugins\RequiredCoffeeFiles.cs,GetRequiredFiles,The following statement contains a magic number: foreach (Match match in matches)              {                  var location = match.Groups["requiredFile"].Value.Trim();                  var protocolString = match.Groups["protocol"].Value ?? string.Empty;                  var isEmbedded = location.EndsWith("`") && location.StartsWith("`");                  location = isEmbedded ? location.Substring(1' location.Length - 2) : location;                    var file = new RequiredFile                  {                      IsEmbedded = isEmbedded'                      Location = location'                      Protocol = FileProtocol.LocalFile'                      RegexMatch = match'                      Context = context                  };                    if (!string.IsNullOrEmpty(protocolString)) {                      FileProtocol protocol;                      Enum.TryParse<FileProtocol>(protocolString.Replace("://"' string.Empty)' true' out protocol);                      file.Protocol = protocol;                  }                    if (file.Protocol == FileProtocol.LocalFile)                      if (!new FileInfo(file.Location).Exists)                          file.Location = Path.Combine(context.WorkingDirectory' file.Location);                    result.Add(file);              }
