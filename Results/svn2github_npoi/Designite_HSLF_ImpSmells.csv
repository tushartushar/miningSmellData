Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NPOI.HSLF.Model.TextProperties,TextPropCollection,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Model\TextProperties\TextPropCollection.cs,AddWithName,Cyclomatic complexity of the method is 8
Complex Method,NPOI.HSLF.Model.TextProperties,TextPropCollection,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Model\TextProperties\TextPropCollection.cs,WriteOut,Cyclomatic complexity of the method is 8
Complex Method,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,Cyclomatic complexity of the method is 8
Complex Method,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,Cyclomatic complexity of the method is 8
Long Parameter List,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,WriteOut,The method has 5 parameters. Parameters: headerA' headerB' type' children' out1
Long Identifier,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,,The length of the parameter accentAndFollowingHyperlinkColourRGB is 36.
Long Statement,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,CreateRecordForType,The length of the statement  "                Console.Error.WriteLine("Warning: Skipping record of type " + type + " at position " + start + " which claims to be longer than the file! (" + len + " vs " + (b.Length - start) + ")"); " is 184.
Long Statement,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,CreateRecordForType,The length of the statement  "                throw new Exception("Couldn't instantiate the class for type with id " + type + " on class " + c + " : " + ite + "\nCause was : " + ite.Message' ite); " is 150.
Long Statement,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,CreateRecordForType,The length of the statement  "                throw new Exception("Couldn't access the constructor for type with id " + type + " on class " + c + " : " + nsme' nsme); " is 120.
Long Statement,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,AddChildAfter,The length of the statement  "                    throw new ArgumentException("Asked to add a new child after another record' but that record wasn't one of our children!"); " is 122.
Long Statement,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,AddChildBefore,The length of the statement  "                    throw new ArgumentException("Asked to add a new child before another record' but that record wasn't one of our children!"); " is 123.
Long Statement,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,MoveChildrenBefore,The length of the statement  "                    throw new ArgumentException("Asked to move children before another record' but that record wasn't one of our children!"); " is 121.
Long Statement,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,MoveChildrenAfter,The length of the statement  "                    throw new ArgumentException("Asked to move children before another record' but that record wasn't one of our children!"); " is 121.
Long Statement,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,The length of the statement  "                    logger.Log(POILogger.WARN' "Problem Reading paragraph style Runs: textHandled = " + textHandled + "' text.size+1 = " + (size + 1)); " is 131.
Long Statement,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,The length of the statement  "                    logger.Log(POILogger.WARN' "Problem Reading character style Runs: textHandled = " + textHandled + "' text.size+1 = " + (size + 1)); " is 131.
Magic Number,NPOI.HSLF.Model.TextProperties,TextPropCollection,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Model\TextProperties\TextPropCollection.cs,BuildTextPropList,The following statement contains a magic number: prop.GetSize() == 2
Magic Number,NPOI.HSLF.Model.TextProperties,TextPropCollection,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Model\TextProperties\TextPropCollection.cs,WriteOut,The following statement contains a magic number: textProp.GetSize() == 2
Magic Number,NPOI.HSLF.Record,AnimationInfo,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfo.cs,AnimationInfo,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,AnimationInfo,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfo.cs,AnimationInfo,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,AnimationInfo,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfo.cs,AnimationInfo,The following statement contains a magic number: _children = Record.FindChildRecords(source' start + 8' len - 8);
Magic Number,NPOI.HSLF.Record,AnimationInfo,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfo.cs,AnimationInfo,The following statement contains a magic number: _children = Record.FindChildRecords(source' start + 8' len - 8);
Magic Number,NPOI.HSLF.Record,AnimationInfo,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfo.cs,AnimationInfo,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,AnimationInfo,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfo.cs,AnimationInfo,The following statement contains a magic number: LittleEndian.PutShort(_header' 2' (short)RecordType);
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: _recdata = new byte[28];
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: LittleEndian.PutShort(_header' 2' (short)RecordType);
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _recdata.Length);
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: _recdata = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _recdata' 0' len - 8);
Magic Number,NPOI.HSLF.Record,AnimationInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\AnimationInfoAtom.cs,AnimationInfoAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _recdata' 0' len - 8);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: len = 40;
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: source.Length - start < 40
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: len < 40
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: backgroundColourRGB = LittleEndian.GetInt(source' start + 8 + 0);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: textAndLinesColourRGB = LittleEndian.GetInt(source' start + 8 + 4);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: textAndLinesColourRGB = LittleEndian.GetInt(source' start + 8 + 4);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: shadowsColourRGB = LittleEndian.GetInt(source' start + 8 + 8);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: shadowsColourRGB = LittleEndian.GetInt(source' start + 8 + 8);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: titleTextColourRGB = LittleEndian.GetInt(source' start + 8 + 12);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: titleTextColourRGB = LittleEndian.GetInt(source' start + 8 + 12);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: FillsColourRGB = LittleEndian.GetInt(source' start + 8 + 16);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: FillsColourRGB = LittleEndian.GetInt(source' start + 8 + 16);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentColourRGB = LittleEndian.GetInt(source' start + 8 + 20);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentColourRGB = LittleEndian.GetInt(source' start + 8 + 20);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentAndHyperlinkColourRGB = LittleEndian.GetInt(source' start + 8 + 24);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentAndHyperlinkColourRGB = LittleEndian.GetInt(source' start + 8 + 24);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentAndFollowingHyperlinkColourRGB = LittleEndian.GetInt(source' start + 8 + 28);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentAndFollowingHyperlinkColourRGB = LittleEndian.GetInt(source' start + 8 + 28);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: LittleEndian.PutUShort(_header' 0' 16);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: LittleEndian.PutUShort(_header' 2' (int)_type);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' 32);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' 32);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: backgroundColourRGB = 16777215;
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: shadowsColourRGB = 8421504;
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: FillsColourRGB = 10079232;
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentColourRGB = 13382451;
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentAndHyperlinkColourRGB = 16764108;
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,ColorSchemeAtom,The following statement contains a magic number: accentAndFollowingHyperlinkColourRGB = 11711154;
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,SplitRGB,The following statement contains a magic number: byte[] ret = new byte[3];
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,SplitRGB,The following statement contains a magic number: Array.Copy(b' 0' ret' 0' 3);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,JoinRGB,The following statement contains a magic number: rgb.Length != 3
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,JoinRGB,The following statement contains a magic number: byte[] with_zero = new byte[4];
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,JoinRGB,The following statement contains a magic number: System.Array.Copy(rgb' 0' with_zero' 0' 3);
Magic Number,NPOI.HSLF.Record,ColorSchemeAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\ColorSchemeAtom.cs,JoinRGB,The following statement contains a magic number: with_zero[3] = 0;
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: _children = Record.FindChildRecords(source' start + 8' len - 8);
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: _children = Record.FindChildRecords(source' start + 8' len - 8);
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,FindInterestingChildren,The following statement contains a magic number: int recInstance = cs.Options >> 4;
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,FindInterestingChildren,The following statement contains a magic number: switch (recInstance)                      {                          case 0: authorRecord = cs; break;                          case 1: commentRecord = cs; break;                          case 2: authorInitialsRecord = cs; break;                      }
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: _children = new Record[4];
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: LittleEndian.PutShort(_header' 2' (short)_type);
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: _children[2] = csc;
Magic Number,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,Comment2000,The following statement contains a magic number: _children[3] = new Comment2000Atom();
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: _data = new byte[28];
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: LittleEndian.PutShort(_header' 2' (short)RecordType);
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _data.Length);
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: _data = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,Comment2000Atom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000Atom.cs,Comment2000Atom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: len = 8;
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: len < 8
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: _text = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: Array.Copy(source' start + 8' _text' 0' len - 8);
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: Array.Copy(source' start + 8' _text' 0' len - 8);
Magic Number,NPOI.HSLF.Record,CString,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\CString.cs,CString,The following statement contains a magic number: _header = new byte[] { 0' 0' unchecked((byte)(0xBA - 256))' 0x0f' 0' 0' 0' 0 };
Magic Number,NPOI.HSLF.Record,DummyPositionSensitiveRecordWithChildren,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\DummyPositionSensitiveRecordWithChildren.cs,DummyPositionSensitiveRecordWithChildren,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,DummyPositionSensitiveRecordWithChildren,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\DummyPositionSensitiveRecordWithChildren.cs,DummyPositionSensitiveRecordWithChildren,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,DummyPositionSensitiveRecordWithChildren,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\DummyPositionSensitiveRecordWithChildren.cs,DummyPositionSensitiveRecordWithChildren,The following statement contains a magic number: _type = LittleEndian.GetUShort(_header' 2);
Magic Number,NPOI.HSLF.Record,DummyPositionSensitiveRecordWithChildren,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\DummyPositionSensitiveRecordWithChildren.cs,DummyPositionSensitiveRecordWithChildren,The following statement contains a magic number: _children = Record.FindChildRecords(source' start + 8' len - 8);
Magic Number,NPOI.HSLF.Record,DummyPositionSensitiveRecordWithChildren,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\DummyPositionSensitiveRecordWithChildren.cs,DummyPositionSensitiveRecordWithChildren,The following statement contains a magic number: _children = Record.FindChildRecords(source' start + 8' len - 8);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,AddSlideLookup,The following statement contains a magic number: byte[] newPtrData = new byte[_ptrData.Length + 8];
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,AddSlideLookup,The following statement contains a magic number: _slideoffsetDataLocation[slideID] =                      _ptrData.Length + 4;
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,AddSlideLookup,The following statement contains a magic number: infoBlock += (1 << 20);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,AddSlideLookup,The following statement contains a magic number: LittleEndian.PutInt(newPtrData' newPtrData.Length - 8' infoBlock);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,AddSlideLookup,The following statement contains a magic number: LittleEndian.PutInt(newPtrData' newPtrData.Length - 4' posOnDisk);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,AddSlideLookup,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' newPtrData.Length);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: len = 8;
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: len < 8
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: _type = LittleEndian.GetUShort(_header' 2);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: _ptrData = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: Array.Copy(source' start + 8' _ptrData' 0' _ptrData.Length);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: int offset_count = (int)(info >> 20);
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: int offset_no = (int)(info - (offset_count << 20));
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,PersistPtrHolder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\PersistPtrHolder.cs,PersistPtrHolder,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,WriteLittleEndian,The following statement contains a magic number: byte[] bi = new byte[4];
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,WriteLittleEndian,The following statement contains a magic number: byte[] bs = new byte[2];
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,BuildRecordAtOffset,The following statement contains a magic number: long type = LittleEndian.GetUShort(b' offset + 2);
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,BuildRecordAtOffset,The following statement contains a magic number: long rlen = LittleEndian.GetUInt(b' offset + 4);
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,BuildRecordAtOffset,The following statement contains a magic number: return CreateRecordForType(type' b' offset' 8 + rleni);
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,FindChildRecords,The following statement contains a magic number: List<Record> children = new List<Record>(5);
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,FindChildRecords,The following statement contains a magic number: long type = LittleEndian.GetUShort(b' pos + 2);
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,FindChildRecords,The following statement contains a magic number: long rlen = LittleEndian.GetUInt(b' pos + 4);
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,FindChildRecords,The following statement contains a magic number: Record r = CreateRecordForType(type' b' pos' 8 + rleni);
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,FindChildRecords,The following statement contains a magic number: pos += 8;
Magic Number,NPOI.HSLF.Record,Record,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Record.cs,FindChildRecords,The following statement contains a magic number: pos <= (start + len - 8)
Magic Number,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,WriteOut,The following statement contains a magic number: byte[] typeB = new byte[2];
Magic Number,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,WriteOut,The following statement contains a magic number: mout.Write(new byte[4]);
Magic Number,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,WriteOut,The following statement contains a magic number: int length = mout.GetBytesWritten() - oldSize - 8;
Magic Number,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,WriteOut,The following statement contains a magic number: byte[] size = new byte[4];
Magic Number,NPOI.HSLF.Record,RecordContainer,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RecordContainer.cs,WriteOut,The following statement contains a magic number: mout.OverWrite(size' oldSize + 4);
Magic Number,NPOI.HSLF.Record,RoundTripHFPlaceholder12,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RoundTripHFPlaceholder12.cs,RoundTripHFPlaceholder12,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,RoundTripHFPlaceholder12,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RoundTripHFPlaceholder12.cs,RoundTripHFPlaceholder12,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,RoundTripHFPlaceholder12,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\RoundTripHFPlaceholder12.cs,RoundTripHFPlaceholder12,The following statement contains a magic number: _placeholderId = source[start + 8];
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: LittleEndian.PutShort(_header' 2' (short)RecordType);
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _data.Length);
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: _data = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,SoundData,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\SoundData.cs,SoundData,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: len = 18;
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: source.Length - start < 18
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: len < 18
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: rawContents = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: Array.Copy(source' start + 8' rawContents' 0' rawContents.Length);
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 2' (short)_type);
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' 10);
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,StyleTextPropAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' 10);
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,WriteOut,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' newSize);
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,The following statement contains a magic number: pos += 2;
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,StyleTextPropAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\StyleTextPropAtom.cs,SetParentTextSize,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,SetText,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _text.Length);
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: len = 8;
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: len < 8
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: _text = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _text' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _text' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: LittleEndian.PutUShort(_header' 2' (int)_type);
Magic Number,NPOI.HSLF.Record,TextBytesAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextBytesAtom.cs,TextBytesAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' 0);
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,SetText,The following statement contains a magic number: _text = new byte[text.Length * 2];
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,SetText,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _text.Length);
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: len = 8;
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: len < 8
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: _text = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _text' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _text' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextCharsAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextCharsAtom.cs,TextCharsAtom,The following statement contains a magic number: _header = new byte[] { 0' 0' unchecked((byte)(0xA0 - 256))' 0x0f' 0' 0' 0' 0 };
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: len = 12;
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: source.Length - start < 12
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: len < 12
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: textType = LittleEndian.GetInt(source' start + 8);
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: LittleEndian.PutUShort(_header' 2' (int)_type);
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' 4);
Magic Number,NPOI.HSLF.Record,TextHeaderAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextHeaderAtom.cs,TextHeaderAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' 4);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: LittleEndian.PutShort(_header' 2' (short)RecordType);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _data.Length);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: _data = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,TextRulerAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: int[] bits = { 1' 0' 2' 3' 8' 4' 9' 5' 10' 6' 11' 7' 12 };
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following statement contains a magic number: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,SetParagraphIndent,The following statement contains a magic number: LittleEndian.PutShort(_data' 4' tetxOffSet);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,SetParagraphIndent,The following statement contains a magic number: LittleEndian.PutShort(_data' 6' bulletOffSet);
Magic Number,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,SetParagraphIndent,The following statement contains a magic number: LittleEndian.PutShort(_data' 8' bulletOffSet);
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,TextSpecInfoAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,TextSpecInfoAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,TextSpecInfoAtom,The following statement contains a magic number: _data = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,TextSpecInfoAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,TextSpecInfoAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,Reset,The following statement contains a magic number: _data = new byte[10];
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,Reset,The following statement contains a magic number: LittleEndian.PutInt(_data' 4' 1);
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,Reset,The following statement contains a magic number: LittleEndian.PutShort(_data' 8' (short)0);
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,Reset,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _data.Length);
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following statement contains a magic number: int[] bits = { 1' 0' 2 };
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following statement contains a magic number: pos += 4;
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following statement contains a magic number: switch (bits[i])                          {                              case 0:                                  run.spellInfo = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 1:                                  run.langId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 2:                                  run.altLangId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                          }
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following statement contains a magic number: switch (bits[i])                          {                              case 0:                                  run.spellInfo = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 1:                                  run.langId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 2:                                  run.altLangId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                          }
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following statement contains a magic number: switch (bits[i])                          {                              case 0:                                  run.spellInfo = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 1:                                  run.langId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 2:                                  run.altLangId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                          }
Magic Number,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following statement contains a magic number: switch (bits[i])                          {                              case 0:                                  run.spellInfo = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 1:                                  run.langId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 2:                                  run.altLangId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                          }
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: _data = new byte[8];
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: LittleEndian.PutShort(_header' 2' (short)RecordType);
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: LittleEndian.PutInt(_header' 4' _data.Length);
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: _header = new byte[8];
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: Array.Copy(source' start' _header' 0' 8);
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: _data = new byte[len - 8];
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,TxInteractiveInfoAtom,The following statement contains a magic number: Array.Copy(source' start + 8' _data' 0' len - 8);
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,GetEndIndex,The following statement contains a magic number: return LittleEndian.GetInt(_data' 4);
Magic Number,NPOI.HSLF.Record,TxInteractiveInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TxInteractiveInfoAtom.cs,SetEndIndex,The following statement contains a magic number: LittleEndian.PutInt(_data' 4' idx);
Magic Number,NPOI.HSLF.Record,UnknownRecordPlaceholder,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\UnknownRecordPlaceholder.cs,UnknownRecordPlaceholder,The following statement contains a magic number: _type = LittleEndian.GetUShort(_contents' 2);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,GetDate,The following statement contains a magic number: short month=LittleEndian.GetShort(data' offset + 2);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,GetDate,The following statement contains a magic number: short day=LittleEndian.GetShort(data' offset + 6);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,GetDate,The following statement contains a magic number: short hour=LittleEndian.GetShort(data' offset + 8);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,GetDate,The following statement contains a magic number: short minute= LittleEndian.GetShort(data' offset + 10);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,GetDate,The following statement contains a magic number: short second= LittleEndian.GetShort(data' offset + 12);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,GetDate,The following statement contains a magic number: short millisecond= LittleEndian.GetShort(data' offset + 14);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,StoreDate,The following statement contains a magic number: LittleEndian.PutShort(dest' offset + 2' (short)date.Month);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,StoreDate,The following statement contains a magic number: LittleEndian.PutShort(dest' offset + 4' (short)date.DayOfWeek);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,StoreDate,The following statement contains a magic number: LittleEndian.PutShort(dest' offset + 6' (short)date.Day);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,StoreDate,The following statement contains a magic number: LittleEndian.PutShort(dest' offset + 8' (short)date.Hour);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,StoreDate,The following statement contains a magic number: LittleEndian.PutShort(dest' offset + 10' (short)date.Minute);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,StoreDate,The following statement contains a magic number: LittleEndian.PutShort(dest' offset + 12' (short)date.Second);
Magic Number,NPOI.HSLF.Util,SystemTimeUtils,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Util\SystemTimeUtils.cs,StoreDate,The following statement contains a magic number: LittleEndian.PutShort(dest' offset + 14' (short)date.Millisecond);
Missing Default,NPOI.HSLF.Record,Comment2000,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\Comment2000.cs,FindInterestingChildren,The following switch statement is missing a default case: switch (recInstance)                      {                          case 0: authorRecord = cs; break;                          case 1: commentRecord = cs; break;                          case 2: authorInitialsRecord = cs; break;                      }
Missing Default,NPOI.HSLF.Record,TextRulerAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextRulerAtom.cs,Read,The following switch statement is missing a default case: switch (bits[i])                      {                          case 0:                              //defaultTabSize                              defaultTabSize = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 1:                              //numLevels                              numLevels = LittleEndian.GetShort(_data' pos); pos += 2;                              break;                          case 2:                              //tabStops                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              tabStops = new int[val * 2];                              for (int j = 0; j < tabStops.Length; j++)                              {                                  tabStops[j] = LittleEndian.GetUShort(_data' pos); pos += 2;                              }                              break;                          case 3:                          case 4:                          case 5:                          case 6:                          case 7:                              //bullet.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              bulletOffSets[bits[i] - 3] = val;                              break;                          case 8:                          case 9:                          case 10:                          case 11:                          case 12:                              //text.offset                              val = LittleEndian.GetShort(_data' pos); pos += 2;                              textOffSets[bits[i] - 8] = val;                              break;                      }
Missing Default,NPOI.HSLF.Record,TextSpecInfoAtom,D:\research\architectureSmells\repos1\svn2github_npoi\scratchpad\HSLF\Record\TextSpecInfoAtom.cs,GetTextSpecInfoRuns,The following switch statement is missing a default case: switch (bits[i])                          {                              case 0:                                  run.spellInfo = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 1:                                  run.langId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                              case 2:                                  run.altLangId = LittleEndian.GetShort(_data' pos); pos += 2;                                  break;                          }
