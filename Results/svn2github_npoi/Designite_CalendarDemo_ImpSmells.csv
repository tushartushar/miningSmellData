Implementation smell,Namespace,Class,File,Method,Description
Long Method,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The method has 101 lines of code.
Complex Method,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,Cyclomatic complexity of the method is 11
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,Main,The following statement contains a magic number: for (int month = 0; month < 12; month++)              {                  dtM = new DateTime(dt.Year' month + 1' 1);                  //calendar.set(Calendar.MONTH' month);                  //calendar.set(Calendar.DAY_OF_MONTH' 1);                  //create a sheet for each month                  ISheet sheet = wb.CreateSheet(months[month]);                    //turn off gridlines                  sheet.DisplayGridlines = (false);                  sheet.IsPrintGridlines = (false);                  sheet.FitToPage = (true);                  sheet.HorizontallyCenter = (true);                  IPrintSetup printSetup = sheet.PrintSetup;                  printSetup.Landscape = (true);                    //the following three statements are required only for HSSF                  sheet.Autobreaks = (true);                  printSetup.FitHeight = ((short)1);                  printSetup.FitWidth = ((short)1);                    //the header row: centered text in 48pt font                  IRow headerRow = sheet.CreateRow(0);                  headerRow.HeightInPoints = (80);                  ICell titleCell = headerRow.CreateCell(0);                  titleCell.SetCellValue(months[month] + " " + year);                  titleCell.CellStyle = (styles[("title")]);                  sheet.AddMergedRegion(CellRangeAddress.ValueOf("$A$1:$N$1"));                    //header with month titles                  IRow monthRow = sheet.CreateRow(1);                  for (int i = 0; i < days.Length; i++)                  {                      //set column widths' the width is measured in units of 1/256th of a character width                      sheet.SetColumnWidth(i * 2' 5 * 256); //the column is 5 characters wide                      sheet.SetColumnWidth(i * 2 + 1' 13 * 256); //the column is 13 characters wide                      sheet.AddMergedRegion(new CellRangeAddress(1' 1' i * 2' i * 2 + 1));                      ICell monthCell = monthRow.CreateCell(i * 2);                      monthCell.SetCellValue(days[i]);                      monthCell.CellStyle = (styles["month"]);                  }                    int cnt = 1' day = 1;                  int rownum = 2;                  for (int j = 0; j < 6; j++)                  {                      IRow row = sheet.CreateRow(rownum++);                      row.HeightInPoints = (100);                      for (int i = 0; i < days.Length; i++)                      {                          ICell dayCell_1 = row.CreateCell(i * 2);                          ICell dayCell_2 = row.CreateCell(i * 2 + 1);                            int day_of_week = (int)dtM.DayOfWeek;                          if (cnt >= day_of_week && dtM.Month == (month+1))                          {                              dayCell_1.SetCellValue(day);                              //calendar.set(Calendar.DAY_OF_MONTH' ++day);                              dtM.AddDays(++day);                                if (i == 0 || i == days.Length - 1)                              {                                  dayCell_1.CellStyle = (styles["weekend_left"]);                                  dayCell_2.CellStyle = (styles["weekend_right"]);                              }                              else                              {                                  dayCell_1.CellStyle = (styles["workday_left"]);                                  dayCell_2.CellStyle = (styles["workday_right"]);                              }                          }                          else                          {                              dayCell_1.CellStyle = (styles["grey_left"]);                              dayCell_2.CellStyle = (styles["grey_right"]);                          }                          cnt++;                      }                      if (dtM.Month > (month+1)) break;                  }              }
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,createStyles,The following statement contains a magic number: titleFont.FontHeightInPoints = ((short)48);
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,createStyles,The following statement contains a magic number: monthFont.FontHeightInPoints = ((short)12);
Magic Number,CalendarDemo,Program,C:\repos\svn2github_npoi\examples\hssf\CalendarDemo\Program.cs,createStyles,The following statement contains a magic number: dayFont.FontHeightInPoints = ((short)14);
