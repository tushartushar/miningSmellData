Implementation smell,Namespace,Class,File,Method,Description
Long Method,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The method has 126 lines of code.
Long Parameter List,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,assertLevels,The method has 5 parameters. Parameters: documentRange' styleSheet' parIndex' expectedStyleLvl' expectedParLvl
Long Identifier,TestCases,POIDataSamples,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\POIDataSamples.cs,,The length of the parameter _sampleDataIsAvaliableOnClassPath is 33.
Long Statement,TestCases.HSSF.Converter,TestExcelToHtmlConverterSuite,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HSSF\Converter\TestExcelToHtmlConverterSuite.cs,TestExcelToHtmlConverter,The length of the statement  "            Assert.IsTrue(failingFiles.Count == 0' "{0}({1}) files failed to convert to html. see " + output' failingFiles.Count' toConverter.Count); " is 137.
Long Statement,TestCases.HWPF.Converter,TestWordToFoConverter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestWordToFoConverter.cs,getFoText,The length of the statement  "            HWPFDocument hwpfDocument = new HWPFDocument(POIDataSamples.GetDocumentInstance().OpenResourceAsStream(sampleFileName)); " is 120.
Long Statement,NPOI.HWPF.Model,TestCHPBinTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestCHPBinTable.cs,TestReadWrite,The length of the statement  "            _cHPBinTable = new CHPBinTable(mainStream' tableStream' fib.GetFcPlcfbteChpx()' fib.GetLcbPlcfbteChpx()' fcMin' fakeTPT); " is 121.
Long Statement,NPOI.HWPF.Model,TestPAPBinTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPAPBinTable.cs,TestReadWrite,The length of the statement  "            _pAPBinTable = new PAPBinTable(mainStream' tableStream' null' fib.GetFcPlcfbtePapx()' fib.GetLcbPlcfbtePapx()' fakeTPT); " is 120.
Long Statement,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestOddEven,The length of the statement  "                    "\u0007Page \u0013 PAGE  \\* MERGEFORMAT \u00142\u0015\u0007\u0007\u0007\u0007\u0007\u0007\u0007This is a simple footer on the second page\r\r"' " is 144.
Long Statement,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestOddEven,The length of the statement  "                    "\u0007Page \u0013 PAGE  \\* MERGEFORMAT \u00142\u0015\u0007\u0007\u0007\u0007\u0007\u0007\u0007This is a simple footer on the second page\r\r"' " is 144.
Long Statement,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The length of the statement  "            Assert.AreEqual(0' pic2.DxaCropLeft);       // TODO YK: The Picture is cropped but HWPF reads the crop parameters all zeros " is 123.
Empty Catch Block,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord95,The method has an empty catch block.
Empty Catch Block,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord6,The method has an empty catch block.
Empty Catch Block,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestEncryptedFile,The method has an empty catch block.
Empty Catch Block,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6,The method has an empty catch block.
Empty Catch Block,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The method has an empty catch block.
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(6' result.Length);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(1062' result[1]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(5738' result[2]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(5738' result[2]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(6872' result[3]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(6872' result[3]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(8148' result[4]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(8148' result[4]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(9302' result[5]);
Magic Number,TestCases.HWPF.Converter,AbstractWordUtilsTest,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\AbstractWordUtilsTest.cs,TestBuildTableCellEdgesArray,The following statement contains a magic number: Assert.AreEqual(9302' result[5]);
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("i"' NumberFormatter.GetNumber(1' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("ii"' NumberFormatter.GetNumber(2' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("ii"' NumberFormatter.GetNumber(2' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("iii"' NumberFormatter.GetNumber(3' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("iii"' NumberFormatter.GetNumber(3' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("iv"' NumberFormatter.GetNumber(4' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("iv"' NumberFormatter.GetNumber(4' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("v"' NumberFormatter.GetNumber(5' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("v"' NumberFormatter.GetNumber(5' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("vi"' NumberFormatter.GetNumber(6' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("vi"' NumberFormatter.GetNumber(6' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("vii"' NumberFormatter.GetNumber(7' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("vii"' NumberFormatter.GetNumber(7' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("viii"' NumberFormatter.GetNumber(8' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("viii"' NumberFormatter.GetNumber(8' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("ix"' NumberFormatter.GetNumber(9' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("ix"' NumberFormatter.GetNumber(9' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("x"' NumberFormatter.GetNumber(10' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("x"' NumberFormatter.GetNumber(10' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("mdcvi"' NumberFormatter.GetNumber(1606' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("mdcvi"' NumberFormatter.GetNumber(1606' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("mcmx"' NumberFormatter.GetNumber(1910' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("mcmx"' NumberFormatter.GetNumber(1910' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("mcmliv"' NumberFormatter.GetNumber(1954' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestRoman,The following statement contains a magic number: Assert.AreEqual("mcmliv"' NumberFormatter.GetNumber(1954' 2));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("a"' NumberFormatter.GetNumber(1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("z"' NumberFormatter.GetNumber(26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("z"' NumberFormatter.GetNumber(26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aa"' NumberFormatter.GetNumber(1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aa"' NumberFormatter.GetNumber(1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("az"' NumberFormatter.GetNumber(1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("az"' NumberFormatter.GetNumber(1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("az"' NumberFormatter.GetNumber(1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("za"' NumberFormatter.GetNumber(26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("za"' NumberFormatter.GetNumber(26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("za"' NumberFormatter.GetNumber(26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zz"' NumberFormatter.GetNumber(26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zz"' NumberFormatter.GetNumber(26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zz"' NumberFormatter.GetNumber(26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zz"' NumberFormatter.GetNumber(26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaa"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaa"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaa"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaa"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaz"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaz"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaz"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaz"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aaz"'                         NumberFormatter.GetNumber(26 * 26 + 1 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aba"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 2 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aba"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 2 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aba"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 2 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aba"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 2 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aba"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 2 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aza"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aza"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aza"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aza"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("aza"'                         NumberFormatter.GetNumber(1 * 26 * 26 + 26 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("azz"'                         NumberFormatter.GetNumber(26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("azz"'                         NumberFormatter.GetNumber(26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("azz"'                         NumberFormatter.GetNumber(26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("azz"'                         NumberFormatter.GetNumber(26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("azz"'                         NumberFormatter.GetNumber(26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("azz"'                         NumberFormatter.GetNumber(26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("baa"'                         NumberFormatter.GetNumber(2 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("baa"'                         NumberFormatter.GetNumber(2 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("baa"'                         NumberFormatter.GetNumber(2 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("baa"'                         NumberFormatter.GetNumber(2 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("baa"'                         NumberFormatter.GetNumber(2 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zaa"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zaa"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zaa"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zaa"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zaa"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 1 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual("zzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "aaaa"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 1 * 26 * 26 + 1                                 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "aaaa"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 1 * 26 * 26 + 1                                 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "aaaa"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 1 * 26 * 26 + 1                                 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "aaaa"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 1 * 26 * 26 + 1                                 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "aaaa"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 1 * 26 * 26 + 1                                 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "aaaa"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 1 * 26 * 26 + 1                                 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "aaaa"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 1 * 26 * 26 + 1                                 * 26 + 1' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "azzz"'                         NumberFormatter.GetNumber(1 * 26 * 26 * 26 + 26 * 26 * 26 + 26                                 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: Assert.AreEqual(                         "zzzz"'                         NumberFormatter.GetNumber(26 * 26 * 26 * 26 + 26 * 26 * 26                                 + 26 * 26 + 26' 4));
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: NumberFormatter.GetNumber(i' 4);
Magic Number,TestCases.HWPF.Converter,TestNumberFormatter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestNumberFormatter.cs,TestEnglish,The following statement contains a magic number: i < 1000000
Magic Number,TestCases.HWPF.Converter,TestWordToHtmlConverter,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Converter\TestWordToHtmlConverter.cs,TestAIOOBTap,The following statement contains a magic number: AssertContains(result.Substring(0' 6000)' "<table class=\"t1\">");
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestExtractFromParagraphs,The following statement contains a magic number: Assert.AreEqual(24' extractor2.ParagraphText.Length);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestExtractFromParagraphs,The following statement contains a magic number: Assert.AreEqual("as d\r\n"' extractor2.ParagraphText[16]);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestExtractFromParagraphs,The following statement contains a magic number: Assert.AreEqual("as d\r\n"' extractor2.ParagraphText[17]);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestExtractFromParagraphs,The following statement contains a magic number: Assert.AreEqual("as d\r\n"' extractor2.ParagraphText[18]);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestExtractFromEmbeded,The following statement contains a magic number: Assert.IsTrue(extractor3.Text.Length > 20);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestExtractFromEmbeded,The following statement contains a magic number: Assert.IsTrue(extractor3.Text.Length > 20);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(7' tp.Length);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual("Paragraph 2\r\n"' tp[2]);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual("\r\n"' tp[3]);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual("Paragraph 3. Has some RED text and some BLUE BOLD text in it.\r\n"' tp[4]);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual("\r\n"' tp[5]);
Magic Number,TestCases.HWPF.Extractor,TestWordExtractor,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Extractor\TestWordExtractor.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual("Last (4th) paragraph.\r\n"' tp[6]);
Magic Number,TestCases.HWPF,HWPFTestDataSamples,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\HWPFTestDataSamples.cs,WriteOutAndReadBack,The following statement contains a magic number: MemoryStream baos = new MemoryStream(4096);
Magic Number,TestCases.HWPF,TestHWPFPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFPictures.cs,TestImageCount,The following statement contains a magic number: Assert.AreEqual(7' picturesA.Count);
Magic Number,TestCases.HWPF,TestHWPFPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFPictures.cs,TestImageCount,The following statement contains a magic number: Assert.AreEqual(2' picturesB.Count);
Magic Number,TestCases.HWPF,TestHWPFPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFPictures.cs,TestImageData,The following statement contains a magic number: Assert.AreEqual(2' picturesB.Count);
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(                          a_page_1.Length +                          2 + // page break                          a_page_2.Length'                          doc._cpSplit.GetMainDocumentEnd()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(                          238'                          doc._cpSplit.GetFootnoteStart()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(                          238'                          doc._cpSplit.GetFootnoteEnd()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(                          238'                          doc._cpSplit.GetHeaderStoryStart()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(                          238 + headerDef.Length + a_header.Length +                          footerDef.Length + a_footer.Length + endHeaderFooter.Length'                          doc._cpSplit.GetHeaderStoryEnd()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasics,The following statement contains a magic number: run < 3
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestContents,The following statement contains a magic number: run < 3
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasicsUnicode,The following statement contains a magic number: Assert.AreEqual(                          u_page_1.Length +                          2 + // page break                          u_page_2.Length'                          doc._cpSplit.GetMainDocumentEnd()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasicsUnicode,The following statement contains a magic number: Assert.AreEqual(                          408'                          doc._cpSplit.GetFootnoteStart()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasicsUnicode,The following statement contains a magic number: Assert.AreEqual(                          408'                          doc._cpSplit.GetFootnoteEnd()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasicsUnicode,The following statement contains a magic number: Assert.AreEqual(                          408'                          doc._cpSplit.GetHeaderStoryStart()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasicsUnicode,The following statement contains a magic number: Assert.AreEqual(                          408 + headerDef.Length + u_header.Length +                          footerDef.Length + u_footer.Length + endHeaderFooter.Length'                          doc._cpSplit.GetHeaderStoryEnd()                  );
Magic Number,TestCases.HWPF,TestHWPFRangeParts,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\TestHWPFRangeParts.cs,TestBasicsUnicode,The following statement contains a magic number: run < 3
Magic Number,NPOI.HWPF.Model,TestBookmarksTables,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestBookmarksTables.cs,TestBookmarks,The following statement contains a magic number: Assert.AreEqual(27' bookmark.Start);
Magic Number,NPOI.HWPF.Model,TestBookmarksTables,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestBookmarksTables.cs,TestBookmarks,The following statement contains a magic number: Assert.AreEqual(38' bookmark.End);
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: _plexOfCps = new PlexOfCps(4);
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: byte[] intHolder = new byte[4];
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: int span = (int)(110.0f * (new Random((int)DateTime.Now.Ticks).Next(0'100)/100.0));
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: int span = (int)(110.0f * (new Random((int)DateTime.Now.Ticks).Next(0'100)/100.0));
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: int span = (int)(110.0f * (new Random((int)DateTime.Now.Ticks).Next(0'100)/100.0));
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: x < 110
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: _plexOfCps = new PlexOfCps(output' 0' output.Length' 4);
Magic Number,NPOI.HWPF.Model,TestPlexOfCps,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestPlexOfCps.cs,TestWriteRead,The following statement contains a magic number: Assert.AreEqual(len' 110);
Magic Number,NPOI.HWPF.Model,TestStyleSheet,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestStyleSheet.cs,TestReadWriteFromNonZeroOffset,The following statement contains a magic number: tableOut.Write(new byte[20]);
Magic Number,NPOI.HWPF.Model,TestStyleSheet,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestStyleSheet.cs,TestReadWriteFromNonZeroOffset,The following statement contains a magic number: StyleSheet newStyleSheet = new StyleSheet(newTableStream' 20);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestAsciiParts,The following statement contains a magic number: Assert.AreEqual(339' tp.End);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestAsciiParts,The following statement contains a magic number: Assert.AreEqual(339' tp.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestAsciiParts,The following statement contains a magic number: Assert.AreEqual(339' tp.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestAsciiParts,The following statement contains a magic number: Assert.AreEqual(339' tp.End);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestAsciiParts,The following statement contains a magic number: Assert.AreEqual(339' tp.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestAsciiParts,The following statement contains a magic number: Assert.AreEqual(339' tp.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(3' tbl.TextPieces.Count);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: TextPiece tpC = (TextPiece)tbl.TextPieces[2];
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpA.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpB.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(19' tpC.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpA.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpB.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(38' tpC.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpA.End);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpB.Start);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpB.End);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpC.Start);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(531' tpC.End);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(3' tbl.TextPieces.Count);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: tpC = (TextPiece)tbl.TextPieces[2];
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpA.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpB.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(19' tpC.CharacterLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpA.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpB.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(38' tpC.BytesLength);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpA.End);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(256' tpB.Start);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpB.End);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(512' tpC.Start);
Magic Number,NPOI.HWPF.Model,TestTextPieceTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestTextPieceTable.cs,TestUnicodeParts,The following statement contains a magic number: Assert.AreEqual(531' tpC.End);
Magic Number,TestCases.HWPF.Model,TestNotesTables,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestNotesTables.cs,TestNotes,The following statement contains a magic number: Assert.AreEqual(10' notes.GetNoteAnchorPosition(0));
Magic Number,TestCases.HWPF.Model,TestNotesTables,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestNotesTables.cs,TestNotes,The following statement contains a magic number: Assert.AreEqual(19' notes.GetNoteTextEndOffSet(0));
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestSimpleDocument,The following statement contains a magic number: Assert.AreEqual(null' rmt.GetAuthor(2));
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestSimpleDocument,The following statement contains a magic number: Assert.AreEqual(null' rmt.GetAuthor(3));
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestMultipleAuthors,The following statement contains a magic number: Assert.AreEqual(4' rmt.GetSize());
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestMultipleAuthors,The following statement contains a magic number: Assert.AreEqual(" "' rmt.GetAuthor(2));
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestMultipleAuthors,The following statement contains a magic number: Assert.AreEqual("Ryan Lauck"' rmt.GetAuthor(3));
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestMultipleAuthors,The following statement contains a magic number: Assert.AreEqual(null' rmt.GetAuthor(4));
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestMultipleAuthors,The following statement contains a magic number: Assert.AreEqual(null' rmt.GetAuthor(5));
Magic Number,TestCases.HWPF.Model,TestRevisionMarkAuthorTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestRevisionMarkAuthorTable.cs,TestMultipleAuthors,The following statement contains a magic number: Assert.AreEqual(null' rmt.GetAuthor(6));
Magic Number,TestCases.HWPF.Model,TestSectionTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestSectionTable.cs,TestReadWrite,The following statement contains a magic number: PlexOfCps oldSedPlex = new PlexOfCps(tableStream' fib.GetFcPlcfsed()'                                                                fib.GetLcbPlcfsed()' 12);
Magic Number,TestCases.HWPF.Model,TestSectionTable,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\Model\TestSectionTable.cs,TestReadWrite,The following statement contains a magic number: PlexOfCps newSedPlex = new PlexOfCps(newTableStream' 0'                                                   newTableStream.Length' 12);
Magic Number,NPOI.HWPF.SPRM,TestSprms,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\SPRM\TestSprms.cs,TestInnerTable,The following statement contains a magic number: Assert.AreEqual(2' paragraph.GetTableLevel());
Magic Number,NPOI.HWPF.SPRM,TestSprms,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\SPRM\TestSprms.cs,TestSprmPJc,The following statement contains a magic number: Assert.AreEqual(1' hwpfDocument.GetStyleSheet().GetParagraphStyle(8)                      .GetJustification());
Magic Number,NPOI.HWPF.SPRM,TestSprms,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\SPRM\TestSprms.cs,TestSprmPJc,The following statement contains a magic number: Assert.AreEqual(1' hwpfDocument.GetStyleSheet().GetParagraphStyle(8)                      .GetJustification());
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(18' par.GetLeftBorder().BorderType);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(17' par.GetRightBorder().BorderType);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(18' par.GetTopBorder().BorderType);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(17' par.GetBottomBorder().BorderType);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(15' par.GetLeftBorder().Color);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(6' par.GetLeftBorder().Color);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(3' par.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: chr = par.GetCharacterRun(2);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(2' tab.NumRows);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(2' row.NumCells());
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(3' cell.GetBrcTop().BorderType);
Magic Number,TestCases.HWPF.UserModel,TestBorderCode,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBorderCode.cs,Test,The following statement contains a magic number: Assert.AreEqual(255' cell.GetBrcBottom().BorderType);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 2' 2' 2);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 2' 2' 2);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 2' 2' 2);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 3' 3' 3);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 3' 3' 3);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 3' 3' 3);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 4' 4' 4);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 4' 4' 4);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 4' 4' 4);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 5' 5' 5);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 5' 5' 5);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 5' 5' 5);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 6' 6' 6);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 6' 6' 6);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 6' 6' 6);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 7' 7' 7);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 7' 7' 7);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 7' 7' 7);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 8' 8' 8);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 8' 8' 8);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 8' 8' 8);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 9' 9' 9);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 9' 9' 9);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 9' 9' 9);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 10' 9' 0);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 10' 9' 0);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 11' 9' 4);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 11' 9' 4);
Magic Number,TestCases.HWPF.UserModel,TestBugs,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestBugs.cs,Test49820,The following statement contains a magic number: assertLevels(documentRange' styleSheet' 11' 9' 4);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(60' hs.GetRange().Text.Length);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(13' hs.GetPlcfHdd().Length);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(215' hs.GetRange().StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(3' hs.GetPlcfHdd().GetProperty(1).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(6' hs.GetPlcfHdd().GetProperty(2).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(6' hs.GetPlcfHdd().GetProperty(2).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(6' hs.GetPlcfHdd().GetProperty(3).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(6' hs.GetPlcfHdd().GetProperty(3).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(9' hs.GetPlcfHdd().GetProperty(4).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(9' hs.GetPlcfHdd().GetProperty(4).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(12' hs.GetPlcfHdd().GetProperty(5).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(12' hs.GetPlcfHdd().GetProperty(5).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(12' hs.GetPlcfHdd().GetProperty(6).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(12' hs.GetPlcfHdd().GetProperty(6).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(12' hs.GetPlcfHdd().GetProperty(7).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(12' hs.GetPlcfHdd().GetProperty(7).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(8).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(8).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(9).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(9).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(10).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(10).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(11).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(11).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(12).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestHeader,The following statement contains a magic number: Assert.AreEqual(59' hs.GetPlcfHdd().GetProperty(12).Start);
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestOddEven,The following statement contains a magic number: Assert.AreEqual(                      "\u0007Page \u0013 PAGE  \\* MERGEFORMAT \u00142\u0015\u0007\u0007\u0007\u0007\u0007\u0007\u0007This is a simple footer on the second page\r\r"'                      hs.GetFooter(2));
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestOddEven,The following statement contains a magic number: Assert.AreEqual("Footer Left\tFooter Middle Footer Right\r\r"' hs.GetFooter(3));
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestFirst,The following statement contains a magic number: Assert.AreEqual("Footer Left\tFooter Middle Footer Right\r\r"' hs.GetFooter(2));
Magic Number,TestCases.HWPF.UserModel,TestHeaderStories,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHeaderStories.cs,TestFirst,The following statement contains a magic number: Assert.AreEqual("Footer Left\tFooter Middle Footer Right\r\r"' hs.GetFooter(3));
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(40' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual("The end!\r"' r.GetParagraph(38).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual("\r"' r.GetParagraph(39).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(0).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(1).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(38).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(38).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(39).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestBasics,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(39).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(40' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("Unordered list 1\r"' r.GetParagraph(2).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("UL 2\r"' r.GetParagraph(3).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("UL 3\r"' r.GetParagraph(4).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("Next up is an ordered list:\r"' r.GetParagraph(5).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(1).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(2).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(2).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(3).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(3).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(4).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(4).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(5).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(5).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(2).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(3).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(4).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(5).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("Now for an un-ordered list with a different bullet style:\r"' r.GetParagraph(9).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("Tick 1\r"' r.GetParagraph(10).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("Tick 2\r"' r.GetParagraph(11).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual("Multi-level un-ordered list:\r"' r.GetParagraph(12).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(9).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(9).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(10).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(10).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(11).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(11).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(12).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(12).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(9).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(10).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(11).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestUnorderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(12).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(40' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual("Next up is an ordered list:\r"' r.GetParagraph(5).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual("Ordered list 1\r"' r.GetParagraph(6).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual("OL 2\r"' r.GetParagraph(7).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual("OL 3\r"' r.GetParagraph(8).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual("Now for an un-ordered list with a different bullet style:\r"' r.GetParagraph(9).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(5).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(5).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(6).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(6).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(7).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(7).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(8).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(8).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(9).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(9).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(5).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(6).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(7).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(8).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestOrderedLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(9).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(40' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("Multi-level un-ordered list:\r"' r.GetParagraph(12).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 1:1\r"' r.GetParagraph(13).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 1:2\r"' r.GetParagraph(14).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 2:1\r"' r.GetParagraph(15).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 2:2\r"' r.GetParagraph(16).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 2:3\r"' r.GetParagraph(17).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 3:1\r"' r.GetParagraph(18).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 4:1\r"' r.GetParagraph(19).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 5:1\r"' r.GetParagraph(20).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 5:2\r"' r.GetParagraph(21).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 2:4\r"' r.GetParagraph(22).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("ML 1:3\r"' r.GetParagraph(23).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("Multi-level ordered list:\r"' r.GetParagraph(24).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 1\r"' r.GetParagraph(25).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 2\r"' r.GetParagraph(26).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 2.1\r"' r.GetParagraph(27).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 2.2\r"' r.GetParagraph(28).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 2.2.1\r"' r.GetParagraph(29).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 2.2.2\r"' r.GetParagraph(30).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 2.2.2.1\r"' r.GetParagraph(31).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 2.2.3\r"' r.GetParagraph(32).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("OL 3\r"' r.GetParagraph(33).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual("Finally we want some indents' to tell the difference\r"' r.GetParagraph(34).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(12).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(12).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: i <= 34
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(12).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(13).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(14).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(1' r.GetParagraph(15).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(1' r.GetParagraph(16).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(1' r.GetParagraph(17).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(18).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(18).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(3' r.GetParagraph(19).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(3' r.GetParagraph(19).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(4' r.GetParagraph(20).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(4' r.GetParagraph(20).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(4' r.GetParagraph(21).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(4' r.GetParagraph(21).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(1' r.GetParagraph(22).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(23).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(24).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(25).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(26).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(1' r.GetParagraph(27).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(1' r.GetParagraph(28).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(29).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(29).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(30).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(30).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(3' r.GetParagraph(31).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(3' r.GetParagraph(31).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(32).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(2' r.GetParagraph(32).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(33).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestMultiLevelLists,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(34).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(40' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual("Finally we want some indents' to tell the difference\r"' r.GetParagraph(34).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual("Indented once\r"' r.GetParagraph(35).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual("Indented twice\r"' r.GetParagraph(36).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual("Indented three times\r"' r.GetParagraph(37).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual("The end!\r"' r.GetParagraph(38).Text);
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(34).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(34).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(35).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(35).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(36).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(36).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(37).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(37).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(38).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(38).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(39).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(9' r.GetParagraph(39).GetLvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(34).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(35).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(36).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(37).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(38).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestIndentedText,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(39).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestWriteRead,The following statement contains a magic number: Assert.AreEqual(4' r.GetParagraph(21).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestWriteRead,The following statement contains a magic number: Assert.AreEqual(4' r.GetParagraph(21).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestWriteRead,The following statement contains a magic number: Assert.AreEqual(1' r.GetParagraph(22).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestLists,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestLists.cs,TestWriteRead,The following statement contains a magic number: Assert.AreEqual(0' r.GetParagraph(23).GetIlvl());
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestTwoImages,The following statement contains a magic number: Assert.AreEqual(pics.Count' 2);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual(7' pics.Count);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("png"' pics[3].SuggestFileExtension());
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("image/png"' pics[3].MimeType);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("png"' pics[4].SuggestFileExtension());
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("image/png"' pics[4].MimeType);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("wmf"' pics[5].SuggestFileExtension());
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("image/x-wmf"' pics[5].MimeType);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("jpg"' pics[6].SuggestFileExtension());
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestDifferentImages,The following statement contains a magic number: Assert.AreEqual("image/jpeg"' pics[6].MimeType);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmfImage,The following statement contains a magic number: Assert.IsTrue(pic.Size > 128);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmfComplexImage,The following statement contains a magic number: Assert.AreEqual(4' pic.Size);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestPicturesWithTable,The following statement contains a magic number: Assert.AreEqual(2' pics.Count);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestPicturesInHeader,The following statement contains a magic number: Assert.AreEqual(2' pics.Count);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(5' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(2' p.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(5' p.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(2)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(true' pictureTable.HasPicture(p.GetCharacterRun(3)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(4)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: p = r.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(6' p.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(2)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(true' pictureTable.HasPicture(p.GetCharacterRun(3)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(4)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(5)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: p = r.GetParagraph(3);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(6' p.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(2)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(true' pictureTable.HasPicture(p.GetCharacterRun(3)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(4)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(5)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: p = r.GetParagraph(4);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(6' p.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(2)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(true' pictureTable.HasPicture(p.GetCharacterRun(3)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(4)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(false' pictureTable.HasPicture(p.GetCharacterRun(5)));
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: Assert.AreEqual(4' pictures.Count);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: picture = pictures[2];
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestEmbededDocumentIcon,The following statement contains a magic number: picture = pictures[3];
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestFloatingPictures,The following statement contains a magic number: Assert.AreEqual(17' pictures.GetAllPictures().Count);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestFloatingPictures,The following statement contains a magic number: Assert.AreEqual(16' image1s);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestFloatingPictures,The following statement contains a magic number: Assert.AreEqual(4' escher8s);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(2' pics.Count);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(27' pic1.AspectRatioX);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(270' pic1.HorizontalScalingFactor);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(27' pic1.AspectRatioY);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(271' pic1.VerticalScalingFactor);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(12000' pic1.DxaGoal);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(9000' pic1.DyaGoal);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(76' pic2.AspectRatioX);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(764' pic2.HorizontalScalingFactor);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(68' pic2.AspectRatioY);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(685' pic2.VerticalScalingFactor);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(12000' pic2.DxaGoal);
Magic Number,TestCases.HWPF.UserModel,TestPictures,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestPictures.cs,TestCroppedPictures,The following statement contains a magic number: Assert.AreEqual(9000' pic2.DyaGoal);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(6' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(87' r.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(20' p.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual("Second paragraph is skipped\u0007"' r.GetParagraph(2).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual("One paragraph is ok\u0007"' r.GetParagraph(3).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual("\u0007"' r.GetParagraph(4).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual("\r"' r.GetParagraph(5).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(5' row.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(5' row._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(86' row.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(20' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(2' cell.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(3' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(20' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(65' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: cell = row.GetCell(2);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(3' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(4' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(65' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableCellLastParagraph,The following statement contains a magic number: Assert.AreEqual(85' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestParagraphPAPXNoParent45877,The following statement contains a magic number: Assert.AreEqual(17' doc.GetRange().NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestParagraphPAPXNoParent45877,The following statement contains a magic number: Assert.AreEqual("After Crashing Part\r"' doc.GetRange().GetParagraph(13).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(13' r.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("Row 1/Cell 3\u0007"' r.GetParagraph(2).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("\u0007"' r.GetParagraph(3).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("Row 2/Cell 1\u0007"' r.GetParagraph(4).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("Row 2/Cell 2\u0007"' r.GetParagraph(5).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("Row 2/Cell 3\u0007"' r.GetParagraph(6).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("\u0007"' r.GetParagraph(7).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("Row 3/Cell 1\u0007"' r.GetParagraph(8).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("Row 3/Cell 2\u0007"' r.GetParagraph(9).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("Row 3/Cell 3\u0007"' r.GetParagraph(10).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("\u0007"' r.GetParagraph(11).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual("\r"' r.GetParagraph(12).Text);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(13' p.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(13' p.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(26' p.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(2' p._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: p = r.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(26' p.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(39' p.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(2' p._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(3' p._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(3' table.NumRows);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(4' row._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(13' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(2' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(13' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(26' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: cell = row.GetCell(2);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(2' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(3' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(26' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(39' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(4' row._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(8' row._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(4' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(5' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(40' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(53' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(5' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(6' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(53' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(66' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: cell = row.GetCell(2);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(6' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(7' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(66' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(79' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: row = table.GetRow(2);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(8' row._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(12' row._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(8' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(9' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(80' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(93' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(9' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(10' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(93' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(106' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: cell = row.GetCell(2);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(10' cell._parStart);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(11' cell._parEnd);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(106' cell.StartOffset);
Magic Number,TestCases.HWPF.UserModel,TestProblems,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestProblems.cs,TestTableIterator,The following statement contains a magic number: Assert.AreEqual(119' cell.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(5' range.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(5' para.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: paraDef = (PAPX)daDoc.ParagraphTable.GetParagraphs()[2];
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(132' paraDef.Start);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(400' paraDef.End);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(5' para.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: paraDef = (PAPX)daDoc.ParagraphTable.GetParagraphs()[3];
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(400' paraDef.Start);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(438' paraDef.End);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: para = section.GetParagraph(3);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(439' range.Text.Length);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(439' section.Text.Length);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(439'                      section.GetParagraph(0).Text.Length +                      section.GetParagraph(1).Text.Length +                      section.GetParagraph(2).Text.Length +                      section.GetParagraph(3).Text.Length +                      section.GetParagraph(4).Text.Length              );
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(439'                      section.GetParagraph(0).Text.Length +                      section.GetParagraph(1).Text.Length +                      section.GetParagraph(2).Text.Length +                      section.GetParagraph(3).Text.Length +                      section.GetParagraph(4).Text.Length              );
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(439'                      section.GetParagraph(0).Text.Length +                      section.GetParagraph(1).Text.Length +                      section.GetParagraph(2).Text.Length +                      section.GetParagraph(3).Text.Length +                      section.GetParagraph(4).Text.Length              );
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(439'                      section.GetParagraph(0).Text.Length +                      section.GetParagraph(1).Text.Length +                      section.GetParagraph(2).Text.Length +                      section.GetParagraph(3).Text.Length +                      section.GetParagraph(4).Text.Length              );
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteOne,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteOne,The following statement contains a magic number: Paragraph para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteOne,The following statement contains a magic number: Assert.AreEqual(192' offset);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteOne,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteOne,The following statement contains a magic number: para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteAll,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteAll,The following statement contains a magic number: Paragraph para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteAll,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteAll,The following statement contains a magic number: para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeDelete,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeDelete.cs,TestRangeDeleteAll,The following statement contains a magic number: para = section.GetParagraph(3);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(3' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestDocStructure,The following statement contains a magic number: Paragraph para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(3' para.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestDocStructure,The following statement contains a magic number: String text =                  para.GetCharacterRun(0).Text +                  para.GetCharacterRun(1).Text +                  para.GetCharacterRun(2).Text              ;
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestRangeInsert,The following statement contains a magic number: Range range = new Range(insertionPoint' (insertionPoint + 2)' daDoc);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestRangeInsert,The following statement contains a magic number: Assert.AreEqual(3' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestRangeInsert,The following statement contains a magic number: Paragraph para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestRangeInsert,The following statement contains a magic number: Assert.AreEqual(3' para.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestRangeInsertion,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeInsertion.cs,TestRangeInsert,The following statement contains a magic number: String text =                  para.GetCharacterRun(0).Text +                  para.GetCharacterRun(1).Text +                  para.GetCharacterRun(2).Text              ;
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      7'                      r.NumParagraphs              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[2] + "\r"'                      r.GetParagraph(2).Text              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[2] + "\r"'                      r.GetParagraph(2).Text              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      page_break + "\r"'                      r.GetParagraph(3).Text              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      p2_parts[0] + "\r"'                      r.GetParagraph(4).Text              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      p2_parts[1] + "\r"'                      r.GetParagraph(5).Text              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      p2_parts[2] + "\r"'                      r.GetParagraph(6).Text              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      p2_parts[2] + "\r"'                      r.GetParagraph(6).Text              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiStyling,The following statement contains a magic number: Paragraph p7 = r.GetParagraph(6);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiStyling,The following statement contains a magic number: Assert.AreEqual(20' c1.GetFontSize());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiStyling,The following statement contains a magic number: Assert.AreEqual(32' c7.GetFontSize());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiStyling,The following statement contains a magic number: Assert.AreEqual(15' a.GetStyleSheet().NumStyles());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestAsciiStyling,The following statement contains a magic number: Assert.IsTrue(p.GetStyleIndex() < 15);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.AreEqual(                      408' r.Text.Length              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.AreEqual(408' s.EndOffset);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.AreEqual(35' pDefs.Count);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.AreEqual(531' u.GetOverallRange().Text.Length);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.AreEqual(530' u.GetCPSplitCalculator().GetHeaderTextboxEnd());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: PropertyNode pLast = (PropertyNode)pDefs[34];
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: PropertyNode p2 = (PropertyNode)pDefs[2];
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: PropertyNode p3 = (PropertyNode)pDefs[3];
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: PropertyNode p4 = (PropertyNode)pDefs[4];
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p0.Start < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p0.End < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p1.Start < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p1.End < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p2.Start < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p2.End < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p3.Start < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p3.End < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p4.Start < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.IsTrue(p4.End < 408);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeParagraphDefInitions,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1'                      p2.End              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(                      12'                      r.NumParagraphs              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[2] + "\r"' r.GetParagraph(2).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[2] + "\r"' r.GetParagraph(2).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[3] + "\r"' r.GetParagraph(3).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[3] + "\r"' r.GetParagraph(3).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[4] + "\r"' r.GetParagraph(4).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[4] + "\r"' r.GetParagraph(4).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[5] + "\r"' r.GetParagraph(5).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[5] + "\r"' r.GetParagraph(5).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[6] + "\r"' r.GetParagraph(6).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[6] + "\r"' r.GetParagraph(6).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[7] + "\r"' r.GetParagraph(7).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[7] + "\r"' r.GetParagraph(7).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[8] + "\r"' r.GetParagraph(8).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[8] + "\r"' r.GetParagraph(8).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[9] + "\r"' r.GetParagraph(9).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p1_parts[9] + "\r"' r.GetParagraph(9).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(page_break + "\r"' r.GetParagraph(10).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeTextParagraphs,The following statement contains a magic number: Assert.AreEqual(p2_parts[0] + "\r"' r.GetParagraph(11).Text);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Paragraph p7 = r.GetParagraph(6);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(2' p1.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(2' p7.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(22' c1a.GetFontSize());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(22' c1b.GetFontSize());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(48' c7a.GetFontSize());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(48' c7b.GetFontSize());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1'                      c7a.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1'                      c7a.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1'                      c7a.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1'                      c7a.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7a.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7a.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7a.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7a.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7b.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7b.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7b.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      1'                      c7b.StartOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      p1_parts[6].Length + 1'                      c7b.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      p1_parts[6].Length + 1'                      c7b.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      p1_parts[6].Length + 1'                      c7b.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      p1_parts[6].Length + 1'                      c7b.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(                      p1_parts[0].Length + 1 +                      p1_parts[1].Length + 1 +                      p1_parts[2].Length + 1 +                      p1_parts[3].Length + 1 +                      p1_parts[4].Length + 1 +                      p1_parts[5].Length + 1 +                      p1_parts[6].Length + 1'                      c7b.EndOffset              );
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.AreEqual(15' a.GetStyleSheet().NumStyles());
Magic Number,TestCases.HWPF.UserModel,TestRangeProperties,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeProperties.cs,TestUnicodeStyling,The following statement contains a magic number: Assert.IsTrue(p.GetStyleIndex() < 15);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(414' range.Text.Length);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(414' section.Text.Length);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: Paragraph para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: Assert.AreEqual(5' para.NumCharacterRuns);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: String text =                  para.GetCharacterRun(0).Text +                  para.GetCharacterRun(1).Text +                  para.GetCharacterRun(2).Text +                  para.GetCharacterRun(3).Text +                  para.GetCharacterRun(4).Text              ;
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: String text =                  para.GetCharacterRun(0).Text +                  para.GetCharacterRun(1).Text +                  para.GetCharacterRun(2).Text +                  para.GetCharacterRun(3).Text +                  para.GetCharacterRun(4).Text              ;
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestDocStructure,The following statement contains a magic number: String text =                  para.GetCharacterRun(0).Text +                  para.GetCharacterRun(1).Text +                  para.GetCharacterRun(2).Text +                  para.GetCharacterRun(3).Text +                  para.GetCharacterRun(4).Text              ;
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementOne,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementOne,The following statement contains a magic number: Paragraph para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementOne,The following statement contains a magic number: Assert.AreEqual(181' offset);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementOne,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementOne,The following statement contains a magic number: para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementAll,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementAll,The following statement contains a magic number: Paragraph para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementAll,The following statement contains a magic number: Assert.AreEqual(5' section.NumParagraphs);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementAll,The following statement contains a magic number: para = section.GetParagraph(2);
Magic Number,TestCases.HWPF.UserModel,TestRangeReplacement,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeReplacement.cs,TestRangeReplacementAll,The following statement contains a magic number: para = section.GetParagraph(3);
Magic Number,TestCases.HWPF.UserModel,TestRangeSymbols,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestRangeSymbols.cs,Test,The following statement contains a magic number: Assert.IsTrue(range.NumCharacterRuns >= 2);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(2' shapes.Count);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(2' vshapes.Count);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(3616' s1.Width);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(1738' s1.Height);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(4817' s2.Width);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(2164' s2.Height);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(2' shapes.Count);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(2' vshapes.Count);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(3616' s1.Width);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(1738' s1.Height);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(4817' s2.Width);
Magic Number,TestCases.HWPF.UserModel,TestShapes,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestShapes.cs,TestShapes1,The following statement contains a magic number: Assert.AreEqual(2164' s2.Height);
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestInnerTableCellsDetection,The following statement contains a magic number: Paragraph startOfInnerTable = documentRange.GetParagraph(6);
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestInnerTableCellsDetection,The following statement contains a magic number: Assert.AreEqual(2' innerTable.NumRows);
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestInnerTableCellsDetection,The following statement contains a magic number: Assert.AreEqual(2' tableRow.NumCells());
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestOuterTableCellsDetection,The following statement contains a magic number: Assert.AreEqual(3' outerTable.NumRows);
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestOuterTableCellsDetection,The following statement contains a magic number: Assert.AreEqual(3' outerTable.GetRow(0).NumCells());
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestOuterTableCellsDetection,The following statement contains a magic number: Assert.AreEqual(3' outerTable.GetRow(1).NumCells());
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestOuterTableCellsDetection,The following statement contains a magic number: Assert.AreEqual(3' outerTable.GetRow(2).NumCells());
Magic Number,TestCases.HWPF.UserModel,TestTableRow,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestTableRow.cs,TestOuterTableCellsDetection,The following statement contains a magic number: Assert.AreEqual(3' outerTable.GetRow(2).NumCells());
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(7' doc.GetRange().NumParagraphs);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(                    "Paragraph 2\r"'                    doc.GetRange().GetParagraph(2).Text              );
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual("\r"' doc.GetRange().GetParagraph(3).Text);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(                    "Paragraph 3. Has some RED text and some " +                    "BLUE BOLD text in it.\r"'                    doc.GetRange().GetParagraph(4).Text              );
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual("\r"' doc.GetRange().GetParagraph(5).Text);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(                    "Last (4th) paragraph.\r"'                    doc.GetRange().GetParagraph(6).Text              );
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(1' doc.GetRange().GetParagraph(2).NumCharacterRuns);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(1' doc.GetRange().GetParagraph(3).NumCharacterRuns);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(5' doc.GetRange().GetParagraph(4).NumCharacterRuns);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(5' doc.GetRange().GetParagraph(4).NumCharacterRuns);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(1' doc.GetRange().GetParagraph(5).NumCharacterRuns);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(3' doc.GetRange().GetParagraph(6).NumCharacterRuns);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord95,The following statement contains a magic number: Assert.AreEqual(3' doc.GetRange().GetParagraph(6).NumCharacterRuns);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6Sections,The following statement contains a magic number: Assert.AreEqual(3' doc.GetRange().NumSections);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6Sections,The following statement contains a magic number: Assert.AreEqual(6' doc.GetRange().NumParagraphs);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6Sections,The following statement contains a magic number: Assert.AreEqual("\u000c"' doc.GetRange().GetParagraph(2).Text);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6Sections,The following statement contains a magic number: Assert.AreEqual("This is a new section.\r"' doc.GetRange().GetParagraph(3).Text);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6Sections,The following statement contains a magic number: Assert.AreEqual("\u000c"' doc.GetRange().GetParagraph(4).Text);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6Sections,The following statement contains a magic number: Assert.AreEqual("\r"' doc.GetRange().GetParagraph(5).Text);
Magic Number,NPOI.HWPF.UserModel,TestHWPFOldDocument,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\HWPF\UserModel\TestHWPFOldDocument.cs,TestWord6Sections2,The following statement contains a magic number: Assert.AreEqual(57' doc.GetRange().NumParagraphs);
Magic Number,TestCases,POIDataSamples,D:\research\architectureSmells\repos1\svn2github_npoi\testcases\scratchpad\POIDataSamples.cs,ReadFile,The following statement contains a magic number: byte[] buf = new byte[512];
