Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Murphy.Plugins,Reminder,C:\repos\MrTiggr_Murphy\Plugins\Reminder\Reminder.cs,DoRemind,Cyclomatic complexity of the method is 9
Long Statement,Murphy.Plugins,Reminder,C:\repos\MrTiggr_Murphy\Plugins\Reminder\Reminder.cs,Bot_OnMessage,The length of the statement  "		AnswerWithNotice (network' e' FormatItalic ("remind me in <minutes> <message>") + " - Reminds you in <minutes> minutes."); " is 122.
Long Statement,Murphy.Plugins,Reminder,C:\repos\MrTiggr_Murphy\Plugins\Reminder\Reminder.cs,Bot_OnMessage,The length of the statement  "		AnswerWithNotice (network' e' FormatItalic ("remind me at <hours>:<minutes> <message>") + " - Reminds you at the given time."); " is 127.
Long Statement,Murphy.Plugins,Reminder,C:\repos\MrTiggr_Murphy\Plugins\Reminder\Reminder.cs,Bot_OnMessage,The length of the statement  "		i.Date = new DateTime (DateTime.Now.Year' DateTime.Now.Month' DateTime.Now.Day' int.Parse (Matches ["hours"].ToString ())' int.Parse (Matches ["minutes"].ToString ())' 0); " is 171.
Magic Number,Murphy.Plugins,Reminder,C:\repos\MrTiggr_Murphy\Plugins\Reminder\Reminder.cs,DoRemind,The following statement contains a magic number: while (l.Count > 0) {  	List<RemindInfo> tmp = new List<RemindInfo> ();  	foreach (RemindInfo i in l) {  		if (i.Date < DateTime.Now) {  			Network network = Bot.GetNetworkByName (i.Network);  			if (network != null) {  				if (i.IsPrivate)  					network.SendMessage (Murphy.Irc.SendType.Message' i.User' i.User + "' time's up! " + i.Message);  				else  					network.SendMessage (Murphy.Irc.SendType.Message' i.Channel' i.User + "' time's up! " + i.Message);  			}  			tmp.Add (i);  		}  	}  	foreach (RemindInfo i in tmp)  		l.Remove (i);  	if (tmp.Count > 0)  		Save (l);  	Thread.Sleep (10000);  }  
Magic Number,Murphy.Plugins,Reminder,C:\repos\MrTiggr_Murphy\Plugins\Reminder\Reminder.cs,DoRemind,The following statement contains a magic number: Thread.Sleep (10000);  
