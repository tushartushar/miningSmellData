Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,Cyclomatic complexity of the method is 8
Long Statement,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,GetYPosLog,The length of the statement  "	// in theory should be 20x to get the power' but doesn't seem to give me sensible values (may be because we throw half the FFT away - bin 0 might need to be halved) " is 164.
Long Statement,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The length of the statement  "			throw new InvalidOperationException (String.Format ("Couldn't read the whole sample' expected {0} samples' got {1}"' n' sourceSamples)); " is 136.
Magic Number,NAudioWpfDemo,AudioPlayback,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\AudioPlaybackDemo\AudioPlayback.cs,AudioPlayback,The following statement contains a magic number: aggregator.NotificationCount = 882;  
Magic Number,NAudioWpfDemo,PolygonWaveFormControl,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\PolygonWaveFormControl.xaml.cs,OnSizeChanged,The following statement contains a magic number: this.yTranslate = this.ActualHeight / 2;  
Magic Number,NAudioWpfDemo,PolygonWaveFormControl,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\PolygonWaveFormControl.xaml.cs,OnSizeChanged,The following statement contains a magic number: this.yScale = this.ActualHeight / 2;  
Magic Number,NAudioWpfDemo,PolylineWaveFormControl,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\PolylineWaveFormControl.xaml.cs,OnSizeChanged,The following statement contains a magic number: this.yTranslate = this.ActualHeight / 2;  
Magic Number,NAudioWpfDemo,PolylineWaveFormControl,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\PolylineWaveFormControl.xaml.cs,OnSizeChanged,The following statement contains a magic number: this.yScale = this.ActualHeight / 2;  
Magic Number,NAudioWpfDemo,SampleAggregator,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\AudioPlaybackDemo\SampleAggregator.cs,SampleAggregator,The following statement contains a magic number: this.m = (int)Math.Log (fftLength' 2.0);  
Magic Number,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,Update,The following statement contains a magic number: if (updateCount++ % 2 == 0) {  	return;  }  
Magic Number,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,Update,The following statement contains a magic number: if (fftResults.Length / 2 != bins) {  	this.bins = fftResults.Length / 2;  	CalculateXScale ();  }  
Magic Number,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,Update,The following statement contains a magic number: if (fftResults.Length / 2 != bins) {  	this.bins = fftResults.Length / 2;  	CalculateXScale ();  }  
Magic Number,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,Update,The following statement contains a magic number: this.bins = fftResults.Length / 2;  
Magic Number,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,Update,The following statement contains a magic number: for (int n = 0; n < fftResults.Length / 2; n += binsPerPoint) {  	double yPos = GetYPosLog (fftResults [n]);  	AddResult (n / binsPerPoint' yPos);  }  
Magic Number,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,GetYPosAnotherTry,The following statement contains a magic number: if (binNumber != 0)  	abs *= 2;  
Magic Number,NAudioWpfDemo,SpectrumAnalyser,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\SpectrumAnalyser.xaml.cs,GetYPosAnotherTry,The following statement contains a magic number: abs *= 2;  
Magic Number,NAudioWpfDemo,WaveFormControl,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\WaveFormControl.xaml.cs,WaveFormControl_SizeChanged,The following statement contains a magic number: this.yTranslate = this.ActualHeight / 2;  
Magic Number,NAudioWpfDemo,WaveFormControl,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\WaveFormControl.xaml.cs,WaveFormControl_SizeChanged,The following statement contains a magic number: this.yScale = this.ActualHeight / 2;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumMachineDemoViewModel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumMachineDemoViewModel.cs,DrumMachineDemoViewModel,The following statement contains a magic number: this.tempo = 100;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern = new DrumPattern (notes' 16);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern [0' 0] = this.pattern [0' 8] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern [0' 0] = this.pattern [0' 8] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern [1' 4] = this.pattern [1' 12] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern [1' 4] = this.pattern [1' 12] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern [1' 4] = this.pattern [1' 12] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: for (int n = 0; n < pattern.Steps; n++) {  	this.pattern [2' n] = 127;  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: for (int n = 0; n < pattern.Steps; n++) {  	this.pattern [2' n] = 127;  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern [2' n] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrumPatternEditor,The following statement contains a magic number: this.pattern [2' n] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrawNoteNames,The following statement contains a magic number: for (int note = 0; note < pattern.Notes; note++) {  	var tb = new TextBlock ();  	tb.Text = pattern.NoteNames [note];  	tb.SetValue (Canvas.LeftProperty' 0.0);  	tb.SetValue (Canvas.TopProperty' note * gridSquareWidth);  	tb.Foreground = Brushes.Gray;  	tb.FontFamily = new FontFamily ("Segoe UI");  	tb.FontSize = 12;  	drumGridCanvas.Children.Add (tb);  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrawNoteNames,The following statement contains a magic number: tb.FontSize = 12;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrawGridLines,The following statement contains a magic number: for (int step = 0; step <= pattern.Steps; step++) {  	// vertical lines  	Line l = new Line ();  	l.X1 = l.X2 = startX + step * gridSquareWidth;  	l.Y1 = 0;  	l.Y2 = pattern.Notes * gridSquareWidth;  	l.Stroke = step % 4 == 0 ? Brushes.Gray : Brushes.LightGray;  	l.StrokeThickness = 1;  	drumGridCanvas.Children.Add (l);  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,DrawGridLines,The following statement contains a magic number: l.Stroke = step % 4 == 0 ? Brushes.Gray : Brushes.LightGray;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,DrumPatternEditor,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\DrumPatternEditor.xaml.cs,r_MouseLeftButtonUp,The following statement contains a magic number: pattern [p.Note' p.Step] = pattern [p.Note' p.Step] == 0 ? (byte)127 : (byte)0;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencer,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencer.cs,PatternSequencer,The following statement contains a magic number: this.Tempo = 120;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Return_A_Non_Delayed_Mixer_Input_For_A_Beat_At_Position_Zero,The following statement contains a magic number: pattern [0' 0] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Set_DelayBy_On_Mixer_Inputs_That_Are_Not_At_The_Start,The following statement contains a magic number: pattern [0' 1] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Not_Return_Mixer_Inputs_For_Steps_That_Are_Outside_The_Requested_Range,The following statement contains a magic number: pattern [0' 2] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Not_Return_Mixer_Inputs_For_Steps_That_Are_Outside_The_Requested_Range,The following statement contains a magic number: pattern [0' 2] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Loop_Around_After_Reaching_The_End_Of_The_Pattern,The following statement contains a magic number: pattern [0' 2] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Loop_Around_After_Reaching_The_End_Of_The_Pattern,The following statement contains a magic number: pattern [0' 2] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Loop_Around_After_Reaching_The_End_Of_The_Pattern,The following statement contains a magic number: Assert.AreEqual (2' mixerInputs.Count ());  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Carry_On_From_Where_It_Left_Off_On_Second_Call,The following statement contains a magic number: pattern [0' 1] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Are_Relative_To_Current_Position_On_Subsequent_Calls,The following statement contains a magic number: pattern [0' 6] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Are_Relative_To_Current_Position_On_Subsequent_Calls,The following statement contains a magic number: pattern [0' 6] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Are_Relative_To_Current_Position_On_Subsequent_Calls,The following statement contains a magic number: mixerInputs = sequencer.GetNextMixerInputs (4);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Are_Relative_To_Current_Position_On_Subsequent_Calls,The following statement contains a magic number: Assert.AreEqual (3' mixerInputs.First ().DelayBy' "DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: pattern [0' 6] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: pattern [0' 6] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: pattern [0' 7] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: pattern [0' 7] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: pattern [0' 8] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: pattern [0' 8] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: mixerInputs = sequencer.GetNextMixerInputs (10);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: Assert.AreEqual (3' mixerInputs.Count' "Second Read");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: Assert.AreEqual (3' mixerInputs [0].DelayBy' "Inputs[0].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: Assert.AreEqual (4' mixerInputs [1].DelayBy' "Inputs[1].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: Assert.AreEqual (5' mixerInputs [2].DelayBy' "Inputs[2].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Multiple_DelayBy_Values_Are_All_Relative_To_Current_Position_Before_Calling_GetNextMixerInputs,The following statement contains a magic number: Assert.AreEqual (5' mixerInputs [2].DelayBy' "Inputs[2].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Wraparound,The following statement contains a magic number: pattern [0' 0] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Wraparound,The following statement contains a magic number: mixerInputs = sequencer.GetNextMixerInputs (12);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Wraparound,The following statement contains a magic number: Assert.AreEqual (4' mixerInputs [0].DelayBy' "Inputs[0].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: pattern [0' 0] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: pattern [0' 10] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: pattern [0' 10] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: Assert.AreEqual (2' mixerInputs.Count' "First read");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: mixerInputs = sequencer.GetNextMixerInputs (12);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: Assert.AreEqual (4' mixerInputs [0].DelayBy' "Inputs[0].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: mixerInputs = sequencer.GetNextMixerInputs (12);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: Assert.AreEqual (2' mixerInputs [0].DelayBy' "3rd Read Inputs[0].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,DelayBy_Values_Should_Be_Correct_On_Subsequent_Read_After_Wraparound,The following statement contains a magic number: Assert.AreEqual (8' mixerInputs [1].DelayBy' "3rd Read Inputs[1].DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Tempo_Can_Be_Changed,The following statement contains a magic number: for (int n = 0; n < pattern.Steps; n++)  	pattern [0' n] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Tempo_Can_Be_Changed,The following statement contains a magic number: pattern [0' n] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Tempo_Can_Be_Changed,The following statement contains a magic number: sequencer.Tempo = 60;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Tempo_Can_Be_Changed,The following statement contains a magic number: Assert.AreEqual (8' mixerInputs.Count' "First read");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,When_Tempo_Is_Halved_DelayBy_Is_Doubled,The following statement contains a magic number: for (int n = 0; n < pattern.Steps; n++)  	pattern [0' n] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,When_Tempo_Is_Halved_DelayBy_Is_Doubled,The following statement contains a magic number: pattern [0' n] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,When_Tempo_Is_Halved_DelayBy_Is_Doubled,The following statement contains a magic number: sequencer.Tempo = 60;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,When_Tempo_Is_Halved_DelayBy_Is_Doubled,The following statement contains a magic number: Assert.AreEqual (2' mixerInputs [1].DelayBy' "First beat DelayBy");  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Return_Mixer_Inputs_for_Beats_On_Any_Note,The following statement contains a magic number: pattern [1' 5] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,PatternSequencerTests,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\PatternSequencerTests.cs,Pattern_Sequencer_Should_Return_Mixer_Inputs_for_Beats_On_Any_Note,The following statement contains a magic number: pattern [1' 5] = 127;  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: using (var reader = new WaveFileReader (fileName)) {  	ISampleProvider sp;  	int sourceSamples;  	if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  		if (reader.WaveFormat.BitsPerSample == 16) {  			sp = new Pcm16BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 2);  		}  		else if (reader.WaveFormat.BitsPerSample == 24) {  			sp = new Pcm24BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 3);  		}  		else {  			throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  		}  	}  	else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  		sp = new WaveToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 4);  	}  	else {  		throw new ArgumentException ("Must be PCM or IEEE float");  	}  	float[] sampleData = new float[sourceSamples];  	int n = sp.Read (sampleData' 0' sourceSamples);  	if (n != sourceSamples) {  		throw new InvalidOperationException (String.Format ("Couldn't read the whole sample' expected {0} samples' got {1}"' n' sourceSamples));  	}  	SampleSource ss = new SampleSource (sampleData' sp.WaveFormat);  	return ss;  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: using (var reader = new WaveFileReader (fileName)) {  	ISampleProvider sp;  	int sourceSamples;  	if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  		if (reader.WaveFormat.BitsPerSample == 16) {  			sp = new Pcm16BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 2);  		}  		else if (reader.WaveFormat.BitsPerSample == 24) {  			sp = new Pcm24BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 3);  		}  		else {  			throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  		}  	}  	else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  		sp = new WaveToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 4);  	}  	else {  		throw new ArgumentException ("Must be PCM or IEEE float");  	}  	float[] sampleData = new float[sourceSamples];  	int n = sp.Read (sampleData' 0' sourceSamples);  	if (n != sourceSamples) {  		throw new InvalidOperationException (String.Format ("Couldn't read the whole sample' expected {0} samples' got {1}"' n' sourceSamples));  	}  	SampleSource ss = new SampleSource (sampleData' sp.WaveFormat);  	return ss;  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: using (var reader = new WaveFileReader (fileName)) {  	ISampleProvider sp;  	int sourceSamples;  	if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  		if (reader.WaveFormat.BitsPerSample == 16) {  			sp = new Pcm16BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 2);  		}  		else if (reader.WaveFormat.BitsPerSample == 24) {  			sp = new Pcm24BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 3);  		}  		else {  			throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  		}  	}  	else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  		sp = new WaveToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 4);  	}  	else {  		throw new ArgumentException ("Must be PCM or IEEE float");  	}  	float[] sampleData = new float[sourceSamples];  	int n = sp.Read (sampleData' 0' sourceSamples);  	if (n != sourceSamples) {  		throw new InvalidOperationException (String.Format ("Couldn't read the whole sample' expected {0} samples' got {1}"' n' sourceSamples));  	}  	SampleSource ss = new SampleSource (sampleData' sp.WaveFormat);  	return ss;  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: using (var reader = new WaveFileReader (fileName)) {  	ISampleProvider sp;  	int sourceSamples;  	if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  		if (reader.WaveFormat.BitsPerSample == 16) {  			sp = new Pcm16BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 2);  		}  		else if (reader.WaveFormat.BitsPerSample == 24) {  			sp = new Pcm24BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 3);  		}  		else {  			throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  		}  	}  	else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  		sp = new WaveToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 4);  	}  	else {  		throw new ArgumentException ("Must be PCM or IEEE float");  	}  	float[] sampleData = new float[sourceSamples];  	int n = sp.Read (sampleData' 0' sourceSamples);  	if (n != sourceSamples) {  		throw new InvalidOperationException (String.Format ("Couldn't read the whole sample' expected {0} samples' got {1}"' n' sourceSamples));  	}  	SampleSource ss = new SampleSource (sampleData' sp.WaveFormat);  	return ss;  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: using (var reader = new WaveFileReader (fileName)) {  	ISampleProvider sp;  	int sourceSamples;  	if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  		if (reader.WaveFormat.BitsPerSample == 16) {  			sp = new Pcm16BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 2);  		}  		else if (reader.WaveFormat.BitsPerSample == 24) {  			sp = new Pcm24BitToSampleProvider (reader);  			sourceSamples = (int)(reader.Length / 3);  		}  		else {  			throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  		}  	}  	else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  		sp = new WaveToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 4);  	}  	else {  		throw new ArgumentException ("Must be PCM or IEEE float");  	}  	float[] sampleData = new float[sourceSamples];  	int n = sp.Read (sampleData' 0' sourceSamples);  	if (n != sourceSamples) {  		throw new InvalidOperationException (String.Format ("Couldn't read the whole sample' expected {0} samples' got {1}"' n' sourceSamples));  	}  	SampleSource ss = new SampleSource (sampleData' sp.WaveFormat);  	return ss;  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  	if (reader.WaveFormat.BitsPerSample == 16) {  		sp = new Pcm16BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 2);  	}  	else if (reader.WaveFormat.BitsPerSample == 24) {  		sp = new Pcm24BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 3);  	}  	else {  		throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  	}  }  else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  	sp = new WaveToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 4);  }  else {  	throw new ArgumentException ("Must be PCM or IEEE float");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  	if (reader.WaveFormat.BitsPerSample == 16) {  		sp = new Pcm16BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 2);  	}  	else if (reader.WaveFormat.BitsPerSample == 24) {  		sp = new Pcm24BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 3);  	}  	else {  		throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  	}  }  else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  	sp = new WaveToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 4);  }  else {  	throw new ArgumentException ("Must be PCM or IEEE float");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  	if (reader.WaveFormat.BitsPerSample == 16) {  		sp = new Pcm16BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 2);  	}  	else if (reader.WaveFormat.BitsPerSample == 24) {  		sp = new Pcm24BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 3);  	}  	else {  		throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  	}  }  else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  	sp = new WaveToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 4);  }  else {  	throw new ArgumentException ("Must be PCM or IEEE float");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  	if (reader.WaveFormat.BitsPerSample == 16) {  		sp = new Pcm16BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 2);  	}  	else if (reader.WaveFormat.BitsPerSample == 24) {  		sp = new Pcm24BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 3);  	}  	else {  		throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  	}  }  else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  	sp = new WaveToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 4);  }  else {  	throw new ArgumentException ("Must be PCM or IEEE float");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.Encoding == WaveFormatEncoding.Pcm) {  	if (reader.WaveFormat.BitsPerSample == 16) {  		sp = new Pcm16BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 2);  	}  	else if (reader.WaveFormat.BitsPerSample == 24) {  		sp = new Pcm24BitToSampleProvider (reader);  		sourceSamples = (int)(reader.Length / 3);  	}  	else {  		throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  	}  }  else if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  	sp = new WaveToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 4);  }  else {  	throw new ArgumentException ("Must be PCM or IEEE float");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.BitsPerSample == 16) {  	sp = new Pcm16BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 2);  }  else if (reader.WaveFormat.BitsPerSample == 24) {  	sp = new Pcm24BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 3);  }  else {  	throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.BitsPerSample == 16) {  	sp = new Pcm16BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 2);  }  else if (reader.WaveFormat.BitsPerSample == 24) {  	sp = new Pcm24BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 3);  }  else {  	throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.BitsPerSample == 16) {  	sp = new Pcm16BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 2);  }  else if (reader.WaveFormat.BitsPerSample == 24) {  	sp = new Pcm24BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 3);  }  else {  	throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.BitsPerSample == 16) {  	sp = new Pcm16BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 2);  }  else if (reader.WaveFormat.BitsPerSample == 24) {  	sp = new Pcm24BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 3);  }  else {  	throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: sourceSamples = (int)(reader.Length / 2);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.BitsPerSample == 24) {  	sp = new Pcm24BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 3);  }  else {  	throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.BitsPerSample == 24) {  	sp = new Pcm24BitToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 3);  }  else {  	throw new ArgumentException ("Currently only 16 or 24 bit PCM samples are supported");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: sourceSamples = (int)(reader.Length / 3);  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: if (reader.WaveFormat.Encoding == WaveFormatEncoding.IeeeFloat) {  	sp = new WaveToSampleProvider (reader);  	sourceSamples = (int)(reader.Length / 4);  }  else {  	throw new ArgumentException ("Must be PCM or IEEE float");  }  
Magic Number,NAudioWpfDemo.DrumMachineDemo,SampleSource,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioWpfDemo\DrumMachineDemo\SampleSource.cs,CreateFromWaveFile,The following statement contains a magic number: sourceSamples = (int)(reader.Length / 4);  
