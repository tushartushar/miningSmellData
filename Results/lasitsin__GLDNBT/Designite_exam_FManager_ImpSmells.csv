Implementation smell,Namespace,Class,File,Method,Description
Long Method,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The method has 101 lines of code.
Complex Method,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,Cyclomatic complexity of the method is 21
Complex Method,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDirs,Cyclomatic complexity of the method is 8
Complex Method,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,Cyclomatic complexity of the method is 13
Long Statement,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDirs,The length of the statement  "					if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) { " is 155.
Long Statement,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The length of the statement  "				if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) { " is 155.
Long Statement,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The length of the statement  "				if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) { " is 165.
Empty Catch Block,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,listView1_MouseDoubleClick,The method has an empty catch block.
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,InitListView,The following statement contains a magic number: listView1.Columns.Add ("Имя"' 150' HorizontalAlignment.Left);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,InitListView,The following statement contains a magic number: listView1.Columns.Add ("Размер"' 75' HorizontalAlignment.Right);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,InitListView,The following statement contains a magic number: listView1.Columns.Add ("Тип"' 150' HorizontalAlignment.Center);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,InitListView,The following statement contains a magic number: listView1.Columns.Add ("Создан"' 140' HorizontalAlignment.Left);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,InitListView,The following statement contains a magic number: listView1.Columns.Add ("Изменен"' 140' HorizontalAlignment.Left);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,InitListView,The following statement contains a magic number: listView1.Columns.Add ("Путь"' 200' HorizontalAlignment.Left);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: foreach (ManagementObject mo in queryCollection) {  	int selectIndex;  	int imageIndex;  	switch (int.Parse (mo ["DriveType"].ToString ())) {  	case removable:  		imageIndex = 5;  		selectIndex = 5;  		break;  	case localDisk:  		imageIndex = 6;  		selectIndex = 6;  		break;  	case CD:  		imageIndex = 7;  		selectIndex = 7;  		break;  	case network:  		imageIndex = 8;  		selectIndex = 8;  		break;  	default:  		imageIndex = 2;  		selectIndex = 3;  		break;  	}  	//create new drive node  	nodeTreeNode = new TreeNode (string.Format ("{0}\\"' mo ["Name"])' imageIndex' selectIndex);  	//add new node  	nodeCollection.Add (nodeTreeNode);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: switch (int.Parse (mo ["DriveType"].ToString ())) {  case removable:  	imageIndex = 5;  	selectIndex = 5;  	break;  case localDisk:  	imageIndex = 6;  	selectIndex = 6;  	break;  case CD:  	imageIndex = 7;  	selectIndex = 7;  	break;  case network:  	imageIndex = 8;  	selectIndex = 8;  	break;  default:  	imageIndex = 2;  	selectIndex = 3;  	break;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: imageIndex = 5;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: selectIndex = 5;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: imageIndex = 6;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: selectIndex = 6;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: imageIndex = 7;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: selectIndex = 7;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: imageIndex = 8;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: selectIndex = 8;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: imageIndex = 2;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillDrives,The following statement contains a magic number: selectIndex = 3;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (Directory.Exists (getFullPath (path)) == false) {  	MessageBox.Show ("Directory or path " + path + " does not exist.");  }  else {  	try {  		string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  		DateTime dirCreateDate' dirModifyDate;  		foreach (string stringDir in stringDirectories) {  			string stringDirName = GetPathName (stringDir);  			var objDir = new DirectoryInfo (stringDir);  			if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			dirCreateDate = objDir.CreationTime;  			dirModifyDate = objDir.LastWriteTime;  			lvData [0] = stringDirName;  			lvData [2] = objDir.Extension;  			//FileAttributes fa = File.GetAttributes(stringDir);  			//lvData[6] = fa.ToString();  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dirCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dirModifyDate);  			}  			lvData [5] = stringDir;  			//Create actual list item  			var lvItem = new ListViewItem (lvData' 2);  			listView1.Items.Add (lvItem);  		}  		string[] stringFiles = Directory.GetFiles (getFullPath (path));  		DateTime dtCreateDate' dtModifyDate;  		foreach (string stringFile in stringFiles) {  			string stringFileName = stringFile;  			var objFileSize = new FileInfo (stringFileName);  			if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  				continue;  			}  			Int64 lFileSize = objFileSize.Length;  			dtCreateDate = objFileSize.CreationTime;  			//GetCreationTime(stringFileName);  			dtModifyDate = objFileSize.LastWriteTime;  			//GetLastWriteTime(stringFileName);  			//create listview data  			lvData [0] = GetPathName (stringFileName);  			lvData [1] = formatSize (lFileSize);  			lvData [2] = objFileSize.Extension;  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  				//not in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate.AddHours (1));  			}  			else {  				//is in day light saving time adjust time  				lvData [3] = formatDate (dtCreateDate);  			}  			//check if file is in local current day light saving time  			if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate.AddHours (1));  			}  			else {  				//not in day light saving time adjust time  				lvData [4] = formatDate (dtModifyDate);  			}  			lvData [5] = stringFileName;  			//Create actual list item  			Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  			imageList1.Images.Add (ic);  			imageList3.Images.Add (ic);  			//var lvItem = new ListViewItem(lvData'4);  			var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  			listView1.Items.Add (lvItem);  		}  	}  	catch (IOException) {  		MessageBox.Show ("Error: Drive not ready or directory does not exist.");  	}  	catch (UnauthorizedAccessException) {  		MessageBox.Show ("Error: Drive or directory access denided.");  	}  	catch (Exception e) {  		MessageBox.Show ("Error: " + e);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: try {  	string[] stringDirectories = Directory.GetDirectories (getFullPath (path));  	DateTime dirCreateDate' dirModifyDate;  	foreach (string stringDir in stringDirectories) {  		string stringDirName = GetPathName (stringDir);  		var objDir = new DirectoryInfo (stringDir);  		if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		dirCreateDate = objDir.CreationTime;  		dirModifyDate = objDir.LastWriteTime;  		lvData [0] = stringDirName;  		lvData [2] = objDir.Extension;  		//FileAttributes fa = File.GetAttributes(stringDir);  		//lvData[6] = fa.ToString();  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dirCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dirModifyDate);  		}  		lvData [5] = stringDir;  		//Create actual list item  		var lvItem = new ListViewItem (lvData' 2);  		listView1.Items.Add (lvItem);  	}  	string[] stringFiles = Directory.GetFiles (getFullPath (path));  	DateTime dtCreateDate' dtModifyDate;  	foreach (string stringFile in stringFiles) {  		string stringFileName = stringFile;  		var objFileSize = new FileInfo (stringFileName);  		if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  			continue;  		}  		Int64 lFileSize = objFileSize.Length;  		dtCreateDate = objFileSize.CreationTime;  		//GetCreationTime(stringFileName);  		dtModifyDate = objFileSize.LastWriteTime;  		//GetLastWriteTime(stringFileName);  		//create listview data  		lvData [0] = GetPathName (stringFileName);  		lvData [1] = formatSize (lFileSize);  		lvData [2] = objFileSize.Extension;  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  			//not in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate.AddHours (1));  		}  		else {  			//is in day light saving time adjust time  			lvData [3] = formatDate (dtCreateDate);  		}  		//check if file is in local current day light saving time  		if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate.AddHours (1));  		}  		else {  			//not in day light saving time adjust time  			lvData [4] = formatDate (dtModifyDate);  		}  		lvData [5] = stringFileName;  		//Create actual list item  		Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  		imageList1.Images.Add (ic);  		imageList3.Images.Add (ic);  		//var lvItem = new ListViewItem(lvData'4);  		var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  		listView1.Items.Add (lvItem);  	}  }  catch (IOException) {  	MessageBox.Show ("Error: Drive not ready or directory does not exist.");  }  catch (UnauthorizedAccessException) {  	MessageBox.Show ("Error: Drive or directory access denided.");  }  catch (Exception e) {  	MessageBox.Show ("Error: " + e);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringDir in stringDirectories) {  	string stringDirName = GetPathName (stringDir);  	var objDir = new DirectoryInfo (stringDir);  	if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	dirCreateDate = objDir.CreationTime;  	dirModifyDate = objDir.LastWriteTime;  	lvData [0] = stringDirName;  	lvData [2] = objDir.Extension;  	//FileAttributes fa = File.GetAttributes(stringDir);  	//lvData[6] = fa.ToString();  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate);  	}  	lvData [5] = stringDir;  	//Create actual list item  	var lvItem = new ListViewItem (lvData' 2);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringDir in stringDirectories) {  	string stringDirName = GetPathName (stringDir);  	var objDir = new DirectoryInfo (stringDir);  	if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	dirCreateDate = objDir.CreationTime;  	dirModifyDate = objDir.LastWriteTime;  	lvData [0] = stringDirName;  	lvData [2] = objDir.Extension;  	//FileAttributes fa = File.GetAttributes(stringDir);  	//lvData[6] = fa.ToString();  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate);  	}  	lvData [5] = stringDir;  	//Create actual list item  	var lvItem = new ListViewItem (lvData' 2);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringDir in stringDirectories) {  	string stringDirName = GetPathName (stringDir);  	var objDir = new DirectoryInfo (stringDir);  	if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	dirCreateDate = objDir.CreationTime;  	dirModifyDate = objDir.LastWriteTime;  	lvData [0] = stringDirName;  	lvData [2] = objDir.Extension;  	//FileAttributes fa = File.GetAttributes(stringDir);  	//lvData[6] = fa.ToString();  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate);  	}  	lvData [5] = stringDir;  	//Create actual list item  	var lvItem = new ListViewItem (lvData' 2);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringDir in stringDirectories) {  	string stringDirName = GetPathName (stringDir);  	var objDir = new DirectoryInfo (stringDir);  	if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	dirCreateDate = objDir.CreationTime;  	dirModifyDate = objDir.LastWriteTime;  	lvData [0] = stringDirName;  	lvData [2] = objDir.Extension;  	//FileAttributes fa = File.GetAttributes(stringDir);  	//lvData[6] = fa.ToString();  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate);  	}  	lvData [5] = stringDir;  	//Create actual list item  	var lvItem = new ListViewItem (lvData' 2);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringDir in stringDirectories) {  	string stringDirName = GetPathName (stringDir);  	var objDir = new DirectoryInfo (stringDir);  	if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	dirCreateDate = objDir.CreationTime;  	dirModifyDate = objDir.LastWriteTime;  	lvData [0] = stringDirName;  	lvData [2] = objDir.Extension;  	//FileAttributes fa = File.GetAttributes(stringDir);  	//lvData[6] = fa.ToString();  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate);  	}  	lvData [5] = stringDir;  	//Create actual list item  	var lvItem = new ListViewItem (lvData' 2);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringDir in stringDirectories) {  	string stringDirName = GetPathName (stringDir);  	var objDir = new DirectoryInfo (stringDir);  	if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	dirCreateDate = objDir.CreationTime;  	dirModifyDate = objDir.LastWriteTime;  	lvData [0] = stringDirName;  	lvData [2] = objDir.Extension;  	//FileAttributes fa = File.GetAttributes(stringDir);  	//lvData[6] = fa.ToString();  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate);  	}  	lvData [5] = stringDir;  	//Create actual list item  	var lvItem = new ListViewItem (lvData' 2);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringDir in stringDirectories) {  	string stringDirName = GetPathName (stringDir);  	var objDir = new DirectoryInfo (stringDir);  	if ((((objDir.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objDir.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	dirCreateDate = objDir.CreationTime;  	dirModifyDate = objDir.LastWriteTime;  	lvData [0] = stringDirName;  	lvData [2] = objDir.Extension;  	//FileAttributes fa = File.GetAttributes(stringDir);  	//lvData[6] = fa.ToString();  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dirCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dirModifyDate);  	}  	lvData [5] = stringDir;  	//Create actual list item  	var lvItem = new ListViewItem (lvData' 2);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [2] = objDir.Extension;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  	//not in day light saving time adjust time  	lvData [3] = formatDate (dirCreateDate.AddHours (1));  }  else {  	//is in day light saving time adjust time  	lvData [3] = formatDate (dirCreateDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirCreateDate) == false) {  	//not in day light saving time adjust time  	lvData [3] = formatDate (dirCreateDate.AddHours (1));  }  else {  	//is in day light saving time adjust time  	lvData [3] = formatDate (dirCreateDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [3] = formatDate (dirCreateDate.AddHours (1));  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [3] = formatDate (dirCreateDate);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dirModifyDate.AddHours (1));  }  else {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dirModifyDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dirModifyDate) == false) {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dirModifyDate.AddHours (1));  }  else {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dirModifyDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [4] = formatDate (dirModifyDate.AddHours (1));  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [4] = formatDate (dirModifyDate);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [5] = stringDir;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringFile in stringFiles) {  	string stringFileName = stringFile;  	var objFileSize = new FileInfo (stringFileName);  	if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	Int64 lFileSize = objFileSize.Length;  	dtCreateDate = objFileSize.CreationTime;  	//GetCreationTime(stringFileName);  	dtModifyDate = objFileSize.LastWriteTime;  	//GetLastWriteTime(stringFileName);  	//create listview data  	lvData [0] = GetPathName (stringFileName);  	lvData [1] = formatSize (lFileSize);  	lvData [2] = objFileSize.Extension;  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate);  	}  	lvData [5] = stringFileName;  	//Create actual list item  	Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  	imageList1.Images.Add (ic);  	imageList3.Images.Add (ic);  	//var lvItem = new ListViewItem(lvData'4);  	var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringFile in stringFiles) {  	string stringFileName = stringFile;  	var objFileSize = new FileInfo (stringFileName);  	if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	Int64 lFileSize = objFileSize.Length;  	dtCreateDate = objFileSize.CreationTime;  	//GetCreationTime(stringFileName);  	dtModifyDate = objFileSize.LastWriteTime;  	//GetLastWriteTime(stringFileName);  	//create listview data  	lvData [0] = GetPathName (stringFileName);  	lvData [1] = formatSize (lFileSize);  	lvData [2] = objFileSize.Extension;  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate);  	}  	lvData [5] = stringFileName;  	//Create actual list item  	Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  	imageList1.Images.Add (ic);  	imageList3.Images.Add (ic);  	//var lvItem = new ListViewItem(lvData'4);  	var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringFile in stringFiles) {  	string stringFileName = stringFile;  	var objFileSize = new FileInfo (stringFileName);  	if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	Int64 lFileSize = objFileSize.Length;  	dtCreateDate = objFileSize.CreationTime;  	//GetCreationTime(stringFileName);  	dtModifyDate = objFileSize.LastWriteTime;  	//GetLastWriteTime(stringFileName);  	//create listview data  	lvData [0] = GetPathName (stringFileName);  	lvData [1] = formatSize (lFileSize);  	lvData [2] = objFileSize.Extension;  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate);  	}  	lvData [5] = stringFileName;  	//Create actual list item  	Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  	imageList1.Images.Add (ic);  	imageList3.Images.Add (ic);  	//var lvItem = new ListViewItem(lvData'4);  	var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringFile in stringFiles) {  	string stringFileName = stringFile;  	var objFileSize = new FileInfo (stringFileName);  	if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	Int64 lFileSize = objFileSize.Length;  	dtCreateDate = objFileSize.CreationTime;  	//GetCreationTime(stringFileName);  	dtModifyDate = objFileSize.LastWriteTime;  	//GetLastWriteTime(stringFileName);  	//create listview data  	lvData [0] = GetPathName (stringFileName);  	lvData [1] = formatSize (lFileSize);  	lvData [2] = objFileSize.Extension;  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate);  	}  	lvData [5] = stringFileName;  	//Create actual list item  	Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  	imageList1.Images.Add (ic);  	imageList3.Images.Add (ic);  	//var lvItem = new ListViewItem(lvData'4);  	var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringFile in stringFiles) {  	string stringFileName = stringFile;  	var objFileSize = new FileInfo (stringFileName);  	if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	Int64 lFileSize = objFileSize.Length;  	dtCreateDate = objFileSize.CreationTime;  	//GetCreationTime(stringFileName);  	dtModifyDate = objFileSize.LastWriteTime;  	//GetLastWriteTime(stringFileName);  	//create listview data  	lvData [0] = GetPathName (stringFileName);  	lvData [1] = formatSize (lFileSize);  	lvData [2] = objFileSize.Extension;  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate);  	}  	lvData [5] = stringFileName;  	//Create actual list item  	Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  	imageList1.Images.Add (ic);  	imageList3.Images.Add (ic);  	//var lvItem = new ListViewItem(lvData'4);  	var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: foreach (string stringFile in stringFiles) {  	string stringFileName = stringFile;  	var objFileSize = new FileInfo (stringFileName);  	if ((((objFileSize.Attributes) & FileAttributes.Hidden) == FileAttributes.Hidden) || (((objFileSize.Attributes) & FileAttributes.System) == FileAttributes.System)) {  		continue;  	}  	Int64 lFileSize = objFileSize.Length;  	dtCreateDate = objFileSize.CreationTime;  	//GetCreationTime(stringFileName);  	dtModifyDate = objFileSize.LastWriteTime;  	//GetLastWriteTime(stringFileName);  	//create listview data  	lvData [0] = GetPathName (stringFileName);  	lvData [1] = formatSize (lFileSize);  	lvData [2] = objFileSize.Extension;  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  		//not in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate.AddHours (1));  	}  	else {  		//is in day light saving time adjust time  		lvData [3] = formatDate (dtCreateDate);  	}  	//check if file is in local current day light saving time  	if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate.AddHours (1));  	}  	else {  		//not in day light saving time adjust time  		lvData [4] = formatDate (dtModifyDate);  	}  	lvData [5] = stringFileName;  	//Create actual list item  	Icon ic = Icon.ExtractAssociatedIcon (stringFileName);  	imageList1.Images.Add (ic);  	imageList3.Images.Add (ic);  	//var lvItem = new ListViewItem(lvData'4);  	var lvItem = new ListViewItem (lvData' imageList3.Images.Count - 1);  	listView1.Items.Add (lvItem);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [2] = objFileSize.Extension;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  	//not in day light saving time adjust time  	lvData [3] = formatDate (dtCreateDate.AddHours (1));  }  else {  	//is in day light saving time adjust time  	lvData [3] = formatDate (dtCreateDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtCreateDate) == false) {  	//not in day light saving time adjust time  	lvData [3] = formatDate (dtCreateDate.AddHours (1));  }  else {  	//is in day light saving time adjust time  	lvData [3] = formatDate (dtCreateDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [3] = formatDate (dtCreateDate.AddHours (1));  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [3] = formatDate (dtCreateDate);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dtModifyDate.AddHours (1));  }  else {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dtModifyDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: if (TimeZone.CurrentTimeZone.IsDaylightSavingTime (dtModifyDate) == false) {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dtModifyDate.AddHours (1));  }  else {  	//not in day light saving time adjust time  	lvData [4] = formatDate (dtModifyDate);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [4] = formatDate (dtModifyDate.AddHours (1));  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [4] = formatDate (dtModifyDate);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,FillFiles,The following statement contains a magic number: lvData [5] = stringFileName;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,formatSize,The following statement contains a magic number: if (lSize < 1024) {  	stringSize = lSize == 0 ? "0" : "1";  }  else {  	lKBSize = lSize / 1024;  	stringSize = lKBSize.ToString ("n"' myNfi);  	stringSize = stringSize.Replace (".00"' "");  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,formatSize,The following statement contains a magic number: if (lSize < 1024) {  	stringSize = lSize == 0 ? "0" : "1";  }  else {  	lKBSize = lSize / 1024;  	stringSize = lKBSize.ToString ("n"' myNfi);  	stringSize = stringSize.Replace (".00"' "");  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,formatSize,The following statement contains a magic number: lKBSize = lSize / 1024;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,treeView1_AfterCollapse,The following statement contains a magic number: if (nodeCurrent.SelectedImageIndex == 3) {  	nodeCurrent.SelectedImageIndex = 2;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,treeView1_AfterCollapse,The following statement contains a magic number: if (nodeCurrent.SelectedImageIndex == 3) {  	nodeCurrent.SelectedImageIndex = 2;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,treeView1_AfterCollapse,The following statement contains a magic number: nodeCurrent.SelectedImageIndex = 2;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,treeView1_AfterExpand,The following statement contains a magic number: if (nodeCurrent.SelectedImageIndex == 2) {  	nodeCurrent.SelectedImageIndex = 3;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,treeView1_AfterExpand,The following statement contains a magic number: if (nodeCurrent.SelectedImageIndex == 2) {  	nodeCurrent.SelectedImageIndex = 3;  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,treeView1_AfterExpand,The following statement contains a magic number: nodeCurrent.SelectedImageIndex = 3;  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,toolStripButton6_Click,The following statement contains a magic number: try {  	if (Directory.Exists (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName)) {  		//treeView1.SelectedNode = treeView1.Nodes.Find(this.listView1.TopItem.Text'true);  		FillFiles (Directory.GetParent (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName).FullName);  	}  }  catch (Exception er) {  	MessageBox.Show ("Error: " + er);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,toolStripButton6_Click,The following statement contains a magic number: try {  	if (Directory.Exists (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName)) {  		//treeView1.SelectedNode = treeView1.Nodes.Find(this.listView1.TopItem.Text'true);  		FillFiles (Directory.GetParent (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName).FullName);  	}  }  catch (Exception er) {  	MessageBox.Show ("Error: " + er);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,toolStripButton6_Click,The following statement contains a magic number: if (Directory.Exists (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName)) {  	//treeView1.SelectedNode = treeView1.Nodes.Find(this.listView1.TopItem.Text'true);  	FillFiles (Directory.GetParent (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName).FullName);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,toolStripButton6_Click,The following statement contains a magic number: if (Directory.Exists (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName)) {  	//treeView1.SelectedNode = treeView1.Nodes.Find(this.listView1.TopItem.Text'true);  	FillFiles (Directory.GetParent (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName).FullName);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,toolStripButton6_Click,The following statement contains a magic number: FillFiles (Directory.GetParent (Directory.GetParent (this.listView1.TopItem.SubItems [5].Text).FullName).FullName);  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,listView1_MouseDoubleClick,The following statement contains a magic number: if (objFile.Exists) {  	try {  		System.Diagnostics.Process.Start (lv.SelectedItems [0].SubItems [5].Text);  	}  	catch (Exception er) {  		//MessageBox.Show("Error: " + er);  	}  }  else {  	if (objDir.Exists) {  		FillFiles (objDir.FullName);  	}  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,listView1_MouseDoubleClick,The following statement contains a magic number: try {  	System.Diagnostics.Process.Start (lv.SelectedItems [0].SubItems [5].Text);  }  catch (Exception er) {  	//MessageBox.Show("Error: " + er);  }  
Magic Number,exam_FManager,Form2,C:\repos\lasitsin__GLDNBT\exam_FManager\exam_FManager\Form2.cs,listView1_MouseDoubleClick,The following statement contains a magic number: System.Diagnostics.Process.Start (lv.SelectedItems [0].SubItems [5].Text);  
