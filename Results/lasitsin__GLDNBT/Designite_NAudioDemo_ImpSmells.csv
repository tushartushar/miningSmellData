Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,EncodeFile,Cyclomatic complexity of the method is 9
Complex Method,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DecodeFile,Cyclomatic complexity of the method is 9
Complex Method,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,Cyclomatic complexity of the method is 9
Complex Method,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,buttonPlay_Click,Cyclomatic complexity of the method is 10
Long Parameter List,NAudioDemo.NetworkChatDemo,AcmChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\AcmChatCodec.cs,Convert,The method has 5 parameters.
Long Statement,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,GetTargetFormat,The length of the statement  "	AcmDriver.ShowFormatChooseDialog (this.Handle' "Select Compressed Format:"' AcmFormatEnumFlags.Convert' inputFormat' out outputFormat' out formatDescription' out formatTagDescription); " is 184.
Long Statement,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,buttonChooseFormat_Click,The length of the statement  "	if (AcmDriver.ShowFormatChooseDialog (this.Handle' "Choose a WaveFormat"' AcmFormatEnumFlags.None' null' out selectedFormat' out selectedFormatDescription' out selectedFormatTagDescription)) { " is 192.
Long Statement,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,buttonChooseFormat_Click,The length of the statement  "		MessageBox.Show (String.Format ("{0}\r\n{1}\r\n{2}"' selectedFormatDescription' selectedFormatTagDescription' selectedFormat)); " is 127.
Long Statement,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The length of the statement  "				builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize); " is 433.
Long Statement,NAudioDemo,AsioDirectPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AsioDirectDemo\AsioDirectPanel.cs,Play,The length of the statement  "	if (this.asioOut != null && (this.asioOut.DriverName != comboBoxAsioDevice.Text || this.asioOut.ChannelOffset != GetUserSpecifiedChannelOffset ())) { " is 149.
Long Statement,NAudioDemo,MidiInPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\MidiInDemo\MidiInPanel.cs,midiIn_ErrorReceived,The length of the statement  "	progressLog1.LogMessage (Color.Red' String.Format ("Time {0} Message 0x{1:X8} Event {2}"' e.Timestamp' e.RawMessage' e.MidiEvent)); " is 131.
Long Statement,NAudioDemo,MidiInPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\MidiInDemo\MidiInPanel.cs,midiIn_MessageReceived,The length of the statement  "	if (checkBoxFilterAutoSensing.Checked && e.MidiEvent != null && e.MidiEvent.CommandCode == MidiCommandCode.AutoSensing) { " is 121.
Long Statement,NAudioDemo,MidiInPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\MidiInDemo\MidiInPanel.cs,midiIn_MessageReceived,The length of the statement  "	progressLog1.LogMessage (Color.Blue' String.Format ("Time {0} Message 0x{1:X8} Event {2}"' e.Timestamp' e.RawMessage' e.MidiEvent)); " is 132.
Long Statement,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The length of the statement  "				if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) { " is 169.
Long Statement,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The length of the statement  "						WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate); " is 142.
Long Statement,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,buttonPlay_Click,The length of the statement  "	labelTotalTime.Text = String.Format ("{0:00}:{1:00}"' (int)fileWaveStream.TotalTime.TotalMinutes' fileWaveStream.TotalTime.Seconds); " is 132.
Long Statement,NAudioDemo.AudioPlaybackDemo,WasapiOutPlugin,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\WasapiOutPlugin.cs,CreateDevice,The length of the statement  "	var wasapi = new WasapiOut (settingsPanel.SelectedDevice' settingsPanel.ShareMode' settingsPanel.UseEventCallback' latency); " is 124.
Long Statement,NAudioDemo.AudioPlaybackDemo,WaveInputFilePlugin,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\WaveInputFilePlugin.cs,CreateWaveStream,The length of the statement  "	if (readerStream.WaveFormat.Encoding != WaveFormatEncoding.Pcm && readerStream.WaveFormat.Encoding != WaveFormatEncoding.IeeeFloat) { " is 133.
Long Statement,NAudioDemo.AudioPlaybackDemo,WaveOutPlugin,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\WaveOutPlugin.cs,CreateDevice,The length of the statement  "		WaveCallbackInfo callbackInfo = strategy == WaveCallbackStrategy.NewWindow ? WaveCallbackInfo.NewWindow () : WaveCallbackInfo.FunctionCallback (); " is 146.
Long Statement,NAudioDemo.NetworkChatDemo,AcmChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\AcmChatCodec.cs,Convert,The length of the statement  "		Array.Copy (conversionStream.SourceBuffer' sourceBytesConverted' conversionStream.SourceBuffer' 0' sourceBytesLeftovers); " is 121.
Long Statement,NAudioDemo.NetworkChatDemo,NetworkChatPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\NetworkChatPanel.cs,Connect,The length of the statement  "	// http://stackoverflow.com/questions/687868/sending-and-receiving-udp-packets-between-two-programs-on-the-same-computer " is 120.
Long Statement,NAudioDemo.NetworkChatDemo,NetworkChatPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\NetworkChatPanel.cs,Disconnect,The length of the statement  "		// a bit naughty but we have designed the codecs to support multiple calls to Dispose' recreating their resources if Encode/Decode called again " is 143.
Long Statement,NAudioDemo.NetworkChatDemo,SpeexChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\SpeexChatCodec.cs,Encode,The length of the statement  "	Debug.WriteLine (String.Format ("NSpeex: In {0} bytes' encoded {1} bytes [enc frame size = {2}]"' length' bytesWritten' encoder.FrameSize)); " is 140.
Long Statement,NAudioDemo.NetworkChatDemo,SpeexChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\SpeexChatCodec.cs,Decode,The length of the statement  "	Debug.WriteLine (String.Format ("NSpeex: In {0} bytes' decoded {1} bytes [dec frame size = {2}]"' length' bytesDecoded' decoder.FrameSize)); " is 140.
Empty Catch Block,NAudioDemo.NetworkChatDemo,NetworkChatPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\NetworkChatPanel.cs,ListenerThread,The method has an empty catch block.
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: try {  	StringBuilder builder = new StringBuilder ();  	builder.AppendFormat ("Long Name: {0}\r\n"' driver.LongName);  	builder.AppendFormat ("Short Name: {0}\r\n"' driver.ShortName);  	builder.AppendFormat ("Driver ID: {0}\r\n"' driver.DriverId);  	driver.Open ();  	builder.AppendFormat ("FormatTags:\r\n");  	foreach (AcmFormatTag formatTag in driver.FormatTags) {  		builder.AppendFormat ("===========================================\r\n");  		builder.AppendFormat ("Format Tag {0}: {1}\r\n"' formatTag.FormatTagIndex' formatTag.FormatDescription);  		builder.AppendFormat ("   Standard Format Count: {0}\r\n"' formatTag.StandardFormatsCount);  		builder.AppendFormat ("   Support Flags: {0}\r\n"' formatTag.SupportFlags);  		builder.AppendFormat ("   Format Tag: {0}' Format Size: {1}\r\n"' formatTag.FormatTag' formatTag.FormatSize);  		builder.AppendFormat ("   Formats:\r\n");  		foreach (AcmFormat format in driver.GetFormats (formatTag)) {  			builder.AppendFormat ("   ===========================================\r\n");  			builder.AppendFormat ("   Format {0}: {1}\r\n"' format.FormatIndex' format.FormatDescription);  			builder.AppendFormat ("      FormatTag: {0}' Support Flags: {1}\r\n"' format.FormatTag' format.SupportFlags);  			builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  			if (format.WaveFormat is WaveFormatExtraData && format.WaveFormat.ExtraSize > 0) {  				WaveFormatExtraData wfed = (WaveFormatExtraData)format.WaveFormat;  				builder.Append ("      Extra Bytes:\r\n      ");  				for (int n = 0; n < format.WaveFormat.ExtraSize; n++) {  					builder.AppendFormat ("{0:X2} "' wfed.ExtraData [n]);  				}  				builder.Append ("\r\n");  			}  		}  	}  	driver.Close ();  	return builder.ToString ();  }  catch (Exception e) {  	return e.ToString ();  }  
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: try {  	StringBuilder builder = new StringBuilder ();  	builder.AppendFormat ("Long Name: {0}\r\n"' driver.LongName);  	builder.AppendFormat ("Short Name: {0}\r\n"' driver.ShortName);  	builder.AppendFormat ("Driver ID: {0}\r\n"' driver.DriverId);  	driver.Open ();  	builder.AppendFormat ("FormatTags:\r\n");  	foreach (AcmFormatTag formatTag in driver.FormatTags) {  		builder.AppendFormat ("===========================================\r\n");  		builder.AppendFormat ("Format Tag {0}: {1}\r\n"' formatTag.FormatTagIndex' formatTag.FormatDescription);  		builder.AppendFormat ("   Standard Format Count: {0}\r\n"' formatTag.StandardFormatsCount);  		builder.AppendFormat ("   Support Flags: {0}\r\n"' formatTag.SupportFlags);  		builder.AppendFormat ("   Format Tag: {0}' Format Size: {1}\r\n"' formatTag.FormatTag' formatTag.FormatSize);  		builder.AppendFormat ("   Formats:\r\n");  		foreach (AcmFormat format in driver.GetFormats (formatTag)) {  			builder.AppendFormat ("   ===========================================\r\n");  			builder.AppendFormat ("   Format {0}: {1}\r\n"' format.FormatIndex' format.FormatDescription);  			builder.AppendFormat ("      FormatTag: {0}' Support Flags: {1}\r\n"' format.FormatTag' format.SupportFlags);  			builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  			if (format.WaveFormat is WaveFormatExtraData && format.WaveFormat.ExtraSize > 0) {  				WaveFormatExtraData wfed = (WaveFormatExtraData)format.WaveFormat;  				builder.Append ("      Extra Bytes:\r\n      ");  				for (int n = 0; n < format.WaveFormat.ExtraSize; n++) {  					builder.AppendFormat ("{0:X2} "' wfed.ExtraData [n]);  				}  				builder.Append ("\r\n");  			}  		}  	}  	driver.Close ();  	return builder.ToString ();  }  catch (Exception e) {  	return e.ToString ();  }  
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: foreach (AcmFormatTag formatTag in driver.FormatTags) {  	builder.AppendFormat ("===========================================\r\n");  	builder.AppendFormat ("Format Tag {0}: {1}\r\n"' formatTag.FormatTagIndex' formatTag.FormatDescription);  	builder.AppendFormat ("   Standard Format Count: {0}\r\n"' formatTag.StandardFormatsCount);  	builder.AppendFormat ("   Support Flags: {0}\r\n"' formatTag.SupportFlags);  	builder.AppendFormat ("   Format Tag: {0}' Format Size: {1}\r\n"' formatTag.FormatTag' formatTag.FormatSize);  	builder.AppendFormat ("   Formats:\r\n");  	foreach (AcmFormat format in driver.GetFormats (formatTag)) {  		builder.AppendFormat ("   ===========================================\r\n");  		builder.AppendFormat ("   Format {0}: {1}\r\n"' format.FormatIndex' format.FormatDescription);  		builder.AppendFormat ("      FormatTag: {0}' Support Flags: {1}\r\n"' format.FormatTag' format.SupportFlags);  		builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  		if (format.WaveFormat is WaveFormatExtraData && format.WaveFormat.ExtraSize > 0) {  			WaveFormatExtraData wfed = (WaveFormatExtraData)format.WaveFormat;  			builder.Append ("      Extra Bytes:\r\n      ");  			for (int n = 0; n < format.WaveFormat.ExtraSize; n++) {  				builder.AppendFormat ("{0:X2} "' wfed.ExtraData [n]);  			}  			builder.Append ("\r\n");  		}  	}  }  
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: foreach (AcmFormatTag formatTag in driver.FormatTags) {  	builder.AppendFormat ("===========================================\r\n");  	builder.AppendFormat ("Format Tag {0}: {1}\r\n"' formatTag.FormatTagIndex' formatTag.FormatDescription);  	builder.AppendFormat ("   Standard Format Count: {0}\r\n"' formatTag.StandardFormatsCount);  	builder.AppendFormat ("   Support Flags: {0}\r\n"' formatTag.SupportFlags);  	builder.AppendFormat ("   Format Tag: {0}' Format Size: {1}\r\n"' formatTag.FormatTag' formatTag.FormatSize);  	builder.AppendFormat ("   Formats:\r\n");  	foreach (AcmFormat format in driver.GetFormats (formatTag)) {  		builder.AppendFormat ("   ===========================================\r\n");  		builder.AppendFormat ("   Format {0}: {1}\r\n"' format.FormatIndex' format.FormatDescription);  		builder.AppendFormat ("      FormatTag: {0}' Support Flags: {1}\r\n"' format.FormatTag' format.SupportFlags);  		builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  		if (format.WaveFormat is WaveFormatExtraData && format.WaveFormat.ExtraSize > 0) {  			WaveFormatExtraData wfed = (WaveFormatExtraData)format.WaveFormat;  			builder.Append ("      Extra Bytes:\r\n      ");  			for (int n = 0; n < format.WaveFormat.ExtraSize; n++) {  				builder.AppendFormat ("{0:X2} "' wfed.ExtraData [n]);  			}  			builder.Append ("\r\n");  		}  	}  }  
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: foreach (AcmFormat format in driver.GetFormats (formatTag)) {  	builder.AppendFormat ("   ===========================================\r\n");  	builder.AppendFormat ("   Format {0}: {1}\r\n"' format.FormatIndex' format.FormatDescription);  	builder.AppendFormat ("      FormatTag: {0}' Support Flags: {1}\r\n"' format.FormatTag' format.SupportFlags);  	builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  	if (format.WaveFormat is WaveFormatExtraData && format.WaveFormat.ExtraSize > 0) {  		WaveFormatExtraData wfed = (WaveFormatExtraData)format.WaveFormat;  		builder.Append ("      Extra Bytes:\r\n      ");  		for (int n = 0; n < format.WaveFormat.ExtraSize; n++) {  			builder.AppendFormat ("{0:X2} "' wfed.ExtraData [n]);  		}  		builder.Append ("\r\n");  	}  }  
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: foreach (AcmFormat format in driver.GetFormats (formatTag)) {  	builder.AppendFormat ("   ===========================================\r\n");  	builder.AppendFormat ("   Format {0}: {1}\r\n"' format.FormatIndex' format.FormatDescription);  	builder.AppendFormat ("      FormatTag: {0}' Support Flags: {1}\r\n"' format.FormatTag' format.SupportFlags);  	builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  	if (format.WaveFormat is WaveFormatExtraData && format.WaveFormat.ExtraSize > 0) {  		WaveFormatExtraData wfed = (WaveFormatExtraData)format.WaveFormat;  		builder.Append ("      Extra Bytes:\r\n      ");  		for (int n = 0; n < format.WaveFormat.ExtraSize; n++) {  			builder.AppendFormat ("{0:X2} "' wfed.ExtraData [n]);  		}  		builder.Append ("\r\n");  	}  }  
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  
Magic Number,NAudioDemo,AcmPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AcmDemo\AcmPanel.cs,DescribeCodec,The following statement contains a magic number: builder.AppendFormat ("      WaveFormat: {0} {1}Hz Channels: {2} Bits: {3} Block Align: {4}' AverageBytesPerSecond: {5} ({6:0.0} kbps)' Extra Size: {7}\r\n"' format.WaveFormat.Encoding' format.WaveFormat.SampleRate' format.WaveFormat.Channels' format.WaveFormat.BitsPerSample' format.WaveFormat.BlockAlign' format.WaveFormat.AverageBytesPerSecond' (format.WaveFormat.AverageBytesPerSecond * 8) / 1000.0' format.WaveFormat.ExtraSize);  
Magic Number,NAudioDemo,MainForm,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\MainForm.cs,MainForm,The following statement contains a magic number: this.Text = this.Text + ((System.Runtime.InteropServices.Marshal.SizeOf (IntPtr.Zero) == 8) ? " (x64)" : " (x86)");  
Magic Number,NAudioDemo,MidiInPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\MidiInDemo\MidiInPanel.cs,MidiInForm_Load,The following statement contains a magic number: for (int note = 50; note < 62; note++) {  	AddNoteEvent (note);  }  
Magic Number,NAudioDemo,MidiInPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\MidiInDemo\MidiInPanel.cs,MidiInForm_Load,The following statement contains a magic number: for (int note = 50; note < 62; note++) {  	AddNoteEvent (note);  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: try {  	using (var responseStream = resp.GetResponseStream ()) {  		var readFullyStream = new ReadFullyStream (responseStream);  		do {  			if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  				Debug.WriteLine ("Buffer getting full' taking a break");  				Thread.Sleep (500);  			}  			else {  				Mp3Frame frame = null;  				try {  					frame = Mp3Frame.LoadFromStream (readFullyStream);  				}  				catch (EndOfStreamException) {  					this.fullyDownloaded = true;  					// reached the end of the MP3 file / stream  					break;  				}  				catch (WebException) {  					// probably we have aborted download from the GUI thread  					break;  				}  				if (decompressor == null) {  					// don't think these details matter too much - just help ACM select the right codec  					// however' the buffered provider doesn't know what sample rate it is working at  					// until we have a frame  					WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  					decompressor = new AcmMp3FrameDecompressor (waveFormat);  					this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  					this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  					// allow us to get well ahead of ourselves  					//this.bufferedWaveProvider.BufferedDuration = 250;  				}  				int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  				//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  				bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  			}  		}  		while (playbackState != StreamingPlaybackState.Stopped);  		Debug.WriteLine ("Exiting");  		// was doing this in a finally block' but for some reason  		// we are hanging on response stream .Dispose so never get there  		decompressor.Dispose ();  	}  }  finally {  	if (decompressor != null) {  		decompressor.Dispose ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: try {  	using (var responseStream = resp.GetResponseStream ()) {  		var readFullyStream = new ReadFullyStream (responseStream);  		do {  			if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  				Debug.WriteLine ("Buffer getting full' taking a break");  				Thread.Sleep (500);  			}  			else {  				Mp3Frame frame = null;  				try {  					frame = Mp3Frame.LoadFromStream (readFullyStream);  				}  				catch (EndOfStreamException) {  					this.fullyDownloaded = true;  					// reached the end of the MP3 file / stream  					break;  				}  				catch (WebException) {  					// probably we have aborted download from the GUI thread  					break;  				}  				if (decompressor == null) {  					// don't think these details matter too much - just help ACM select the right codec  					// however' the buffered provider doesn't know what sample rate it is working at  					// until we have a frame  					WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  					decompressor = new AcmMp3FrameDecompressor (waveFormat);  					this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  					this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  					// allow us to get well ahead of ourselves  					//this.bufferedWaveProvider.BufferedDuration = 250;  				}  				int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  				//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  				bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  			}  		}  		while (playbackState != StreamingPlaybackState.Stopped);  		Debug.WriteLine ("Exiting");  		// was doing this in a finally block' but for some reason  		// we are hanging on response stream .Dispose so never get there  		decompressor.Dispose ();  	}  }  finally {  	if (decompressor != null) {  		decompressor.Dispose ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: try {  	using (var responseStream = resp.GetResponseStream ()) {  		var readFullyStream = new ReadFullyStream (responseStream);  		do {  			if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  				Debug.WriteLine ("Buffer getting full' taking a break");  				Thread.Sleep (500);  			}  			else {  				Mp3Frame frame = null;  				try {  					frame = Mp3Frame.LoadFromStream (readFullyStream);  				}  				catch (EndOfStreamException) {  					this.fullyDownloaded = true;  					// reached the end of the MP3 file / stream  					break;  				}  				catch (WebException) {  					// probably we have aborted download from the GUI thread  					break;  				}  				if (decompressor == null) {  					// don't think these details matter too much - just help ACM select the right codec  					// however' the buffered provider doesn't know what sample rate it is working at  					// until we have a frame  					WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  					decompressor = new AcmMp3FrameDecompressor (waveFormat);  					this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  					this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  					// allow us to get well ahead of ourselves  					//this.bufferedWaveProvider.BufferedDuration = 250;  				}  				int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  				//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  				bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  			}  		}  		while (playbackState != StreamingPlaybackState.Stopped);  		Debug.WriteLine ("Exiting");  		// was doing this in a finally block' but for some reason  		// we are hanging on response stream .Dispose so never get there  		decompressor.Dispose ();  	}  }  finally {  	if (decompressor != null) {  		decompressor.Dispose ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: try {  	using (var responseStream = resp.GetResponseStream ()) {  		var readFullyStream = new ReadFullyStream (responseStream);  		do {  			if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  				Debug.WriteLine ("Buffer getting full' taking a break");  				Thread.Sleep (500);  			}  			else {  				Mp3Frame frame = null;  				try {  					frame = Mp3Frame.LoadFromStream (readFullyStream);  				}  				catch (EndOfStreamException) {  					this.fullyDownloaded = true;  					// reached the end of the MP3 file / stream  					break;  				}  				catch (WebException) {  					// probably we have aborted download from the GUI thread  					break;  				}  				if (decompressor == null) {  					// don't think these details matter too much - just help ACM select the right codec  					// however' the buffered provider doesn't know what sample rate it is working at  					// until we have a frame  					WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  					decompressor = new AcmMp3FrameDecompressor (waveFormat);  					this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  					this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  					// allow us to get well ahead of ourselves  					//this.bufferedWaveProvider.BufferedDuration = 250;  				}  				int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  				//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  				bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  			}  		}  		while (playbackState != StreamingPlaybackState.Stopped);  		Debug.WriteLine ("Exiting");  		// was doing this in a finally block' but for some reason  		// we are hanging on response stream .Dispose so never get there  		decompressor.Dispose ();  	}  }  finally {  	if (decompressor != null) {  		decompressor.Dispose ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: using (var responseStream = resp.GetResponseStream ()) {  	var readFullyStream = new ReadFullyStream (responseStream);  	do {  		if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  			Debug.WriteLine ("Buffer getting full' taking a break");  			Thread.Sleep (500);  		}  		else {  			Mp3Frame frame = null;  			try {  				frame = Mp3Frame.LoadFromStream (readFullyStream);  			}  			catch (EndOfStreamException) {  				this.fullyDownloaded = true;  				// reached the end of the MP3 file / stream  				break;  			}  			catch (WebException) {  				// probably we have aborted download from the GUI thread  				break;  			}  			if (decompressor == null) {  				// don't think these details matter too much - just help ACM select the right codec  				// however' the buffered provider doesn't know what sample rate it is working at  				// until we have a frame  				WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  				decompressor = new AcmMp3FrameDecompressor (waveFormat);  				this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  				this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  				// allow us to get well ahead of ourselves  				//this.bufferedWaveProvider.BufferedDuration = 250;  			}  			int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  			//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  			bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  		}  	}  	while (playbackState != StreamingPlaybackState.Stopped);  	Debug.WriteLine ("Exiting");  	// was doing this in a finally block' but for some reason  	// we are hanging on response stream .Dispose so never get there  	decompressor.Dispose ();  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: using (var responseStream = resp.GetResponseStream ()) {  	var readFullyStream = new ReadFullyStream (responseStream);  	do {  		if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  			Debug.WriteLine ("Buffer getting full' taking a break");  			Thread.Sleep (500);  		}  		else {  			Mp3Frame frame = null;  			try {  				frame = Mp3Frame.LoadFromStream (readFullyStream);  			}  			catch (EndOfStreamException) {  				this.fullyDownloaded = true;  				// reached the end of the MP3 file / stream  				break;  			}  			catch (WebException) {  				// probably we have aborted download from the GUI thread  				break;  			}  			if (decompressor == null) {  				// don't think these details matter too much - just help ACM select the right codec  				// however' the buffered provider doesn't know what sample rate it is working at  				// until we have a frame  				WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  				decompressor = new AcmMp3FrameDecompressor (waveFormat);  				this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  				this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  				// allow us to get well ahead of ourselves  				//this.bufferedWaveProvider.BufferedDuration = 250;  			}  			int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  			//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  			bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  		}  	}  	while (playbackState != StreamingPlaybackState.Stopped);  	Debug.WriteLine ("Exiting");  	// was doing this in a finally block' but for some reason  	// we are hanging on response stream .Dispose so never get there  	decompressor.Dispose ();  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: using (var responseStream = resp.GetResponseStream ()) {  	var readFullyStream = new ReadFullyStream (responseStream);  	do {  		if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  			Debug.WriteLine ("Buffer getting full' taking a break");  			Thread.Sleep (500);  		}  		else {  			Mp3Frame frame = null;  			try {  				frame = Mp3Frame.LoadFromStream (readFullyStream);  			}  			catch (EndOfStreamException) {  				this.fullyDownloaded = true;  				// reached the end of the MP3 file / stream  				break;  			}  			catch (WebException) {  				// probably we have aborted download from the GUI thread  				break;  			}  			if (decompressor == null) {  				// don't think these details matter too much - just help ACM select the right codec  				// however' the buffered provider doesn't know what sample rate it is working at  				// until we have a frame  				WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  				decompressor = new AcmMp3FrameDecompressor (waveFormat);  				this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  				this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  				// allow us to get well ahead of ourselves  				//this.bufferedWaveProvider.BufferedDuration = 250;  			}  			int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  			//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  			bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  		}  	}  	while (playbackState != StreamingPlaybackState.Stopped);  	Debug.WriteLine ("Exiting");  	// was doing this in a finally block' but for some reason  	// we are hanging on response stream .Dispose so never get there  	decompressor.Dispose ();  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: using (var responseStream = resp.GetResponseStream ()) {  	var readFullyStream = new ReadFullyStream (responseStream);  	do {  		if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  			Debug.WriteLine ("Buffer getting full' taking a break");  			Thread.Sleep (500);  		}  		else {  			Mp3Frame frame = null;  			try {  				frame = Mp3Frame.LoadFromStream (readFullyStream);  			}  			catch (EndOfStreamException) {  				this.fullyDownloaded = true;  				// reached the end of the MP3 file / stream  				break;  			}  			catch (WebException) {  				// probably we have aborted download from the GUI thread  				break;  			}  			if (decompressor == null) {  				// don't think these details matter too much - just help ACM select the right codec  				// however' the buffered provider doesn't know what sample rate it is working at  				// until we have a frame  				WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  				decompressor = new AcmMp3FrameDecompressor (waveFormat);  				this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  				this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  				// allow us to get well ahead of ourselves  				//this.bufferedWaveProvider.BufferedDuration = 250;  			}  			int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  			//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  			bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  		}  	}  	while (playbackState != StreamingPlaybackState.Stopped);  	Debug.WriteLine ("Exiting");  	// was doing this in a finally block' but for some reason  	// we are hanging on response stream .Dispose so never get there  	decompressor.Dispose ();  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: do {  	if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  		Debug.WriteLine ("Buffer getting full' taking a break");  		Thread.Sleep (500);  	}  	else {  		Mp3Frame frame = null;  		try {  			frame = Mp3Frame.LoadFromStream (readFullyStream);  		}  		catch (EndOfStreamException) {  			this.fullyDownloaded = true;  			// reached the end of the MP3 file / stream  			break;  		}  		catch (WebException) {  			// probably we have aborted download from the GUI thread  			break;  		}  		if (decompressor == null) {  			// don't think these details matter too much - just help ACM select the right codec  			// however' the buffered provider doesn't know what sample rate it is working at  			// until we have a frame  			WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  			decompressor = new AcmMp3FrameDecompressor (waveFormat);  			this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  			this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  			// allow us to get well ahead of ourselves  			//this.bufferedWaveProvider.BufferedDuration = 250;  		}  		int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  		//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  		bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  	}  }  while (playbackState != StreamingPlaybackState.Stopped);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: do {  	if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  		Debug.WriteLine ("Buffer getting full' taking a break");  		Thread.Sleep (500);  	}  	else {  		Mp3Frame frame = null;  		try {  			frame = Mp3Frame.LoadFromStream (readFullyStream);  		}  		catch (EndOfStreamException) {  			this.fullyDownloaded = true;  			// reached the end of the MP3 file / stream  			break;  		}  		catch (WebException) {  			// probably we have aborted download from the GUI thread  			break;  		}  		if (decompressor == null) {  			// don't think these details matter too much - just help ACM select the right codec  			// however' the buffered provider doesn't know what sample rate it is working at  			// until we have a frame  			WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  			decompressor = new AcmMp3FrameDecompressor (waveFormat);  			this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  			this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  			// allow us to get well ahead of ourselves  			//this.bufferedWaveProvider.BufferedDuration = 250;  		}  		int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  		//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  		bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  	}  }  while (playbackState != StreamingPlaybackState.Stopped);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: do {  	if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  		Debug.WriteLine ("Buffer getting full' taking a break");  		Thread.Sleep (500);  	}  	else {  		Mp3Frame frame = null;  		try {  			frame = Mp3Frame.LoadFromStream (readFullyStream);  		}  		catch (EndOfStreamException) {  			this.fullyDownloaded = true;  			// reached the end of the MP3 file / stream  			break;  		}  		catch (WebException) {  			// probably we have aborted download from the GUI thread  			break;  		}  		if (decompressor == null) {  			// don't think these details matter too much - just help ACM select the right codec  			// however' the buffered provider doesn't know what sample rate it is working at  			// until we have a frame  			WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  			decompressor = new AcmMp3FrameDecompressor (waveFormat);  			this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  			this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  			// allow us to get well ahead of ourselves  			//this.bufferedWaveProvider.BufferedDuration = 250;  		}  		int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  		//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  		bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  	}  }  while (playbackState != StreamingPlaybackState.Stopped);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: do {  	if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  		Debug.WriteLine ("Buffer getting full' taking a break");  		Thread.Sleep (500);  	}  	else {  		Mp3Frame frame = null;  		try {  			frame = Mp3Frame.LoadFromStream (readFullyStream);  		}  		catch (EndOfStreamException) {  			this.fullyDownloaded = true;  			// reached the end of the MP3 file / stream  			break;  		}  		catch (WebException) {  			// probably we have aborted download from the GUI thread  			break;  		}  		if (decompressor == null) {  			// don't think these details matter too much - just help ACM select the right codec  			// however' the buffered provider doesn't know what sample rate it is working at  			// until we have a frame  			WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  			decompressor = new AcmMp3FrameDecompressor (waveFormat);  			this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  			this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  			// allow us to get well ahead of ourselves  			//this.bufferedWaveProvider.BufferedDuration = 250;  		}  		int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  		//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  		bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  	}  }  while (playbackState != StreamingPlaybackState.Stopped);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  	Debug.WriteLine ("Buffer getting full' taking a break");  	Thread.Sleep (500);  }  else {  	Mp3Frame frame = null;  	try {  		frame = Mp3Frame.LoadFromStream (readFullyStream);  	}  	catch (EndOfStreamException) {  		this.fullyDownloaded = true;  		// reached the end of the MP3 file / stream  		break;  	}  	catch (WebException) {  		// probably we have aborted download from the GUI thread  		break;  	}  	if (decompressor == null) {  		// don't think these details matter too much - just help ACM select the right codec  		// however' the buffered provider doesn't know what sample rate it is working at  		// until we have a frame  		WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  		decompressor = new AcmMp3FrameDecompressor (waveFormat);  		this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  		this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  		// allow us to get well ahead of ourselves  		//this.bufferedWaveProvider.BufferedDuration = 250;  	}  	int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  	//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  	bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  	Debug.WriteLine ("Buffer getting full' taking a break");  	Thread.Sleep (500);  }  else {  	Mp3Frame frame = null;  	try {  		frame = Mp3Frame.LoadFromStream (readFullyStream);  	}  	catch (EndOfStreamException) {  		this.fullyDownloaded = true;  		// reached the end of the MP3 file / stream  		break;  	}  	catch (WebException) {  		// probably we have aborted download from the GUI thread  		break;  	}  	if (decompressor == null) {  		// don't think these details matter too much - just help ACM select the right codec  		// however' the buffered provider doesn't know what sample rate it is working at  		// until we have a frame  		WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  		decompressor = new AcmMp3FrameDecompressor (waveFormat);  		this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  		this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  		// allow us to get well ahead of ourselves  		//this.bufferedWaveProvider.BufferedDuration = 250;  	}  	int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  	//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  	bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  	Debug.WriteLine ("Buffer getting full' taking a break");  	Thread.Sleep (500);  }  else {  	Mp3Frame frame = null;  	try {  		frame = Mp3Frame.LoadFromStream (readFullyStream);  	}  	catch (EndOfStreamException) {  		this.fullyDownloaded = true;  		// reached the end of the MP3 file / stream  		break;  	}  	catch (WebException) {  		// probably we have aborted download from the GUI thread  		break;  	}  	if (decompressor == null) {  		// don't think these details matter too much - just help ACM select the right codec  		// however' the buffered provider doesn't know what sample rate it is working at  		// until we have a frame  		WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  		decompressor = new AcmMp3FrameDecompressor (waveFormat);  		this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  		this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  		// allow us to get well ahead of ourselves  		//this.bufferedWaveProvider.BufferedDuration = 250;  	}  	int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  	//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  	bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: if (bufferedWaveProvider != null && bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes < bufferedWaveProvider.WaveFormat.AverageBytesPerSecond / 4) {  	Debug.WriteLine ("Buffer getting full' taking a break");  	Thread.Sleep (500);  }  else {  	Mp3Frame frame = null;  	try {  		frame = Mp3Frame.LoadFromStream (readFullyStream);  	}  	catch (EndOfStreamException) {  		this.fullyDownloaded = true;  		// reached the end of the MP3 file / stream  		break;  	}  	catch (WebException) {  		// probably we have aborted download from the GUI thread  		break;  	}  	if (decompressor == null) {  		// don't think these details matter too much - just help ACM select the right codec  		// however' the buffered provider doesn't know what sample rate it is working at  		// until we have a frame  		WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  		decompressor = new AcmMp3FrameDecompressor (waveFormat);  		this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  		this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  		// allow us to get well ahead of ourselves  		//this.bufferedWaveProvider.BufferedDuration = 250;  	}  	int decompressed = decompressor.DecompressFrame (frame' buffer' 0);  	//Debug.WriteLine(String.Format("Decompressed a frame {0}"' decompressed));  	bufferedWaveProvider.AddSamples (buffer' 0' decompressed);  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: if (decompressor == null) {  	// don't think these details matter too much - just help ACM select the right codec  	// however' the buffered provider doesn't know what sample rate it is working at  	// until we have a frame  	WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  	decompressor = new AcmMp3FrameDecompressor (waveFormat);  	this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  	this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  	// allow us to get well ahead of ourselves  	//this.bufferedWaveProvider.BufferedDuration = 250;  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: if (decompressor == null) {  	// don't think these details matter too much - just help ACM select the right codec  	// however' the buffered provider doesn't know what sample rate it is working at  	// until we have a frame  	WaveFormat waveFormat = new Mp3WaveFormat (frame.SampleRate' frame.ChannelMode == ChannelMode.Mono ? 1 : 2' frame.FrameLength' frame.BitRate);  	decompressor = new AcmMp3FrameDecompressor (waveFormat);  	this.bufferedWaveProvider = new BufferedWaveProvider (decompressor.OutputFormat);  	this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  	// allow us to get well ahead of ourselves  	//this.bufferedWaveProvider.BufferedDuration = 250;  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StreamMP3,The following statement contains a magic number: this.bufferedWaveProvider.BufferDuration = TimeSpan.FromSeconds (20);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StopPlayback,The following statement contains a magic number: if (playbackState != StreamingPlaybackState.Stopped) {  	if (!fullyDownloaded) {  		webRequest.Abort ();  	}  	this.playbackState = StreamingPlaybackState.Stopped;  	if (waveOut != null) {  		waveOut.Stop ();  		waveOut.Dispose ();  		waveOut = null;  	}  	timer1.Enabled = false;  	// n.b. streaming thread may not yet have exited  	Thread.Sleep (500);  	ShowBufferState (0);  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,StopPlayback,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,ShowBufferState,The following statement contains a magic number: progressBarBuffer.Value = (int)(totalSeconds * 1000);  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (playbackState != StreamingPlaybackState.Stopped) {  	if (this.waveOut == null && this.bufferedWaveProvider != null) {  		Debug.WriteLine ("Creating WaveOut Device");  		this.waveOut = CreateWaveOut ();  		waveOut.PlaybackStopped += new EventHandler (waveOut_PlaybackStopped);  		this.volumeProvider = new VolumeWaveProvider16 (bufferedWaveProvider);  		this.volumeProvider.Volume = this.volumeSlider1.Volume;  		waveOut.Init (volumeProvider);  		progressBarBuffer.Maximum = (int)bufferedWaveProvider.BufferDuration.TotalMilliseconds;  	}  	else if (bufferedWaveProvider != null) {  		var bufferedSeconds = bufferedWaveProvider.BufferedDuration.TotalSeconds;  		ShowBufferState (bufferedSeconds);  		// make it stutter less if we buffer up a decent amount before playing  		if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  			this.playbackState = StreamingPlaybackState.Buffering;  			waveOut.Pause ();  			Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  		}  		else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  			waveOut.Play ();  			Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  			this.playbackState = StreamingPlaybackState.Playing;  		}  		else if (this.fullyDownloaded && bufferedSeconds == 0) {  			Debug.WriteLine ("Reached end of stream");  			StopPlayback ();  		}  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (playbackState != StreamingPlaybackState.Stopped) {  	if (this.waveOut == null && this.bufferedWaveProvider != null) {  		Debug.WriteLine ("Creating WaveOut Device");  		this.waveOut = CreateWaveOut ();  		waveOut.PlaybackStopped += new EventHandler (waveOut_PlaybackStopped);  		this.volumeProvider = new VolumeWaveProvider16 (bufferedWaveProvider);  		this.volumeProvider.Volume = this.volumeSlider1.Volume;  		waveOut.Init (volumeProvider);  		progressBarBuffer.Maximum = (int)bufferedWaveProvider.BufferDuration.TotalMilliseconds;  	}  	else if (bufferedWaveProvider != null) {  		var bufferedSeconds = bufferedWaveProvider.BufferedDuration.TotalSeconds;  		ShowBufferState (bufferedSeconds);  		// make it stutter less if we buffer up a decent amount before playing  		if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  			this.playbackState = StreamingPlaybackState.Buffering;  			waveOut.Pause ();  			Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  		}  		else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  			waveOut.Play ();  			Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  			this.playbackState = StreamingPlaybackState.Playing;  		}  		else if (this.fullyDownloaded && bufferedSeconds == 0) {  			Debug.WriteLine ("Reached end of stream");  			StopPlayback ();  		}  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (this.waveOut == null && this.bufferedWaveProvider != null) {  	Debug.WriteLine ("Creating WaveOut Device");  	this.waveOut = CreateWaveOut ();  	waveOut.PlaybackStopped += new EventHandler (waveOut_PlaybackStopped);  	this.volumeProvider = new VolumeWaveProvider16 (bufferedWaveProvider);  	this.volumeProvider.Volume = this.volumeSlider1.Volume;  	waveOut.Init (volumeProvider);  	progressBarBuffer.Maximum = (int)bufferedWaveProvider.BufferDuration.TotalMilliseconds;  }  else if (bufferedWaveProvider != null) {  	var bufferedSeconds = bufferedWaveProvider.BufferedDuration.TotalSeconds;  	ShowBufferState (bufferedSeconds);  	// make it stutter less if we buffer up a decent amount before playing  	if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  		this.playbackState = StreamingPlaybackState.Buffering;  		waveOut.Pause ();  		Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  	}  	else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  		waveOut.Play ();  		Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  		this.playbackState = StreamingPlaybackState.Playing;  	}  	else if (this.fullyDownloaded && bufferedSeconds == 0) {  		Debug.WriteLine ("Reached end of stream");  		StopPlayback ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (this.waveOut == null && this.bufferedWaveProvider != null) {  	Debug.WriteLine ("Creating WaveOut Device");  	this.waveOut = CreateWaveOut ();  	waveOut.PlaybackStopped += new EventHandler (waveOut_PlaybackStopped);  	this.volumeProvider = new VolumeWaveProvider16 (bufferedWaveProvider);  	this.volumeProvider.Volume = this.volumeSlider1.Volume;  	waveOut.Init (volumeProvider);  	progressBarBuffer.Maximum = (int)bufferedWaveProvider.BufferDuration.TotalMilliseconds;  }  else if (bufferedWaveProvider != null) {  	var bufferedSeconds = bufferedWaveProvider.BufferedDuration.TotalSeconds;  	ShowBufferState (bufferedSeconds);  	// make it stutter less if we buffer up a decent amount before playing  	if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  		this.playbackState = StreamingPlaybackState.Buffering;  		waveOut.Pause ();  		Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  	}  	else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  		waveOut.Play ();  		Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  		this.playbackState = StreamingPlaybackState.Playing;  	}  	else if (this.fullyDownloaded && bufferedSeconds == 0) {  		Debug.WriteLine ("Reached end of stream");  		StopPlayback ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (bufferedWaveProvider != null) {  	var bufferedSeconds = bufferedWaveProvider.BufferedDuration.TotalSeconds;  	ShowBufferState (bufferedSeconds);  	// make it stutter less if we buffer up a decent amount before playing  	if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  		this.playbackState = StreamingPlaybackState.Buffering;  		waveOut.Pause ();  		Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  	}  	else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  		waveOut.Play ();  		Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  		this.playbackState = StreamingPlaybackState.Playing;  	}  	else if (this.fullyDownloaded && bufferedSeconds == 0) {  		Debug.WriteLine ("Reached end of stream");  		StopPlayback ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (bufferedWaveProvider != null) {  	var bufferedSeconds = bufferedWaveProvider.BufferedDuration.TotalSeconds;  	ShowBufferState (bufferedSeconds);  	// make it stutter less if we buffer up a decent amount before playing  	if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  		this.playbackState = StreamingPlaybackState.Buffering;  		waveOut.Pause ();  		Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  	}  	else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  		waveOut.Play ();  		Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  		this.playbackState = StreamingPlaybackState.Playing;  	}  	else if (this.fullyDownloaded && bufferedSeconds == 0) {  		Debug.WriteLine ("Reached end of stream");  		StopPlayback ();  	}  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  	this.playbackState = StreamingPlaybackState.Buffering;  	waveOut.Pause ();  	Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  }  else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  	waveOut.Play ();  	Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  	this.playbackState = StreamingPlaybackState.Playing;  }  else if (this.fullyDownloaded && bufferedSeconds == 0) {  	Debug.WriteLine ("Reached end of stream");  	StopPlayback ();  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (bufferedSeconds < 0.5 && this.playbackState == StreamingPlaybackState.Playing && !this.fullyDownloaded) {  	this.playbackState = StreamingPlaybackState.Buffering;  	waveOut.Pause ();  	Debug.WriteLine (String.Format ("Paused to buffer' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  }  else if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  	waveOut.Play ();  	Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  	this.playbackState = StreamingPlaybackState.Playing;  }  else if (this.fullyDownloaded && bufferedSeconds == 0) {  	Debug.WriteLine ("Reached end of stream");  	StopPlayback ();  }  
Magic Number,NAudioDemo,MP3StreamingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\MP3StreamingPanel.cs,timer1_Tick,The following statement contains a magic number: if (bufferedSeconds > 4 && this.playbackState == StreamingPlaybackState.Buffering) {  	waveOut.Play ();  	Debug.WriteLine (String.Format ("Started playing' waveOut.PlaybackState={0}"' waveOut.PlaybackState));  	this.playbackState = StreamingPlaybackState.Playing;  }  else if (this.fullyDownloaded && bufferedSeconds == 0) {  	Debug.WriteLine ("Reached end of stream");  	StopPlayback ();  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,VolumeWaveProvider16,The following statement contains a magic number: if (sourceProvider.WaveFormat.BitsPerSample != 16)  	throw new ArgumentException ("Expecting 16 bit");  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: if (this.Volume == 0.0f) {  	Array.Clear (buffer' offset' bytesRead);  }  else if (this.Volume != 1.0f) {  	for (int n = 0; n < bytesRead; n += 2) {  		short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  		// n.b. no clipping test going on here  		sample = (short)(sample * this.Volume);  		buffer [n] = (byte)(sample & 0xFF);  		buffer [n + 1] = (byte)(sample >> 8);  	}  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: if (this.Volume == 0.0f) {  	Array.Clear (buffer' offset' bytesRead);  }  else if (this.Volume != 1.0f) {  	for (int n = 0; n < bytesRead; n += 2) {  		short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  		// n.b. no clipping test going on here  		sample = (short)(sample * this.Volume);  		buffer [n] = (byte)(sample & 0xFF);  		buffer [n + 1] = (byte)(sample >> 8);  	}  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: if (this.Volume == 0.0f) {  	Array.Clear (buffer' offset' bytesRead);  }  else if (this.Volume != 1.0f) {  	for (int n = 0; n < bytesRead; n += 2) {  		short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  		// n.b. no clipping test going on here  		sample = (short)(sample * this.Volume);  		buffer [n] = (byte)(sample & 0xFF);  		buffer [n + 1] = (byte)(sample >> 8);  	}  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: if (this.Volume != 1.0f) {  	for (int n = 0; n < bytesRead; n += 2) {  		short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  		// n.b. no clipping test going on here  		sample = (short)(sample * this.Volume);  		buffer [n] = (byte)(sample & 0xFF);  		buffer [n + 1] = (byte)(sample >> 8);  	}  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: if (this.Volume != 1.0f) {  	for (int n = 0; n < bytesRead; n += 2) {  		short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  		// n.b. no clipping test going on here  		sample = (short)(sample * this.Volume);  		buffer [n] = (byte)(sample & 0xFF);  		buffer [n + 1] = (byte)(sample >> 8);  	}  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: if (this.Volume != 1.0f) {  	for (int n = 0; n < bytesRead; n += 2) {  		short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  		// n.b. no clipping test going on here  		sample = (short)(sample * this.Volume);  		buffer [n] = (byte)(sample & 0xFF);  		buffer [n + 1] = (byte)(sample >> 8);  	}  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: for (int n = 0; n < bytesRead; n += 2) {  	short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  	// n.b. no clipping test going on here  	sample = (short)(sample * this.Volume);  	buffer [n] = (byte)(sample & 0xFF);  	buffer [n + 1] = (byte)(sample >> 8);  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: for (int n = 0; n < bytesRead; n += 2) {  	short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  	// n.b. no clipping test going on here  	sample = (short)(sample * this.Volume);  	buffer [n] = (byte)(sample & 0xFF);  	buffer [n + 1] = (byte)(sample >> 8);  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: for (int n = 0; n < bytesRead; n += 2) {  	short sample = (short)((buffer [n + 1] << 8) | buffer [n + 0]);  	// n.b. no clipping test going on here  	sample = (short)(sample * this.Volume);  	buffer [n] = (byte)(sample & 0xFF);  	buffer [n + 1] = (byte)(sample >> 8);  }  
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: n += 2
Magic Number,NAudioDemo,VolumeWaveProvider16,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\VolumeWaveProvider16.cs,Read,The following statement contains a magic number: buffer [n + 1] = (byte)(sample >> 8);  
Magic Number,NAudioDemo,ReadFullyStream,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\Mp3StreamingDemo\ReadFullyStream.cs,ReadFullyStream,The following statement contains a magic number: this.readAheadBuffer = new byte[4096];  
Magic Number,NAudioDemo,RecordingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\RecordingDemo\RecordingPanel.cs,RecordingPanel,The following statement contains a magic number: if (System.Environment.OSVersion.Version.Major >= 6) {  	LoadWasapiDevicesCombo ();  }  else {  	radioButtonWasapi.Enabled = false;  	comboDevices.Enabled = false;  }  
Magic Number,NAudioDemo,RecordingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\RecordingDemo\RecordingPanel.cs,buttonStartRecording_Click,The following statement contains a magic number: if (waveIn == null) {  	if (outputFilename == null) {  		buttonSelectOutputFile_Click (sender' e);  	}  	if (outputFilename == null) {  		return;  	}  	if (radioButtonWaveIn.Checked) {  		waveIn = new WaveIn ();  		waveIn.WaveFormat = new WaveFormat (8000' 1);  	}  	else {  		waveIn = new WasapiCapture ((MMDevice)comboDevices.SelectedItem);  		// go with the default format as WASAPI doesn't support SRC  	}  	writer = new WaveFileWriter (outputFilename' waveIn.WaveFormat);  	waveIn.DataAvailable += new EventHandler<WaveInEventArgs> (waveIn_DataAvailable);  	waveIn.RecordingStopped += new EventHandler (waveIn_RecordingStopped);  	waveIn.StartRecording ();  	buttonStartRecording.Enabled = false;  }  
Magic Number,NAudioDemo,RecordingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\RecordingDemo\RecordingPanel.cs,buttonStartRecording_Click,The following statement contains a magic number: if (radioButtonWaveIn.Checked) {  	waveIn = new WaveIn ();  	waveIn.WaveFormat = new WaveFormat (8000' 1);  }  else {  	waveIn = new WasapiCapture ((MMDevice)comboDevices.SelectedItem);  	// go with the default format as WASAPI doesn't support SRC  }  
Magic Number,NAudioDemo,RecordingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\RecordingDemo\RecordingPanel.cs,buttonStartRecording_Click,The following statement contains a magic number: waveIn.WaveFormat = new WaveFormat (8000' 1);  
Magic Number,NAudioDemo,RecordingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\RecordingDemo\RecordingPanel.cs,waveIn_DataAvailable,The following statement contains a magic number: if (this.InvokeRequired) {  	//Debug.WriteLine("Data Available");  	this.BeginInvoke (new EventHandler<WaveInEventArgs> (waveIn_DataAvailable)' sender' e);  }  else {  	//Debug.WriteLine("Flushing Data Available");  	writer.Write (e.Buffer' 0' e.BytesRecorded);  	int secondsRecorded = (int)(writer.Length / writer.WaveFormat.AverageBytesPerSecond);  	if (secondsRecorded >= 30) {  		StopRecording ();  	}  	else {  		progressBar1.Value = secondsRecorded;  	}  }  
Magic Number,NAudioDemo,RecordingPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\RecordingDemo\RecordingPanel.cs,waveIn_DataAvailable,The following statement contains a magic number: if (secondsRecorded >= 30) {  	StopRecording ();  }  else {  	progressBar1.Value = secondsRecorded;  }  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,buttonPlay_Click,The following statement contains a magic number: trackBarPosition.TickFrequency = trackBarPosition.Maximum / 30;  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (25);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (50);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (100);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (150);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (200);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (300);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (400);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.Items.Add (500);  
Magic Number,NAudioDemo.AudioPlaybackDemo,AudioPlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\AudioPlaybackDemo\AudioPlaybackPanel.cs,Form1_Load,The following statement contains a magic number: comboBoxLatency.SelectedIndex = 5;  
Magic Number,NAudioDemo.NetworkChatDemo,ALawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\ALawChatCodec.cs,Encode,The following statement contains a magic number: for (int n = 0; n < length; n += 2) {  	encoded [outIndex++] = ALawEncoder.LinearToALawSample (BitConverter.ToInt16 (data' offset + n));  }  
Magic Number,NAudioDemo.NetworkChatDemo,ALawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\ALawChatCodec.cs,Encode,The following statement contains a magic number: n += 2
Magic Number,NAudioDemo.NetworkChatDemo,ALawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\ALawChatCodec.cs,Decode,The following statement contains a magic number: for (int n = 0; n < length; n++) {  	short decodedSample = ALawDecoder.ALawToLinearSample (data [n + offset]);  	decoded [outIndex++] = (byte)(decodedSample & 0xFF);  	decoded [outIndex++] = (byte)(decodedSample >> 8);  }  
Magic Number,NAudioDemo.NetworkChatDemo,ALawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\ALawChatCodec.cs,Decode,The following statement contains a magic number: decoded [outIndex++] = (byte)(decodedSample >> 8);  
Magic Number,NAudioDemo.NetworkChatDemo,G722ChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\G722ChatCodec.cs,G722ChatCodec,The following statement contains a magic number: this.bitrate = 64000;  
Magic Number,NAudioDemo.NetworkChatDemo,G722ChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\G722ChatCodec.cs,G722ChatCodec,The following statement contains a magic number: this.recordingFormat = new WaveFormat (16000' 1);  
Magic Number,NAudioDemo.NetworkChatDemo,G722ChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\G722ChatCodec.cs,Decode,The following statement contains a magic number: Debug.Assert (decodedLength == decoded * 2);  
Magic Number,NAudioDemo.NetworkChatDemo,MuLawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\MuLawChatCodec.cs,Encode,The following statement contains a magic number: for (int n = 0; n < length; n += 2) {  	encoded [outIndex++] = MuLawEncoder.LinearToMuLawSample (BitConverter.ToInt16 (data' offset + n));  }  
Magic Number,NAudioDemo.NetworkChatDemo,MuLawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\MuLawChatCodec.cs,Encode,The following statement contains a magic number: n += 2
Magic Number,NAudioDemo.NetworkChatDemo,MuLawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\MuLawChatCodec.cs,Decode,The following statement contains a magic number: for (int n = 0; n < length; n++) {  	short decodedSample = MuLawDecoder.MuLawToLinearSample (data [n + offset]);  	decoded [outIndex++] = (byte)(decodedSample & 0xFF);  	decoded [outIndex++] = (byte)(decodedSample >> 8);  }  
Magic Number,NAudioDemo.NetworkChatDemo,MuLawChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\MuLawChatCodec.cs,Decode,The following statement contains a magic number: decoded [outIndex++] = (byte)(decodedSample >> 8);  
Magic Number,NAudioDemo.NetworkChatDemo,NetworkChatPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\NetworkChatPanel.cs,PopulateCodecsCombo,The following statement contains a magic number: foreach (var codec in sorted) {  	string bitRate = codec.BitsPerSecond == -1 ? "VBR" : String.Format ("{0:0.#}kbps"' codec.BitsPerSecond / 1000.0);  	string text = String.Format ("{0} ({1})"' codec.Name' bitRate);  	this.comboBoxCodecs.Items.Add (new CodecComboItem () {  		Text = text'  		Codec = codec  	});  }  
Magic Number,NAudioDemo.NetworkChatDemo,NetworkChatPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\NetworkChatPanel.cs,Connect,The following statement contains a magic number: waveIn.BufferMilliseconds = 50;  
Magic Number,NAudioDemo.NetworkChatDemo,SpeexChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\SpeexChatCodec.cs,SpeexChatCodec,The following statement contains a magic number: this.recordingFormat = new WaveFormat (sampleRate' 16' 1);  
Magic Number,NAudioDemo.NetworkChatDemo,SpeexChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\SpeexChatCodec.cs,ShiftLeftoverSamplesDown,The following statement contains a magic number: Array.Copy (encoderInputBuffer.ByteBuffer' samplesEncoded * 2' encoderInputBuffer.ByteBuffer' 0' leftoverSamples * 2);  
Magic Number,NAudioDemo.NetworkChatDemo,SpeexChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\SpeexChatCodec.cs,ShiftLeftoverSamplesDown,The following statement contains a magic number: Array.Copy (encoderInputBuffer.ByteBuffer' samplesEncoded * 2' encoderInputBuffer.ByteBuffer' 0' leftoverSamples * 2);  
Magic Number,NAudioDemo.NetworkChatDemo,UncompressedPcmChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\UncompressedPcmChatCodec.cs,UncompressedPcmChatCodec,The following statement contains a magic number: this.RecordFormat = new WaveFormat (8000' 16' 1);  
Magic Number,NAudioDemo.NetworkChatDemo,UncompressedPcmChatCodec,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\NetworkChatDemo\UncompressedPcmChatCodec.cs,UncompressedPcmChatCodec,The following statement contains a magic number: this.RecordFormat = new WaveFormat (8000' 16' 1);  
Magic Number,NAudioDemo.SimplePlaybackDemo,SimplePlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\SimplePlaybackDemo\SimplePlaybackPanel.cs,SimplePlaybackPanel,The following statement contains a magic number: this.timer1.Interval = 250;  
Magic Number,NAudioDemo.SimplePlaybackDemo,SimplePlaybackPanel,C:\repos\lasitsin__GLDNBT\Libs_And_Examples\NAudio-Source\NAudioDemo\SimplePlaybackDemo\SimplePlaybackPanel.cs,CreateWavePlayer,The following statement contains a magic number: switch (comboBoxOutputDriver.SelectedIndex) {  case 2:  	return new WaveOutEvent ();  case 1:  	return new WaveOut (WaveCallbackInfo.FunctionCallback ());  case 0:  default:  	return new WaveOut ();  }  
