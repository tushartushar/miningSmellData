Implementation smell,Namespace,Class,File,Method,Description
Long Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,ProcessCmdKey,The method has 126 lines of code.
Long Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,OnFileOK,The method has 185 lines of code.
Long Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,BrowseObject,The method has 142 lines of code.
Long Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The method has 363 lines of code.
Long Method,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The method has 223 lines of code.
Complex Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,ProcessCmdKey,Cyclomatic complexity of the method is 9
Complex Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumDesktop,Cyclomatic complexity of the method is 9
Complex Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,BrowseObject,Cyclomatic complexity of the method is 12
Complex Method,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,IncludeObject,Cyclomatic complexity of the method is 14
Complex Method,FileDialogs,OpenFileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\OpenFileDialog.cs,PromptFileCreate,Cyclomatic complexity of the method is 13
Complex Method,FileDialogs,SaveFileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SaveFileDialog.cs,PromptFileCreate,Cyclomatic complexity of the method is 13
Complex Method,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,OnPaint,Cyclomatic complexity of the method is 8
Long Parameter List,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,SendControlMsg,The method has 5 parameters. Parameters: id' uMsg' wParam' lParam' pret
Long Parameter List,FileDialogs,Shell32,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttributes' psfi' cbFileInfo' uFlags
Long Parameter List,FileDialogs,Shell32,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttributes' psfi' cbFileInfo' uFlags
Long Parameter List,FileDialogs,Shell32,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,SHGetFolderLocation,The method has 5 parameters. Parameters: hwndOwner' nFolder' hToken' dwReserved' ppidl
Long Parameter List,FileDialogs,User32,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' x' y' cx' cy' flags
Long Parameter List,FileDialogs,IContextMenu,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,QueryContextMenu,The method has 5 parameters. Parameters: hMenu' indexMenu' idCmdFirst' idCmdLast' uFlags
Long Parameter List,FileDialogs,IContextMenu,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,GetCommandString,The method has 5 parameters. Parameters: idCmd' uFlags' pwReserved' pszName' cchMax
Long Parameter List,FileDialogs,IShellBrowser,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,SendControlMsg,The method has 5 parameters. Parameters: id' uMsg' wParam' lParam' pret
Long Parameter List,FileDialogs,IShellView,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,CreateViewWindow,The method has 5 parameters. Parameters: psvPrevious' pfs' psb' prcVie' phWnd
Long Parameter List,FileDialogs,IShellFolder,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,ParseDisplayName,The method has 6 parameters. Parameters: hwnd' pbc' pwszDisplayName' pchEaten' ppidl' pdwAttributes
Long Parameter List,FileDialogs,IShellFolder,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,GetUIObjectOf,The method has 6 parameters. Parameters: hwndOwner' cidl' apidl' riid' rgfReserved' ppv
Long Parameter List,FileDialogs,IShellFolder,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,SetNameOf,The method has 5 parameters. Parameters: hwndOwner' pidl' lpszName' uFlags' ppidlOut
Long Identifier,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,,The length of the parameter createNewFolderToolStripButton is 30.
Long Identifier,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,,The length of the parameter connectNetworkDriveToolStripMenuItem is 36.
Long Identifier,FileDialogs,NativeMethods,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,,The length of the parameter FILE_ATTRIBUTE_NOT_CONTENT_INDEXED is 34.
Long Identifier,FileDialogs,NativeMethods,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NativeMethods.cs,,The length of the parameter FILE_NOTIFY_CHANGE_LAST_ACCESS is 30.
Long Identifier,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,,The length of the parameter addSpecialFolderTableLayoutPanel is 32.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,PromptInvalidPath,The length of the statement  "                    @"The file name' location' or format '{0}' is not valid. Type the file name and location in the correct format' such as c:\location\file name."' " is 144.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,RunDialog,The length of the statement  "            RegistryKey regKey = Registry.CurrentUser.CreateSubKey(@"Software\[ProductName]\Open Find\[ProductName]\Settings\" + m_type); " is 125.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,RunDialog,The length of the statement  "            regKey = Registry.CurrentUser.CreateSubKey(@"Software\[ProductName]\Open Find\[ProductName]\Settings\" + m_type + @"\File Name MRU"); " is 133.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,OnFileOK,The length of the statement  "                            @"The folder '{0}' isn't accessible. The folder may be located in an unavailable location' protected with a password' or the filename contains a / or \."' " is 154.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,UpdateFileNameMRU,The length of the statement  "            RegistryKey regKey = Registry.CurrentUser.CreateSubKey(@"Software\[ProductName]\Open Find\[ProductName]\Settings\" + m_type + @"\File Name MRU"); " is 145.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FileDialog)); " is 130.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.toolStrip.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.backToolStripSplitButton.DropDownItemClicked += new System.Windows.Forms.ToolStripItemClickedEventHandler(this.backToolStripSplitButton_DropDownItemClicked); " is 162.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.upOneLevelToolStripButton.Image = ((System.Drawing.Image)(resources.GetObject("upOneLevelToolStripButton.Image"))); " is 120.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.searchTheWebToolStripButton.Image = ((System.Drawing.Image)(resources.GetObject("searchTheWebToolStripButton.Image"))); " is 124.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.createNewFolderToolStripButton.Image = ((System.Drawing.Image)(resources.GetObject("createNewFolderToolStripButton.Image"))); " is 130.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.viewsToolStripSplitButton.Image = ((System.Drawing.Image)(resources.GetObject("viewsToolStripSplitButton.Image"))); " is 120.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.viewsToolStripSplitButton.DropDownOpening += new System.EventHandler(this.viewsToolStripSplitButton_DropDownOpening); " is 122.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.viewsToolStripSplitButton.DropDownItemClicked += new System.Windows.Forms.ToolStripItemClickedEventHandler(this.viewsToolStripSplitButton_DropDownItemClicked); " is 164.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.thumbnailsToolStripMenuItem.Image = ((System.Drawing.Image)(resources.GetObject("thumbnailsToolStripMenuItem.Image"))); " is 124.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.sideBySideToolStripMenuItem.Image = ((System.Drawing.Image)(resources.GetObject("sideBySideToolStripMenuItem.Image"))); " is 124.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.toolsToolStripDropDownButton.Image = ((System.Drawing.Image)(resources.GetObject("toolsToolStripDropDownButton.Image"))); " is 126.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.connectNetworkDriveToolStripMenuItem.Click += new System.EventHandler(this.connectNetworkDriveToolStripMenuItem_Click); " is 124.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.fileNameLabel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 151.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.fileNameComboBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 152.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.fileTypeLabel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 151.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.fileTypeComboBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 152.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.fileTypeComboBox.SelectionChangeCommitted += new System.EventHandler(this.fileTypeComboBox_SelectionChangeCommitted); " is 122.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.okButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.cancelButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.placesBar.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 144.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.lookInComboBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 147.
Long Statement,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,okButton_Click,The length of the statement  "                string message = string.Format("The name '{0}' is not a valid folder name because it contains characters that cannot be used in a folder name. Type another name that does not include the characters <>|*?/."' folderName); " is 220.
Long Statement,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,okButton_Click,The length of the statement  "                string message = string.Format("The folder '{0}' could not be created. You may not have access privileges to create a new folder in this location."' folderName); " is 161.
Long Statement,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,FileDialogs,OpenFileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\OpenFileDialog.cs,OnSelectionChanged,The length of the statement  "            okButton.Enabled = ((m_selectedPidls != null && m_selectedPidls.Length > 0) || !string.IsNullOrEmpty(fileNameComboBox.Text)); " is 125.
Long Statement,FileDialogs,SaveFileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SaveFileDialog.cs,OnSelectionChanged,The length of the statement  "            okButton.Enabled = ((m_selectedPidls != null && m_selectedPidls.Length > 0) || !string.IsNullOrEmpty(fileNameComboBox.Text)); " is 125.
Long Statement,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The length of the statement  "                if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect)) " is 133.
Long Statement,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The length of the statement  "                if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect)) " is 133.
Long Statement,FileDialogs,SelectFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SelectFolderDialog.cs,OnFileOK,The length of the statement  "                string message = string.Format(@"The folder '{0}' isn't accessible. The folder may be located in an unavailable location' protected with a password' or the filename contains a / or \."' path); " is 192.
Long Statement,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The length of the statement  "            NativeMethods.Shell32.SHGetFileInfo(pidl' 0' ref info' NativeMethods.cbFileInfo' NativeMethods.SHGFI_PIDL | NativeMethods.SHGFI_SYSICONINDEX); " is 142.
Long Statement,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The length of the statement  "                NativeMethods.Shell32.SHGetFileInfo(pidl' dwAttr' ref shfiSmall' Marshal.SizeOf(shfiSmall)' dwflag | NativeMethods.SHGFI_SMALLICON); " is 132.
Long Statement,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The length of the statement  "                NativeMethods.Shell32.SHGetFileInfo(pidl' dwAttr' ref shfiLarge' Marshal.SizeOf(shfiLarge)' dwflag | NativeMethods.SHGFI_LARGEICON); " is 132.
Long Statement,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetSmallImage,The length of the statement  "            IntPtr iconPtr = NativeMethods.ComCtl32.ImageList_GetIcon(m_smallImageListHandle' shfi.iIcon' NativeMethods.ILD_NORMAL); " is 120.
Long Statement,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetImage,The length of the statement  "            IntPtr iconPtr = NativeMethods.ComCtl32.ImageList_GetIcon(m_largeImageListHandle' shfi.iIcon' NativeMethods.ILD_NORMAL); " is 120.
Long Statement,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetSmallImage,The length of the statement  "            IntPtr iconPtr = NativeMethods.ComCtl32.ImageList_GetIcon(m_smallImageListHandle' shfi.iIcon' NativeMethods.ILD_NORMAL); " is 120.
Long Statement,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetImage,The length of the statement  "            IntPtr iconPtr = NativeMethods.ComCtl32.ImageList_GetIcon(m_largeImageListHandle' shfi.iIcon' NativeMethods.ILD_NORMAL); " is 120.
Long Statement,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,OnPaint,The length of the statement  "            bool drawSplitLine = (State == PushButtonState.Hot || State == PushButtonState.Pressed || State == PushButtonState.Default || " is 125.
Long Statement,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 153.
Long Statement,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 50F)); " is 122.
Long Statement,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 50F)); " is 122.
Long Statement,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The length of the statement  "                System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FileDialogPlacesEditor.FileDialogPlacesEditorForm)); " is 169.
Long Statement,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The length of the statement  "                this.selectedPlaceProps.PropertyValueChanged += new System.Windows.Forms.PropertyValueChangedEventHandler(this.selectedPlaceProps_PropertyValueChanged); " is 152.
Long Statement,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,addCustomPathButton_Click,The length of the statement  "                    MessageBox.Show(this' "The directory at the specified path doesn't exist."' Text' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 128.
Long Statement,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,okButton_Click,The length of the statement  "                    MessageBox.Show(this' "The places bar must at least contain one place."' Text' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 129.
Complex Conditional,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,ProcessCmdKey,The conditional expression  "keyData == Keys.Enter ||                              keyData == Keys.Escape ||                              (keyData & Keys.Left) == Keys.Left ||                              (keyData & Keys.Up) == Keys.Up ||                              (keyData & Keys.Right) == Keys.Right ||                              (keyData & Keys.Down) == Keys.Down"  is complex.
Complex Conditional,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,GetDisplayName,The conditional expression  "(isMyCompChild && level >= 3) || (!isMyCompChild && level >= 2)"  is complex.
Complex Conditional,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumDesktop,The conditional expression  "path != null && !isMyCompChild && level >= 2 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[1]' NativeMethods.SHGNO.SHGDN_INFOLDER))"  is complex.
Complex Conditional,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumMyComputer,The conditional expression  "path != null && isMyCompChild && level >= 3 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[2]' NativeMethods.SHGNO.SHGDN_INFOLDER))"  is complex.
Complex Conditional,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,IncludeObject,The conditional expression  "m_excludeFiles && !isLink && (isFile || (attribs & NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR) == 0)"  is complex.
Complex Conditional,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,CheckInvalidPathChars,The conditional expression  "ch == '"' || ch == '<' || ch == '>' || ch == '|' || ch < 32"  is complex.
Complex Conditional,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The conditional expression  "rootLength < length && ((                          path[rootLength] != Path.DirectorySeparatorChar &&                          path[rootLength] != Path.AltDirectorySeparatorChar) || (--i > 0))"  is complex.
Complex Conditional,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,PathRootIsDrive,The conditional expression  "(driveLetter < 'A' || driveLetter > 'Z') && (driveLetter < 'a' || driveLetter > 'z')"  is complex.
Empty Catch Block,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,propertyToolStripMenuItem_Click,The method has an empty catch block.
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,ProcessCmdKey,The following statement contains a magic number: if (m_shellView != null)              {                  if (!m_shellViewHasFocus)                  {                      StringBuilder className = new StringBuilder(256);                      NativeMethods.User32.GetClassName(msg.HWnd' className' 256);                        // An item is being renamed                      if (className.ToString() == "Edit" && msg.HWnd != GetComboBoxHWndEdit(fileNameComboBox))                      {                          if (keyData == Keys.Enter ||                              keyData == Keys.Escape ||                              (keyData & Keys.Left) == Keys.Left ||                              (keyData & Keys.Up) == Keys.Up ||                              (keyData & Keys.Right) == Keys.Right ||                              (keyData & Keys.Down) == Keys.Down)                          {                                NativeMethods.User32.SendMessage(msg.HWnd' msg.Msg' msg.WParam' msg.LParam);                              return true;                          }                                                    return false;                      }                  }                  else                  {                      switch (keyData)                      {                          // The IShellView loses focus when one of the arrow keys are pressed'                          // this occurs because the IShellView.TranslateAccelerator method doesn't return S_OK.                          case Keys.Left:                          case Keys.Up:                          case Keys.Right:                          case Keys.Down:                              m_shellView.TranslateAccelerator(ref msg);                              return true;                            // The IShellView both opens the Properties window and OnDefaultCommand is called                          case Keys.Alt | Keys.Enter:                              m_shellView.TranslateAccelerator(ref msg);                              return true;                            case Keys.Enter:                              break;                            case Keys.Alt | Keys.Left: // Shortcut for Go Back                              if (backToolStripSplitButton.Enabled)                              {                                  backToolStripSplitButton.PerformButtonClick();                                  return true;                              }                              break;                            case Keys.Back: // Shortcut for Up On Level                              if (upOneLevelToolStripButton.Enabled)                              {                                  upOneLevelToolStripButton.PerformClick();                                  return true;                              }                              break;                            default:                              // Let the IShellView translate all the other accelerator key strokes                               if (m_shellView.TranslateAccelerator(ref msg) == NativeMethods.S_OK)                                  return true;                              break;                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,ProcessCmdKey,The following statement contains a magic number: if (m_shellView != null)              {                  if (!m_shellViewHasFocus)                  {                      StringBuilder className = new StringBuilder(256);                      NativeMethods.User32.GetClassName(msg.HWnd' className' 256);                        // An item is being renamed                      if (className.ToString() == "Edit" && msg.HWnd != GetComboBoxHWndEdit(fileNameComboBox))                      {                          if (keyData == Keys.Enter ||                              keyData == Keys.Escape ||                              (keyData & Keys.Left) == Keys.Left ||                              (keyData & Keys.Up) == Keys.Up ||                              (keyData & Keys.Right) == Keys.Right ||                              (keyData & Keys.Down) == Keys.Down)                          {                                NativeMethods.User32.SendMessage(msg.HWnd' msg.Msg' msg.WParam' msg.LParam);                              return true;                          }                                                    return false;                      }                  }                  else                  {                      switch (keyData)                      {                          // The IShellView loses focus when one of the arrow keys are pressed'                          // this occurs because the IShellView.TranslateAccelerator method doesn't return S_OK.                          case Keys.Left:                          case Keys.Up:                          case Keys.Right:                          case Keys.Down:                              m_shellView.TranslateAccelerator(ref msg);                              return true;                            // The IShellView both opens the Properties window and OnDefaultCommand is called                          case Keys.Alt | Keys.Enter:                              m_shellView.TranslateAccelerator(ref msg);                              return true;                            case Keys.Enter:                              break;                            case Keys.Alt | Keys.Left: // Shortcut for Go Back                              if (backToolStripSplitButton.Enabled)                              {                                  backToolStripSplitButton.PerformButtonClick();                                  return true;                              }                              break;                            case Keys.Back: // Shortcut for Up On Level                              if (upOneLevelToolStripButton.Enabled)                              {                                  upOneLevelToolStripButton.PerformClick();                                  return true;                              }                              break;                            default:                              // Let the IShellView translate all the other accelerator key strokes                               if (m_shellView.TranslateAccelerator(ref msg) == NativeMethods.S_OK)                                  return true;                              break;                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,RunDialog,The following statement contains a magic number: if (m_filter != null)              {                  // Add the filter to the fileTypeComboBox                  string[] filterParts = m_filter.Split(new char[] {'|'});                  for (int i = 1; i < filterParts.Length; i += 2)                  {                      fileTypeComboBox.Items.Add(new FileType(filterParts[i - 1]' filterParts[i].Split(';')));                  }                    fileTypeComboBox.SelectedIndex = m_filterIndex - 1;              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,AddItem,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,AddItem,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,AddItem,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,GetDisplayName,The following statement contains a magic number: IntPtr strr = Marshal.AllocCoTaskMem(NativeMethods.MAX_PATH * 2 + 4);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,GetDisplayName,The following statement contains a magic number: IntPtr strr = Marshal.AllocCoTaskMem(NativeMethods.MAX_PATH * 2 + 4);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,GetDisplayName,The following statement contains a magic number: IntPtr strr = Marshal.AllocCoTaskMem(NativeMethods.MAX_PATH * 2 + 4);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,GetDisplayName,The following statement contains a magic number: IntPtr strr = Marshal.AllocCoTaskMem(NativeMethods.MAX_PATH * 2 + 4);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,GetDisplayName,The following statement contains a magic number: if ((isMyCompChild && level >= 3) || (!isMyCompChild && level >= 2))                  flags |= NativeMethods.SHGNO.SHGDN_FORADDRESSBAR |                           NativeMethods.SHGNO.SHGDN_FORPARSING;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,GetDisplayName,The following statement contains a magic number: if ((isMyCompChild && level >= 3) || (!isMyCompChild && level >= 2))                  flags |= NativeMethods.SHGNO.SHGDN_FORADDRESSBAR |                           NativeMethods.SHGNO.SHGDN_FORPARSING;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumDesktop,The following statement contains a magic number: if (m_desktopFolder.EnumObjects(                      IntPtr.Zero'                      folderFlag'                      out folderEnum) == NativeMethods.S_OK)              {                  IntPtr pidlSubItem;                  int celtFetched;                    // Enumerate the desktop                  while (folderEnum.Next(1' out pidlSubItem' out celtFetched) == NativeMethods.S_OK && celtFetched == 1)                  {                      IntPtr shellFolderPtr;                      if (m_desktopFolder.BindToObject(                              pidlSubItem'                              IntPtr.Zero'                              ref NativeMethods.IID_IShellFolder'                              out shellFolderPtr) == NativeMethods.S_OK)                      {                          string text = GetDisplayName(m_desktopFolder' pidlSubItem' NativeMethods.SHGNO.SHGDN_INFOLDER);                            IntPtr[] pidls = new IntPtr[] {pidlSubItem};                          NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR;                          m_desktopFolder.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR) != 0)                              lookInComboBox.Items.Add(new LookInComboBoxItem(text' pidlSubItem' 1));                            // Check if the item is My Computer                          if (NativeMethods.Shell32.ILIsEqual(pidlSubItem' m_myCompPidl))                              EnumMyComputer();                            if (path != null && !isMyCompChild && level >= 2 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[1]' NativeMethods.SHGNO.SHGDN_INFOLDER)))                          {                              for (int i = 2; i < path.Length; i++)                              {                                  string childText = GetDisplayName(m_desktopFolder' path[i]);                                  lookInComboBox.Items.Add(new LookInComboBoxItem(childText' path[i]' i));                              }                          }                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumDesktop,The following statement contains a magic number: if (m_desktopFolder.EnumObjects(                      IntPtr.Zero'                      folderFlag'                      out folderEnum) == NativeMethods.S_OK)              {                  IntPtr pidlSubItem;                  int celtFetched;                    // Enumerate the desktop                  while (folderEnum.Next(1' out pidlSubItem' out celtFetched) == NativeMethods.S_OK && celtFetched == 1)                  {                      IntPtr shellFolderPtr;                      if (m_desktopFolder.BindToObject(                              pidlSubItem'                              IntPtr.Zero'                              ref NativeMethods.IID_IShellFolder'                              out shellFolderPtr) == NativeMethods.S_OK)                      {                          string text = GetDisplayName(m_desktopFolder' pidlSubItem' NativeMethods.SHGNO.SHGDN_INFOLDER);                            IntPtr[] pidls = new IntPtr[] {pidlSubItem};                          NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR;                          m_desktopFolder.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR) != 0)                              lookInComboBox.Items.Add(new LookInComboBoxItem(text' pidlSubItem' 1));                            // Check if the item is My Computer                          if (NativeMethods.Shell32.ILIsEqual(pidlSubItem' m_myCompPidl))                              EnumMyComputer();                            if (path != null && !isMyCompChild && level >= 2 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[1]' NativeMethods.SHGNO.SHGDN_INFOLDER)))                          {                              for (int i = 2; i < path.Length; i++)                              {                                  string childText = GetDisplayName(m_desktopFolder' path[i]);                                  lookInComboBox.Items.Add(new LookInComboBoxItem(childText' path[i]' i));                              }                          }                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumMyComputer,The following statement contains a magic number: if (m_desktopFolder.BindToObject(                      m_myCompPidl'                      IntPtr.Zero'                      ref NativeMethods.IID_IShellFolder'                      out myComputerPtr) == NativeMethods.S_OK)              {                  NativeMethods.IShellFolder myComputer =                      (NativeMethods.IShellFolder)Marshal.GetObjectForIUnknown(myComputerPtr);                    NativeMethods.IEnumIDList folderEnum;                    NativeMethods.SHCONTF folderFlag =                      NativeMethods.SHCONTF.SHCONTF_FOLDERS |                      NativeMethods.SHCONTF.SHCONTF_INCLUDEHIDDEN;                    if (myComputer.EnumObjects(                          IntPtr.Zero'                          folderFlag'                          out folderEnum) == NativeMethods.S_OK)                  {                      // Enumerate My Computer                      IntPtr pidlSubItem;                      int celtFetched;                      while (folderEnum.Next(1' out pidlSubItem' out celtFetched) == NativeMethods.S_OK &&                             celtFetched == 1)                      {                          IntPtr abspidl = NativeMethods.Shell32.ILCombine(m_myCompPidl' pidlSubItem);                            string text = GetDisplayName(m_desktopFolder' abspidl' NativeMethods.SHGNO.SHGDN_INFOLDER);                            IntPtr[] pidls = new IntPtr[] {pidlSubItem};                          NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR;                          myComputer.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR) != 0)                              lookInComboBox.Items.Add(new LookInComboBoxItem(text' abspidl' 2));                            if (path != null && isMyCompChild && level >= 3 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[2]' NativeMethods.SHGNO.SHGDN_INFOLDER)))                          {                              for (int i = 3; i < path.Length; i++)                              {                                  string childText = GetDisplayName(m_desktopFolder' path[i]);                                  lookInComboBox.Items.Add(new LookInComboBoxItem(childText' path[i]' i));                              }                          }                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumMyComputer,The following statement contains a magic number: if (m_desktopFolder.BindToObject(                      m_myCompPidl'                      IntPtr.Zero'                      ref NativeMethods.IID_IShellFolder'                      out myComputerPtr) == NativeMethods.S_OK)              {                  NativeMethods.IShellFolder myComputer =                      (NativeMethods.IShellFolder)Marshal.GetObjectForIUnknown(myComputerPtr);                    NativeMethods.IEnumIDList folderEnum;                    NativeMethods.SHCONTF folderFlag =                      NativeMethods.SHCONTF.SHCONTF_FOLDERS |                      NativeMethods.SHCONTF.SHCONTF_INCLUDEHIDDEN;                    if (myComputer.EnumObjects(                          IntPtr.Zero'                          folderFlag'                          out folderEnum) == NativeMethods.S_OK)                  {                      // Enumerate My Computer                      IntPtr pidlSubItem;                      int celtFetched;                      while (folderEnum.Next(1' out pidlSubItem' out celtFetched) == NativeMethods.S_OK &&                             celtFetched == 1)                      {                          IntPtr abspidl = NativeMethods.Shell32.ILCombine(m_myCompPidl' pidlSubItem);                            string text = GetDisplayName(m_desktopFolder' abspidl' NativeMethods.SHGNO.SHGDN_INFOLDER);                            IntPtr[] pidls = new IntPtr[] {pidlSubItem};                          NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR;                          myComputer.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR) != 0)                              lookInComboBox.Items.Add(new LookInComboBoxItem(text' abspidl' 2));                            if (path != null && isMyCompChild && level >= 3 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[2]' NativeMethods.SHGNO.SHGDN_INFOLDER)))                          {                              for (int i = 3; i < path.Length; i++)                              {                                  string childText = GetDisplayName(m_desktopFolder' path[i]);                                  lookInComboBox.Items.Add(new LookInComboBoxItem(childText' path[i]' i));                              }                          }                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumMyComputer,The following statement contains a magic number: if (m_desktopFolder.BindToObject(                      m_myCompPidl'                      IntPtr.Zero'                      ref NativeMethods.IID_IShellFolder'                      out myComputerPtr) == NativeMethods.S_OK)              {                  NativeMethods.IShellFolder myComputer =                      (NativeMethods.IShellFolder)Marshal.GetObjectForIUnknown(myComputerPtr);                    NativeMethods.IEnumIDList folderEnum;                    NativeMethods.SHCONTF folderFlag =                      NativeMethods.SHCONTF.SHCONTF_FOLDERS |                      NativeMethods.SHCONTF.SHCONTF_INCLUDEHIDDEN;                    if (myComputer.EnumObjects(                          IntPtr.Zero'                          folderFlag'                          out folderEnum) == NativeMethods.S_OK)                  {                      // Enumerate My Computer                      IntPtr pidlSubItem;                      int celtFetched;                      while (folderEnum.Next(1' out pidlSubItem' out celtFetched) == NativeMethods.S_OK &&                             celtFetched == 1)                      {                          IntPtr abspidl = NativeMethods.Shell32.ILCombine(m_myCompPidl' pidlSubItem);                            string text = GetDisplayName(m_desktopFolder' abspidl' NativeMethods.SHGNO.SHGDN_INFOLDER);                            IntPtr[] pidls = new IntPtr[] {pidlSubItem};                          NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR;                          myComputer.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR) != 0)                              lookInComboBox.Items.Add(new LookInComboBoxItem(text' abspidl' 2));                            if (path != null && isMyCompChild && level >= 3 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[2]' NativeMethods.SHGNO.SHGDN_INFOLDER)))                          {                              for (int i = 3; i < path.Length; i++)                              {                                  string childText = GetDisplayName(m_desktopFolder' path[i]);                                  lookInComboBox.Items.Add(new LookInComboBoxItem(childText' path[i]' i));                              }                          }                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,EnumMyComputer,The following statement contains a magic number: if (m_desktopFolder.BindToObject(                      m_myCompPidl'                      IntPtr.Zero'                      ref NativeMethods.IID_IShellFolder'                      out myComputerPtr) == NativeMethods.S_OK)              {                  NativeMethods.IShellFolder myComputer =                      (NativeMethods.IShellFolder)Marshal.GetObjectForIUnknown(myComputerPtr);                    NativeMethods.IEnumIDList folderEnum;                    NativeMethods.SHCONTF folderFlag =                      NativeMethods.SHCONTF.SHCONTF_FOLDERS |                      NativeMethods.SHCONTF.SHCONTF_INCLUDEHIDDEN;                    if (myComputer.EnumObjects(                          IntPtr.Zero'                          folderFlag'                          out folderEnum) == NativeMethods.S_OK)                  {                      // Enumerate My Computer                      IntPtr pidlSubItem;                      int celtFetched;                      while (folderEnum.Next(1' out pidlSubItem' out celtFetched) == NativeMethods.S_OK &&                             celtFetched == 1)                      {                          IntPtr abspidl = NativeMethods.Shell32.ILCombine(m_myCompPidl' pidlSubItem);                            string text = GetDisplayName(m_desktopFolder' abspidl' NativeMethods.SHGNO.SHGDN_INFOLDER);                            IntPtr[] pidls = new IntPtr[] {pidlSubItem};                          NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR;                          myComputer.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_FILESYSANCESTOR) != 0)                              lookInComboBox.Items.Add(new LookInComboBoxItem(text' abspidl' 2));                            if (path != null && isMyCompChild && level >= 3 &&                              text.Equals(GetDisplayName(m_desktopFolder' path[2]' NativeMethods.SHGNO.SHGDN_INFOLDER)))                          {                              for (int i = 3; i < path.Length; i++)                              {                                  string childText = GetDisplayName(m_desktopFolder' path[i]);                                  lookInComboBox.Items.Add(new LookInComboBoxItem(childText' path[i]' i));                              }                          }                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,OnFileOK,The following statement contains a magic number: if (m_selectedPidls != null && m_selectedPidls.Length > 0)              {                  // Check if the first item is a folder.                  // It would be better to check against the SFGAO_BROWSABLE attribute' but it is never set.                  // Instead check against the SFGAO_STREAM attribute' to assure that the item isn't a folder.                  IntPtr[] pidls = new IntPtr[] { m_selectedPidls[0] };                  NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_STREAM | NativeMethods.SHGFAO.SFGAO_LINK;                  m_currentFolder.GetAttributesOf(1' pidls' ref attribs);                  if ((attribs & NativeMethods.SHGFAO.SFGAO_STREAM) == 0)                  {                      ((NativeMethods.IShellBrowser)this).BrowseObject(m_selectedPidls[0]' NativeMethods.SBSP_RELATIVE);                  }                  // Check if the item is a shortcut                  else if ((attribs & NativeMethods.SHGFAO.SFGAO_LINK) == NativeMethods.SHGFAO.SFGAO_LINK)                  {                      BrowseToLink(m_selectedPidls[0]);                  }                  else                  {                      int index = 0;                      string[] fileNames = new string[m_selectedPidls.Length];                      fileNames[0] =                          GetDisplayName(m_currentFolder' m_selectedPidls[0]' NativeMethods.SHGNO.SHGDN_FORPARSING);                        for (int i = 1; i < m_selectedPidls.Length; i++)                      {                          pidls = new IntPtr[] { m_selectedPidls[i] };                          attribs = NativeMethods.SHGFAO.SFGAO_STREAM;                          m_currentFolder.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_STREAM) == NativeMethods.SHGFAO.SFGAO_STREAM)                          {                              fileNames[++index] =                                  GetDisplayName(m_currentFolder' m_selectedPidls[i]' NativeMethods.SHGNO.SHGDN_FORPARSING);                          }                      }                        if (fileNames.Length > index + 1)                          Array.Resize(ref fileNames' index + 1);                        if (!File.Exists(fileNames[0]) || PromptFileOverwrite(Path.GetFileName(fileNames[0])))                      {                          m_fileNames = fileNames;                          DialogResult = DialogResult.OK;                      }                  }              }              else              {                  string path = fileNameComboBox.Text' driveName;                  string trimmedPath = path.Trim();                  if (path != trimmedPath)                  {                      m_ignoreFileNameChange = true;                        path = trimmedPath;                      fileNameComboBox.Text = trimmedPath;                  }                    if (string.IsNullOrEmpty(path))                  {                      if (!string.IsNullOrEmpty(m_currentFilePattern) && m_shellView != null)                      {                          m_currentFilePattern = string.Empty;                          m_shellView.Refresh(); // Causes the ICommDlgBrowser::IncludeObject to be called                      }                        return;                  }                    bool lastCharIsSeparator = (path[path.Length - 1] == Path.DirectorySeparatorChar);                    UpdateFileNameMRU(path);                    bool isPathRooted = Path.IsPathRooted(path);                  string orgPath = path;                  if (!isPathRooted)                      path = Path.Combine(GetDisplayName(m_desktopFolder' m_pidlAbsCurrent' NativeMethods.SHGNO.SHGDN_FORPARSING)' path);                    //string rootedPath = path;                  if (path.Contains(".."))                      path = Path.GetFullPath(path);                    if (Directory.Exists(path))                  {                      //if (!isPathRooted)                      //{                      //    IntPtr pidl;                      //    m_currentFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' orgPath' IntPtr.Zero' out pidl' 0);                      //    ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_RELATIVE);                      //}                      //else                      //{                      IntPtr pidl;                      m_desktopFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' path' IntPtr.Zero' out pidl' 0);                      ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_ABSOLUTE);                      //}                        fileNameComboBox.Text = string.Empty;                      return;                  }                                    // If the path root is a drive make sure it's available                  if (path.Length <= 3 && PathUtils.PathRootIsDrive(path' out driveName))                  {                      DriveInfo di = new DriveInfo(driveName);                      if (di.DriveType == DriveType.CDRom)                      {                          // The drive is an optical disk drive                          string message = "The selected disk drive is not in use. Check to make sure a disk is inserted.";                          while (!di.IsReady)                          {                              // Loop until a disk is inserted or cancel is clicked                              if (MessageBoxWithFocusRestore(message' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error) ==                                  DialogResult.Cancel)                              {                                  fileNameComboBox.SelectAll();                                  return;                              }                          }                      }                      else if (di.DriveType == DriveType.NoRootDirectory)                      {                          // The drive does not have a root directory' e.g. an unconnected network drive                          string message =                              string.Format("The drive '{0}' is not valid. Enter a valid drive letter."'                                            driveName.Substring(0' 2));                          MessageBoxWithFocusRestore(message' MessageBoxButtons.OK' MessageBoxIcon.Information);                          fileNameComboBox.SelectAll();                          return;                      }                        IntPtr pidl;                      m_desktopFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' driveName' IntPtr.Zero' out pidl' 0);                      ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_ABSOLUTE);                        fileNameComboBox.Text = string.Empty;                      return;                  }                                    if (lastCharIsSeparator) // TODO: Find out what to do when m_pathMustExist != true                  {                      string message =                          string.Format(                              @"The folder '{0}' isn't accessible. The folder may be located in an unavailable location' protected with a password' or the filename contains a / or \."'                              path);                      MessageBoxWithFocusRestore(message' MessageBoxButtons.OK' MessageBoxIcon.Information);                        fileNameComboBox.SelectAll();                      return;                  }                    path = AppendExtension(path);                  orgPath = AppendExtension(orgPath);                  string parentPath = Path.GetDirectoryName(path);                    if (File.Exists(path))                  {                      fileNameComboBox.Text = AppendExtension(fileNameComboBox.Text);                      if (PromptFileOverwrite(Path.GetFileName(path)))                      {                          FileName = path;                          DialogResult = DialogResult.OK;                      }                  }                  else if (Directory.Exists(parentPath))                  {                      string currentPath =                          GetDisplayName(m_desktopFolder' m_pidlAbsCurrent' NativeMethods.SHGNO.SHGDN_FORPARSING);                        if (parentPath != currentPath)                      {                          IntPtr pidl;                          if (!isPathRooted)                          {                              m_currentFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' Path.GetDirectoryName(orgPath)' IntPtr.Zero' out pidl' 0);                              ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_RELATIVE);                              fileNameComboBox.Text = Path.GetFileName(orgPath);                          }                          else                          {                              m_desktopFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' parentPath' IntPtr.Zero' out pidl' 0);                              ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_ABSOLUTE);                              fileNameComboBox.Text = Path.GetFileName(path);                          }                      }                      if (PromptFileCreate())                      {                          FileName = path;                          DialogResult = DialogResult.OK;                      }                  }                  else // TODO: Find out what to do when m_fileMustExist != false                  {                      fileNameComboBox.Text = AppendExtension(fileNameComboBox.Text);                      if (PromptFileCreate())                      {                          FileName = path;                          DialogResult = DialogResult.OK;                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,OnFileOK,The following statement contains a magic number: if (m_selectedPidls != null && m_selectedPidls.Length > 0)              {                  // Check if the first item is a folder.                  // It would be better to check against the SFGAO_BROWSABLE attribute' but it is never set.                  // Instead check against the SFGAO_STREAM attribute' to assure that the item isn't a folder.                  IntPtr[] pidls = new IntPtr[] { m_selectedPidls[0] };                  NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_STREAM | NativeMethods.SHGFAO.SFGAO_LINK;                  m_currentFolder.GetAttributesOf(1' pidls' ref attribs);                  if ((attribs & NativeMethods.SHGFAO.SFGAO_STREAM) == 0)                  {                      ((NativeMethods.IShellBrowser)this).BrowseObject(m_selectedPidls[0]' NativeMethods.SBSP_RELATIVE);                  }                  // Check if the item is a shortcut                  else if ((attribs & NativeMethods.SHGFAO.SFGAO_LINK) == NativeMethods.SHGFAO.SFGAO_LINK)                  {                      BrowseToLink(m_selectedPidls[0]);                  }                  else                  {                      int index = 0;                      string[] fileNames = new string[m_selectedPidls.Length];                      fileNames[0] =                          GetDisplayName(m_currentFolder' m_selectedPidls[0]' NativeMethods.SHGNO.SHGDN_FORPARSING);                        for (int i = 1; i < m_selectedPidls.Length; i++)                      {                          pidls = new IntPtr[] { m_selectedPidls[i] };                          attribs = NativeMethods.SHGFAO.SFGAO_STREAM;                          m_currentFolder.GetAttributesOf(1' pidls' ref attribs);                            if ((attribs & NativeMethods.SHGFAO.SFGAO_STREAM) == NativeMethods.SHGFAO.SFGAO_STREAM)                          {                              fileNames[++index] =                                  GetDisplayName(m_currentFolder' m_selectedPidls[i]' NativeMethods.SHGNO.SHGDN_FORPARSING);                          }                      }                        if (fileNames.Length > index + 1)                          Array.Resize(ref fileNames' index + 1);                        if (!File.Exists(fileNames[0]) || PromptFileOverwrite(Path.GetFileName(fileNames[0])))                      {                          m_fileNames = fileNames;                          DialogResult = DialogResult.OK;                      }                  }              }              else              {                  string path = fileNameComboBox.Text' driveName;                  string trimmedPath = path.Trim();                  if (path != trimmedPath)                  {                      m_ignoreFileNameChange = true;                        path = trimmedPath;                      fileNameComboBox.Text = trimmedPath;                  }                    if (string.IsNullOrEmpty(path))                  {                      if (!string.IsNullOrEmpty(m_currentFilePattern) && m_shellView != null)                      {                          m_currentFilePattern = string.Empty;                          m_shellView.Refresh(); // Causes the ICommDlgBrowser::IncludeObject to be called                      }                        return;                  }                    bool lastCharIsSeparator = (path[path.Length - 1] == Path.DirectorySeparatorChar);                    UpdateFileNameMRU(path);                    bool isPathRooted = Path.IsPathRooted(path);                  string orgPath = path;                  if (!isPathRooted)                      path = Path.Combine(GetDisplayName(m_desktopFolder' m_pidlAbsCurrent' NativeMethods.SHGNO.SHGDN_FORPARSING)' path);                    //string rootedPath = path;                  if (path.Contains(".."))                      path = Path.GetFullPath(path);                    if (Directory.Exists(path))                  {                      //if (!isPathRooted)                      //{                      //    IntPtr pidl;                      //    m_currentFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' orgPath' IntPtr.Zero' out pidl' 0);                      //    ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_RELATIVE);                      //}                      //else                      //{                      IntPtr pidl;                      m_desktopFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' path' IntPtr.Zero' out pidl' 0);                      ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_ABSOLUTE);                      //}                        fileNameComboBox.Text = string.Empty;                      return;                  }                                    // If the path root is a drive make sure it's available                  if (path.Length <= 3 && PathUtils.PathRootIsDrive(path' out driveName))                  {                      DriveInfo di = new DriveInfo(driveName);                      if (di.DriveType == DriveType.CDRom)                      {                          // The drive is an optical disk drive                          string message = "The selected disk drive is not in use. Check to make sure a disk is inserted.";                          while (!di.IsReady)                          {                              // Loop until a disk is inserted or cancel is clicked                              if (MessageBoxWithFocusRestore(message' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error) ==                                  DialogResult.Cancel)                              {                                  fileNameComboBox.SelectAll();                                  return;                              }                          }                      }                      else if (di.DriveType == DriveType.NoRootDirectory)                      {                          // The drive does not have a root directory' e.g. an unconnected network drive                          string message =                              string.Format("The drive '{0}' is not valid. Enter a valid drive letter."'                                            driveName.Substring(0' 2));                          MessageBoxWithFocusRestore(message' MessageBoxButtons.OK' MessageBoxIcon.Information);                          fileNameComboBox.SelectAll();                          return;                      }                        IntPtr pidl;                      m_desktopFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' driveName' IntPtr.Zero' out pidl' 0);                      ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_ABSOLUTE);                        fileNameComboBox.Text = string.Empty;                      return;                  }                                    if (lastCharIsSeparator) // TODO: Find out what to do when m_pathMustExist != true                  {                      string message =                          string.Format(                              @"The folder '{0}' isn't accessible. The folder may be located in an unavailable location' protected with a password' or the filename contains a / or \."'                              path);                      MessageBoxWithFocusRestore(message' MessageBoxButtons.OK' MessageBoxIcon.Information);                        fileNameComboBox.SelectAll();                      return;                  }                    path = AppendExtension(path);                  orgPath = AppendExtension(orgPath);                  string parentPath = Path.GetDirectoryName(path);                    if (File.Exists(path))                  {                      fileNameComboBox.Text = AppendExtension(fileNameComboBox.Text);                      if (PromptFileOverwrite(Path.GetFileName(path)))                      {                          FileName = path;                          DialogResult = DialogResult.OK;                      }                  }                  else if (Directory.Exists(parentPath))                  {                      string currentPath =                          GetDisplayName(m_desktopFolder' m_pidlAbsCurrent' NativeMethods.SHGNO.SHGDN_FORPARSING);                        if (parentPath != currentPath)                      {                          IntPtr pidl;                          if (!isPathRooted)                          {                              m_currentFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' Path.GetDirectoryName(orgPath)' IntPtr.Zero' out pidl' 0);                              ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_RELATIVE);                              fileNameComboBox.Text = Path.GetFileName(orgPath);                          }                          else                          {                              m_desktopFolder.ParseDisplayName(IntPtr.Zero' IntPtr.Zero' parentPath' IntPtr.Zero' out pidl' 0);                              ((NativeMethods.IShellBrowser)this).BrowseObject(pidl' NativeMethods.SBSP_ABSOLUTE);                              fileNameComboBox.Text = Path.GetFileName(path);                          }                      }                      if (PromptFileCreate())                      {                          FileName = path;                          DialogResult = DialogResult.OK;                      }                  }                  else // TODO: Find out what to do when m_fileMustExist != false                  {                      fileNameComboBox.Text = AppendExtension(fileNameComboBox.Text);                      if (PromptFileCreate())                      {                          FileName = path;                          DialogResult = DialogResult.OK;                      }                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,BrowseObject,The following statement contains a magic number: if (PathUtils.PathRootIsDrive(path' out driveName))              {                  DriveInfo di = new DriveInfo(driveName);                  if (di.DriveType == DriveType.CDRom)                  {                      // The drive is an optical disk drive                      string message = "The selected disk drive is not in use. Check to make sure a disk is inserted.";                      while (!di.IsReady)                      {                          // Loop until a disk is inserted or cancel is clicked                          if (MessageBoxWithFocusRestore(message' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error) ==                              DialogResult.Cancel)                              return NativeMethods.S_OK;                      }                  }                  else if (di.DriveType == DriveType.NoRootDirectory)                  {                      // The drive does not have a root directory' e.g. an unconnected network drive                      string message =                          string.Format("The drive '{0}' is not valid. Enter a valid drive letter."'                                        driveName.Substring(0' 2));                      MessageBoxWithFocusRestore(message' MessageBoxButtons.OK' MessageBoxIcon.Information);                      return NativeMethods.S_OK;                  }              }
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,IncludeObject,The following statement contains a magic number: IntPtr strr = Marshal.AllocCoTaskMem(NativeMethods.MAX_PATH * 2 + 4);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,IncludeObject,The following statement contains a magic number: IntPtr strr = Marshal.AllocCoTaskMem(NativeMethods.MAX_PATH * 2 + 4);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInLabel.Location = new System.Drawing.Point(35' 6);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInLabel.Location = new System.Drawing.Point(35' 6);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInLabel.Size = new System.Drawing.Size(44' 13);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInLabel.Size = new System.Drawing.Size(44' 13);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInLabel.TabIndex = 6;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Location = new System.Drawing.Point(333' 3);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Location = new System.Drawing.Point(333' 3);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Size = new System.Drawing.Size(210' 25);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Size = new System.Drawing.Size(210' 25);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.TabIndex = 8;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.backToolStripSplitButton.Size = new System.Drawing.Size(32' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.backToolStripSplitButton.Size = new System.Drawing.Size(32' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.upOneLevelToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.upOneLevelToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.searchTheWebToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.searchTheWebToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.createNewFolderToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.createNewFolderToolStripButton.Size = new System.Drawing.Size(23' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.viewsToolStripSplitButton.Size = new System.Drawing.Size(32' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.viewsToolStripSplitButton.Size = new System.Drawing.Size(32' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.thumbnailsToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.thumbnailsToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.sideBySideToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.sideBySideToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.iconsToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.iconsToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.listToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.listToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.detailsToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.detailsToolStripMenuItem.Size = new System.Drawing.Size(138' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolsToolStripDropDownButton.Size = new System.Drawing.Size(45' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolsToolStripDropDownButton.Size = new System.Drawing.Size(45' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.renameToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.renameToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.connectNetworkDriveToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.connectNetworkDriveToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem1.Size = new System.Drawing.Size(185' 6);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem1.Size = new System.Drawing.Size(185' 6);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.propertyToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.propertyToolStripMenuItem.Size = new System.Drawing.Size(188' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameLabel.Location = new System.Drawing.Point(95' 310);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameLabel.Location = new System.Drawing.Point(95' 310);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameLabel.Size = new System.Drawing.Size(56' 13);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameLabel.Size = new System.Drawing.Size(56' 13);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameComboBox.Location = new System.Drawing.Point(171' 309);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameComboBox.Location = new System.Drawing.Point(171' 309);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameComboBox.Size = new System.Drawing.Size(299' 21);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileNameComboBox.Size = new System.Drawing.Size(299' 21);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeLabel.Location = new System.Drawing.Point(95' 336);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeLabel.Location = new System.Drawing.Point(95' 336);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeLabel.Size = new System.Drawing.Size(70' 13);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeLabel.Size = new System.Drawing.Size(70' 13);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeLabel.TabIndex = 2;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeComboBox.Location = new System.Drawing.Point(171' 335);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeComboBox.Location = new System.Drawing.Point(171' 335);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeComboBox.Size = new System.Drawing.Size(299' 21);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeComboBox.Size = new System.Drawing.Size(299' 21);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.fileTypeComboBox.TabIndex = 3;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Location = new System.Drawing.Point(491' 309);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Location = new System.Drawing.Point(491' 309);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Size = new System.Drawing.Size(96' 23);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Size = new System.Drawing.Size(96' 23);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.TabIndex = 4;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new System.Drawing.Point(492' 334);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new System.Drawing.Point(492' 334);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new System.Drawing.Size(95' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new System.Drawing.Size(95' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.TabIndex = 5;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.ImageScalingSize = new System.Drawing.Size(32' 32);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.ImageScalingSize = new System.Drawing.Size(32' 32);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.Location = new System.Drawing.Point(5' 28);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.Location = new System.Drawing.Point(5' 28);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.Size = new System.Drawing.Size(87' 327);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.Size = new System.Drawing.Size(87' 327);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.TabIndex = 10;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInComboBox.Location = new System.Drawing.Point(98' 3);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInComboBox.Location = new System.Drawing.Point(98' 3);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInComboBox.Size = new System.Drawing.Size(216' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInComboBox.Size = new System.Drawing.Size(216' 22);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.lookInComboBox.TabIndex = 7;
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(593' 359);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(593' 359);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(601' 393);
Magic Number,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(601' 393);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 43);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 43);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(38' 13);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(38' 13);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.nameTextBox.Location = new System.Drawing.Point(60' 41);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.nameTextBox.Location = new System.Drawing.Point(60' 41);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.nameTextBox.Size = new System.Drawing.Size(234' 21);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.nameTextBox.Size = new System.Drawing.Size(234' 21);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Location = new System.Drawing.Point(310' 11);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Location = new System.Drawing.Point(310' 11);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Size = new System.Drawing.Size(74' 22);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.Size = new System.Drawing.Size(74' 22);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.okButton.TabIndex = 2;
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new System.Drawing.Point(310' 40);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new System.Drawing.Point(310' 40);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new System.Drawing.Size(74' 22);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new System.Drawing.Size(74' 22);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.TabIndex = 3;
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(393' 76);
Magic Number,FileDialogs,NewFolderDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\NewFolderDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(393' 76);
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,CheckInvalidPathChars,The following statement contains a magic number: for (int i = 0; i < path.Length; i++)              {                  char ch = path[i];                  if (ch == '"' || ch == '<' || ch == '>' || ch == '|' || ch < 32)                      return true;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The following statement contains a magic number: if (length >= 1 && IsDirectorySeparator(path[0]))              {                  rootLength = 1;                  if (length >= 2 && IsDirectorySeparator(path[1]))                  {                      rootLength = 2;                      int i = 2;                      while (rootLength < length && ((                          path[rootLength] != Path.DirectorySeparatorChar &&                          path[rootLength] != Path.AltDirectorySeparatorChar) || (--i > 0)))                      {                          rootLength++;                      }                  }                  return rootLength;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The following statement contains a magic number: if (length >= 1 && IsDirectorySeparator(path[0]))              {                  rootLength = 1;                  if (length >= 2 && IsDirectorySeparator(path[1]))                  {                      rootLength = 2;                      int i = 2;                      while (rootLength < length && ((                          path[rootLength] != Path.DirectorySeparatorChar &&                          path[rootLength] != Path.AltDirectorySeparatorChar) || (--i > 0)))                      {                          rootLength++;                      }                  }                  return rootLength;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The following statement contains a magic number: if (length >= 1 && IsDirectorySeparator(path[0]))              {                  rootLength = 1;                  if (length >= 2 && IsDirectorySeparator(path[1]))                  {                      rootLength = 2;                      int i = 2;                      while (rootLength < length && ((                          path[rootLength] != Path.DirectorySeparatorChar &&                          path[rootLength] != Path.AltDirectorySeparatorChar) || (--i > 0)))                      {                          rootLength++;                      }                  }                  return rootLength;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The following statement contains a magic number: if (length >= 2 && path[1] == Path.VolumeSeparatorChar)              {                  rootLength = 2;                  if (length >= 3 && IsDirectorySeparator(path[2]))                      rootLength++;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The following statement contains a magic number: if (length >= 2 && path[1] == Path.VolumeSeparatorChar)              {                  rootLength = 2;                  if (length >= 3 && IsDirectorySeparator(path[2]))                      rootLength++;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The following statement contains a magic number: if (length >= 2 && path[1] == Path.VolumeSeparatorChar)              {                  rootLength = 2;                  if (length >= 3 && IsDirectorySeparator(path[2]))                      rootLength++;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,GetRootLength,The following statement contains a magic number: if (length >= 2 && path[1] == Path.VolumeSeparatorChar)              {                  rootLength = 2;                  if (length >= 3 && IsDirectorySeparator(path[2]))                      rootLength++;              }
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,PathRootIsDrive,The following statement contains a magic number: if (path == null || path.Length < 2)                  return false;
Magic Number,FileDialogs,PathUtils,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\PathUtils.cs,PathRootIsDrive,The following statement contains a magic number: if (driveName.Length == 2 && driveName[1] == ':')                  driveName += @"\";
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (e.Index == -1) // The combo box contains no items and the item is the editing portion              {                  if (m_currentItem == null)                      return;                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int imageYOffset = (e.Bounds.Height - m_currentItem.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(m_currentItem.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + m_currentItem.Icon.Width + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? m_currentItem.SelectedIcon : m_currentItem.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' m_currentItem.Text' e.Font' textPoint' e.ForeColor);              }              else              {                  LookInComboBoxItem item = (LookInComboBoxItem)Items[e.Index];                    Brush backBrush = new SolidBrush(SystemColors.Window);                  e.Graphics.FillRectangle(backBrush' e.Bounds);                  backBrush.Dispose();                    int indentOffset = m_indentWidth * item.Indent;                    if ((e.State & DrawItemState.ComboBoxEdit) == DrawItemState.ComboBoxEdit)                      indentOffset = 0;                    int imageYOffset = (e.Bounds.Height - item.Icon.Height) / 2;                  Point imagePoint = new Point(                      e.Bounds.Left + indentOffset + 2'                      e.Bounds.Top + imageYOffset);                    Size textSize = TextRenderer.MeasureText(item.Text' e.Font);                  int textYOffset = (e.Bounds.Height - textSize.Height) / 2;                  Point textPoint = new Point(                      e.Bounds.Left + item.Icon.Width + indentOffset + 5'                      e.Bounds.Top + textYOffset);                  textSize.Height += textYOffset;                  Rectangle textRect = new Rectangle(textPoint' textSize);                    bool selected = ((e.State & DrawItemState.Selected) == DrawItemState.Selected);                  if (selected)                  {                      Brush selectedBrush = new SolidBrush(SystemColors.Highlight);                      e.Graphics.FillRectangle(selectedBrush' textRect);                      selectedBrush.Dispose();                  }                    if (((e.State & DrawItemState.Focus) == DrawItemState.Focus) && ((e.State & DrawItemState.NoFocusRect) != DrawItemState.NoFocusRect))                  {                      ControlPaint.DrawFocusRectangle(e.Graphics' textRect' e.ForeColor' e.BackColor);                  }                    e.Graphics.DrawIcon(selected ? item.SelectedIcon : item.Icon' imagePoint.X' imagePoint.Y);                  TextRenderer.DrawText(e.Graphics' item.Text' e.Font' textPoint' e.ForeColor);              }
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DropDown,The following statement contains a magic number: int ddHeight = Items.Count * ItemHeight + 2;
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DropDown,The following statement contains a magic number: DropDownHeight = ((ddHeight - 2) / ItemHeight) * ItemHeight + 2;
Magic Number,FileDialogs,LookInComboBox,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\LookInComboBox.cs,ComboBox_DropDown,The following statement contains a magic number: DropDownHeight = ((ddHeight - 2) / ItemHeight) * ItemHeight + 2;
Magic Number,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The following statement contains a magic number: int key = index * 256;
Magic Number,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The following statement contains a magic number: if ((attribs & NativeMethods.SHGFAO.SFGAO_SHARE) != 0)              {                  key = key | 2;                  dwflag = dwflag | NativeMethods.SHGFI_ADDOVERLAYS;                  hasOverlay = true;              }
Magic Number,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The following statement contains a magic number: if (selectedIcon)              {                  key = key | 4;                  dwflag = dwflag | NativeMethods.SHGFI_SELECTED;                  hasOverlay = true;              }
Magic Number,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The following statement contains a magic number: if (openIcon)              {                  key = key | 8;                  dwflag = dwflag | NativeMethods.SHGFI_OPENICON;                  hasOverlay = true; // Not really an overlay' but handled the same              }
Magic Number,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIconIndex,The following statement contains a magic number: if (m_imageTable.ContainsKey(key))                  rVal = (int)m_imageTable[key];              else if (!hasOverlay && (attribs & NativeMethods.SHGFAO.SFGAO_HIDDEN) == 0) // For non-overlay icons' we already have              {                  rVal = (int)Math.Floor((double)key / 256); // the right index -- put in table                  m_imageTable[key] = rVal;              }              else // Don't have iconindex for an overlay' get it.              {                  //item.m_isDisk = (item.m_path.Length == 3 && item.m_path.EndsWith(":\\"));                  if ((attribs & NativeMethods.SHGFAO.SFGAO_FILESYSTEM) != 0 &&                      (attribs & NativeMethods.SHGFAO.SFGAO_FOLDER) == 0)                  {                      dwflag = dwflag | NativeMethods.SHGFI_USEFILEATTRIBUTES;                      dwAttr = dwAttr | NativeMethods.FILE_ATTRIBUTE_NORMAL;                  }                    NativeMethods.SHFILEINFO shfiSmall = new NativeMethods.SHFILEINFO();                  NativeMethods.Shell32.SHGetFileInfo(pidl' dwAttr' ref shfiSmall' Marshal.SizeOf(shfiSmall)' dwflag | NativeMethods.SHGFI_SMALLICON);                    NativeMethods.SHFILEINFO shfiLarge = new NativeMethods.SHFILEINFO();                  NativeMethods.Shell32.SHGetFileInfo(pidl' dwAttr' ref shfiLarge' Marshal.SizeOf(shfiLarge)' dwflag | NativeMethods.SHGFI_LARGEICON);                    lock (m_imageTable)                  {                      rVal = NativeMethods.ComCtl32.ImageList_ReplaceIcon(m_smallImageListHandle' -1' shfiSmall.hIcon);                      NativeMethods.ComCtl32.ImageList_ReplaceIcon(m_largeImageListHandle' -1' shfiLarge.hIcon);                  }                    NativeMethods.User32.DestroyIcon(shfiSmall.hIcon);                  NativeMethods.User32.DestroyIcon(shfiLarge.hIcon);                  m_imageTable[key] = rVal;              }
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,PaintArrow,The following statement contains a magic number: Point middle =                  new Point(Convert.ToInt32(dropDownRect.Left + dropDownRect.Width / 2)'                            Convert.ToInt32(dropDownRect.Top + dropDownRect.Height / 2));
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,PaintArrow,The following statement contains a magic number: Point middle =                  new Point(Convert.ToInt32(dropDownRect.Left + dropDownRect.Width / 2)'                            Convert.ToInt32(dropDownRect.Top + dropDownRect.Height / 2));
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,PaintArrow,The following statement contains a magic number: middle.X += (dropDownRect.Width % 2);
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,PaintArrow,The following statement contains a magic number: Point[] arrow =                  new Point[]                      {                          new Point(middle.X - 2' middle.Y - 1)' new Point(middle.X + 3' middle.Y - 1)'                          new Point(middle.X' middle.Y + 2)                      };
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,PaintArrow,The following statement contains a magic number: Point[] arrow =                  new Point[]                      {                          new Point(middle.X - 2' middle.Y - 1)' new Point(middle.X + 3' middle.Y - 1)'                          new Point(middle.X' middle.Y + 2)                      };
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,PaintArrow,The following statement contains a magic number: Point[] arrow =                  new Point[]                      {                          new Point(middle.X - 2' middle.Y - 1)' new Point(middle.X + 3' middle.Y - 1)'                          new Point(middle.X' middle.Y + 2)                      };
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,GetPreferredSize,The following statement contains a magic number: if (m_showSplit && !string.IsNullOrEmpty(Text) &&                  TextRenderer.MeasureText(Text' Font).Width + PushButtonWidth > preferredSize.Width)              {                  return preferredSize + new Size(PushButtonWidth + BorderSize * 2' 0);              }
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,OnPaint,The following statement contains a magic number: m_dropDownRectangle =                  new Rectangle(bounds.Right - PushButtonWidth - 1' BorderSize' PushButtonWidth'                                bounds.Height - BorderSize * 2);
Magic Number,FileDialogs,SplitButton,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\SplitButton.cs,OnPaint,The following statement contains a magic number: Rectangle focusRect =                  new Rectangle(internalBorder'                                internalBorder'                                bounds.Width - m_dropDownRectangle.Width - internalBorder - 1'                                bounds.Height - (internalBorder * 2));
Magic Number,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnCount = 2;
Magic Number,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowCount = 2;
Magic Number,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(292' 266);
Magic Number,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(292' 266);
Magic Number,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 266);
Magic Number,FileDialogs.Design,FileDialogFilterEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogFilterEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 266);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.addCustomPathTableLayoutPanel' 0' 3);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.customPlacesLabel' 0' 2);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.propsLabel' 2' 0);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.previewLabel' 3' 0);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.placesBar' 3' 1);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.placesLabel' 0' 5);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.placesListBox' 0' 6);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.moveUpButton' 1' 6);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.moveDownButton' 1' 7);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.removeButton' 1' 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.selectedPlaceProps' 2' 1);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.okCancelTableLayoutPanel' 0' 9);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.addCustomPathButton' 0' 4);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.ImageScalingSize = new System.Drawing.Size(32' 32);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.placesBar.ImageScalingSize = new System.Drawing.Size(32' 32);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetRowSpan(this.placesBar' 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetRowSpan(this.placesListBox' 3);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetRowSpan(this.selectedPlaceProps' 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetColumnSpan(this.okCancelTableLayoutPanel' 4);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,AddPlace,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,AddPlace,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,AddPlace,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,selectedPlaceProps_PropertyValueChanged,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,selectedPlaceProps_PropertyValueChanged,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Magic Number,FileDialogs.Design,FileDialogPlacesEditorForm,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\Design\FileDialogPlacesEditor.cs,selectedPlaceProps_PropertyValueChanged,The following statement contains a magic number: placeButton.Padding = new Padding(0' multipleLines ? 3 : 8' 0' multipleLines ? 0 : 8);
Missing Default,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (keyData)              {                  case Keys.Alt | Keys.D1:                      if (backToolStripSplitButton.Enabled)                      {                          backToolStripSplitButton.PerformButtonClick();                          return true;                      }                      break;                    case Keys.Alt | Keys.D2:                      if (upOneLevelToolStripButton.Enabled)                      {                          upOneLevelToolStripButton.PerformClick();                          return true;                      }                      break;                    case Keys.Alt | Keys.D3:                      if (searchTheWebToolStripButton.Enabled)                      {                          searchTheWebToolStripButton.PerformClick();                          return true;                      }                      break;                    case Keys.Alt | Keys.D4:                      if (deleteToolStripButton.Enabled)                      {                          deleteToolStripButton.PerformClick();                          return true;                      }                      break;                    case Keys.Alt | Keys.D5:                      if (createNewFolderToolStripButton.Enabled)                      {                          createNewFolderToolStripButton.PerformClick();                          return true;                      }                      break;                    case Keys.Alt | Keys.D6:                      viewsToolStripSplitButton.PerformButtonClick();                      return true;                    case Keys.Alt | Keys.D7:                      toolsToolStripDropDownButton.ShowDropDown();                      return true;              }
Missing Default,FileDialogs,FileDialog,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\FileDialog.cs,OnStateChange,The following switch statement is missing a default case: switch (uChange.ToInt32())              {                  case NativeMethods.CDBOSC_SETFOCUS: // The focus has been set to the view.                      m_shellViewHasFocus = true;                        // If the cancel button loses focuse it won't update it's style                      if (okButton.Enabled)                      {                          okButton.NotifyDefault(true);                          cancelButton.NotifyDefault(false);                      }                      break;                    case NativeMethods.CDBOSC_KILLFOCUS: // The view has lost the focus.                      m_shellViewHasFocus = false;                      break;                    case NativeMethods.CDBOSC_SELCHANGE: // The selection has changed.                      bool itemsSelected = false;                      NativeMethods.SHGFAO attribs = NativeMethods.SHGFAO.SFGAO_CANDELETE |                                                     NativeMethods.SHGFAO.SFGAO_CANRENAME;                      IntPtr pDataObjectPtr;                      if (m_shellView.GetItemObject(                              (uint)NativeMethods.SVGIO.SVGIO_SELECTION'                              ref NativeMethods.IID_IDataObject'                              out pDataObjectPtr) != NativeMethods.S_OK)                      {                          m_selectedPidls = null;                      }                      else                      {                          ComTypes.IDataObject pDataObject =                              (ComTypes.IDataObject)Marshal.GetObjectForIUnknown(pDataObjectPtr);                            short cfFormat =                              (short)NativeMethods.User32.RegisterClipboardFormat(NativeMethods.CFSTR_SHELLIDLIST);                            ComTypes.FORMATETC fmt = new ComTypes.FORMATETC();                          ComTypes.STGMEDIUM stg;                            fmt.cfFormat = cfFormat;                          fmt.ptd = IntPtr.Zero;                          fmt.dwAspect = ComTypes.DVASPECT.DVASPECT_CONTENT;                          fmt.lindex = -1;                          fmt.tymed = ComTypes.TYMED.TYMED_HGLOBAL;                            if (pDataObject.QueryGetData(ref fmt) == NativeMethods.S_OK)                          {                              pDataObject.GetData(ref fmt' out stg);                                IntPtr pIDList = stg.unionmember;                              NativeMethods.Kernel32.GlobalLock(stg.unionmember);                                // Number of relative IDList                              uint cidl = (uint)Marshal.ReadInt32(stg.unionmember);                              if (cidl == 0)                                  m_selectedPidls = null; // No items selected                              else                              {                                  itemsSelected = true;                                    int offset = sizeof (uint);                                  m_selectedPidls = new IntPtr[cidl];                                  for (int i = 0; i < cidl; i++)                                  {                                      offset += sizeof (uint);                                      m_selectedPidls[i] =                                          (IntPtr)((int)pIDList + (uint)Marshal.ReadInt32(pIDList' offset));                                  }                                    m_currentFolder.GetAttributesOf(cidl' m_selectedPidls' ref attribs);                              }                          }                            Marshal.ReleaseComObject(pDataObject);                          Marshal.Release(pDataObjectPtr);                      }                        OnSelectionChanged();                        // Enable/disable delete and rename commands                      deleteToolStripButton.Enabled =                          deleteToolStripMenuItem.Enabled =                          itemsSelected &&                          ((attribs & NativeMethods.SHGFAO.SFGAO_CANDELETE) == NativeMethods.SHGFAO.SFGAO_CANDELETE);                      renameToolStripMenuItem.Enabled = itemsSelected &&                                                        ((attribs & NativeMethods.SHGFAO.SFGAO_CANRENAME) ==                                                         NativeMethods.SHGFAO.SFGAO_CANRENAME);                      break;              }
Missing Default,FileDialogs,ShellImageList,C:\repos\dwmkerr_sharpshell\Scratch\FileDialogs\FileDialogs\FileDialogs\ShellImageList.cs,GetIcon,The following switch statement is missing a default case: switch (size)              {                  case ShellImageListSize.Small:                      iconPtr = NativeMethods.ComCtl32.ImageList_GetIcon(m_smallImageListHandle' index' NativeMethods.ILD_NORMAL);                      break;                    case ShellImageListSize.Large:                      iconPtr = NativeMethods.ComCtl32.ImageList_GetIcon(m_largeImageListHandle' index' NativeMethods.ILD_NORMAL);                      break;              }
