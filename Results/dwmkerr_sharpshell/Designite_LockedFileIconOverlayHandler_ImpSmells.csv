Implementation smell,Namespace,Class,File,Method,Description
Magic Number,LockedFileIconOverlayHandler,LockedFileIconOverlayHandler,F:\newReposMay17\dwmkerr_sharpshell\SharpShell\Samples\IconOverlayHandler\LockedFileIconOverlayHandler\LockedFileIconOverlayHandler.cs,GetPriority,The following statement contains a magic number: return 90;  
Magic Number,LockedFileIconOverlayHandler,LockedFileIconOverlayHandler,F:\newReposMay17\dwmkerr_sharpshell\SharpShell\Samples\IconOverlayHandler\LockedFileIconOverlayHandler\LockedFileIconOverlayHandler.cs,TestIfFileIsLocked,The following statement contains a magic number: try {  	using (File.Open (path' FileMode.Open' FileAccess.Write' FileShare.None)) {  		//  The file is not locked.  		return false;  	}  } catch (IOException exception) {  	//  Get the exception hresult' check for lock exceptions.  	var errorCode = Marshal.GetHRForException (exception) & ((1 << 16) - 1);  	return errorCode == 32 || errorCode == 33;  } catch (Exception) {  	return false;  }  
Magic Number,LockedFileIconOverlayHandler,LockedFileIconOverlayHandler,F:\newReposMay17\dwmkerr_sharpshell\SharpShell\Samples\IconOverlayHandler\LockedFileIconOverlayHandler\LockedFileIconOverlayHandler.cs,TestIfFileIsLocked,The following statement contains a magic number: try {  	using (File.Open (path' FileMode.Open' FileAccess.Write' FileShare.None)) {  		//  The file is not locked.  		return false;  	}  } catch (IOException exception) {  	//  Get the exception hresult' check for lock exceptions.  	var errorCode = Marshal.GetHRForException (exception) & ((1 << 16) - 1);  	return errorCode == 32 || errorCode == 33;  } catch (Exception) {  	return false;  }  
Magic Number,LockedFileIconOverlayHandler,LockedFileIconOverlayHandler,F:\newReposMay17\dwmkerr_sharpshell\SharpShell\Samples\IconOverlayHandler\LockedFileIconOverlayHandler\LockedFileIconOverlayHandler.cs,TestIfFileIsLocked,The following statement contains a magic number: try {  	using (File.Open (path' FileMode.Open' FileAccess.Write' FileShare.None)) {  		//  The file is not locked.  		return false;  	}  } catch (IOException exception) {  	//  Get the exception hresult' check for lock exceptions.  	var errorCode = Marshal.GetHRForException (exception) & ((1 << 16) - 1);  	return errorCode == 32 || errorCode == 33;  } catch (Exception) {  	return false;  }  
Magic Number,LockedFileIconOverlayHandler,LockedFileIconOverlayHandler,F:\newReposMay17\dwmkerr_sharpshell\SharpShell\Samples\IconOverlayHandler\LockedFileIconOverlayHandler\LockedFileIconOverlayHandler.cs,TestIfFileIsLocked,The following statement contains a magic number: return errorCode == 32 || errorCode == 33;  
Magic Number,LockedFileIconOverlayHandler,LockedFileIconOverlayHandler,F:\newReposMay17\dwmkerr_sharpshell\SharpShell\Samples\IconOverlayHandler\LockedFileIconOverlayHandler\LockedFileIconOverlayHandler.cs,TestIfFileIsLocked,The following statement contains a magic number: return errorCode == 32 || errorCode == 33;  
