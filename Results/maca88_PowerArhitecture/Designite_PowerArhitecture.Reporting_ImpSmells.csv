Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PowerArhitecture.Reporting,CsvReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\CsvReport.cs,CreateReport,Cyclomatic complexity of the method is 10
Complex Method,PowerArhitecture.Reporting,XlsxReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\XlsxReport.cs,CreateAndFillTable,Cyclomatic complexity of the method is 9
Complex Method,PowerArhitecture.Reporting,XlsxReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\XlsxReport.cs,SetCellValue,Cyclomatic complexity of the method is 11
Complex Method,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,Cyclomatic complexity of the method is 9
Complex Method,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,Cyclomatic complexity of the method is 11
Long Parameter List,PowerArhitecture.Reporting,XlsxReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\XlsxReport.cs,CreateAndFillTable,The method has 5 parameters.
Long Parameter List,PowerArhitecture.Reporting,XlsxReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\XlsxReport.cs,CreateAndFillTable,The method has 6 parameters.
Long Parameter List,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,AddHtmlContent,The method has 5 parameters.
Long Parameter List,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The method has 6 parameters.
Long Statement,PowerArhitecture.Common.Reporting,ReportShortCodes,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\ReportShortCodes.cs,Process,The length of the statement  "	return string.IsNullOrEmpty (content) ? content : ShortCodeProcessors.Aggregate (content' (current' pair) => current.Replace (pair.Key' pair.Value (reportParamters))); " is 167.
Long Statement,PowerArhitecture.Reporting,BaseReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\BaseReport.cs,GetItemProperties,The length of the statement  "	var itemPropertiesCol = itemProperties as ICollection<ReportItemProperty> ?? (itemProperties != null ? itemProperties.ToList () : null); " is 136.
Long Statement,PowerArhitecture.Reporting,XlsxReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\XlsxReport.cs,CreateReport,The length of the statement  "				Orientation = Settings.PageOrientation == PageOrientation.Landscape ? OrientationValues.Landscape : OrientationValues.Portrait " is 126.
Long Statement,PowerArhitecture.Reporting,Reporter,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Reporter.cs,Initialize,The length of the statement  "                        _reports[report.Name][report.Type][reportLangDb.LanguageCode] = new KeyValuePair<ReportInfo' IReport>(parameters' report);" is 122.
Long Statement,PowerArhitecture.Reporting,Reporter,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Reporter.cs,CreateReportAsUrl,The length of the statement  "                    throw new KeyNotFoundException(string.Format("Report '{0}' do not have any report with type '{1}'"' reportName' reportType));" is 125.
Long Statement,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,SetMargins,The length of the statement  "	document.SetMargins (document.LeftMargin' document.RightMargin' HeaderHeight + _headerOffset' FooterHeight + _footerOffset); " is 124.
Long Statement,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,AddWatermark,The length of the statement  "	var watermarkCell = new PdfPCell (new Phrase ("Watermark 2014"' new Font (_baseFont' ReportSettings.FontSize' Font.NORMAL' new BaseColor (Color.DarkGray)))) { " is 158.
Long Statement,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,OnCloseDocument,The length of the statement  "	ColumnText.ShowTextAligned (_total' Element.ALIGN_LEFT' new Phrase ((writer.PageNumber - 1).ToString (CultureInfo.InvariantCulture)' new Font (_baseFont' ReportSettings.FontSize))' 0' 0' 0); " is 190.
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: using (var document = new Document (pageSize))  	using (var mStream = new MemoryStream ())  		using (var writer = PdfWriter.GetInstance (document' mStream)) {  			try {  				Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  				Settings.Header.CustomContent.Align = Alignment.Right;  				Settings.Header.Paging.Show = true;  				Settings.Header.Paging.Align = Alignment.Left;  				Settings.Header.ShowSeparatorLine = true;  				Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  				Settings.Footer.CustomContent.Align = Alignment.Left;  				Settings.Footer.Paging.Show = true;  				Settings.Footer.Paging.Align = Alignment.Right;  				Settings.Footer.ShowSeparatorLine = true;  				Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  				Settings.EndContentHtml = "<h1>End content {Date}</h1>";  				var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  					HeaderHeight = 40'  					FooterHeight = 50  				};  				writer.PageEvent = headerFooterEvent;  				headerFooterEvent.SetMargins (document);  				document.Open ();  				var printParameters = parameters as PrintParameters<TItem>;  				if (printParameters != null && !printParameters.Preview) {  					writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  				}  				AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  				CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  				AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  			}  			catch (DocumentException) {  				throw;  				//handle pdf document exception if any  			}  			catch (IOException) {  				throw;  				// handle IO exception  			}  			catch (Exception) {  				throw;  				// handle other exception if occurs  			}  			document.Close ();  			writer.Flush ();  			return mStream;  		}  
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: using (var document = new Document (pageSize))  	using (var mStream = new MemoryStream ())  		using (var writer = PdfWriter.GetInstance (document' mStream)) {  			try {  				Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  				Settings.Header.CustomContent.Align = Alignment.Right;  				Settings.Header.Paging.Show = true;  				Settings.Header.Paging.Align = Alignment.Left;  				Settings.Header.ShowSeparatorLine = true;  				Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  				Settings.Footer.CustomContent.Align = Alignment.Left;  				Settings.Footer.Paging.Show = true;  				Settings.Footer.Paging.Align = Alignment.Right;  				Settings.Footer.ShowSeparatorLine = true;  				Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  				Settings.EndContentHtml = "<h1>End content {Date}</h1>";  				var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  					HeaderHeight = 40'  					FooterHeight = 50  				};  				writer.PageEvent = headerFooterEvent;  				headerFooterEvent.SetMargins (document);  				document.Open ();  				var printParameters = parameters as PrintParameters<TItem>;  				if (printParameters != null && !printParameters.Preview) {  					writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  				}  				AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  				CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  				AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  			}  			catch (DocumentException) {  				throw;  				//handle pdf document exception if any  			}  			catch (IOException) {  				throw;  				// handle IO exception  			}  			catch (Exception) {  				throw;  				// handle other exception if occurs  			}  			document.Close ();  			writer.Flush ();  			return mStream;  		}  
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: using (var mStream = new MemoryStream ())  	using (var writer = PdfWriter.GetInstance (document' mStream)) {  		try {  			Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  			Settings.Header.CustomContent.Align = Alignment.Right;  			Settings.Header.Paging.Show = true;  			Settings.Header.Paging.Align = Alignment.Left;  			Settings.Header.ShowSeparatorLine = true;  			Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  			Settings.Footer.CustomContent.Align = Alignment.Left;  			Settings.Footer.Paging.Show = true;  			Settings.Footer.Paging.Align = Alignment.Right;  			Settings.Footer.ShowSeparatorLine = true;  			Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  			Settings.EndContentHtml = "<h1>End content {Date}</h1>";  			var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  				HeaderHeight = 40'  				FooterHeight = 50  			};  			writer.PageEvent = headerFooterEvent;  			headerFooterEvent.SetMargins (document);  			document.Open ();  			var printParameters = parameters as PrintParameters<TItem>;  			if (printParameters != null && !printParameters.Preview) {  				writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  			}  			AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  			CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  			AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  		}  		catch (DocumentException) {  			throw;  			//handle pdf document exception if any  		}  		catch (IOException) {  			throw;  			// handle IO exception  		}  		catch (Exception) {  			throw;  			// handle other exception if occurs  		}  		document.Close ();  		writer.Flush ();  		return mStream;  	}  
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: using (var mStream = new MemoryStream ())  	using (var writer = PdfWriter.GetInstance (document' mStream)) {  		try {  			Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  			Settings.Header.CustomContent.Align = Alignment.Right;  			Settings.Header.Paging.Show = true;  			Settings.Header.Paging.Align = Alignment.Left;  			Settings.Header.ShowSeparatorLine = true;  			Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  			Settings.Footer.CustomContent.Align = Alignment.Left;  			Settings.Footer.Paging.Show = true;  			Settings.Footer.Paging.Align = Alignment.Right;  			Settings.Footer.ShowSeparatorLine = true;  			Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  			Settings.EndContentHtml = "<h1>End content {Date}</h1>";  			var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  				HeaderHeight = 40'  				FooterHeight = 50  			};  			writer.PageEvent = headerFooterEvent;  			headerFooterEvent.SetMargins (document);  			document.Open ();  			var printParameters = parameters as PrintParameters<TItem>;  			if (printParameters != null && !printParameters.Preview) {  				writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  			}  			AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  			CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  			AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  		}  		catch (DocumentException) {  			throw;  			//handle pdf document exception if any  		}  		catch (IOException) {  			throw;  			// handle IO exception  		}  		catch (Exception) {  			throw;  			// handle other exception if occurs  		}  		document.Close ();  		writer.Flush ();  		return mStream;  	}  
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: using (var writer = PdfWriter.GetInstance (document' mStream)) {  	try {  		Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  		Settings.Header.CustomContent.Align = Alignment.Right;  		Settings.Header.Paging.Show = true;  		Settings.Header.Paging.Align = Alignment.Left;  		Settings.Header.ShowSeparatorLine = true;  		Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  		Settings.Footer.CustomContent.Align = Alignment.Left;  		Settings.Footer.Paging.Show = true;  		Settings.Footer.Paging.Align = Alignment.Right;  		Settings.Footer.ShowSeparatorLine = true;  		Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  		Settings.EndContentHtml = "<h1>End content {Date}</h1>";  		var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  			HeaderHeight = 40'  			FooterHeight = 50  		};  		writer.PageEvent = headerFooterEvent;  		headerFooterEvent.SetMargins (document);  		document.Open ();  		var printParameters = parameters as PrintParameters<TItem>;  		if (printParameters != null && !printParameters.Preview) {  			writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  		}  		AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  		CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  		AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  	}  	catch (DocumentException) {  		throw;  		//handle pdf document exception if any  	}  	catch (IOException) {  		throw;  		// handle IO exception  	}  	catch (Exception) {  		throw;  		// handle other exception if occurs  	}  	document.Close ();  	writer.Flush ();  	return mStream;  }  
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: using (var writer = PdfWriter.GetInstance (document' mStream)) {  	try {  		Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  		Settings.Header.CustomContent.Align = Alignment.Right;  		Settings.Header.Paging.Show = true;  		Settings.Header.Paging.Align = Alignment.Left;  		Settings.Header.ShowSeparatorLine = true;  		Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  		Settings.Footer.CustomContent.Align = Alignment.Left;  		Settings.Footer.Paging.Show = true;  		Settings.Footer.Paging.Align = Alignment.Right;  		Settings.Footer.ShowSeparatorLine = true;  		Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  		Settings.EndContentHtml = "<h1>End content {Date}</h1>";  		var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  			HeaderHeight = 40'  			FooterHeight = 50  		};  		writer.PageEvent = headerFooterEvent;  		headerFooterEvent.SetMargins (document);  		document.Open ();  		var printParameters = parameters as PrintParameters<TItem>;  		if (printParameters != null && !printParameters.Preview) {  			writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  		}  		AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  		CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  		AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  	}  	catch (DocumentException) {  		throw;  		//handle pdf document exception if any  	}  	catch (IOException) {  		throw;  		// handle IO exception  	}  	catch (Exception) {  		throw;  		// handle other exception if occurs  	}  	document.Close ();  	writer.Flush ();  	return mStream;  }  
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: try {  	Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  	Settings.Header.CustomContent.Align = Alignment.Right;  	Settings.Header.Paging.Show = true;  	Settings.Header.Paging.Align = Alignment.Left;  	Settings.Header.ShowSeparatorLine = true;  	Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  	Settings.Footer.CustomContent.Align = Alignment.Left;  	Settings.Footer.Paging.Show = true;  	Settings.Footer.Paging.Align = Alignment.Right;  	Settings.Footer.ShowSeparatorLine = true;  	Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  	Settings.EndContentHtml = "<h1>End content {Date}</h1>";  	var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  		HeaderHeight = 40'  		FooterHeight = 50  	};  	writer.PageEvent = headerFooterEvent;  	headerFooterEvent.SetMargins (document);  	document.Open ();  	var printParameters = parameters as PrintParameters<TItem>;  	if (printParameters != null && !printParameters.Preview) {  		writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  	}  	AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  	CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  	AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  }  catch (DocumentException) {  	throw;  	//handle pdf document exception if any  }  catch (IOException) {  	throw;  	// handle IO exception  }  catch (Exception) {  	throw;  	// handle other exception if occurs  }  
Magic Number,PowerArhitecture.Reporting,PdfReport,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\PdfReport.cs,CreateReport,The following statement contains a magic number: try {  	Settings.Header.CustomContent.Content = "Headdeerer teext {DateTime}";  	Settings.Header.CustomContent.Align = Alignment.Right;  	Settings.Header.Paging.Show = true;  	Settings.Header.Paging.Align = Alignment.Left;  	Settings.Header.ShowSeparatorLine = true;  	Settings.Footer.CustomContent.Content = "Foooteeer teext {DateTime}";  	Settings.Footer.CustomContent.Align = Alignment.Left;  	Settings.Footer.Paging.Show = true;  	Settings.Footer.Paging.Align = Alignment.Right;  	Settings.Footer.ShowSeparatorLine = true;  	Settings.StartContentHtml = "<h1>Start content {DateTime}</h1>";  	Settings.EndContentHtml = "<h1>End content {Date}</h1>";  	var headerFooterEvent = new PdfHeaderFooterPageEvent<TItem> (parameters' Settings' BaseFont) {  		HeaderHeight = 40'  		FooterHeight = 50  	};  	writer.PageEvent = headerFooterEvent;  	headerFooterEvent.SetMargins (document);  	document.Open ();  	var printParameters = parameters as PrintParameters<TItem>;  	if (printParameters != null && !printParameters.Preview) {  		writer.AddJavaScript ("var pp = this.getPrintParams();this.print(pp);");  	}  	AddHtmlContent (document' writer' parameters' Settings.StartContentHtml);  	CreateAndFillTable (document' parameters.Items' parameters.ItemProperties);  	AddHtmlContent (document' writer' parameters' Settings.EndContentHtml);  }  catch (DocumentException) {  	throw;  	//handle pdf document exception if any  }  catch (IOException) {  	throw;  	// handle IO exception  }  catch (Exception) {  	throw;  	// handle other exception if occurs  }  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,OnOpenDocument,The following statement contains a magic number: _total = writer.DirectContent.CreateTemplate (15' ReportSettings.FontSize);  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,OnEndPage,The following statement contains a magic number: CreateHeaderFooter (writer' document' true' ReportSettings.Header' 15);  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: widths.AddRange (contentAlign.Select (width => 20));  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: if (!widths.Any ()) {  	if (!ReportSettings.ShowWatermark)  		return;  	widths.Add (20);  	if (!header)  		margin -= 20;  	watermarkBorder = true;  }  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: if (!widths.Any ()) {  	if (!ReportSettings.ShowWatermark)  		return;  	widths.Add (20);  	if (!header)  		margin -= 20;  	watermarkBorder = true;  }  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: widths.Add (20);  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: if (!header)  	margin -= 20;  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: margin -= 20;  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: if (contentAlign.ContainsKey (Alignment.Center) && widths.Count % 2 == 0)  	widths.Add (20);  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: if (contentAlign.ContainsKey (Alignment.Center) && widths.Count % 2 == 0)  	widths.Add (20);  
Magic Number,PowerArhitecture.Reporting.TextSharp,PdfHeaderFooterPageEvent,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\TextSharp\PdfHeaderFooterPageEvent.cs,CreateHeaderFooter,The following statement contains a magic number: widths.Add (20);  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetCellRowIndex,The following statement contains a magic number: return int.Parse (match.Groups [2].Value) - 1;  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetExcelColumnNumber,The following statement contains a magic number: foreach (var t in characters) {  	sum *= 26;  	sum += (t - 'A' + 1);  }  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetExcelColumnNumber,The following statement contains a magic number: sum *= 26;  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetExcelColumnName,The following statement contains a magic number: while (dividend > 0) {  	var modulo = (dividend - 1) % 26;  	columnName = Convert.ToChar (65 + modulo).ToString (CultureInfo.InvariantCulture) + columnName;  	dividend = ((dividend - modulo) / 26);  }  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetExcelColumnName,The following statement contains a magic number: while (dividend > 0) {  	var modulo = (dividend - 1) % 26;  	columnName = Convert.ToChar (65 + modulo).ToString (CultureInfo.InvariantCulture) + columnName;  	dividend = ((dividend - modulo) / 26);  }  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetExcelColumnName,The following statement contains a magic number: while (dividend > 0) {  	var modulo = (dividend - 1) % 26;  	columnName = Convert.ToChar (65 + modulo).ToString (CultureInfo.InvariantCulture) + columnName;  	dividend = ((dividend - modulo) / 26);  }  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetExcelColumnName,The following statement contains a magic number: columnName = Convert.ToChar (65 + modulo).ToString (CultureInfo.InvariantCulture) + columnName;  
Magic Number,PowerArhitecture.Reporting.Extensions,StringExtensions,C:\repos\maca88_PowerArhitecture\Source\PowerArhitecture.Reporting\Extensions\StringExtensions.cs,GetExcelColumnName,The following statement contains a magic number: dividend = ((dividend - modulo) / 26);  
