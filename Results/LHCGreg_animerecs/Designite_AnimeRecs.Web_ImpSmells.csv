Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,Cyclomatic complexity of the method is 10
Long Parameter List,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,PrecompileView,The method has 6 parameters. Parameters: viewPath' viewModel' engine' locator' renderContextFactory' preloader
Long Parameter List,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,Config,The method has 17 parameters. Parameters: animeListCacheExpiration' recServicePort' defaultRecSource' maximumRecommendersToReturn' maximumRecommendationsToReturn' defaultTargetPercentile' malApiUserAgentString' malTimeoutInMs' useLocalDbMalApi' clubMalLink' htmlBeforeBodyEnd' postgresConnectionString' specialRecSourcePorts' enableDiagnosticsDashboard' diagnosticsDashboardPassword' showErrorTraces' handleStaticContent
Long Parameter List,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,GetRecsModule,The method has 8 parameters. Parameters: config' malApiFactory' recClientFactory' dbConnectionFactory' viewFactory' viewLocator' viewEngine' renderContextFactory
Long Parameter List,AnimeRecs.Web.Modules.GetRecs,GetRecsViewModel,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsViewModel.cs,GetRecsViewModel,The method has 9 parameters. Parameters: results' userId' userName' userLookup' userAnimeList' maximumRecommendationsToReturn' maximumRecommendersToReturn' animeWithheld' dbConnectionFactory
Long Parameter List,AnimeRecs.Web.Modules.Home,HomeViewModel,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\Home\HomeViewModel.cs,HomeViewModel,The method has 5 parameters. Parameters: algorithm' algorithmAvailable' targetScoreNeeded' displayDetailedResults' debugModeOn
Long Identifier,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,Config,The length of the parameter maximumRecommendationsToReturn is 30.
Long Identifier,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the parameter specialRecSourcePortConfigKeyRegex is 34.
Long Identifier,AnimeRecs.Web.Modules.GetRecs,GetRecsViewModel,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsViewModel.cs,GetRecsViewModel,The length of the parameter maximumRecommendationsToReturn is 30.
Long Statement,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,ConfigureApplicationContainer,The length of the statement  "                IAnimeRecsClientFactory recServiceClientFactory = new RecClientFactory(AppGlobals.Config.RecServicePort' AppGlobals.Config.SpecialRecSourcePorts); " is 146.
Long Statement,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,ConfigureApplicationContainer,The length of the statement  "                IAnimeRecsDbConnectionFactory dbConnectionFactory = new AnimeRecsDbConnectionFactory(AppGlobals.Config.PostgresConnectionString); " is 129.
Long Statement,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,ConfigureApplicationContainer,The length of the statement  "                CachingMyAnimeListApi cachingApi = new CachingMyAnimeListApi(api' AppGlobals.Config.AnimeListCacheExpiration' ownApi: true); " is 124.
Long Statement,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,KickOffViewPrecompiling,The length of the statement  "                ThreadPool.QueueUserWorkItem(x => PrecompileView(viewPath' viewModel' engine' locator' renderContextFactory' preloader)); " is 121.
Long Statement,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the statement  "            int malCacheExpirationSeconds = int.Parse(ConfigurationManager.AppSettings["AnimeListCacheExpiration.Seconds"]' CultureInfo.InvariantCulture); " is 142.
Long Statement,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the statement  "            int malCacheExpirationMinutes = int.Parse(ConfigurationManager.AppSettings["AnimeListCacheExpiration.Minutes"]' CultureInfo.InvariantCulture); " is 142.
Long Statement,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the statement  "            TimeSpan malCacheExpiration = new TimeSpan(hours: 0' minutes: malCacheExpirationMinutes' seconds: malCacheExpirationSeconds); " is 125.
Long Statement,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the statement  "            int maxRecommendersToReturn = int.Parse(ConfigurationManager.AppSettings["MaximumRecommendersToReturn"]' CultureInfo.InvariantCulture); " is 135.
Long Statement,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the statement  "            int maxRecommendationsToReturn = int.Parse(ConfigurationManager.AppSettings["MaximumRecommendationsToReturn"]' CultureInfo.InvariantCulture); " is 141.
Long Statement,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the statement  "            decimal defaultTargetPercentile = decimal.Parse(ConfigurationManager.AppSettings["DefaultTargetPercentile"]' CultureInfo.InvariantCulture) / 100; " is 145.
Long Statement,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The length of the statement  "            if (ConfigurationManager.AppSettings["MalApi.API"] != null && ConfigurationManager.AppSettings["MalApi.API"].Equals("DB")) " is 122.
Long Statement,AnimeRecs.Web,ErrorHandler,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\ErrorHandler.cs,HandleException,The length of the statement  "                .WithMediaRangeModel("application/json"' new AjaxError(AjaxError.InternalError' "Sorry' something went wrong when processing your request.")) " is 141.
Long Statement,AnimeRecs.Web,ModelBindingHelpers,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\ModelBindingHelpers.cs,ConstructErrorString,The length of the statement  "            foreach (var x in errors.SelectMany(p => p.Value.Select(e => new { Property = p.Key' Properties = e.MemberNames.ToList()' Error = e.ErrorMessage }))) " is 149.
Long Statement,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,DoGetRecs,The length of the statement  "                animeList[listEntry.AnimeInfo.AnimeId] = new AnimeRecs.RecEngine.MAL.MalListEntry((byte?)listEntry.Score' listEntry.Status' (short)listEntry.NumEpisodesWatched); " is 161.
Long Statement,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,GetRecommendations,The length of the statement  "                        Logging.Log.InfoFormat("Could not service recommendation request for {0}. The rec service is currently undergoing maintenance."' " is 128.
Long Statement,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,GetRecommendations,The length of the statement  "                        AjaxError error = new AjaxError(AjaxError.InternalError' "The site is currently undergoing scheduled maintenance. Check back in a few minutes."); " is 145.
Long Statement,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,GetResultHtml,The length of the statement  "            if (viewModel.Results.RecommendationType.Equals(AnimeRecs.RecService.DTO.RecommendationTypes.AnimeRecs) && input.DisplayDetailedResults) " is 136.
Long Statement,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,GetResultHtml,The length of the statement  "            ViewLocationContext locationContext = new ViewLocationContext() { Context = this.Context' ModulePath = this.ModulePath' ModuleName = "GetRecs" }; " is 145.
Long Statement,AnimeRecs.Web.Modules.Home,HomeModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\Home\HomeModule.cs,HomePage,The length of the statement  "            //    foreach (var x in ModelValidationResult.Errors.SelectMany(p => p.Value.Select(e => new { Property = p.Key' Properties = e.MemberNames.ToList()' Error = e.ErrorMessage }))) " is 177.
Long Statement,AnimeRecs.Web.Modules.Home,HomeModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\Home\HomeModule.cs,HomePage,The length of the statement  "            //        errors.AppendLine(string.Format("Property = {0}' Properties = {1}' Error = {2}"' x.Property' string.Join("' "' x.Properties)' x.Error)); " is 146.
Long Statement,AnimeRecs.Web.Modules.Home,HomeModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\Home\HomeModule.cs,DoHomePage,The length of the statement  "            if (AnimeRecs.RecService.DTO.RecSourceTypes.AnimeRecs.Equals(recSourceType' StringComparison.OrdinalIgnoreCase) && displayDetailedResults) " is 138.
Complex Conditional,AnimeRecs.Web,HtmlHelpers,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\HtmlHelpers.cs,GetRecommendationType,The conditional expression  "userAnimeList.ContainsKey(rec.MalAnimeId) &&                      (userAnimeList[rec.MalAnimeId].Status == CompletionStatus.Watching                      || userAnimeList[rec.MalAnimeId].Status == CompletionStatus.PlanToWatch                      || userAnimeList[rec.MalAnimeId].Status == CompletionStatus.OnHold)"  is complex.
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new List<IRecommendation>()'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new List<IRecommendation>()'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new List<IRecommendation>()'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new List<IRecommendation>()'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyAnimeRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new AnimeRecs.RecEngine.MAL.MalAnimeRecsResults(                          recommendations: new List<AnimeRecsRecommendation>()'                          recommenders: new List<RecEngine.MAL.MalAnimeRecsRecommenderUser>()'                          targetScoreUsed: 8m                      )'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyAnimeRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new AnimeRecs.RecEngine.MAL.MalAnimeRecsResults(                          recommendations: new List<AnimeRecsRecommendation>()'                          recommenders: new List<RecEngine.MAL.MalAnimeRecsRecommenderUser>()'                          targetScoreUsed: 8m                      )'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyAnimeRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new AnimeRecs.RecEngine.MAL.MalAnimeRecsResults(                          recommendations: new List<AnimeRecsRecommendation>()'                          recommenders: new List<RecEngine.MAL.MalAnimeRecsRecommenderUser>()'                          targetScoreUsed: 8m                      )'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,BootStrapper,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\BootStrapper.cs,GetDummyAnimeRecsViewModel,The following statement contains a magic number: return new GetRecsViewModel(                  results: new RecService.ClientLib.MalRecResults<IEnumerable<RecEngine.IRecommendation>>(                      results: new AnimeRecs.RecEngine.MAL.MalAnimeRecsResults(                          recommendations: new List<AnimeRecsRecommendation>()'                          recommenders: new List<RecEngine.MAL.MalAnimeRecsRecommenderUser>()'                          targetScoreUsed: 8m                      )'                      animeInfo: new Dictionary<int' RecEngine.MAL.MalAnime>()'                      recommendationType: "blah"                  )'                  userId: 9'                  userName: "blah"'                  userLookup: new MalUserLookupResults(9' "blah"' new List<MyAnimeListEntry>())'                  userAnimeList: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  maximumRecommendationsToReturn: 100'                  maximumRecommendersToReturn: 5'                  animeWithheld: new Dictionary<int' RecEngine.MAL.MalListEntry>()'                  dbConnectionFactory: null              );
Magic Number,AnimeRecs.Web,Config,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Config.cs,FromAppConfig,The following statement contains a magic number: decimal defaultTargetPercentile = decimal.Parse(ConfigurationManager.AppSettings["DefaultTargetPercentile"]' CultureInfo.InvariantCulture) / 100;
Magic Number,AnimeRecs.Web,HtmlHelpers,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\HtmlHelpers.cs,AttributeString,The following statement contains a magic number: StringBuilder encodedString = new StringBuilder(text.Length + 2);
Magic Number,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,WithholdAnime,The following statement contains a magic number: if (input.PercentOfAnimeToWithhold > 0m)              {                  int numAnimesToWithhold = (int)(animeList.Count * (input.PercentOfAnimeToWithhold / 100));                  Random rng = new Random();                  List<int> animeIdsToWithhold = animeList.Keys.OrderBy(animeId => rng.Next()).Take(numAnimesToWithhold).ToList();                  foreach (int animeIdToWithhold in animeIdsToWithhold)                  {                      animeWithheld[animeIdToWithhold] = animeList[animeIdToWithhold];                      animeList.Remove(animeIdToWithhold);                  }              }
Magic Number,AnimeRecs.Web.Modules.GetRecs,GetRecsModule,C:\repos\LHCGreg_animerecs\AnimeRecs.Web\Modules\GetRecs\GetRecsModule.cs,GetRecommendations,The following statement contains a magic number: if (animeWithheld.Count > 0)              {                  // Get rating prediction information about all anime if in debug mode and withholding anime.                  // For all currently implemented algorithms' this does not cause a performance problem.                  numRecsToTryToGet = 100000;              }
