Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AnimeRecs.RecEngine.MAL,FilterHelpers,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\FilterHelpers.cs,RemoveItemsWithFewUsers,Cyclomatic complexity of the method is 8
Long Parameter List,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecommenderUser,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,MalAnimeRecsRecommenderUser,The method has 9 parameters. Parameters: userId' username' recsLiked' recsNotLiked' recsInconclusive' recsNotInCommon' compatibility' compatibilityLowEndpoint' compatibilityHighEndpoint
Long Parameter List,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSourceWithConstantPercentTarget<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,MalMyMediaLiteItemRecommenderRecSourceWithConstantPercentTarget,The method has 5 parameters. Parameters: recommender' fractionConsideredRecommended' minEpisodesToClassifyIncomplete' minUsersToCountAnime' targetFraction
Long Identifier,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,MalAnimeRecsRecSource,The length of the parameter minEpisodesToClassifyIncomplete is 31.
Long Identifier,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,,The length of the parameter m_minEpisodesToClassifyIncomplete is 33.
Long Identifier,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSourceWithConstantPercentTarget,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,MalAnimeRecsRecSourceWithConstantPercentTarget,The length of the parameter minEpisodesToClassifyIncomplete is 31.
Long Identifier,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSourceWithConstantAbsoluteTarget,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,MalAnimeRecsRecSourceWithConstantAbsoluteTarget,The length of the parameter minEpisodesToClassifyIncomplete is 31.
Long Identifier,AnimeRecs.RecEngine.MAL,MalMinimumScoreRatingClassifier,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMinimumScoreRatingClassifier.cs,MalMinimumScoreRatingClassifier,The length of the parameter minEpisodesToClassifyIncomplete is 31.
Long Identifier,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,MalMyMediaLiteItemRecommenderRecSource,The length of the parameter minEpisodesToClassifyIncomplete is 31.
Long Identifier,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,,The length of the parameter m_minEpisodesToClassifyIncomplete is 33.
Long Identifier,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSourceWithConstantPercentTarget<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,MalMyMediaLiteItemRecommenderRecSourceWithConstantPercentTarget,The length of the parameter minEpisodesToClassifyIncomplete is 31.
Long Identifier,AnimeRecs.RecEngine.MAL,MalMyMediaLiteRatingPredictionRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteRatingPredictionRecSource.cs,,The length of the parameter m_minEpisodesToCountIncomplete is 30.
Long Identifier,AnimeRecs.RecEngine.MAL,MalPercentageRatingClassifier,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalPercentageRatingClassifier.cs,MalPercentageRatingClassifier,The length of the parameter minEpisodesToClassifyIncomplete is 31.
Long Identifier,AnimeRecs.RecEngine.MAL,MalPercentageRatingClassifier,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalPercentageRatingClassifier.cs,Classify,The length of the parameter animesEligibleForPercentageClassification is 41.
Long Identifier,AnimeRecs.RecEngine.MAL,MalUserListEntries,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalUserListEntries.cs,AsBasicInput,The length of the parameter additionalOkToRecommendPredicate is 32.
Long Identifier,AnimeRecs.RecEngine.MAL,MalUserListEntries,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalUserListEntries.cs,AsPositiveFeedback,The length of the parameter additionalOkToRecommendPredicate is 32.
Long Identifier,AnimeRecs.RecEngine.MAL,MalUserListEntries,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalUserListEntries.cs,DivideClassifiedForInputAndEvaluation,The length of the parameter fractionToSetAsideForEvaluation is 31.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,FilterOutSpecialsAndTrim,The length of the statement  "                List<ReadOnlyMalListEntryDictionary.ListEntryAndAnimeId> filteredEntryList = new List<ReadOnlyMalListEntryDictionary.ListEntryAndAnimeId>(); " is 140.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,FilterOutSpecialsAndTrim,The length of the statement  "                        filteredEntryList.Add(new ReadOnlyMalListEntryDictionary.ListEntryAndAnimeId(animeId' trainingData.Users[userId].Entries[animeId])); " is 132.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,FilterOutSpecialsAndTrim,The length of the statement  "                MalUserListEntries filteredUser = new MalUserListEntries(filteredEntries' trainingData.Users[userId].AnimesEligibleForRecommendation' " is 133.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "                MalPercentageRatingClassifier inputClassifier = new MalPercentageRatingClassifier(inputForUser.TargetFraction.Value' m_minEpisodesToClassifyIncomplete); " is 152.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "                MalMinimumScoreRatingClassifier inputClassifier = new MalMinimumScoreRatingClassifier(inputForUser.TargetScore.Value' m_minEpisodesToClassifyIncomplete); " is 153.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "                MalPercentageRatingClassifier inputClassifier = new MalPercentageRatingClassifier(inputForUser.TargetFraction.Value' m_minEpisodesToClassifyIncomplete); " is 152.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "                MalMinimumScoreRatingClassifier inputClassifier = new MalMinimumScoreRatingClassifier(inputForUser.TargetScore.Value' m_minEpisodesToClassifyIncomplete); " is 153.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,ToString,The length of the statement  "            return string.Format("AnimeRecs NumRecommendersToUse={0} FractionConsideredRecommended={1} MinEpisodesToClassifyIncomplete={2}"' " is 128.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSourceWithConstantPercentTarget,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "            return ((ITrainableRecSource<MalTrainingData' MalAnimeRecsInput' AnimeRecsResults' AnimeRecsRecommendation>)m_underlyingRecSource) " is 130.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSourceWithConstantPercentTarget,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "            return m_underlyingRecSource.GetRecommendations(new MalAnimeRecsInput(inputForUser' m_targetFraction)' numRecommendationsToTryToGet); " is 133.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSourceWithConstantAbsoluteTarget,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "            return ((ITrainableRecSource<MalTrainingData' MalAnimeRecsInput' AnimeRecsResults' AnimeRecsRecommendation>)m_underlyingRecSource) " is 130.
Long Statement,AnimeRecs.RecEngine.MAL,MalAnimeRecsRecSourceWithConstantAbsoluteTarget,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "            return m_underlyingRecSource.GetRecommendations(new MalAnimeRecsInput(inputForUser' m_targetScore)' numRecommendationsToTryToGet); " is 130.
Long Statement,AnimeRecs.RecEngine.MAL,MalAverageScoreRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalAverageScoreRecSource.cs,Train,The length of the statement  "            IBasicTrainingData<IBasicInputForUser> filteredTrainingData = FilterHelpers.RemoveItemsWithFewUsers(basicTrainingData' MinUsersToCountAnime); " is 141.
Long Statement,AnimeRecs.RecEngine.MAL,MalMinimumScoreRatingClassifier,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMinimumScoreRatingClassifier.cs,ToString,The length of the statement  "            return string.Format("MinimumGoodScore = {0}' MinEpisodesToClassifyIncomplete = {1}"' MinimumGoodScore' MinEpisodesToClassifyIncomplete); " is 137.
Long Statement,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,Train,The length of the statement  "            // Do not filter out anime with few users at this point. Let the MyMediaLite recommender possibly make use of that data. " is 120.
Long Statement,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,GetRecommendations,The length of the statement  "            additionalOkToRecommendPredicate: (animeId) => m_userCountByAnime.ContainsKey(animeId) && m_userCountByAnime[animeId] >= m_minUsersToCountAnime); " is 145.
Long Statement,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,GetRecommendations,The length of the statement  "            IEnumerable<RatingPredictionRecommendation> recs = m_recommender.GetRecommendations(basicFeedback' numRecommendationsToTryToGet); " is 129.
Long Statement,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,ToString,The length of the statement  "            return string.Format("{0} MinEpisodesToClassifyIncomplete = {1}' FractionConsideredRecommended = {2}' MinUsersToCountAnime = {3}"' " is 130.
Long Statement,AnimeRecs.RecEngine.MAL,MalMyMediaLiteRatingPredictionRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteRatingPredictionRecSource.cs,Train,The length of the statement  "            // Do not filter out anime with few users at this point. Let the MyMediaLite recommender possibly make use of that data. " is 120.
Long Statement,AnimeRecs.RecEngine.MAL,MalMyMediaLiteRatingPredictionRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteRatingPredictionRecSource.cs,GetRecommendations,The length of the statement  "                additionalOkToRecommendPredicate: (animeId) => m_userCountByAnime.ContainsKey(animeId) && m_userCountByAnime[animeId] >= m_minUsersToCountAnime " is 143.
Long Statement,AnimeRecs.RecEngine.MAL,MalPercentageRatingClassifier,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalPercentageRatingClassifier.cs,Classify,The length of the statement  "            List<KeyValuePair<int' MalListEntry>> animesEligibleForPercentageClassification = new List<KeyValuePair<int' MalListEntry>>(); " is 126.
Long Statement,AnimeRecs.RecEngine.MAL,MalPercentageRatingClassifier,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalPercentageRatingClassifier.cs,Classify,The length of the statement  "                (animeIdAndEntry1' animeIdAndEntry2) => animeIdAndEntry1.Value.Rating.Value.CompareTo(animeIdAndEntry2.Value.Rating.Value)); " is 124.
Long Statement,AnimeRecs.RecEngine.MAL,MalPercentageRatingClassifier,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalPercentageRatingClassifier.cs,ToString,The length of the statement  "            return string.Format("GoodFraction = {0:P}' MinEpisodesToClassifyIncomplete = {1}"' GoodFraction' MinEpisodesToClassifyIncomplete); " is 131.
Long Statement,AnimeRecs.RecEngine.MAL,MalUserListEntries,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalUserListEntries.cs,AnimeListContainsPrerequisitesFor,The length of the statement  "                if (!userAnimeList.Entries.ContainsKey(prereqId) || userAnimeList.Entries[prereqId].Status != CompletionStatus.Completed) " is 121.
Long Statement,AnimeRecs.RecEngine.MAL,MalUserListEntries,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalUserListEntries.cs,DivideClassifiedForInputAndEvaluation,The length of the statement  "            // Recommender could potentially use someone's "plan to watch" list to infer information about the user's taste...or something. " is 127.
Complex Conditional,AnimeRecs.RecEngine.MAL,MalUserListEntries,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalUserListEntries.cs,AsBasicInput,The conditional expression  "entry.Rating != null                      && ((entry.Status == CompletionStatus.Completed || entry.NumEpisodesWatched >= minEpisodesWatchedToCount)                      || (includeDropped && entry.Status == CompletionStatus.Dropped))"  is complex.
Magic Number,AnimeRecs.RecEngine.MAL,MalMyMediaLiteItemRecommenderRecSource<TRecommender>,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\MalMyMediaLiteItemRecommenderRecSource.cs,GetRecommendations,The following statement contains a magic number: if (inputForUser.TargetFraction != null)              {                  targetScoreUsed = basicFeedback.Items.Min(itemId => inputForUser.AnimeList.Entries[itemId].Rating ?? 10);              }              else              {                  targetScoreUsed = inputForUser.TargetScore.Value;              }
Magic Number,AnimeRecs.RecEngine.MAL,ReadOnlyMalListEntryDictionary,C:\repos\LHCGreg_animerecs\AnimeRecs.RecEngine.MAL\ReadOnlyMalListEntryDictionary.cs,GetIndexOfAnimeId,The following statement contains a magic number: while (lowBound <= highBound)              {                  int guessId = (lowBound + highBound) / 2;                    if (m_entries[guessId].AnimeId == animeId)                  {                      // Found it!                      return guessId;                  }                  else if (m_entries[guessId].AnimeId > animeId)                  {                      // Guessed too high                      highBound = guessId - 1;                  }                  else                  {                      // Guessed too low                      lowBound = guessId + 1;                  }              }
