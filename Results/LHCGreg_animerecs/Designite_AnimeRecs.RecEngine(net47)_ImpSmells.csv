Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AnimeRecs.RecEngine,AnimeRecsRecSource<TUnderlyingTrainingData;TTrainingDataUserRatings;TInput>,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\AnimeRecsRecSource.cs,GetRecommendations,Cyclomatic complexity of the method is 12
Complex Method,AnimeRecs.RecEngine,RecUtils,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\RecUtils.cs,SplitByPercentage,Cyclomatic complexity of the method is 9
Long Parameter List,AnimeRecs.RecEngine,AnimeRecsRecommenderUser,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\AnimeRecsRecSource.cs,AnimeRecsRecommenderUser,The method has 5 parameters. Parameters: userId' recsLiked' recsNotLiked' recsInconclusive' recsNotInCommon
Long Parameter List,AnimeRecs.RecEngine.Evaluation,TopNEvaluator,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\Evaluation\TopNEvaluator.cs,Evaluate,The method has 5 parameters. Parameters: recSource' users' goodBadClassifier' inputDivisionFunc' numRecsToTryToGet
Long Parameter List,AnimeRecs.RecEngine.Evaluation,TopNEvaluator,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\Evaluation\TopNEvaluator.cs,GetSingleUserEvaluationResults,The method has 5 parameters. Parameters: recSource' user' goodBadClassifier' inputDivisionFunc' numRecsToTryToGet
Long Identifier,AnimeRecs.RecEngine,AnimeRecsInput<TUnderlyingInput>,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\AnimeRecsRecSource.cs,AnimeRecsInput,The length of the parameter orderingGivenRecommenderAndItemIds is 34.
Long Identifier,AnimeRecs.RecEngine,RecUtils,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\RecUtils.cs,SplitByPercentage,The length of the parameter differenceFromTargetWithCandidate is 33.
Long Identifier,AnimeRecs.RecEngine,RecUtils,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\RecUtils.cs,SplitByPercentage,The length of the parameter lastNumItemsTakenWithCandidate is 30.
Long Identifier,AnimeRecs.RecEngine,RecUtils,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\RecUtils.cs,SplitByPercentage,The length of the parameter lastDifferenceFromTargetWithCandidate is 37.
Long Identifier,AnimeRecs.RecEngine,RecUtils,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\RecUtils.cs,SplitByPercentage,The length of the parameter lastDifferenceFromTargetWithBest is 32.
Long Identifier,AnimeRecs.RecEngine.Evaluation,TopNEvaluator,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\Evaluation\TopNEvaluator.cs,,The length of the parameter m_fractionOfInputToSetAsideForEvaluation is 40.
Long Statement,AnimeRecs.RecEngine,AnimeRecsRecSource<TUnderlyingTrainingData;TTrainingDataUserRatings;TInput>,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\AnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "            recommendersWithCompatibility.Sort((x' y) => y.CompatibilityLowEndpoint.GetValueOrDefault().CompareTo(x.CompatibilityLowEndpoint.GetValueOrDefault())); " is 151.
Long Statement,AnimeRecs.RecEngine,AnimeRecsRecSource<TUnderlyingTrainingData;TTrainingDataUserRatings;TInput>,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\AnimeRecsRecSource.cs,GetRecommendations,The length of the statement  "                    itemIdsRecommendedByThisUser = staticRecommender.Recommendations.OrderByDescending((itemId) => new Tuple<int' int>(recommender.UserId' itemId)' input.OrderingGivenRecommenderAndItemIdsComparable).ToList(); " is 205.
Long Statement,AnimeRecs.RecEngine,PercentageRatingClassifier<TInput>,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\PercentageRatingClassifier.cs,Classify,The length of the statement  "            PercentageSplit<int> divided = RecUtils.SplitByPercentage(itemIds' GoodPercentage' (x' y) => allRatings.Ratings[x].CompareTo(allRatings.Ratings[y])); " is 149.
Long Statement,AnimeRecs.RecEngine.Utils,FilteredDictionaryKeyCollection,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\Utils\FilteredDictionary.cs,GetEnumerator,The length of the statement  "                return m_filteredDict.m_backingDictionary.Keys.Where(key => !m_filteredDict.m_invalidKeys.Contains(key)).GetEnumerator(); " is 121.
Long Statement,AnimeRecs.RecEngine.Utils,FilteredDictionaryValueCollection,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\Utils\FilteredDictionary.cs,Contains,The length of the statement  "                return m_filteredDict.Any(kvPair => !m_filteredDict.m_invalidKeys.Contains(kvPair.Key) && object.Equals(kvPair.Value' item)); " is 125.
Magic Number,AnimeRecs.RecEngine,ConfidenceInterval,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\ConfidenceInterval.cs,Get95PercentConfidenceInterval,The following statement contains a magic number: return GetConfidenceInterval(p' n' 1.96);
Magic Number,AnimeRecs.RecEngine,ConfidenceInterval,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\ConfidenceInterval.cs,GetConfidenceInterval,The following statement contains a magic number: double lowerLimit = (p + ((zAlphaOver2 * zAlphaOver2) / (2 * n)) - (zAlphaOver2 *                  Math.Sqrt(((p * q) / n) + ((zAlphaOver2 * zAlphaOver2) / (4 * n * n)))))                    /                    (1 + ((zAlphaOver2 * zAlphaOver2) / n));
Magic Number,AnimeRecs.RecEngine,ConfidenceInterval,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\ConfidenceInterval.cs,GetConfidenceInterval,The following statement contains a magic number: double lowerLimit = (p + ((zAlphaOver2 * zAlphaOver2) / (2 * n)) - (zAlphaOver2 *                  Math.Sqrt(((p * q) / n) + ((zAlphaOver2 * zAlphaOver2) / (4 * n * n)))))                    /                    (1 + ((zAlphaOver2 * zAlphaOver2) / n));
Magic Number,AnimeRecs.RecEngine,ConfidenceInterval,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\ConfidenceInterval.cs,GetConfidenceInterval,The following statement contains a magic number: double upperLimit = (p + ((zAlphaOver2 * zAlphaOver2) / (2 * n)) + (zAlphaOver2 *                  Math.Sqrt(((p * q) / n) + ((zAlphaOver2 * zAlphaOver2) / (4 * n * n)))))                    /                    (1 + ((zAlphaOver2 * zAlphaOver2) / n));
Magic Number,AnimeRecs.RecEngine,ConfidenceInterval,D:\research\architectureSmells\repos\LHCGreg_animerecs\AnimeRecs.RecEngine\ConfidenceInterval.cs,GetConfidenceInterval,The following statement contains a magic number: double upperLimit = (p + ((zAlphaOver2 * zAlphaOver2) / (2 * n)) + (zAlphaOver2 *                  Math.Sqrt(((p * q) / n) + ((zAlphaOver2 * zAlphaOver2) / (4 * n * n)))))                    /                    (1 + ((zAlphaOver2 * zAlphaOver2) / n));
