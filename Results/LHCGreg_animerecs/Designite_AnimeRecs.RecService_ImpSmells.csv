Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AnimeRecs.RecService.Registrations.RecSources,BiasedMatrixFactorizationJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\BiasedMatrixFactorizationJsonRecSource.cs,CreateRecSourceFromRequest,Cyclomatic complexity of the method is 11
Complex Method,AnimeRecs.RecService.Registrations.RecSources,BPRMFJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\BPRMFJsonRecSource.cs,CreateRecSourceFromRequest,Cyclomatic complexity of the method is 11
Complex Method,AnimeRecs.RecService.Registrations.RecSources,ItemKNNJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\ItemKNNJsonRecSource.cs,CreateRecSourceFromRequest,Cyclomatic complexity of the method is 8
Complex Method,AnimeRecs.RecService.Registrations.RecSources,SVDPlusPlusJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\SVDPlusPlusJsonRecSource.cs,CreateRecSourceFromRequest,Cyclomatic complexity of the method is 8
Long Statement,AnimeRecs.RecService,CommandLineArgs,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\CommandLineArgs.cs,GetOptionSet,The length of the statement  "                { "f|config="' "File to load configuration settings from. App.config is still used for other settings. Currently this is only used to load rec sources on startup. If not specified' no rec sources are loaded on startup."' arg => ConfigFile = arg } " is 246.
Long Statement,AnimeRecs.RecService,CommandLineArgs,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\CommandLineArgs.cs,GetProgramName,The length of the statement  "                programName = (new System.Reflection.AssemblyName(System.Reflection.Assembly.GetExecutingAssembly().FullName).Name) + ".exe"; " is 125.
Long Statement,AnimeRecs.RecService,ConnectionServicer,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\ConnectionServicer.cs,SocketSendAll,The length of the statement  "                // socketFlags parameter is currently named incorrectly in mono - see https://bugzilla.xamarin.com/show_bug.cgi?id=25169 " is 120.
Long Statement,AnimeRecs.RecService,ConnectionServicer,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\ConnectionServicer.cs,SocketSendAll,The length of the statement  "                int numSentThisTime = Client.Client.Send(bytes' /*offset:*/ numSent' /*size:*/ bytes.Length - numSent' /*socketFlags:*/ SocketFlags.None); " is 138.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,GetJsonRecSourceTypes,The length of the statement  "            Logging.Log.Debug("Searching for types that implement ITrainableJsonRecSource and have at least one [JsonRecSource] attribute."); " is 129.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,GetJsonRecSourceTypes,The length of the statement  "                    foreach (JsonRecSourceAttribute attribute in jsonRecSourceAttributes.Select(attributeObj => (JsonRecSourceAttribute)attributeObj)) " is 130.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,LoadRecSource,The length of the statement  "            Logging.Log.InfoFormat("Loading rec source with name \"{0}\"' replaceExisting={1}: {2}"' name' replaceExisting' recSource); " is 123.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,LoadRecSource,The length of the statement  "                        message: "A reload/retrain in low memory mode failed' leaving the rec service without training data or rec sources. Issue a ReloadTrainingData command to load training data' then load rec sources.")); " is 200.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,ReloadTrainingDataLowMemory,The length of the statement  "                Logging.Log.Info("Reloading training data and prerequisites and retraining rec sources. Rec sources will not be available until retraining all rec sources is complete."); " is 170.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,ReloadTrainingDataHighAvailability,The length of the statement  "                Dictionary<string' ITrainableJsonRecSource> newRecSources = new Dictionary<string' ITrainableJsonRecSource>(StringComparer.OrdinalIgnoreCase); " is 142.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,ReloadTrainingDataHighAvailability,The length of the statement  "                Dictionary<string' Func<ITrainableJsonRecSource>> newRecSourceFactories = new Dictionary<string' Func<ITrainableJsonRecSource>>(m_recSourceFactories' StringComparer.OrdinalIgnoreCase); " is 184.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,GetMalRecs,The length of the statement  "            Logging.Log.InfoFormat("Request for {0} MAL recs using rec source {1}. User has {2} anime list entries. Target score is {3}."' " is 126.
Long Statement,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,GetMalRecs,The length of the statement  "                        AnimeRecs.RecEngine.MAL.MalListEntry recEngineEntry = new RecEngine.MAL.MalListEntry(dtoEntry.Rating' dtoEntry.Status' dtoEntry.NumEpisodesWatched); " is 148.
Long Statement,AnimeRecs.RecService,ValidationExtensions,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\ValidationExtensions.cs,AssertArgumentNotNull,The length of the statement  "                throw new RecServiceErrorException(new Error(errorCode: ErrorCodes.InvalidArgument' message: string.Format("{0} was not set."' argPath))); " is 138.
Long Statement,AnimeRecs.RecService.OperationHandlers,OpHandlers,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\OperationHandlers\Common.cs,GetArgumentNotSetError,The length of the statement  "            return Response.GetErrorResponse(errorCode: ErrorCodes.InvalidArgument' message: string.Format("{0} was not set."' argPath)); " is 125.
Long Statement,AnimeRecs.RecService.OperationHandlers,OpHandlers,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\OperationHandlers\Common.cs,LoadRecSource,The length of the statement  "                // Its real type will be something like LoadRecSourceRequest<AverageScoreRecSourceParams> thanks to the custom JsonConverter. " is 125.
Long Statement,AnimeRecs.RecService.OperationHandlers,OpHandlers,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\OperationHandlers\Common.cs,LoadRecSource,The length of the statement  "                Func<ITrainableJsonRecSource> recSourceFactory = () => (ITrainableJsonRecSource)(Activator.CreateInstance(jsonRecSourceType' operation.Payload)); " is 145.
Long Statement,AnimeRecs.RecService.Registrations.RecSources,BiasedMatrixFactorizationJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\BiasedMatrixFactorizationJsonRecSource.cs,CreateRecSourceFromRequest,The length of the statement  "                underlyingRecSource.Loss = (OptimizationTarget)Enum.Parse(typeof(OptimizationTarget)' request.Params.OptimizationTarget); " is 121.
Long Statement,AnimeRecs.RecService.Registrations.RecSources,BiasedMatrixFactorizationJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\BiasedMatrixFactorizationJsonRecSource.cs,CreateRecSourceFromRequest,The length of the statement  "            MalMyMediaLiteRatingPredictionRecSource<BiasedMatrixFactorization> recSource = new MalMyMediaLiteRatingPredictionRecSource<BiasedMatrixFactorization>( " is 150.
Long Statement,AnimeRecs.RecService.Registrations.RecSources,ItemKNNJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\ItemKNNJsonRecSource.cs,CreateRecSourceFromRequest,The length of the statement  "                underlyingRecSource.Correlation = (RatingCorrelationType)Enum.Parse(typeof(RatingCorrelationType)' request.Params.Correlation); " is 127.
Long Statement,AnimeRecs.RecService.Registrations.RecSources,SVDPlusPlusJsonRecSource,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\Registrations\RecSources\SVDPlusPlusJsonRecSource.cs,CreateRecSourceFromRequest,The length of the statement  "            MalMyMediaLiteRatingPredictionRecSource<SVDPlusPlus> recSource = new MalMyMediaLiteRatingPredictionRecSource<SVDPlusPlus>( " is 122.
Magic Number,AnimeRecs.RecService,ConnectionServicer,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\ConnectionServicer.cs,ServiceConnectionCore,The following statement contains a magic number: using (NetworkStream clientStream = new NetworkStream(Client.Client' ownsSocket: false))              {                  byte[] messageLengthBytes = StreamUtil.ReadExactly(clientStream' 4);                  int messageLengthNetworkOrder = BitConverter.ToInt32(messageLengthBytes' 0);                  int messageLength = IPAddress.NetworkToHostOrder(messageLengthNetworkOrder);                  messageBytes = StreamUtil.ReadExactly(clientStream' messageLength);              }
Magic Number,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,GetRecSourceType,The following statement contains a magic number: const int lockTimeoutInMs = 3000;
Magic Number,AnimeRecs.RecService,RecServiceState,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\RecServiceState.cs,GetMalRecs,The following statement contains a magic number: const int lockTimeoutInMs = 3000;
Magic Number,AnimeRecs.RecService,TcpRecService,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\TcpRecService.cs,Start,The following statement contains a magic number: const int maxPendingConnections = 100;
Magic Number,AnimeRecs.RecService,TcpRecService,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\TcpRecService.cs,ConnectionEntryPoint,The following statement contains a magic number: using (TcpClient client = (TcpClient)clientObj)              {                  try                  {                        const int readTimeout = 3000;                      const int writeTimeout = 3000;                      client.ReceiveTimeout = readTimeout;                      client.SendTimeout = writeTimeout;                      ConnectionServicer servicer = new ConnectionServicer(client' m_state);                      servicer.ServiceConnection();                  }                  catch (Exception ex)                  {                      Logging.Log.ErrorFormat("Error servicing connection: {0}"' ex' ex.Message);                  }              }
Magic Number,AnimeRecs.RecService,TcpRecService,C:\repos\LHCGreg_animerecs\AnimeRecs.RecService\TcpRecService.cs,ConnectionEntryPoint,The following statement contains a magic number: using (TcpClient client = (TcpClient)clientObj)              {                  try                  {                        const int readTimeout = 3000;                      const int writeTimeout = 3000;                      client.ReceiveTimeout = readTimeout;                      client.SendTimeout = writeTimeout;                      ConnectionServicer servicer = new ConnectionServicer(client' m_state);                      servicer.ServiceConnection();                  }                  catch (Exception ex)                  {                      Logging.Log.ErrorFormat("Error servicing connection: {0}"' ex' ex.Message);                  }              }
