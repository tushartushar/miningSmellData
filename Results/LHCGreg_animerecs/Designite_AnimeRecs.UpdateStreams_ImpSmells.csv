Implementation smell,Namespace,Class,File,Method,Description
Long Method,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,CreateCsv,The method has 118 lines of code.
Complex Method,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,CreateCsv,Cyclomatic complexity of the method is 9
Long Parameter List,AnimeRecs.UpdateStreams,HtmlRegexAnimeStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HtmlRegexAnimeStreamInfoSource.cs,HtmlRegexAnimeStreamInfoSource,The method has 6 parameters. Parameters: url' animeRegex' html' service' animeNameContext' urlContext
Long Identifier,AnimeRecs.UpdateStreams,HuluStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HuluStreamInfoSource.cs,GetAnimeStreamInfo,The length of the parameter animationAndCartoonMovieStreams is 31.
Long Statement,AnimeRecs.UpdateStreams,AmazonStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AmazonStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "            HashSet<AnimeStreamInfo> streams = new HashSet<AnimeStreamInfo>(new ProjectionEqualityComparer<AnimeStreamInfo' string>(streamInfo => streamInfo.Url' StringComparer.OrdinalIgnoreCase)); " is 185.
Long Statement,AnimeRecs.UpdateStreams,AmazonPageStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AmazonStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "                // https://www.amazon.com/Acceleration/dp/B00GQ1HB3Q/ref=sr_1_37/141-4748842-3456620?s=instant-video&ie=UTF8&sr=1-37&refinements=p_n_ways_to_watch:12007866011%2Cp_n_subscription_id:16182082011 " is 192.
Long Statement,AnimeRecs.UpdateStreams,AmazonPageStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AmazonStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "                    throw new Exception(string.Format("Did not find /ref= in Amazon url. The URL format may have changed. The URL was: {0}"' url)); " is 127.
Long Statement,AnimeRecs.UpdateStreams,AnimeNetworkStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeNetworkStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "            HashSet<AnimeStreamInfo> streamsFromAllPages = new HashSet<AnimeStreamInfo>(new ProjectionEqualityComparer<AnimeStreamInfo' string>(streamInfo => streamInfo.Url' StringComparer.OrdinalIgnoreCase)); " is 197.
Long Statement,AnimeRecs.UpdateStreams,AnimeNetworkStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeNetworkStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "                    // It can happen for no anime to begin with a letter' or for the "0" page (labeled as "#") for no anime to begin with a number or symbol. " is 137.
Long Statement,AnimeRecs.UpdateStreams,AnimeNetworkPageStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeNetworkStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "                HtmlNode animeNameTag = matchingNode.ChildNodes.Where(node => node.NodeType == HtmlNodeType.Element && node.Name == "h3").FirstOrDefault(); " is 139.
Long Statement,AnimeRecs.UpdateStreams,AnimeNetworkPageStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeNetworkStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "                    throw new Exception(string.Format("Could not extract information from {0}. The site's HTML format probably changed."' Url)); " is 124.
Long Statement,AnimeRecs.UpdateStreams,AnimeNetworkPageStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeNetworkStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "                HtmlNode animeLinkTag = matchingNode.ChildNodes.Where(node => node.NodeType == HtmlNodeType.Element && node.Name == "a" && node.Attributes.Contains("href")).FirstOrDefault(); " is 174.
Long Statement,AnimeRecs.UpdateStreams,AnimeNetworkPageStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeNetworkStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "                    throw new Exception(string.Format("Could not extract information from {0}. The site's HTML format probably changed."' Url)); " is 124.
Long Statement,AnimeRecs.UpdateStreams,CommandLineArgs,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\CommandLineArgs.cs,GetOptionSet,The length of the statement  "                    "(optional) Path to a local saved html file of http://www.crunchyroll.com/videos/anime/alpha?group=all. Use this if Crunchyroll has Cloudfare's \"I'm under attack\" mode on where it checks your browser to try to tell if it's from a real browser or not. If that mode is on and this option is not passed' you will get \"Error logging in to crunchroll' HTTP status: Service Temporarily Unavailable\"."' " is 399.
Long Statement,AnimeRecs.UpdateStreams,CommandLineArgs,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\CommandLineArgs.cs,GetOptionSet,The length of the statement  "                { "sql"' "Generate SQL from the input csv file. All mappings in the file are expected to be completed."' argExistence => { if(argExistence != null) Op = Operation.GenerateSql; } } " is 179.
Long Statement,AnimeRecs.UpdateStreams,CommandLineArgs,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\CommandLineArgs.cs,GetProgramName,The length of the statement  "                programName = (new System.Reflection.AssemblyName(System.Reflection.Assembly.GetExecutingAssembly().FullName).Name) + ".exe"; " is 125.
Long Statement,AnimeRecs.UpdateStreams,DaisukiStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\DaisukiStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "            string url = "http://www.daisuki.net/bin/wcm/searchAnimeAPI?api=anime_list&searchOptions=&currentPath=%2Fcontent%2Fdaisuki%2Fus%2Fen"; " is 134.
Long Statement,AnimeRecs.UpdateStreams,HtmlParsingAnimeStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HtmlParsingAnimeStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "                throw new NoMatchingHtmlException(string.Format("Could not extract information from {0}. The site's HTML format probably changed."' Url)); " is 138.
Long Statement,AnimeRecs.UpdateStreams,HtmlParsingAnimeStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HtmlParsingAnimeStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "                stream = new AnimeStreamInfo(stream.AnimeName' Utils.PossiblyRelativeUrlToAbsoluteUrl(stream.Url' Url)' stream.Service); " is 120.
Long Statement,AnimeRecs.UpdateStreams,HuluStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HuluStreamInfoSource.cs,EnsureOauthToken,The length of the statement  "                    throw new Exception("w.API_DONUT not found in Hulu HTML. The page probably changed and the code for getting Hulu anime needs to be updaed."); " is 141.
Long Statement,AnimeRecs.UpdateStreams,HuluStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HuluStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "            HashSet<AnimeStreamInfo> streams = new HashSet<AnimeStreamInfo>(new ProjectionEqualityComparer<AnimeStreamInfo' string>(streamInfo => streamInfo.Url' StringComparer.OrdinalIgnoreCase)); " is 185.
Long Statement,AnimeRecs.UpdateStreams,HuluStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HuluStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "            // http://www.hulu.com/mozart/v1.h2o/shows?exclude_hulu_content=1&genre={genre}&sort=release_with_popularity&_language=en&_region=us&items_per_page=100&position=0&region=us&locale=en&language=en&access_token={oathtoken} " is 219.
Long Statement,AnimeRecs.UpdateStreams,HuluStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\HuluStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "                        "http://www.hulu.com/mozart/v1.h2o/{0}?exclude_hulu_content=1&genre={1}&sort=release_with_popularity&_language=en&_region=us&items_per_page=100&position={2}&region=us&locale=en&language=en&access_token={3}"' " is 207.
Long Statement,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,CreateCsv,The length of the statement  "            Dictionary<StreamingService' Dictionary<string' List<CsvRow>>> rowsByServiceAndAnime = new Dictionary<StreamingService' Dictionary<string' List<CsvRow>>>(); " is 156.
Long Statement,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,CreateCsv,The length of the statement  "            Dictionary<StreamingService' Dictionary<string' List<AnimeStreamInfo>>> streamsByServiceAndAnime = new Dictionary<StreamingService' Dictionary<string' List<AnimeStreamInfo>>>(); " is 177.
Long Statement,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,CreateCsv,The length of the statement  "                    if (rowsByServiceAndAnime.ContainsKey(streamInfo.Service) && rowsByServiceAndAnime[streamInfo.Service].ContainsKey(streamInfo.AnimeName)) " is 137.
Long Statement,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,CreateCsv,The length of the statement  "                            if (rowsForThisServiceAndAnime.GroupBy(row => row.Url).Count() == 1 && streamsByServiceAndAnime[streamInfo.Service][streamInfo.AnimeName].GroupBy(stream => stream.Url).Count() == 1) " is 181.
Long Statement,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,CreateCsv,The length of the statement  "                    output.Write("\r\n"); // not WriteLine() - this should be \r\n regardless of what platform this is run on per the CSV RFC " is 121.
Long Statement,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,GetStreamInfoSources,The length of the statement  "                // Crunchyroll first because it prompts for a username and password if not loading from a file. Let the user enter that first instead of in the middle. " is 151.
Long Statement,AnimeRecs.UpdateStreams,ViewsterStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\ViewsterStreamInfoSource.cs,GetAnimeSeries,The length of the statement  "            HashSet<AnimeStreamInfo> streams = new HashSet<AnimeStreamInfo>(new ProjectionEqualityComparer<AnimeStreamInfo' string>(stream => stream.Url)); " is 143.
Long Statement,AnimeRecs.UpdateStreams,VizStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\VizStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "            HtmlNode animeNameDiv = matchingNode.ChildNodes.Where(node => node.NodeType == HtmlNodeType.Element && node.Name == "div" && node.Attributes.Contains("class") && node.Attributes["class"].Value.Contains("type-center")).FirstOrDefault(); " is 235.
Long Statement,AnimeRecs.UpdateStreams,VizStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\VizStreamInfoSource.cs,GetStreamInfoFromMatch,The length of the statement  "                throw new Exception(string.Format("Could not extract information from {0}. The site's HTML format probably changed."' Url)); " is 124.
Long Statement,AnimeRecs.UpdateStreams.Crunchyroll,CrunchyrollHtmlStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Crunchyroll\CrunchyrollHtmlStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "                // <span class=""__cf_email__"" data-cfemail=""8fc6cbc0c3c2cfdcdbcadd"">[email protected]</span><script data-cfhash='f9e31' type=""text/javascript"">/* <![CDATA[ */!function(t'e'r'n'c'a'p){try{t=document.currentScript||function(){for(t=document.getElementsByTagName('script')'e=t.length;e--;)if(t[e].getAttribute('data-cfhash'))return t[e]}();if(t&&(c=t.previousSibling)){p=t.parentNode;if(a=c.getAttribute('data-cfemail')){for(e='''r='0x'+a.substr(0'2)|0'n=2;a.length-n;n+=2)e+='%'+('0'+('0x'+a.substr(n'2)^r).toString(16)).slice(-2);p.replaceChild(document.createTextNode(decodeURIComponent(e))'c)}p.removeChild(t)}}catch(u){}}()/* ]]> */</script> " is 649.
Long Statement,AnimeRecs.UpdateStreams.Crunchyroll,CrunchyrollHtmlStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Crunchyroll\CrunchyrollHtmlStreamInfoSource.cs,GetAnimeStreamInfo,The length of the statement  "                    fixedStreams[i] = new AnimeStreamInfo("THE IDOLM@STER CINDERELLA GIRLS Theater"' "http://www.crunchyroll.com/the-idolmster-cinderella-girls-theater"' StreamingService.Crunchyroll); " is 180.
Long Statement,AnimeRecs.UpdateStreams.Crunchyroll,CrunchyrollStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Crunchyroll\CrunchyrollStreamInfoSource.cs,ReadPassword,The length of the statement  "            // stdout being redirected affecting the value of Console.ReadKey is a bug (https://bugzilla.xamarin.com/show_bug.cgi?id=12552). " is 128.
Magic Number,AnimeRecs.UpdateStreams,AnimeNetworkStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeNetworkStreamInfoSource.cs,GetAnimeStreamInfo,The following statement contains a magic number: List<string> letters = new List<string>(27);
Magic Number,AnimeRecs.UpdateStreams,AnimeStreamInfo,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeStreamInfo.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 23;                  hash = hash * 17 + AnimeName.GetHashCode();                  hash = hash * 17 + Url.GetHashCode();                  hash = hash * 17 + Service.GetHashCode();                  return hash;              }
Magic Number,AnimeRecs.UpdateStreams,AnimeStreamInfo,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeStreamInfo.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 23;                  hash = hash * 17 + AnimeName.GetHashCode();                  hash = hash * 17 + Url.GetHashCode();                  hash = hash * 17 + Service.GetHashCode();                  return hash;              }
Magic Number,AnimeRecs.UpdateStreams,AnimeStreamInfo,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeStreamInfo.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 23;                  hash = hash * 17 + AnimeName.GetHashCode();                  hash = hash * 17 + Url.GetHashCode();                  hash = hash * 17 + Service.GetHashCode();                  return hash;              }
Magic Number,AnimeRecs.UpdateStreams,AnimeStreamInfo,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\AnimeStreamInfo.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hash = 23;                  hash = hash * 17 + AnimeName.GetHashCode();                  hash = hash * 17 + Url.GetHashCode();                  hash = hash * 17 + Service.GetHashCode();                  return hash;              }
Magic Number,AnimeRecs.UpdateStreams,FunimationStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\FunimationStreamInfoSource.cs,GetAnimeStreamInfo,The following statement contains a magic number: for (int page = 1; ; page++)              {                  if (page > 100)                  {                      throw new Exception("Funimation has more pages of anime than expected' something is possibly broken.");                  }                    string url = string.Format(CultureInfo.InvariantCulture' urlTemplate' page);                  HtmlParsingAnimeStreamInfoSource helperSource = new HelperStreamInfoSource(_webClient' url);                    try                  {                      ICollection<AnimeStreamInfo> streamsFromThisRequest = helperSource.GetAnimeStreamInfo();                      streams.UnionWith(streamsFromThisRequest);                  }                  catch (NoMatchingHtmlException)                  {                      if (streams.Count > 0)                      {                          break;                      }                      else                      {                          throw;                      }                  }              }
Magic Number,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,LoadCsv,The following statement contains a magic number: using (TextFieldParser csvReader = new TextFieldParser(inputFile))              {                  csvReader.TextFieldType = FieldType.Delimited;                  csvReader.HasFieldsEnclosedInQuotes = true;                  csvReader.Delimiters = new string[] { "'" };                  csvReader.TrimWhiteSpace = false;                    // Skip header line                  csvReader.ReadFields();                    while (!csvReader.EndOfData)                  {                      string[] fields = csvReader.ReadFields();                      // Skip blank lines                      if (fields.Length == 0)                      {                          continue;                      }                        string serviceString = fields[0];                      if (string.IsNullOrWhiteSpace(serviceString))                      {                          continue; // Skip blank lines                      }                        string animeName = fields[1];                      string url = fields[2];                      string malIdString = fields[3];                        StreamingService service = (StreamingService)Enum.Parse(typeof(StreamingService)' serviceString);                      MalId malId;                        // could be blank                      if (string.IsNullOrWhiteSpace(malIdString))                      {                          malId = new MalId(malAnimeId: null' specified: false);                      }                      else if (malIdString.Equals("n/a"' StringComparison.OrdinalIgnoreCase))                      {                          // n/a means the stream does not correspond to a MAL anime. Maybe it's a stream of anime reviews                          // or maybe it's something incredibly obscure.                          malId = new MalId(malAnimeId: null' specified: true);                      }                      else                      {                          int malIdInt = int.Parse(malIdString);                          malId = new MalId(malAnimeId: malIdInt' specified: true);                      }                        inputCsvRows.Add(new CsvRow(service: service' animeName: animeName' url: url' malAnimeId: malId));                  }              }
Magic Number,AnimeRecs.UpdateStreams,Program,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\Program.cs,LoadCsv,The following statement contains a magic number: using (TextFieldParser csvReader = new TextFieldParser(inputFile))              {                  csvReader.TextFieldType = FieldType.Delimited;                  csvReader.HasFieldsEnclosedInQuotes = true;                  csvReader.Delimiters = new string[] { "'" };                  csvReader.TrimWhiteSpace = false;                    // Skip header line                  csvReader.ReadFields();                    while (!csvReader.EndOfData)                  {                      string[] fields = csvReader.ReadFields();                      // Skip blank lines                      if (fields.Length == 0)                      {                          continue;                      }                        string serviceString = fields[0];                      if (string.IsNullOrWhiteSpace(serviceString))                      {                          continue; // Skip blank lines                      }                        string animeName = fields[1];                      string url = fields[2];                      string malIdString = fields[3];                        StreamingService service = (StreamingService)Enum.Parse(typeof(StreamingService)' serviceString);                      MalId malId;                        // could be blank                      if (string.IsNullOrWhiteSpace(malIdString))                      {                          malId = new MalId(malAnimeId: null' specified: false);                      }                      else if (malIdString.Equals("n/a"' StringComparison.OrdinalIgnoreCase))                      {                          // n/a means the stream does not correspond to a MAL anime. Maybe it's a stream of anime reviews                          // or maybe it's something incredibly obscure.                          malId = new MalId(malAnimeId: null' specified: true);                      }                      else                      {                          int malIdInt = int.Parse(malIdString);                          malId = new MalId(malAnimeId: malIdInt' specified: true);                      }                        inputCsvRows.Add(new CsvRow(service: service' animeName: animeName' url: url' malAnimeId: malId));                  }              }
Magic Number,AnimeRecs.UpdateStreams,ViewsterStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\ViewsterStreamInfoSource.cs,GetAPIToken,The following statement contains a magic number: request.ReadWriteTimeout = 20 * 1000;
Magic Number,AnimeRecs.UpdateStreams,ViewsterStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\ViewsterStreamInfoSource.cs,GetAPIToken,The following statement contains a magic number: request.ReadWriteTimeout = 20 * 1000;
Magic Number,AnimeRecs.UpdateStreams,ViewsterStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\ViewsterStreamInfoSource.cs,GetAPIToken,The following statement contains a magic number: request.Timeout = 20 * 1000;
Magic Number,AnimeRecs.UpdateStreams,ViewsterStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\ViewsterStreamInfoSource.cs,GetAPIToken,The following statement contains a magic number: request.Timeout = 20 * 1000;
Magic Number,AnimeRecs.UpdateStreams,ViewsterStreamInfoSource,C:\repos\LHCGreg_animerecs\AnimeRecs.UpdateStreams\ViewsterStreamInfoSource.cs,GetAnimeSeries,The following statement contains a magic number: int pageSize = 100;
