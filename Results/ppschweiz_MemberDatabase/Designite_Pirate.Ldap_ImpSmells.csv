Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,MoveInternal,Cyclomatic complexity of the method is 13
Complex Method,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,Cyclomatic complexity of the method is 8
Complex Method,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,Cyclomatic complexity of the method is 67
Long Parameter List,Pirate.Ldap,LdapEnumListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapEnumListField.cs,LdapEnumListField,The method has 5 parameters.
Long Parameter List,Pirate.Ldap,LdapEnumField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapEnumField.cs,LdapEnumField,The method has 7 parameters.
Long Parameter List,Pirate.Ldap,LdapDateTimeListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapDateTimeListField.cs,LdapDateTimeListField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapIntListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapIntListField.cs,LdapIntListField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapStringListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapStringListField.cs,LdapStringListField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapImageField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapImageField.cs,LdapImageField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapByteArrayField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapByteArrayField.cs,LdapByteArrayField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapSbyteArrayField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapSbyteArrayField.cs,LdapSbyteArrayField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapIntField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapIntField.cs,LdapIntField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapDataTimeField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapDataTimeField.cs,LdapDataTimeField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,Group,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Group.cs,CreateFields,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,LdapStringField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapStringField.cs,LdapStringField,The method has 6 parameters.
Long Parameter List,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The method has 30 parameters.
Long Parameter List,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,ComputeRight,The method has 9 parameters.
Long Parameter List,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,ComputePositions,The method has 7 parameters.
Long Parameter List,Pirate.Ldap,Section,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Section.cs,CreateFields,The method has 6 parameters.
Long Parameter List,Pirate.Ldap.Data,CertificateEntry,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\CertificateEntry.cs,CertificateEntry,The method has 6 parameters.
Long Parameter List,Pirate.Ldap.Data,EmailAddressChange,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\EmailAddressChange.cs,EmailAddressChange,The method has 5 parameters.
Long Parameter List,Pirate.Ldap.Data,Request,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\Request.cs,Request,The method has 6 parameters.
Long Statement,Pirate.Ldap,LdapDateTimeListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapDateTimeListField.cs,GetModification,The length of the statement  "		return new LdapModification (LdapModification.ADD' new LdapAttribute (Attribute' Value.Select (x => x.ToString ("yyyyMMddHHmmssZ"' CultureInfo.InvariantCulture)).ToArray ())); " is 175.
Long Statement,Pirate.Ldap,LdapDateTimeListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapDateTimeListField.cs,GetModification,The length of the statement  "		return new LdapModification (LdapModification.REPLACE' new LdapAttribute (Attribute' Value.Select (x => x.ToString ("yyyyMMddHHmmssZ"' CultureInfo.InvariantCulture)).ToArray ())); " is 179.
Long Statement,Pirate.Ldap,LdapDateTimeListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapDateTimeListField.cs,GetValue,The length of the statement  "		return new LdapAttribute (Attribute' Value.Select (x => x.ToString ("yyyyMMddHHmmssZ"' CultureInfo.InvariantCulture)).ToArray ()); " is 130.
Long Statement,Pirate.Ldap,LdapIntListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapIntListField.cs,GetModification,The length of the statement  "		return new LdapModification (LdapModification.ADD' new LdapAttribute (Attribute' Value.Select (x => x.ToString ()).ToArray ())); " is 128.
Long Statement,Pirate.Ldap,LdapIntListField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapIntListField.cs,GetModification,The length of the statement  "		return new LdapModification (LdapModification.REPLACE' new LdapAttribute (Attribute' Value.Select (x => x.ToString ()).ToArray ())); " is 132.
Long Statement,Pirate.Ldap,LdapDataTimeField,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapDataTimeField.cs,GetModification,The length of the statement  "	var oldValue = original.Value.HasValue ? original.Value.Value.ToString ("yyyyMMddHHmmssZ"' CultureInfo.InvariantCulture) : null; " is 128.
Long Statement,Pirate.Ldap,Countries,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Countries.cs,GetName,The length of the statement  "	return File.ReadAllLines (Path.Combine (path' FileName)).Where (x => x.EndsWith (code)).Select (x => GetNameFromLine (x)).FirstOrDefault (); " is 140.
Long Statement,Pirate.Ldap,DN,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\DN.cs,GetPart,The length of the statement  "	return parts.Where (p => p.StartsWith (attribute + Assignment)).Select (p => p.Substring (attribute.Length + Separator.Length)).FirstOrDefault (); " is 146.
Long Statement,Pirate.Ldap,Group,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Group.cs,CreateFields,The length of the statement  "	yield return new LdapStringField (Attributes.Group.DisplayNameGerman' () => DisplayNameGerman' x => DisplayNameGerman = x); " is 123.
Long Statement,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,SetPassword,The length of the statement  "		var modification = new LdapModification (LdapModification.ADD' new LdapAttribute (Attributes.Person.Password' passwordData)); " is 125.
Long Statement,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,SetPassword,The length of the statement  "		var modification = new LdapModification (LdapModification.REPLACE' new LdapAttribute (Attributes.Person.Password' passwordData)); " is 129.
Long Statement,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,GetNextPersonId,The length of the statement  "		var addNewValue = new LdapModification (LdapModification.ADD' new LdapAttribute (Attributes.UniqueStorage.UidNumber' (number + 1).ToString ())); " is 144.
Long Statement,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,GetNextPersonId,The length of the statement  "		var deleteOldValue = new LdapModification (LdapModification.DELETE' new LdapAttribute (Attributes.UniqueStorage.UidNumber' number.ToString ())); " is 144.
Long Statement,Pirate.Ldap,Organization,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Organization.cs,CreateFields,The length of the statement  "	yield return new LdapStringField (Attributes.Organization.DisplayNameGerman' () => DisplayNameGerman' x => DisplayNameGerman = x); " is 130.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The length of the statement  "	yield return new LdapStringListField (Attributes.Person.Mail' () => Emails' x => Emails = x.ToList ()' false' true' true); " is 122.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The length of the statement  "	yield return new LdapStringListField (Attributes.Person.AlternateMail' () => AlternateEmails' x => AlternateEmails = x.ToList ()' false' false); " is 144.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The length of the statement  "	yield return new LdapEnumField<EmployeeType> (Attributes.Person.EmployeeType' () => (int?)EmployeeType' x => EmployeeType = (EmployeeType)x' EmployeeType.LandLubber' x => x.Text ()); " is 182.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The length of the statement  "	yield return new LdapEnumField<PreferredNotificationMethod> (Attributes.Person.PreferredNotificationMethod' () => (int?)PreferredNotificationMethod' x => PreferredNotificationMethod = (PreferredNotificationMethod?)x' Pirate.Ldap.PreferredNotificationMethod.Unknown' x => x.Text ()); " is 282.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The length of the statement  "	yield return new LdapEnumField<Gender> (Attributes.Person.Gender' () => (int?)Gender' x => Gender = (Gender?)x' Pirate.Ldap.Gender.Unknown' x => x.Text ()); " is 156.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The length of the statement  "	yield return new LdapStringField (Attributes.Person.PreferredLanguage' () => PreferredLanguage' x => PreferredLanguage = x); " is 124.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The length of the statement  "	yield return new LdapDataTimeField (Attributes.Person.VotingRightUntil' () => VotingRightUntil' x => VotingRightUntil = x ?? new DateTime (1970' 1' 1)' false' true' true); " is 171.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,ComputeRight,The length of the statement  "	var rolesRight = relevantPositions.Where (p => p.Role != null).Aggregate (Right.None' (r' p) => r | GrantedRight (p.Role)); " is 123.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,ComputeRight,The length of the statement  "	var groupsRight = relevantPositions.Where (p => p.Group != null).Aggregate (Right.None' (r' p) => r | GrantedRight (p.Group)); " is 126.
Long Statement,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,ComputePositions,The length of the statement  "		var role = roles.Where (r => r.OccupantDns.Contains (DN)).Where (r => r.DN.EndsWith (group.DN)).OrderByDescending (r => r.DN.Length).FirstOrDefault (); " is 151.
Long Statement,Pirate.Ldap,Role,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Role.cs,CreateFields,The length of the statement  "	yield return new LdapStringField (Attributes.Role.DisplayNameGerman' () => DisplayNameGerman' x => DisplayNameGerman = x); " is 122.
Long Statement,Pirate.Ldap,Section,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Section.cs,CreateFields,The length of the statement  "	yield return new LdapStringField (Attributes.Section.DisplayNameGerman' () => DisplayNameGerman' x => DisplayNameGerman = x); " is 125.
Long Statement,Pirate.Ldap,States,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\States.cs,GetName,The length of the statement  "	return File.ReadAllLines (Path.Combine (path' FileName)).Where (x => x.EndsWith (code)).Select (x => GetNameFromLine (x)).FirstOrDefault (); " is 140.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,AddEmailAddressChange,The length of the statement  "		var command = new PgSqlCommand ("INSERT INTO emailaddresschange (id' username' removeaddress' addaddress' created) VALUES (@Id' @Username' @RemoveAddress' @AddAddress' @Created)"' _connection); " is 193.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetEmailAddressChange,The length of the statement  "		var command = new PgSqlCommand ("SELECT username' removeaddress' addaddress' created FROM emailaddresschange WHERE id = @Id"' _connection); " is 139.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,AddCertificateEntry,The length of the statement  "		var command = new PgSqlCommand ("INSERT INTO certificateentry (key' fingerprint' authorizationlevel' useruniqueidentifier' comment' certificatedata) VALUES (@key' @fingerprint' @authorizationlevel' @useruniqueidentifier' @comment' @certificatedata)"' _connection); " is 264.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The length of the statement  "		var command = new PgSqlCommand ("SELECT fingerprint' authorizationlevel' userUniqueIdentifier' comment' certificatedata FROM certificateentry WHERE key = @key"' _connection); " is 174.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The length of the statement  "		var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' useruniqueidentifier' comment' certificatedata FROM certificateentry"' _connection); " is 162.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The length of the statement  "				yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData); " is 121.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The length of the statement  "		var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' comment' certificatedata FROM certificateentry WHERE useruniqueidentifier = @useruniqueidentifier"' _connection); " is 191.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The length of the statement  "				yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData); " is 121.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,AuthorizeCertificateEntry,The length of the statement  "		var command = new PgSqlCommand ("UPDATE certificateentry SET authorizationlevel = @authorizationlevel WHERE key = @key"' _connection); " is 134.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetCertificateAuthorizationLevel,The length of the statement  "		var command = new PgSqlCommand ("SELECT authorizationlevel' userUniqueIdentifier FROM certificateentry WHERE fingerprint = @fingerprint"' _connection); " is 151.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,CreateRequest,The length of the statement  "		var command = new PgSqlCommand ("INSERT INTO request (action' olddn' newdn' parameter' requested) VALUES (@action' @olddn' @newdn' @parameter' @requested)"' _connection); " is 170.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The length of the statement  "		var command = new PgSqlCommand ("SELECT action' oldDn' newDn' parameter' requested FROM request WHERE id = @id"' _connection); " is 126.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The length of the statement  "		var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request WHERE olddn = @olddn"' _connection); " is 136.
Long Statement,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,SaveSearchTemplate,The length of the statement  "			var command = new PgSqlCommand ("INSERT INTO searchtemplate (name' definition) VALUES (@name' @definition)"' _connection); " is 122.
Long Statement,Pirate.Ldap.Data,Texts,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\Texts.cs,GetText,The length of the statement  "	return GetTextInternal (dataAccess' GetTextIds (item.Id' user)' item.DefaultText' GetTranslations (item' user' addtionalTranslations)); " is 135.
Virtual Method Call from Constructor,Pirate.Ldap,LdapObject,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapObject.cs,LdapObject,The constructor "LdapObject" calls a virtual method "CreateFields".
Virtual Method Call from Constructor,Pirate.Ldap,LdapObject,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapObject.cs,LdapObject,The constructor "LdapObject" calls a virtual method "CreateFields".
Virtual Method Call from Constructor,Pirate.Ldap,LdapObject,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapObject.cs,LdapObject,The constructor "LdapObject" calls a virtual method "CreateFields".
Empty Catch Block,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,Search,The method has an empty catch block.
Empty Catch Block,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,MaxValue,The method has an empty catch block.
Empty Catch Block,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,GetNextPersonId,The method has an empty catch block.
Empty Catch Block,Pirate.Ldap,LdapExtensions,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\LdapExtensions.cs,Count,The method has an empty catch block.
Magic Number,Pirate.Ldap,Countries,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Countries.cs,GetList,The following statement contains a magic number: foreach (var line in File.ReadAllLines (Path.Combine (path' FileName))) {  	yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  }  
Magic Number,Pirate.Ldap,Countries,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Countries.cs,GetList,The following statement contains a magic number: foreach (var line in File.ReadAllLines (Path.Combine (path' FileName))) {  	yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  }  
Magic Number,Pirate.Ldap,Countries,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Countries.cs,GetList,The following statement contains a magic number: yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  
Magic Number,Pirate.Ldap,Countries,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Countries.cs,GetList,The following statement contains a magic number: yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,CreateFields,The following statement contains a magic number: yield return new LdapDataTimeField (Attributes.Person.VotingRightUntil' () => VotingRightUntil' x => VotingRightUntil = x ?? new DateTime (1970' 1' 1)' false' true' true);  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Association == null) {  	orders.Add ("999999");  }  else if (position.Association.Ordering >= 0) {  	orders.Add (position.Association.Ordering.ToString ().PadLeft (6' '0'));  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Association.Ordering >= 0) {  	orders.Add (position.Association.Ordering.ToString ().PadLeft (6' '0'));  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: orders.Add (position.Association.Ordering.ToString ().PadLeft (6' '0'));  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group == null) {  	orders.Add ("999999");  }  else if (position.Group.Ordering >= 0) {  	if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  		orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  	}  	else {  		orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  	}  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group == null) {  	orders.Add ("999999");  }  else if (position.Group.Ordering >= 0) {  	if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  		orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  	}  	else {  		orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  	}  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group == null) {  	orders.Add ("999999");  }  else if (position.Group.Ordering >= 0) {  	if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  		orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  	}  	else {  		orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  	}  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group.Ordering >= 0) {  	if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  		orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  	}  	else {  		orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  	}  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group.Ordering >= 0) {  	if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  		orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  	}  	else {  		orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  	}  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group.Ordering >= 0) {  	if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  		orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  	}  	else {  		orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  	}  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  	orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  }  else {  	orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  	orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  }  else {  	orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Group.DN.ToLowerInvariant ().Contains ("workgroup")) {  	orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  }  else {  	orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: orders.Add ((position.Group.Ordering + 900000).ToString ().PadLeft (6' '0'));  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: orders.Add (position.Group.Ordering.ToString ().PadLeft (6' '0'));  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Role == null) {  	orders.Add ("999999");  }  else if (position.Role.Ordering >= 0) {  	orders.Add (position.Role.Ordering.ToString ().PadLeft (6' '0'));  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: if (position.Role.Ordering >= 0) {  	orders.Add (position.Role.Ordering.ToString ().PadLeft (6' '0'));  }  
Magic Number,Pirate.Ldap,Person,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Person.cs,Order,The following statement contains a magic number: orders.Add (position.Role.Ordering.ToString ().PadLeft (6' '0'));  
Magic Number,Pirate.Ldap,States,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\States.cs,GetList,The following statement contains a magic number: foreach (var line in File.ReadAllLines (Path.Combine (path' FileName))) {  	yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  }  
Magic Number,Pirate.Ldap,States,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\States.cs,GetList,The following statement contains a magic number: foreach (var line in File.ReadAllLines (Path.Combine (path' FileName))) {  	yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  }  
Magic Number,Pirate.Ldap,States,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\States.cs,GetList,The following statement contains a magic number: yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  
Magic Number,Pirate.Ldap,States,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\States.cs,GetList,The following statement contains a magic number: yield return new DisplayValue (GetNameFromLine (line)' line.Substring (line.Length - 2' 2));  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: switch (key) {  case LdapServerKey:  	LdapServer = value;  	break;  case BindDnKey:  	BindDn = value;  	break;  case BindPasswordKey:  	BindPassword = value;  	break;  case MdbguiDnKey:  	MdbguiDn = value;  	break;  case MdbguiPasswordKey:  	MdbguiPassword = value;  	break;  case PostgresConnectionStringKey:  	PostgresConnectionString = value;  	break;  case EncryptionKeyKey:  	EncryptionKey = value.ParseHexBytes ();  	EncryptionKey.Length.ArgumentInRange (32' 32);  	break;  case AuthenicationKeyKey:  	AuthenticationKey = value.ParseHexBytes ();  	AuthenticationKey.Length.ArgumentInRange (32' 32);  	break;  case MailServerAddressKey:  	MailServerAddress = value;  	break;  case MailServerPortKey:  	MailServerPort = int.Parse (value);  	break;  case RegistrationServiceAddressKey:  	RegistrationServiceAddress = value;  	break;  case MemberAdminAddressKey:  	MemberAdminAddress = value;  	break;  case MemberServiceAddressKey:  	MemberServiceAddress = value;  	break;  case AdminAddressKey:  	AdminAddress = value;  	break;  case AdminDisplayNameKey:  	AdminDisplayName = value;  	break;  case RegistrarNotificationAddressKey:  	RegistrarNotificationAddress = value;  	break;  case RegistrarNotificationDisplayNameKey:  	RegistrarNotificationDisplayName = value;  	break;  case SystemSenderAddressKey:  	SystemSenderAddress = value;  	break;  case SystemSenderDisplayNameKey:  	SystemSenderDisplayName = value;  	break;  case AdditionalNotificationAddressKey:  	AdditionalNotificationAddress = value;  	break;  case AdditionalNotificationDisplayNameKey:  	AdditionalNotificationDisplayName = value;  	break;  default:  	throw new InvalidOperationException ("Config key not understood: " + key);  }  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: switch (key) {  case LdapServerKey:  	LdapServer = value;  	break;  case BindDnKey:  	BindDn = value;  	break;  case BindPasswordKey:  	BindPassword = value;  	break;  case MdbguiDnKey:  	MdbguiDn = value;  	break;  case MdbguiPasswordKey:  	MdbguiPassword = value;  	break;  case PostgresConnectionStringKey:  	PostgresConnectionString = value;  	break;  case EncryptionKeyKey:  	EncryptionKey = value.ParseHexBytes ();  	EncryptionKey.Length.ArgumentInRange (32' 32);  	break;  case AuthenicationKeyKey:  	AuthenticationKey = value.ParseHexBytes ();  	AuthenticationKey.Length.ArgumentInRange (32' 32);  	break;  case MailServerAddressKey:  	MailServerAddress = value;  	break;  case MailServerPortKey:  	MailServerPort = int.Parse (value);  	break;  case RegistrationServiceAddressKey:  	RegistrationServiceAddress = value;  	break;  case MemberAdminAddressKey:  	MemberAdminAddress = value;  	break;  case MemberServiceAddressKey:  	MemberServiceAddress = value;  	break;  case AdminAddressKey:  	AdminAddress = value;  	break;  case AdminDisplayNameKey:  	AdminDisplayName = value;  	break;  case RegistrarNotificationAddressKey:  	RegistrarNotificationAddress = value;  	break;  case RegistrarNotificationDisplayNameKey:  	RegistrarNotificationDisplayName = value;  	break;  case SystemSenderAddressKey:  	SystemSenderAddress = value;  	break;  case SystemSenderDisplayNameKey:  	SystemSenderDisplayName = value;  	break;  case AdditionalNotificationAddressKey:  	AdditionalNotificationAddress = value;  	break;  case AdditionalNotificationDisplayNameKey:  	AdditionalNotificationDisplayName = value;  	break;  default:  	throw new InvalidOperationException ("Config key not understood: " + key);  }  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: switch (key) {  case LdapServerKey:  	LdapServer = value;  	break;  case BindDnKey:  	BindDn = value;  	break;  case BindPasswordKey:  	BindPassword = value;  	break;  case MdbguiDnKey:  	MdbguiDn = value;  	break;  case MdbguiPasswordKey:  	MdbguiPassword = value;  	break;  case PostgresConnectionStringKey:  	PostgresConnectionString = value;  	break;  case EncryptionKeyKey:  	EncryptionKey = value.ParseHexBytes ();  	EncryptionKey.Length.ArgumentInRange (32' 32);  	break;  case AuthenicationKeyKey:  	AuthenticationKey = value.ParseHexBytes ();  	AuthenticationKey.Length.ArgumentInRange (32' 32);  	break;  case MailServerAddressKey:  	MailServerAddress = value;  	break;  case MailServerPortKey:  	MailServerPort = int.Parse (value);  	break;  case RegistrationServiceAddressKey:  	RegistrationServiceAddress = value;  	break;  case MemberAdminAddressKey:  	MemberAdminAddress = value;  	break;  case MemberServiceAddressKey:  	MemberServiceAddress = value;  	break;  case AdminAddressKey:  	AdminAddress = value;  	break;  case AdminDisplayNameKey:  	AdminDisplayName = value;  	break;  case RegistrarNotificationAddressKey:  	RegistrarNotificationAddress = value;  	break;  case RegistrarNotificationDisplayNameKey:  	RegistrarNotificationDisplayName = value;  	break;  case SystemSenderAddressKey:  	SystemSenderAddress = value;  	break;  case SystemSenderDisplayNameKey:  	SystemSenderDisplayName = value;  	break;  case AdditionalNotificationAddressKey:  	AdditionalNotificationAddress = value;  	break;  case AdditionalNotificationDisplayNameKey:  	AdditionalNotificationDisplayName = value;  	break;  default:  	throw new InvalidOperationException ("Config key not understood: " + key);  }  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: switch (key) {  case LdapServerKey:  	LdapServer = value;  	break;  case BindDnKey:  	BindDn = value;  	break;  case BindPasswordKey:  	BindPassword = value;  	break;  case MdbguiDnKey:  	MdbguiDn = value;  	break;  case MdbguiPasswordKey:  	MdbguiPassword = value;  	break;  case PostgresConnectionStringKey:  	PostgresConnectionString = value;  	break;  case EncryptionKeyKey:  	EncryptionKey = value.ParseHexBytes ();  	EncryptionKey.Length.ArgumentInRange (32' 32);  	break;  case AuthenicationKeyKey:  	AuthenticationKey = value.ParseHexBytes ();  	AuthenticationKey.Length.ArgumentInRange (32' 32);  	break;  case MailServerAddressKey:  	MailServerAddress = value;  	break;  case MailServerPortKey:  	MailServerPort = int.Parse (value);  	break;  case RegistrationServiceAddressKey:  	RegistrationServiceAddress = value;  	break;  case MemberAdminAddressKey:  	MemberAdminAddress = value;  	break;  case MemberServiceAddressKey:  	MemberServiceAddress = value;  	break;  case AdminAddressKey:  	AdminAddress = value;  	break;  case AdminDisplayNameKey:  	AdminDisplayName = value;  	break;  case RegistrarNotificationAddressKey:  	RegistrarNotificationAddress = value;  	break;  case RegistrarNotificationDisplayNameKey:  	RegistrarNotificationDisplayName = value;  	break;  case SystemSenderAddressKey:  	SystemSenderAddress = value;  	break;  case SystemSenderDisplayNameKey:  	SystemSenderDisplayName = value;  	break;  case AdditionalNotificationAddressKey:  	AdditionalNotificationAddress = value;  	break;  case AdditionalNotificationDisplayNameKey:  	AdditionalNotificationDisplayName = value;  	break;  default:  	throw new InvalidOperationException ("Config key not understood: " + key);  }  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: EncryptionKey.Length.ArgumentInRange (32' 32);  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: EncryptionKey.Length.ArgumentInRange (32' 32);  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: AuthenticationKey.Length.ArgumentInRange (32' 32);  
Magic Number,Pirate.Ldap.Config,Config,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Config\Config.cs,Apply,The following statement contains a magic number: AuthenticationKey.Length.ArgumentInRange (32' 32);  
Magic Number,Pirate.Ldap.Data,AuthenticationLevel,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\AuthenticationLevel.cs,Text,The following statement contains a magic number: switch (authenticationLevel) {  case 0:  	return LdapResources.CertificateLevel0;  case 1:  	return LdapResources.CertificateLevel1;  case 2:  	return LdapResources.CertificateLevel2;  case 3:  	return LdapResources.CertificateLevel3;  case 4:  	return LdapResources.CertificateLevel4;  default:  	throw new ArgumentOutOfRangeException ();  }  
Magic Number,Pirate.Ldap.Data,AuthenticationLevel,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\AuthenticationLevel.cs,Text,The following statement contains a magic number: switch (authenticationLevel) {  case 0:  	return LdapResources.CertificateLevel0;  case 1:  	return LdapResources.CertificateLevel1;  case 2:  	return LdapResources.CertificateLevel2;  case 3:  	return LdapResources.CertificateLevel3;  case 4:  	return LdapResources.CertificateLevel4;  default:  	throw new ArgumentOutOfRangeException ();  }  
Magic Number,Pirate.Ldap.Data,AuthenticationLevel,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\AuthenticationLevel.cs,Text,The following statement contains a magic number: switch (authenticationLevel) {  case 0:  	return LdapResources.CertificateLevel0;  case 1:  	return LdapResources.CertificateLevel1;  case 2:  	return LdapResources.CertificateLevel2;  case 3:  	return LdapResources.CertificateLevel3;  case 4:  	return LdapResources.CertificateLevel4;  default:  	throw new ArgumentOutOfRangeException ();  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetEmailAddressChange,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT username' removeaddress' addaddress' created FROM emailaddresschange WHERE id = @Id"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@Id"' id));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var username = reader.GetString (0);  			var removeAddress = reader.GetString (1);  			var addAddress = reader.GetString (2);  			var creation = reader.GetDateTime (3);  			return new EmailAddressChange (id' username' removeAddress' addAddress' creation);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetEmailAddressChange,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT username' removeaddress' addaddress' created FROM emailaddresschange WHERE id = @Id"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@Id"' id));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var username = reader.GetString (0);  			var removeAddress = reader.GetString (1);  			var addAddress = reader.GetString (2);  			var creation = reader.GetDateTime (3);  			return new EmailAddressChange (id' username' removeAddress' addAddress' creation);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetEmailAddressChange,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var username = reader.GetString (0);  		var removeAddress = reader.GetString (1);  		var addAddress = reader.GetString (2);  		var creation = reader.GetDateTime (3);  		return new EmailAddressChange (id' username' removeAddress' addAddress' creation);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetEmailAddressChange,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var username = reader.GetString (0);  		var removeAddress = reader.GetString (1);  		var addAddress = reader.GetString (2);  		var creation = reader.GetDateTime (3);  		return new EmailAddressChange (id' username' removeAddress' addAddress' creation);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetEmailAddressChange,The following statement contains a magic number: if (reader.Read ()) {  	var username = reader.GetString (0);  	var removeAddress = reader.GetString (1);  	var addAddress = reader.GetString (2);  	var creation = reader.GetDateTime (3);  	return new EmailAddressChange (id' username' removeAddress' addAddress' creation);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetEmailAddressChange,The following statement contains a magic number: if (reader.Read ()) {  	var username = reader.GetString (0);  	var removeAddress = reader.GetString (1);  	var addAddress = reader.GetString (2);  	var creation = reader.GetDateTime (3);  	return new EmailAddressChange (id' username' removeAddress' addAddress' creation);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,RemoveOutdatedEmailAddressChanges,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("DELETE FROM emailaddresschange WHERE created < @Date"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@Date"' DateTime.Now.AddHours (-2)));  	command.ExecuteNonQuery ();  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,RemoveOutdatedEmailAddressChanges,The following statement contains a magic number: command.Parameters.Add (new PgSqlParameter ("@Date"' DateTime.Now.AddHours (-2)));  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT fingerprint' authorizationlevel' userUniqueIdentifier' comment' certificatedata FROM certificateentry WHERE key = @key"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@key"' key));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var fingerprint = reader.GetString (0);  			var authorizationLevel = reader.GetInt32 (1);  			var userUniqueIdentifier = reader.GetInt32 (2);  			var comment = reader.GetString (3);  			var certificateData = reader.GetString (4);  			return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT fingerprint' authorizationlevel' userUniqueIdentifier' comment' certificatedata FROM certificateentry WHERE key = @key"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@key"' key));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var fingerprint = reader.GetString (0);  			var authorizationLevel = reader.GetInt32 (1);  			var userUniqueIdentifier = reader.GetInt32 (2);  			var comment = reader.GetString (3);  			var certificateData = reader.GetString (4);  			return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT fingerprint' authorizationlevel' userUniqueIdentifier' comment' certificatedata FROM certificateentry WHERE key = @key"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@key"' key));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var fingerprint = reader.GetString (0);  			var authorizationLevel = reader.GetInt32 (1);  			var userUniqueIdentifier = reader.GetInt32 (2);  			var comment = reader.GetString (3);  			var certificateData = reader.GetString (4);  			return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var fingerprint = reader.GetString (0);  		var authorizationLevel = reader.GetInt32 (1);  		var userUniqueIdentifier = reader.GetInt32 (2);  		var comment = reader.GetString (3);  		var certificateData = reader.GetString (4);  		return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var fingerprint = reader.GetString (0);  		var authorizationLevel = reader.GetInt32 (1);  		var userUniqueIdentifier = reader.GetInt32 (2);  		var comment = reader.GetString (3);  		var certificateData = reader.GetString (4);  		return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var fingerprint = reader.GetString (0);  		var authorizationLevel = reader.GetInt32 (1);  		var userUniqueIdentifier = reader.GetInt32 (2);  		var comment = reader.GetString (3);  		var certificateData = reader.GetString (4);  		return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: if (reader.Read ()) {  	var fingerprint = reader.GetString (0);  	var authorizationLevel = reader.GetInt32 (1);  	var userUniqueIdentifier = reader.GetInt32 (2);  	var comment = reader.GetString (3);  	var certificateData = reader.GetString (4);  	return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: if (reader.Read ()) {  	var fingerprint = reader.GetString (0);  	var authorizationLevel = reader.GetInt32 (1);  	var userUniqueIdentifier = reader.GetInt32 (2);  	var comment = reader.GetString (3);  	var certificateData = reader.GetString (4);  	return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,FindCertificateEntry,The following statement contains a magic number: if (reader.Read ()) {  	var fingerprint = reader.GetString (0);  	var authorizationLevel = reader.GetInt32 (1);  	var userUniqueIdentifier = reader.GetInt32 (2);  	var comment = reader.GetString (3);  	var certificateData = reader.GetString (4);  	return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' useruniqueidentifier' comment' certificatedata FROM certificateentry"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var key = reader.GetInt64 (0);  			var fingerprint = reader.GetString (1);  			var authorizationLevel = reader.GetInt32 (2);  			var userUniqueIdentifier = reader.GetInt32 (3);  			var comment = reader.GetString (4);  			var certificateData = reader.GetString (5);  			yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' useruniqueidentifier' comment' certificatedata FROM certificateentry"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var key = reader.GetInt64 (0);  			var fingerprint = reader.GetString (1);  			var authorizationLevel = reader.GetInt32 (2);  			var userUniqueIdentifier = reader.GetInt32 (3);  			var comment = reader.GetString (4);  			var certificateData = reader.GetString (5);  			yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' useruniqueidentifier' comment' certificatedata FROM certificateentry"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var key = reader.GetInt64 (0);  			var fingerprint = reader.GetString (1);  			var authorizationLevel = reader.GetInt32 (2);  			var userUniqueIdentifier = reader.GetInt32 (3);  			var comment = reader.GetString (4);  			var certificateData = reader.GetString (5);  			yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' useruniqueidentifier' comment' certificatedata FROM certificateentry"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var key = reader.GetInt64 (0);  			var fingerprint = reader.GetString (1);  			var authorizationLevel = reader.GetInt32 (2);  			var userUniqueIdentifier = reader.GetInt32 (3);  			var comment = reader.GetString (4);  			var certificateData = reader.GetString (5);  			yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var key = reader.GetInt64 (0);  		var fingerprint = reader.GetString (1);  		var authorizationLevel = reader.GetInt32 (2);  		var userUniqueIdentifier = reader.GetInt32 (3);  		var comment = reader.GetString (4);  		var certificateData = reader.GetString (5);  		yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var key = reader.GetInt64 (0);  		var fingerprint = reader.GetString (1);  		var authorizationLevel = reader.GetInt32 (2);  		var userUniqueIdentifier = reader.GetInt32 (3);  		var comment = reader.GetString (4);  		var certificateData = reader.GetString (5);  		yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var key = reader.GetInt64 (0);  		var fingerprint = reader.GetString (1);  		var authorizationLevel = reader.GetInt32 (2);  		var userUniqueIdentifier = reader.GetInt32 (3);  		var comment = reader.GetString (4);  		var certificateData = reader.GetString (5);  		yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var key = reader.GetInt64 (0);  		var fingerprint = reader.GetString (1);  		var authorizationLevel = reader.GetInt32 (2);  		var userUniqueIdentifier = reader.GetInt32 (3);  		var comment = reader.GetString (4);  		var certificateData = reader.GetString (5);  		yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: while (reader.Read ()) {  	var key = reader.GetInt64 (0);  	var fingerprint = reader.GetString (1);  	var authorizationLevel = reader.GetInt32 (2);  	var userUniqueIdentifier = reader.GetInt32 (3);  	var comment = reader.GetString (4);  	var certificateData = reader.GetString (5);  	yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: while (reader.Read ()) {  	var key = reader.GetInt64 (0);  	var fingerprint = reader.GetString (1);  	var authorizationLevel = reader.GetInt32 (2);  	var userUniqueIdentifier = reader.GetInt32 (3);  	var comment = reader.GetString (4);  	var certificateData = reader.GetString (5);  	yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: while (reader.Read ()) {  	var key = reader.GetInt64 (0);  	var fingerprint = reader.GetString (1);  	var authorizationLevel = reader.GetInt32 (2);  	var userUniqueIdentifier = reader.GetInt32 (3);  	var comment = reader.GetString (4);  	var certificateData = reader.GetString (5);  	yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: while (reader.Read ()) {  	var key = reader.GetInt64 (0);  	var fingerprint = reader.GetString (1);  	var authorizationLevel = reader.GetInt32 (2);  	var userUniqueIdentifier = reader.GetInt32 (3);  	var comment = reader.GetString (4);  	var certificateData = reader.GetString (5);  	yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' comment' certificatedata FROM certificateentry WHERE useruniqueidentifier = @useruniqueidentifier"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@useruniqueidentifier"' userUniqueIdentifier));  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var key = reader.GetInt64 (0);  			var fingerprint = reader.GetString (1);  			var authorizationLevel = reader.GetInt32 (2);  			var comment = reader.GetString (3);  			var certificateData = reader.GetString (4);  			yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' comment' certificatedata FROM certificateentry WHERE useruniqueidentifier = @useruniqueidentifier"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@useruniqueidentifier"' userUniqueIdentifier));  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var key = reader.GetInt64 (0);  			var fingerprint = reader.GetString (1);  			var authorizationLevel = reader.GetInt32 (2);  			var comment = reader.GetString (3);  			var certificateData = reader.GetString (4);  			yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT key' fingerprint' authorizationlevel' comment' certificatedata FROM certificateentry WHERE useruniqueidentifier = @useruniqueidentifier"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@useruniqueidentifier"' userUniqueIdentifier));  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var key = reader.GetInt64 (0);  			var fingerprint = reader.GetString (1);  			var authorizationLevel = reader.GetInt32 (2);  			var comment = reader.GetString (3);  			var certificateData = reader.GetString (4);  			yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var key = reader.GetInt64 (0);  		var fingerprint = reader.GetString (1);  		var authorizationLevel = reader.GetInt32 (2);  		var comment = reader.GetString (3);  		var certificateData = reader.GetString (4);  		yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var key = reader.GetInt64 (0);  		var fingerprint = reader.GetString (1);  		var authorizationLevel = reader.GetInt32 (2);  		var comment = reader.GetString (3);  		var certificateData = reader.GetString (4);  		yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var key = reader.GetInt64 (0);  		var fingerprint = reader.GetString (1);  		var authorizationLevel = reader.GetInt32 (2);  		var comment = reader.GetString (3);  		var certificateData = reader.GetString (4);  		yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: while (reader.Read ()) {  	var key = reader.GetInt64 (0);  	var fingerprint = reader.GetString (1);  	var authorizationLevel = reader.GetInt32 (2);  	var comment = reader.GetString (3);  	var certificateData = reader.GetString (4);  	yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: while (reader.Read ()) {  	var key = reader.GetInt64 (0);  	var fingerprint = reader.GetString (1);  	var authorizationLevel = reader.GetInt32 (2);  	var comment = reader.GetString (3);  	var certificateData = reader.GetString (4);  	yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,ListCertificateEntries,The following statement contains a magic number: while (reader.Read ()) {  	var key = reader.GetInt64 (0);  	var fingerprint = reader.GetString (1);  	var authorizationLevel = reader.GetInt32 (2);  	var comment = reader.GetString (3);  	var certificateData = reader.GetString (4);  	yield return new CertificateEntry (key' fingerprint' authorizationLevel' userUniqueIdentifier' comment' certificateData);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT action' oldDn' newDn' parameter' requested FROM request WHERE id = @id"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@id"' id));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var action = (RequestAction)reader.GetInt32 (0);  			var oldDn = reader.GetString (1);  			var newDn = reader.GetString (2);  			var parameter = reader.GetString (3);  			var requested = reader.GetDateTime (4);  			return new Request (id' action' oldDn' newDn' parameter' requested);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT action' oldDn' newDn' parameter' requested FROM request WHERE id = @id"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@id"' id));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var action = (RequestAction)reader.GetInt32 (0);  			var oldDn = reader.GetString (1);  			var newDn = reader.GetString (2);  			var parameter = reader.GetString (3);  			var requested = reader.GetDateTime (4);  			return new Request (id' action' oldDn' newDn' parameter' requested);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT action' oldDn' newDn' parameter' requested FROM request WHERE id = @id"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@id"' id));  	using (var reader = command.ExecuteReader ()) {  		if (reader.Read ()) {  			var action = (RequestAction)reader.GetInt32 (0);  			var oldDn = reader.GetString (1);  			var newDn = reader.GetString (2);  			var parameter = reader.GetString (3);  			var requested = reader.GetDateTime (4);  			return new Request (id' action' oldDn' newDn' parameter' requested);  		}  		else {  			return null;  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var action = (RequestAction)reader.GetInt32 (0);  		var oldDn = reader.GetString (1);  		var newDn = reader.GetString (2);  		var parameter = reader.GetString (3);  		var requested = reader.GetDateTime (4);  		return new Request (id' action' oldDn' newDn' parameter' requested);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var action = (RequestAction)reader.GetInt32 (0);  		var oldDn = reader.GetString (1);  		var newDn = reader.GetString (2);  		var parameter = reader.GetString (3);  		var requested = reader.GetDateTime (4);  		return new Request (id' action' oldDn' newDn' parameter' requested);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	if (reader.Read ()) {  		var action = (RequestAction)reader.GetInt32 (0);  		var oldDn = reader.GetString (1);  		var newDn = reader.GetString (2);  		var parameter = reader.GetString (3);  		var requested = reader.GetDateTime (4);  		return new Request (id' action' oldDn' newDn' parameter' requested);  	}  	else {  		return null;  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: if (reader.Read ()) {  	var action = (RequestAction)reader.GetInt32 (0);  	var oldDn = reader.GetString (1);  	var newDn = reader.GetString (2);  	var parameter = reader.GetString (3);  	var requested = reader.GetDateTime (4);  	return new Request (id' action' oldDn' newDn' parameter' requested);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: if (reader.Read ()) {  	var action = (RequestAction)reader.GetInt32 (0);  	var oldDn = reader.GetString (1);  	var newDn = reader.GetString (2);  	var parameter = reader.GetString (3);  	var requested = reader.GetDateTime (4);  	return new Request (id' action' oldDn' newDn' parameter' requested);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequest,The following statement contains a magic number: if (reader.Read ()) {  	var action = (RequestAction)reader.GetInt32 (0);  	var oldDn = reader.GetString (1);  	var newDn = reader.GetString (2);  	var parameter = reader.GetString (3);  	var requested = reader.GetDateTime (4);  	return new Request (id' action' oldDn' newDn' parameter' requested);  }  else {  	return null;  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request WHERE olddn = @olddn"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@olddn"' dn));  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request WHERE olddn = @olddn"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@olddn"' dn));  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request WHERE olddn = @olddn"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@olddn"' dn));  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request WHERE olddn = @olddn"' _connection);  	command.Parameters.Add (new PgSqlParameter ("@olddn"' dn));  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: lock (_lock) {  	var command = new PgSqlCommand ("SELECT id' action' oldDn' newDn' parameter' requested FROM request"' _connection);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var id = reader.GetInt32 (0);  			var action = (RequestAction)reader.GetInt32 (1);  			var oldDn = reader.GetString (2);  			var newDn = reader.GetString (3);  			var parameter = reader.GetString (4);  			var requested = reader.GetDateTime (5);  			yield return new Request (id' action' oldDn' newDn' parameter' requested);  		}  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		var id = reader.GetInt32 (0);  		var action = (RequestAction)reader.GetInt32 (1);  		var oldDn = reader.GetString (2);  		var newDn = reader.GetString (3);  		var parameter = reader.GetString (4);  		var requested = reader.GetDateTime (5);  		yield return new Request (id' action' oldDn' newDn' parameter' requested);  	}  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,PostgresSqlDataAccess,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\PostgresSqlDataAccess.cs,GetallRequests,The following statement contains a magic number: while (reader.Read ()) {  	var id = reader.GetInt32 (0);  	var action = (RequestAction)reader.GetInt32 (1);  	var oldDn = reader.GetString (2);  	var newDn = reader.GetString (3);  	var parameter = reader.GetString (4);  	var requested = reader.GetDateTime (5);  	yield return new Request (id' action' oldDn' newDn' parameter' requested);  }  
Magic Number,Pirate.Ldap.Data,Request,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\Request.cs,LoadParameters,The following statement contains a magic number: foreach (var part in parameter.Split (new[] {  	";"  }' StringSplitOptions.RemoveEmptyEntries)) {  	var keyValue = part.Split (new[] {  		"="  	}' StringSplitOptions.None);  	if (keyValue.Length == 1) {  		var key = (RequestParameter)Enum.Parse (typeof(RequestParameter)' keyValue [0]);  		Parameters.Add (key' string.Empty);  	}  	else if (keyValue.Length == 2) {  		var key = (RequestParameter)Enum.Parse (typeof(RequestParameter)' keyValue [0]);  		Parameters.Add (key' keyValue [1]);  	}  	else {  		throw new ArgumentOutOfRangeException ();  	}  }  
Magic Number,Pirate.Ldap.Data,Request,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\Request.cs,LoadParameters,The following statement contains a magic number: if (keyValue.Length == 1) {  	var key = (RequestParameter)Enum.Parse (typeof(RequestParameter)' keyValue [0]);  	Parameters.Add (key' string.Empty);  }  else if (keyValue.Length == 2) {  	var key = (RequestParameter)Enum.Parse (typeof(RequestParameter)' keyValue [0]);  	Parameters.Add (key' keyValue [1]);  }  else {  	throw new ArgumentOutOfRangeException ();  }  
Magic Number,Pirate.Ldap.Data,Request,C:\repos\ppschweiz_MemberDatabase\Organigram\Pirate.Ldap\Data\Request.cs,LoadParameters,The following statement contains a magic number: if (keyValue.Length == 2) {  	var key = (RequestParameter)Enum.Parse (typeof(RequestParameter)' keyValue [0]);  	Parameters.Add (key' keyValue [1]);  }  else {  	throw new ArgumentOutOfRangeException ();  }  
