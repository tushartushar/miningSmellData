Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Wintellect.Analyzers,AssemblyAttributeAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Design\AssemblyAttributeAnalyzer.cs,AnalyzeCompilation,Cyclomatic complexity of the method is 10
Complex Method,Wintellect.Analyzers,ExceptionDocumentationMissingAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Documentation\ExceptionDocumentationMissingAnalyzer.cs,AnalyzeThrowDocumentation,Cyclomatic complexity of the method is 9
Complex Method,Wintellect.Analyzers,SuppressionMessageMissingJustificationAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Documentation\SuppressionMessageMissingJustificationAnalyzer.cs,AnalyzeSuppressMessage,Cyclomatic complexity of the method is 8
Complex Method,Wintellect.Analyzers,UseDebuggerDisplayAttributeAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Usage\UseDebuggerDisplayAttributeAnalyzer.cs,AnalyzeType,Cyclomatic complexity of the method is 10
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter ReturningTaskRequiresAsyncAnalyzer is 34.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter CallAssertMethodsWithMessageParameterAnalyzer is 45.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter IfAndElseMustHaveBracesAnalyzer is 31.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter AvoidCallingMethodsWithParamArgsInLoopsAnalyzer is 47.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter AssembliesHaveCompanyAttributeAnalyzer is 38.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter AssembliesHaveCopyrightAttributeAnalyzer is 40.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter AssembliesHaveDescriptionAttributeAnalyzer is 42.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter AssembliesHaveTitleAttributeAnalyzer is 36.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter ExceptionDocumentationMissingAnalyzer is 37.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter SuppressionMessageMissingJustificationAnalyzer is 46.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter UseDebuggerDisplayAttributeAnalyzer is 35.
Long Identifier,Wintellect.Analyzers,DiagnosticIds,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\DiagnosticIds.cs,,The length of the parameter CatchBlocksShouldRethrowAnalyzer is 32.
Long Statement,Wintellect.Analyzers,ExceptionDocumentationMissingAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Documentation\ExceptionDocumentationMissingAnalyzer.cs,AnalyzeThrowDocumentation,The length of the statement  "            // Get the type being thrown by searching for the IdentifierNameSyntax. This works for both "throw new BlahException" and  " is 121.
Long Statement,Wintellect.Analyzers,ExceptionDocumentationMissingAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Documentation\ExceptionDocumentationMissingAnalyzer.cs,AnalyzeThrowDocumentation,The length of the statement  "            IdentifierNameSyntax ident = throwSyntax.DescendantNodes().First(node => node is IdentifierNameSyntax) as IdentifierNameSyntax; " is 127.
Long Statement,Wintellect.Analyzers,CallAssertMethodsWithMessageParameterCodeFixProvider,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Usage\CodeFixes\CallAssertMethodsWithMessageParameterCodeFixProvide.cs,RegisterCodeFixesAsync,The length of the statement  "            InvocationExpressionSyntax declaration = root.FindToken(diagnosticSpan.Start).Parent.AncestorsAndSelf().OfType<InvocationExpressionSyntax>().First(); " is 149.
Long Statement,Wintellect.Analyzers,IfAndElseMustHaveBracesCodeFixProvider,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Formatting\CodeFixes\IfAndElseMustHaveBracesCodeFixProvider.cs,AddMissingBracesAsync,The length of the statement  "                newIfStatement = newIfStatement.WithStatement(SyntaxFactory.Block(newIfStatement.Statement)).WithAdditionalAnnotations(Formatter.Annotation); " is 141.
Long Statement,Wintellect.Analyzers,IfAndElseMustHaveBracesCodeFixProvider,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Formatting\CodeFixes\IfAndElseMustHaveBracesCodeFixProvider.cs,AddMissingBracesAsync,The length of the statement  "                newElseStatement = newElseStatement.WithStatement(SyntaxFactory.Block(newElseStatement.Statement)).WithAdditionalAnnotations(Formatter.Annotation); " is 147.
Long Statement,Wintellect.Analyzers,ClassesShouldBeSealedCodeFixProvider,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Usage\CodeFixes\ClassesShouldBeSealedCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "            var declaration = root.FindToken(diagnosticSpan.Start).Parent.AncestorsAndSelf().OfType<ClassDeclarationSyntax>().First(); " is 122.
Long Statement,Wintellect.Analyzers,ReturningTaskRequiresAsyncCodeFixProvider,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Usage\CodeFixes\ReturningTaskRequiresAsyncCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "            MethodDeclarationSyntax methodDeclarationSyntax = root.FindToken(diagnosticSpan.Start).Parent as MethodDeclarationSyntax; " is 121.
Long Statement,Wintellect.Analyzers,UseDebuggerDisplayAttributeAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Usage\UseDebuggerDisplayAttributeAnalyzer.cs,AnalyzeType,The length of the statement  "            var propsOrFields = namedSymbol.GetMembers().Where(n => ((n.Kind == SymbolKind.Property) || (n.Kind == SymbolKind.Field))); " is 123.
Complex Conditional,Wintellect.Analyzers,ContextExtensions,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Extensions\ContextExtensions.cs,IsGeneratedCodeFilename,The conditional expression  "fileName.EndsWith("AssemblyInfo"' StringComparison.OrdinalIgnoreCase) ||                      fileName.EndsWith(".designer"' StringComparison.OrdinalIgnoreCase) ||                      fileName.EndsWith(".generated"' StringComparison.OrdinalIgnoreCase) ||                      fileName.EndsWith(".g"' StringComparison.OrdinalIgnoreCase) ||                      fileName.EndsWith(".g.i"' StringComparison.OrdinalIgnoreCase) ||                      fileName.EndsWith(".AssemblyAttributes"' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,Wintellect.Analyzers,ClassesShouldBeSealedAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Usage\ClassesShouldBeSealedAnalyzer.cs,ClassSealedCheck,The conditional expression  "(!symbol.IsValueType) && (!symbol.IsSealed) && (!symbol.IsStatic) && (!symbol.IsAbstract)"  is complex.
Complex Conditional,Wintellect.Analyzers,IfAndElseMustHaveBracesAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Formatting\IfAndElseMustHaveBracesAnalyzer.cs,AnalyzeIfOrElseStatement,The conditional expression  "(elseSyntax != null) &&                  (elseSyntax.Statement != null ) &&                  (elseSyntax.Statement.IsKind(SyntaxKind.IfStatement) == false) &&                  (elseSyntax.Statement.IsKind(SyntaxKind.Block) == false)"  is complex.
Empty Catch Block,Wintellect.Analyzers,ExceptionDocumentationMissingAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Documentation\ExceptionDocumentationMissingAnalyzer.cs,DocumentedExceptionInformation,The method has an empty catch block.
Magic Number,Wintellect.Analyzers,ExceptionDocumentationMissingAnalyzer,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Documentation\ExceptionDocumentationMissingAnalyzer.cs,DocumentedExceptionInformation,The following statement contains a magic number: if (false == String.IsNullOrEmpty(methodXml))              {                  try                  {                      XElement data = XElement.Parse(methodXml);                      var exceptTypes = from elem in data.Elements("exception") select elem;                        // The strings all have the "T:" modifier on them so yank them off.                      //"T:System.ArgumentOutOfRangeException"                      foreach (var item in exceptTypes)                      {                          String type = item.Attribute("cref").Value.Substring(2);                          exceptList[type] = item.Value;                      }                  }                  catch (XmlException)                  {                      // It's possible to have crap XML in a doc comment.                  }              }
Magic Number,Wintellect.Analyzers,SyntaxFactoryHelper,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Helpers\SyntaxFactoryHelper.cs,QualifiedUsing,The following statement contains a magic number: if (count == 2)              {                  return SyntaxFactory.UsingDirective(QualifiedName(parts[0]' parts[1]));              }
Magic Number,Wintellect.Analyzers,SyntaxFactoryHelper,C:\repos\Wintellect_Wintellect.Analyzers\Source\Wintellect.Analyzers\Wintellect.Analyzers\Helpers\SyntaxFactoryHelper.cs,QualifiedUsing,The following statement contains a magic number: for (Int32 i = 2; i < count - 1; i++)              {                  IdentifierNameSyntax right = SyntaxFactory.IdentifierName(parts[i]);                  left = SyntaxFactory.QualifiedName(left' right);              }
