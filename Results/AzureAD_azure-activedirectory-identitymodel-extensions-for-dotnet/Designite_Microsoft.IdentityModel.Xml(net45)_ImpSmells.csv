Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadKeyInfo,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadX509Data,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadSignedInfo,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadTransforms,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteReference,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteSignature,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteSignedInfo,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.IdentityModel.Xml,EnvelopedSignatureReader,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureReader.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.IdentityModel.Xml,XmlTokenStreamReader,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlTokenStreamReader.cs,Record,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.IdentityModel.Xml,XmlToken,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlToken.cs,XmlToken,The method has 5 parameters. Parameters: nodeType' prefix' localName' namespace' value
Long Parameter List,Microsoft.IdentityModel.Xml,XmlToken,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlToken.cs,XmlToken,The method has 5 parameters. Parameters: nodeType' prefix' localName' namespace' isEmptyElement
Long Identifier,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,,The length of the parameter _inclusiveNamespacesPrefixList is 30.
Long Identifier,Microsoft.IdentityModel.Xml,XmlSignatureConstants,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlSignatureConstants.cs,,The length of the parameter ExclusiveC14nInclusiveNamespaces is 32.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadKeyInfo,The length of the statement  "                        keyInfo.KeyName = reader.ReadElementContentAsString(XmlSignatureConstants.Elements.KeyName' XmlSignatureConstants.Namespace); " is 125.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadX509Data,The length of the statement  "                    // Skip the element since it is not one of  <X509Certificate>' <X509IssuerSerial>' <X509SKI>' <X509SubjectName>' <X509CRL> " is 122.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadIssuerSerial,The length of the statement  "                throw XmlUtil.LogReadException(LogMessages.IDX30011' XmlSignatureConstants.Namespace' XmlSignatureConstants.Elements.X509IssuerName' reader.NamespaceURI' reader.LocalName); " is 172.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadIssuerSerial,The length of the statement  "            var issuerName = reader.ReadElementContentAsString(XmlSignatureConstants.Elements.X509IssuerName' XmlSignatureConstants.Namespace); " is 131.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadIssuerSerial,The length of the statement  "                throw XmlUtil.LogReadException(LogMessages.IDX30011' XmlSignatureConstants.Namespace' XmlSignatureConstants.Elements.X509SerialNumber' reader.NamespaceURI' reader.LocalName); " is 174.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadIssuerSerial,The length of the statement  "            var serialNumber = reader.ReadElementContentAsString(XmlSignatureConstants.Elements.X509SerialNumber' XmlSignatureConstants.Namespace); " is 135.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadRSAKeyValue,The length of the statement  "                throw XmlUtil.LogReadException(LogMessages.IDX30011' XmlSignatureConstants.Namespace' XmlSignatureConstants.Elements.Modulus' reader.NamespaceURI' reader.LocalName); " is 165.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadRSAKeyValue,The length of the statement  "            string modulus = reader.ReadElementContentAsString(XmlSignatureConstants.Elements.Modulus' XmlSignatureConstants.Namespace); " is 124.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadRSAKeyValue,The length of the statement  "                throw XmlUtil.LogReadException(LogMessages.IDX30011' XmlSignatureConstants.Namespace' XmlSignatureConstants.Elements.Exponent' reader.NamespaceURI' reader.LocalName); " is 166.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadRSAKeyValue,The length of the statement  "            string exponent = reader.ReadElementContentAsString(XmlSignatureConstants.Elements.Exponent' XmlSignatureConstants.Namespace); " is 126.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadSignature,The length of the statement  "                    throw XmlUtil.LogReadException(LogMessages.IDX30025' XmlSignatureConstants.Elements.Signature' reader.NodeType' reader.LocalName); " is 130.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadReference,The length of the statement  "                    throw XmlUtil.OnRequiredAttributeMissing(XmlSignatureConstants.Elements.DigestMethod' XmlSignatureConstants.Attributes.Algorithm); " is 130.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadTransforms,The length of the statement  "                        if (reader.IsStartElement(XmlSignatureConstants.Elements.InclusiveNamespaces' XmlSignatureConstants.ExclusiveC14nNamespace) || reader.IsStartElement(XmlSignatureConstants.Elements.InclusiveNamespaces)) " is 201.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadTransforms,The length of the statement  "                            reference.CanonicalizingTransfrom.InclusiveNamespacesPrefixList = reader.GetAttribute(XmlSignatureConstants.Attributes.PrefixList); " is 131.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadTransforms,The length of the statement  "                        throw LogHelper.LogExceptionMessage(new XmlReadException(FormatInvariant(LogMessages.IDX30029' !string.IsNullOrEmpty(reference.Id) ? reference.Id : (!string.IsNullOrEmpty(reference.Uri) ? reference.Uri : reference.GetType().ToString())' MaximumReferenceTransforms))); " is 267.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadSignatureMethod,The length of the statement  "                    throw XmlUtil.OnRequiredAttributeMissing(XmlSignatureConstants.Elements.SignatureMethod' XmlSignatureConstants.Attributes.Algorithm); " is 133.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadCanonicalizationMethod,The length of the statement  "            XmlUtil.CheckReaderOnEntry(reader' XmlSignatureConstants.Elements.CanonicalizationMethod' XmlSignatureConstants.Namespace); " is 123.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadCanonicalizationMethod,The length of the statement  "                    throw XmlUtil.LogReadException(LogMessages.IDX30013' XmlSignatureConstants.Elements.Signature' XmlSignatureConstants.Attributes.Algorithm); " is 139.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,ReadCanonicalizationMethod,The length of the statement  "                    throw XmlUtil.LogReadException(LogMessages.IDX30100' XmlSignatureConstants.Elements.Transform' algorithm' SecurityAlgorithms.ExclusiveC14n' SecurityAlgorithms.ExclusiveC14nWithComments); " is 186.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                writer.WriteElementString(Prefix' XmlSignatureConstants.Elements.KeyName' XmlSignatureConstants.Namespace' keyInfo.KeyName); " is 124.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                writer.WriteElementString(Prefix' XmlSignatureConstants.Elements.Modulus' XmlSignatureConstants.Namespace' keyInfo.RSAKeyValue.Modulus); " is 136.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                writer.WriteElementString(Prefix' XmlSignatureConstants.Elements.Exponent' XmlSignatureConstants.Namespace' keyInfo.RSAKeyValue.Exponent); " is 138.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                writer.WriteStartElement(keyInfo.Prefix' XmlSignatureConstants.Elements.RetrievalMethod' XmlSignatureConstants.Namespace); " is 122.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                    writer.WriteStartElement(keyInfo.Prefix' XmlSignatureConstants.Elements.X509IssuerSerial' XmlSignatureConstants.Namespace); " is 123.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                    writer.WriteElementString(keyInfo.Prefix' XmlSignatureConstants.Elements.X509IssuerName' XmlSignatureConstants.Namespace' data.IssuerSerial.IssuerName); " is 152.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                    writer.WriteElementString(keyInfo.Prefix' XmlSignatureConstants.Elements.X509SerialNumber' XmlSignatureConstants.Namespace' data.IssuerSerial.SerialNumber); " is 156.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                    writer.WriteElementString(keyInfo.Prefix' XmlSignatureConstants.Elements.X509SKI' XmlSignatureConstants.Namespace' data.SKI); " is 125.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                    writer.WriteElementString(keyInfo.Prefix' XmlSignatureConstants.Elements.X509SubjectName' XmlSignatureConstants.Namespace' data.SubjectName); " is 141.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                    writer.WriteElementString(keyInfo.Prefix' XmlSignatureConstants.Elements.X509Certificate' XmlSignatureConstants.Namespace' certificate); " is 136.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteKeyInfo,The length of the statement  "                    writer.WriteElementString(keyInfo.Prefix' XmlSignatureConstants.Elements.X509CRL' XmlSignatureConstants.Namespace' data.CRL); " is 125.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteReference,The length of the statement  "                throw XmlUtil.LogWriteException(LogMessages.IDX30401' XmlSignatureConstants.Elements.Reference' XmlSignatureConstants.Elements.DigestMethod); " is 141.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteReference,The length of the statement  "                throw XmlUtil.LogWriteException(LogMessages.IDX30401' XmlSignatureConstants.Elements.Reference' XmlSignatureConstants.Elements.DigestValue); " is 140.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteReference,The length of the statement  "                    writer.WriteStartElement(XmlSignatureConstants.ExclusiveC14nPrefix' XmlSignatureConstants.Elements.InclusiveNamespaces' XmlSignatureConstants.ExclusiveC14nNamespace); " is 166.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteReference,The length of the statement  "                    writer.WriteAttributeString(XmlSignatureConstants.Attributes.PrefixList' reference.CanonicalizingTransfrom.InclusiveNamespacesPrefixList); " is 138.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteReference,The length of the statement  "            writer.WriteElementString(Prefix' XmlSignatureConstants.Elements.DigestValue' XmlSignatureConstants.Namespace' reference.DigestValue); " is 134.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteSignature,The length of the statement  "                throw XmlUtil.LogWriteException(LogMessages.IDX30401' XmlSignatureConstants.Elements.Signature' XmlSignatureConstants.Elements.SignatureValue); " is 143.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteSignedInfo,The length of the statement  "                throw XmlUtil.LogWriteException(LogMessages.IDX30401' XmlSignatureConstants.Elements.SignedInfo' XmlSignatureConstants.Elements.CanonicalizationMethod); " is 152.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteSignedInfo,The length of the statement  "                throw XmlUtil.LogWriteException(LogMessages.IDX30401' XmlSignatureConstants.Elements.SignedInfo' XmlSignatureConstants.Elements.SignatureMethod); " is 145.
Long Statement,Microsoft.IdentityModel.Xml,DSigSerializer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\DsigSerializer.cs,WriteSignedInfo,The length of the statement  "            writer.WriteStartElement(Prefix' XmlSignatureConstants.Elements.CanonicalizationMethod' XmlSignatureConstants.Namespace); " is 121.
Long Statement,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,OnEndRootElement,The length of the statement  "                // while writing the XmlTokenStream' replace signature (placeholder) element with the real signature (using DSigSerializer). " is 124.
Long Statement,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,OnEndRootElement,The length of the statement  "                var xmlTokenStreamReader = new XmlTokenStreamReader(XmlDictionaryReader.CreateTextReader(_internalStream' XmlDictionaryReaderQuotas.Max)); " is 138.
Long Statement,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,OnEndRootElement,The length of the statement  "            // write the signature into the internalStream and write the complete internalStream' as a node' into the originalWriter. " is 121.
Long Statement,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,CreateSignature,The length of the statement  "            CryptoProviderFactory cryptoProviderFactory = _signingCredentials.CryptoProviderFactory ?? _signingCredentials.Key.CryptoProviderFactory; " is 137.
Long Statement,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,CreateSignature,The length of the statement  "                throw LogExceptionMessage(new XmlValidationException(FormatInvariant(LogMessages.IDX30213' cryptoProviderFactory.ToString()' _signingCredentials.Digest))); " is 155.
Long Statement,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,CreateSignature,The length of the statement  "                    reference = new Reference(new EnvelopedSignatureTransform()' new ExclusiveCanonicalizationTransform { InclusiveNamespacesPrefixList = _inclusiveNamespacesPrefixList }) " is 167.
Long Statement,Microsoft.IdentityModel.Xml,EnvelopedSignatureWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureWriter.cs,CreateSignature,The length of the statement  "                    throw LogExceptionMessage(new XmlValidationException(FormatInvariant(LogMessages.IDX30213' cryptoProviderFactory.ToString()' _signingCredentials.Key.ToString()' _signingCredentials.Algorithm))); " is 194.
Long Statement,Microsoft.IdentityModel.Xml,ExclusiveCanonicalizationTransform,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\ExclusiveCanonicalizationTransform.cs,ProcessAndDigest,The length of the statement  "                writer.StartCanonicalization(stream' IncludeComments' XmlUtil.TokenizeInclusiveNamespacesPrefixList(InclusiveNamespacesPrefixList)); " is 132.
Long Statement,Microsoft.IdentityModel.Xml,SignedInfo,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\SignedInfo.cs,GetCanonicalBytes,The length of the statement  "                signedInfoWriter.StartCanonicalization(stream' _canonicalizationMethod.Equals(SecurityAlgorithms.ExclusiveC14nWithComments' StringComparison.Ordinal)' null); " is 157.
Long Statement,Microsoft.IdentityModel.Xml,XmlTokenStreamReader,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlTokenStreamReader.cs,Record,The length of the statement  "                    if (recordSignaturePosition && InnerReader.IsLocalName(XmlSignatureConstants.Elements.Signature) && InnerReader.IsNamespaceUri(XmlSignatureConstants.Namespace)) " is 160.
Long Statement,Microsoft.IdentityModel.Xml,XmlTokenStreamWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlTokenStreamWriter.cs,WriteTo,The length of the statement  "            bool excluedSignatureElement = (XmlSignatureConstants.Elements.Signature == excludedElement && XmlSignatureConstants.Namespace == excludedNamespace); " is 149.
Long Statement,Microsoft.IdentityModel.Xml,XmlUtil,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlUtil.cs,ValidateXsiType,The length of the statement  "                    throw LogExceptionMessage(new XmlException(FormatInvariant(LogMessages.IDX30500' expectedTypeName' expectedTypeNamespace))); " is 124.
Long Statement,Microsoft.IdentityModel.Xml,XmlUtil,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlUtil.cs,ValidateXsiType,The length of the statement  "                throw LogExceptionMessage(new XmlException(FormatInvariant(LogMessages.IDX30501' expectedTypeName' expectedTypeNamespace' declaredType.Name' declaredType.Namespace))); " is 167.
Complex Conditional,Microsoft.IdentityModel.Xml,EnvelopedSignatureReader,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\EnvelopedSignatureReader.cs,Read,The conditional expression  "result                  && !completed                  && InnerReader.IsLocalName(XmlSignatureConstants.Elements.Signature)                  && InnerReader.IsNamespaceUri(XmlSignatureConstants.Namespace)"  is complex.
Complex Conditional,Microsoft.IdentityModel.Xml,KeyInfo,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\KeyInfo.cs,Equals,The conditional expression  "string.Compare(KeyName' other.KeyName' StringComparison.OrdinalIgnoreCase) != 0                  ||string.Compare(RetrievalMethodUri' other.RetrievalMethodUri' StringComparison.OrdinalIgnoreCase) != 0                  || (RSAKeyValue != null && !RSAKeyValue.Equals(other.RSAKeyValue)                  || !new HashSet<X509Data>(X509Data).SetEquals(other.X509Data))"  is complex.
Complex Conditional,Microsoft.IdentityModel.Xml,X509Data,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\X509Data.cs,Equals,The conditional expression  "!IssuerSerial.Equals(other.IssuerSerial) ||                  string.Compare(SKI' other.SKI' StringComparison.OrdinalIgnoreCase) != 0 ||                   string.Compare(SubjectName' other.SubjectName' StringComparison.OrdinalIgnoreCase) != 0 ||                  // certificates may need to be compared in a special way instead of generic string comparison?                  !Enumerable.SequenceEqual(Certificates.OrderBy(t => t)' other.Certificates.OrderBy(t => t)) ||                  string.Compare(CRL' other.CRL' StringComparison.OrdinalIgnoreCase) != 0"  is complex.
Magic Number,Microsoft.IdentityModel.Xml,XmlUtil,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlUtil.cs,GenerateHexString,The following statement contains a magic number: stringBuilder.Append(_hexDictionary[(byte)(b >> 4)]);
Missing Default,Microsoft.IdentityModel.Xml,XmlTokenStreamWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlTokenStreamWriter.cs,WriteTo,The following switch statement is missing a default case: switch (NodeType)                  {                      case XmlNodeType.Element:                          bool isEmpty = IsEmptyElement;                          depth++;                          if (include                              && LocalName == excludedElement                              && Namespace == excludedNamespace                              )                          {                              if (excluedSignatureElement && Position == TokenStream.SignatureElement)                              {                                  include = false;                                  recordedDepth = depth;                              }                          }                          if (include)                          {                              writer.WriteStartElement(Prefix' LocalName' Namespace);                          }                          if (MoveToFirstAttribute())                          {                              do                              {                                  if (include)                                  {                                      writer.WriteAttributeString(Prefix' LocalName' Namespace' Value);                                  }                              }                              while (MoveToNextAttribute());                          }                          if (isEmpty)                          {                              goto case XmlNodeType.EndElement;                          }                          break;                      case XmlNodeType.EndElement:                          if (include)                          {                              writer.WriteEndElement();                          }                          else if (recordedDepth == depth)                          {                              include = true;                              recordedDepth = -1;                          }                          depth--;                          break;                      case XmlNodeType.CDATA:                          if (include)                          {                              writer.WriteCData(Value);                          }                          break;                      case XmlNodeType.Comment:                          if (include)                          {                              writer.WriteComment(Value);                          }                          break;                      case XmlNodeType.Text:                          if (include)                          {                              writer.WriteString(Value);                          }                          break;                      case XmlNodeType.SignificantWhitespace:                      case XmlNodeType.Whitespace:                          if (include)                          {                              writer.WriteWhitespace(Value);                          }                          break;                      case XmlNodeType.DocumentType:                      case XmlNodeType.XmlDeclaration:                          break;                  }
Missing Default,Microsoft.IdentityModel.Xml,XmlTokenStreamWriter,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\src\Microsoft.IdentityModel.Xml\XmlTokenStreamWriter.cs,WriteAndReplaceSignature,The following switch statement is missing a default case: switch (NodeType)                  {                      case XmlNodeType.Element:                          bool isEmpty = IsEmptyElement;                          // if the current XmlToken represents a placeholder signature element' skip writing the placeholder token                          // and write the signature using the provided DSigSerializer.                          if (LocalName == EnvelopedSignatureWriter.SignaturePlaceholder)                          {                              dSigSerializer.WriteSignature(writer' signature);                              include = false;                          }                          else                          {                              writer.WriteStartElement(Prefix' LocalName' Namespace);                          }                          if (MoveToFirstAttribute())                          {                              do                              {                                  if (include)                                  {                                      writer.WriteAttributeString(Prefix' LocalName' Namespace' Value);                                  }                              }                              while (MoveToNextAttribute());                          }                          if (isEmpty)                          {                              goto case XmlNodeType.EndElement;                          }                          break;                      case XmlNodeType.EndElement:                          if (include)                          {                              writer.WriteEndElement();                          }                          else                          {                              // skip writing EndElement as it's already written by the provided DSigSerializer.                              include = true;                          }                          break;                      case XmlNodeType.CDATA:                          writer.WriteCData(Value);                          break;                      case XmlNodeType.Comment:                          writer.WriteComment(Value);                          break;                      case XmlNodeType.Text:                          writer.WriteString(Value);                          break;                      case XmlNodeType.SignificantWhitespace:                      case XmlNodeType.Whitespace:                          writer.WriteWhitespace(Value);                          break;                      case XmlNodeType.DocumentType:                      case XmlNodeType.XmlDeclaration:                          break;                  }
