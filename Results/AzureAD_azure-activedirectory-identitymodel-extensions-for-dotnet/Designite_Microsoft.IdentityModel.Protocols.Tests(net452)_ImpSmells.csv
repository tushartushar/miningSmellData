Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Microsoft.IdentityModel.Protocols.Tests,MessageComparer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\MessageComparer.cs,AreEqual,The length of the parameter authenticationProtocolMessage1 is 30.
Long Identifier,Microsoft.IdentityModel.Protocols.Tests,MessageComparer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\MessageComparer.cs,AreEqual,The length of the parameter authenticationProtocolMessage2 is 30.
Long Statement,Microsoft.IdentityModel.Protocols.Tests,AuthenticationProtocolMessageTests,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\AuthenticationProtocolMessageTests.cs,GetSets,The length of the statement  "            var authenticationProtocolMessage = new DerivedAuthenticationProtocolMessage() { IssuerAddress = "http://www.gotjwt.com" }; " is 123.
Long Statement,Microsoft.IdentityModel.Protocols.Tests,AuthenticationProtocolMessageTests,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\AuthenticationProtocolMessageTests.cs,GetSets,The length of the statement  "                TestUtilities.SetGet(authenticationProtocolMessage' property' null' ExpectedException.ArgumentNullException(substringExpected: property)' context); " is 147.
Long Statement,Microsoft.IdentityModel.Protocols.Tests,AuthenticationProtocolMessageTests,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\AuthenticationProtocolMessageTests.cs,GetSets,The length of the statement  "                TestUtilities.SetGet(authenticationProtocolMessage' property' property' ExpectedException.NoExceptionExpected' context); " is 120.
Long Statement,Microsoft.IdentityModel.Protocols.Tests,AuthenticationProtocolMessageTests,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\AuthenticationProtocolMessageTests.cs,GetSets,The length of the statement  "                TestUtilities.SetGet(authenticationProtocolMessage' property' "\t\n\r"' ExpectedException.NoExceptionExpected' context); " is 120.
Long Statement,Microsoft.IdentityModel.Protocols.Tests,AuthenticationProtocolMessageTests,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\AuthenticationProtocolMessageTests.cs,Publics,The length of the statement  "            AuthenticationProtocolMessage authenticationProtocolMessage = new DerivedAuthenticationProtocolMessage() { IssuerAddress = "http://www.gotjwt.com" }; " is 149.
Long Statement,Microsoft.IdentityModel.Protocols.Tests,MessageComparer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\MessageComparer.cs,AreEqual,The length of the statement  "            if (!DoObjectsHaveSameNullState(authenticationProtocolMessage1.IssuerAddress' authenticationProtocolMessage2.IssuerAddress)) " is 124.
Long Statement,Microsoft.IdentityModel.Protocols.Tests,MessageComparer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\MessageComparer.cs,AreEqual,The length of the statement  "            if (authenticationProtocolMessage1.IssuerAddress != null && authenticationProtocolMessage1.IssuerAddress != authenticationProtocolMessage2.IssuerAddress) " is 153.
Complex Conditional,Microsoft.IdentityModel.Protocols.Tests,MessageComparer,D:\research\architectureSmells\repos\AzureAD_azure-activedirectory-identitymodel-extensions-for-dotnet\test\Microsoft.IdentityModel.Protocols.Tests\MessageComparer.cs,DoObjectsHaveSameNullState,The conditional expression  "(object1 == null && object2 != null) || (object1 != null && object2 == null)"  is complex.
