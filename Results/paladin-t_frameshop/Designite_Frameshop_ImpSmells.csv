Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnMouseMove,Cyclomatic complexity of the method is 15
Complex Method,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnMouseUp,Cyclomatic complexity of the method is 15
Complex Method,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,LoadImageFile,Cyclomatic complexity of the method is 13
Complex Method,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,FindSpace,Cyclomatic complexity of the method is 10
Complex Method,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,Pack,Cyclomatic complexity of the method is 23
Complex Method,Frameshop,FormFrames,C:\repos\paladin-t_frameshop\FormFrames.cs,Active,Cyclomatic complexity of the method is 8
Complex Method,Frameshop,FormMain,C:\repos\paladin-t_frameshop\FormMain.cs,FormMain_Load,Cyclomatic complexity of the method is 11
Complex Method,Frameshop,FormMain,C:\repos\paladin-t_frameshop\FormMain.cs,package_EditStateChanged,Cyclomatic complexity of the method is 47
Complex Method,Frameshop,FormMain,C:\repos\paladin-t_frameshop\FormMain.cs,Open,Cyclomatic complexity of the method is 10
Complex Method,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,Cyclomatic complexity of the method is 11
Complex Method,Frameshop.Anim,Sequence,C:\repos\paladin-t_frameshop\Anim\Sequence.cs,Open,Cyclomatic complexity of the method is 18
Complex Method,Frameshop.Anim,Sequence,C:\repos\paladin-t_frameshop\Anim\Sequence.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,Cyclomatic complexity of the method is 35
Complex Method,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,AddImage,Cyclomatic complexity of the method is 12
Complex Method,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,TryOperation,Cyclomatic complexity of the method is 9
Complex Method,Frameshop.Data,PList,C:\repos\paladin-t_frameshop\Data\PList.cs,ParseValue,Cyclomatic complexity of the method is 12
Complex Method,Frameshop.Data,PList,C:\repos\paladin-t_frameshop\Data\PList.cs,FormatValue,Cyclomatic complexity of the method is 8
Complex Method,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,Cyclomatic complexity of the method is 24
Complex Method,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,Cyclomatic complexity of the method is 19
Complex Method,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadContents,Cyclomatic complexity of the method is 16
Complex Method,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Compress,Cyclomatic complexity of the method is 11
Complex Method,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,Cyclomatic complexity of the method is 8
Complex Method,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,Cyclomatic complexity of the method is 10
Complex Method,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,Cyclomatic complexity of the method is 17
Complex Method,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,Cyclomatic complexity of the method is 16
Complex Method,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,Cyclomatic complexity of the method is 8
Long Parameter List,Frameshop,FormAnimation,C:\repos\paladin-t_frameshop\FormAnimation.cs,menuExportGif_Click,The method has 5 parameters.
Long Parameter List,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,BitBlt,The method has 9 parameters.
Long Parameter List,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,FillColored,The method has 6 parameters.
Long Parameter List,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,FillSpace,The method has 9 parameters.
Long Parameter List,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,Pack,The method has 9 parameters.
Long Parameter List,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,Pack,The method has 7 parameters.
Long Parameter List,Frameshop,FormMain,C:\repos\paladin-t_frameshop\FormMain.cs,PostEvent,The method has 5 parameters.
Long Parameter List,BalloonCS,HoverBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSBalloonTip.cs,SetWindowPos,The method has 7 parameters.
Long Parameter List,BalloonCS,InPlaceBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSInPlaceTip.cs,SetWindowPos,The method has 7 parameters.
Long Parameter List,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetWindowPos,The method has 7 parameters.
Long Parameter List,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,PackPage,The method has 6 parameters.
Long Parameter List,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The method has 5 parameters.
Long Parameter List,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Altersingle,The method has 5 parameters.
Long Statement,Frameshop,FormOption,C:\repos\paladin-t_frameshop\FormOption.cs,btnWhatTex_Click,The length of the statement  "	string msg = "This command will be invoked with target textures one by one as arguments." + Environment.NewLine + CMD_TIP; " is 122.
Long Statement,Frameshop,FormOption,C:\repos\paladin-t_frameshop\FormOption.cs,btnWhatData_Click,The length of the statement  "	string msg = "This command will be invoked with target data files one by one as arguments." + Environment.NewLine + CMD_TIP; " is 124.
Long Statement,Frameshop,FormOption,C:\repos\paladin-t_frameshop\FormOption.cs,btnWhatConvertAnim_Click,The length of the statement  "	string msg = "Animation command will be only called automatically when saving an animation sequence as default;" + "enable this to call it with files at the project folder when publishing as well."; " is 198.
Long Statement,Frameshop,FormOption,C:\repos\paladin-t_frameshop\FormOption.cs,btnWhatAnim_Click,The length of the statement  "	string msg = "This command will be invoked with animation files one by one as arguments." + Environment.NewLine + CMD_TIP; " is 122.
Long Statement,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ScreenShootAroundCursor,The length of the statement  "			BitBlt (hDC' 0' 0' screenShot.Width' screenShot.Height' hSrcDC' cursor.X - ScreenShotSize.Width / 2' cursor.Y - ScreenShotSize.Height / 2' (int)CopyPixelOperation.SourceCopy); " is 175.
Long Statement,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,LoadImageFile,The length of the statement  "				svgDoc.Transforms.Add (new SvgScale (Package.Current.ProjectData.VectorTextureScale' Package.Current.ProjectData.VectorTextureScale)); " is 134.
Long Statement,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,InputBox,The length of the statement  "	string inputStr = Interaction.InputBox (prompt' "Frameshop"' defaultResponse' ((Control)wnd).Location.X' ((Control)wnd).Location.Y); " is 132.
Long Statement,Frameshop,FormFrames,C:\repos\paladin-t_frameshop\FormFrames.cs,pic_CloseButtonPressed,The length of the statement  "		if (Util.AskYesNo (this' "Are you sure to remove frame: " + frame.Name + "?" + Environment.NewLine + "All frames in pages referenced to it will be removed as well.") == DialogResult.No) " is 185.
Long Statement,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,RefreshView,The length of the statement  "	Size s = (SelectedIndex == -1) ? Package.Current.ProjectData.TextureSize : Package.Current.GetPage (SelectedIndex).TextureSize; " is 127.
Long Statement,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,RefreshView,The length of the statement  "	Util.PackResult ret = Util.Pack (SelectedIndex' bmp' ref plist' Util.GrabColored' Util.FillColored' Util.InformIndexed' cannotHold' rotated); " is 141.
Long Statement,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,LoadCachedPage,The length of the statement  "	Size s = (SelectedIndex == -1) ? Package.Current.ProjectData.TextureSize : Package.Current.GetPage (SelectedIndex).TextureSize; " is 127.
Long Statement,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,AddFrame,The length of the statement  "		if ((frame.Image.Width > s.Width || frame.Image.Height > s.Height) && (frame.Image.Width > s.Height || frame.Image.Height > s.Width)) { " is 135.
Long Statement,Frameshop.Anim,Sequence,C:\repos\paladin-t_frameshop\Anim\Sequence.cs,Open,The length of the statement  "			af.Interpolation = p.ContainsKey ("interp") ? AnimFrame.ParseInterpolation (p ["interp"]) : AnimFrame.InterpolateAlgorithm.Linear; " is 130.
Long Statement,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,AddFrameToPage,The length of the statement  "		Util.PackResult ret = Util.Pack (_p' bmp' ref plist' Util.GrabColored' Util.FillColored' Util.InformIndexed' null' null); " is 121.
Long Statement,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,TryChangeFramePadding,The length of the statement  "	return TryOperation (FramePaddingChanged' e' "Change the padding anyway?" + Environment.NewLine + "Click \"Yes\" to change padding and remove these frames' or click \"No\" to revert padding."); " is 193.
Long Statement,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,TryChangeFrameRotationEnabled,The length of the statement  "	return TryOperation (FrameRotationEnabledChanged' e' "Disable rotation anyway?" + Environment.NewLine + "Click \"Yes\" to disable rotation and remove these frames' or click \"No\" to enable rotation again."); " is 208.
Long Statement,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,TryChangePageSize,The length of the statement  "	return TryOperation (PageSizeChanged' e' "Resize this page anyway?" + Environment.NewLine + "Click \"Yes\" to resize and remove these frames' or click \"No\" to revert resizing."); " is 180.
Long Statement,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,PackPage,The length of the statement  "	Util.PackResult ret = Util.Pack (0' bmp' ref plist' Util.GrabColored' Util.FillColored' Util.InformColored' null' null); " is 120.
Long Statement,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The length of the statement  "	int available' clear' code_mask' code_size' end_of_information' in_code' old_code' bits' code' count' i' datum' data_size' first' top' bi' pi; " is 142.
Long Statement,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Contest,The length of the statement  "	/* finds closest neuron (min dist) and updates freq *//* finds best neuron (min dist-bias) and returns position *//* for frequently chosen neurons' freq[i] is high and bias[i] is negative *//* bias[i] = gamma*((1/netsize)-freq[i]) */int i' dist' a' biasdist' betafreq; " is 268.
Complex Conditional,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,RefreshView,The conditional expression  "ret == Util.PackResult.OK || ret == Util.PackResult.Missing || Util.RAII.Has ("OPENING_PROJECT") || forceRefresh"  is complex.
Complex Conditional,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,AddFrame,The conditional expression  "(frame.Image.Width > s.Width || frame.Image.Height > s.Height) && (frame.Image.Width > s.Height || frame.Image.Height > s.Width)"  is complex.
Empty Catch Block,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,UnrelateFileType,The method has an empty catch block.
Empty Catch Block,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,RelateFileType,The method has an empty catch block.
Empty Catch Block,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,OpenWebsite,The method has an empty catch block.
Empty Catch Block,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadBlock,The method has an empty catch block.
Empty Catch Block,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The method has an empty catch block.
Empty Catch Block,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The method has an empty catch block.
Empty Catch Block,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The method has an empty catch block.
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < Height; j += n) {  	bool f = (j / n) % 2 == 0;  	for (int i = 0; i < Width; i += n) {  		if (f)  			g.FillRectangle (Brushes.LightGray' i' j' n' n);  		f = !f;  	}  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: if (ShowCenterPoint) {  	Pen p = new Pen (new HatchBrush (HatchStyle.Cross' Color.Black));  	g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  	g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  }  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2' Height / 2 - 10)' new Point (Width / 2' Height / 2 + 10));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  
Magic Number,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnPaint,The following statement contains a magic number: g.DrawLine (p' new Point (Width / 2 - 10' Height / 2)' new Point (Width / 2 + 10' Height / 2));  
Magic Number,Frameshop,AnimPreviewBox,C:\repos\paladin-t_frameshop\AnimPreviewBox.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < Height; j += n) {  	bool f = (j / n) % 2 == 0;  	for (int i = 0; i < Width; i += n) {  		if (f)  			g.FillRectangle (Brushes.LightGray' i' j' n' n);  		f = !f;  	}  }  
Magic Number,Frameshop,AtlasBox,C:\repos\paladin-t_frameshop\AtlasBox.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < Height; j += n) {  	bool f = (j / n) % 2 == 0;  	for (int i = 0; i < Width; i += n) {  		if (f)  			g.FillRectangle (Brushes.LightGray' i' j' n' n);  		f = !f;  	}  }  
Magic Number,Frameshop,FormAnimation,C:\repos\paladin-t_frameshop\FormAnimation.cs,menuExportGif_Click,The following statement contains a magic number: offset.X += (maxw - ori.Width) / 2;  
Magic Number,Frameshop,FormAnimation,C:\repos\paladin-t_frameshop\FormAnimation.cs,menuExportGif_Click,The following statement contains a magic number: offset.Y += (maxh - ori.Height) / 2;  
Magic Number,Frameshop,FormAnimation,C:\repos\paladin-t_frameshop\FormAnimation.cs,menuExportGif_Click,The following statement contains a magic number: Util.ExportGif (outPath' 200' _frames.ToArray ());  
Magic Number,Frameshop,FormProjectConfiguration,C:\repos\paladin-t_frameshop\FormProjectConfiguration.cs,FormProjectConfiguration,The following statement contains a magic number: cmbWidth.SelectedIndex = 4;  
Magic Number,Frameshop,FormProjectConfiguration,C:\repos\paladin-t_frameshop\FormProjectConfiguration.cs,FormProjectConfiguration,The following statement contains a magic number: cmbHeight.SelectedIndex = 4;  
Magic Number,Frameshop,FormProgress,C:\repos\paladin-t_frameshop\FormProgress.cs,FormProgress,The following statement contains a magic number: progBar.Maximum = 1000;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winProp ["x"] = 20;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winProp ["y"] = 10;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winProp ["w"] = 800;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winProp ["h"] = 600;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winAnim ["x"] = 50;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winAnim ["y"] = 30;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winAnim ["w"] = 640;  
Magic Number,Frameshop,Option,C:\repos\paladin-t_frameshop\Option.cs,Init,The following statement contains a magic number: winAnim ["h"] = 480;  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ScreenShootAroundCursor,The following statement contains a magic number: using (Graphics gdest = Graphics.FromImage (screenShot)) {  	using (Graphics gsrc = Graphics.FromHwnd (IntPtr.Zero)) {  		IntPtr hSrcDC = gsrc.GetHdc ();  		IntPtr hDC = gdest.GetHdc ();  		BitBlt (hDC' 0' 0' screenShot.Width' screenShot.Height' hSrcDC' cursor.X - ScreenShotSize.Width / 2' cursor.Y - ScreenShotSize.Height / 2' (int)CopyPixelOperation.SourceCopy);  		gdest.ReleaseHdc ();  		gsrc.ReleaseHdc ();  	}  }  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ScreenShootAroundCursor,The following statement contains a magic number: using (Graphics gdest = Graphics.FromImage (screenShot)) {  	using (Graphics gsrc = Graphics.FromHwnd (IntPtr.Zero)) {  		IntPtr hSrcDC = gsrc.GetHdc ();  		IntPtr hDC = gdest.GetHdc ();  		BitBlt (hDC' 0' 0' screenShot.Width' screenShot.Height' hSrcDC' cursor.X - ScreenShotSize.Width / 2' cursor.Y - ScreenShotSize.Height / 2' (int)CopyPixelOperation.SourceCopy);  		gdest.ReleaseHdc ();  		gsrc.ReleaseHdc ();  	}  }  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ScreenShootAroundCursor,The following statement contains a magic number: using (Graphics gsrc = Graphics.FromHwnd (IntPtr.Zero)) {  	IntPtr hSrcDC = gsrc.GetHdc ();  	IntPtr hDC = gdest.GetHdc ();  	BitBlt (hDC' 0' 0' screenShot.Width' screenShot.Height' hSrcDC' cursor.X - ScreenShotSize.Width / 2' cursor.Y - ScreenShotSize.Height / 2' (int)CopyPixelOperation.SourceCopy);  	gdest.ReleaseHdc ();  	gsrc.ReleaseHdc ();  }  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ScreenShootAroundCursor,The following statement contains a magic number: using (Graphics gsrc = Graphics.FromHwnd (IntPtr.Zero)) {  	IntPtr hSrcDC = gsrc.GetHdc ();  	IntPtr hDC = gdest.GetHdc ();  	BitBlt (hDC' 0' 0' screenShot.Width' screenShot.Height' hSrcDC' cursor.X - ScreenShotSize.Width / 2' cursor.Y - ScreenShotSize.Height / 2' (int)CopyPixelOperation.SourceCopy);  	gdest.ReleaseHdc ();  	gsrc.ReleaseHdc ();  }  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ScreenShootAroundCursor,The following statement contains a magic number: BitBlt (hDC' 0' 0' screenShot.Width' screenShot.Height' hSrcDC' cursor.X - ScreenShotSize.Width / 2' cursor.Y - ScreenShotSize.Height / 2' (int)CopyPixelOperation.SourceCopy);  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ScreenShootAroundCursor,The following statement contains a magic number: BitBlt (hDC' 0' 0' screenShot.Width' screenShot.Height' hSrcDC' cursor.X - ScreenShotSize.Width / 2' cursor.Y - ScreenShotSize.Height / 2' (int)CopyPixelOperation.SourceCopy);  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ExportGif,The following statement contains a magic number: e.SetTransparent (Color.FromArgb (0' 255' 255' 255));  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ExportGif,The following statement contains a magic number: e.SetTransparent (Color.FromArgb (0' 255' 255' 255));  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,ExportGif,The following statement contains a magic number: e.SetTransparent (Color.FromArgb (0' 255' 255' 255));  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,FindSpace,The following statement contains a magic number: s.Width += page.Padding * 2;  
Magic Number,Frameshop,Util,C:\repos\paladin-t_frameshop\Util.cs,FindSpace,The following statement contains a magic number: s.Height += page.Padding * 2;  
Magic Number,Frameshop,FormFrames,C:\repos\paladin-t_frameshop\FormFrames.cs,cmbFilter_KeyPress,The following statement contains a magic number: if (e.KeyChar == (char)13) {  	if (string.IsNullOrEmpty (cmbFilter.Text)) {  		return;  	}  	else {  		List<Util.ApproximateStringMatchResult> actived = new List<Util.ApproximateStringMatchResult> ();  		if (!string.IsNullOrEmpty (cmbFilter.Text)) {  			foreach (var it in cmbFilter.Items) {  				string txt = it as string;  				float score = Util.ApproximateStringMatch (txt.ToLower ()' cmbFilter.Text.ToLower ());  				if (score >= 0)  					actived.Add (new Util.ApproximateStringMatchResult (txt' score));  			}  		}  		var ad = from a in actived  		orderby -a.Score  		select a.Content;  		Active (ad.ToArray ());  	}  }  
Magic Number,Frameshop,FormMain,C:\repos\paladin-t_frameshop\FormMain.cs,Construct,The following statement contains a magic number: Util.ScreenShotSize = new Size (50' 50);  
Magic Number,Frameshop,FormMain,C:\repos\paladin-t_frameshop\FormMain.cs,Construct,The following statement contains a magic number: Util.ScreenShotSize = new Size (50' 50);  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,FormView,The following statement contains a magic number: cmbMag.SelectedIndex = 3;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: if (e.Delta > 0) {  	int per = (int)(ZoomFactor * 100.0f) + 20;  	if (per > 1000)  		per = 1000;  	Zoom (per);  }  else if (e.Delta < 0) {  	int per = (int)(ZoomFactor * 100.0f) - 20;  	if (per < 0)  		per = 0;  	Zoom (per);  }  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: if (e.Delta > 0) {  	int per = (int)(ZoomFactor * 100.0f) + 20;  	if (per > 1000)  		per = 1000;  	Zoom (per);  }  else if (e.Delta < 0) {  	int per = (int)(ZoomFactor * 100.0f) - 20;  	if (per < 0)  		per = 0;  	Zoom (per);  }  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: if (e.Delta > 0) {  	int per = (int)(ZoomFactor * 100.0f) + 20;  	if (per > 1000)  		per = 1000;  	Zoom (per);  }  else if (e.Delta < 0) {  	int per = (int)(ZoomFactor * 100.0f) - 20;  	if (per < 0)  		per = 0;  	Zoom (per);  }  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: if (e.Delta > 0) {  	int per = (int)(ZoomFactor * 100.0f) + 20;  	if (per > 1000)  		per = 1000;  	Zoom (per);  }  else if (e.Delta < 0) {  	int per = (int)(ZoomFactor * 100.0f) - 20;  	if (per < 0)  		per = 0;  	Zoom (per);  }  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: if (per > 1000)  	per = 1000;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: if (per > 1000)  	per = 1000;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: per = 1000;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseWheel,The following statement contains a magic number: if (e.Delta < 0) {  	int per = (int)(ZoomFactor * 100.0f) - 20;  	if (per < 0)  		per = 0;  	Zoom (per);  }  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseClick,The following statement contains a magic number: if (e.Button == MouseButtons.Middle)  	Zoom (100);  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,atlasBox_MouseClick,The following statement contains a magic number: Zoom (100);  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,OnZoomChanged,The following statement contains a magic number: if (!int.TryParse (str' out per))  	per = 100;  else if (per < 0 || per > 1000)  	per = 100;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,OnZoomChanged,The following statement contains a magic number: if (!int.TryParse (str' out per))  	per = 100;  else if (per < 0 || per > 1000)  	per = 100;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,OnZoomChanged,The following statement contains a magic number: if (!int.TryParse (str' out per))  	per = 100;  else if (per < 0 || per > 1000)  	per = 100;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,OnZoomChanged,The following statement contains a magic number: per = 100;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,OnZoomChanged,The following statement contains a magic number: if (per < 0 || per > 1000)  	per = 100;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,OnZoomChanged,The following statement contains a magic number: if (per < 0 || per > 1000)  	per = 100;  
Magic Number,Frameshop,FormView,C:\repos\paladin-t_frameshop\FormView.cs,OnZoomChanged,The following statement contains a magic number: per = 100;  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0) {  	Application.Run (new FormMain ());  }  else {  	if (args.Length == 1 && args.First ().ToLower () == "-e") {  		Application.Run (new FormMain ());  	}  	else {  		if (args.Length >= 5 && args.First ().ToLower () == "-p") {  			Util.OpenConsole ();  			string pageName = args [1];  			int width' height;  			if (!int.TryParse (args [2]' out width))  				throw new Exception ("Invalid width " + args [2] + ".");  			if (!int.TryParse (args [3]' out height))  				throw new Exception ("Invalid height " + args [3] + ".");  			string outPath = args [4];  			List<string> files = new List<string> ();  			for (int i = 5; i < args.Length; i++) {  				FileInfo fi = new FileInfo (args [i]);  				files.Add (fi.FullName);  			}  			if (files.Count != 0)  				(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  			Util.CloseConsole ();  		}  		else {  			string file = string.Empty;  			foreach (string arg in args)  				file += arg + " ";  			Application.Run (new FormMain (file));  		}  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0) {  	Application.Run (new FormMain ());  }  else {  	if (args.Length == 1 && args.First ().ToLower () == "-e") {  		Application.Run (new FormMain ());  	}  	else {  		if (args.Length >= 5 && args.First ().ToLower () == "-p") {  			Util.OpenConsole ();  			string pageName = args [1];  			int width' height;  			if (!int.TryParse (args [2]' out width))  				throw new Exception ("Invalid width " + args [2] + ".");  			if (!int.TryParse (args [3]' out height))  				throw new Exception ("Invalid height " + args [3] + ".");  			string outPath = args [4];  			List<string> files = new List<string> ();  			for (int i = 5; i < args.Length; i++) {  				FileInfo fi = new FileInfo (args [i]);  				files.Add (fi.FullName);  			}  			if (files.Count != 0)  				(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  			Util.CloseConsole ();  		}  		else {  			string file = string.Empty;  			foreach (string arg in args)  				file += arg + " ";  			Application.Run (new FormMain (file));  		}  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0) {  	Application.Run (new FormMain ());  }  else {  	if (args.Length == 1 && args.First ().ToLower () == "-e") {  		Application.Run (new FormMain ());  	}  	else {  		if (args.Length >= 5 && args.First ().ToLower () == "-p") {  			Util.OpenConsole ();  			string pageName = args [1];  			int width' height;  			if (!int.TryParse (args [2]' out width))  				throw new Exception ("Invalid width " + args [2] + ".");  			if (!int.TryParse (args [3]' out height))  				throw new Exception ("Invalid height " + args [3] + ".");  			string outPath = args [4];  			List<string> files = new List<string> ();  			for (int i = 5; i < args.Length; i++) {  				FileInfo fi = new FileInfo (args [i]);  				files.Add (fi.FullName);  			}  			if (files.Count != 0)  				(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  			Util.CloseConsole ();  		}  		else {  			string file = string.Empty;  			foreach (string arg in args)  				file += arg + " ";  			Application.Run (new FormMain (file));  		}  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0) {  	Application.Run (new FormMain ());  }  else {  	if (args.Length == 1 && args.First ().ToLower () == "-e") {  		Application.Run (new FormMain ());  	}  	else {  		if (args.Length >= 5 && args.First ().ToLower () == "-p") {  			Util.OpenConsole ();  			string pageName = args [1];  			int width' height;  			if (!int.TryParse (args [2]' out width))  				throw new Exception ("Invalid width " + args [2] + ".");  			if (!int.TryParse (args [3]' out height))  				throw new Exception ("Invalid height " + args [3] + ".");  			string outPath = args [4];  			List<string> files = new List<string> ();  			for (int i = 5; i < args.Length; i++) {  				FileInfo fi = new FileInfo (args [i]);  				files.Add (fi.FullName);  			}  			if (files.Count != 0)  				(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  			Util.CloseConsole ();  		}  		else {  			string file = string.Empty;  			foreach (string arg in args)  				file += arg + " ";  			Application.Run (new FormMain (file));  		}  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0) {  	Application.Run (new FormMain ());  }  else {  	if (args.Length == 1 && args.First ().ToLower () == "-e") {  		Application.Run (new FormMain ());  	}  	else {  		if (args.Length >= 5 && args.First ().ToLower () == "-p") {  			Util.OpenConsole ();  			string pageName = args [1];  			int width' height;  			if (!int.TryParse (args [2]' out width))  				throw new Exception ("Invalid width " + args [2] + ".");  			if (!int.TryParse (args [3]' out height))  				throw new Exception ("Invalid height " + args [3] + ".");  			string outPath = args [4];  			List<string> files = new List<string> ();  			for (int i = 5; i < args.Length; i++) {  				FileInfo fi = new FileInfo (args [i]);  				files.Add (fi.FullName);  			}  			if (files.Count != 0)  				(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  			Util.CloseConsole ();  		}  		else {  			string file = string.Empty;  			foreach (string arg in args)  				file += arg + " ";  			Application.Run (new FormMain (file));  		}  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0) {  	Application.Run (new FormMain ());  }  else {  	if (args.Length == 1 && args.First ().ToLower () == "-e") {  		Application.Run (new FormMain ());  	}  	else {  		if (args.Length >= 5 && args.First ().ToLower () == "-p") {  			Util.OpenConsole ();  			string pageName = args [1];  			int width' height;  			if (!int.TryParse (args [2]' out width))  				throw new Exception ("Invalid width " + args [2] + ".");  			if (!int.TryParse (args [3]' out height))  				throw new Exception ("Invalid height " + args [3] + ".");  			string outPath = args [4];  			List<string> files = new List<string> ();  			for (int i = 5; i < args.Length; i++) {  				FileInfo fi = new FileInfo (args [i]);  				files.Add (fi.FullName);  			}  			if (files.Count != 0)  				(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  			Util.CloseConsole ();  		}  		else {  			string file = string.Empty;  			foreach (string arg in args)  				file += arg + " ";  			Application.Run (new FormMain (file));  		}  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 0) {  	Application.Run (new FormMain ());  }  else {  	if (args.Length == 1 && args.First ().ToLower () == "-e") {  		Application.Run (new FormMain ());  	}  	else {  		if (args.Length >= 5 && args.First ().ToLower () == "-p") {  			Util.OpenConsole ();  			string pageName = args [1];  			int width' height;  			if (!int.TryParse (args [2]' out width))  				throw new Exception ("Invalid width " + args [2] + ".");  			if (!int.TryParse (args [3]' out height))  				throw new Exception ("Invalid height " + args [3] + ".");  			string outPath = args [4];  			List<string> files = new List<string> ();  			for (int i = 5; i < args.Length; i++) {  				FileInfo fi = new FileInfo (args [i]);  				files.Add (fi.FullName);  			}  			if (files.Count != 0)  				(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  			Util.CloseConsole ();  		}  		else {  			string file = string.Empty;  			foreach (string arg in args)  				file += arg + " ";  			Application.Run (new FormMain (file));  		}  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 1 && args.First ().ToLower () == "-e") {  	Application.Run (new FormMain ());  }  else {  	if (args.Length >= 5 && args.First ().ToLower () == "-p") {  		Util.OpenConsole ();  		string pageName = args [1];  		int width' height;  		if (!int.TryParse (args [2]' out width))  			throw new Exception ("Invalid width " + args [2] + ".");  		if (!int.TryParse (args [3]' out height))  			throw new Exception ("Invalid height " + args [3] + ".");  		string outPath = args [4];  		List<string> files = new List<string> ();  		for (int i = 5; i < args.Length; i++) {  			FileInfo fi = new FileInfo (args [i]);  			files.Add (fi.FullName);  		}  		if (files.Count != 0)  			(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  		Util.CloseConsole ();  	}  	else {  		string file = string.Empty;  		foreach (string arg in args)  			file += arg + " ";  		Application.Run (new FormMain (file));  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 1 && args.First ().ToLower () == "-e") {  	Application.Run (new FormMain ());  }  else {  	if (args.Length >= 5 && args.First ().ToLower () == "-p") {  		Util.OpenConsole ();  		string pageName = args [1];  		int width' height;  		if (!int.TryParse (args [2]' out width))  			throw new Exception ("Invalid width " + args [2] + ".");  		if (!int.TryParse (args [3]' out height))  			throw new Exception ("Invalid height " + args [3] + ".");  		string outPath = args [4];  		List<string> files = new List<string> ();  		for (int i = 5; i < args.Length; i++) {  			FileInfo fi = new FileInfo (args [i]);  			files.Add (fi.FullName);  		}  		if (files.Count != 0)  			(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  		Util.CloseConsole ();  	}  	else {  		string file = string.Empty;  		foreach (string arg in args)  			file += arg + " ";  		Application.Run (new FormMain (file));  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 1 && args.First ().ToLower () == "-e") {  	Application.Run (new FormMain ());  }  else {  	if (args.Length >= 5 && args.First ().ToLower () == "-p") {  		Util.OpenConsole ();  		string pageName = args [1];  		int width' height;  		if (!int.TryParse (args [2]' out width))  			throw new Exception ("Invalid width " + args [2] + ".");  		if (!int.TryParse (args [3]' out height))  			throw new Exception ("Invalid height " + args [3] + ".");  		string outPath = args [4];  		List<string> files = new List<string> ();  		for (int i = 5; i < args.Length; i++) {  			FileInfo fi = new FileInfo (args [i]);  			files.Add (fi.FullName);  		}  		if (files.Count != 0)  			(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  		Util.CloseConsole ();  	}  	else {  		string file = string.Empty;  		foreach (string arg in args)  			file += arg + " ";  		Application.Run (new FormMain (file));  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 1 && args.First ().ToLower () == "-e") {  	Application.Run (new FormMain ());  }  else {  	if (args.Length >= 5 && args.First ().ToLower () == "-p") {  		Util.OpenConsole ();  		string pageName = args [1];  		int width' height;  		if (!int.TryParse (args [2]' out width))  			throw new Exception ("Invalid width " + args [2] + ".");  		if (!int.TryParse (args [3]' out height))  			throw new Exception ("Invalid height " + args [3] + ".");  		string outPath = args [4];  		List<string> files = new List<string> ();  		for (int i = 5; i < args.Length; i++) {  			FileInfo fi = new FileInfo (args [i]);  			files.Add (fi.FullName);  		}  		if (files.Count != 0)  			(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  		Util.CloseConsole ();  	}  	else {  		string file = string.Empty;  		foreach (string arg in args)  			file += arg + " ";  		Application.Run (new FormMain (file));  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 1 && args.First ().ToLower () == "-e") {  	Application.Run (new FormMain ());  }  else {  	if (args.Length >= 5 && args.First ().ToLower () == "-p") {  		Util.OpenConsole ();  		string pageName = args [1];  		int width' height;  		if (!int.TryParse (args [2]' out width))  			throw new Exception ("Invalid width " + args [2] + ".");  		if (!int.TryParse (args [3]' out height))  			throw new Exception ("Invalid height " + args [3] + ".");  		string outPath = args [4];  		List<string> files = new List<string> ();  		for (int i = 5; i < args.Length; i++) {  			FileInfo fi = new FileInfo (args [i]);  			files.Add (fi.FullName);  		}  		if (files.Count != 0)  			(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  		Util.CloseConsole ();  	}  	else {  		string file = string.Empty;  		foreach (string arg in args)  			file += arg + " ";  		Application.Run (new FormMain (file));  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 1 && args.First ().ToLower () == "-e") {  	Application.Run (new FormMain ());  }  else {  	if (args.Length >= 5 && args.First ().ToLower () == "-p") {  		Util.OpenConsole ();  		string pageName = args [1];  		int width' height;  		if (!int.TryParse (args [2]' out width))  			throw new Exception ("Invalid width " + args [2] + ".");  		if (!int.TryParse (args [3]' out height))  			throw new Exception ("Invalid height " + args [3] + ".");  		string outPath = args [4];  		List<string> files = new List<string> ();  		for (int i = 5; i < args.Length; i++) {  			FileInfo fi = new FileInfo (args [i]);  			files.Add (fi.FullName);  		}  		if (files.Count != 0)  			(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  		Util.CloseConsole ();  	}  	else {  		string file = string.Empty;  		foreach (string arg in args)  			file += arg + " ";  		Application.Run (new FormMain (file));  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length == 1 && args.First ().ToLower () == "-e") {  	Application.Run (new FormMain ());  }  else {  	if (args.Length >= 5 && args.First ().ToLower () == "-p") {  		Util.OpenConsole ();  		string pageName = args [1];  		int width' height;  		if (!int.TryParse (args [2]' out width))  			throw new Exception ("Invalid width " + args [2] + ".");  		if (!int.TryParse (args [3]' out height))  			throw new Exception ("Invalid height " + args [3] + ".");  		string outPath = args [4];  		List<string> files = new List<string> ();  		for (int i = 5; i < args.Length; i++) {  			FileInfo fi = new FileInfo (args [i]);  			files.Add (fi.FullName);  		}  		if (files.Count != 0)  			(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  		Util.CloseConsole ();  	}  	else {  		string file = string.Empty;  		foreach (string arg in args)  			file += arg + " ";  		Application.Run (new FormMain (file));  	}  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 5 && args.First ().ToLower () == "-p") {  	Util.OpenConsole ();  	string pageName = args [1];  	int width' height;  	if (!int.TryParse (args [2]' out width))  		throw new Exception ("Invalid width " + args [2] + ".");  	if (!int.TryParse (args [3]' out height))  		throw new Exception ("Invalid height " + args [3] + ".");  	string outPath = args [4];  	List<string> files = new List<string> ();  	for (int i = 5; i < args.Length; i++) {  		FileInfo fi = new FileInfo (args [i]);  		files.Add (fi.FullName);  	}  	if (files.Count != 0)  		(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  	Util.CloseConsole ();  }  else {  	string file = string.Empty;  	foreach (string arg in args)  		file += arg + " ";  	Application.Run (new FormMain (file));  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 5 && args.First ().ToLower () == "-p") {  	Util.OpenConsole ();  	string pageName = args [1];  	int width' height;  	if (!int.TryParse (args [2]' out width))  		throw new Exception ("Invalid width " + args [2] + ".");  	if (!int.TryParse (args [3]' out height))  		throw new Exception ("Invalid height " + args [3] + ".");  	string outPath = args [4];  	List<string> files = new List<string> ();  	for (int i = 5; i < args.Length; i++) {  		FileInfo fi = new FileInfo (args [i]);  		files.Add (fi.FullName);  	}  	if (files.Count != 0)  		(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  	Util.CloseConsole ();  }  else {  	string file = string.Empty;  	foreach (string arg in args)  		file += arg + " ";  	Application.Run (new FormMain (file));  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 5 && args.First ().ToLower () == "-p") {  	Util.OpenConsole ();  	string pageName = args [1];  	int width' height;  	if (!int.TryParse (args [2]' out width))  		throw new Exception ("Invalid width " + args [2] + ".");  	if (!int.TryParse (args [3]' out height))  		throw new Exception ("Invalid height " + args [3] + ".");  	string outPath = args [4];  	List<string> files = new List<string> ();  	for (int i = 5; i < args.Length; i++) {  		FileInfo fi = new FileInfo (args [i]);  		files.Add (fi.FullName);  	}  	if (files.Count != 0)  		(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  	Util.CloseConsole ();  }  else {  	string file = string.Empty;  	foreach (string arg in args)  		file += arg + " ";  	Application.Run (new FormMain (file));  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 5 && args.First ().ToLower () == "-p") {  	Util.OpenConsole ();  	string pageName = args [1];  	int width' height;  	if (!int.TryParse (args [2]' out width))  		throw new Exception ("Invalid width " + args [2] + ".");  	if (!int.TryParse (args [3]' out height))  		throw new Exception ("Invalid height " + args [3] + ".");  	string outPath = args [4];  	List<string> files = new List<string> ();  	for (int i = 5; i < args.Length; i++) {  		FileInfo fi = new FileInfo (args [i]);  		files.Add (fi.FullName);  	}  	if (files.Count != 0)  		(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  	Util.CloseConsole ();  }  else {  	string file = string.Empty;  	foreach (string arg in args)  		file += arg + " ";  	Application.Run (new FormMain (file));  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 5 && args.First ().ToLower () == "-p") {  	Util.OpenConsole ();  	string pageName = args [1];  	int width' height;  	if (!int.TryParse (args [2]' out width))  		throw new Exception ("Invalid width " + args [2] + ".");  	if (!int.TryParse (args [3]' out height))  		throw new Exception ("Invalid height " + args [3] + ".");  	string outPath = args [4];  	List<string> files = new List<string> ();  	for (int i = 5; i < args.Length; i++) {  		FileInfo fi = new FileInfo (args [i]);  		files.Add (fi.FullName);  	}  	if (files.Count != 0)  		(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  	Util.CloseConsole ();  }  else {  	string file = string.Empty;  	foreach (string arg in args)  		file += arg + " ";  	Application.Run (new FormMain (file));  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 5 && args.First ().ToLower () == "-p") {  	Util.OpenConsole ();  	string pageName = args [1];  	int width' height;  	if (!int.TryParse (args [2]' out width))  		throw new Exception ("Invalid width " + args [2] + ".");  	if (!int.TryParse (args [3]' out height))  		throw new Exception ("Invalid height " + args [3] + ".");  	string outPath = args [4];  	List<string> files = new List<string> ();  	for (int i = 5; i < args.Length; i++) {  		FileInfo fi = new FileInfo (args [i]);  		files.Add (fi.FullName);  	}  	if (files.Count != 0)  		(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  	Util.CloseConsole ();  }  else {  	string file = string.Empty;  	foreach (string arg in args)  		file += arg + " ";  	Application.Run (new FormMain (file));  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (args.Length >= 5 && args.First ().ToLower () == "-p") {  	Util.OpenConsole ();  	string pageName = args [1];  	int width' height;  	if (!int.TryParse (args [2]' out width))  		throw new Exception ("Invalid width " + args [2] + ".");  	if (!int.TryParse (args [3]' out height))  		throw new Exception ("Invalid height " + args [3] + ".");  	string outPath = args [4];  	List<string> files = new List<string> ();  	for (int i = 5; i < args.Length; i++) {  		FileInfo fi = new FileInfo (args [i]);  		files.Add (fi.FullName);  	}  	if (files.Count != 0)  		(new Package ()).PackPage (pageName' width' height' outPath' files.ToArray ());  	Util.CloseConsole ();  }  else {  	string file = string.Empty;  	foreach (string arg in args)  		file += arg + " ";  	Application.Run (new FormMain (file));  }  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (!int.TryParse (args [2]' out width))  	throw new Exception ("Invalid width " + args [2] + ".");  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (!int.TryParse (args [2]' out width))  	throw new Exception ("Invalid width " + args [2] + ".");  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: throw new Exception ("Invalid width " + args [2] + ".");  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (!int.TryParse (args [3]' out height))  	throw new Exception ("Invalid height " + args [3] + ".");  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: if (!int.TryParse (args [3]' out height))  	throw new Exception ("Invalid height " + args [3] + ".");  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: throw new Exception ("Invalid height " + args [3] + ".");  
Magic Number,Frameshop,Program,C:\repos\paladin-t_frameshop\Program.cs,Main,The following statement contains a magic number: for (int i = 5; i < args.Length; i++) {  	FileInfo fi = new FileInfo (args [i]);  	files.Add (fi.FullName);  }  
Magic Number,Frameshop.Anim,AnimFrame,C:\repos\paladin-t_frameshop\Anim\AnimFrame.cs,AnimFrame,The following statement contains a magic number: Alpha = 255;  
Magic Number,Frameshop.Anim,AnimFrame,C:\repos\paladin-t_frameshop\Anim\AnimFrame.cs,AnimFrame,The following statement contains a magic number: Alpha = 255;  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: switch (m_align) {  case BalloonAlignment.TopLeft:  	x = rect.left;  	y = rect.top;  	break;  case BalloonAlignment.TopMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top;  	break;  case BalloonAlignment.TopRight:  	x = rect.left + rect.right;  	y = rect.top;  	break;  case BalloonAlignment.LeftMiddle:  	x = rect.left;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.RightMiddle:  	x = rect.left + rect.right;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.BottomLeft:  	x = rect.left;  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomRight:  	x = rect.left + rect.right;  	y = rect.top + rect.bottom;  	break;  default:  	System.Diagnostics.Debug.Assert (false' "undefined enum"' "default case reached");  	break;  }  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: switch (m_align) {  case BalloonAlignment.TopLeft:  	x = rect.left;  	y = rect.top;  	break;  case BalloonAlignment.TopMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top;  	break;  case BalloonAlignment.TopRight:  	x = rect.left + rect.right;  	y = rect.top;  	break;  case BalloonAlignment.LeftMiddle:  	x = rect.left;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.RightMiddle:  	x = rect.left + rect.right;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.BottomLeft:  	x = rect.left;  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomRight:  	x = rect.left + rect.right;  	y = rect.top + rect.bottom;  	break;  default:  	System.Diagnostics.Debug.Assert (false' "undefined enum"' "default case reached");  	break;  }  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: switch (m_align) {  case BalloonAlignment.TopLeft:  	x = rect.left;  	y = rect.top;  	break;  case BalloonAlignment.TopMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top;  	break;  case BalloonAlignment.TopRight:  	x = rect.left + rect.right;  	y = rect.top;  	break;  case BalloonAlignment.LeftMiddle:  	x = rect.left;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.RightMiddle:  	x = rect.left + rect.right;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.BottomLeft:  	x = rect.left;  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomRight:  	x = rect.left + rect.right;  	y = rect.top + rect.bottom;  	break;  default:  	System.Diagnostics.Debug.Assert (false' "undefined enum"' "default case reached");  	break;  }  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: switch (m_align) {  case BalloonAlignment.TopLeft:  	x = rect.left;  	y = rect.top;  	break;  case BalloonAlignment.TopMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top;  	break;  case BalloonAlignment.TopRight:  	x = rect.left + rect.right;  	y = rect.top;  	break;  case BalloonAlignment.LeftMiddle:  	x = rect.left;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.RightMiddle:  	x = rect.left + rect.right;  	y = rect.top + (rect.bottom / 2);  	break;  case BalloonAlignment.BottomLeft:  	x = rect.left;  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomMiddle:  	x = rect.left + (rect.right / 2);  	y = rect.top + rect.bottom;  	break;  case BalloonAlignment.BottomRight:  	x = rect.left + rect.right;  	y = rect.top + rect.bottom;  	break;  default:  	System.Diagnostics.Debug.Assert (false' "undefined enum"' "default case reached");  	break;  }  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: x = rect.left + (rect.right / 2);  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: y = rect.top + (rect.bottom / 2);  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: y = rect.top + (rect.bottom / 2);  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,SetBalloonPosition,The following statement contains a magic number: x = rect.left + (rect.right / 2);  
Magic Number,BalloonCS,MessageBalloon,C:\repos\paladin-t_frameshop\Balloon\FMSMessageTip.cs,MAKELONG,The following statement contains a magic number: return (hiWord << 16) | (loWord & 0xffff);  
Magic Number,Frameshop.Data,Page,C:\repos\paladin-t_frameshop\Data\Page.cs,Page,The following statement contains a magic number: ColorDepth = 4;  
Magic Number,Frameshop.Data,ProjectData,C:\repos\paladin-t_frameshop\Data\ProjectData.cs,ProjectData,The following statement contains a magic number: TextureSize = new Size (512' 512);  
Magic Number,Frameshop.Data,ProjectData,C:\repos\paladin-t_frameshop\Data\ProjectData.cs,ProjectData,The following statement contains a magic number: TextureSize = new Size (512' 512);  
Magic Number,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,Open,The following statement contains a magic number: try {  	string projectText = File.ReadAllText (path);  	var fileContents = from _c in projectText.Split (new string[] {  		"<?xml version=\"1.0\"?>"  	}' StringSplitOptions.None)  	where !string.IsNullOrEmpty (_c)  	select _c;  	string metaPath = Path.ChangeExtension (path' ".pt");  	File.WriteAllText (metaPath' fileContents.ElementAt (0));  	projectData = serializer.Deserialize<ProjectData> (metaPath);  	string projectDataPath = Path.ChangeExtension (path' ".pp");  	File.WriteAllText (projectDataPath' fileContents.ElementAt (1));  	frames = serializer.Deserialize<List<Frame>> (projectDataPath);  	string pagesPath = Path.ChangeExtension (path' ".pg");  	File.WriteAllText (pagesPath' fileContents.ElementAt (2));  	pages.Clear ();  	pages = serializer.Deserialize<List<Page>> (pagesPath);  	File.Delete (metaPath);  	File.Delete (projectDataPath);  	File.Delete (pagesPath);  	SavePath = path;  	EditState = EditStates.Saved;  }  catch (Exception ex) {  	string msg = ex.Message + Environment.NewLine + "Cannot read a bad or old formatted file.";  	Util.Output ("Failed to open project file: " + path);  	Util.Notice (null' msg);  	return false;  }  
Magic Number,Frameshop.Data,Package,C:\repos\paladin-t_frameshop\Data\Package.cs,Open,The following statement contains a magic number: File.WriteAllText (pagesPath' fileContents.ElementAt (2));  
Magic Number,Frameshop.Data,PList,C:\repos\paladin-t_frameshop\Data\PList.cs,ParseDict,The following statement contains a magic number: for (int i = 0; i < elements.Count (); i += 2) {  	XElement key = elements.ElementAt (i);  	XElement val = elements.ElementAt (i + 1);  	dict [key.Value] = ParseValue (val);  }  
Magic Number,Frameshop.Data,PList,C:\repos\paladin-t_frameshop\Data\PList.cs,ParseDict,The following statement contains a magic number: i += 2
Magic Number,Frameshop.Data,TemporaryFile,C:\repos\paladin-t_frameshop\Data\TemporaryFile.cs,TemporaryFile,The following statement contains a magic number: file = file.Substring (0' file.Length - 4);  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: if (width < 1)  	width = 320;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: width = 320;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: if (height < 1)  	height = 240;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: height = 240;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,AnalyzePixels,The following statement contains a magic number: colorDepth = 8;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,AnalyzePixels,The following statement contains a magic number: palSize = 7;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,FindClosest,The following statement contains a magic number: for (int i = 0; i < len;) {  	int dr = r - (colorTab [i++] & 0xff);  	int dg = g - (colorTab [i++] & 0xff);  	int db = b - (colorTab [i] & 0xff);  	int d = dr * dr + dg * dg + db * db;  	int index = i / 3;  	if (usedEntry [index] && (d < dmin)) {  		dmin = d;  		minpos = index;  	}  	i++;  }  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,GetImagePixels,The following statement contains a magic number: pixels = new Byte[3 * image.Width * image.Height];  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: fs.WriteByte (4);  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: if (transparent == Color.Empty) {  	transp = 0;  	disp = 0;  	// dispose = no action  }  else {  	transp = 1;  	disp = 2;  	// force clear if using transparent color  }  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: disp = 2;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: if (dispose >= 0) {  	disp = dispose & 7;  	// user override  }  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: disp = dispose & 7;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: disp <<= 2;  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteNetscapeExt,The following statement contains a magic number: fs.WriteByte (11);  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteNetscapeExt,The following statement contains a magic number: fs.WriteByte (3);  
Magic Number,Gif.Components,AnimatedGifEncoder,C:\repos\paladin-t_frameshop\Gif\AnimatedGifEncoder.cs,WriteShort,The following statement contains a magic number: fs.WriteByte (Convert.ToByte ((value >> 8) & 0xff));  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose > 0) {  	if (lastDispose == 3) {  		// use image before last  		int n = frameCount - 2;  		if (n > 0) {  			lastImage = GetFrame (n - 1);  		}  		else {  			lastImage = null;  		}  	}  	if (lastImage != null) {  		//				int[] prev =  		//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  		int[] prev = GetPixels (new Bitmap (lastImage));  		Array.Copy (prev' 0' dest' 0' width * height);  		// copy pixels  		if (lastDispose == 2) {  			// fill last image rect area with background color  			Graphics g = Graphics.FromImage (image);  			Color c = Color.Empty;  			if (transparency) {  				c = Color.FromArgb (0' 0' 0' 0);  				// assume background is transparent  			}  			else {  				c = Color.FromArgb (lastBgColor);  				//						c = new Color(lastBgColor); // use given background color  			}  			Brush brush = new SolidBrush (c);  			g.FillRectangle (brush' lastRect);  			brush.Dispose ();  			g.Dispose ();  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose > 0) {  	if (lastDispose == 3) {  		// use image before last  		int n = frameCount - 2;  		if (n > 0) {  			lastImage = GetFrame (n - 1);  		}  		else {  			lastImage = null;  		}  	}  	if (lastImage != null) {  		//				int[] prev =  		//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  		int[] prev = GetPixels (new Bitmap (lastImage));  		Array.Copy (prev' 0' dest' 0' width * height);  		// copy pixels  		if (lastDispose == 2) {  			// fill last image rect area with background color  			Graphics g = Graphics.FromImage (image);  			Color c = Color.Empty;  			if (transparency) {  				c = Color.FromArgb (0' 0' 0' 0);  				// assume background is transparent  			}  			else {  				c = Color.FromArgb (lastBgColor);  				//						c = new Color(lastBgColor); // use given background color  			}  			Brush brush = new SolidBrush (c);  			g.FillRectangle (brush' lastRect);  			brush.Dispose ();  			g.Dispose ();  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose > 0) {  	if (lastDispose == 3) {  		// use image before last  		int n = frameCount - 2;  		if (n > 0) {  			lastImage = GetFrame (n - 1);  		}  		else {  			lastImage = null;  		}  	}  	if (lastImage != null) {  		//				int[] prev =  		//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  		int[] prev = GetPixels (new Bitmap (lastImage));  		Array.Copy (prev' 0' dest' 0' width * height);  		// copy pixels  		if (lastDispose == 2) {  			// fill last image rect area with background color  			Graphics g = Graphics.FromImage (image);  			Color c = Color.Empty;  			if (transparency) {  				c = Color.FromArgb (0' 0' 0' 0);  				// assume background is transparent  			}  			else {  				c = Color.FromArgb (lastBgColor);  				//						c = new Color(lastBgColor); // use given background color  			}  			Brush brush = new SolidBrush (c);  			g.FillRectangle (brush' lastRect);  			brush.Dispose ();  			g.Dispose ();  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose == 3) {  	// use image before last  	int n = frameCount - 2;  	if (n > 0) {  		lastImage = GetFrame (n - 1);  	}  	else {  		lastImage = null;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose == 3) {  	// use image before last  	int n = frameCount - 2;  	if (n > 0) {  		lastImage = GetFrame (n - 1);  	}  	else {  		lastImage = null;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastImage != null) {  	//				int[] prev =  	//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  	int[] prev = GetPixels (new Bitmap (lastImage));  	Array.Copy (prev' 0' dest' 0' width * height);  	// copy pixels  	if (lastDispose == 2) {  		// fill last image rect area with background color  		Graphics g = Graphics.FromImage (image);  		Color c = Color.Empty;  		if (transparency) {  			c = Color.FromArgb (0' 0' 0' 0);  			// assume background is transparent  		}  		else {  			c = Color.FromArgb (lastBgColor);  			//						c = new Color(lastBgColor); // use given background color  		}  		Brush brush = new SolidBrush (c);  		g.FillRectangle (brush' lastRect);  		brush.Dispose ();  		g.Dispose ();  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose == 2) {  	// fill last image rect area with background color  	Graphics g = Graphics.FromImage (image);  	Color c = Color.Empty;  	if (transparency) {  		c = Color.FromArgb (0' 0' 0' 0);  		// assume background is transparent  	}  	else {  		c = Color.FromArgb (lastBgColor);  		//						c = new Color(lastBgColor); // use given background color  	}  	Brush brush = new SolidBrush (c);  	g.FillRectangle (brush' lastRect);  	brush.Dispose ();  	g.Dispose ();  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: iline = 4;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: iline = 2;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: inc = 4;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following statement contains a magic number: inc = 2;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: available = clear + 2;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: for (i = 0; i < npix;) {  	if (top == 0) {  		if (bits < code_size) {  			//  Load bytes until there are enough bits for a code.  			if (count == 0) {  				// Read a new data block.  				count = ReadBlock ();  				if (count <= 0)  					break;  				bi = 0;  			}  			datum += (((int)block [bi]) & 0xff) << bits;  			bits += 8;  			bi++;  			count--;  			continue;  		}  		//  Get the next code.  		code = datum & code_mask;  		datum >>= code_size;  		bits -= code_size;  		//  Interpret the code  		if ((code > available) || (code == end_of_information))  			break;  		if (code == clear) {  			//  Reset decoder.  			code_size = data_size + 1;  			code_mask = (1 << code_size) - 1;  			available = clear + 2;  			old_code = NullCode;  			continue;  		}  		if (old_code == NullCode) {  			pixelStack [top++] = suffix [code];  			old_code = code;  			first = code;  			continue;  		}  		in_code = code;  		if (code == available) {  			pixelStack [top++] = (byte)first;  			code = old_code;  		}  		while (code > clear) {  			pixelStack [top++] = suffix [code];  			code = prefix [code];  		}  		first = ((int)suffix [code]) & 0xff;  		//  Add a new string to the string table'  		if (available >= MaxStackSize)  			break;  		pixelStack [top++] = (byte)first;  		prefix [available] = (short)old_code;  		suffix [available] = (byte)first;  		available++;  		if (((available & code_mask) == 0) && (available < MaxStackSize)) {  			code_size++;  			code_mask += available;  		}  		old_code = in_code;  	}  	//  Pop a pixel off the pixel stack.  	top--;  	pixels [pi++] = pixelStack [top];  	i++;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: for (i = 0; i < npix;) {  	if (top == 0) {  		if (bits < code_size) {  			//  Load bytes until there are enough bits for a code.  			if (count == 0) {  				// Read a new data block.  				count = ReadBlock ();  				if (count <= 0)  					break;  				bi = 0;  			}  			datum += (((int)block [bi]) & 0xff) << bits;  			bits += 8;  			bi++;  			count--;  			continue;  		}  		//  Get the next code.  		code = datum & code_mask;  		datum >>= code_size;  		bits -= code_size;  		//  Interpret the code  		if ((code > available) || (code == end_of_information))  			break;  		if (code == clear) {  			//  Reset decoder.  			code_size = data_size + 1;  			code_mask = (1 << code_size) - 1;  			available = clear + 2;  			old_code = NullCode;  			continue;  		}  		if (old_code == NullCode) {  			pixelStack [top++] = suffix [code];  			old_code = code;  			first = code;  			continue;  		}  		in_code = code;  		if (code == available) {  			pixelStack [top++] = (byte)first;  			code = old_code;  		}  		while (code > clear) {  			pixelStack [top++] = suffix [code];  			code = prefix [code];  		}  		first = ((int)suffix [code]) & 0xff;  		//  Add a new string to the string table'  		if (available >= MaxStackSize)  			break;  		pixelStack [top++] = (byte)first;  		prefix [available] = (short)old_code;  		suffix [available] = (byte)first;  		available++;  		if (((available & code_mask) == 0) && (available < MaxStackSize)) {  			code_size++;  			code_mask += available;  		}  		old_code = in_code;  	}  	//  Pop a pixel off the pixel stack.  	top--;  	pixels [pi++] = pixelStack [top];  	i++;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (top == 0) {  	if (bits < code_size) {  		//  Load bytes until there are enough bits for a code.  		if (count == 0) {  			// Read a new data block.  			count = ReadBlock ();  			if (count <= 0)  				break;  			bi = 0;  		}  		datum += (((int)block [bi]) & 0xff) << bits;  		bits += 8;  		bi++;  		count--;  		continue;  	}  	//  Get the next code.  	code = datum & code_mask;  	datum >>= code_size;  	bits -= code_size;  	//  Interpret the code  	if ((code > available) || (code == end_of_information))  		break;  	if (code == clear) {  		//  Reset decoder.  		code_size = data_size + 1;  		code_mask = (1 << code_size) - 1;  		available = clear + 2;  		old_code = NullCode;  		continue;  	}  	if (old_code == NullCode) {  		pixelStack [top++] = suffix [code];  		old_code = code;  		first = code;  		continue;  	}  	in_code = code;  	if (code == available) {  		pixelStack [top++] = (byte)first;  		code = old_code;  	}  	while (code > clear) {  		pixelStack [top++] = suffix [code];  		code = prefix [code];  	}  	first = ((int)suffix [code]) & 0xff;  	//  Add a new string to the string table'  	if (available >= MaxStackSize)  		break;  	pixelStack [top++] = (byte)first;  	prefix [available] = (short)old_code;  	suffix [available] = (byte)first;  	available++;  	if (((available & code_mask) == 0) && (available < MaxStackSize)) {  		code_size++;  		code_mask += available;  	}  	old_code = in_code;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (top == 0) {  	if (bits < code_size) {  		//  Load bytes until there are enough bits for a code.  		if (count == 0) {  			// Read a new data block.  			count = ReadBlock ();  			if (count <= 0)  				break;  			bi = 0;  		}  		datum += (((int)block [bi]) & 0xff) << bits;  		bits += 8;  		bi++;  		count--;  		continue;  	}  	//  Get the next code.  	code = datum & code_mask;  	datum >>= code_size;  	bits -= code_size;  	//  Interpret the code  	if ((code > available) || (code == end_of_information))  		break;  	if (code == clear) {  		//  Reset decoder.  		code_size = data_size + 1;  		code_mask = (1 << code_size) - 1;  		available = clear + 2;  		old_code = NullCode;  		continue;  	}  	if (old_code == NullCode) {  		pixelStack [top++] = suffix [code];  		old_code = code;  		first = code;  		continue;  	}  	in_code = code;  	if (code == available) {  		pixelStack [top++] = (byte)first;  		code = old_code;  	}  	while (code > clear) {  		pixelStack [top++] = suffix [code];  		code = prefix [code];  	}  	first = ((int)suffix [code]) & 0xff;  	//  Add a new string to the string table'  	if (available >= MaxStackSize)  		break;  	pixelStack [top++] = (byte)first;  	prefix [available] = (short)old_code;  	suffix [available] = (byte)first;  	available++;  	if (((available & code_mask) == 0) && (available < MaxStackSize)) {  		code_size++;  		code_mask += available;  	}  	old_code = in_code;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (bits < code_size) {  	//  Load bytes until there are enough bits for a code.  	if (count == 0) {  		// Read a new data block.  		count = ReadBlock ();  		if (count <= 0)  			break;  		bi = 0;  	}  	datum += (((int)block [bi]) & 0xff) << bits;  	bits += 8;  	bi++;  	count--;  	continue;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: bits += 8;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (code == clear) {  	//  Reset decoder.  	code_size = data_size + 1;  	code_mask = (1 << code_size) - 1;  	available = clear + 2;  	old_code = NullCode;  	continue;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: available = clear + 2;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: if (n < nbytes) {  	status = STATUS_FORMAT_ERROR;  }  else {  	tab = new int[256];  	// max size to avoid bounds checks  	int i = 0;  	int j = 0;  	while (i < ncolors) {  		UInt32 r = ((UInt32)c [j++]) & 0xff;  		UInt32 g = ((UInt32)c [j++]) & 0xff;  		UInt32 b = ((UInt32)c [j++]) & 0xff;  		tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: if (n < nbytes) {  	status = STATUS_FORMAT_ERROR;  }  else {  	tab = new int[256];  	// max size to avoid bounds checks  	int i = 0;  	int j = 0;  	while (i < ncolors) {  		UInt32 r = ((UInt32)c [j++]) & 0xff;  		UInt32 g = ((UInt32)c [j++]) & 0xff;  		UInt32 b = ((UInt32)c [j++]) & 0xff;  		tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: if (n < nbytes) {  	status = STATUS_FORMAT_ERROR;  }  else {  	tab = new int[256];  	// max size to avoid bounds checks  	int i = 0;  	int j = 0;  	while (i < ncolors) {  		UInt32 r = ((UInt32)c [j++]) & 0xff;  		UInt32 g = ((UInt32)c [j++]) & 0xff;  		UInt32 b = ((UInt32)c [j++]) & 0xff;  		tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: tab = new int[256];  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: while (i < ncolors) {  	UInt32 r = ((UInt32)c [j++]) & 0xff;  	UInt32 g = ((UInt32)c [j++]) & 0xff;  	UInt32 b = ((UInt32)c [j++]) & 0xff;  	tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: while (i < ncolors) {  	UInt32 r = ((UInt32)c [j++]) & 0xff;  	UInt32 g = ((UInt32)c [j++]) & 0xff;  	UInt32 b = ((UInt32)c [j++]) & 0xff;  	tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadContents,The following statement contains a magic number: while (!(done || Error ())) {  	int code = Read ();  	switch (code) {  	case 0x2C:  		// image separator  		ReadImage ();  		break;  	case 0x21:  		// extension  		code = Read ();  		switch (code) {  		case 0xf9:  			// graphics control extension  			ReadGraphicControlExt ();  			break;  		case 0xff:  			// application extension  			ReadBlock ();  			String app = "";  			for (int i = 0; i < 11; i++) {  				app += (char)block [i];  			}  			if (app.Equals ("NETSCAPE2.0")) {  				ReadNetscapeExt ();  			}  			else  				Skip ();  			// don't care  			break;  		default:  			// uninteresting extension  			Skip ();  			break;  		}  		break;  	case 0x3b:  		// terminator  		done = true;  		break;  	case 0x00:  		// bad byte' but keep going and see what happens  		break;  	default:  		status = STATUS_FORMAT_ERROR;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadContents,The following statement contains a magic number: switch (code) {  case 0x2C:  	// image separator  	ReadImage ();  	break;  case 0x21:  	// extension  	code = Read ();  	switch (code) {  	case 0xf9:  		// graphics control extension  		ReadGraphicControlExt ();  		break;  	case 0xff:  		// application extension  		ReadBlock ();  		String app = "";  		for (int i = 0; i < 11; i++) {  			app += (char)block [i];  		}  		if (app.Equals ("NETSCAPE2.0")) {  			ReadNetscapeExt ();  		}  		else  			Skip ();  		// don't care  		break;  	default:  		// uninteresting extension  		Skip ();  		break;  	}  	break;  case 0x3b:  	// terminator  	done = true;  	break;  case 0x00:  	// bad byte' but keep going and see what happens  	break;  default:  	status = STATUS_FORMAT_ERROR;  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadContents,The following statement contains a magic number: switch (code) {  case 0xf9:  	// graphics control extension  	ReadGraphicControlExt ();  	break;  case 0xff:  	// application extension  	ReadBlock ();  	String app = "";  	for (int i = 0; i < 11; i++) {  		app += (char)block [i];  	}  	if (app.Equals ("NETSCAPE2.0")) {  		ReadNetscapeExt ();  	}  	else  		Skip ();  	// don't care  	break;  default:  	// uninteresting extension  	Skip ();  	break;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadContents,The following statement contains a magic number: for (int i = 0; i < 11; i++) {  	app += (char)block [i];  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadGraphicControlExt,The following statement contains a magic number: dispose = (packed & 0x1c) >> 2;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadGraphicControlExt,The following statement contains a magic number: delay = ReadShort () * 10;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadHeader,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	id += (char)Read ();  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadImage,The following statement contains a magic number: lctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadImage,The following statement contains a magic number: lctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadLSD,The following statement contains a magic number: gctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadLSD,The following statement contains a magic number: gctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: do {  	ReadBlock ();  	if (block [0] == 1) {  		// loop count sub-block  		int b1 = ((int)block [1]) & 0xff;  		int b2 = ((int)block [2]) & 0xff;  		loopCount = (b2 << 8) | b1;  	}  }  while ((blockSize > 0) && !Error ());  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: do {  	ReadBlock ();  	if (block [0] == 1) {  		// loop count sub-block  		int b1 = ((int)block [1]) & 0xff;  		int b2 = ((int)block [2]) & 0xff;  		loopCount = (b2 << 8) | b1;  	}  }  while ((blockSize > 0) && !Error ());  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: if (block [0] == 1) {  	// loop count sub-block  	int b1 = ((int)block [1]) & 0xff;  	int b2 = ((int)block [2]) & 0xff;  	loopCount = (b2 << 8) | b1;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: if (block [0] == 1) {  	// loop count sub-block  	int b1 = ((int)block [1]) & 0xff;  	int b2 = ((int)block [2]) & 0xff;  	loopCount = (b2 << 8) | b1;  }  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: loopCount = (b2 << 8) | b1;  
Magic Number,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,ReadShort,The following statement contains a magic number: return Read () | (Read () << 8);  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,LZWEncoder,The following statement contains a magic number: initCodeSize = Math.Max (2' color_depth);  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Add,The following statement contains a magic number: if (a_count >= 254)  	Flush (outs);  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,ClearTable,The following statement contains a magic number: free_ent = ClearCode + 2;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Compress,The following statement contains a magic number: free_ent = ClearCode + 2;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Compress,The following statement contains a magic number: for (fcode = hsize; fcode < 65536; fcode *= 2)  	++hshift;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Compress,The following statement contains a magic number: for (fcode = hsize; fcode < 65536; fcode *= 2)  	++hshift;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Compress,The following statement contains a magic number: fcode *= 2
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Compress,The following statement contains a magic number: hshift = 8 - hshift;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits >= 8) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits >= 8) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits >= 8) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_accum >>= 8;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_bits -= 8;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: if (code == EOFCode) {  	// At EOF' write the rest of the buffer.  	while (cur_bits > 0) {  		Add ((byte)(cur_accum & 0xff)' outs);  		cur_accum >>= 8;  		cur_bits -= 8;  	}  	Flush (outs);  }  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: if (code == EOFCode) {  	// At EOF' write the rest of the buffer.  	while (cur_bits > 0) {  		Add ((byte)(cur_accum & 0xff)' outs);  		cur_accum >>= 8;  		cur_bits -= 8;  	}  	Flush (outs);  }  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits > 0) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits > 0) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_accum >>= 8;  
Magic Number,Gif.Components,LZWEncoder,C:\repos\paladin-t_frameshop\Gif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_bits -= 8;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] = new int[4];  	p = network [i];  	p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  	freq [i] = intbias / netsize;  	/* 1/netsize */bias [i] = 0;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] = new int[4];  	p = network [i];  	p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  	freq [i] = intbias / netsize;  	/* 1/netsize */bias [i] = 0;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] = new int[4];  	p = network [i];  	p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  	freq [i] = intbias / netsize;  	/* 1/netsize */bias [i] = 0;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: network [i] = new int[4];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,ColorMap,The following statement contains a magic number: for (int i = 0; i < netsize; i++)  	index [network [i] [3]] = i;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,ColorMap,The following statement contains a magic number: index [network [i] [3]] = i;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,ColorMap,The following statement contains a magic number: for (int i = 0; i < netsize; i++) {  	int j = index [i];  	map [k++] = (byte)(network [j] [0]);  	map [k++] = (byte)(network [j] [1]);  	map [k++] = (byte)(network [j] [2]);  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,ColorMap,The following statement contains a magic number: map [k++] = (byte)(network [j] [2]);  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: j = q [2];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [2] = p [2];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [2] = p [2];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: p [2] = j;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: j = q [3];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [3] = p [3];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [3] = p [3];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: p [3] = j;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (j = previouscol + 1; j < 256; j++)  	netindex [j] = maxnetpos;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: alphadec = 30 + ((samplefac - 1) / 3);  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: alphadec = 30 + ((samplefac - 1) / 3);  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: samplepixels = lengthcount / (3 * samplefac);  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime1;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime2) != 0)  	step = 3 * prime2;  else {  	if ((lengthcount % prime3) != 0)  		step = 3 * prime3;  	else  		step = 3 * prime4;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime2) != 0)  	step = 3 * prime2;  else {  	if ((lengthcount % prime3) != 0)  		step = 3 * prime3;  	else  		step = 3 * prime4;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime2) != 0)  	step = 3 * prime2;  else {  	if ((lengthcount % prime3) != 0)  		step = 3 * prime3;  	else  		step = 3 * prime4;  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime2;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime3) != 0)  	step = 3 * prime3;  else  	step = 3 * prime4;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime3) != 0)  	step = 3 * prime3;  else  	step = 3 * prime4;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime3;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime4;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: while (i < samplepixels) {  	b = (p [pix + 0] & 0xff) << netbiasshift;  	g = (p [pix + 1] & 0xff) << netbiasshift;  	r = (p [pix + 2] & 0xff) << netbiasshift;  	j = Contest (b' g' r);  	Altersingle (alpha' j' b' g' r);  	if (rad != 0)  		Alterneigh (rad' j' b' g' r);  	/* alter neighbours */pix += step;  	if (pix >= lim)  		pix -= lengthcount;  	i++;  	if (delta == 0)  		delta = 1;  	if (i % delta == 0) {  		alpha -= alpha / alphadec;  		radius -= radius / radiusdec;  		rad = radius >> radiusbiasshift;  		if (rad <= 1)  			rad = 0;  		for (j = 0; j < rad; j++)  			radpower [j] = alpha * (((rad * rad - j * j) * radbias) / (rad * rad));  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Learn,The following statement contains a magic number: r = (p [pix + 2] & 0xff) << netbiasshift;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: bestd = 1000;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (i < netsize) {  	p = network [i];  	dist = p [1] - g;  	/* inx key */if (dist >= bestd)  		i = netsize;  	/* stop iter */else {  		i++;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (i < netsize) {  	p = network [i];  	dist = p [1] - g;  	/* inx key */if (dist >= bestd)  		i = netsize;  	/* stop iter */else {  		i++;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	i = netsize;  /* stop iter */else {  	i++;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	i = netsize;  /* stop iter */else {  	i++;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: a = p [2] - r;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	bestd = dist;  	best = p [3];  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: best = p [3];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (j >= 0) {  	p = network [j];  	dist = g - p [1];  	/* inx key - reverse dif */if (dist >= bestd)  		j = -1;  	/* stop iter */else {  		j--;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (j >= 0) {  	p = network [j];  	dist = g - p [1];  	/* inx key - reverse dif */if (dist >= bestd)  		j = -1;  	/* stop iter */else {  		j--;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	j = -1;  /* stop iter */else {  	j--;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	j = -1;  /* stop iter */else {  	j--;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: a = p [2] - r;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	bestd = dist;  	best = p [3];  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Map,The following statement contains a magic number: best = p [3];  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] [0] >>= netbiasshift;  	network [i] [1] >>= netbiasshift;  	network [i] [2] >>= netbiasshift;  	network [i] [3] = i;  	/* record colour no */}  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] [0] >>= netbiasshift;  	network [i] [1] >>= netbiasshift;  	network [i] [2] >>= netbiasshift;  	network [i] [3] = i;  	/* record colour no */}  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: network [i] [2] >>= netbiasshift;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: network [i] [3] = i;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		}  		catch (Exception) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (j < hi) {  	p = network [j++];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	}  	catch (Exception) {  	}  	// prevents 1.3 miscompilation  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (j < hi) {  	p = network [j++];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	}  	catch (Exception) {  	}  	// prevents 1.3 miscompilation  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  }  catch (Exception) {  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  }  catch (Exception) {  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (k > lo) {  	p = network [k--];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	}  	catch (Exception) {  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (k > lo) {  	p = network [k--];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	}  	catch (Exception) {  	}  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  }  catch (Exception) {  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  }  catch (Exception) {  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Altersingle,The following statement contains a magic number: n [2] -= (alpha * (n [2] - r)) / initalpha;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Altersingle,The following statement contains a magic number: n [2] -= (alpha * (n [2] - r)) / initalpha;  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Contest,The following statement contains a magic number: bestd = ~(((int)1) << 31);  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Contest,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	n = network [i];  	dist = n [0] - b;  	if (dist < 0)  		dist = -dist;  	a = n [1] - g;  	if (a < 0)  		a = -a;  	dist += a;  	a = n [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		bestpos = i;  	}  	biasdist = dist - ((bias [i]) >> (intbiasshift - netbiasshift));  	if (biasdist < bestbiasd) {  		bestbiasd = biasdist;  		bestbiaspos = i;  	}  	betafreq = (freq [i] >> betashift);  	freq [i] -= betafreq;  	bias [i] += (betafreq << gammashift);  }  
Magic Number,Gif.Components,NeuQuant,C:\repos\paladin-t_frameshop\Gif\NeuQuant.cs,Contest,The following statement contains a magic number: a = n [2] - r;  
Missing Default,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnMouseMove,The following switch statement is missing a default case: switch (state) {  case AnimBoxState.Common:  	break;  case AnimBoxState.Move:  	if (IndexInSequence != -1) {  		Point offset = new Point (e.Location.X - mouseDownLocation.X' e.Location.Y - mouseDownLocation.Y);  		mouseDownLocation = e.Location;  		OnAnimBoxMoving (offset);  	}  	break;  case AnimBoxState.Quad:  	int l = Math.Min (mouseDownLocation.X' e.Location.X);  	int t = Math.Min (mouseDownLocation.Y' e.Location.Y);  	int r = Math.Max (mouseDownLocation.X' e.Location.X);  	int b = Math.Max (mouseDownLocation.Y' e.Location.Y);  	Rectangle area = new Rectangle (l' t' r - l + 1' b - t + 1);  	OnAnimBoxQuading (area);  	break;  }  
Missing Default,Frameshop,AnimBox,C:\repos\paladin-t_frameshop\AnimBox.cs,OnMouseUp,The following switch statement is missing a default case: switch (state) {  case AnimBoxState.Common:  	break;  case AnimBoxState.Move:  	if (IndexInSequence != -1) {  		Point offset = new Point (e.Location.X - mouseDownLocation.X' e.Location.Y - mouseDownLocation.Y);  		mouseDownLocation = e.Location;  		OnAnimBoxMoved (offset);  	}  	break;  case AnimBoxState.Quad:  	int l = Math.Min (mouseDownLocation.X' e.Location.X);  	int t = Math.Min (mouseDownLocation.Y' e.Location.Y);  	int r = Math.Max (mouseDownLocation.X' e.Location.X);  	int b = Math.Max (mouseDownLocation.Y' e.Location.Y);  	Rectangle area = new Rectangle (l' t' r - l + 1' b - t + 1);  	OnAnimBoxQuaded (area);  	break;  }  
Missing Default,Frameshop,FormMain,C:\repos\paladin-t_frameshop\FormMain.cs,package_EditStateChanged,The following switch statement is missing a default case: switch (Package.Current.EditState) {  case EditStates.Closed:  	btnNew.Enabled = true;  	btnOpen.Enabled = true;  	break;  case EditStates.New:  	btnNew.Enabled = true;  	btnOpen.Enabled = true;  	btnSave.Enabled = true;  	btnSaveAs.Enabled = true;  	btnAddImage.Enabled = true;  	btnAddFolder.Enabled = true;  	btnPublish.Enabled = true;  	btnAnim.Enabled = true;  	viewPanel.Text += " *";  	propertyPanel.Enabled = true;  	viewPanel.Enabled = true;  	framesPanel.Enabled = true;  	outputPanel.Enabled = true;  	break;  case EditStates.OpenedNotSaved:  	btnNew.Enabled = true;  	btnOpen.Enabled = true;  	btnSave.Enabled = true;  	btnSaveAs.Enabled = true;  	btnAddImage.Enabled = true;  	btnAddFolder.Enabled = true;  	btnPublish.Enabled = true;  	btnAnim.Enabled = true;  	viewPanel.Text += " *";  	propertyPanel.Enabled = true;  	viewPanel.Enabled = true;  	framesPanel.Enabled = true;  	outputPanel.Enabled = true;  	break;  case EditStates.Saved:  	btnNew.Enabled = true;  	btnOpen.Enabled = true;  	btnSaveAs.Enabled = true;  	btnAddImage.Enabled = true;  	btnAddFolder.Enabled = true;  	btnPublish.Enabled = true;  	btnAnim.Enabled = true;  	propertyPanel.Enabled = true;  	viewPanel.Enabled = true;  	framesPanel.Enabled = true;  	outputPanel.Enabled = true;  	break;  }  
Missing Default,Gif.Components,GifDecoder,C:\repos\paladin-t_frameshop\Gif\GifDecoder.cs,SetPixels,The following switch statement is missing a default case: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
