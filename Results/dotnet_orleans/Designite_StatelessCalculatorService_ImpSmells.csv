Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,StatelessCalculatorService,ServiceEventSource,C:\repos\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,ServiceMessage,The method has 8 parameters. Parameters: serviceName' serviceTypeName' replicaOrInstanceId' partitionId' applicationName' applicationTypeName' nodeName' message
Long Identifier,StatelessCalculatorService,ServiceEventSource,C:\repos\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,,The length of the parameter ServiceHostInitializationFailedEventId is 38.
Long Statement,StatelessCalculatorService,Program,C:\repos\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\Program.cs,Main,The length of the statement  "                ServiceEventSource.Current.ServiceTypeRegistered(Process.GetCurrentProcess().Id' typeof(StatelessCalculatorService).Name); " is 122.
Long Statement,StatelessCalculatorService,ServiceEventSource,C:\repos\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,ServiceMessage,The length of the statement  "            WriteEvent(ServiceMessageEventId' serviceName' serviceTypeName' replicaOrInstanceId' partitionId' applicationName' applicationTypeName' nodeName' message); " is 155.
Long Statement,StatelessCalculatorService,ServiceEventSource,C:\repos\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,ServiceMessage,The length of the statement  "            fixed (char* pServiceName = serviceName' pServiceTypeName = serviceTypeName' pApplicationName = applicationName' pApplicationTypeName = applicationTypeName' pNodeName = nodeName' pMessage = message) " is 198.
Magic Number,StatelessCalculatorService,BootstrapProvider,C:\repos\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\BootstrapProvider.cs,Init,The following statement contains a magic number: Task.Factory.StartNew(                  async () =>                  {                      while (true)                      {                          try                          {                              var value = await grain.Add(1);                              logger.Info($"{value - 1} + 1 = {value}");                              await Task.Delay(TimeSpan.FromSeconds(4));                          }                          catch (Exception exception)                          {                              logger.Warn(exception.HResult' "Exception in bootstrap provider. Ignoring."' exception);                          }                      }                  }).Ignore();
Magic Number,StatelessCalculatorService,StatelessCalculatorService,C:\repos\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,RunAsync,The following statement contains a magic number: while (true)              {                  cancellationToken.ThrowIfCancellationRequested();                  await Task.Delay(TimeSpan.FromSeconds(10)' cancellationToken);              }
