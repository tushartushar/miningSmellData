Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,StatelessCalculatorService,EventSourceLogger,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,Log,The method has 7 parameters.
Long Parameter List,StatelessCalculatorService,ServiceEventSource,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,ServiceMessage,The method has 8 parameters.
Long Statement,StatelessCalculatorService,Program,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\Program.cs,Main,The length of the statement  "		ServiceRuntime.RegisterServiceAsync ("StatelessCalculatorServiceType"' context => new StatelessCalculatorService (context)).Wait (); " is 132.
Long Statement,StatelessCalculatorService,Program,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\Program.cs,Main,The length of the statement  "		ServiceEventSource.Current.ServiceTypeRegistered (Process.GetCurrentProcess ().Id' typeof(StatelessCalculatorService).Name); " is 124.
Long Statement,StatelessCalculatorService,ServiceEventSource,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,ServiceMessage,The length of the statement  "		ServiceMessage (service.Context.ServiceName.ToString ()' service.Context.ServiceTypeName' service.Context.InstanceId' service.Context.PartitionId' service.Context.CodePackageActivationContext.ApplicationName' service.Context.CodePackageActivationContext.ApplicationTypeName' service.Context.NodeContext.NodeName' finalMessage); " is 327.
Long Statement,StatelessCalculatorService,ServiceEventSource,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,ServiceMessage,The length of the statement  "	WriteEvent (ServiceMessageEventId' serviceName' serviceTypeName' replicaOrInstanceId' partitionId' applicationName' applicationTypeName' nodeName' message); " is 156.
Long Statement,StatelessCalculatorService,ServiceEventSource,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\ServiceEventSource.cs,ServiceMessage,The length of the statement  "            fixed (char* pServiceName = serviceName' pServiceTypeName = serviceTypeName' pApplicationName = applicationName' pApplicationTypeName = applicationTypeName' pNodeName = nodeName' pMessage = message)" is 198.
Magic Number,StatelessCalculatorService,StatelessCalculatorService,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,RunAsync,The following statement contains a magic number: while (true) {  	cancellationToken.ThrowIfCancellationRequested ();  	await Task.Delay (TimeSpan.FromSeconds (10)' cancellationToken);  }  
Magic Number,StatelessCalculatorService,StatelessCalculatorService,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,RunAsync,The following statement contains a magic number: await Task.Delay (TimeSpan.FromSeconds (10)' cancellationToken);  
Magic Number,StatelessCalculatorService,BootstrapProvider,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,Init,The following statement contains a magic number: Task.Factory.StartNew (async () => {  	while (true) {  		try {  			var oldValue = await grain.Get ();  			var value = await grain.Add (1);  			//logger.Info($"{oldValue} + 1 = {value}");  			await Task.Delay (TimeSpan.FromSeconds (4));  		} catch (Exception exception) {  			logger.Warn (exception.HResult' "Exception in bootstrap provider. Ignoring."' exception);  		}  	}  }).Ignore ();  
Magic Number,StatelessCalculatorService,BootstrapProvider,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,Init,The following statement contains a magic number: while (true) {  	try {  		var oldValue = await grain.Get ();  		var value = await grain.Add (1);  		//logger.Info($"{oldValue} + 1 = {value}");  		await Task.Delay (TimeSpan.FromSeconds (4));  	} catch (Exception exception) {  		logger.Warn (exception.HResult' "Exception in bootstrap provider. Ignoring."' exception);  	}  }  
Magic Number,StatelessCalculatorService,BootstrapProvider,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,Init,The following statement contains a magic number: try {  	var oldValue = await grain.Get ();  	var value = await grain.Add (1);  	//logger.Info($"{oldValue} + 1 = {value}");  	await Task.Delay (TimeSpan.FromSeconds (4));  } catch (Exception exception) {  	logger.Warn (exception.HResult' "Exception in bootstrap provider. Ignoring."' exception);  }  
Magic Number,StatelessCalculatorService,BootstrapProvider,F:\newReposMay17\dotnet_orleans\Samples\ServiceFabric\Stateless\StatelessCalculatorService\StatelessCalculatorService.cs,Init,The following statement contains a magic number: await Task.Delay (TimeSpan.FromSeconds (4));  
