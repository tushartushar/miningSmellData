Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,GetManager,The method has 5 parameters. Parameters: serviceId' clusterId' storageConnectionString' tableName' loggerFactory
Long Parameter List,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,RemindersTableManager,The method has 5 parameters. Parameters: serviceId' clusterId' storageConnectionString' tableName' loggerFactory
Long Identifier,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadTableEntriesAndEtagsAsync,The length of the parameter executeQueryHandleContinuations is 31.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,Init,The length of the statement  "                this.clusterOptions.ServiceId' this.clusterOptions.ClusterId' this.storageOptions.ConnectionString' this.storageOptions.TableName' this.loggerFactory); " is 151.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,ConvertFromTableEntry,The length of the statement  "                        $"Read a reminder entry for wrong Service id. Read {tableEntry}' but my service id is {serviceIdStr}. Going to discard it."; " is 124.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,ReadRows,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace("Read for grain {0} Table=" + Environment.NewLine + "{1}"' key' data.ToString()); " is 142.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,ReadRows,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace("Read in {0} Table=" + Environment.NewLine + "{1}"' RangeFactory.CreateRange(begin' end)' data); " is 157.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,ReadRows,The length of the statement  "                    $"Intermediate error reading reminders in range {RangeFactory.CreateRange(begin' end)} for table {this.remTableManager.TableName}."' exc); " is 138.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,ReadRow,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Debug)) this.logger.Debug("ReadRow grainRef = {0} reminderName = {1}"' grainRef' reminderName); " is 130.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,ReadRow,The length of the statement  "                    $"Intermediate error reading row with grainId = {grainRef} reminderName = {reminderName} from table {this.remTableManager.TableName}."' exc); " is 141.
Long Statement,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,UpsertRow,The length of the statement  "                ReminderTableEntry remTableEntry = ConvertToTableEntry(entry' this.remTableManager.ServiceId' this.remTableManager.ClusterId); " is 126.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,FindReminderEntries,The length of the statement  "                    TableQuery.GenerateFilterCondition(nameof(ReminderTableEntry.PartitionKey)' QueryComparisons.GreaterThan' serviceIdStr + '_')' " is 126.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,FindReminderEntries,The length of the statement  "                filterOnServiceIdStr' TableOperators.And' TableQuery.GenerateFilterCondition(nameof(ReminderTableEntry.PartitionKey)' QueryComparisons.GreaterThan' sBegin)); " is 157.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,FindReminderEntries,The length of the statement  "                filterOnServiceIdStr' TableOperators.And' TableQuery.GenerateFilterCondition(nameof(ReminderTableEntry.PartitionKey)' QueryComparisons.LessThanOrEqual' sEnd)); " is 159.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,FindReminderEntries,The length of the statement  "            IEnumerable<Tuple<ReminderTableEntry' string>>[] results = await Task.WhenAll(resultsOnSBeginQuery' resultsOnSEndQuery); " is 120.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,FindReminderEntries,The length of the statement  "                    TableQuery.GenerateFilterCondition(nameof(ReminderTableEntry.RowKey)' QueryComparisons.GreaterThan' grainRef.ToKeyString() + '-')' " is 130.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,UpsertRow,The length of the statement  "                    if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("UpsertRow failed with httpStatusCode={0}' restStatus={1}"' httpStatusCode' restStatus); " is 139.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,DeleteReminderEntryConditionally,The length of the statement  "                    if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("DeleteReminderEntryConditionally failed with httpStatusCode={0}' restStatus={1}"' httpStatusCode' restStatus); " is 162.
Long Statement,Orleans.Runtime.ReminderService,RemindersTableManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\RemindersTableManager.cs,DeleteTableEntries,The length of the statement  "                // return manager.DeleteTableEntries(entries); // this doesnt work as entries can be across partitions' which is not allowed " is 124.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Info((int)Utilities.ErrorCode.AzureTable_01' "{0} Azure storage table {1}"' (didCreate ? "Created" : "Attached to")' TableName); " is 135.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Error((int)Utilities.ErrorCode.AzureTable_02' $"Could not initialize connection to storage table {TableName}"' exc); " is 123.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} partitionKey {2} rowKey = {3}"' operation' TableName' partitionKey' rowKey); " is 142.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Could not find table entry for PartitionKey={0} RowKey={1}"' partitionKey' rowKey); " is 135.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadAllTableEntriesForPartitionAsync,The length of the statement  "            string query = TableQuery.GenerateFilterCondition(nameof(ITableEntity.PartitionKey)' QueryComparisons.Equal' partitionKey); " is 123.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,DeleteTableEntriesAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Deleting {0} table entries: {1}"' TableName' Utils.EnumerableToString(collection)); " is 135.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,BulkInsertTableEntries,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Bulk inserting {0} entries to {1} table"' collection.Count' TableName); " is 123.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} into table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 132.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 127.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "            if (AzureTableUtils.EvaluateException(exc' out httpStatusCode' out restStatus) && AzureTableUtils.IsContentionError(httpStatusCode)) " is 132.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "                    $"Intermediate Azure table write error {operation} to table {TableName} data1 {(data1 ?? "null")} data2 {(data2 ?? "null")}"' exc); " is 131.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertSlowAccess,The length of the statement  "                Logger.Warn((int)Utilities.ErrorCode.AzureTable_15' "Slow access to Azure Table {0} for {1}' which took {2}."' TableName' operation' timeSpan); " is 143.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.Conflict) return true;     //Primary key violation. The app is trying to insert an entity' but there’s an entity on the table with the same values for PartitionKey and RowKey properties on the entity being inserted. " is 252.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsNotFoundError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The length of the statement  "            // http://www.jamestharpe.com/web-development/azure-table-service-character-combinations-disallowed-in-partitionkey-rowkey/ " is 123.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an Azure table key. Key={1}"' key.Length' key)); " is 124.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                    $"Intermediate issue reading Azure storage table {tableName}: HTTP status code={statusCode} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 157.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                            $"Intermediate issue reading Azure storage table {tableName}:{(iteration == 0 ? "" : (" Repeat=" + iteration))} IsRetriable={isLastErrorRetriable} HTTP status code={httpStatusCode} REST status code={restStatus} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 276.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                        $"Unexpected issue reading Azure storage table {tableName}: Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 125.
Long Statement,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,PrintStorageException,The length of the statement  "                            String.Format("' ExtendedErrorInformation.AdditionalDetails = {0}"' Utils.DictionaryToString(extendedError.AdditionalDetails)) : String.Empty); " is 143.
Empty Catch Block,Orleans.Runtime.ReminderService,AzureBasedReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Reminders.AzureStorage\Storage\AzureBasedReminderTable.cs,ConvertFromTableEntryList,The method has an empty catch block.
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableCreationRetries = 60;
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableCreationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromSeconds(1)                  : TimeSpan.FromSeconds(100);
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableOperationRetries = 5;
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableOperationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(100)                  : TimeSpan.FromSeconds(10);
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableOperationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(100)                  : TimeSpan.FromSeconds(10);
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxBusyRetries = 120;
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenBusyRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(500)                  : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenBusyRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(500)                  : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableCreationTimeout = TimeSpan.FromMilliseconds(PauseBetweenTableCreationRetries.TotalMilliseconds * MaxTableCreationRetries * 3);
Magic Number,Orleans.Reminders.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableOperationTimeout = TimeSpan.FromMilliseconds(PauseBetweenTableOperationRetries.TotalMilliseconds * MaxTableOperationRetries *6);
Magic Number,Orleans.Reminders.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The following statement contains a magic number: key.Length >= 1024
