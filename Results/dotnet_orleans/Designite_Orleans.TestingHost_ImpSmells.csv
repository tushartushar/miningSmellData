Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,StartSiloAsync,The method has 5 parameters. Parameters: cluster' instanceNumber' clusterOptions' configurationOverrides' startSiloOnNewPort
Long Parameter List,Orleans.TestingHost,FaultInjectionGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultInjectionStorageProvider.cs,FaultInjectionGrainStorage,The method has 5 parameters. Parameters: realStorageProvider' name' loggerFactory' grainFactory' faultInjectionOptions
Long Parameter List,Orleans.TestingHost.Logging,FileLoggingOutput,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Logging\FileLogger.cs,Log,The method has 6 parameters. Parameters: logLevel' eventId' state' exception' formatter' category
Long Parameter List,Orleans.TestingHost.Logging,FileLoggingOutput,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Logging\FileLogger.cs,FormatMessage,The method has 6 parameters. Parameters: timestamp' logLevel' caller' message' exception' errorCode
Long Parameter List,Orleans.TestingHost.Logging,FileLogger,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Logging\FileLogger.cs,Log,The method has 5 parameters. Parameters: logLevel' eventId' state' exception' formatter
Long Parameter List,Orleans.TestingHost.Utils,NullTelemetryProducer,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Utils\NullTelemetryProducer.cs,TrackDependency,The method has 5 parameters. Parameters: name' commandName' startTime' duration' success
Long Parameter List,Orleans.TestingHost.Utils,NullTelemetryProducer,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Utils\NullTelemetryProducer.cs,TrackRequest,The method has 5 parameters. Parameters: name' startTime' duration' responseCode' success
Long Identifier,Orleans.TestingHost,SiloHostBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultyMemoryStorage.cs,AddFaultInjectionMemoryStorage,The length of the parameter configureFaultInjecitonOptions is 30.
Long Identifier,Orleans.TestingHost,SiloHostBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultyMemoryStorage.cs,AddFaultInjectionMemoryStorage,The length of the parameter configureFaultInjecitonOptions is 30.
Long Identifier,Orleans.TestingHost,SiloHostBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultyMemoryStorage.cs,AddFaultInjectionMemoryStorage,The length of the parameter configureFaultInjecitonOptions is 30.
Long Identifier,Orleans.TestingHost,SiloHostBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultyMemoryStorage.cs,AddFaultInjectionMemoryStorage,The length of the parameter configureFaultInjecitonOptions is 30.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,DeployAsync,The length of the statement  "            if (this.Primary != null || this.additionalSilos.Count > 0) throw new InvalidOperationException("Cluster host already deployed."); " is 130.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,DeployAsync,The length of the statement  "                string startMsg = "----------------------------- STARTING NEW UNIT TEST SILO HOST: " + GetType().FullName + " -------------------------------------"; " is 149.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,DeployAsync,The length of the statement  "                // More details: http://dobrzanski.net/2010/09/20/mstest-unit-test-adapter-threw-exception-type-is-not-resolved-for-member/ " is 123.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,WaitForInitialStabilization,The length of the statement  "                    WriteLog($"Warning! {remainingSilos} silos do not have a consistent cluster view after {totalWait.ElapsedMilliseconds}ms' continuing without stabilization."); " is 158.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,WaitForLivenessToStabilizeAsync,The length of the statement  "            WriteLog(Environment.NewLine + Environment.NewLine + "WaitForLivenessToStabilize is about to sleep for {0}"' stabilizationTime); " is 128.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,GetLivenessStabilizationTime,The length of the statement  "                stabilizationTime = TestingUtils.Multiply(clusterMembershipOptions.ProbeTimeout' clusterMembershipOptions.NumMissedProbesLimit); " is 128.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,StartAdditionalSilosAsync,The length of the statement  "                    .Select(instanceNumber => Task.Run(() => StartSiloAsync((short)instanceNumber' this.options' startSiloOnNewPort: startAdditionalSiloOnNewPort))).ToArray(); " is 155.
Long Statement,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,InitializeClient,The length of the statement  "            this.InternalClient = (IInternalClusterClient)TestClusterHostFactory.CreateClusterClient("MainClient"' this.ConfigurationSources); " is 130.
Long Statement,Orleans.TestingHost,TestClusterExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterExtensions.cs,GetConfiguration,The length of the statement  "                $"Expected configuration object in \"Configuration\" property of type {nameof(IConfiguration)} on {nameof(ISiloHostBuilder)}."); " is 128.
Long Statement,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,CreateSiloHost,The length of the statement  "                    // TODO: Instead of passing the sources individually' just chain the pre-built configuration once we upgrade to Microsoft.Extensions.Configuration 2.1 " is 150.
Long Statement,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,ConfigureAppServices,The length of the statement  "            var builderConfiguratorTypes = configuration.GetSection(nameof(TestClusterOptions.SiloBuilderConfiguratorTypes))?.Get<string[]>(); " is 130.
Long Statement,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,ConfigureAppServices,The length of the statement  "                    var builderConfigurator = (ISiloBuilderConfigurator)Activator.CreateInstance(Type.GetType(builderConfiguratorType' true)); " is 122.
Long Statement,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,ConfigureAppServices,The length of the statement  "            var builderConfiguratorTypes = configuration.GetSection(nameof(TestClusterOptions.ClientBuilderConfiguratorTypes))?.Get<string[]>(); " is 132.
Long Statement,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,ConfigureAppServices,The length of the statement  "                    var builderConfigurator = (IClientBuilderConfigurator)Activator.CreateInstance(Type.GetType(builderConfiguratorType' true)); " is 124.
Long Statement,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,TryConfigureTestClusterMembership,The length of the statement  "            bool.TryParse(context.Configuration[nameof(TestClusterOptions.UseTestClusterMembership)]' out bool useTestClusterMembership); " is 125.
Long Statement,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,TryConfigureTestClusterMembership,The length of the statement  "                var primarySiloEndPoint = new IPEndPoint(IPAddress.Loopback' int.Parse(context.Configuration[nameof(TestSiloSpecificOptions.PrimarySiloPort)])); " is 144.
Long Statement,Orleans.TestingHost,TestSiloSpecificOptions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterOptions.cs,Create,The length of the statement  "                    GatewayPort = (instanceNumber == 0 || testClusterOptions.GatewayPerSilo) ? testClusterOptions.BaseGatewayPort + instanceNumber : 0' " is 131.
Long Statement,Orleans.TestingHost,FaultInjectionGrainStorageFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultInjectionStorageProvider.cs,Create,The length of the statement  "            return new FaultInjectionGrainStorage(injectedGrainStorageFactory(services'name)' name' services.GetRequiredService<ILoggerFactory>()' services.GetRequiredService<IGrainFactory>()' " is 180.
Long Statement,Orleans.TestingHost,SiloHostBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultyMemoryStorage.cs,AddFaultInjectionMemoryStorage,The length of the statement  "            services.AddSingletonNamedService<IGrainStorage>(name' (svc' n) => FaultInjectionGrainStorageFactory.Create(svc' n' MemoryGrainStorageFactory.Create)) " is 150.
Long Statement,Orleans.TestingHost,SiloHostBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\FaultyMemoryStorage.cs,AddFaultInjectionMemoryStorage,The length of the statement  "                .AddSingletonNamedService<ILifecycleParticipant<ISiloLifecycle>>(name' (s' n) => (ILifecycleParticipant<ISiloLifecycle>)s.GetRequiredServiceByName<IGrainStorage>(n)); ; " is 168.
Long Statement,Orleans.TestingHost,StorageFaultGrain,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestStorageProviders\StorageFaultGrain.cs,OnActivateAsync,The length of the statement  "            logger = this.ServiceProvider.GetService<ILoggerFactory>().CreateLogger($"{typeof (StorageFaultGrain).FullName}-{IdentityString}-{RuntimeIdentity}"); " is 149.
Long Statement,Orleans.TestingHost.Utils,StorageEmulator,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Utils\StorageEmulator.cs,GetProgramFilesBasePath,The length of the statement  "            return Environment.Is64BitOperatingSystem ? Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) : Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles); " is 181.
Empty Catch Block,Orleans.TestingHost,InProcessSiloHandle,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\InProcessSiloHandle.cs,Dispose,The method has an empty catch block.
Magic Number,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,WaitForInitialStabilization,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(100));
Magic Number,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,WaitForInitialStabilization,The following statement contains a magic number: totalWait.Elapsed < TimeSpan.FromSeconds(60)
Magic Number,Orleans.TestingHost,TestCluster,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestCluster.cs,GetLivenessStabilizationTime,The following statement contains a magic number: stabilizationTime += TimeSpan.FromSeconds(5);
Magic Number,Orleans.TestingHost,TestClusterBuilder,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterBuilder.cs,CreateClusterId,The following statement contains a magic number: int randomSuffix = ThreadSafeRandom.Next(1000);
Magic Number,Orleans.TestingHost,TestClusterBuilder,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterBuilder.cs,ConfigureDefaultPorts,The following statement contains a magic number: (int baseSiloPort' int baseGatewayPort) = GetAvailableConsecutiveServerPortsPair(this.Options.InitialSilosCount + 3);
Magic Number,Orleans.TestingHost,TestClusterBuilder,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterBuilder.cs,GetAvailableConsecutiveServerPortsPair,The following statement contains a magic number: return (GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 22300' 30000' consecutivePortsToCheck)'                  GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 40000' 50000' consecutivePortsToCheck));
Magic Number,Orleans.TestingHost,TestClusterBuilder,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterBuilder.cs,GetAvailableConsecutiveServerPortsPair,The following statement contains a magic number: return (GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 22300' 30000' consecutivePortsToCheck)'                  GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 40000' 50000' consecutivePortsToCheck));
Magic Number,Orleans.TestingHost,TestClusterBuilder,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterBuilder.cs,GetAvailableConsecutiveServerPortsPair,The following statement contains a magic number: return (GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 22300' 30000' consecutivePortsToCheck)'                  GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 40000' 50000' consecutivePortsToCheck));
Magic Number,Orleans.TestingHost,TestClusterBuilder,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterBuilder.cs,GetAvailableConsecutiveServerPortsPair,The following statement contains a magic number: return (GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 22300' 30000' consecutivePortsToCheck)'                  GetAvailableConsecutiveServerPorts(tcpConnInfoArray' 40000' 50000' consecutivePortsToCheck));
Magic Number,Orleans.TestingHost,TestClusterBuilder,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterBuilder.cs,GetAvailableConsecutiveServerPorts,The following statement contains a magic number: const int MaxAttempts = 10;
Magic Number,Orleans.TestingHost,TestClusterHostFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\TestClusterHostFactory.cs,CreateSiloHost,The following statement contains a magic number: hostBuilder.ConfigureServices((context' services) =>              {                  services.AddSingleton<TestHooksHostEnvironmentStatistics>();                  services.AddFromExisting<IHostEnvironmentStatistics' TestHooksHostEnvironmentStatistics>();                  services.AddSingleton<TestHooksSystemTarget>();                  ConfigureListeningPorts(context' services);                    TryConfigureTestClusterMembership(context' services);                  TryConfigureFileLogging(configuration' services' siloName);                    if (Debugger.IsAttached)                  {                      // Test is running inside debugger - Make timeout ~= infinite                      services.Configure<SiloMessagingOptions>(op => op.ResponseTimeout = TimeSpan.FromMilliseconds(1000000));                  }              });
Magic Number,Orleans.TestingHost.Utils,AsyncResultHandle,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Utils\AsyncResultHandle.cs,WaitFor,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(200));
Magic Number,Orleans.TestingHost.Utils,AsyncResultHandle,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Utils\AsyncResultHandle.cs,WaitFor,The following statement contains a magic number: remaining -= 200;
Magic Number,Orleans.TestingHost.Utils,TestingUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Utils\TestingUtils.cs,RoundTripDotNetSerializer,The following statement contains a magic number: MemoryStream stream = new MemoryStream(new byte[100000]' true);
Magic Number,Orleans.TestingHost.Utils,ThreadSafeRandom,D:\research\architectureSmells\repos\dotnet_orleans\src\Orleans.TestingHost\Utils\ThreadSafeRandom.cs,GetRandom,The following statement contains a magic number: byte[] buffer = new byte[4];
