Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.EventSourcing.CustomStorage,CustomStorageAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\CustomStorage\LogViewAdaptor.cs,WriteAsync,Cyclomatic complexity of the method is 9
Complex Method,Orleans.EventSourcing.LogStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogStorage\LogViewAdaptor.cs,WriteAsync,Cyclomatic complexity of the method is 9
Long Parameter List,Orleans.EventSourcing.CustomStorage,LogConsistencyProvider,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\CustomStorage\LogConsistencyProvider.cs,MakeLogViewAdaptor,The method has 5 parameters.
Long Parameter List,Orleans.EventSourcing.LogStorage,DefaultAdaptorFactory,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogStorage\DefaultAdaptorFactory.cs,MakeLogViewAdaptor,The method has 5 parameters.
Long Parameter List,Orleans.EventSourcing.LogStorage,LogConsistencyProvider,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogStorage\LogConsistencyProvider.cs,MakeLogViewAdaptor,The method has 5 parameters.
Long Parameter List,Orleans.EventSourcing.LogStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogStorage\LogViewAdaptor.cs,LogViewAdaptor,The method has 5 parameters.
Long Parameter List,Orleans.EventSourcing.StateStorage,DefaultAdaptorFactory,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\DefaultAdaptorFactory.cs,MakeLogViewAdaptor,The method has 5 parameters.
Long Parameter List,Orleans.EventSourcing.StateStorage,LogConsistencyProvider,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\LogConsistencyProvider.cs,MakeLogViewAdaptor,The method has 5 parameters.
Long Parameter List,Orleans.EventSourcing.StateStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\LogViewAdaptor.cs,LogViewAdaptor,The method has 5 parameters.
Long Parameter List,Orleans.EventSourcing,JournaledGrain,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\JournaledGrain.cs,InstallAdaptor,The method has 5 parameters.
Long Statement,Orleans.Runtime.Configuration,LogConsistencyConfigurationExtensions,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogConsistencyConfigurationExtensions.cs,AddCustomStorageInterfaceBasedLogConsistencyProvider,The length of the statement  "	config.Globals.RegisterLogConsistencyProvider<EventSourcing.CustomStorage.LogConsistencyProvider> (providerName' properties); " is 125.
Long Statement,Orleans.EventSourcing.CustomStorage,CustomStorageAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\CustomStorage\LogViewAdaptor.cs,MayAccessStorage,The length of the statement  "	return (!Services.MultiClusterEnabled) || string.IsNullOrEmpty (primaryCluster) || primaryCluster == Services.MyClusterId; " is 122.
Long Statement,Orleans.EventSourcing.CustomStorage,CustomStorageAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\CustomStorage\LogViewAdaptor.cs,OnMessageReceived,The length of the statement  "		throw new ProtocolTransportException ("message destined for primary cluster ended up elsewhere (inconsistent configurations?)"); " is 128.
Long Statement,Orleans.EventSourcing.CustomStorage,LogConsistencyProvider,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\CustomStorage\LogConsistencyProvider.cs,Init,The length of the statement  "	Log.Info ("Init (Severity={0}) PrimaryCluster={1}"' Log.SeverityLevel' string.IsNullOrEmpty (PrimaryCluster) ? "(none specified)" : PrimaryCluster); " is 148.
Long Statement,Orleans.EventSourcing.LogStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogStorage\LogViewAdaptor.cs,Merge,The length of the statement  "	if (earlier != null && later != null && earlier.Origin == later.Origin && earlier.Version + later.Updates.Count == later.Version && earlier.Updates.Count + later.Updates.Count < maxEntriesInNotifications) " is 204.
Long Statement,Orleans.EventSourcing.LogStorage,LogStateWithMetaDataAndETag,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogStorage\LogStateWithMetaData.cs,ToString,The length of the statement  "	return string.Format ("v{0} Flags={1} ETag={2} Data={3}"' StateAndMetaData.GlobalVersion' StateAndMetaData.WriteVector' ETag' StateAndMetaData.Log); " is 148.
Long Statement,Orleans.EventSourcing.Common,PrimaryBasedLogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\PrimaryBasedLogViewAdaptor.cs,OnNotificationReceived,The length of the statement  "	throw new ProtocolTransportException (string.Format ("message type {0} not handled by OnNotificationReceived"' payload.GetType ().FullName)); " is 141.
Long Statement,Orleans.EventSourcing.Common,PrimaryBasedLogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\PrimaryBasedLogViewAdaptor.cs,RemoveStaleConditionalUpdates,The length of the statement  "		if (submissionEntry.ConditionalPosition != unconditional && (foundFailedConditionalUpdates || submissionEntry.ConditionalPosition != (version + pos))) { " is 152.
Long Statement,Orleans.EventSourcing.StateStorage,GrainStateWithMetaDataAndETag,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\GrainStateWithMetaData.cs,ToString,The length of the statement  "	return string.Format ("v{0} Flags={1} ETag={2} Data={3}"' StateAndMetaData.GlobalVersion' StateAndMetaData.WriteVector' ETag' StateAndMetaData.State); " is 150.
Long Statement,Orleans.EventSourcing.StateStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\LogViewAdaptor.cs,WriteAsync,The length of the statement  "			Services.Log (Severity.Verbose' "last write ({0} updates) was actually a success {1}"' updates.Length' GlobalStateCache); " is 121.
Long Statement,Orleans.EventSourcing.StateStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\LogViewAdaptor.cs,Merge,The length of the statement  "	if (earlier != null && later != null && earlier.Origin == later.Origin && earlier.Version + later.Updates.Count == later.Version && earlier.Updates.Count + later.Updates.Count < maxEntriesInNotifications) " is 204.
Long Statement,Orleans.EventSourcing.StateStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\LogViewAdaptor.cs,ProcessNotifications,The length of the statement  "		Services.Log (Severity.Verbose' "notification success ({0} updates) {1}"' updateNotification.Updates.Count' GlobalStateCache); " is 126.
Long Statement,Orleans.EventSourcing,JournaledGrain,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\JournaledGrain.cs,InstallAdaptor,The length of the statement  "	LogViewAdaptor = factory.MakeLogViewAdaptor<TGrainState' TEventBase> (this' (TGrainState)initialState' graintypename' storageProvider' services); " is 145.
Complex Conditional,Orleans.EventSourcing.LogStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\LogStorage\LogViewAdaptor.cs,Merge,The conditional expression  "earlier != null && later != null && earlier.Origin == later.Origin && earlier.Version + later.Updates.Count == later.Version && earlier.Updates.Count + later.Updates.Count < maxEntriesInNotifications"  is complex.
Complex Conditional,Orleans.EventSourcing.StateStorage,LogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\StateStorage\LogViewAdaptor.cs,Merge,The conditional expression  "earlier != null && later != null && earlier.Origin == later.Origin && earlier.Version + later.Updates.Count == later.Version && earlier.Updates.Count + later.Updates.Count < maxEntriesInNotifications"  is complex.
Magic Number,Orleans.EventSourcing.Common,NotificationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (NumberOfConsecutiveFailures < 3)  	return TimeSpan.FromMilliseconds (1);  else if (NumberOfConsecutiveFailures < 1000)  	return TimeSpan.FromSeconds (30);  else  	return TimeSpan.FromMinutes (1);  
Magic Number,Orleans.EventSourcing.Common,NotificationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (NumberOfConsecutiveFailures < 3)  	return TimeSpan.FromMilliseconds (1);  else if (NumberOfConsecutiveFailures < 1000)  	return TimeSpan.FromSeconds (30);  else  	return TimeSpan.FromMinutes (1);  
Magic Number,Orleans.EventSourcing.Common,NotificationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (NumberOfConsecutiveFailures < 3)  	return TimeSpan.FromMilliseconds (1);  else if (NumberOfConsecutiveFailures < 1000)  	return TimeSpan.FromSeconds (30);  else  	return TimeSpan.FromMinutes (1);  
Magic Number,Orleans.EventSourcing.Common,NotificationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (NumberOfConsecutiveFailures < 1000)  	return TimeSpan.FromSeconds (30);  else  	return TimeSpan.FromMinutes (1);  
Magic Number,Orleans.EventSourcing.Common,NotificationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (NumberOfConsecutiveFailures < 1000)  	return TimeSpan.FromSeconds (30);  else  	return TimeSpan.FromMinutes (1);  
Magic Number,Orleans.EventSourcing.Common,NotificationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: return TimeSpan.FromSeconds (30);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (previous.Value.TotalMilliseconds < slowpollinterval)  	backoff = (int)((backoff + random.Next (5' 15)) * 1.5);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (previous.Value.TotalMilliseconds < slowpollinterval)  	backoff = (int)((backoff + random.Next (5' 15)) * 1.5);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (previous.Value.TotalMilliseconds < slowpollinterval)  	backoff = (int)((backoff + random.Next (5' 15)) * 1.5);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: backoff = (int)((backoff + random.Next (5' 15)) * 1.5);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: backoff = (int)((backoff + random.Next (5' 15)) * 1.5);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: backoff = (int)((backoff + random.Next (5' 15)) * 1.5);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: if (backoff > slowpollinterval)  	backoff = slowpollinterval + random.Next (1' 200);  
Magic Number,Orleans.EventSourcing.Common,PrimaryOperationFailed,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\ConnectionIssues.cs,ComputeRetryDelay,The following statement contains a magic number: backoff = slowpollinterval + random.Next (1' 200);  
Magic Number,Orleans.EventSourcing.Common,PrimaryBasedLogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\PrimaryBasedLogViewAdaptor.cs,EnsureClusterJoinedAsync,The following statement contains a magic number: while (!IsMyClusterJoined ()) {  	Services.Log (Severity.Verbose' "Waiting for join");  	await Task.Delay (5000);  }  
Magic Number,Orleans.EventSourcing.Common,PrimaryBasedLogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\PrimaryBasedLogViewAdaptor.cs,EnsureClusterJoinedAsync,The following statement contains a magic number: await Task.Delay (5000);  
Magic Number,Orleans.EventSourcing.Common,PrimaryBasedLogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\PrimaryBasedLogViewAdaptor.cs,GetCaughtUpWithConfigurationAsync,The following statement contains a magic number: while (Configuration == null || Configuration.AdminTimestamp < adminTimestamp) {  	Services.Log (Severity.Verbose' "Waiting for config {0}"' adminTimestamp);  	await Task.Delay (5000);  }  
Magic Number,Orleans.EventSourcing.Common,PrimaryBasedLogViewAdaptor,F:\newReposMay17\dotnet_orleans\src\OrleansEventSourcing\Common\PrimaryBasedLogViewAdaptor.cs,GetCaughtUpWithConfigurationAsync,The following statement contains a magic number: await Task.Delay (5000);  
