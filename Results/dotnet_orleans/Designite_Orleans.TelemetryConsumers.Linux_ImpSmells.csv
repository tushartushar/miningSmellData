Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,WriteToStatistics,The length of the statement  "            IntValueStatistic.FindOrCreate(StatisticNames.RUNTIME_GC_TOTALMEMORYKB' () => (long)((MemoryUsage + KB - 1.0) / KB)); // Round up " is 129.
Long Statement,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,WriteToStatistics,The length of the statement  "            IntValueStatistic.FindOrCreate(StatisticNames.RUNTIME_MEMORY_TOTALPHYSICALMEMORYMB' () => (long)((TotalPhysicalMemory / KB) / KB)); " is 131.
Long Statement,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,WriteToStatistics,The length of the statement  "            IntValueStatistic.FindOrCreate(StatisticNames.RUNTIME_MEMORY_AVAILABLEMEMORYMB' () => (long)((AvailableMemory / KB) / KB)); // Round up " is 135.
Long Statement,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,Monitor,The length of the statement  "                    var logStr = $"LinuxEnvironmentStatistics: CpuUsage={CpuUsage?.ToString("0.0")}' TotalPhysicalMemory={TotalPhysicalMemory}' AvailableMemory={AvailableMemory}"; " is 159.
Long Statement,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,ReadLineStartingWithAsync,The length of the statement  "            using (var fs = new FileStream(path' FileMode.Open' FileAccess.Read' FileShare.Read' 512' FileOptions.SequentialScan | FileOptions.Asynchronous)) " is 145.
Empty Catch Block,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,OnStop,The method has an empty catch block.
Magic Number,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,UpdateCpuUsage,The following statement contains a magic number: var cpuNumberStrings = cpuUsageLine.Split(' ').Skip(2);
Magic Number,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,UpdateCpuUsage,The following statement contains a magic number: var idleTime = cpuNumbers[3];
Magic Number,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,UpdateCpuUsage,The following statement contains a magic number: var currentCpuUsage = (1.0f - deltaIdleTime / ((float)deltaTotalTime)) * 100f;
Magic Number,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,UpdateCpuUsage,The following statement contains a magic number: CpuUsage = (previousCpuUsage + 2 * currentCpuUsage) / 3;
Magic Number,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,UpdateCpuUsage,The following statement contains a magic number: CpuUsage = (previousCpuUsage + 2 * currentCpuUsage) / 3;
Magic Number,Orleans.Statistics,LinuxEnvironmentStatistics,D:\research\architectureSmells\repos\dotnet_orleans\src\TelemetryConsumers\Orleans.TelemetryConsumers.Linux\LinuxEnvironmentStatistics.cs,Monitor,The following statement contains a magic number: i < 2
