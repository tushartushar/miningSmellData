Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapterFactory<TDataAdapter>,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapterFactory.cs,Init,Cyclomatic complexity of the method is 11
Complex Method,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,PubSubDataManager,Cyclomatic complexity of the method is 8
Long Parameter List,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapter<TDataAdapter>,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapter.cs,PubSubAdapter,The method has 10 parameters. Parameters: dataAdapter' serializationManager' loggerFactory' streamQueueMapper' projectId' topicId' deploymentId' providerName' deadline' customEndpoint
Long Parameter List,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapter<TDataAdapter>,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapter.cs,QueueMessageBatchAsync,The method has 5 parameters. Parameters: streamGuid' streamNamespace' events' token' requestContext
Long Parameter List,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapterReceiver,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapterReceiver.cs,Create,The method has 9 parameters. Parameters: serializationManager' loggerFactory' queueId' projectId' topicId' deploymentId' dataAdapter' deadline' customEndpoint
Long Parameter List,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapterReceiver,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapterReceiver.cs,PubSubAdapterReceiver,The method has 6 parameters. Parameters: serializationManager' loggerFactory' queueId' topicId' pubSub' dataAdapter
Long Parameter List,Orleans.Providers.GCP.Streams.PubSub,PubSubBatchContainer,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubBatchContainer.cs,PubSubBatchContainer,The method has 5 parameters. Parameters: streamGuid' streamNamespace' events' requestContext' sequenceToken
Long Parameter List,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,PubSubDataManager,The method has 7 parameters. Parameters: loggerFactory' projectId' topicId' subscriptionId' deploymentId' deadline' customEndpoint
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubDataAdapter,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\IPubSubDataAdapter.cs,ToPubSubMessage,The length of the statement  "            var batchMessage = new PubSubBatchContainer(streamGuid' streamNamespace' events.Cast<object>().ToList()' requestContext); " is 121.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapter<TDataAdapter>,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapter.cs,CreateReceiver,The length of the statement  "            return PubSubAdapterReceiver.Create(_serializationManager' this.loggerFactory' queueId' ProjectId' TopicId' DeploymentId' _dataAdapter' Deadline' _customEndpoint); " is 163.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapter<TDataAdapter>,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapter.cs,QueueMessageBatchAsync,The length of the statement  "            if (token != null) throw new ArgumentException("Google PubSub stream provider currently does not support non-null StreamSequenceToken."' nameof(token)); " is 152.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapter<TDataAdapter>,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapter.cs,QueueMessageBatchAsync,The length of the statement  "                var tmpPubSub = new PubSubDataManager(this.loggerFactory' ProjectId' TopicId' queueId.ToString()' DeploymentId' Deadline); " is 122.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapterFactory<TDataAdapter>,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapterFactory.cs,CreateAdapter,The length of the statement  "            var adapter = new PubSubAdapter<TDataAdapter>(_adaptorFactory()' SerializationManager' this.loggerFactory' _streamQueueMapper'  " is 126.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapterReceiver,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapterReceiver.cs,Create,The length of the statement  "            var pubSub = new PubSubDataManager(loggerFactory' projectId' topicId' queueId.ToString()' deploymentId' deadline' customEndpoint); " is 130.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubAdapterReceiver,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubAdapterReceiver.cs,Shutdown,The length of the statement  "                // await the last pending operation' so after we shutdown and stop this receiver we don't get async operation completions from pending operations. " is 146.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubBatchContainer,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubBatchContainer.cs,GetEvents,The length of the statement  "            return events.OfType<T>().Select((e' i) => Tuple.Create<T' StreamSequenceToken>(e' sequenceToken.CreateSequenceTokenForEvent(i))); " is 130.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,Initialize,The length of the statement  "            _logger.Info((int)GoogleErrorCode.Initializing' "{0} Google PubSub Topic {1}"' (didCreate ? "Created" : "Attached to")' TopicName.TopicId); " is 139.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,Initialize,The length of the statement  "            _logger.Info((int)GoogleErrorCode.Initializing' "{0} Google PubSub Subscription {1} to Topic {2}"' (didCreate ? "Created" : "Attached to")' SubscriptionName.SubscriptionId' TopicName.TopicId); " is 192.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,GetMessages,The length of the statement  "            if (_logger.IsEnabled(LogLevel.Trace)) _logger.Trace("Getting {0} message(s) from Google PubSub topic {1}"' count' TopicName.TopicId); " is 134.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,GetMessages,The length of the statement  "                _logger.Trace("Received {0} message(s) from Google PubSub topic {1}"' response.ReceivedMessages.Count' TopicName.TopicId); " is 122.
Long Statement,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,AcknowledgeMessages,The length of the statement  "            if (_logger.IsEnabled(LogLevel.Trace)) _logger.Trace("Deleting {0} message(s) from Google PubSub topic {1}"' count' TopicName.TopicId); " is 135.
Magic Number,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,PubSubDataManager,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace(customEndpoint))              {                  var hostPort = customEndpoint.Split(new char[] { ':' }' StringSplitOptions.RemoveEmptyEntries);                  if (hostPort.Length != 2) throw new ArgumentException(nameof(customEndpoint));                    var host = hostPort[0];                  int port;                  if (!int.TryParse(hostPort[1]' out port)) throw new ArgumentException(nameof(customEndpoint));                    _customEndpoint = new ServiceEndpoint(host' port);              }
Magic Number,Orleans.Providers.GCP.Streams.PubSub,PubSubDataManager,C:\repos\dotnet_orleans\src\Orleans.Streaming.GCP\Providers\Streams\PubSub\PubSubDataManager.cs,Initialize,The following statement contains a magic number: try              {                  _subscriber = await SubscriberClient.CreateAsync(_customEndpoint);                  _subscription = await _subscriber.CreateSubscriptionAsync(SubscriptionName' TopicName' pushConfig: null'                      ackDeadlineSeconds: _deadline.HasValue ? (int)_deadline.Value.TotalSeconds : 60);                  didCreate = true;              }              catch (RpcException e)              {                  if (e.Status.StatusCode != StatusCode.AlreadyExists)                      ReportErrorAndRethrow(e' "CreateSubscriptionAsync"' GoogleErrorCode.Initializing);                    _subscription = await _subscriber.GetSubscriptionAsync(SubscriptionName);              }
