Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,F:\newReposMay17\dotnet_orleans\src\OrleansTelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,WriteMetric,Cyclomatic complexity of the method is 14
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,F:\newReposMay17\dotnet_orleans\src\OrleansTelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,AreWindowsPerfCountersAvailable,The length of the statement  "			logger.Warn (ErrorCode.PerfCounterNotFound' "Windows perf counters are only available on Windows :) -- defaulting to in-memory counters."); " is 139.
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,F:\newReposMay17\dotnet_orleans\src\OrleansTelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,AreWindowsPerfCountersAvailable,The length of the statement  "		logger.Warn (ErrorCode.PerfCounterCategoryCheckError' string.Format ("Ignoring error checking for {0} perf counter category"' CATEGORY_NAME)' exc); " is 147.
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,F:\newReposMay17\dotnet_orleans\src\OrleansTelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,InstallCounters,The length of the statement  "	PerformanceCounterCategory.Create (CATEGORY_NAME' CATEGORY_DESCRIPTION' PerformanceCounterCategoryType.SingleInstance' collection); " is 131.
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,F:\newReposMay17\dotnet_orleans\src\OrleansTelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,WriteMetric,The length of the statement  "		logger.Error (ErrorCode.PerfCounterUnableToWrite' string.Format ("Unable to write to Windows perf counter '{0}'"' statsName)' ex); " is 130.
Missing Default,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,F:\newReposMay17\dotnet_orleans\src\OrleansTelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,WriteMetric,The following switch statement is missing a default case: switch (mode) {  case UpdateMode.Increment:  	if (value.HasValue) {  		cd.PerfCounter.IncrementBy ((long)value.Value);  	} else {  		cd.PerfCounter.Increment ();  	}  	break;  case UpdateMode.Decrement:  	if (value.HasValue) {  		cd.PerfCounter.RawValue = cd.PerfCounter.RawValue - (long)value.Value;  	} else {  		cd.PerfCounter.Decrement ();  	}  	break;  case UpdateMode.Set:  	cd.PerfCounter.RawValue = (long)value.Value;  	break;  }  
