Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,ConstructGrainId,The length of the parameter interfaceTypeCodeOrImplClassName is 32.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,PrintUsage,The length of the statement  "    OrleansManager unregister <grain interface type code (int)|grain implementation class name (string)> <grain id long|grain id Guid> " is 130.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,PrintUsage,The length of the statement  "    OrleansManager lookup <grain interface type code (int)|grain implementation class name (string)> <grain id long|grain id Guid> " is 126.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,PrintUsage,The length of the statement  "    OrleansManager grainReport <grain interface type code (int)|grain implementation class name (string)> <grain id long|grain id Guid> " is 131.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,LookupGrain,The length of the statement  "            Console.WriteLine("**There {0} {1} activations registered in the directory for this grain. The activations are:"' (list.Count > 1) ? "are" : "is"' list.Count); " is 159.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,GetImplementation,The length of the statement  "            if (grainTypeResolver.TryGetGrainClassData(interfaceId' out implementation' grainClassNamePrefix)) return implementation; " is 121.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,GetImplementation,The length of the statement  "                string.Format("Cannot find an implementation class for grain interface: {0}{2}. Make sure the grain assembly was correctly deployed and loaded in the silo.{1}"' " is 160.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,GetImplementation,The length of the statement  "                              string.IsNullOrEmpty(loadedAssemblies) ? string.Empty : string.Format(" Loaded grain assemblies: {0}"' loadedAssemblies)' " is 121.
Long Statement,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,GetImplementation,The length of the statement  "                throw new ArgumentException(string.Format("Cannot find an implementation grain class: {0}. Make sure the grain assembly was correctly deployed and loaded in the silo."' grainImplementationClassName)); " is 200.
Magic Number,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,PrintSimpleGrainStatistics,The following statement contains a magic number: foreach (var s in stats.OrderBy(s => s.SiloAddress + s.GrainType))                  Console.WriteLine("{0}  {1}  {2}"' s.SiloAddress.ToString().PadRight(21)' Pad(s.ActivationCount' 11)' s.GrainType);
Magic Number,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,PrintSimpleGrainStatistics,The following statement contains a magic number: foreach (var s in stats.OrderBy(s => s.SiloAddress + s.GrainType))                  Console.WriteLine("{0}  {1}  {2}"' s.SiloAddress.ToString().PadRight(21)' Pad(s.ActivationCount' 11)' s.GrainType);
Magic Number,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,PrintGrainStatistics,The following statement contains a magic number: foreach (var s in stats.OrderBy(s => Tuple.Create(s.GrainType' s.ActivationCount)))                  Console.WriteLine("{0}  {1}"' Pad(s.ActivationCount' 8)' s.GrainType);
Magic Number,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,ConstructGrainId,The following statement contains a magic number: if (args == null || args.Length < 2)              {                  PrintUsage();                  return null;              }
Magic Number,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,GetStrategyArgs,The following statement contains a magic number: if (args.Length < 1 || args.Length > 2)              {                  PrintUsage();                  strategy = default(T);                  interfaceId = null;                  return true;              }
Magic Number,OrleansManager,Program,C:\repos\dotnet_orleans\src\OrleansManager\Program.cs,GetStrategyArgs,The following statement contains a magic number: interfaceId = args.Length == 2 ? (int?)int.Parse(args[1]) : null;
