Implementation smell,Namespace,Class,File,Method,Description
Long Method,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,ReceiveMessage,The method has 118 lines of code.
Long Method,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,Invoke,The method has 160 lines of code.
Long Method,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,Silo,The method has 118 lines of code.
Long Method,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The method has 129 lines of code.
Long Method,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The method has 146 lines of code.
Long Method,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The method has 172 lines of code.
Long Method,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The method has 114 lines of code.
Long Method,Orleans.Runtime.Scheduler,WorkerPoolThread,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPoolThread.cs,Run,The method has 169 lines of code.
Long Method,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The method has 126 lines of code.
Complex Method,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SendRequestMessage,Cyclomatic complexity of the method is 12
Complex Method,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,Invoke,Cyclomatic complexity of the method is 12
Complex Method,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,ReceiveResponse,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime,TypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\TypeManager.cs,OnRefreshClusterMapTimer,Cyclomatic complexity of the method is 11
Complex Method,Orleans.Runtime,StreamProviderManagerAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\StreamProviderManagerAgent.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,Orleans.Runtime.Management,ManagementGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\ManagementGrain.cs,AddXPathValue,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,HandoffMyPartitionUponStop,Cyclomatic complexity of the method is 9
Complex Method,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CalculateTargetSilo,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,LocalLookup,Cyclomatic complexity of the method is 9
Complex Method,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,Cyclomatic complexity of the method is 14
Complex Method,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,Cyclomatic complexity of the method is 11
Complex Method,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryUpdateMyStatusGlobalOnce,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,Cyclomatic complexity of the method is 11
Complex Method,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,UpdateListOfProbedSilos,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,Cyclomatic complexity of the method is 16
Complex Method,Orleans.Runtime.Messaging,GatewaySender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,Process,Cyclomatic complexity of the method is 13
Complex Method,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,ProcessAccept,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,Cyclomatic complexity of the method is 13
Complex Method,Orleans.Runtime.Messaging,OutboundMessageQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\OutboundMessageQueue.cs,SendMessage,Cyclomatic complexity of the method is 9
Complex Method,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,PublishChanges,Cyclomatic complexity of the method is 9
Complex Method,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracleData.cs,ApplyDataAndNotify,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime.Placement,ActivationCountPlacementDirector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\ActivationCountPlacementDirector.cs,SelectSiloPowerOfK,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,ReadTableAndStartTimers,Cyclomatic complexity of the method is 19
Complex Method,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,TryExecuteTaskInline,Cyclomatic complexity of the method is 9
Complex Method,Orleans.Runtime.Scheduler,WorkerPoolThread,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPoolThread.cs,Run,Cyclomatic complexity of the method is 10
Complex Method,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ReadFromQueue,Cyclomatic complexity of the method is 10
Complex Method,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RunConsumerCursor,Cyclomatic complexity of the method is 10
Complex Method,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,RegisterConsumer,Cyclomatic complexity of the method is 9
Complex Method,Orleans.Streams,BestFitBalancer<TBucket;TResource>,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\BestFitBalancer.cs,GetDistribution,Cyclomatic complexity of the method is 9
Complex Method,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,Commit,Cyclomatic complexity of the method is 8
Complex Method,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,ProcessRequests,Cyclomatic complexity of the method is 9
Long Parameter List,Orleans.Runtime,CancellationSourcesExtension,C:\repos\dotnet_orleans\src\Orleans.Runtime\Cancellation\CancellationSourcesExtension.cs,RegisterCancellationTokens,The method has 6 parameters. Parameters: target' request' loggerFactory' logger' siloRuntimeClient' cancellationTokenRuntime
Long Parameter List,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,ActivationData,The method has 11 parameters. Parameters: addr' genericArguments' placedUsing' registrationStrategy' collector' ageLimit' nodeConfiguration' maxWarningRequestProcessingTime' maxRequestProcessingTime' runtimeClient' loggerFactory
Long Parameter List,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,Catalog,The method has 17 parameters. Parameters: localSiloDetails' grainDirectory' typeManager' scheduler' activationDirectory' config' grainCreator' nodeConfig' messageCenter' placementDirectorsManager' messageFactory' serializationManager' providerRuntime' providerManager' serviceProvider' versionSelectorManager' loggerFactory
Long Parameter List,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,GetGrainTypeInfo,The method has 5 parameters. Parameters: typeCode' grainClass' placement' activationStrategy' genericArguments
Long Parameter List,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,GetOrCreateActivation,The method has 6 parameters. Parameters: address' newPlacement' grainType' genericArguments' requestContextData' activatedPromise
Long Parameter List,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,Dispatcher,The method has 10 parameters. Parameters: scheduler' transport' catalog' config' placementDirectorsManager' localGrainDirectory' messagefactory' serializationManager' compatibilityDirectorManager' loggerFactory
Long Parameter List,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,ProcessRequestToInvalidActivation,The method has 5 parameters. Parameters: message' oldAddress' forwardingAddress' failedOperation' exc
Long Parameter List,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,ProcessRequestsToInvalidActivation,The method has 6 parameters. Parameters: messages' oldAddress' forwardingAddress' failedOperation' exc' rejectMessages
Long Parameter List,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,TryForwardRequest,The method has 5 parameters. Parameters: message' oldAddress' forwardingAddress' failedOperation' exc
Long Parameter List,Orleans.Runtime,GrainMethodInvoker,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\GrainMethodInvoker.cs,GrainMethodInvoker,The method has 5 parameters. Parameters: grain' request' rootInvoker' filters' interfaceToImplementationMapping
Long Parameter List,Orleans.Runtime,GrainRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\GrainRuntime.cs,GrainRuntime,The method has 8 parameters. Parameters: siloOptions' localSiloDetails' grainFactory' timerRegistry' reminderRegistry' serviceProvider' runtimeClient' loggerFactory
Long Parameter List,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,InsideRuntimeClient,The method has 13 parameters. Parameters: siloDetails' config' typeManager' typeMetadataCache' scheduler' serviceProvider' serializationManager' messageFactory' registeredInterceptors' transactionAgent' loggerFactory' messagingOptions' cancellationTokenRuntime
Long Parameter List,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SendRequest,The method has 7 parameters. Parameters: target' request' context' callback' debugContext' options' genericArguments
Long Parameter List,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SendRequestMessage,The method has 7 parameters. Parameters: target' message' context' callback' debugContext' options' genericArguments
Long Parameter List,Orleans.Runtime,SystemTarget,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\SystemTarget.cs,RegisterTimer,The method has 5 parameters. Parameters: asyncCallback' state' dueTime' period' name
Long Parameter List,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,ClientObserverRegistrar,The method has 5 parameters. Parameters: siloDetails' dir' scheduler' config' loggerFactory
Long Parameter List,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,GrainTypeManager,The method has 7 parameters. Parameters: siloDetails' applicationPartManager' defaultPlacementStrategy' serializationManager' multiClusterRegistrationStrategyManager' logger' grainClassOptions
Long Parameter List,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,GetTypeInfo,The method has 5 parameters. Parameters: typeCode' grainClass' placement' activationStrategy' genericArguments
Long Parameter List,Orleans.Runtime,TypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\TypeManager.cs,TypeManager,The method has 9 parameters. Parameters: myAddr' grainTypeManager' oracle' scheduler' refreshClusterMapInterval' implicitStreamSubscriberTable' grainFactory' versionSelectorManager' loggerFactory
Long Parameter List,Orleans.Runtime,DeploymentLoadPublisher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\DeploymentLoadPublisher.cs,DeploymentLoadPublisher,The method has 7 parameters. Parameters: siloDetails' siloMetrics' siloStatusOracle' config' grainFactory' scheduler' loggerFactory
Long Parameter List,Orleans.Runtime,SiloControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloControl.cs,SiloControl,The method has 13 parameters. Parameters: localSiloDetails' localConfiguration' clusterConfiguration' deploymentLoadPublisher' catalog' grainTypeManager' siloMetrics' providerManagers' providerManagerSystemTarget' cachedVersionSelectorManager' compatibilityDirectorManager' selectorManager' loggerFactory
Long Parameter List,Orleans.Runtime,GrainTimer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Timers\GrainTimer.cs,GrainTimer,The method has 8 parameters. Parameters: scheduler' activationData' logger' asyncCallback' state' dueTime' period' name
Long Parameter List,Orleans.Runtime,GrainTimer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Timers\GrainTimer.cs,FromTimerCallback,The method has 7 parameters. Parameters: scheduler' logger' callback' state' dueTime' period' name
Long Parameter List,Orleans.Runtime,GrainTimer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Timers\GrainTimer.cs,FromTaskCallback,The method has 8 parameters. Parameters: scheduler' logger' asyncCallback' state' dueTime' period' name' activationData
Long Parameter List,Orleans.Runtime.Management,ManagementGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\ManagementGrain.cs,ManagementGrain,The method has 7 parameters. Parameters: multiClusterOptions' multiClusterOracle' internalGrainFactory' siloStatusOracle' membershipTableFactory' grainTypeManager' versionStore
Long Parameter List,Orleans.Runtime.Counters,SiloStatisticsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloStatisticsManager.cs,SiloStatisticsManager,The method has 5 parameters. Parameters: initializationParams' serializationManager' telemetryProducer' loggerFactory' siloOptions
Long Parameter List,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,AdaptiveDirectoryCacheMaintainer,The method has 6 parameters. Parameters: router' cache' updateFunc' grainFactory' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.GrainDirectory,GrainDirectoryCacheFactory<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryCacheFactory.cs,CreateGrainDirectoryCacheMaintainer,The method has 6 parameters. Parameters: router' cache' updateFunc' grainFactory' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,GrainDirectoryHandoffManager,The method has 5 parameters. Parameters: localDirectory' siloStatusOracle' grainFactory' createPartion' loggerFactory
Long Parameter List,Orleans.Runtime.GrainDirectory,GrainInfo,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,RemoveActivation,The method has 5 parameters. Parameters: act' cause' config' info' wasRemoved
Long Parameter List,Orleans.Runtime.GrainDirectory,GrainDirectoryPartition,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,RemoveActivation,The method has 5 parameters. Parameters: grain' activation' cause' entry' wasRemoved
Long Parameter List,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,LocalGrainDirectory,The method has 13 parameters. Parameters: clusterConfig' siloDetails' scheduler' siloStatusOracle' multiClusterOracle' grainFactory' grainDirectoryPartitionFactory' registrarManager' executorService' developmentMembershipOptions' siloOptions' multiClusterOptions' loggerFactory
Long Parameter List,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,UnregisterOrPutInForwardList,The method has 6 parameters. Parameters: addresses' cause' hopCount' forward' tasks' context
Long Parameter List,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RemoveActivations,The method has 5 parameters. Parameters: directoryCache' key' activations' version' doRemove
Long Parameter List,Orleans.Runtime.GrainDirectory,ClusterGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterGrainDirectory.cs,ClusterGrainDirectory,The method has 6 parameters. Parameters: r' grainId' clusterId' grainFactory' multiClusterOracle' loggerFactory
Long Parameter List,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,GlobalSingleInstanceActivationMaintainer,The method has 9 parameters. Parameters: router' logger' config' grainFactory' multiClusterOracle' executorService' siloOptions' multiClusterOptions' loggerFactory
Long Parameter List,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,GlobalSingleInstanceRegistrar,The method has 8 parameters. Parameters: localDirectory' logger' gsiActivationMaintainer' config' grainFactory' multiClusterOracle' siloOptions' multiClusterOptions
Long Parameter List,Orleans.Runtime.LogConsistency,LogConsistencyProviderManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\LogConsistencyProviderManager.cs,LogConsistencyProviderManager,The method has 5 parameters. Parameters: grainFactory' serviceProvider' runtime' loadedProviderTypeLoaders' loggerFactory
Long Parameter List,Orleans.Runtime.LogConsistency,ProtocolServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\ProtocolServices.cs,ProtocolServices,The method has 8 parameters. Parameters: gr' loggerFactory' strategy' serializationManager' grainFactory' siloOptions' multiClusterOptions' multiClusterOracle
Long Parameter List,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,MembershipOracle,The method has 7 parameters. Parameters: siloDetails' clusterConfiguration' nodeConfiguration' membershipTableFactory' grainFactory' multiClusterOptions' loggerFactory
Long Parameter List,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,CreateNewMembershipEntry,The method has 5 parameters. Parameters: nodeConf' myAddress' myHostname' myStatus' startTime
Long Parameter List,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,Gateway,The method has 9 parameters. Parameters: msgCtr' nodeConfig' messageFactory' serializationManager' executorService' loggerFactory' options' siloOptions' multiClusterOptions
Long Parameter List,Orleans.Runtime.Messaging,GatewaySender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,GatewaySender,The method has 6 parameters. Parameters: name' gateway' messageFactory' serializationManager' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.Messaging,GatewayAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\GatewayAcceptor.cs,GatewayAcceptor,The method has 9 parameters. Parameters: msgCtr' gateway' gatewayAddress' messageFactory' serializationManager' executorService' siloOptions' multiClusterOptions' loggerFactory
Long Parameter List,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,IncomingMessageAcceptor,The method has 7 parameters. Parameters: msgCtr' here' socketDirection' messageFactory' serializationManager' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.Messaging,IncomingMessageAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAgent.cs,IncomingMessageAgent,The method has 8 parameters. Parameters: cat' mc' ad' sched' dispatcher' messageFactory' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,MessageCenter,The method has 10 parameters. Parameters: siloDetails' nodeConfig' messagingOptions' networkingOptions' serializationManager' metrics' messageFactory' gatewayFactory' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,Initialize,The method has 5 parameters. Parameters: here' generation' messagingOptions' networkingOptions' metrics
Long Parameter List,Orleans.Runtime.Messaging,OutboundMessageQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\OutboundMessageQueue.cs,OutboundMessageQueue,The method has 5 parameters. Parameters: mc' options' serializationManager' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.Messaging,SiloMessageSender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\SiloMessageSender.cs,SiloMessageSender,The method has 5 parameters. Parameters: nameSuffix' msgCtr' serializationManager' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,MultiClusterOracle,The method has 6 parameters. Parameters: siloDetails' channelFactory' siloStatusOracle' grainFactory' loggerFactory' siloOptions
Long Parameter List,Orleans.Runtime.Placement,IPlacementRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\IPlacementRuntime.cs,GetGrainTypeInfo,The method has 5 parameters. Parameters: typeCode' grainClass' placement' strategy' genericArguments
Long Parameter List,Orleans.Runtime.Placement,PlacementRuntimeExtensions,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\IPlacementRuntime.cs,GetGrainTypeInfo,The method has 6 parameters. Parameters: this' grainId' grainClass' placement' activationStrategy' genericArguments
Long Parameter List,Orleans.Runtime.Placement,PlacementDirectorsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\PlacementDirectorsManager.cs,TrySelectActivationSynchronously,The method has 5 parameters. Parameters: sendingAddress' targetGrain' context' strategy' placementResult
Long Parameter List,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,LocalReminderService,The method has 6 parameters. Parameters: silo' id' reminderTable' config' initTimeout' loggerFactory
Long Parameter List,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,OrleansTaskScheduler,The method has 9 parameters. Parameters: maxActiveThreads' delayWarningThreshold' activationSchedulingQuantum' turnWarningLengthThreshold' injectMoreWorkerThreads' maxPendingItemsLimit' performanceMetrics' executorService' loggerFactory
Long Parameter List,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,WorkerPool,The method has 6 parameters. Parameters: sched' performanceMetrics' executorService' loggerFactory' maxActiveThreads' enableWorkerThreadInjection
Long Parameter List,Orleans.Runtime.Scheduler,WorkerPoolThread,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPoolThread.cs,WorkerPoolThread,The method has 7 parameters. Parameters: gtp' sched' executorService' loggerFactory' performanceMetrics' threadNumber' system
Long Parameter List,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,SiloProviderRuntime,The method has 9 parameters. Parameters: siloDetails' siloOptions' consistentRingProvider' runtimeClient' implicitStreamSubscriberTable' siloStatusOracle' scheduler' activationDirectory' loggerFactory
Long Parameter List,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,InitializePullingAgents,The method has 5 parameters. Parameters: streamProviderName' adapterFactory' queueAdapter' config' providerConfig
Long Parameter List,Orleans.Runtime.Storage,StorageProviderManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\StorageProviderManager.cs,StorageProviderManager,The method has 5 parameters. Parameters: grainFactory' serviceProvider' providerRuntime' loadedProviderTypeLoaders' loggerFactory
Long Parameter List,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,PersistentStreamPullingAgent,The method has 7 parameters. Parameters: id' strProviderName' runtime' loggerFactory' streamPubSub' queueId' config
Long Parameter List,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,AddSubscriber_Impl,The method has 5 parameters. Parameters: subscriptionId' streamId' streamConsumer' cacheToken' filter
Long Parameter List,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ErrorProtocol,The method has 5 parameters. Parameters: consumerData' exceptionOccured' isDeliveryError' batch' token
Long Parameter List,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,PersistentStreamPullingManager,The method has 9 parameters. Parameters: id' strProviderName' runtime' streamPubSub' adapterFactory' streamQueueBalancer' config' providerConfig' loggerFactory
Long Parameter List,Orleans.Timers,TimerRegistry,C:\repos\dotnet_orleans\src\Orleans.Runtime\Timers\TimerRegistry.cs,RegisterTimer,The method has 5 parameters. Parameters: grain' asyncCallback' state' dueTime' period
Long Parameter List,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,TransactionAgent,The method has 5 parameters. Parameters: siloDetails' tmService' loggerFactory' telemetryProducer' getNodeConfig
Long Identifier,Orleans.Runtime,CancellationSourcesExtension,C:\repos\dotnet_orleans\src\Orleans.Runtime\Cancellation\CancellationSourcesExtension.cs,,The length of the parameter _defaultInternerCollectionSize is 30.
Long Identifier,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,,The length of the parameter Debug_OnDecideToCollectActivation is 33.
Long Identifier,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,ActivationData,The length of the parameter maxWarningRequestProcessingTime is 31.
Long Identifier,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,,The length of the parameter maxWarningRequestProcessingTime is 31.
Long Identifier,Orleans.Runtime,StreamResourceTestControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,,The length of the parameter TestOnlySuppressStreamCleanupOnDeactivate is 41.
Long Identifier,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,,The length of the parameter maxWarningRequestProcessingTime is 31.
Long Identifier,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,AsyncSendMessage,The length of the parameter transportMessageAfterAddressing is 31.
Long Identifier,Orleans.Runtime,GrainMethodInvoker,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\GrainMethodInvoker.cs,GrainMethodInvoker,The length of the parameter interfaceToImplementationMapping is 32.
Long Identifier,Orleans.Runtime,GrainMethodInvoker,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\GrainMethodInvoker.cs,,The length of the parameter interfaceToImplementationMapping is 32.
Long Identifier,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,,The length of the parameter interfaceToImplementationMapping is 32.
Long Identifier,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,GrainTypeManager,The length of the parameter multiClusterRegistrationStrategyManager is 39.
Long Identifier,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,,The length of the parameter multiClusterRegistrationStrategyManager is 39.
Long Identifier,Orleans.Runtime,TypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\TypeManager.cs,OnRefreshClusterMapTimer,The length of the parameter knownSilosClusterGrainInterfaceMap is 34.
Long Identifier,Orleans.Runtime,TypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\TypeManager.cs,OnRefreshClusterMapTimer,The length of the parameter newSilosClusterGrainInterfaceMap is 32.
Long Identifier,Orleans.Runtime,TypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\TypeManager.cs,,The length of the parameter hasToRefreshClusterGrainInterfaceMap is 36.
Long Identifier,Orleans.Runtime,TypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\TypeManager.cs,,The length of the parameter refreshClusterGrainInterfaceMapTimer is 36.
Long Identifier,Orleans.Runtime.Counters,SiloStatisticsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloStatisticsManager.cs,SetSiloMetricsTableDataManager,The length of the parameter configurableMetricsDataPublisher is 32.
Long Identifier,Orleans.Runtime.Counters,SiloStatisticsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloStatisticsManager.cs,SetSiloStatsTableDataManager,The length of the parameter configurableStatsDataPublisher is 30.
Long Identifier,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,LocalGrainDirectory,The length of the parameter grainDirectoryPartitionFactory is 30.
Long Identifier,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,,The length of the parameter RegistrationsSingleActRemoteSent is 32.
Long Identifier,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,,The length of the parameter RegistrationsSingleActRemoteReceived is 36.
Long Identifier,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,,The length of the parameter UnregistrationsManyRemoteReceived is 33.
Long Identifier,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,UnregisterAsync,The length of the parameter formerActivationsInThisCluster is 30.
Long Identifier,Orleans.Runtime.LogConsistency,ProtocolServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\ProtocolServices.cs,,The length of the parameter PseudoMultiClusterConfigurations is 32.
Long Identifier,Orleans.Runtime.LogConsistency,ProtocolServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\ProtocolServices.cs,,The length of the parameter pseudoMultiClusterConfiguration is 31.
Long Identifier,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,,The length of the parameter NUM_CONDITIONAL_WRITE_CONTENTION_ATTEMPTS is 41.
Long Identifier,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,,The length of the parameter NUM_CONDITIONAL_WRITE_ERROR_ATTEMPTS is 36.
Long Identifier,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,,The length of the parameter nextGatewaySenderToUseForRoundRobin is 35.
Long Identifier,Orleans.Runtime.Messaging,ClientsReplyRoutingCache,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,,The length of the parameter TIME_BEFORE_ROUTE_CACHED_ENTRY_EXPIRES is 38.
Long Identifier,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,,The length of the parameter allocatedSocketEventArgsCounter is 31.
Long Identifier,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,,The length of the parameter checkedOutSocketEventArgsCounter is 32.
Long Identifier,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,,The length of the parameter checkedInSocketEventArgsCounter is 31.
Long Identifier,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,,The length of the parameter CleanupSilentGoneGatewaysAfter is 30.
Long Identifier,Orleans.Runtime.Placement,PlacementDirectorsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\PlacementDirectorsManager.cs,PlacementDirectorsManager,The length of the parameter clientObserversPlacementDirector is 32.
Long Identifier,Orleans.Runtime.Placement,PlacementDirectorsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\PlacementDirectorsManager.cs,,The length of the parameter clientObserversPlacementDirector is 32.
Long Identifier,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,,The length of the parameter InitialReadRetryCountBeforeFastFailForUpdates is 45.
Long Identifier,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,,The length of the parameter InitialReadMaxWaitTimeForUpdates is 32.
Long Identifier,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,,The length of the parameter combinedGrainBasedAndImplicitPubSub is 35.
Long Identifier,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,,The length of the parameter DefaultPercentOfLoadSheddingLimit is 33.
Long Identifier,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,,The length of the parameter StreamInactivityCheckFrequency is 30.
Long Identifier,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,,The length of the parameter latestRingNotificationSequenceNumber is 36.
Long Identifier,Orleans.Streams,BestFitBalancer<TBucket;TResource>,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\BestFitBalancer.cs,BuildIdealDistribution,The length of the parameter bucketsToFillWithUpperResource is 30.
Long Identifier,Orleans.Streams,StreamQueueBalancerType,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\StreamQueueBalancerType.cs,,The length of the parameter DynamicClusterConfigDeploymentBalancer is 38.
Long Identifier,Orleans.Streams,StreamQueueBalancerType,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\StreamQueueBalancerType.cs,,The length of the parameter StaticClusterConfigDeploymentBalancer is 37.
Long Identifier,Orleans.Streams,StreamQueueBalancerType,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\StreamQueueBalancerType.cs,,The length of the parameter ClusterConfigDeploymentLeaseBasedBalancer is 41.
Long Identifier,Orleans.Transactions,TransactionAgentMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,ReportMetrics,The length of the parameter avgBatchStartTransactionLatency is 31.
Long Identifier,Orleans.Transactions,TransactionAgentMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,ReportMetrics,The length of the parameter avgBatchCommitTransactionLatency is 32.
Long Identifier,Orleans.Transactions,TransactionAgentMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,,The length of the parameter AvgBatchStartTransactionsLatency is 32.
Long Identifier,Orleans.Transactions,TransactionAgentMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,,The length of the parameter AvgBatchStartTransactionsBatchSize is 34.
Long Identifier,Orleans.Transactions,TransactionAgentMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,,The length of the parameter AvgBatchCommitTransactionsLatency is 33.
Long Identifier,Orleans.Transactions,TransactionAgentMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,,The length of the parameter AvgBatchCommitTransactionsSize is 30.
Long Statement,Orleans.Runtime,CancellationSourcesExtension,C:\repos\dotnet_orleans\src\Orleans.Runtime\Cancellation\CancellationSourcesExtension.cs,CancelRemoteToken,The length of the statement  "                _logger.Error(ErrorCode.CancellationTokenCancelFailed'  $"Remote token cancellation failed: token with id {tokenId} was not found"); " is 132.
Long Statement,Orleans.Runtime,CancellationSourcesExtension,C:\repos\dotnet_orleans\src\Orleans.Runtime\Cancellation\CancellationSourcesExtension.cs,RegisterCancellationTokens,The length of the statement  "                request.Arguments[i] = cancellationExtension.RecordCancellationToken(grainToken.Id' grainToken.IsCancellationRequested' cancellationTokenRuntime); " is 146.
Long Statement,Orleans.Runtime,CancellationSourcesExtension,C:\repos\dotnet_orleans\src\Orleans.Runtime\Cancellation\CancellationSourcesExtension.cs,RecordCancellationToken,The length of the statement  "            return _cancellationTokens.Intern(tokenId' new GrainCancellationToken(tokenId' isCancellationRequested' cancellationTokenRuntime)); " is 131.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,TryRescheduleCollection_Impl,The length of the statement  "            // it shouldn't be possible for Add to throw an exception here' as only one concurrent competitor should be able to reach to this point in the method. " is 150.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,ToString,The length of the statement  "                        buckets.Values.OrderBy(bucket => bucket.Key)' bucket => Utils.TimeSpanToString(bucket.Key - now) + "->" + bucket.ApproximateCount + " items")); " is 143.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,ScanStale,The length of the statement  "                // at this point' all tickets associated with activations are cancelled and any attempts to reschedule will fail silently. if the activation is to be reactivated' it's our job to clear the activation's copy of the ticket. " is 221.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,ScanStale,The length of the statement  "                                "ActivationCollector found an activation in a non Valid state. All activation inside the ActivationCollector should be in Valid state. Activation: {0}"' " is 152.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,ScanStale,The length of the statement  "                                "ActivationCollector found an active activation in it's last bucket. This is violation of ActivationCollector invariants. " + " is 125.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,ScanStale,The length of the statement  "                                "ActivationCollector found a non stale activation in it's last bucket. This is violation of ActivationCollector invariants. Now: {0}" + " is 135.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,ScanStale,The length of the statement  "                            // Atomically set Deactivating state' to disallow any new requests or new timer ticks to be dispatched on this activation. " is 122.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,ScanAll,The length of the statement  "                    // theoretically' we could iterate forever on the ConcurrentDictionary. we limit ourselves to an approximation of the bucket's Count property to limit the number of iterations we perform. " is 187.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,MakeTicketFromDateTime,The length of the statement  "            // round the timestamp to the next quantum. e.g. if the quantum is 1 minute and the timestamp is 3:45:22' then the ticket will be 3:46. note that TimeStamp.Ticks and DateTime.Ticks both return a long. " is 200.
Long Statement,Orleans.Runtime,ActivationCollector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,MakeTicketFromDateTime,The length of the statement  "                throw new ArgumentException(string.Format("The earliest collection that can be scheduled from now is for {0}"' new DateTime(nextTicket.Ticks - quantum.Ticks + 1))); " is 164.
Long Statement,Orleans.Runtime,Bucket,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationCollector.cs,CancelAll,The length of the statement  "                    // attempt to cancel the item. if we succeed' it wasn't already cancelled and we can return it. otherwise' we silently ignore it. " is 129.
Long Statement,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,GetInvoker,The length of the statement  "            if (lastInvoker != null && interfaceId == lastInvoker.InterfaceId) // extension invoker returns InterfaceId==0' so this condition will never be true if an extension is installed " is 177.
Long Statement,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,SetupContext,The length of the statement  "                bool doNotCollect = typeof(IReminderTableGrain).IsAssignableFrom(grainType) || typeof(IMemoryStorageGrain).IsAssignableFrom(grainType); " is 135.
Long Statement,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,EnqueueMessage,The length of the statement  "                            $"Current activation {ToDetailedString()} marked as Deactivating for {deactivatingTime}. Trying  to enqueue {message}."); " is 121.
Long Statement,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,EnqueueMessage,The length of the statement  "                            $"Current request has been active for {currentRequestActiveTime} for activation {ToDetailedString()}. Currently executing {Running}.  Trying  to enqueue {message}."); " is 166.
Long Statement,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,EnqueueMessage,The length of the statement  "                    // Consider: Handle long request detection for reentrant activations -- this logic only works for non-reentrant activations " is 123.
Long Statement,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,OnTimerDisposed,The length of the statement  "            lock (this) // need to lock since dispose can be called on finalizer thread' outside garin context (not single threaded). " is 121.
Long Statement,Orleans.Runtime,ActivationData,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationData.cs,ToDetailedString,The length of the statement  "                    "[Activation: {0}{1}{2}{3} State={4} NonReentrancyQueueSize={5} EnqueuedOnDispatcher={6} InFlightCount={7} NumRunning={8} IdlenessTimeSpan={9} CollectionAgeLimit={10}{11}]"' " is 173.
Long Statement,Orleans.Runtime,ActivationDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationDirectory.cs,PrintActivationDirectory,The length of the statement  "                string stats = Utils.EnumerableToString(activations.Values.OrderBy(act => act.Name)' act => string.Format("++{0}"' act.DumpStatus())' Environment.NewLine); " is 155.
Long Statement,Orleans.Runtime,ActivationDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\ActivationDirectory.cs,PrintActivationDirectory,The length of the statement  "                    logger.Info(ErrorCode.Catalog_ActivationDirectory_Statistics' String.Format("ActivationDirectory.PrintActivationDirectory(): Size = {0}' Directory:" + Environment.NewLine + "{1}"' " is 179.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CollectActivationsImpl,The length of the statement  "            logger.Info(ErrorCode.Catalog_BeforeCollection' "Before collection#{0}: memory={1}MB' #activations={2}' collector={3}."' " is 120.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CollectActivationsImpl,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("CollectActivations{0}"' list.ToStrings(d => d.Grain.ToString() + d.ActivationId)); " is 134.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CollectActivationsImpl,The length of the statement  "            logger.Info(ErrorCode.Catalog_AfterCollection' "After collection#{0}: memory={1}MB' #activations={2}' collected {3} activations' collector={4}' collection time={5}."' " is 166.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,GetOrCreateActivation,The length of the statement  "                    // We want to do this (RegisterMessageTarget) under the same lock that we tested TryGetActivationData. They both access ActivationDirectory. " is 140.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,InitActivation,The length of the statement  "            // We've created a dummy activation' which we'll eventually return' but in the meantime we'll queue up (or perform promptly) " is 124.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,InitActivation,The length of the statement  "            // Register with the grain directory' register with the store if necessary and call the Activate method on the new activation. " is 126.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,TryGetStreamSubscriptionObservers,The length of the statement  "                if (interf.GetTypeInfo().IsGenericType && (interf.GetGenericTypeDefinition().GetTypeInfo().IsEquivalentTo(typeof(IStreamSubscriptionObserver<>)))) " is 146.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,DeactivateActivationsFromCollector,The length of the statement  "            logger.Info(ErrorCode.Catalog_ShutdownActivations_1' "DeactivateActivationsFromCollector: total {0} to promptly Destroy."' list.Count); " is 135.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,DeactivateActivationImpl,The length of the statement  "                "DeactivateActivationOnIdle: {0} {1}."' data.ToString()' promptly ? "promptly" : (alreadBeingDestroyed ? "already being destroyed or invalid" : "later when become idle")); " is 171.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,DeactivateActivationImpl,The length of the statement  "                DestroyActivationVoid(data); // Don't await or Ignore' since we are in this activation context and it may have alraedy been destroyed! " is 134.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,DeactivateActivations,The length of the statement  "                "DeactivateActivations: total {0} to shutdown' out of them {1} promptly' {2} later when become idle and {3} are already being destroyed or invalid."' " is 149.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,StartDestroyActivations,The length of the statement  "                logger.Info(ErrorCode.Catalog_DestroyActivations' "Starting DestroyActivations #{0} of {1} activations"' number' list.Count); " is 125.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,StartDestroyActivations,The length of the statement  "                    logger.Warn(ErrorCode.Catalog_WaitForAllTimersToFinish_Exception' String.Format("WaitForAllTimersToFinish {0} failed."' list.Count)' exc); " is 138.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,StartDestroyActivations,The length of the statement  "                    var task = scheduler.RunOrQueueTask(() => CallGrainDeactivateAndCleanupStreams(activationData)' activationData.SchedulingContext); " is 130.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,StartDestroyActivations,The length of the statement  "                    GC.KeepAlive(asyncQueue); // not sure about GC not collecting the asyncQueue local var prematuraly' so just want to capture it here to make sure. Just to be safe. " is 162.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,StartDestroyActivations,The length of the statement  "                logger.Warn(ErrorCode.Catalog_DeactivateActivation_Exception' String.Format("StartDestroyActivations #{0} failed with {1} Activations."' number' list.Count)' exc); " is 163.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FinishDestroyActivations,The length of the statement  "                //logger.Info(ErrorCode.Catalog_DestroyActivations_Done' "Starting FinishDestroyActivations #{0} - with {1} Activations."' number' list.Count); " is 143.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FinishDestroyActivations,The length of the statement  "                        logger.Warn(ErrorCode.Catalog_UnregisterMessageTarget2' String.Format("UnregisterMessageTarget failed on {0}."' activationData)' exc); " is 134.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FinishDestroyActivations,The length of the statement  "                        logger.Warn(ErrorCode.Catalog_UnregisterMessageTarget3' String.Format("Last stage of DestroyActivations failed on {0}."' activationData)' exc); " is 143.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FinishDestroyActivations,The length of the statement  "                        logger.Warn(ErrorCode.Catalog_UnregisterMessageTarget3' String.Format("Releasing of the grain instance and scope failed on {0}."' activationData)' exc); " is 152.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FinishDestroyActivations,The length of the statement  "                logger.Info(ErrorCode.Catalog_DestroyActivations_Done' "Done FinishDestroyActivations #{0} - Destroyed {1} Activations."' number' list.Count); " is 142.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FinishDestroyActivations,The length of the statement  "                logger.Error(ErrorCode.Catalog_FinishDeactivateActivation_Exception' String.Format("FinishDestroyActivations #{0} failed with {1} Activations."' number' list.Count)' exc); " is 171.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,RerouteAllQueuedMessages,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.Catalog_RerouteAllQueuedMessages' String.Format("RerouteAllQueuedMessages: {0} msgs from Invalid activation {1}."' msgs.Count()' activation)); " is 203.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainActivate,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.Catalog_BeforeCallingActivate' "About to call {1} grain's OnActivateAsync() method {0}"' activation' grainTypeName); " is 177.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainActivate,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.Catalog_AfterCallingActivate' "Returned from calling {1} grain's OnActivateAsync() method {0}"' activation' grainTypeName); " is 184.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainActivate,The length of the statement  "                    string.Format("Error calling grain's OnActivateAsync() method - Grain type = {1} Activation = {0}"' activation' grainTypeName)' exc); " is 133.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainActivate,The length of the statement  "                // TODO: During lifecycle refactor discuss with team whether activation failure should have a well defined exception' or throw whatever " is 135.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainDeactivateAndCleanupStreams,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.Catalog_BeforeCallingDeactivate' "About to call {1} grain's OnDeactivateAsync() method {0}"' activation' grainTypeName); " is 181.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainDeactivateAndCleanupStreams,The length of the statement  "                // Call OnDeactivateAsync inline' but within try-catch wrapper to safely capture any exceptions thrown from called function " is 123.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainDeactivateAndCleanupStreams,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.Catalog_AfterCallingDeactivate' "Returned from calling {1} grain's OnDeactivateAsync() method {0}"' activation' grainTypeName); " is 188.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainDeactivateAndCleanupStreams,The length of the statement  "                        string.Format("Error calling grain's OnDeactivateAsync() method - Grain type = {1} Activation = {0}"' activation' grainTypeName)' exc); " is 135.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainDeactivateAndCleanupStreams,The length of the statement  "                        logger.Warn(ErrorCode.Catalog_DeactivateStreamResources_Exception' String.Format("DeactivateStreamResources Grain type = {0} Activation = {1} failed."' grainTypeName' activation)' exc); " is 185.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CallGrainDeactivateAndCleanupStreams,The length of the statement  "                logger.Error(ErrorCode.Catalog_FinishGrainDeactivateAndCleanupStreams_Exception' String.Format("CallGrainDeactivateAndCleanupStreams Activation = {0} failed."' activation)' exc); " is 178.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,RegisterActivationInGrainDirectoryAndValidate,The length of the statement  "                var result = await scheduler.RunOrQueueTask(() => directory.RegisterAsync(address' singleActivation:true)' this.SchedulingContext); " is 131.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,InvokeActivate,The length of the statement  "            return scheduler.QueueTask(() => CallGrainActivate(activation' requestContextData)' activation.SchedulingContext); // Target grain's scheduler context); " is 152.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FastLookup,The length of the statement  "            // Everyone should converge to that (that is the meaning of "eventualy consistency - eventualy we converge to one truth"). " is 122.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,FastLookup,The length of the statement  "            // If we keep using the local activation' it may not be registered in th directory any more' but we will never know that and keep using it' " is 139.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,OnSiloStatusChange,The length of the statement  "            // thus it will only deliver a "remove" notification for a given silo once to us. Therefore' we need to react the fist time we are notified. " is 140.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,OnSiloStatusChange,The length of the statement  "            // We may review the directory behavior in the future and treat ShuttingDown differently ("drain only") and then this code will have to change a well. " is 150.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,OnSiloStatusChange,The length of the statement  "                // scan all activations in activation directory and deactivate the ones that the removed silo is their primary partition owner. " is 127.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,OnSiloStatusChange,The length of the statement  "                                String.Format("Catalog has thrown an exception while executing OnSiloStatusChange of silo {0}."' updatedSilo.ToStringWithHashCode())' exc); " is 139.
Long Statement,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,OnSiloStatusChange,The length of the statement  "                    String.Format("Catalog is deactivating {0} activations due to a failure of silo {1}' since it is a primary directory partition to these grain ids."' " is 148.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,HandleIncomingRequest,The length of the statement  "                    ProcessRequestToInvalidActivation(message' targetActivation.Address' targetActivation.ForwardingAddress' "HandleIncomingRequest"); " is 130.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,HandleIncomingRequest,The length of the statement  "                scheduler.QueueWorkItem(new InvokeWorkItem(targetActivation' message' this' this.invokeWorkItemLogger)' targetActivation.SchedulingContext); " is 140.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,EnqueueRequest,The length of the statement  "                RejectMessage(message' Message.RejectionTypes.Overloaded' overloadException' "Target activation is overloaded " + targetActivation); " is 132.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,EnqueueRequest,The length of the statement  "                    ProcessRequestToInvalidActivation(message' targetActivation.Address' targetActivation.ForwardingAddress' "EnqueueRequest"); " is 123.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,EnqueueRequest,The length of the statement  "                    ProcessRequestToInvalidActivation(message' targetActivation.Address' targetActivation.ForwardingAddress' "EnqueueRequest - blocked grain"); " is 139.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,TryForwardRequest,The length of the statement  "                    String.Format("Trying to forward after {0}' ForwardCount = {1}. Message {2}."' failedOperation' message.ForwardCount' message)); " is 128.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,TryForwardRequest,The length of the statement  "                    var str = String.Format("Forwarding failed: tried to forward message {0} for {1} times after {2} to invalid activation. Rejecting now."'  " is 136.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,AddressMessage,The length of the statement  "            // placement strategy is determined by searching for a specification. first' we check for a strategy associated with the grain reference' " is 137.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,AddressMessage,The length of the statement  "            // second' we check for a strategy associated with the target's interface. third' we check for a strategy associated with the activation sending the " is 148.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,SetMessageTargetPlacement,The length of the statement  "                logger.Error(ErrorCode.Dispatcher_AddressMsg_UnregisteredClient' $"AddressMessage could not find target for client pseudo-grain {message}"); " is 140.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,SetMessageTargetPlacement,The length of the statement  "                throw new KeyNotFoundException($"Attempting to send a message {message} to an unregistered client pseudo-grain {targetAddress.Grain}"); " is 135.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,SetMessageTargetPlacement,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(ErrorCode.Dispatcher_AddressMsg_SelectTarget' "AddressMessage Placement SelectTarget {0}"' message); " is 151.
Long Statement,Orleans.Runtime,Dispatcher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\Dispatcher.cs,TransportMessage,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(ErrorCode.Dispatcher_Send_AddressedMessage' "Addressed message {0}"' message); " is 129.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SendRequestMessage,The length of the statement  "                    String.Format("Trying to send a message {0} on a silo not from within grain and not from within system target (RuntimeContext is not set to SchedulingContext) " " is 160.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SendRequestMessage,The length of the statement  "                        String.Format("Trying to send a message {0} on a silo not from within grain and not from within system target (RuntimeContext is of SchedulingContextType.SystemThread type)"' message)' "context"); " is 196.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SniffIncomingMessage,The length of the statement  "                //// We don't record sending addresses for requests' since it is not clear that this silo ever wants to send messages to the grain sending this request. " is 152.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SniffIncomingMessage,The length of the statement  "                //// In most cases it will already have its address cached' unless it had a wrong outdated address cached and now this is a fresher address. " is 140.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SniffIncomingMessage,The length of the statement  "                //// and instead to take a very occasional hit of a full remote look-up instead of this small but non-zero hit on every response. " is 129.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SniffIncomingMessage,The length of the statement  "                //    if (sender.IsComplete && !sender.Grain.IsClient && !sender.Grain.IsSystemTargetType && !sender.Activation.IsSystemTargetType) " is 131.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,Invoke,The length of the statement  "                    UpdateDeadlockInfoInRequestContext(new RequestInvocationHistory(message.TargetGrain' message.TargetActivation' message.DebugContext)); " is 134.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,Invoke,The length of the statement  "                        CancellationSourcesExtension.RegisterCancellationTokens(target' request' this.loggerFactory' logger' this' this.cancellationTokenRuntime); " is 138.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,Invoke,The length of the statement  "                    var requestInvoker = new GrainMethodInvoker(target' request' invoker' siloInterceptors' interfaceToImplementationMapping); " is 122.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,ReceiveResponse,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(ErrorCode.Dispatcher_NoCallbackForRejectionResp' "No callback for rejection response message: {0}"' message); " is 160.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,ReceiveResponse,The length of the statement  "                            // Remove from local directory cache. Note that SendingGrain is the original target' since message is the rejection response. " is 125.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,ReceiveResponse,The length of the statement  "                // is to resolve/break the resolver. The continuations/waits that are based on this resolution will be scheduled as work items.  " is 127.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,DeactivateOnIdle,The length of the statement  "            data.ResetKeepAliveRequest(); // DeactivateOnIdle method would undo / override any current “keep alive” setting' making this grain immideately avaliable for deactivation. " is 170.
Long Statement,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,TryGetExtensionInvoker,The length of the statement  "                throw new InvalidOperationException($"Extension type {handlerType.FullName} implements more than one grain interface."); " is 120.
Long Statement,Orleans.Runtime,SystemTarget,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\SystemTarget.cs,RegisterTimer,The length of the statement  "            var timer = GrainTimer.FromTaskCallback(this.RuntimeClient.Scheduler'this.timerLogger' asyncCallback' state' dueTime' period' name); " is 132.
Long Statement,Orleans.Runtime,ConstructorArgumentFactory,C:\repos\dotnet_orleans\src\Orleans.Runtime\Facet\ConstructorArgumentFactory.cs,CreateArguments,The length of the statement  "            ArgumentFactory argumentsFactory = argumentsFactorys.GetOrAdd(grainActivationContext.GrainType' type => new ArgumentFactory(this.services' type)); " is 146.
Long Statement,Orleans.Runtime,ArgumentFactory,C:\repos\dotnet_orleans\src\Orleans.Runtime\Facet\ConstructorArgumentFactory.cs,GetFactory,The length of the statement  "                if (factoryMapper == null) throw new OrleansException($"Missing attribute mapper for attribute {metadata.GetType()} used in grain constructor for grain type {type}."); " is 167.
Long Statement,Orleans.Runtime,ArgumentFactory,C:\repos\dotnet_orleans\src\Orleans.Runtime\Facet\ConstructorArgumentFactory.cs,GetFactory,The length of the statement  "                if(factory == null) throw new OrleansException($"Attribute mapper {factoryMapper.GetType()} failed to create a factory for grain type {type}."); " is 144.
Long Statement,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,ClientAdded,The length of the statement  "                () => ExecuteWithRetries(() => grainDirectory.RegisterAsync(addr' singleActivation:false)' ErrorCode.ClientRegistrarFailedToRegister' String.Format("Directory.RegisterAsync {0} failed."' addr))' " is 194.
Long Statement,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,ClientDropped,The length of the statement  "                () => ExecuteWithRetries(() => grainDirectory.UnregisterAsync(addr' Orleans.GrainDirectory.UnregistrationCause.Force)' ErrorCode.ClientRegistrarFailedToUnregister' String.Format("Directory.UnRegisterAsync {0} failed."' addr))'  " is 226.
Long Statement,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,ExecuteWithRetries,The length of the statement  "                    AsyncExecutorWithRetries.INFINITE_RETRIES' // Do not limit the number of on-error retries' control it via "maxExecutionTime" " is 124.
Long Statement,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,ExecuteWithRetries,The length of the statement  "                    new ExponentialBackoff(EXP_BACKOFF_ERROR_MIN' EXP_BACKOFF_ERROR_MAX' EXP_BACKOFF_STEP)); // how long to wait between error retries " is 130.
Long Statement,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,OnClientRefreshTimer,The length of the statement  "                        LogException(logger' ErrorCode.ClientRegistrarFailedToRegister_2' String.Format("Directory.RegisterAsync {0} failed."' addr)); " is 126.
Long Statement,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,GetClientActivationAddress,The length of the statement  "            // so every GW needs to behave as a different "activation" with a different ActivationId (its not enough that they have different SiloAddress) " is 142.
Long Statement,Orleans.Runtime,ClientObserverRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\ClientObserverRegistrar.cs,GetClientActivationAddress,The length of the statement  "            string stringToHash = clientId.ToParsableString() + myAddress.Endpoint + myAddress.Generation.ToString(System.Globalization.CultureInfo.InvariantCulture); " is 154.
Long Statement,Orleans.Runtime,GenericGrainTypeData,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GenericGrainTypeData.cs,MakeGenericType,The length of the statement  "            // Need to make a non-generic instance of the class to access the static data field. The field itself is independent of the instantiated type. " is 142.
Long Statement,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,GetTypeInfo,The length of the statement  "            if (!ClusterGrainInterfaceMap.TryGetTypeInfo(typeCode' out grainClass' out placement' out activationStrategy' genericArguments)) " is 128.
Long Statement,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,GetTypeInfo,The length of the statement  "                throw new OrleansException(String.Format("Unexpected: Cannot find an implementation class for grain interface {0}"' typeCode)); " is 127.
Long Statement,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,CreateInvokerMap,The length of the statement  "                    throw new InvalidOperationException($"Grain method invoker classes {result[ifaceId]} and {grainInterfaceMetadata.InvokerType.FullName} use the same interface id {ifaceId}"); " is 173.
Long Statement,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,AddToGrainInterfaceToClassMap,The length of the statement  "            var registrationStrategy = this.multiClusterRegistrationStrategyManager.GetMultiClusterRegistrationStrategy(grainClass); " is 120.
Long Statement,Orleans.Runtime,GrainTypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\GrainTypeManager.cs,GetInvoker,The length of the statement  "                throw new OrleansException(String.Format("Error finding invoker for interface ID: {0} (0x{0' 8:X8}). {1}"' interfaceId' ex)' ex); " is 129.
Long Statement,Orleans.Runtime,TypeManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainTypeManager\TypeManager.cs,GetTargetSiloGrainInterfaceMap,The length of the statement  "                logger.Error(ErrorCode.TypeManager_GetSiloGrainInterfaceMapError' $"Exception when trying to get GrainInterfaceMap for silos {siloAddress}"' ex); " is 145.
Long Statement,Orleans.Runtime,DeploymentLoadPublisher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\DeploymentLoadPublisher.cs,Start,The length of the statement  "                this.publishTimer = this.RegisterTimer(PublishStatistics' null' randomTimerOffset' statisticsRefreshTime' "DeploymentLoadPublisher.PublishStatisticsTimer"); " is 156.
Long Statement,Orleans.Runtime,DeploymentLoadPublisher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\DeploymentLoadPublisher.cs,RefreshStatistics,The length of the statement  "                                                String.Format("An unexpected exception was thrown from RefreshStatistics by ISiloControl.GetRuntimeStatistics({0}). Will keep using stale statistics."' capture)' " is 161.
Long Statement,Orleans.Runtime,DeploymentLoadPublisher,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\DeploymentLoadPublisher.cs,SiloStatusChangeNotification,The length of the statement  "            this.ScheduleTask(() => { Utils.SafeExecute(() => this.OnSiloStatusChange(updatedSilo' status)' this.logger); }).Ignore(); " is 122.
Long Statement,Orleans.Runtime,GrainService,C:\repos\dotnet_orleans\src\Orleans.Runtime\Services\GrainService.cs,Start,The length of the statement  "            Logger.Info(ErrorCode.RS_ServiceStarting' "Starting {0} grain service on: {1} x{2'8:X8}' with range {3}"' this.typeName' Silo' Silo.GetConsistentHashCode()' RingRange); " is 168.
Long Statement,Orleans.Runtime,GrainService,C:\repos\dotnet_orleans\src\Orleans.Runtime\Services\GrainService.cs,OnRangeChange,The length of the statement  "            Logger.Info(ErrorCode.RS_RangeChanged' "My range changed from {0} to {1} increased = {2}"' oldRange' newRange' increased); " is 122.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,CreateSystemTargets,The length of the statement  "            RegisterSystemTarget(new StreamProviderManagerAgent(this' Services.GetRequiredService<IStreamProviderRuntime>()' this.loggerFactory)); " is 134.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,CreateSystemTargets,The length of the statement  "            typeManager = new TypeManager(SiloAddress' grainTypeManager' membershipOracle' LocalScheduler' GlobalConfig.TypeMapRefreshInterval' implicitStreamSubscriberTable' this.grainFactory' versionDirectorManager' " is 205.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeInitializeStart,The length of the statement  "                    throw new InvalidOperationException(String.Format("Calling Silo.Start() on a silo which is not in the Created state. This silo is in the {0} state."' this.SystemStatus)); " is 170.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The length of the statement  "            implicitStreamSubscriberTable.InitImplicitStreamSubscribers(grainTypeManager.GrainClassTypeData.Select(t => t.Value.Type).ToArray()); " is 133.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The length of the statement  "                this.platformWatchdog = new Watchdog(this.LocalConfig.StatisticsLogWriteInterval' this.healthCheckParticipants' this.executorService' this.loggerFactory); " is 154.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The length of the statement  "                    () => this.bootstrapProviderManager.LoadAppBootstrapProviders(siloProviderRuntime' this.GlobalConfig.ProviderConfigurations)' " is 125.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The length of the statement  "                // Start stream providers after silo is active (so the pulling agents don't start sending messages before silo is active). " is 122.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The length of the statement  "                // also after bootstrap provider started so bootstrap provider can initialize everything stream before events from this silo arrive. " is 132.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The length of the statement  "                await this.scheduler.QueueTask(siloStreamProviderManager.StartStreamProviders' this.providerManagerSystemTarget.SchedulingContext) " is 130.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStart,The length of the statement  "                this.SafeExecute(() => this.logger.Error(ErrorCode.Runtime_Error_100330' String.Format("Error starting silo {0}. Going to FastKill()."' this.SiloAddress)' exc)); " is 161.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,CreateGrainServices,The length of the statement  "                    throw new Exception(String.Format("Cannot find Grain Service type {0} of Grain Service {1}"' serviceConfig.Value.ServiceType' serviceConfig.Value.Name)); " is 153.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,CreateGrainServices,The length of the statement  "                var grainServiceInterfaceType = serviceType.GetInterfaces().FirstOrDefault(x => x.GetInterfaces().Contains(typeof(IGrainService))); " is 131.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,CreateGrainServices,The length of the statement  "                    throw new Exception(String.Format("Cannot find an interface on {0} which implements IGrainService"' serviceConfig.Value.ServiceType)); " is 134.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,CreateGrainServices,The length of the statement  "                var grainService = (GrainService)ActivatorUtilities.CreateInstance(this.Services' serviceType' grainId' serviceConfig.Value); " is 125.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,CreateGrainServices,The length of the statement  "                await this.scheduler.QueueTask(() => grainService.Init(Services)' grainService.SchedulingContext).WithTimeout(this.initTimeout); " is 128.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,ConfigureThreadPoolAndServicePointSettings,The length of the statement  "                    // if at least one of the new values is larger' set the new min values to be the larger of the prev. and new config value. " is 122.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,ConfigureThreadPoolAndServicePointSettings,The length of the statement  "            // http://blogs.msdn.com/b/windowsazurestorage/archive/2010/06/25/nagle-s-algorithm-is-not-friendly-towards-small-requests.aspx " is 127.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,ConfigureThreadPoolAndServicePointSettings,The length of the statement  "                "Configured .NET ServicePointManager to Expect100Continue={0}' DefaultConnectionLimit={1}' UseNagleAlgorithm={2} to improve Azure storage performance."' " is 152.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,StopAsync,The length of the statement  "                    throw new InvalidOperationException(String.Format("Calling Silo.{0} on a silo which is not in the Running state. This silo is in the {1} state."' operation' this.SystemStatus)); " is 177.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStop,The length of the statement  "                logger.Error(ErrorCode.SiloFailedToStopMembership' String.Format("Failed to {0} membership oracle. About to FastKill this silo."' operation)' exc); " is 147.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,OnRuntimeServicesStop,The length of the statement  "            // Streams and Bootstrap - the order is less clear. Seems like Bootstrap may indirecly depend on Streams' but not the other way around. " is 135.
Long Statement,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,HandleProcessExit,The length of the statement  "            // NOTE: We need to minimize the amount of processing occurring on this code path -- we only have under approx 2-3 seconds before process exit will occur " is 153.
Long Statement,Orleans.Runtime,SiloControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloControl.cs,GetSimpleGrainStatistics,The length of the statement  "                new SimpleGrainStatistic { SiloAddress = this.localSiloDetails.SiloAddress' GrainType = p.Key' ActivationCount = (int)p.Value }).ToArray()); " is 140.
Long Statement,Orleans.Runtime,SiloControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloControl.cs,UpdateConfiguration,The length of the statement  "            logger.Info(ErrorCode.Runtime_Error_100318' "UpdateConfiguration - new config is now {0}"' this.clusterConfiguration.ToString(this.localSiloDetails.Name)); " is 155.
Long Statement,Orleans.Runtime,SiloControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloControl.cs,UpdateStreamProviders,The length of the statement  "                RuntimeClient.InternalGrainFactory.GetSystemTarget<IStreamProviderManagerAgent>(Constants.StreamProviderManagerAgentSystemTargetId' this.localSiloDetails.SiloAddress); " is 167.
Long Statement,Orleans.Runtime,SiloControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloControl.cs,UpdateStreamProviders,The length of the statement  "            await this.providerManagerSystemTarget.ScheduleTask(() => streamProviderUpdateAgent.UpdateStreamProviders(streamProviderConfigurations)) " is 136.
Long Statement,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,WatchdogHeartbeatTick,The length of the statement  "                        String.Format("HealthCheckParticipant {0} has thrown an exception from its CheckHealth method."' participant.ToString())' exc);  " is 127.
Long Statement,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,WatchdogHeartbeatTick,The length of the statement  "                logger.Warn(ErrorCode.Watchdog_HealthCheckFailure' String.Format("Watchdog had {0} Health Check Failure(s) out of {1} Health Check Participants."' numFailedChecks' participants.Count));  " is 185.
Long Statement,Orleans.Runtime,StreamProviderManagerAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\StreamProviderManagerAgent.cs,Update,The length of the statement  "            streamProviderConfigurations.TryGetValue(ProviderCategoryConfiguration.STREAM_PROVIDER_CATEGORY_NAME' out categoryConfig); " is 122.
Long Statement,Orleans.Runtime,StreamProviderManagerAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\StreamProviderManagerAgent.cs,Update,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) { logger.Debug("streamProviderConfigurations does not contain '" + ProviderCategoryConfiguration.STREAM_PROVIDER_CATEGORY_NAME  " is 164.
Long Statement,Orleans.Runtime,GrainTimer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Timers\GrainTimer.cs,ForwardToAsyncCallback,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(ErrorCode.TimerAfterCallback' "Completed timer callback for timer {0}"' GetFullName()); " is 138.
Long Statement,Orleans.Runtime,SiloUnobservedExceptionsHandler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Utilities\SiloUnobservedExceptionsHandler.cs,InternalUnobservedTaskExceptionHandler,The length of the statement  "                    logger.Info(ErrorCode.Runtime_Error_100311' "Silo caught an UnobservedTaskException which was successfully observed and recovered from. BaseException = {0}. Exception = {1}"' " is 174.
Long Statement,Orleans.Runtime,SiloUnobservedExceptionsHandler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Utilities\SiloUnobservedExceptionsHandler.cs,InternalUnobservedTaskExceptionHandler,The length of the statement  "                    logger.Error(ErrorCode.Runtime_Error_100006' "Exception remained UnObserved!!! The subsequent behavior depends on the ThrowUnobservedTaskExceptions setting in app config and .NET version."); " is 190.
Long Statement,Orleans.Runtime,SiloUnobservedExceptionsHandler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Utilities\SiloUnobservedExceptionsHandler.cs,UnobservedExceptionHandler,The length of the statement  "                    logger.Error(ErrorCode.Runtime_Error_100103' String.Format("Silo caught an UnobservedException with context of type different than OrleansContext. The type of the context is {0}. The context is {1}"' " is 199.
Long Statement,Orleans.Runtime,SiloUnobservedExceptionsHandler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Utilities\SiloUnobservedExceptionsHandler.cs,UnobservedExceptionHandler,The length of the statement  "                logger.Error(ErrorCode.Runtime_Error_100104' String.Format("Silo caught an UnobservedException thrown by {0}."' schedulingContext.Activation)' exception); " is 154.
Long Statement,Orleans.Runtime,SiloUnobservedExceptionsHandler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Utilities\SiloUnobservedExceptionsHandler.cs,DomainUnobservedExceptionHandler,The length of the statement  "                logger.Error(ErrorCode.Runtime_Error_100324' String.Format("Called DomainUnobservedExceptionHandler with context {0}."' context)' exception); " is 141.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,AddServer,The length of the statement  "                    throw new OrleansException(string.Format("{0}: Couldn't find my position in the ring {1}."' MyAddress' Utils.EnumerableToString(membershipRingList))); " is 150.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,AddServer,The length of the statement  "                // Find the last silo with hash smaller than the new silo' and insert the latter after (this is why we have +1 here) the former. " is 128.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,AddServer,The length of the statement  "                            String.Format("OverflowException: hash as int= x{0' 8:X8}' hash as uint= x{1' 8:X8}' myKey as int x{2' 8:X8}' myKey as uint x{3' 8:X8}."' " is 137.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,ToString,The length of the statement  "                    return Utils.EnumerableToString(membershipRingList' silo => String.Format("{0} -> {1}"' silo.ToStringWithHashCode()' RangeFactory.CreateFullRange())); " is 150.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,ToString,The length of the statement  "                    IRingRange range = RangeFactory.CreateRange(unchecked((uint)curr.GetConsistentHashCode())' unchecked((uint)next.GetConsistentHashCode())); " is 138.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,RemoveServer,The length of the statement  "                    throw new OrleansException(string.Format("{0}: Couldn't find my position in the ring {1}."' MyAddress' this.ToString())); " is 121.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,RemoveServer,The length of the statement  "                bool wasMyPred = ((myNewIndex == indexOfFailedSilo) || (myNewIndex == 0 && indexOfFailedSilo == membershipRingList.Count)); // no need for '- 1' " is 144.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,RemoveServer,The length of the statement  "                    if (log.IsEnabled(LogLevel.Debug)) log.Debug("Failed server was my pred? {0}' updated view {1}"' wasMyPred' this.ToString()); " is 125.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,FindPredecessors,The length of the statement  "                    log.Warn(ErrorCode.Runtime_Error_100201' "Got request to find predecessors of silo " + silo + "' which is not in the list of members."); " is 136.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,FindSuccessors,The length of the statement  "                    log.Warn(ErrorCode.Runtime_Error_100203' "Got request to find successors of silo " + silo + "' which is not in the list of members."); " is 134.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,NotifyLocalRangeSubscribers,The length of the statement  "                        String.Format("Local IRangeChangeListener {0} has thrown an exception when was notified about RangeChangeNotification about old {1} new {2} increased? {3}"' " is 156.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,SiloStatusChangeNotification,The length of the statement  "                else if (status == SiloStatus.Active)      // do not do anything with SiloStatus.Created or SiloStatus.Joining -- wait until it actually becomes active " is 151.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,CalculateTargetSilo,The length of the statement  "                // excludeMySelf from being a TargetSilo if we're not running and the excludeThisSIloIfStopping flag is true. see the comment in the Stop method. " is 145.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,CalculateTargetSilo,The length of the statement  "                // if you want to stick to counter-clockwise' change the responsibility definition in 'In()' method & responsibility defs in OrleansReminderMemory " is 146.
Long Statement,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,CalculateTargetSilo,The length of the statement  "            if (log.IsEnabled(LogLevel.Trace)) log.Trace("Silo {0} calculated ring partition owner silo {1} for key {2}: {3} --> {4}"' MyAddress' siloAddress' hash' hash' siloAddress.GetConsistentHashCode()); " is 196.
Long Statement,Orleans.Runtime.ConsistentRing,EquallyDividedRangeRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\EquallyDividedRangeRingProvider.cs,RangeChangeNotification,The length of the statement  "            // For now' always say your range increased and the listeners need to deal with the situation when they get the same range again anyway. " is 136.
Long Statement,Orleans.Runtime.ConsistentRing,EquallyDividedRangeRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\EquallyDividedRangeRingProvider.cs,RangeChangeNotification,The length of the statement  "            logger.Info("-NotifyLocal GrainRangeSubscribers about old {0} and new {1} increased? {2}."' oldSubRange.ToString()' newSubRange.ToString()' increased); " is 151.
Long Statement,Orleans.Runtime.ConsistentRing,EquallyDividedRangeRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\EquallyDividedRangeRingProvider.cs,RangeChangeNotification,The length of the statement  "                                        String.Format("Local IGrainRingRangeListener {0} has thrown an asynchronous exception when was notified about RangeChangeNotification about old {1} new {2}."' " is 158.
Long Statement,Orleans.Runtime.ConsistentRing,EquallyDividedRangeRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\EquallyDividedRangeRingProvider.cs,RangeChangeNotification,The length of the statement  "                        String.Format("Local IGrainRingRangeListener {0} has thrown an exception when was notified about RangeChangeNotification about old {1} new {2}."' " is 145.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,NotifyLocalRangeSubscribers,The length of the statement  "            logger.Info(ErrorCode.CRP_Notify' "-NotifyLocalRangeSubscribers about old {0} new {1} increased? {2}"' old.ToString()' now.ToString()' increased); " is 146.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,NotifyLocalRangeSubscribers,The length of the statement  "                        String.Format("Local IRangeChangeListener {0} has thrown an exception when was notified about RangeChangeNotification about old {1} new {2} increased? {3}"' " is 156.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,AddServer,The length of the statement  "                logger.Info(ErrorCode.CRP_Added_Silo' "Added Server {0}. Current view: {1}"' silo.ToStringWithHashCode()' this.ToString()); " is 123.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,RemoveServer,The length of the statement  "                logger.Info(ErrorCode.CRP_Removed_Silo' "Removed Server {0}. Current view: {1}"' silo.ToStringWithHashCode()' this.ToString()); " is 127.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,SiloStatusChangeNotification,The length of the statement  "                else if (status == SiloStatus.Active)      // do not do anything with SiloStatus.Created or SiloStatus.Joining -- wait until it actually becomes active " is 151.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,CalculateTargetSilo,The length of the statement  "            // excludeMySelf from being a TargetSilo if we're not running and the excludeThisSIloIfStopping flag is true. see the comment in the Stop method. " is 145.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,CalculateTargetSilo,The length of the statement  "            // if you want to stick to counter-clockwise' change the responsibility definition in 'In()' method & responsibility defs in OrleansReminderMemory " is 146.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,CalculateTargetSilo,The length of the statement  "            Tuple<uint' SiloAddress> s = snapshotBucketsList.Find(tuple => (tuple.Item1 >= hash) && // <= hash for counter-clockwise responsibilities " is 137.
Long Statement,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,CalculateTargetSilo,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("Calculated ring partition owner silo {0} for key {1}: {2} --> {3}"' s.Item2' hash' hash' s.Item1); " is 150.
Long Statement,Orleans.Runtime.Management,ManagementGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\ManagementGrain.cs,SendControlCommandToProvider,The length of the statement  "                String.Format("SendControlCommandToProvider of type {0} and name {1} command {2}."' providerTypeFullName' providerName' command)); " is 130.
Long Statement,Orleans.Runtime.Management,ManagementGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\ManagementGrain.cs,GetMembershipTable,The length of the statement  "            if (!(this.siloStatusOracle is MembershipOracle)) throw new InvalidOperationException("The current membership oracle does not support detailed silo status reporting."); " is 168.
Long Statement,Orleans.Runtime.Counters,CountersStatistics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\CountersStatistics.cs,Start,The length of the statement  "            logger.Info(ErrorCode.PerfCounterStarting' "Starting Windows perf counter stats collection with frequency={0}"' PerfCountersWriteInterval); " is 139.
Long Statement,Orleans.Runtime.Counters,CountersStatistics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\CountersStatistics.cs,Start,The length of the statement  "            timer = new SafeTimer(this.loggerFactory.CreateLogger<SafeTimer>()' TimerTick' null' PerfCountersWriteInterval' PerfCountersWriteInterval); " is 139.
Long Statement,Orleans.Runtime.Counters,SiloPerformanceMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloPerformanceMetrics.cs,Reporter,The length of the statement  "                logger.Error(ErrorCode.Runtime_Error_100101' "Exception occurred during Silo Table metrics reporter: " + e.Message' exc); " is 121.
Long Statement,Orleans.Runtime.Counters,SiloStatisticsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloStatisticsManager.cs,SetSiloMetricsTableDataManager,The length of the statement  "                var metricsDataPublisher = AssemblyLoader.LoadAndCreateInstance<ISiloMetricsDataPublisher>(Constants.ORLEANS_STATISTICS_AZURESTORAGE' logger' silo.Services); " is 157.
Long Statement,Orleans.Runtime.Counters,SiloStatisticsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloStatisticsManager.cs,SetSiloMetricsTableDataManager,The length of the statement  "                await metricsDataPublisher.Init(this.siloOptions.ClusterId' silo.GlobalConfig.DataConnectionString' silo.SiloAddress' this.siloOptions.SiloName' gateway' nodeConfig.DNSHostName); " is 178.
Long Statement,Orleans.Runtime.Counters,SiloStatisticsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloStatisticsManager.cs,SetSiloStatsTableDataManager,The length of the statement  "                var statsDataPublisher = AssemblyLoader.LoadAndCreateInstance<IStatisticsPublisher>(Constants.ORLEANS_STATISTICS_AZURESTORAGE' logger' silo.Services); " is 150.
Long Statement,Orleans.Runtime.Counters,SiloStatisticsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Counters\SiloStatisticsManager.cs,SetSiloStatsTableDataManager,The length of the statement  "                await statsDataPublisher.Init(true' silo.GlobalConfig.DataConnectionString' this.siloOptions.ClusterId' silo.SiloAddress.ToLongString()' this.siloOptions.SiloName' nodeConfig.DNSHostName); " is 188.
Long Statement,Orleans.Runtime.Development,DevelopmentLeaseProviderGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Development\InMemoryLeaseProvider.cs,Acquire,The length of the statement  "                return new AcquireLeaseResult(new AcquiredLease(leaseRequest.ResourceKey' leaseRequest.Duration' lease.Token' now)' ResponseCode.OK' null); " is 139.
Long Statement,Orleans.Runtime.Development,DevelopmentLeaseProviderGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Development\InMemoryLeaseProvider.cs,Renew,The length of the statement  "            if (!this.leases.TryGetValue(Tuple.Create(category' acquiredLease.ResourceKey)' out Lease lease) || lease.Token != acquiredLease.Token) " is 135.
Long Statement,Orleans.Runtime.Development,DevelopmentLeaseProviderGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Development\InMemoryLeaseProvider.cs,Renew,The length of the statement  "                return new AcquireLeaseResult(null' ResponseCode.InvalidToken' new OrleansException("Invalid token provided' caller is not the owner.")); " is 137.
Long Statement,Orleans.Runtime.Development,DevelopmentLeaseProviderGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Development\InMemoryLeaseProvider.cs,Renew,The length of the statement  "            return new AcquireLeaseResult(new AcquiredLease(acquiredLease.ResourceKey' acquiredLease.Duration' lease.Token' now)' ResponseCode.OK' null); " is 141.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,Run,The length of the statement  "                if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Silo {0} self-owned (and removed) {1}' kept {2}' removed {3} and tries to refresh {4} grains"' router.MyAddress' cnt1' cnt2' cnt3' cnt4); " is 183.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,SendBatchCacheRefreshRequests,The length of the statement  "                if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Silo {0} is sending request to silo {1} with {2} entries"' router.MyAddress' silo' cachedGrainAndETagList.Count);                 " is 159.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,ProcessCacheRefreshResponse,The length of the statement  "            if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Silo {0} received ProcessCacheRefreshResponse. #Response entries {1}."' router.MyAddress' refreshResponse.Count); " is 159.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,ProcessCacheRefreshResponse,The length of the statement  "                    // It could be that by now' the cache has been already updated and contains an entry received from another server (i.e.' current owner for the grain). " is 150.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,ProcessCacheRefreshResponse,The length of the statement  "            if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Silo {0} processed refresh response from {1} with {2} updated' {3} removed' {4} unchanged grains"' router.MyAddress' silo' cnt1' cnt2' cnt3); " is 187.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,ProduceStats,The length of the statement  "            if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("#accesses: {0}' hit-ratio: {1}%"' numAccesses' (numHits / Math.Max(numAccesses' 0.00001)) * 100); " is 143.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveGrainDirectoryCache<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveGrainDirectoryCache.cs,LookUp,The length of the statement  "            // This is to avoid situation where the entry was just expired' but the manager still have not run and have not refereshed it. " is 126.
Long Statement,Orleans.Runtime.GrainDirectory,AdaptiveGrainDirectoryCache<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveGrainDirectoryCache.cs,MarkAsFresh,The length of the statement  "            TimeSpan newExpirationTimer = StandardExtensions.Min(maxExpirationTimer' result.ExpirationTimer.Multiply(exponentialTimerGrowth)); " is 130.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryCacheFactory<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryCacheFactory.cs,CreateGrainDirectoryCache,The length of the statement  "                    return new AdaptiveGrainDirectoryCache<TValue>(cfg.InitialCacheTTL' cfg.MaximumCacheTTL' cfg.CacheTTLExtensionFactor' cfg.CacheSize); " is 133.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryCacheFactory<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryCacheFactory.cs,CreateGrainDirectoryCacheMaintainer,The length of the statement  "                ? new AdaptiveDirectoryCacheMaintainer<TValue>(router' adaptiveCache' updateFunc' grainFactory' executorService' loggerFactory) " is 127.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,HandoffMyPartitionUponStop,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug((isFullCopy ? "FULL" : "DELTA") + " handoff finished with empty delta (nothing to send)"); " is 141.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,HandoffMyPartitionUponStop,The length of the statement  "                // This is a quick temporary solution. We send a full copy by sending one chunk as a full copy and follow-on chunks as deltas. " is 126.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,HandoffMyPartitionUponStop,The length of the statement  "                // Obviously' this will really mess up if there's a failure after the first chunk but before the others are sent' since on a " is 124.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,HandoffMyPartitionUponStop,The length of the statement  "                // On the other hand' over time things should correct themselves' and of course' losing directory data isn't necessarily catastrophic. " is 134.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,ProcessSiloRemoveEvent,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Merging partition of " + predecessor + " with the copy of silo " + removedSilo); " is 132.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,ProcessSiloStoppingEvent_Impl,The length of the statement  "                // Select our nearest predecessor to receive our hand-off' since that's the silo that will wind up owning our partition (assuming " is 129.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,ProcessSiloAddEvent,The length of the statement  "                        if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Sending " + splitPartListSingle.Count + " single activation entries to " + addedSilo); " is 138.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,ProcessSiloAddEvent,The length of the statement  "                        logger.Warn(ErrorCode.DirectoryPartitionPredecessorExpected' "This silo is expected to hold directory partition of " + predecessorOfNewSilo); " is 141.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,ProcessSiloAddEvent,The length of the statement  "                        if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Splitting partition of " + predecessorOfNewSilo + " and creating a copy for " + addedSilo); " is 143.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,ProcessSiloAddEvent,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Removing copy of the directory partition of silo " + oldSuccessor + " (holding copy of " + addedSilo + " instead)"); " is 168.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,AcceptHandoffPartition,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Got request to register " + (isFullCopy ? "FULL" : "DELTA") + " directory partition with " + partition.Count + " elements from " + source); " is 191.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,AcceptHandoffPartition,The length of the statement  "                            String.Format("Got delta of the directory partition from silo {0} (Membership status {1}) while not holding a full copy. Membership active cluster size is {2}"' " is 160.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,RemoveHandoffPartition,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Got request to unregister directory partition copy from " + source); " is 120.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryPartition,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,RemoveActivation,The length of the statement  "                if (partitionData.ContainsKey(grain) && partitionData[grain].RemoveActivation(activation' cause' globalConfig' out entry' out wasRemoved)) " is 138.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryPartition,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,RemoveActivation,The length of the statement  "            if (log.IsEnabled(LogLevel.Trace)) log.Trace("Removing activation for grain {0} cause={1} was_removed={2}"' grain.ToString()' cause' wasRemoved); " is 145.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryPartition,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,Merge,The length of the statement  "                        if (log.IsEnabled(LogLevel.Debug)) log.Debug("While merging two disjoint partitions' same grain " + pair.Key + " was found in both partitions"); " is 144.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryPartition,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,Split,The length of the statement  "            var newDirectory = new GrainDirectoryPartition(this.siloStatusOracle' this.globalConfig' this.grainFactory' this.loggerFactory); " is 128.
Long Statement,Orleans.Runtime.GrainDirectory,GrainDirectoryPartition,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,ToListOfActivations,The length of the statement  "                        result.AddRange(pair.Value.Instances.Select(activationPair => ActivationAddress.GetAddress(activationPair.Value.SiloAddress' grain' activationPair.Key)) " is 152.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,Stop,The length of the statement  "            // new owner of the grain' or will wind up failing. In either case' we avoid requests succeeding at this silo after we've " is 121.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,AddServer,The length of the statement  "                // Find the last silo with hash smaller than the new silo' and insert the latter after (this is why we have +1 here) the former. " is 128.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RemoveServer,The length of the statement  "                            String.Format("CatalogSiloStatusListener.SiloStatusChangeNotification has thrown an exception when notified about removed silo {0}."' silo.ToStringWithHashCode())' exc); " is 169.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,FindPredecessors,The length of the statement  "                    log.Warn(ErrorCode.Runtime_Error_100201' "Got request to find predecessors of silo " + silo + "' which is not in the list of members"); " is 135.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,FindSuccessors,The length of the statement  "                    log.Warn(ErrorCode.Runtime_Error_100203' "Got request to find successors of silo " + silo + "' which is not in the list of members"); " is 133.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,SiloStatusChangeNotification,The length of the statement  "                else if (status == SiloStatus.Active)      // do not do anything with SiloStatus.Starting -- wait until it actually becomes active " is 130.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CalculateTargetSilo,The length of the statement  "                if (log.IsEnabled(LogLevel.Trace)) log.Trace("Silo {0} looked for a system target {1}' returned {2}"' MyAddress' grainId' MyAddress); " is 133.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CalculateTargetSilo,The length of the statement  "                    var errorMsg = $"{grainName} cannot run without Seed node. Please check your silo configuration make sure it specifies a SeedNode element. " + " is 142.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CalculateTargetSilo,The length of the statement  "                if (log.IsEnabled(LogLevel.Trace)) log.Trace("Silo {0} looked for a special grain {1}' returned {2}"' MyAddress' grainId' Seed); " is 128.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CalculateTargetSilo,The length of the statement  "            // excludeMySelf from being a TargetSilo if we're not running and the excludeThisSIloIfStopping flag is true. see the comment in the Stop method. " is 145.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CalculateTargetSilo,The length of the statement  "            if (log.IsEnabled(LogLevel.Trace)) log.Trace("Silo {0} calculated directory partition owner silo {1} for grain {2}: {3} --> {4}"' MyAddress' siloAddress' grainId' hash' siloAddress.GetConsistentHashCode()); " is 206.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CheckIfShouldForward,The length of the statement  "                throw new OrleansException(string.Format("Silo {0} is not owner of {1}' cannot forward {2} to owner {3} because hop limit is reached"' MyAddress' grainId' operationDescription' owner)); " is 185.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RegisterAsync,The length of the statement  "                AddressAndTag result = await GetDirectoryReference(forwardAddress).RegisterAsync(address' singleActivation' hopCount + 1); " is 122.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,UnregisterOrPutInForwardList,The length of the statement  "            Dictionary<IGrainRegistrar' List<ActivationAddress>> unregisterBatches = new Dictionary<IGrainRegistrar' List<ActivationAddress>>(); " is 132.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,UnregisterManyAsync,The length of the statement  "                UnregisterOrPutInForwardList(forwardlist.SelectMany(kvp => kvp.Value)' cause' hopCount' ref forwardlist2' tasks' "UnregisterManyAsync(recheck)"); " is 145.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,LocalLookup,The length of the statement  "            if (log.IsEnabled(LogLevel.Debug)) log.Debug("Silo {0} tries to lookup for {1}-->{2} ({3}-->{4})"' MyAddress' grain' silo' grain.GetUniformHashCode()' silo.GetConsistentHashCode()); " is 181.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,GetLocalCacheData,The length of the statement  "                cached.Select(elem => ActivationAddress.GetAddress(elem.Item1' grain' elem.Item2)).Where(addr => IsValidSilo(addr.Silo)).ToList() :  " is 131.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,LookupAsync,The length of the statement  "                    throw new OrleansException(String.Format("Current directory at {0} is not stable to perform the lookup for grainId {1} (it maps to {2}' which is not a valid silo). Retry later."' MyAddress' grainId' forwardAddress)); " is 216.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RingStatusToString,The length of the statement  "            sb.AppendFormat("Silo address is {0}' silo consistent hash is {1:X}."' MyAddress' MyAddress.GetConsistentHashCode()).AppendLine(); " is 130.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RingStatusToString,The length of the statement  "            sb.AppendFormat("My predecessors: {0}"' FindPredecessors(MyAddress' 1).ToStrings(addr => String.Format("{0}/{1:X}---"' addr' addr.GetConsistentHashCode())' " -- ")).AppendLine(); " is 178.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RingStatusToString,The length of the statement  "            sb.AppendFormat("My successors: {0}"' FindSuccessors(MyAddress' 1).ToStrings(addr => String.Format("{0}/{1:X}---"' addr' addr.GetConsistentHashCode())' " -- ")); " is 161.
Long Statement,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RemoveActivations,The length of the statement  "            if (activations.Count > removeCount) // still some left' update activation list.  Note: Most of the time there should be only one activation " is 140.
Long Statement,Orleans.Runtime.GrainDirectory,ClusterGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterGrainDirectory.cs,ProcessActivationRequest,The length of the statement  "                    "GSIP:Rsp {0} Origin={1} GSI request rejected because origin is not in MC configuration"' grain.ToString()' requestClusterId); " is 126.
Long Statement,Orleans.Runtime.GrainDirectory,ClusterGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterGrainDirectory.cs,ProcessActivationRequest,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("GSIP:Rsp {0} Origin={1} forward to {2}"' grain.ToString()' requestClusterId' forwardAddress); " is 145.
Long Statement,Orleans.Runtime.GrainDirectory,ClusterGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterGrainDirectory.cs,ProcessActivationRequest,The length of the statement  "                var clusterGrainDir = this.grainFactory.GetSystemTarget<IClusterGrainDirectory>(Constants.ClusterDirectoryServiceId' forwardAddress); " is 133.
Long Statement,Orleans.Runtime.GrainDirectory,ClusterGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterGrainDirectory.cs,ProcessRequestLocal,The length of the statement  "                GrainDirectoryEntryStatus existingActivationStatus = router.DirectoryPartition.TryGetActivation(grain' out address' out version); " is 129.
Long Statement,Orleans.Runtime.GrainDirectory,ClusterGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterGrainDirectory.cs,ProcessRequestLocal,The length of the statement  "                                var success = router.DirectoryPartition.UpdateClusterRegistrationStatus(grain' address.Activation' GrainDirectoryEntryStatus.RaceLoser' GrainDirectoryEntryStatus.RequestedOwnership); " is 182.
Long Statement,Orleans.Runtime.GrainDirectory,ClusterLocalRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterLocalRegistrar.cs,Register,The length of the statement  "                var result = directoryPartition.AddSingleActivation(address.Grain' address.Activation' address.Silo' GrainDirectoryEntryStatus.ClusterLocal); " is 141.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,Run,The length of the statement  "                        logger.Debug("GSIP:M Not joined to multicluster. Make {0} owned entries doubtful {1}"' ownedEntries.Count' logger.IsEnabled(LogLevel.Trace) ? string.Join("'"' ownedEntries.Select(s => s.Item1)) : ""); " is 200.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,Run,The length of the statement  "                        logger.Debug("GSIP:M retry {0} doubtful entries {1}"' grains.Count' logger.IsEnabled(LogLevel.Trace) ? string.Join("'"' grains) : ""); " is 134.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedDemotion,The length of the statement  "                router.DirectoryPartition.UpdateClusterRegistrationStatus(entry.Item1' entry.Item2.Key' GrainDirectoryEntryStatus.Doubtful' GrainDirectoryEntryStatus.Owned); " is 157.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The length of the statement  "                    if (router.DirectoryPartition.UpdateClusterRegistrationStatus(grain' address.Activation' GrainDirectoryEntryStatus.RequestedOwnership' GrainDirectoryEntryStatus.Doubtful)) " is 171.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The length of the statement  "                    var clusterGrainDir = this.grainFactory.GetSystemTarget<IClusterGrainDirectory>(Constants.ClusterDirectoryServiceId' clusterGatewayAddress); " is 140.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The length of the statement  "                    var r = await clusterGrainDir.ProcessActivationRequestBatch(addresses.Select(a => a.Grain).ToArray()' this.siloOptions.ClusterId); " is 130.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The length of the statement  "                        router.DirectoryPartition.CacheOrUpdateRemoteClusterRegistration(address.Grain' address.Activation' outcomeDetails.RemoteOwnerAddress.Address); " is 143.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The length of the statement  "                        var ok = (router.DirectoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.Owned' GrainDirectoryEntryStatus.RequestedOwnership)); " is 183.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The length of the statement  "                    var success = router.DirectoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.Doubtful' GrainDirectoryEntryStatus.RequestedOwnership); " is 189.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The length of the statement  "                    var success = router.DirectoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.Doubtful' GrainDirectoryEntryStatus.RaceLoser); " is 180.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,ProtocolError,The length of the statement  "            logger.Error((int) ErrorCode.GlobalSingleInstance_ProtocolError' string.Format("GSIP:Req {0} {1}"' address.Grain.ToString()' msg)); " is 131.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "                return directoryPartition.AddSingleActivation(address.Grain' address.Activation' address.Silo' GrainDirectoryEntryStatus.Owned); " is 128.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "                return directoryPartition.AddSingleActivation(address.Grain' address.Activation' address.Silo' GrainDirectoryEntryStatus.Doubtful); " is 131.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "            var myActivation = directoryPartition.AddSingleActivation(address.Grain' address.Activation' address.Silo' GrainDirectoryEntryStatus.RequestedOwnership); " is 153.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "                    logger.Debug("GSIP:Req {0} Round={1} Act={2}"' address.Grain.ToString()' numRetries - retries' myActivation.Address.ToString()); " is 128.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "                            directoryPartition.CacheOrUpdateRemoteClusterRegistration(address.Grain' address.Activation' outcome.RemoteOwnerAddress.Address); " is 129.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "                            if (directoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.Owned' GrainDirectoryEntryStatus.RequestedOwnership)) " is 169.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "                    var success = directoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.RequestedOwnership' GrainDirectoryEntryStatus.RaceLoser); " is 183.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The length of the statement  "            var ok = directoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.Doubtful' GrainDirectoryEntryStatus.RequestedOwnership); " is 177.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,ProtocolError,The length of the statement  "            logger.Error((int)ErrorCode.GlobalSingleInstance_ProtocolError' string.Format("GSIP:Req {0} PROTOCOL ERROR {1}"' address.Grain.ToString()' msg)); " is 145.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,UnregisterAsync,The length of the statement  "                    var clusterGrainDir = this.grainFactory.GetSystemTarget<IClusterGrainDirectory>(Constants.ClusterDirectoryServiceId' clusterGatewayAddress); " is 140.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,InvalidateCache,The length of the statement  "            directoryPartition.RemoveActivation(address.Grain' address.Activation' UnregistrationCause.CacheInvalidation' out existingAct' out wasRemoved); " is 143.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,DeleteAsync,The length of the statement  "                    var clusterGrainDir = this.grainFactory.GetSystemTarget<IClusterGrainDirectory>(Constants.ClusterDirectoryServiceId' clusterGatewayAddress); " is 140.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,SendRequest,The length of the statement  "                var clusterGrainDir = this.grainFactory.GetSystemTarget<IClusterGrainDirectory>(Constants.ClusterDirectoryServiceId' clusterGatewayAddress); " is 140.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceResponseTracker,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceResponseTracker.cs,GetOutcomeAsync,The length of the statement  "            if (responsePromises.Any(t => t == null)) throw new ArgumentException("All response promises should have been initiated"' nameof(responsePromises)); " is 148.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceResponseTracker,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceResponseTracker.cs,GetOutcome,The length of the statement  "                    logger.Warn((int)ErrorCode.GlobalSingleInstance_MultipleOwners' "GSIP:Req {0} Unexpected error occured. Multiple Owner Replies."' grainId); " is 139.
Long Statement,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceResponseTracker,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceResponseTracker.cs,GetOutcome,The length of the statement  "                return new GlobalSingleInstanceResponseOutcome(OutcomeState.RemoteOwner' ownerResponses[0].ExistingActivationAddress' ownerResponses[0].ClusterId); " is 147.
Long Statement,Orleans.Runtime.GrainDirectory,RemoteGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\RemoteGrainDirectory.cs,LookUpMany,The length of the statement  "                        result.Add(new Tuple<GrainId' int' List<ActivationAddress>>(tuple.Item1' lookupResult.VersionTag' lookupResult.Addresses)); " is 123.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddFromExisting<IKeyedServiceCollection<string' IStorageProvider>' StorageProviderManager>(); // as named services " is 126.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddSingleton<IStorageProvider>(sp => sp.GetRequiredService<StorageProviderManager>().GetDefaultProvider()); // default " is 130.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddFromExisting<IKeyedServiceCollection<string' ILogConsistencyProvider>' LogConsistencyProviderManager>(); // as named services " is 140.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddSingleton<ILogConsistencyProvider>(sp => sp.GetRequiredService<LogConsistencyProviderManager>().GetDefaultProvider()); // default " is 144.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddFromExisting<IKeyedServiceCollection<string' IStreamProvider>' StreamProviderManager>(); // as named services " is 124.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddSingleton<Factory<Grain' IMultiClusterRegistrationStrategy' ILogConsistencyProtocolServices>>(FactoryUtility.Create<Grain' IMultiClusterRegistrationStrategy' ProtocolServices>); " is 192.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddScoped<IGrainActivationContext>(sp => sp.GetRequiredService<ActivationData.GrainActivationContextFactory>().Context); " is 132.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            services.TryAddSingleton<IStreamSubscriptionManagerAdmin>(sp => new StreamSubscriptionManagerAdmin(sp.GetRequiredService<IStreamProviderRuntime>())); " is 149.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "                        return new VirtualBucketsRingProvider(siloDetails.SiloAddress' loggerFactory' globalConfig.NumVirtualBucketsConsistentRing); " is 124.
Long Statement,Orleans.Hosting,DefaultSiloServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\DefaultSiloServices.cs,AddDefaultServices,The length of the statement  "            applicationPartManager.AddApplicationPart(new AssemblyPart(typeof(RuntimeVersion).Assembly) {IsFrameworkAssembly = true}); " is 122.
Long Statement,Orleans.Hosting,SiloHostBuilder,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\Generic\SiloHostBuilder.cs,Build,The length of the statement  "                throw new InvalidOperationException($"{nameof(this.Build)} can only be called once per {nameof(SiloHostBuilder)} instance."); " is 125.
Long Statement,Orleans.Hosting,SiloHostBuilderExtensions,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\Generic\SiloHostBuilderExtensions.cs,ConfigureLogging,The length of the statement  "            return builder.ConfigureServices((context' collection) => collection.AddLogging(loggingBuilder => configureLogging(context' loggingBuilder))); " is 142.
Long Statement,Orleans.Hosting,LegacyClusterConfigurationExtensions,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\LegacyClusterConfigurationExtensions.cs,AddLegacyClusterConfigurationSupport,The length of the statement  "                .Configure<NodeConfiguration>((options' nodeConfig) => LegacyConfigurationExtensions.CopyStatisticsOptions(nodeConfig' options)); " is 129.
Long Statement,Orleans.Hosting,LegacyClusterConfigurationExtensions,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\LegacyClusterConfigurationExtensions.cs,AddLegacyClusterConfigurationSupport,The length of the statement  "            services.Configure<NetworkingOptions>(options => LegacyConfigurationExtensions.CopyNetworkingOptions(configuration.Globals' options)); " is 134.
Long Statement,Orleans.Runtime.LogConsistency,LogConsistencyProviderManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\LogConsistencyProviderManager.cs,LoadLogConsistencyProviders,The length of the statement  "            providerLoader.LoadProviders(configs[ProviderCategoryConfiguration.LOG_CONSISTENCY_PROVIDER_CATEGORY_NAME].Providers' this); " is 124.
Long Statement,Orleans.Runtime.LogConsistency,ProtocolServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\ProtocolServices.cs,SendMessage,The length of the statement  "                throw new ProtocolTransportException("cannot send protocol message to remote instance because there is only one global instance"); " is 130.
Long Statement,Orleans.Runtime.LogConsistency,ProtocolServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\ProtocolServices.cs,SendMessage,The length of the statement  "            var repAgent = this.grainFactory.GetSystemTarget<ILogConsistencyProtocolGateway>(Constants.ProtocolGatewayId' clusterGateway); " is 126.
Long Statement,Orleans.Runtime.LogConsistency,ProtocolServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\ProtocolServices.cs,ProtocolError,The length of the statement  "            log?.Error((int)(throwexception ? ErrorCode.LogConsistency_ProtocolFatalError : ErrorCode.LogConsistency_ProtocolError)' " is 120.
Long Statement,Orleans.Runtime.LogConsistency,ProtocolServices,C:\repos\dotnet_orleans\src\Orleans.Runtime\LogConsistency\ProtocolServices.cs,ProtocolError,The length of the statement  "                throw new OrleansException(string.Format("{0} (grain={1}' cluster={2})"' msg' grain.GrainReference' this.siloOptions.ClusterId)); " is 129.
Long Statement,Orleans.Runtime.MembershipService,GrainBasedMembershipTableGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\GrainBasedMembershipTable.cs,InsertRow,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("InsertRow entry = {0}' table version = {1}"' entry.ToFullString()' tableVersion); " is 133.
Long Statement,Orleans.Runtime.MembershipService,GrainBasedMembershipTableGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\GrainBasedMembershipTable.cs,UpdateRow,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("UpdateRow entry = {0}' etag = {1}' table version = {2}"' entry.ToFullString()' etag' tableVersion); " is 151.
Long Statement,Orleans.Runtime.MembershipService,LegacyMembershipConfigurator,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\ILegacyMembershipConfigurator.cs,ConfigureServices,The length of the statement  "                    configurator = LegacyGatewayListProviderConfigurator.CreateInstanceWithParameterlessConstructor<ILegacyMembershipConfigurator>(Constants.ORLEANS_SQL_UTILS_DLL); " is 160.
Long Statement,Orleans.Runtime.MembershipService,LegacyMembershipConfigurator,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\ILegacyMembershipConfigurator.cs,ConfigureServices,The length of the statement  "                    configurator = LegacyGatewayListProviderConfigurator.CreateInstanceWithParameterlessConstructor<ILegacyMembershipConfigurator>(Constants.ORLEANS_CLUSTERING_AZURESTORAGE); " is 170.
Long Statement,Orleans.Runtime.MembershipService,LegacyMembershipConfigurator,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\ILegacyMembershipConfigurator.cs,ConfigureServices,The length of the statement  "                    configurator = LegacyGatewayListProviderConfigurator.CreateInstanceWithParameterlessConstructor<ILegacyMembershipConfigurator>(Constants.ORLEANS_CLUSTERING_ZOOKEEPER); " is 167.
Long Statement,Orleans.Runtime.MembershipService,LegacyMembershipConfigurator,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\ILegacyMembershipConfigurator.cs,ConfigureServices,The length of the statement  "                    configurator = LegacyGatewayListProviderConfigurator.CreateInstanceWithParameterlessConstructor<ILegacyMembershipConfigurator>(configuration.MembershipTableAssembly); " is 166.
Long Statement,Orleans.Runtime.MembershipService,InMemoryMembershipTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\InMemoryMembershipTable.cs,Read,The length of the statement  "                new MembershipTableData((Tuple<MembershipEntry' string>)this.serializationManager.DeepCopy(siloTable[key])' tableVersion)  " is 121.
Long Statement,Orleans.Runtime.MembershipService,InMemoryMembershipTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\InMemoryMembershipTable.cs,ReadAll,The length of the statement  "                new Tuple<MembershipEntry' string>((MembershipEntry)this.serializationManager.DeepCopy(tuple.Item1)' tuple.Item2)).ToList()' tableVersion); " is 139.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,Start,The length of the statement  "                logger.Info(ErrorCode.MembershipStarting' "MembershipOracle starting on host = " + membershipOracleData.MyHostname + " address = " + MyAddress.ToLongString() + " at " + LogFormatter.PrintDate(membershipOracleData.SiloStartTime) + "' backOffMax = " + EXP_BACKOFF_CONTENTION_MAX); " is 278.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,Start,The length of the statement  "                maxDelay = StandardExtensions.Min(maxDelay' StandardExtensions.Min(orleansConfig.Globals.MaxJoinAttemptTime' TimeSpan.FromMinutes(1))); " is 135.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DetectNodeMigration,The length of the statement  "            foreach (MembershipEntry entry in table.Members.Select(tuple => tuple.Item1).Where(data => mySiloName.Equals(data.SiloName))) " is 125.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DetectNodeMigration,The length of the statement  "                if (iAmLater && (mostRecentPreviousEntry == null || entry.SiloAddress.Generation.CompareTo(mostRecentPreviousEntry.SiloAddress.Generation) > 0)) " is 144.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DetectNodeMigration,The length of the statement  "                bool physicalHostChanged = !myHostname.Equals(mostRecentPreviousEntry.HostName) || !MyAddress.Endpoint.Equals(mostRecentPreviousEntry.SiloAddress.Endpoint); " is 156.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DetectNodeMigration,The length of the statement  "                        mySiloName' myHostname' MyAddress.ToLongString()' mostRecentPreviousEntry.HostName' mostRecentPreviousEntry.SiloAddress.ToLongString()); " is 136.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,KillMyself,The length of the statement  "                    // do not execute KillMyself if using MembershipTableGrain' since it will fail' as we've already stopped app scheduler turns. " is 125.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,SiloStatusChangeNotification,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-Received GOSSIP SiloStatusChangeNotification about {0} status {1}. Going to read the table."' updatedSilo' status); " is 168.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,MembershipExecuteWithRetries,The length of the statement  "                    new ExponentialBackoff(EXP_BACKOFF_CONTENTION_MIN' this.EXP_BACKOFF_CONTENTION_MAX' EXP_BACKOFF_STEP)' // how long to wait between successful retries " is 149.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,MembershipExecuteWithRetries,The length of the statement  "                    new ExponentialBackoff(EXP_BACKOFF_ERROR_MIN' this.EXP_BACKOFF_ERROR_MAX' EXP_BACKOFF_STEP)  // how long to wait between error retries " is 134.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,UpdateMyStatusGlobal,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("-Silo {0} Successfully updated my Status in the Membership table to {1}"' MyAddress.ToLongString()' status); " is 160.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,UpdateMyStatusGlobal,The length of the statement  "                    errorString = String.Format("-Silo {0} failed to update its status to {1} in the Membership table due to write contention on the table after {2} attempts."' " is 156.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,UpdateMyStatusGlobal,The length of the statement  "                    errorString = String.Format("-Silo {0} failed to update its status to {1} in the table due to failures (socket failures or table read/write failures) after {2} attempts: {3}"' MyAddress.ToLongString()' status' numCalls' exc.Message); " is 233.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryUpdateMyStatusGlobalOnce,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("-TryUpdateMyStatusGlobalOnce: Read{0} Membership table {1}"' (newStatus.Equals(SiloStatus.Active) ? "All" : " my entry from")' table.ToString()); " is 197.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryUpdateMyStatusGlobalOnce,The length of the statement  "                    var msg = string.Format("I should be Dead according to membership table (in TryUpdateMyStatusGlobalOnce): myEntry = {0}."' myEntry.ToFullString()); " is 147.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,GetJoiningPreconditionPromise,The length of the statement  "            logger.Info(ErrorCode.MembershipSendingPreJoinPing' "About to send pings to {0} nodes in order to validate communication in the Joining state. Pinged nodes = {1}"' " is 163.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,GetJoiningPreconditionPromise,The length of the statement  "                    String.Format("-Failed to get ping responses from all {0} silos that are currently listed as Active in the Membership table. " +  " is 128.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,GetJoiningPreconditionPromise,The length of the statement  "                                    "and have written I Am Alive in the table in the last {1} period' before they are allowed to join the cluster. Active silos are: {2}"' " is 134.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,ProcessTableUpdate,The length of the statement  "            if (logAtInfoLevel) logger.Info(ErrorCode.MembershipReadAll_1' "-ReadAll (called from {0}) Membership table {1}"' caller' table.ToString()); " is 140.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,ProcessTableUpdate,The length of the statement  "            else if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("-ReadAll (called from {0}) Membership table {1}"' caller' table.ToString()); " is 133.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,HasMissedIAmAlives,The length of the statement  "                    String.Format("Noticed that silo {0} has not updated it's IAmAliveTime table column recently. Last update was at {1}' now is {2}' no update for {3}' which is more than {4}."' " is 174.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,The length of the statement  "                        var msg = string.Format("I should be Dead according to membership table (in CleanupTableEntries): entry = {0}."' entry.ToFullString()); " is 135.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("Skipping my previous old Dead entry in membership table: {0}"' entry.ToFullString()); " is 137.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Temporal anomaly detected in membership table -- Me={0} Other me={1}"' " is 122.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,The length of the statement  "                    logger.Warn(ErrorCode.MembershipDetectedOlder' "Detected older version of myself - Marking other older clone as Dead -- Current Me={0} Older Me={1}' Old entry= {2}"' " is 165.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,The length of the statement  "                    var msg = string.Format("Detected newer version of myself - I am the older clone so will commit suicide -- Current Me={0} Newer Me={1}' Current entry= {2}"' " is 156.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("CleanupTableEntries: About to DeclareDead {0} outdated silos in the table: {1}"' silosToDeclareDead.Count' " is 158.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,CleanupTableEntries,The length of the statement  "                nextVersion = nextVersion.Next(); // advance the table version (if write succeded' we advanced the version. if failed' someone else did. It is safe anyway). " is 156.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,GossipToOthers,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-Sending status update GOSSIP notification about silo {0}' status {1}' to silo {2}"' updatedSilo.ToLongString()' updatedStatus' silo.ToLongString()); " is 201.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,UpdateListOfProbedSilos,The length of the statement  "                var error = String.Format("This silo {0} status {1} is not in its own local silo list! This is a bug!"' MyAddress.ToLongString()' CurrentStatus); " is 145.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,UpdateListOfProbedSilos,The length of the statement  "                bool isSuspected = membershipOracleData.GetSiloEntry(candidate).GetFreshVotes(orleansConfig.Globals.DeathVoteExpirationTimeout).Count > 0; " is 138.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,OnGetTableUpdateTimer,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-{0} fired {1}. CurrentStatus {2}"' timerGetTableUpdates.Name' timerGetTableUpdates.GetNumTicks()' CurrentStatus); " is 166.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,OnProbeOtherSilosTimer,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-{0} fired {1}. CurrentStatus {2}"' timerProbeOtherSilos.Name' timerProbeOtherSilos.GetNumTicks()' CurrentStatus); " is 166.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,OnIAmAliveUpdateInTableTimer,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-{0} fired {1}. CurrentStatus {2}"' timerIAmAliveUpdateInTable.Name' timerIAmAliveUpdateInTable.GetNumTicks()' CurrentStatus); " is 178.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,SendPing,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-Going to send Ping #{0} to probe silo {1}"' pingNumber' siloAddress.ToLongString()); " is 137.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,ResetFailedProbes,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-Got successful ping response for ping #{0} from {1}"' pingNumber' silo.ToLongString()); " is 140.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,IncFailedProbes,The length of the statement  "                // need this check to avoid races with changed membership (I was watching him' but then read the table' learned he is already dead and thus no longer wtaching him);  " is 164.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,IncFailedProbes,The length of the statement  "                logger.Info(ErrorCode.MembershipPingedSiloNotInWatchList' "-Does not have {0} in the list of probes' ignoring"' silo.ToLongString()); " is 133.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,IncFailedProbes,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-Current number of failed probes for {0}: {1}"' silo.ToLongString()' probedSilos[silo]); " is 140.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,LogFailedProbe,The length of the statement  "            var reason = String.Format("Original Exc Type: {0} Message:{1}"' failureReason.GetBaseException().GetType()' failureReason.GetBaseException().Message); " is 151.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,LogFailedProbe,The length of the statement  "            logger.Warn(ErrorCode.MembershipMissedPing' "-Did not get ping response for ping #{0} from {1}. Reason = {2}"' pingNumber' silo.ToLongString()' reason); " is 152.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The length of the statement  "                    var msg = string.Format("I should be Dead according to membership table (in TryToSuspectOrKill): entry = {0}."' myEntry.ToFullString()); " is 136.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("-TryToSuspectOrKill {0}: The current status of {0} in the table is {1}' its entry is {2}"' entry.SiloAddress.ToLongString()' entry.Status' entry.ToFullString()); " is 213.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-Current number of fresh Voters for {0} is {1}"' silo.ToLongString()' freshVotes.Count.ToString()); " is 151.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The length of the statement  "                var str = String.Format("-Silo {0} is suspected by {1} which is more or equal than {2}' but is not marked as dead. This is a bug!!!"' " is 133.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The length of the statement  "                    entry.SiloAddress.ToLongString()' freshVotes.Count.ToString()' orleansConfig.Globals.NumVotesForDeathDeclaration.ToString()); " is 125.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The length of the statement  "                    "-Going to mark silo {0} as DEAD in the table #1. I am the last voter: #freshVotes={1}' myVoteIndex = {2}' NumVotesForDeathDeclaration={3} ' #activeSilos={4}' suspect list={5}"' " is 177.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The length of the statement  "                "-Putting my vote to mark silo {0} as DEAD #2. Previous suspect list is {1}' trying to update to {2}' eTag={3}' freshVotes is {4}"' " is 131.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DeclareDead,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("-Going to DeclareDead silo {0} in the table. About to write entry {1}."' entry.SiloAddress.ToLongString()' entry.ToFullString()); " is 181.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DeclareDead,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("-Successfully updated {0} status to Dead in the Membership table."' entry.SiloAddress.ToLongString()); " is 154.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DeclareDead,The length of the statement  "                logger.Info(ErrorCode.MembershipMarkDeadWriteFailed' "-Failed to update {0} status to Dead in the Membership table' due to write conflicts. Will retry."' entry.SiloAddress.ToLongString()); " is 188.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,DeclareDead,The length of the statement  "            logger.Info(ErrorCode.MembershipCantWriteLivenessDisabled' "-Want to mark silo {0} as DEAD' but will ignore because Liveness is Disabled."' entry.SiloAddress.ToLongString()); " is 174.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,GetApproximateSiloStatus,The length of the statement  "                        if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.Runtime_Error_100209' "-The given siloAddress {0} is not registered in this MembershipOracle."' siloAddress.ToLongString()); " is 185.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,GetApproximateSiloStatus,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-GetApproximateSiloStatus returned {0} for silo: {1}"' status' siloAddress.ToLongString()); " is 143.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,GetApproximateSiloStatuses,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-GetApproximateSiloStatuses returned {0} silos: {1}"' dict.Count' Utils.DictionaryToString(dict)); " is 150.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,GetApproximateMultiClusterGateways,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-GetApproximateMultiClusterGateways returned {0} silos: {1}"' localMultiClusterGatewaysCopy.Count' string.Join("'"' localMultiClusterGatewaysCopy)); " is 200.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,UpdateMyStatusLocal,The length of the statement  "            var tmpLocalTableCopyOnlyActive = GetSiloStatuses(st => st == SiloStatus.Active' true);    // only active silos including me. " is 125.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,UpdateMyStatusLocal,The length of the statement  "            var tmpLocalTableNamesCopy = localTable.ToDictionary(pair => pair.Key' pair => pair.Value.SiloName);   // all the silos excluding me. " is 133.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,TryUpdateStatusAndNotify,The length of the statement  "            localTableCopyOnlyActive = GetSiloStatuses(status => status == SiloStatus.Active' true);    // only active silos including me. " is 126.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,TryUpdateStatusAndNotify,The length of the statement  "            localNamesTableCopy = localTable.ToDictionary(pair => pair.Key' pair => pair.Value.SiloName);   // all the silos excluding me. " is 126.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,TryUpdateStatusAndNotify,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("-Updated my local view of {0} status. It is now {1}."' entry.SiloAddress.ToLongString()' GetSiloStatus(entry.SiloAddress)); " is 175.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,NotifyLocalSubscribers,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("-NotifyLocalSubscribers about {0} status {1}"' siloAddress.ToLongString()' newStatus); " is 138.
Long Statement,Orleans.Runtime.MembershipService,MembershipOracleData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracleData.cs,NotifyLocalSubscribers,The length of the statement  "                        String.Format("Local ISiloStatusListener {0} has thrown an exception when was notified about SiloStatusChangeNotification about silo {1} new status {2}"' " is 153.
Long Statement,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,Start,The length of the statement  "                    var sender = new GatewaySender("GatewaySiloSender_" + capture' this' this.messageFactory' this.serializationManager' this.executorService' this.loggerFactory); " is 159.
Long Statement,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,RecordOpenedSocket,The length of the statement  "                logger.Info(ErrorCode.GatewayClientOpenedSocket' "Recorded opened socket from endpoint {0}' client ID {1}."' sock.RemoteEndPoint' clientId); " is 140.
Long Statement,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,RecordClosedSocket,The length of the statement  "                logger.Info(ErrorCode.GatewayClientClosedSocket' "Recorded closed socket from endpoint {0}' client ID {1}."' endPoint != null ? endPoint.ToString() : "null"' cs.Id); " is 165.
Long Statement,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,TryToReroute,The length of the statement  "            // for responses from ClientAddressableObject to ClientGrain try to use clientsReplyRoutingCache for sending replies directly back. " is 131.
Long Statement,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,DropClient,The length of the statement  "                // this will not happen' since we drop only already disconnected clients' for socket is already null. But leave this code just to be sure. " is 138.
Long Statement,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,TryDeliverToProxy,The length of the statement  "            // it needs to record the original Gateway address through which this message came from (the address of the Gateway that X is connected to) " is 139.
Long Statement,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,TryDeliverToProxy,The length of the statement  "            msg.SendingSilo = gatewayAddress; // This makes sure we don't expose wrong silo addresses to the client. Client will only see silo address of the Gateway it is connected to. " is 173.
Long Statement,Orleans.Runtime.Messaging,ClientsReplyRoutingCache,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,RecordClientRoute,The length of the statement  "                clientRoutes.AddOrUpdate(client' new Tuple<SiloAddress' DateTime>(gateway' now)' (k' v) => new Tuple<SiloAddress' DateTime>(gateway' now)); " is 139.
Long Statement,Orleans.Runtime.Messaging,GatewaySender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,Process,The length of the statement  "                    Log.Info(ErrorCode.GatewayTryingToSendToUnrecognizedClient' "Trying to send a message {0} to an unrecognized client {1}"' msg.ToString()' client); " is 146.
Long Statement,Orleans.Runtime.Messaging,GatewaySender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,Send,The length of the statement  "                        Log.Info(ErrorCode.Messaging_LargeMsg_Outgoing' "Preparing to send large message Size={0} HeaderLength={1} BodyLength={2} #ArraySegments={3}. Msg={4}"' " is 151.
Long Statement,Orleans.Runtime.Messaging,GatewaySender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,Send,The length of the statement  "                MessagingStatisticsGroup.OnMessageSend(msg.TargetSilo' msg.Direction' bytesSent' headerLength' SocketDirection.GatewayToClient); " is 128.
Long Statement,Orleans.Runtime.Messaging,GatewaySender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,OnMessageSerializationFailure,The length of the statement  "                Log.Warn(ErrorCode.Messaging_Gateway_SerializationError' String.Format("Unexpected error serializing message {0} on the gateway"' msg.ToString())' exc); " is 152.
Long Statement,Orleans.Runtime.Messaging,GatewayAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\GatewayAcceptor.cs,HandleMessage,The length of the statement  "            if (this.multiClusterOptions.HasMultiClusterNetwork && msg.SendingAddress.Grain.Category != UniqueKey.Category.GeoClient) " is 121.
Long Statement,Orleans.Runtime.Messaging,GatewayAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\GatewayAcceptor.cs,HandleMessage,The length of the statement  "                Message rejection = this.MessageFactory.CreateRejectionResponse(msg' Message.RejectionTypes.GatewayTooBusy' "Shedding load"); " is 125.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,ReceiveSocketPreample,The length of the statement  "            if (Log.IsEnabled(LogLevel.Trace)) Log.Trace(ErrorCode.MessageAcceptor_Connection' "Received connection from {0} at source address {1}"' client' sock.RemoteEndPoint.ToString()); " is 177.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,ReceiveSocketPreample,The length of the statement  "                    Log.Error(ErrorCode.MessageAcceptor_NotAProxiedConnection' $"Gateway received unexpected non-proxied connection from {client} at source address {sock.RemoteEndPoint}"); " is 168.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,ReceiveSocketPreample,The length of the statement  "                    Log.Error(ErrorCode.MessageAcceptor_UnexpectedProxiedConnection' $"Silo received unexpected proxied connection from {client} at source address {sock.RemoteEndPoint}"); " is 167.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,ReadConnectionPreamble,The length of the statement  "                    $"Failed to convert the data that read from the socket. buffer = {Utils.EnumerableToString(buffer)}' from endpoint {socket.RemoteEndPoint}."' exc); " is 147.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,StartAccept,The length of the statement  "                Log.Warn(ErrorCode.MessagingAcceptAsyncSocketException' "Socket error on accepting socket during AcceptAsync {0}"' ex.SocketErrorCode); " is 135.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,ProcessAccept,The length of the statement  "                logger.Error(ErrorCode.Messaging_IMA_ExceptionAccepting' "Unexpected exception in IncomingMessageAccepter.AcceptCallback"' ex); " is 127.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,CreateSocketReceiveAsyncEventArgsPoolWrapper,The length of the statement  "            readEventArgs.UserToken = new ReceiveCallbackContext(poolWrapper' this.MessageFactory' this.serializationManager' this.loggerFactory); " is 134.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,OnReceiveCompleted,The length of the statement  "            if (rcc.IMA.Log.IsEnabled(LogLevel.Trace)) rcc.IMA.Log.Trace("Socket receive completed from remote " + e.RemoteEndPoint); " is 121.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The length of the statement  "                if (!msg.TargetSilo.Equals(MessageCenter.MyAddress)) // got ping that is not destined to me. For example' got a ping to my older incarnation. " is 141.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The length of the statement  "                        $"The target silo is no longer active: target was {msg.TargetSilo.ToLongString()}' but this silo is {MessageCenter.MyAddress.ToLongString()}. " + " is 145.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The length of the statement  "            // Note that if we identify or add other grains that are required for proper stopping' we will need to treat them as we do the membership table grain here. " is 155.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The length of the statement  "            if (MessageCenter.IsBlockingApplicationMessages && (msg.Category == Message.Categories.Application) && !Constants.SystemMembershipTableId.Equals(msg.SendingGrain)) " is 163.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The length of the statement  "                if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Forwarding message {0} from {1} to silo {2}"' msg.Id' msg.SendingSilo' msg.TargetSilo); " is 133.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The length of the statement  "                    string.Format("The target silo is no longer active: target was {0}' but this silo is {1}. The rejected message is {2}."' " is 120.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The length of the statement  "                if (Log.IsEnabled(LogLevel.Debug)) Log.Debug("Rejecting an obsolete request; target was {0}' but this silo is {1}. The rejected message is {2}."' " is 145.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAgent.cs,Start,The length of the statement  "            if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Started incoming message agent for silo at {0} for {1} messages"' messageCenter.MyAddress' category); " is 147.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAgent.cs,ReceiveMessage,The length of the statement  "                    Log.Warn(ErrorCode.MessagingMessageFromUnknownActivation' "Received a message {0} for an unknown SystemTarget: {1}"' msg' msg.TargetAddress); " is 141.
Long Statement,Orleans.Runtime.Messaging,IncomingMessageAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAgent.cs,ReceiveMessage,The length of the statement  "                                    dispatcher.RejectMessage(msg' Message.RejectionTypes.Overloaded' overloadException' "Target activation is overloaded " + target); " is 129.
Long Statement,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,Initialize,The length of the statement  "            ima = new IncomingMessageAcceptor(this' here' SocketDirection.SiloToSilo' this.messageFactory' this.serializationManager' this.executorService' this.loggerFactory); " is 164.
Long Statement,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,Initialize,The length of the statement  "            OutboundQueue = new OutboundMessageQueue(this' messagingOptions' this.serializationManager' this.executorService' this.loggerFactory); " is 134.
Long Statement,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,Initialize,The length of the statement  "            sendQueueLengthCounter = IntValueStatistic.FindOrCreate(StatisticNames.MESSAGE_CENTER_SEND_QUEUE_LENGTH' () => SendQueueLength); " is 128.
Long Statement,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,Initialize,The length of the statement  "            receiveQueueLengthCounter = IntValueStatistic.FindOrCreate(StatisticNames.MESSAGE_CENTER_RECEIVE_QUEUE_LENGTH' () => ReceiveQueueLength); " is 137.
Long Statement,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,SendMessage,The length of the statement  "            // Note that if we identify or add other grains that are required for proper stopping' we will need to treat them as we do the membership table grain here. " is 155.
Long Statement,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,SendMessage,The length of the statement  "            if (IsBlockingApplicationMessages && (msg.Category == Message.Categories.Application) && (msg.Result != Message.ResponseTypes.Rejection) " is 136.
Long Statement,Orleans.Runtime.Messaging,OutboundMessageQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\OutboundMessageQueue.cs,SendMessage,The length of the statement  "                logger.Info(ErrorCode.Runtime_Error_100112' "Message was queued for sending after outbound queue was stopped: {0}"' msg); " is 121.
Long Statement,Orleans.Runtime.Messaging,OutboundMessageQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\OutboundMessageQueue.cs,SendMessage,The length of the statement  "                logger.Error(ErrorCode.Runtime_Error_100113' "Message does not have a target silo: " + msg + " -- Call stack is: " + Utils.GetStackTrace()); " is 140.
Long Statement,Orleans.Runtime.Messaging,OutboundMessageQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\OutboundMessageQueue.cs,SendMessage,The length of the statement  "                messageCenter.SendRejection(msg' Message.RejectionTypes.Unrecoverable' "Message to be sent does not have a target silo"); " is 121.
Long Statement,Orleans.Runtime.Messaging,OutboundMessageQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\OutboundMessageQueue.cs,SendMessage,The length of the statement  "                    logger.Info(ErrorCode.Runtime_Error_100115' "Message was queued for sending after outbound queue was stopped: {0}"' msg); " is 121.
Long Statement,Orleans.Runtime.Messaging,SiloMessageSender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\SiloMessageSender.cs,PrepareMessageForSend,The length of the statement  "                    FailMessage(msg' String.Format("Recent ({0} ago' at {1}) connection failure trying to reach target silo {2}. Going to drop {3} msg {4} without sending. CONNECTION_RETRY_DELAY = {5}."' " is 183.
Long Statement,Orleans.Runtime.Messaging,SiloMessageSender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\SiloMessageSender.cs,OnMessageSerializationFailure,The length of the statement  "            Log.Warn(ErrorCode.MessagingUnexpectedSendError' String.Format("Unexpected error sending message {0}"' msg.ToString())' exc); " is 125.
Long Statement,Orleans.Runtime.Messaging,SiloMessageSender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\SiloMessageSender.cs,ProcessMessageAfterSend,The length of the statement  "                if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Sending queue delay time for: {0} is {1}"' msg' DateTime.UtcNow.Subtract(msg.QueuedTime ?? DateTime.UtcNow)); " is 155.
Long Statement,Orleans.Runtime.Messaging,SiloMessageSender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\SiloMessageSender.cs,FailMessage,The length of the statement  "                if (Log.IsEnabled(LogLevel.Debug)) Log.Debug(ErrorCode.MessagingSendingRejection' "Silo {0} is rejecting message: {0}. Reason = {1}"' messageCenter.MyAddress' msg' reason); " is 172.
Long Statement,Orleans.Runtime.Messaging,SiloMessageSender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\SiloMessageSender.cs,FailMessage,The length of the statement  "                messageCenter.SendRejection(msg' Message.RejectionTypes.Transient' String.Format("Silo {0} is rejecting message: {1}. Reason = {2}"' messageCenter.MyAddress' msg' reason)); " is 172.
Long Statement,Orleans.Runtime.Messaging,SiloMessageSender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\SiloMessageSender.cs,FailMessage,The length of the statement  "                Log.Info(ErrorCode.Messaging_OutgoingMS_DroppingMessage' "Silo {0} is dropping message: {0}. Reason = {1}"' messageCenter.MyAddress' msg' reason); " is 146.
Long Statement,Orleans.Runtime.MultiClusterNetwork,MultiClusterGossipChannelFactory,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterGossipChannelFactory.cs,CreateGossipChannels,The length of the statement  "                            var tableChannel = AssemblyLoader.LoadAndCreateInstance<IGossipChannel>(Constants.ORLEANS_CLUSTERING_AZURESTORAGE' logger' this.serviceProvider); " is 145.
Long Statement,Orleans.Runtime.MultiClusterNetwork,MultiClusterGossipChannelFactory,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterGossipChannelFactory.cs,CreateGossipChannels,The length of the statement  "                    logger.Info("Configured Gossip Channel: Type={0} ConnectionString={1}"' channelConfiguration.ChannelType' channelConfiguration.ConnectionString); " is 145.
Long Statement,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,PeriodicBackgroundGossip,The length of the statement  "                logger.Warn(ErrorCode.MultiClusterNetwork_GossipCommunicationFailure' "Gossip Communication: cannot reach clusters {0}"' unreachableClusters); " is 142.
Long Statement,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,PeriodicBackgroundGossip,The length of the statement  "                logger.Warn(ErrorCode.MultiClusterNetwork_GossipCommunicationFailure' "Gossip Communication: cannot reach silos {0}"' unreachableSilos); " is 136.
Long Statement,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,PeriodicBackgroundGossip,The length of the statement  "                logger.Warn(ErrorCode.MultiClusterNetwork_GossipCommunicationFailure' "Gossip Communication: cannot reach channels {0}"' unreachableChannels); " is 142.
Long Statement,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,FindLaggingSilos,The length of the statement  "                    var remoteOracle = this.grainFactory.GetSystemTarget<IMultiClusterGossipService>(Constants.MultiClusterOracleId' activeSilo); " is 125.
Long Statement,Orleans.Runtime.Placement,ClientObserversPlacementDirector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\ClientObserversPlacementDirector.cs,OnAddActivation,The length of the statement  "            throw new InvalidOperationException("Client Observers are not activated using the placement subsystem. Grain " + target.GrainIdentity); " is 135.
Long Statement,Orleans.Runtime.Placement,HashBasedPlacementDirector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\HashBasedPlacementDirector.cs,OnAddActivation,The length of the statement  "            int hash = (int) (target.GrainIdentity.GetUniformHashCode() & 0x7fffffff); // reset highest order bit to avoid negative ints " is 124.
Long Statement,Orleans.Runtime.Placement,PlacementDirectorsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\PlacementDirectorsManager.cs,TrySelectActivationSynchronously,The length of the statement  "            return director.TrySelectActivationSynchronously(strategy' (GrainId)targetGrain.GrainIdentity' context' out placementResult); " is 125.
Long Statement,Orleans.Runtime.Placement,PlacementDirectorsManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\PlacementDirectorsManager.cs,SelectOrAddActivation,The length of the statement  "                var res = await clientObserversPlacementDirector.OnSelectActivation(strategy' (GrainId)targetGrain.GrainIdentity' context); " is 123.
Long Statement,Orleans.Runtime.Placement,StatelessWorkerDirector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\StatelessWorkerDirector.cs,SelectActivationCore,The length of the statement  "                return PlacementResult.IdentifySelection(ActivationAddress.GetAddress(context.LocalSilo' target' activation.ActivationId)); " is 123.
Long Statement,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,OnActivateAsync,The length of the statement  "            logger = loggerFactory.CreateLogger(String.Format("{0}_{1}"' typeof(GrainBasedReminderTable).FullName' Data.Address.ToString())); " is 129.
Long Statement,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,OnActivateAsync,The length of the statement  "            base.DelayDeactivation(TimeSpan.FromDays(10 * 365)); // Delay Deactivation for GrainBasedReminderTable virtually indefinitely. " is 126.
Long Statement,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,OnDeactivateAsync,The length of the statement  "            logger.Info("GrainBasedReminderTable {0} OnDeactivateAsync. Full identity: {1}"' Identity' Data.Address.ToFullString()); " is 120.
Long Statement,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,ReadRows,The length of the statement  "            logger.Debug("Read {0} reminders from memory: {1}' {2}"' t.Reminders.Count' Environment.NewLine' Utils.EnumerableToString(t.Reminders)); " is 136.
Long Statement,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,RemoveRow,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("RemoveRow entry grainRef = {0}' reminderName = {1}' eTag = {2}"' grainRef' reminderName' eTag); " is 147.
Long Statement,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,RemoveRow,The length of the statement  "                logger.Warn(ErrorCode.RS_Table_Remove' "RemoveRow failed for grainRef = {0}' ReminderName = {1}' eTag = {2}. Table now is: {3}"' " is 128.
Long Statement,Orleans.Runtime.ReminderService,InMemoryRemindersTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\InMemoryRemindersTable.cs,ReadRows,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("Selected {0} out of {1} reminders from memory for {2}. List is: {3}{4}"' list.Count' reminderTable.Count' range.ToString()' " is 175.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,Start,The length of the statement  "            // confirm that it can access the underlying store' as after this the ReminderService will load in the background' without the opportunity to prevent the Silo from starting " is 172.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,RegisterOrUpdateReminder,The length of the statement  "            if(logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.RS_RegisterOrUpdate' "RegisterOrUpdateReminder: {0}"' entry.ToString()); " is 132.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,RegisterOrUpdateReminder,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Registered reminder {0} in table' assigned localSequence {1}"' entry' localTableSequence); " is 142.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,RegisterOrUpdateReminder,The length of the statement  "            var msg = string.Format("Could not register reminder {0} to reminder table due to a race. Please try again later."' entry); " is 123.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,UnregisterReminder,The length of the statement  "            if(logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.RS_Unregister' "UnregisterReminder: {0}' LocalTableSequence: {1}"' remData' localTableSequence); " is 156.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,UnregisterReminder,The length of the statement  "            // it may happen that we dont have this reminder locally ... even then' we attempt to remove the reminder from the reminder " is 123.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,UnregisterReminder,The length of the statement  "            // table ... the periodic mechanism will stop this reminder at any silo's LocalReminderService that might have this reminder locally " is 132.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,UnregisterReminder,The length of the statement  "                    if(logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.RS_RemoveFromTable' "Removed reminder from table which I didn't have locally: {0}."' reminder); " is 155.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,UnregisterReminder,The length of the statement  "                var msg = string.Format("Could not unregister reminder {0} from the reminder table' due to tag mismatch. You can retry."' reminder); " is 132.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,GetReminder,The length of the statement  "            if(logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.RS_GetReminder'"GetReminder: GrainReference={0} ReminderName={1}"' grainRef.ToDetailedString()' reminderName); " is 170.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,GetReminders,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.RS_GetReminders' "GetReminders: GrainReference={0}"' grainRef.ToDetailedString()); " is 143.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,ReadAndUpdateReminders,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace($"My range= {RingRange}' RangeSerialNumber {RangeSerialNumber}. Local reminders count {localReminders.Count}"); " is 162.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,RemoveOutOfRangeReminders,The length of the statement  "            if (logger.IsEnabled(LogLevel.Information) && remindersOutOfRange.Length > 0) logger.Info($"Removed {remindersOutOfRange.Length} local reminders that are now out of my range."); " is 177.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,OnRangeChange,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Ignoring range change until ReminderService is Started -- Current status = {0}"' Status); " is 141.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,PromoteToStarted,The length of the statement  "           // Logger.Info(ErrorCode.RS_ServiceStarted' "Reminder system target started OK on: {0} x{1'8:X8}' with range {2}"' this.Silo' this.Silo.GetConsistentHashCode()' this.myRange); " is 175.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,DoInitialReadAndUpdateReminders,The length of the statement  "                        string.Format("ReminderService failed initial load of reminders and will retry. Attempt #{0}"' this.initialReadCallCount)' " is 122.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,DoInitialReadAndUpdateReminders,The length of the statement  "                    const string baseErrorMsg = "ReminderService failed initial load of reminders and cannot guarantee that the service will be eventually start without manual intervention or restarting the silo."; " is 194.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,ReadTableAndStartTimers,The length of the statement  "                ReminderTableData table = await reminderTable.ReadRows(srange.Begin' srange.End); // get all reminders' even the ones we already have " is 133.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,ReadTableAndStartTimers,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Debug)) logger.Debug($"My range changed while reading from the table' ignoring the results. Another read has been started. RangeSerialNumber {RangeSerialNumber}' RangeSerialNumberCopy {rangeSerialNumberCopy}."); " is 241.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,ReadTableAndStartTimers,The length of the statement  "                var remindersNotInTable = localReminders.Where(r => range.InRange(r.Key.GrainRef)).ToDictionary(r => r.Key' r => r.Value); // shallow copy " is 138.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,ReadTableAndStartTimers,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("For range {0}' I read in {1} reminders from table. LocalTableSequence {2}' CachedSequence {3}"' range.ToString()' table.Reminders.Count' localTableSequence' cachedSequence); " is 225.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,ReadTableAndStartTimers,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug($"Removed {localReminders.Count - remindersCountBeforeRemove} reminders from local table"); " is 142.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,StartAndAddTimer,The length of the statement  "            // Note: it can happen here that we restart a reminder that has the same eTag as what we just registered ... its a rare case' and restarting it doesn't hurt' so we don't check for it " is 182.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,StartAndAddTimer,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.RS_LocalStop' "Localy stopping reminder {0} as it is different than newly registered reminder {1}"' prevReminder' entry); " is 182.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,DoResponsibilitySanityCheck,The length of the statement  "                            throw new OrleansException("Reminder Service is still initializing and it is taking a long time. Please retry again later."' ex); " is 129.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,DoResponsibilitySanityCheck,The length of the statement  "                logger.Warn(ErrorCode.RS_NotResponsible' "I shouldn't have received request '{0}' for {1}. It is not in my responsibility range: {2}"' " is 134.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderService,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,DoResponsibilitySanityCheck,The length of the statement  "                // For now' we still let the caller proceed without throwing an exception... the periodical mechanism will take care of reminders being registered at the wrong silo " is 164.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderData,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,StartTimer,The length of the statement  "                Timer = GrainTimer.FromTaskCallback(scheduler' this.timerLogger' asyncCallback' this' dueTimeSpan' period' name: ReminderName); " is 127.
Long Statement,Orleans.Runtime.ReminderService,LocalReminderData,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\LocalReminderService.cs,OnTimerTick,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Triggering tick for {0}' status {1}' now {2}"' this.ToString()' status' before); " is 132.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,RunTask,The length of the statement  "                logger.Warn(ErrorCode.SchedulerTaskExecuteIncomplete4' "RunTask: Incomplete base.TryExecuteTask for Task Id={0} with Status={1}"' " is 129.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,RunTask,The length of the statement  "            //  Consider getting rid of ResetExecutionContext completely and just making sure we always call SetExecutionContext before TryExecuteTask. " is 139.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,RunTaskOutsideContext,The length of the statement  "                logger.Warn(ErrorCode.SchedulerTaskExecuteIncomplete4' "RunTask: Incomplete base.TryExecuteTask for Task Id={0} with Status={1}"' " is 129.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,TryExecuteTaskInline,The length of the statement  "            bool canExecuteInline2 = canExecuteInline && ctx != null && object.Equals(ctx.ActivationContext' workerGroup.SchedulingContext); " is 128.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,TryExecuteTaskInline,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(myId + " <-X TryExecuteTaskInline Task Id={0} Status={1} Execute=No"' task.Id' task.Status); " is 143.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,TryExecuteTaskInline,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(myId + " TryExecuteTaskInline Task Id={0} Thread={1} Execute=Yes"' task.Id' Thread.CurrentThread.ManagedThreadId); " is 165.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,TryExecuteTaskInline,The length of the statement  "                logger.Warn(ErrorCode.SchedulerTaskExecuteIncomplete3' "TryExecuteTaskInline: Incomplete base.TryExecuteTask for Task Id={0} with Status={1}"' " is 142.
Long Statement,Orleans.Runtime.Scheduler,ActivationTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\ActivationTaskScheduler.cs,TryExecuteTaskInline,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(myId + " <-- TryExecuteTaskInline Task Id={0} Thread={1} Execute=Done Ok={2}"' task.Id' Thread.CurrentThread.ManagedThreadId' done); " is 183.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,QueueTask,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("QueueTask: Id={0} with Status={1} AsyncState={2} when TaskScheduler.Current={3}"' task.Id' task.Status' task.AsyncState' Current); " is 182.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,QueueTask,The length of the statement  "                logger.Warn(ErrorCode.SchedulerAppTurnsStopped_2' string.Format("Dropping Task {0} because application turns are stopped"' task)); " is 130.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,QueueWorkItem,The length of the statement  "                    + " Should only call OrleansTaskScheduler.QueueWorkItem on WorkItems that are NOT TaskWorkItem. Tasks should be queued to the scheduler via QueueTask call."' " is 157.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,QueueWorkItem,The length of the statement  "            // This will make sure the TaskScheduler.Current is set correctly on any task that is created implicitly in the execution of this workItem. " is 139.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,GetWorkItemGroup,The length of the statement  "            var error = String.Format("QueueWorkItem was called on a non-null context {0} but there is no valid WorkItemGroup for it."' context); " is 133.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,TryExecuteTaskInline,The length of the statement  "                logger.Warn(ErrorCode.SchedulerTaskExecuteIncomplete1' "TryExecuteTaskInline: Incomplete base.TryExecuteTask for Task Id={0} with Status={1}"' " is 142.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,RunTask,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("RunTask: Id={0} with Status={1} AsyncState={2} when TaskScheduler.Current={3}"' task.Id' task.Status' task.AsyncState' Current); " is 180.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,RunTask,The length of the statement  "                    logger.Warn(ErrorCode.SchedulerTaskExecuteIncomplete2' "RunTask: Incomplete base.TryExecuteTask for Task Id={0} with Status={1}"' " is 129.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,RunTask,The length of the statement  "                var error = String.Format("RunTask was called on OrleansTaskScheduler for task {0} on Context {1}. Should only call OrleansTaskScheduler.RunTask on tasks queued on a null context."'  " is 181.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,RunTask,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("RunTask: Completed Id={0} with Status={1} task.AsyncState={2} when TaskScheduler.Current={3}"' task.Id' task.Status' task.AsyncState' Current); " is 195.
Long Statement,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,PrintStatistics,The length of the statement  "            var stats = Utils.EnumerableToString(workgroupDirectory.Values.OrderBy(wg => wg.Name)' wg => string.Format("--{0}"' wg.DumpStatus())' Environment.NewLine); " is 155.
Long Statement,Orleans.Runtime.Scheduler,TaskWorkItem,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\TaskWorkItem.cs,Execute,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("Executing TaskWorkItem for Task Id={0}'Name={1}'Status={2} on Scheduler={3}"' task.Id' Name' task.Status' this.scheduler); " is 174.
Long Statement,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,Start,The length of the statement  "                longTurnTimer = new SafeTimer(this.timerLogger' obj => CheckForLongTurns()' null' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(1)); " is 132.
Long Statement,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,RecordLeavingThread,The length of the statement  "                var tnew = new WorkerPoolThread(this' scheduler' this.executorService' this.loggerFactory' this.performanceMetrics' createThreadCount); " is 135.
Long Statement,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,CreateNewThread,The length of the statement  "                var t = new WorkerPoolThread(this' scheduler' this.executorService' this.loggerFactory' this.performanceMetrics' createThreadCount); " is 132.
Long Statement,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,DoHealthCheck,The length of the statement  "            // Note that we want to make sure we run DoHealthCheck on each thread even if one of them fails' so we can't just use &&= because of short-circuiting " is 149.
Long Statement,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,DumpStatus,The length of the statement  "                sb.AppendFormat("WorkerPool MaxActiveThreads={0} MaxWorkQueueWait={1} {2}"' MaxActiveThreads' MaxWorkQueueWait' running ? "" : "STOPPED").AppendLine(); " is 151.
Long Statement,Orleans.Runtime.Scheduler,WorkerPoolThread,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPoolThread.cs,Run,The length of the statement  "                        if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("Worker thread {0} - Waiting for {1} work item"' this.ManagedThreadId' IsSystem ? "System" : "Any"); " is 145.
Long Statement,Orleans.Runtime.Scheduler,WorkerPoolThread,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPoolThread.cs,IsFrozen,The length of the statement  "            bool frozenWorkItem = CurrentWorkItem != null && Utils.Since(currentWorkItemStarted) > OrleansTaskScheduler.TurnWarningLengthThreshold; " is 135.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,EnqueueTask,The length of the statement  "                if (log.IsEnabled(LogLevel.Trace)) log.Trace("EnqueueWorkItem {0} into {1} when TaskScheduler.Current={2}"' task' SchedulingContext' TaskScheduler.Current); " is 156.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,EnqueueTask,The length of the statement  "                    log.Warn(ErrorCode.SchedulerTooManyPendingItems' String.Format("{0} pending work items for group {1}' exceeding the warning threshold of {2}"' " is 142.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,EnqueueTask,The length of the statement  "                if (log.IsEnabled(LogLevel.Trace)) log.Trace("Add to RunQueue {0}' #{1}' onto {2}"' task' thisSequenceNumber' SchedulingContext); " is 129.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                                log.Warn(ErrorCode.SchedulerSkipWorkStopping' "Thread {0} is exiting work loop due to Shutdown state {1} while still having {2} work items in the queue."'  " is 154.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                                if(log.IsEnabled(LogLevel.Debug)) log.Debug("Thread {0} is exiting work loop due to Shutdown state {1}. Has {2} work items in the queue."' " is 138.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                            log.Warn(ErrorCode.SchedulerSkipWorkCancelled' "Thread {0} is exiting work loop due to cancellation token. WorkItemGroup: {1}' Have {2} work items in the queue."' " is 162.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                    if (log.IsEnabled(LogLevel.Trace)) log.Trace("About to execute task {0} in SchedulingContext={1}"' task' SchedulingContext); " is 124.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                            SchedulerStatisticsGroup.OnTurnExecutionStartsByWorkGroup(workItemGroupStatisticsNumber' thread.WorkerThreadStatisticsNumber' SchedulingContext); " is 145.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                        log.Error(ErrorCode.SchedulerExceptionFromExecute' String.Format("Worker thread caught an exception thrown from Execute by task {0}"' task)' ex); " is 145.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                            log.Warn(ErrorCode.SchedulerTurnTooLong3' "Task {0} in WorkGroup {1} took elapsed time {2:g} for execution' which is longer than {3}. Running on thread {4}"' " is 157.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                                OrleansTaskExtentions.ToString(task)' SchedulingContext.ToString()' taskLength' OrleansTaskScheduler.TurnWarningLengthThreshold' thread.ToString()); " is 148.
Long Statement,Orleans.Runtime.Scheduler,WorkItemGroup,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkItemGroup.cs,Execute,The length of the statement  "                log.Error(ErrorCode.Runtime_Error_100032' String.Format("Worker thread {0} caught an exception thrown from IWorkItem.Execute"' thread)' ex); " is 140.
Long Statement,Orleans.Runtime.Scheduler,WorkQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkQueue.cs,Get,The length of the statement  "                // and it doesn’t attempt to randomize where it next takes from' and does not provide any level of fairness across collections. " is 127.
Long Statement,Orleans.Runtime.Scheduler,WorkQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkQueue.cs,Get,The length of the statement  "                // It has a “fast path” that just iterates over the collections from 0 to N to see if any of the collections already have data'  " is 127.
Long Statement,Orleans.Runtime.Scheduler,WorkQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkQueue.cs,Get,The length of the statement  "                // and if it finds one' it takes from that collection without considering the others' so it will bias towards the earlier collections.   " is 134.
Long Statement,Orleans.Runtime.Scheduler,WorkQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkQueue.cs,Get,The length of the statement  "                // If none of the collections has data' then it will fall through to the “slow path” of waiting on a collection of wait handles'  " is 128.
Long Statement,Orleans.Runtime.Scheduler,WorkQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkQueue.cs,Get,The length of the statement  "                // one for each collection' at which point it’s subject to the fairness provided by the OS with regards to waiting on events.  " is 125.
Long Statement,Orleans.Runtime.Startup,ConfigureServicesBuilder,C:\repos\dotnet_orleans\src\Orleans.Runtime\Startup\ConfigureServicesBuilder.cs,Invoke,The length of the statement  "                throw new InvalidOperationException("The ConfigureServices method did not returned a configured IServiceProvider instance."); " is 125.
Long Statement,Orleans.Runtime.Startup,StartupBuilder,C:\repos\dotnet_orleans\src\Orleans.Runtime\Startup\StartupBuilder.cs,ConfigureStartup,The length of the statement  "                    throw new InvalidOperationException($"Can not locate the type specified in the configuration file: '{startupTypeName}'."); " is 122.
Long Statement,Orleans.Runtime.Startup,StartupBuilder,C:\repos\dotnet_orleans\src\Orleans.Runtime\Startup\StartupBuilder.cs,FindMethod,The length of the statement  "                    throw new InvalidOperationException($"A method named '{methodName}' in the type '{startupType.FullName}' could not be found."); " is 127.
Long Statement,Orleans.Runtime.Startup,StartupBuilder,C:\repos\dotnet_orleans\src\Orleans.Runtime\Startup\StartupBuilder.cs,FindMethod,The length of the statement  "                    throw new InvalidOperationException($"The '{methodInfo.Name}' method in the type '{startupType.FullName}' must have a return type of '{returnType.Name}'."); " is 156.
Long Statement,Orleans.Runtime.Host,SiloHost,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloHost.cs,InitializeOrleansSilo,The length of the statement  "                logger.Info(ErrorCode.Runtime_Error_100288' "Successfully initialized Orleans silo '{0}' as a {1} node."' orleans.Name' orleans.Type); " is 134.
Long Statement,Orleans.Runtime.Host,SiloHost,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloHost.cs,StartOrleansSilo,The length of the statement  "                            logger.Info(ErrorCode.SiloShutdownEventOpened' "Opened existing shutdown event. Setting the event {0}"' shutdownEventName); " is 123.
Long Statement,Orleans.Runtime.Host,SiloHost,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloHost.cs,StartOrleansSilo,The length of the statement  "                            logger.Info(ErrorCode.SiloStartupEventOpened' "Opened existing startup event. Setting the event {0}"' startupEventName); " is 120.
Long Statement,Orleans.Runtime.Host,SiloHost,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloHost.cs,SetPrimaryNodeEndpoint,The length of the statement  "            logger.Info(ErrorCode.SiloSetPrimaryNode' "Setting primary node address={0} port={1}"' endpoint.Address' endpoint.Port); " is 120.
Long Statement,Orleans.Runtime.Host,SiloHost,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloHost.cs,WaitForOrleansSiloShutdownImpl,The length of the statement  "                throw new InvalidOperationException("Cannot wait for silo " + this.Name + " since it was not started successfully previously."); " is 128.
Long Statement,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,RegisterSystemTarget,The length of the statement  "            if (systemTarget == null) throw new ArgumentException($"Parameter must be of type {typeof(SystemTarget)}"' nameof(target)); " is 123.
Long Statement,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,UnregisterSystemTarget,The length of the statement  "            if (systemTarget == null) throw new ArgumentException($"Parameter must be of type {typeof(SystemTarget)}"' nameof(target)); " is 123.
Long Statement,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,GetConsistentRingProvider,The length of the statement  "            return new EquallyDividedRangeRingProvider(this.consistentRingProvider' this.loggerFactory' mySubRangeIndex' numSubRanges); " is 123.
Long Statement,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,InitializePullingAgents,The length of the statement  "            var manager = new PersistentStreamPullingManager(managerId' streamProviderName' this' this.PubSub(config.PubSubType)' adapterFactory' queueBalancer' config' providerConfig' this.loggerFactory); " is 193.
Long Statement,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,CreateQueueBalancer,The length of the statement  "                    throw new ArgumentOutOfRangeException("balancerType"' $"Configured BalancerType isn't a type which implements IStreamQueueBalancer. BalancerType: {config.BalancerType}' StreamProvider: {streamProviderName}"); " is 208.
Long Statement,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,CreateQueueBalancer,The length of the statement  "                string error = $"Unsupported balancerType for stream provider. BalancerType: {config.BalancerType}' StreamProvider: {streamProviderName}' Exception: {e}"; " is 154.
Long Statement,Orleans.Runtime.Providers,SiloProviderRuntime,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloProviderRuntime.cs,GetStreamDirectory,The length of the statement  "                    String.Format("Trying to get a Stream or send a stream message on a silo not from within grain and not from within system target (CurrentActivationData is null) " " is 162.
Long Statement,Orleans.Runtime.TestHooks,TestHooksSystemTarget,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\TestHooks\TestHooksSystemTarget.cs,HasStorageProvider,The length of the statement  "            return Task.FromResult(this.host.Services.GetRequiredService<StorageProviderManager>().TryGetProvider(providerName' out tmp)); " is 126.
Long Statement,Orleans.Storage,MemoryStorageGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\MemoryStorageGrain.cs,OnActivateAsync,The length of the statement  "            base.DelayDeactivation(TimeSpan.FromDays(10 * 365)); // Delay Deactivation for MemoryStorageGrain virtually indefinitely. " is 121.
Long Statement,Orleans.Storage,MemoryStorageGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\MemoryStorageGrain.cs,WriteStateAsync,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("WriteStateAsync for {0} grain: {1} eTag: {2}"' stateStore' grainStoreKey' grainState.ETag); " is 143.
Long Statement,Orleans.Storage,MemoryStorageGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\MemoryStorageGrain.cs,WriteStateAsync,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Done WriteStateAsync for {0} grain: {1} eTag: {2}"' stateStore' grainStoreKey' grainState.ETag); " is 148.
Long Statement,Orleans.Storage,GrainStateStore,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\MemoryStorageGrain.cs,ValidateEtag,The length of the statement  "                    logger.Warn(0' $"Etag mismatch during {operation} for grain {grainStoreKey}: Expected = {currentETag ?? "null"} Received = {receivedEtag}"); " is 140.
Long Statement,Orleans.Runtime.Storage,StorageProviderManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\StorageProviderManager.cs,LoadStorageProviders,The length of the statement  "            storageProviderLoader.LoadProviders(configs[ProviderCategoryConfiguration.STORAGE_PROVIDER_CATEGORY_NAME].Providers' this); " is 123.
Long Statement,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,CreateAsPercentOfLoadSheddingLimit,The length of the statement  "            if (percentOfSiloSheddingLimit < 0.0 || percentOfSiloSheddingLimit > 100.0) throw new ArgumentOutOfRangeException(nameof(percentOfSiloSheddingLimit)' "Percent value must be between 0-100"); " is 189.
Long Statement,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,CreateAsPercentOfLoadSheddingLimit,The length of the statement  "            return new LoadShedQueueFlowController((int)(getNodeConfig().LoadSheddingLimit * (percentOfSiloSheddingLimit / 100.0))' getNodeConfig); " is 135.
Long Statement,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,CreateAsPercentageOfCPU,The length of the statement  "            if (loadSheddingLimit < 0 || loadSheddingLimit > 100) throw new ArgumentOutOfRangeException(nameof(loadSheddingLimit)' "Value must be between 0-100"); " is 150.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,Initialize,The length of the statement  "            if (failureHandler.Value == null) throw new ArgumentNullException("failureHandler"' "Init: streamDeliveryFailureHandler should not be null"); " is 141.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,Initialize,The length of the statement  "            return OrleansTaskExtentions.WrapInTask(() => InitializeInternal(qAdapter.Value' queueAdapterCache.Value' failureHandler.Value)); " is 129.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,InitializeInternal,The length of the statement  "                logger.Error(ErrorCode.PersistentStreamPullingAgent_02' "Exception while calling IQueueAdapter.CreateNewReceiver."' exc); " is 121.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,InitializeInternal,The length of the statement  "                logger.Error(ErrorCode.PersistentStreamPullingAgent_23' "Exception while calling IQueueAdapterCache.CreateQueueCache."' exc); " is 125.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,InitializeInternal,The length of the statement  "                    .LogException(logger' ErrorCode.PersistentStreamPullingAgent_03' $"QueueAdapterReceiver {QueueId.ToStringWithHashCode()} failed to Initialize."); " is 145.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,InitializeInternal,The length of the statement  "            // Even if the receiver failed to initialise' treat it as OK and start pumping it. It's receiver responsibility to retry initialization. " is 136.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,InitializeInternal,The length of the statement  "            IntValueStatistic.FindOrCreate(new StatisticName(StatisticNames.STREAMS_PERSISTENT_STREAM_PUBSUB_CACHE_SIZE' StatisticUniquePostfix)' () => pubSubCache.Count); " is 159.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,InitializeInternal,The length of the statement  "            logger.Info((int)ErrorCode.PersistentStreamPullingAgent_04' "Taking queue {0} under my responsibility."' QueueId.ToStringWithHashCode()); " is 137.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,Shutdown,The length of the statement  "            logger.Info(ErrorCode.PersistentStreamPullingAgent_05' "Shutdown of {0} responsible for queue: {1}"' GetType().Name' QueueId.ToStringWithHashCode()); " is 149.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,Shutdown,The length of the statement  "                logger.Info(ErrorCode.PersistentStreamPullingAgent_06' "Unregister PersistentStreamPullingAgent Producer for stream {0}."' streamId); " is 133.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,Shutdown,The length of the statement  "            IntValueStatistic.Delete(new StatisticName(StatisticNames.STREAMS_PERSISTENT_STREAM_PUBSUB_CACHE_SIZE' StatisticUniquePostfix));           " is 128.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,Shutdown,The length of the statement  "            //IntValueStatistic.Delete(new StatisticName(StatisticNames.STREAMS_PERSISTENT_STREAM_QUEUE_CACHE_SIZE' StatisticUniquePostfix)); " is 129.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,AddSubscriber,The length of the statement  "            if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.PersistentStreamPullingAgent_09' "AddSubscriber: Stream={0} Subscriber={1}."' streamId' streamConsumer); " is 165.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,DoHandshakeWithConsumer,The length of the statement  "                        if (consumerData.Cursor == null) // if the consumer did not ask for a specific token and we already have a cursor' jsut keep using it. " is 134.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,DoHandshakeWithConsumer,The length of the statement  "                    bool faultedSubscription = await ErrorProtocol(consumerData' exceptionOccured' false' null' requestedHandshakeToken?.Token); " is 124.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,DoHandshakeWithConsumer,The length of the statement  "            consumerData.LastToken = requestedHandshakeToken; // use what ever the consumer asked for as LastToken for next handshake (even if he asked for null). " is 150.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,DoHandshakeWithConsumer,The length of the statement  "            // if we don't yet have a cursor (had errors in the handshake or data not available exc)' get a cursor at the event that triggered that consumer subscription. " is 158.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,DoHandshakeWithConsumer,The length of the statement  "                    consumerData.Cursor = queueCache.GetCacheCursor(consumerData.StreamId' null); // just in case last GetCacheCursor failed. " is 121.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RemoveSubscriber_Impl,The length of the statement  "            if (removed && logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.PersistentStreamPullingAgent_10' "Removed Consumer: subscription={0}' for stream {1}."' subscriptionId' streamId); " is 186.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,AsyncTimerCallback,The length of the statement  "                logger.Error(ErrorCode.PersistentStreamPullingAgent_12' $"Giving up reading from queue {queueId} after retry attempts {ReadLoopRetryMax}"' exc); " is 144.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ReadLoopRetryExceptionFilter,The length of the statement  "            this.logger.Warn(ErrorCode.PersistentStreamPullingAgent_12' $"Exception while retrying the {retryCounter}th time reading from queue {this.QueueId}"' e); " is 152.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ReadFromQueue,The length of the statement  "            // Retrieve one multiBatch from the queue. Every multiBatch has an IEnumerable of IBatchContainers' each IBatchContainer may have multiple events. " is 146.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ReadFromQueue,The length of the statement  "            if (multiBatch == null || multiBatch.Count == 0) return false; // queue is empty. Exit the loop. Will attempt again in the next timer callback. " is 143.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ReadFromQueue,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(ErrorCode.PersistentStreamPullingAgent_11' "Got {0} messages from queue {1}. So far {2} msgs from this queue."' " is 162.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ReadFromQueue,The length of the statement  "                    RegisterStream(streamId' startToken' now).Ignore(); // if this is a new stream register as producer of stream in pub sub system " is 127.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RegisterStream,The length of the statement  "            // This will help ensure the "casual consistency" between pre-existing subscripton (of a potentially new already subscribed consumer)  " is 133.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RunConsumerCursor,The length of the statement  "                                $"Ignoring exception while trying to evaluate subscription filter function {filterWrapper} on stream {consumerData.StreamId} in PersistentStreamPullingAgentGrain.RunConsumerCursor"; " is 181.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RunConsumerCursor,The length of the statement  "                            $"Exception while trying to deliver msgs to stream {consumerData.StreamId} in PersistentStreamPullingAgentGrain.RunConsumerCursor"; " is 131.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RunConsumerCursor,The length of the statement  "                // RunConsumerCursor is fired with .Ignore so we should log if anything goes wrong' because there is no one to catch the exception " is 130.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,DeliverBatchToConsumer,The length of the statement  "                batchDeliveryTask = consumerData.StreamConsumer.DeliverBatch(consumerData.SubscriptionId' consumerData.StreamId' batch.AsImmutable()' prevToken); " is 145.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,DeliverBatchToConsumer,The length of the statement  "            consumerData.LastToken = StreamHandshakeToken.CreateDeliveyToken(batch.SequenceToken); // this is the currently delivered token " is 127.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ErrorProtocol,The length of the statement  "                    "Consumer {0} on stream {1} is no longer active - permanently removing Consumer."' consumerData.StreamConsumer' consumerData.StreamId); " is 135.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ErrorProtocol,The length of the statement  "                pubSub.UnregisterConsumer(consumerData.SubscriptionId' consumerData.StreamId' consumerData.StreamId.ProviderName).Ignore(); " is 123.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ErrorProtocol,The length of the statement  "            // if configured to fault on delivery failure and this is not an implicit subscription' fault and remove the subscription " is 121.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,ErrorProtocol,The length of the statement  "            if (streamFailureHandler.ShouldFaultSubsriptionOnError && !SubscriptionMarker.IsImplicitSubscription(consumerData.SubscriptionId.Guid)) " is 135.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RegisterAsStreamProducer,The length of the statement  "                if (pubSub == null) throw new NullReferenceException("Found pubSub reference not set up correctly in RetreaveNewStream"); " is 121.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RegisterAsStreamProducer,The length of the statement  "                ISet<PubSubSubscriptionState> streamData = await pubSub.RegisterProducer(streamId' streamProviderName' meAsStreamProducer); " is 123.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RegisterAsStreamProducer,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug(ErrorCode.PersistentStreamPullingAgent_16' "Got back {0} Subscribers for stream {1}."' streamData.Count' streamId); " is 166.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RegisterAsStreamProducer,The length of the statement  "                    addSubscriptionTasks.Add(AddSubscriber_Impl(item.SubscriptionId' item.Stream' item.Consumer' streamStartToken' item.Filter)); " is 125.
Long Statement,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,RegisterAsStreamProducer,The length of the statement  "                // RegisterAsStreamProducer is fired with .Ignore so we should log if anything goes wrong' because there is no one to catch the exception " is 137.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,Initialize,The length of the statement  "            await this.queueBalancer.Initialize(this.streamProviderName' this.adapterFactory.GetStreamQueueMapper()' config.SiloMaturityPeriod' this.providerConfig); " is 153.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,Initialize,The length of the statement  "            Log(ErrorCode.PersistentStreamPullingManager_03' String.Format("Initialize: I am now responsible for {0} queues: {1}."' myQueues.Count' PrintQueues(myQueues))); " is 160.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,StartAgents,The length of the statement  "            Log(ErrorCode.PersistentStreamPullingManager_Starting' "Starting agents for {0} queues: {1}"' myQueues.Count' PrintQueues(myQueues)); " is 133.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,StopAgents,The length of the statement  "            Log(ErrorCode.PersistentStreamPullingManager_Stopping' "Stopping agents for {0} queues: {1}"' queuesToRemove.Count' PrintQueues(queuesToRemove)); " is 145.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,HandleQueueDistributionChangeNotification,The length of the statement  "                "Got QueueChangeNotification number {0} from the queue balancer. managerState = {1}"' notificationSeqNumber' managerState); " is 123.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,HandleQueueDistributionChangeNotification,The length of the statement  "                        "Skipping execution of QueueChangeNotification number {0} from the queue allocator since already received a later notification " + " is 130.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,QueueDistributionChangeNotification,The length of the statement  "                "Executing QueueChangeNotification number {0}. Queue balancer says I should now own {1} queues: {2}"' notificationSeqNumber' currentQueues.Count' PrintQueues(currentQueues)); " is 174.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,QueueDistributionChangeNotification,The length of the statement  "                    "Done Executing QueueChangeNotification number {0}. I now own {1} queues: {2}"' notificationSeqNumber' NumberRunningAgents' PrintQueues(queuesToAgentsMap.Keys)); " is 161.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,AddNewQueues,The length of the statement  "                    var agent = new PersistentStreamPullingAgent(agentId' streamProviderName' providerRuntime' this.loggerFactory' pubSub' queueId' config); " is 136.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,AddNewQueues,The length of the statement  "                    logger.Error(ErrorCode.PersistentStreamPullingManager_07' "Exception while creating PersistentStreamPullingAgent."' exc); " is 121.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,AddNewQueues,The length of the statement  "                    // If this is when silo is starting and agent is initializing' fail the silo startup. Otherwise' just swallow to limit impact on other receivers. " is 145.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,InitAgent,The length of the statement  "            var queueAdapterCacheAsImmutable = queueAdapterCache != null ? queueAdapterCache.AsImmutable() : new Immutable<IQueueAdapterCache>(null); " is 137.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,InitAgent,The length of the statement  "            var task = OrleansTaskExtentions.SafeExecute(() => agentGrainRef.Initialize(queueAdapter.AsImmutable()' queueAdapterCacheAsImmutable' deliveryFailureHandler.AsImmutable())); " is 173.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,InitAgent,The length of the statement  "            await task.LogException(logger' ErrorCode.PersistentStreamPullingManager_09' String.Format("PersistentStreamPullingAgent {0} failed to Initialize."' agent.QueueId)); " is 165.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,RemoveQueues,The length of the statement  "            Log(ErrorCode.PersistentStreamPullingManager_10' "About to remove {0} agents from my responsibility: {1}"' queuesToRemove.Count' Utils.EnumerableToString(queuesToRemove' q => q.ToString())); " is 190.
Long Statement,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,RemoveQueues,The length of the statement  "                        "Exception while UnRegisterSystemTarget of PersistentStreamPullingAgent {0}. Ignoring. Exc.Message = {1}."' ((ISystemTargetBase)agent).GrainId' exc.Message); " is 157.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,OnActivateAsync,The length of the statement  "            logger = this.ServiceProvider.GetRequiredService<ILoggerFactory>().CreateLogger($"{GetType().FullName}.{RuntimeIdentity}.{IdentityString}"); " is 140.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,RegisterProducer,The length of the statement  "                logger.Error(ErrorCode.Stream_RegisterProducerFailed' $"Failed to register a stream producer.  Stream: {streamId}' Producer: {streamProducer}"' exc); " is 149.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,RegisterConsumer,The length of the statement  "                    $"Failed to register a stream consumer.  Stream: {streamId}' SubscriptionId {subscriptionId}' Consumer: {streamConsumer}"' exc); " is 128.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,RegisterConsumer,The length of the statement  "                    tasks.Add(ExecuteProducerTask(producerState' producerState.Producer.AddSubscriber(subscriptionId' streamId' streamConsumer' filter))); " is 134.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,RegisterConsumer,The length of the statement  "                    $"Failed to update producers while register a stream consumer.  Stream: {streamId}' SubscriptionId {subscriptionId}' Consumer: {streamConsumer}"' exc); " is 151.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,LogPubSubCounts,The length of the statement  "                    when' numProducers' numConsumers' Utils.EnumerableToString(State?.Consumers)' Utils.EnumerableToString(State?.Producers)); " is 122.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,Validate,The length of the statement  "                    $"State mismatch between PubSubRendezvousGrain and its persistent state. captureProducers.Count={captureProducers.Count}' State.Producers.Count={State.Producers.Count}"); " is 170.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,Validate,The length of the statement  "                    $"State mismatch between PubSubRendezvousGrain and its persistent state. captureProducers={Utils.EnumerableToString(captureProducers)}' State.Producers={Utils.EnumerableToString(State.Producers)}"); " is 198.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,Validate,The length of the statement  "                    $"State mismatch between PubSubRendezvousGrain and its persistent state. captureConsumers.Count={captureConsumers.Count}' State.Consumers.Count={State.Consumers.Count}"); " is 170.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,Validate,The length of the statement  "                    $"State mismatch between PubSubRendezvousGrain and its persistent state. captureConsumers={Utils.EnumerableToString(captureConsumers)}' State.Consumers={Utils.EnumerableToString(State.Consumers)}"); " is 198.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,FaultSubscription,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Setting subscription {0} to a faulted state."' subscriptionId.Guid); " is 120.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,NotifyProducersOfRemovedSubscription,The length of the statement  "                if (logger.IsEnabled(LogLevel.Debug)) logger.Debug("Notifying {0} existing producers about unregistered consumer."' numProducersBeforeNotify); " is 142.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,NotifyProducersOfRemovedSubscription,The length of the statement  "                    .Select(producerState => ExecuteProducerTask(producerState' producerState.Producer.RemoveSubscriber(subscriptionId' streamId))) " is 127.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,TryClearState,The length of the statement  "            if (State.Producers.Count == 0 && State.Consumers.Count == 0) // + we already know that numProducers == 0 from previous if-clause " is 129.
Long Statement,Orleans.Streams,PubSubRendezvousGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PubSub\PubSubRendezvousGrain.cs,ExecuteProducerTask,The length of the statement  "                if (grainRef == null || grainRef.GrainId.IsSystemTarget && siloStatusOracle.GetApproximateSiloStatus(grainRef.SystemTargetSilo).IsUnavailable()) " is 144.
Long Statement,Orleans.Streams,BestFitBalancer<TBucket;TResource>,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\BestFitBalancer.cs,GetDistribution,The length of the statement  "                    throw new ArgumentOutOfRangeException("activeBuckets"' String.Format("Active buckets contain a bucket {0} not in the master list."' bucket)); " is 141.
Long Statement,Orleans.Streams,BestFitBalancer<TBucket;TResource>,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\BestFitBalancer.cs,GetDistribution,The length of the statement  "            // redistribute remaining resources across the resource lists of the active buckets' resource lists with the fewest reasources first " is 132.
Long Statement,Orleans.Streams,BestFitBalancer<TBucket;TResource>,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\BestFitBalancer.cs,BuildIdealDistribution,The length of the statement  "            // a bucketsToFillWithUpperResource of 0 indicates resources are evenly devisible' so fill them all with upper resource count " is 125.
Long Statement,Orleans.Streams,ConsistentRingQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\ConsistentRingQueueBalancer.cs,Initialize,The length of the statement  "                throw new ArgumentException("queueMapper for ConsistentRingQueueBalancer should implement IConsistentRingStreamQueueMapper"' "queueMapper"); " is 140.
Long Statement,Orleans.Streams,DeploymentBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\DeploymentBasedQueueBalancer.cs,SiloStatusChangeNotification,The length of the statement  "            foreach (var silo in siloStatusOracle.GetApproximateSiloStatuses(true).Keys.Where(s => !s.Equals(siloStatusOracle.SiloAddress))) " is 128.
Long Statement,Orleans.Streams,DeploymentBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\DeploymentBasedQueueBalancer.cs,GetMyQueues,The length of the statement  "                    HashSet<QueueId> queuesOfImmatureSilos = GetQueuesOfImmatureSilos(siloStatusOracle' immatureSilos' balancer.IdealDistribution); " is 127.
Long Statement,Orleans.Streams,DeploymentBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\DeploymentBasedQueueBalancer.cs,GetQueuesOfImmatureSilos,The length of the statement  "            foreach (var silo in immatureSilos.Where(s => s.Value)) // take only those from immature set that have their immature status bit set " is 132.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,Initialize,The length of the statement  "            //make lease renew frequency to be every half of lease time' to avoid renew failing due to timing issues' race condition or clock difference.  " is 141.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,Initialize,The length of the statement  "            this.renewLeaseTimer = new AsyncTaskSafeTimer(timerLogger' this.MaintainAndBalanceQueues' null' this.siloMaturityPeriod' this.leaseLength.Divide(2)); " is 149.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,Initialize,The length of the statement  "            this.tryAcquireMaximumLeaseTimer = new AsyncTaskSafeTimer(timerLogger' this.AcquireLeaseToMeetMaxResponsibilty' null' this.siloMaturityPeriod' this.leaseLength); " is 161.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,Initialize,The length of the statement  "            //Selector default to round robin selector now' but we can make a further change to make selector configurable if needed.  Selector algorithm could  " is 147.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,MaintainAndBalanceQueues,The length of the statement  "            // step 2: if after renewing leases' myQueues count doesn't fall in [minimumResponsibility' maximumResponsibilty] range' act accordingly " is 136.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,ReleaseLeasesToMeetResponsibility,The length of the statement  "            this.logger.Info($"ReleaseLeasesToMeetResponsibility: released {queueCountToRelease} queues' current queue Count: {this.myQueues.Count}"); " is 138.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,AcquireLeasesToMeetExpectation,The length of the statement  "                var expectedQueues = this.queueSelector.NextSelection(leasesToAquire' this.myQueues.Select(queue=>queue.QueueId).ToList()).ToList(); " is 132.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,AcquireLeasesToMeetExpectation,The length of the statement  "            this.logger.Info($"AcquireLeasesToMeetExpectation: finished. Now own {this.myQueues.Count} queues. Used attemps : {attempts}' Current minimumReponsibility : {this.minimumResponsibilty}' current maximumResponsibility : {this.maximumRespobsibility}"); " is 249.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,RenewLeases,The length of the statement  "            var results = await this.leaseProvider.Renew(LeaseCategory' this.myQueues.Select(queue => queue.AcquiredLease).ToArray()); " is 122.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,RenewLeases,The length of the statement  "            this.logger.Info($"RenewLeases: finished' currently own queues : {this.myQueues.Count}' current minimumResponsibilty : {this.minimumResponsibilty}' current maximunResponsibilty : {this.maximumRespobsibility}"); " is 210.
Long Statement,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,CalculateResponsibility,The length of the statement  "            //if allQueues count is divisible by active bukets' then every bucket should take the same count of queues' otherwise' there should be one bucket take 1 more queue " is 163.
Long Statement,Orleans.Timers,TimerRegistry,C:\repos\dotnet_orleans\src\Orleans.Runtime\Timers\TimerRegistry.cs,RegisterTimer,The length of the statement  "            var timer = GrainTimer.FromTaskCallback(this.scheduler' this.timerLogger' asyncCallback' state' dueTime' period' activationData: grain.Data); " is 141.
Long Statement,Orleans.Transactions,TransactionAgentMetrics,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,ReportMetrics,The length of the statement  "                var avgBatchStartTransactionLatency = BatchStartTransactionsRequestLatencyCounter.Divide(BatchStartTransactionsRequestCounter); " is 127.
Long Statement,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,Commit,The length of the statement  "                TransactionalResourceVersion write = TransactionalResourceVersion.Create(transactionInfo.TransactionId' transactionInfo.WriteSet[g]); " is 133.
Long Statement,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,ProcessRequests,The length of the statement  "                    logger.Debug(ErrorCode.Transactions_SendingTMRequest' "Calling TM to start {0} transactions"' startingTransactions.Count); " is 122.
Long Statement,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,ProcessRequests,The length of the statement  "                    logger.Debug(ErrorCode.Transactions_SendingTMRequest' "Calling TM to commit {0} transactions"' committingTransactions.Count); " is 125.
Long Statement,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,Start,The length of the statement  "            requestProcessor = GrainTimer.FromTaskCallback(this.RuntimeClient.Scheduler' this.loggerFactory.CreateLogger<GrainTimer>()' ProcessRequests' null' TimeSpan.FromMilliseconds(0)' TimeSpan.FromMilliseconds(10)' "TransactionAgent"); " is 228.
Long Statement,Orleans.Runtime.Utilities,FactoryUtility,C:\repos\dotnet_orleans\src\Orleans.Runtime\Utilities\FactoryUtility.cs,Create,The length of the statement  "            var factory = ActivatorUtilities.CreateFactory(typeof(TInstance)' new[] { typeof(TParam1)' typeof(TParam2)' typeof(TParam3) }); " is 127.
Complex Conditional,Orleans.Runtime.Messaging,IncomingMessageAcceptor,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,HandleMessage,The conditional expression  "requestContext != null &&                  requestContext.TryGetValue(RequestContext.PING_APPLICATION_HEADER' out pingObj) &&                  pingObj is bool &&                  (bool)pingObj"  is complex.
Complex Conditional,Orleans.Runtime.Messaging,MessageCenter,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\MessageCenter.cs,SendMessage,The conditional expression  "IsBlockingApplicationMessages && (msg.Category == Message.Categories.Application) && (msg.Result != Message.ResponseTypes.Rejection)                  && !Constants.SystemMembershipTableId.Equals(msg.TargetGrain)"  is complex.
Complex Conditional,Orleans.Runtime.MultiClusterNetwork,MultiClusterData,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterData.cs,Merge,The conditional expression  "sourceEntry != null && !sourceEntry.Expired                       && (thisEntry == null || thisEntry.HeartbeatTimestamp < sourceEntry.HeartbeatTimestamp)"  is complex.
Complex Conditional,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,InjectLocalStatus,The conditional expression  "existingEntry == null                  || existingEntry.Status != myStatus.Status                  || (myStatus.Status == GatewayStatus.Active                        && myStatus.HeartbeatTimestamp - existingEntry.HeartbeatTimestamp > this.resendActiveStatusAfter)"  is complex.
Empty Catch Block,Orleans.Runtime,SiloControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloControl.cs,SendControlCommandToProvider,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,Run,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.Management,ManagementGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\ManagementGrain.cs,SetStrategy,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.GrainDirectory,GrainDirectoryHandoffManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryHandoffManager.cs,HandoffMyPartitionUponStop,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.GrainDirectory,ClusterGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\ClusterGrainDirectory.cs,ProcessActivationRequestBatch,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,ProcessTableUpdate,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.Messaging,Gateway,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,RecordClosedSocket,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.Messaging,GatewaySender,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,Send,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.Messaging,ReceiveCallbackContext,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\IncomingMessageAcceptor.cs,ProcessReceived,The method has an empty catch block.
Empty Catch Block,Orleans.Runtime.Scheduler,WorkQueue,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkQueue.cs,Add,The method has an empty catch block.
Empty Catch Block,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,InitializeInternal,The method has an empty catch block.
Empty Catch Block,Orleans.Streams,PersistentStreamPullingAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingAgent.cs,Shutdown,The method has an empty catch block.
Empty Catch Block,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,AddNewQueues,The method has an empty catch block.
Empty Catch Block,Orleans.Streams,PersistentStreamPullingManager,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\PersistentStream\PersistentStreamPullingManager.cs,RemoveQueues,The method has an empty catch block.
Magic Number,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,Catalog,The following statement contains a magic number: maxWarningRequestProcessingTime = this.config.ResponseTimeout.Multiply(5);
Magic Number,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CollectActivationsImpl,The following statement contains a magic number: long memBefore = GC.GetTotalMemory(false) / (1024 * 1024);
Magic Number,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CollectActivationsImpl,The following statement contains a magic number: long memBefore = GC.GetTotalMemory(false) / (1024 * 1024);
Magic Number,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CollectActivationsImpl,The following statement contains a magic number: long memAfter = GC.GetTotalMemory(false) / (1024 * 1024);
Magic Number,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,CollectActivationsImpl,The following statement contains a magic number: long memAfter = GC.GetTotalMemory(false) / (1024 * 1024);
Magic Number,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,Invoke,The following statement contains a magic number: try              {                  // Don't process messages that have already timed out                  if (message.IsExpired)                  {                      message.DropExpiredMessage(MessagingStatisticsGroup.Phase.Invoke);                      return;                  }                    RequestContextExtensions.Import(message.RequestContextData);                  if (Config.Globals.PerformDeadlockDetection && !message.TargetGrain.IsSystemTarget)                  {                      UpdateDeadlockInfoInRequestContext(new RequestInvocationHistory(message.TargetGrain' message.TargetActivation' message.DebugContext));                      // RequestContext is automatically saved in the msg upon send and propagated to the next hop                      // in RuntimeClient.CreateMessage -> RequestContextExtensions.ExportToMessage(message);                  }                    bool startNewTransaction = false;                  TransactionInfo transactionInfo = message.TransactionInfo;                    if (message.IsTransactionRequired && transactionInfo == null)                  {                      // TODO: this should be a configurable parameter                      var transactionTimeout = Debugger.IsAttached ? TimeSpan.FromMinutes(30) : TimeSpan.FromSeconds(10);                        // Start a new transaction                      transactionInfo = await this.transactionAgent.Value.StartTransaction(message.IsReadOnly' transactionTimeout);                      startNewTransaction = true;                  }                    if (transactionInfo != null)                  {                      TransactionContext.SetTransactionInfo(transactionInfo);                  }                    object resultObject;                  try                  {                      var request = (InvokeMethodRequest) message.GetDeserializedBody(this.SerializationManager);                      if (request.Arguments != null)                      {                          CancellationSourcesExtension.RegisterCancellationTokens(target' request' this.loggerFactory' logger' this' this.cancellationTokenRuntime);                      }                        var invoker = invokable.GetInvoker(typeManager' request.InterfaceId' message.GenericGrainType);                        if (invoker is IGrainExtensionMethodInvoker                          && !(target is IGrainExtension))                      {                          // We are trying the invoke a grain extension method on a grain                           // -- most likely reason is that the dynamic extension is not installed for this grain                          // So throw a specific exception here rather than a general InvalidCastException                          var error = String.Format(                              "Extension not installed on grain {0} attempting to invoke type {1} from invokable {2}"'                              target.GetType().FullName' invoker.GetType().FullName' invokable.GetType().FullName);                          var exc = new GrainExtensionNotInstalledException(error);                          string extraDebugInfo = null;  #if DEBUG                          extraDebugInfo = Utils.GetStackTrace();  #endif                          logger.Warn(ErrorCode.Stream_ExtensionNotInstalled'                              string.Format("{0} for message {1} {2}"' error' message' extraDebugInfo)' exc);                            throw exc;                      }                                            var requestInvoker = new GrainMethodInvoker(target' request' invoker' siloInterceptors' interfaceToImplementationMapping);                      await requestInvoker.Invoke();                      resultObject = requestInvoker.Result;                  }                  catch (Exception exc1)                  {                      if (invokeExceptionLogger.IsEnabled(LogLevel.Debug) || message.Direction == Message.Directions.OneWay)                      {                          invokeExceptionLogger.Warn(ErrorCode.GrainInvokeException'                              "Exception during Grain method call of message: " + message' exc1);                      }                        transactionInfo = TransactionContext.GetTransactionInfo();                      if (transactionInfo != null)                      {                          // Must abort the transaction on exceptions                          transactionInfo.IsAborted = true;                          if (startNewTransaction)                          {                              var abortException = (exc1 as OrleansTransactionAbortedException) ??                                   new OrleansTransactionAbortedException(transactionInfo.TransactionId' exc1);                              this.transactionAgent.Value.Abort(transactionInfo' abortException);                              exc1 = abortException;                          }                      }                        // If a grain allowed an inconsistent state exception to escape and the exception originated from                      // this activation' then deactivate it.                      var ise = exc1 as InconsistentStateException;                      if (ise != null && ise.IsSourceActivation)                      {                          // Mark the exception so that it doesn't deactivate any other activations.                          ise.IsSourceActivation = false;                            var activation = (target as Grain)?.Data;                          if (activation != null)                          {                              invokeExceptionLogger.Info($"Deactivating {activation} due to inconsistent state.");                              this.DeactivateOnIdle(activation.ActivationId);                          }                      }                        if (message.Direction != Message.Directions.OneWay)                      {                          TransactionContext.Clear();                          SafeSendExceptionResponse(message' exc1);                      }                      return;                  }                    transactionInfo = TransactionContext.GetTransactionInfo();                  if (transactionInfo != null && transactionInfo.ReconcilePending() > 0)                  {                      var abortException = new OrleansOrphanCallException(transactionInfo.TransactionId' transactionInfo.PendingCalls);                      // Can't exit before the transaction completes.                      TransactionContext.GetTransactionInfo().IsAborted = true;                      if (startNewTransaction)                      {                          this.transactionAgent.Value.Abort(TransactionContext.GetTransactionInfo()' abortException);                      }                           if (message.Direction != Message.Directions.OneWay)                      {                          TransactionContext.Clear();                          SafeSendExceptionResponse(message' abortException);                      }                        return;                  }                    if (startNewTransaction)                  {                      // This request started the transaction' so we try to commit before returning.                      await this.transactionAgent.Value.Commit(transactionInfo);                      TransactionContext.Clear();                  }                    if (message.Direction == Message.Directions.OneWay) return;                    SafeSendResponse(message' resultObject);              }              catch (Exception exc2)              {                  logger.Warn(ErrorCode.Runtime_Error_100329' "Exception during Invoke of message: " + message' exc2);                    try                  {                      if (exc2 is OrleansTransactionInDoubtException)                      {                          this.logger.LogError(exc2' "Transaction failed due to in doubt transaction");                      }                      else if (TransactionContext.GetTransactionInfo() != null)                      {                          // Must abort the transaction on exceptions                          TransactionContext.GetTransactionInfo().IsAborted = true;                          var abortException = (exc2 as OrleansTransactionAbortedException) ??                              new OrleansTransactionAbortedException(TransactionContext.GetTransactionInfo().TransactionId' exc2);                          this.transactionAgent.Value.Abort(TransactionContext.GetTransactionInfo()' abortException);                      }                  }                  finally                  {                      TransactionContext.Clear();                      if (message.Direction != Message.Directions.OneWay)                          SafeSendExceptionResponse(message' exc2);                  }              }              finally              {                  TransactionContext.Clear();              }
Magic Number,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,Invoke,The following statement contains a magic number: try              {                  // Don't process messages that have already timed out                  if (message.IsExpired)                  {                      message.DropExpiredMessage(MessagingStatisticsGroup.Phase.Invoke);                      return;                  }                    RequestContextExtensions.Import(message.RequestContextData);                  if (Config.Globals.PerformDeadlockDetection && !message.TargetGrain.IsSystemTarget)                  {                      UpdateDeadlockInfoInRequestContext(new RequestInvocationHistory(message.TargetGrain' message.TargetActivation' message.DebugContext));                      // RequestContext is automatically saved in the msg upon send and propagated to the next hop                      // in RuntimeClient.CreateMessage -> RequestContextExtensions.ExportToMessage(message);                  }                    bool startNewTransaction = false;                  TransactionInfo transactionInfo = message.TransactionInfo;                    if (message.IsTransactionRequired && transactionInfo == null)                  {                      // TODO: this should be a configurable parameter                      var transactionTimeout = Debugger.IsAttached ? TimeSpan.FromMinutes(30) : TimeSpan.FromSeconds(10);                        // Start a new transaction                      transactionInfo = await this.transactionAgent.Value.StartTransaction(message.IsReadOnly' transactionTimeout);                      startNewTransaction = true;                  }                    if (transactionInfo != null)                  {                      TransactionContext.SetTransactionInfo(transactionInfo);                  }                    object resultObject;                  try                  {                      var request = (InvokeMethodRequest) message.GetDeserializedBody(this.SerializationManager);                      if (request.Arguments != null)                      {                          CancellationSourcesExtension.RegisterCancellationTokens(target' request' this.loggerFactory' logger' this' this.cancellationTokenRuntime);                      }                        var invoker = invokable.GetInvoker(typeManager' request.InterfaceId' message.GenericGrainType);                        if (invoker is IGrainExtensionMethodInvoker                          && !(target is IGrainExtension))                      {                          // We are trying the invoke a grain extension method on a grain                           // -- most likely reason is that the dynamic extension is not installed for this grain                          // So throw a specific exception here rather than a general InvalidCastException                          var error = String.Format(                              "Extension not installed on grain {0} attempting to invoke type {1} from invokable {2}"'                              target.GetType().FullName' invoker.GetType().FullName' invokable.GetType().FullName);                          var exc = new GrainExtensionNotInstalledException(error);                          string extraDebugInfo = null;  #if DEBUG                          extraDebugInfo = Utils.GetStackTrace();  #endif                          logger.Warn(ErrorCode.Stream_ExtensionNotInstalled'                              string.Format("{0} for message {1} {2}"' error' message' extraDebugInfo)' exc);                            throw exc;                      }                                            var requestInvoker = new GrainMethodInvoker(target' request' invoker' siloInterceptors' interfaceToImplementationMapping);                      await requestInvoker.Invoke();                      resultObject = requestInvoker.Result;                  }                  catch (Exception exc1)                  {                      if (invokeExceptionLogger.IsEnabled(LogLevel.Debug) || message.Direction == Message.Directions.OneWay)                      {                          invokeExceptionLogger.Warn(ErrorCode.GrainInvokeException'                              "Exception during Grain method call of message: " + message' exc1);                      }                        transactionInfo = TransactionContext.GetTransactionInfo();                      if (transactionInfo != null)                      {                          // Must abort the transaction on exceptions                          transactionInfo.IsAborted = true;                          if (startNewTransaction)                          {                              var abortException = (exc1 as OrleansTransactionAbortedException) ??                                   new OrleansTransactionAbortedException(transactionInfo.TransactionId' exc1);                              this.transactionAgent.Value.Abort(transactionInfo' abortException);                              exc1 = abortException;                          }                      }                        // If a grain allowed an inconsistent state exception to escape and the exception originated from                      // this activation' then deactivate it.                      var ise = exc1 as InconsistentStateException;                      if (ise != null && ise.IsSourceActivation)                      {                          // Mark the exception so that it doesn't deactivate any other activations.                          ise.IsSourceActivation = false;                            var activation = (target as Grain)?.Data;                          if (activation != null)                          {                              invokeExceptionLogger.Info($"Deactivating {activation} due to inconsistent state.");                              this.DeactivateOnIdle(activation.ActivationId);                          }                      }                        if (message.Direction != Message.Directions.OneWay)                      {                          TransactionContext.Clear();                          SafeSendExceptionResponse(message' exc1);                      }                      return;                  }                    transactionInfo = TransactionContext.GetTransactionInfo();                  if (transactionInfo != null && transactionInfo.ReconcilePending() > 0)                  {                      var abortException = new OrleansOrphanCallException(transactionInfo.TransactionId' transactionInfo.PendingCalls);                      // Can't exit before the transaction completes.                      TransactionContext.GetTransactionInfo().IsAborted = true;                      if (startNewTransaction)                      {                          this.transactionAgent.Value.Abort(TransactionContext.GetTransactionInfo()' abortException);                      }                           if (message.Direction != Message.Directions.OneWay)                      {                          TransactionContext.Clear();                          SafeSendExceptionResponse(message' abortException);                      }                        return;                  }                    if (startNewTransaction)                  {                      // This request started the transaction' so we try to commit before returning.                      await this.transactionAgent.Value.Commit(transactionInfo);                      TransactionContext.Clear();                  }                    if (message.Direction == Message.Directions.OneWay) return;                    SafeSendResponse(message' resultObject);              }              catch (Exception exc2)              {                  logger.Warn(ErrorCode.Runtime_Error_100329' "Exception during Invoke of message: " + message' exc2);                    try                  {                      if (exc2 is OrleansTransactionInDoubtException)                      {                          this.logger.LogError(exc2' "Transaction failed due to in doubt transaction");                      }                      else if (TransactionContext.GetTransactionInfo() != null)                      {                          // Must abort the transaction on exceptions                          TransactionContext.GetTransactionInfo().IsAborted = true;                          var abortException = (exc2 as OrleansTransactionAbortedException) ??                              new OrleansTransactionAbortedException(TransactionContext.GetTransactionInfo().TransactionId' exc2);                          this.transactionAgent.Value.Abort(TransactionContext.GetTransactionInfo()' abortException);                      }                  }                  finally                  {                      TransactionContext.Clear();                      if (message.Direction != Message.Directions.OneWay)                          SafeSendExceptionResponse(message' exc2);                  }              }              finally              {                  TransactionContext.Clear();              }
Magic Number,Orleans.Runtime,Silo,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Silo.cs,Silo,The following statement contains a magic number: if (Debugger.IsAttached)              {                  initTimeout = StandardExtensions.Max(TimeSpan.FromMinutes(10)' GlobalConfig.MaxJoinAttemptTime);                  stopTimeout = initTimeout;              }
Magic Number,Orleans.Runtime,SiloControl,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\SiloControl.cs,UpdateStreamProviders,The following statement contains a magic number: await this.providerManagerSystemTarget.ScheduleTask(() => streamProviderUpdateAgent.UpdateStreamProviders(streamProviderConfigurations))                  .WithTimeout(TimeSpan.FromSeconds(25));
Magic Number,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,CheckYourOwnHealth,The following statement contains a magic number: if (timeSinceLastTick > heartbeatPeriod.Multiply(2))              {                  var gc = new[] { GC.CollectionCount(0)' GC.CollectionCount(1)' GC.CollectionCount(2) };                  logger.Warn(ErrorCode.SiloHeartbeatTimerStalled'                      ".NET Runtime Platform stalled for {0} - possibly GC? We are now using total of {1}MB memory. gc={2}' {3}' {4}"'                      timeSinceLastTick'                      GC.GetTotalMemory(false) / (1024 * 1024)'                      gc[0]'                      gc[1]'                      gc[2]);              }
Magic Number,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,CheckYourOwnHealth,The following statement contains a magic number: if (timeSinceLastTick > heartbeatPeriod.Multiply(2))              {                  var gc = new[] { GC.CollectionCount(0)' GC.CollectionCount(1)' GC.CollectionCount(2) };                  logger.Warn(ErrorCode.SiloHeartbeatTimerStalled'                      ".NET Runtime Platform stalled for {0} - possibly GC? We are now using total of {1}MB memory. gc={2}' {3}' {4}"'                      timeSinceLastTick'                      GC.GetTotalMemory(false) / (1024 * 1024)'                      gc[0]'                      gc[1]'                      gc[2]);              }
Magic Number,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,CheckYourOwnHealth,The following statement contains a magic number: if (timeSinceLastTick > heartbeatPeriod.Multiply(2))              {                  var gc = new[] { GC.CollectionCount(0)' GC.CollectionCount(1)' GC.CollectionCount(2) };                  logger.Warn(ErrorCode.SiloHeartbeatTimerStalled'                      ".NET Runtime Platform stalled for {0} - possibly GC? We are now using total of {1}MB memory. gc={2}' {3}' {4}"'                      timeSinceLastTick'                      GC.GetTotalMemory(false) / (1024 * 1024)'                      gc[0]'                      gc[1]'                      gc[2]);              }
Magic Number,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,CheckYourOwnHealth,The following statement contains a magic number: if (timeSinceLastTick > heartbeatPeriod.Multiply(2))              {                  var gc = new[] { GC.CollectionCount(0)' GC.CollectionCount(1)' GC.CollectionCount(2) };                  logger.Warn(ErrorCode.SiloHeartbeatTimerStalled'                      ".NET Runtime Platform stalled for {0} - possibly GC? We are now using total of {1}MB memory. gc={2}' {3}' {4}"'                      timeSinceLastTick'                      GC.GetTotalMemory(false) / (1024 * 1024)'                      gc[0]'                      gc[1]'                      gc[2]);              }
Magic Number,Orleans.Runtime,Watchdog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Silo\Watchdog.cs,CheckYourOwnHealth,The following statement contains a magic number: if (timeSinceLastTick > heartbeatPeriod.Multiply(2))              {                  var gc = new[] { GC.CollectionCount(0)' GC.CollectionCount(1)' GC.CollectionCount(2) };                  logger.Warn(ErrorCode.SiloHeartbeatTimerStalled'                      ".NET Runtime Platform stalled for {0} - possibly GC? We are now using total of {1}MB memory. gc={2}' {3}' {4}"'                      timeSinceLastTick'                      GC.GetTotalMemory(false) / (1024 * 1024)'                      gc[0]'                      gc[1]'                      gc[2]);              }
Magic Number,Orleans.Runtime.ConsistentRing,ConsistentRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\ConsistentRingProvider.cs,AddServer,The following statement contains a magic number: lock (membershipRingList)              {                  if (membershipRingList.Contains(silo)) return; // we already have this silo                    int myOldIndex = membershipRingList.FindIndex(elem => elem.Equals(MyAddress));                    if (!(membershipRingList.Count == 0 || myOldIndex != -1))                      throw new OrleansException(string.Format("{0}: Couldn't find my position in the ring {1}."' MyAddress' Utils.EnumerableToString(membershipRingList)));                                      // insert new silo in the sorted order                  int hash = silo.GetConsistentHashCode();                    // Find the last silo with hash smaller than the new silo' and insert the latter after (this is why we have +1 here) the former.                  // Notice that FindLastIndex might return -1 if this should be the first silo in the list' but then                  // 'index' will get 0' as needed.                  int index = membershipRingList.FindLastIndex(siloAddr => siloAddr.GetConsistentHashCode() < hash) + 1;                  membershipRingList.Insert(index' silo);                    // relating to triggering handler ... new node took over some of my responsibility                  if (index == myOldIndex || // new node was inserted in my place                      (myOldIndex == 0 && index == membershipRingList.Count - 1)) // I am the first node' and the new server is the last node                  {                      IRingRange oldRange = MyRange;                      try                      {                          MyRange = RangeFactory.CreateRange(unchecked((uint)hash)' unchecked((uint)myKey));                      }                      catch (OverflowException exc)                      {                          log.Error(ErrorCode.ConsistentRingProviderBase + 5'                              String.Format("OverflowException: hash as int= x{0' 8:X8}' hash as uint= x{1' 8:X8}' myKey as int x{2' 8:X8}' myKey as uint x{3' 8:X8}."'                              hash' (uint)hash' myKey' (uint)myKey)' exc);                      }                      NotifyLocalRangeSubscribers(oldRange' MyRange' false);                  }                    log.Info("Added Server {0}. Current view: {1}"' silo.ToStringWithHashCode()' this.ToString());              }
Magic Number,Orleans.Runtime.ConsistentRing,VirtualBucketsRingProvider,C:\repos\dotnet_orleans\src\Orleans.Runtime\ConsistentRing\VirtualBucketsRingProvider.cs,VirtualBucketsRingProvider,The following statement contains a magic number: FloatValueStatistic.FindOrCreate(StatisticNames.CONSISTENTRING_AVERAGERINGPERCENTAGE' () =>              {                  int size = GetRingSize();                  return size == 0 ? 0 : ((float)100.0/(float) size);              });
Magic Number,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,ProduceStats,The following statement contains a magic number: if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("#accesses: {0}' hit-ratio: {1}%"' numAccesses' (numHits / Math.Max(numAccesses' 0.00001)) * 100);
Magic Number,Orleans.Runtime.GrainDirectory,AdaptiveDirectoryCacheMaintainer<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveDirectoryCacheMaintainer.cs,ProduceStats,The following statement contains a magic number: if (Log.IsEnabled(LogLevel.Trace)) Log.Trace("#accesses: {0}' hit-ratio: {1}%"' numAccesses' (numHits / Math.Max(numAccesses' 0.00001)) * 100);
Magic Number,Orleans.Runtime.GrainDirectory,AdaptiveGrainDirectoryCache<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveGrainDirectoryCache.cs,ToString,The following statement contains a magic number: if (curNumAccesses > 0)              {                  sb.AppendFormat("      Hit Rate: {0:F1}%"' (100.0 * curNumHits) / curNumAccesses).AppendLine();              }
Magic Number,Orleans.Runtime.GrainDirectory,AdaptiveGrainDirectoryCache<TValue>,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\AdaptiveGrainDirectoryCache.cs,ToString,The following statement contains a magic number: if (LastNumAccesses > 0)              {                  sb.AppendFormat("      Hit Rate: {0:F1}%"' (100.0 * LastNumHits) / LastNumAccesses).AppendLine();              }
Magic Number,Orleans.Runtime.GrainDirectory,GrainDirectoryPartition,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\GrainDirectoryPartition.cs,LookUpActivations,The following statement contains a magic number: const int arrayReusingThreshold = 100;
Magic Number,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,LocalGrainDirectory,The following statement contains a magic number: FloatValueStatistic.FindOrCreate(StatisticNames.DIRECTORY_RING_MYPORTION_RINGPERCENTAGE' () => (((float)this.RingDistanceToSuccessor()) / ((float)(int.MaxValue * 2L))) * 100);
Magic Number,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,LocalGrainDirectory,The following statement contains a magic number: FloatValueStatistic.FindOrCreate(StatisticNames.DIRECTORY_RING_MYPORTION_AVERAGERINGPERCENTAGE' () => this.membershipRingList.Count == 0 ? 0 : ((float)100 / (float)this.membershipRingList.Count));
Magic Number,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,CalculateTargetSilo,The following statement contains a magic number: lock (membershipCache)              {                  if (membershipRingList.Count == 0)                  {                      // If the membership ring is empty' then we're the owner by default unless we're stopping.                      return excludeThisSiloIfStopping && !Running ? null : MyAddress;                  }                    // need to implement a binary search' but for now simply traverse the list of silos sorted by their hashes                  for (var index = membershipRingList.Count - 1; index >= 0; --index)                  {                      var item = membershipRingList[index];                      if (IsSiloNextInTheRing(item' hash' excludeMySelf))                      {                          siloAddress = item;                          break;                      }                  }                                    if (siloAddress == null)                  {                      // If not found in the traversal' last silo will do (we are on a ring).                      // We checked above to make sure that the list isn't empty' so this should always be safe.                      siloAddress = membershipRingList[membershipRingList.Count - 1];                      // Make sure it's not us...                      if (siloAddress.Equals(MyAddress) && excludeMySelf)                      {                          siloAddress = membershipRingList.Count > 1 ? membershipRingList[membershipRingList.Count - 2] : null;                      }                  }              }
Magic Number,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,ToString,The following statement contains a magic number: if (localLookupsDelta > 0)                  sb.AppendFormat("      Hit rate: {0:F1}%"' (100.0 * localLookupsSucceededDelta) / localLookupsDelta).AppendLine();
Magic Number,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,ToString,The following statement contains a magic number: if (localLookupsCurrent > 0)                  sb.AppendFormat("      Hit rate: {0:F1}%"' (100.0 * localLookupsSucceededCurrent) / localLookupsCurrent).AppendLine();
Magic Number,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RingDistanceToSuccessor_2,The following statement contains a magic number: return string.Format("RingDistance={0:X}' %Ring Space {1:0.00000}%' Average %Ring Space {2:0.00000}%"'                   distance' ((double)distance / (double)ringSize) * 100.0' averageRingSpace * 100.0);
Magic Number,Orleans.Runtime.GrainDirectory,LocalGrainDirectory,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\LocalGrainDirectory.cs,RingDistanceToSuccessor_2,The following statement contains a magic number: return string.Format("RingDistance={0:X}' %Ring Space {1:0.00000}%' Average %Ring Space {2:0.00000}%"'                   distance' ((double)distance / (double)ringSize) * 100.0' averageRingSpace * 100.0);
Magic Number,Orleans.Runtime.GrainDirectory,MultiClusterUtils,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\MultiClusterUtils.cs,ActivationPrecedenceFunc,The following statement contains a magic number: if (grain.GetUniformHashCode() % 2 == 0)                  return string.Compare(clusterLeft' clusterRight' StringComparison.Ordinal) < 0;              else                  return string.Compare(clusterRight' clusterLeft' StringComparison.Ordinal) < 0;
Magic Number,Orleans.Hosting,CoreHostingExtensions,C:\repos\dotnet_orleans\src\Orleans.Runtime\Hosting\CoreHostingExtensions.cs,ConfigureOrleans,The following statement contains a magic number: builder.ConfigureServices((context' services) =>              {                  if (!context.Properties.ContainsKey("OrleansServicesAdded"))                  {                      services.PostConfigure<SiloOptions>(options => options.SiloName = options.SiloName                                             ?? context.HostingEnvironment.ApplicationName                                             ?? $"Silo_{Guid.NewGuid().ToString("N").Substring(0' 5)}");                        services.TryAddSingleton<Silo>(sp => new Silo(sp.GetRequiredService<SiloInitializationParameters>()' sp));                      DefaultSiloServices.AddDefaultServices(context' services);                        context.Properties.Add("OrleansServicesAdded"' true);                  }              });
Magic Number,Orleans.Runtime.MembershipService,GrainBasedMembershipTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\GrainBasedMembershipTable.cs,WaitForTableGrainToInit,The following statement contains a magic number: var timespan = Debugger.IsAttached ? TimeSpan.FromMinutes(5) : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Runtime.MembershipService,GrainBasedMembershipTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\GrainBasedMembershipTable.cs,WaitForTableGrainToInit,The following statement contains a magic number: var timespan = Debugger.IsAttached ? TimeSpan.FromMinutes(5) : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Runtime.MembershipService,GrainBasedMembershipTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\GrainBasedMembershipTable.cs,WaitForTableGrainToInit,The following statement contains a magic number: for (int i = 0; i < 100; i++)              {                  try                  {                      await membershipTableGrain.ReadAll().WithTimeout(timespan);                      logger.Info(ErrorCode.MembershipTableGrainInit2' "-Connected to membership table provider.");                      return;                  }                  catch (Exception exc)                  {                      var type = exc.GetBaseException().GetType();                      if (type == typeof(TimeoutException) || type == typeof(OrleansException))                      {                          logger.Info(                              ErrorCode.MembershipTableGrainInit3'                              "-Waiting for membership table provider to initialize. Going to sleep for {0} and re-try to reconnect."'                              timespan);                      }                      else                      {                          logger.Info(ErrorCode.MembershipTableGrainInit4' "-Membership table provider failed to initialize. Giving up.");                          throw;                      }                  }                    await Task.Delay(timespan);              }
Magic Number,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,MembershipOracle,The following statement contains a magic number: TimeSpan backOffMax = StandardExtensions.Max(EXP_BACKOFF_STEP.Multiply(orleansConfig.Globals.ExpectedClusterSize)' SiloMessageSender.CONNECTION_RETRY_DELAY.Multiply(2));
Magic Number,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,Start,The following statement contains a magic number: try              {                  logger.Info(ErrorCode.MembershipStarting' "MembershipOracle starting on host = " + membershipOracleData.MyHostname + " address = " + MyAddress.ToLongString() + " at " + LogFormatter.PrintDate(membershipOracleData.SiloStartTime) + "' backOffMax = " + EXP_BACKOFF_CONTENTION_MAX);                    // Create the membership table.                  this.membershipTableProvider = await this.membershipTableFactory.GetMembershipTable();                    // randomly delay the startup' so not all silos write to the table at once.                  // Use random time not larger than MaxJoinAttemptTime' one minute and 0.5sec*ExpectedClusterSize;                  var random = new SafeRandom();                  var maxDelay = TimeSpan.FromMilliseconds(500).Multiply(orleansConfig.Globals.ExpectedClusterSize);                  maxDelay = StandardExtensions.Min(maxDelay' StandardExtensions.Min(orleansConfig.Globals.MaxJoinAttemptTime' TimeSpan.FromMinutes(1)));                  var randomDelay = random.NextTimeSpan(maxDelay);                  await Task.Delay(randomDelay);                    // first' cleanup all outdated entries of myself from the table                  await CleanupTable();                    // write myself to the table                  await UpdateMyStatusGlobal(SiloStatus.Joining);                    StartIAmAliveUpdateTimer();                    // read the table and look for my node migration occurrences                  await DetectNodeMigration(membershipOracleData.MyHostname);              }              catch (Exception exc)              {                  logger.Error(ErrorCode.MembershipFailedToStart' "MembershipFailedToStart"' exc);                  throw;              }
Magic Number,Orleans.Runtime.MembershipService,MembershipOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MembershipService\MembershipOracle.cs,TryToSuspectOrKill,The following statement contains a magic number: if (freshVotes.Count + myAdditionalVote >= (activeSilos + 1) / 2)                  declareDead = true;
Magic Number,Orleans.Runtime.Messaging,ClientsReplyRoutingCache,C:\repos\dotnet_orleans\src\Orleans.Runtime\Messaging\Gateway.cs,ClientsReplyRoutingCache,The following statement contains a magic number: TIME_BEFORE_ROUTE_CACHED_ENTRY_EXPIRES = responseTimeout.Multiply(5);
Magic Number,Orleans.Runtime.MultiClusterNetwork,GatewayEntry,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterData.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var hashCode = this.SiloAddress.GetHashCode();                  hashCode = (hashCode * 397) ^ this.Status.GetHashCode();                  hashCode = (hashCode * 397) ^ this.HeartbeatTimestamp.GetHashCode();                  hashCode = (hashCode * 397) ^ this.ClusterId.GetHashCode();                  return hashCode;              }
Magic Number,Orleans.Runtime.MultiClusterNetwork,GatewayEntry,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterData.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var hashCode = this.SiloAddress.GetHashCode();                  hashCode = (hashCode * 397) ^ this.Status.GetHashCode();                  hashCode = (hashCode * 397) ^ this.HeartbeatTimestamp.GetHashCode();                  hashCode = (hashCode * 397) ^ this.ClusterId.GetHashCode();                  return hashCode;              }
Magic Number,Orleans.Runtime.MultiClusterNetwork,GatewayEntry,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterData.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var hashCode = this.SiloAddress.GetHashCode();                  hashCode = (hashCode * 397) ^ this.Status.GetHashCode();                  hashCode = (hashCode * 397) ^ this.HeartbeatTimestamp.GetHashCode();                  hashCode = (hashCode * 397) ^ this.ClusterId.GetHashCode();                  return hashCode;              }
Magic Number,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,RandomizeTimespanSlightly,The following statement contains a magic number: return TimeSpan.FromMilliseconds(value.TotalMilliseconds * (1 + (random.NextDouble() * 0.05)));
Magic Number,Orleans.Runtime.MultiClusterNetwork,MultiClusterOracle,C:\repos\dotnet_orleans\src\Orleans.Runtime\MultiClusterNetwork\MultiClusterOracle.cs,RemoveIdleWorkers,The following statement contains a magic number: var toRemove = dict                  .Where(kvp => (now - kvp.Value.LastUse).TotalMilliseconds > 2.5 * this.resendActiveStatusAfter.TotalMilliseconds)                  .Select(kvp => kvp.Key)                  .ToList();
Magic Number,Orleans.Runtime.Placement,ActivationCountPlacementDirector,C:\repos\dotnet_orleans\src\Orleans.Runtime\Placement\ActivationCountPlacementDirector.cs,IsSiloOverloaded,The following statement contains a magic number: return stats.IsOverloaded || stats.CpuUsage >= 100;
Magic Number,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,OnActivateAsync,The following statement contains a magic number: base.DelayDeactivation(TimeSpan.FromDays(10 * 365));
Magic Number,Orleans.Runtime.ReminderService,GrainBasedReminderTable,C:\repos\dotnet_orleans\src\Orleans.Runtime\ReminderService\GrainBasedReminderTable.cs,OnActivateAsync,The following statement contains a magic number: base.DelayDeactivation(TimeSpan.FromDays(10 * 365));
Magic Number,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,CreateTestInstance,The following statement contains a magic number: return new OrleansTaskScheduler(                  maxActiveThreads'                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  NodeConfiguration.ENABLE_WORKER_THREAD_INJECTION'                  LimitManager.GetDefaultLimit(LimitNames.LIMIT_MAX_PENDING_ITEMS)'                  performanceMetrics'                  new ExecutorService()'                   loggerFactory);
Magic Number,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,CreateTestInstance,The following statement contains a magic number: return new OrleansTaskScheduler(                  maxActiveThreads'                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  NodeConfiguration.ENABLE_WORKER_THREAD_INJECTION'                  LimitManager.GetDefaultLimit(LimitNames.LIMIT_MAX_PENDING_ITEMS)'                  performanceMetrics'                  new ExecutorService()'                   loggerFactory);
Magic Number,Orleans.Runtime.Scheduler,OrleansTaskScheduler,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\OrleansTaskScheduler.cs,CreateTestInstance,The following statement contains a magic number: return new OrleansTaskScheduler(                  maxActiveThreads'                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)'                  NodeConfiguration.ENABLE_WORKER_THREAD_INJECTION'                  LimitManager.GetDefaultLimit(LimitNames.LIMIT_MAX_PENDING_ITEMS)'                  performanceMetrics'                  new ExecutorService()'                   loggerFactory);
Magic Number,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,WorkerPool,The following statement contains a magic number: MaxWorkQueueWait = TimeSpan.FromMilliseconds(50);
Magic Number,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,CanExit,The following statement contains a magic number: lock (lockable)              {                  if (running && (pool.Count <= MaxActiveThreads + 2))                      return false;              }
Magic Number,Orleans.Runtime.Scheduler,WorkerPool,C:\repos\dotnet_orleans\src\Orleans.Runtime\Scheduler\WorkerPool.cs,RecordLeavingThread,The following statement contains a magic number: lock (lockable)              {                  pool.Remove(t);                  if (running && (pool.Count < MaxActiveThreads + 2))                      restart = true;                    if (!restart) return;                    createThreadCount++;                  var tnew = new WorkerPoolThread(this' scheduler' this.executorService' this.loggerFactory' this.performanceMetrics' createThreadCount);                  tnew.Start();              }
Magic Number,Orleans.Storage,MemoryStorageGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\MemoryStorageGrain.cs,OnActivateAsync,The following statement contains a magic number: base.DelayDeactivation(TimeSpan.FromDays(10 * 365));
Magic Number,Orleans.Storage,MemoryStorageGrain,C:\repos\dotnet_orleans\src\Orleans.Runtime\Storage\MemoryStorageGrain.cs,OnActivateAsync,The following statement contains a magic number: base.DelayDeactivation(TimeSpan.FromDays(10 * 365));
Magic Number,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,CreateAsPercentOfLoadSheddingLimit,The following statement contains a magic number: if (percentOfSiloSheddingLimit < 0.0 || percentOfSiloSheddingLimit > 100.0) throw new ArgumentOutOfRangeException(nameof(percentOfSiloSheddingLimit)' "Percent value must be between 0-100");
Magic Number,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,CreateAsPercentOfLoadSheddingLimit,The following statement contains a magic number: return new LoadShedQueueFlowController((int)(getNodeConfig().LoadSheddingLimit * (percentOfSiloSheddingLimit / 100.0))' getNodeConfig);
Magic Number,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,CreateAsPercentageOfCPU,The following statement contains a magic number: if (loadSheddingLimit < 0 || loadSheddingLimit > 100) throw new ArgumentOutOfRangeException(nameof(loadSheddingLimit)' "Value must be between 0-100");
Magic Number,Orleans.Streams,LoadShedQueueFlowController,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\LoadShedQueueFlowController.cs,LoadShedQueueFlowController,The following statement contains a magic number: if (loadSheddingLimit < 0 || loadSheddingLimit > 100) throw new ArgumentOutOfRangeException(nameof(loadSheddingLimit)' "Value must be between 0-100");
Magic Number,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,Initialize,The following statement contains a magic number: this.renewLeaseTimer = new AsyncTaskSafeTimer(timerLogger' this.MaintainAndBalanceQueues' null' this.siloMaturityPeriod' this.leaseLength.Divide(2));
Magic Number,Orleans.Streams,LeaseBasedQueueBalancer,C:\repos\dotnet_orleans\src\Orleans.Runtime\Streams\QueueBalancer\LeaseBasedQueueBalancer.cs,AcquireLeasesToMeetExpectation,The following statement contains a magic number: int maxAttempts = 5;
Magic Number,Orleans.Transactions,TransactionAgent,C:\repos\dotnet_orleans\src\Orleans.Runtime\Transactions\TransactionAgent.cs,Start,The following statement contains a magic number: requestProcessor = GrainTimer.FromTaskCallback(this.RuntimeClient.Scheduler' this.loggerFactory.CreateLogger<GrainTimer>()' ProcessRequests' null' TimeSpan.FromMilliseconds(0)' TimeSpan.FromMilliseconds(10)' "TransactionAgent");
Missing Default,Orleans.Runtime,Catalog,C:\repos\dotnet_orleans\src\Orleans.Runtime\Catalog\Catalog.cs,RecoverFailedInitActivation,The following switch statement is missing a default case: switch (initStage)                  {                      case ActivationInitializationStage.Register: // failed to RegisterActivationInGrainDirectory                            // Failure!! Could it be that this grain uses single activation placement' and there already was an activation?                          // If the registration result is not set' the forwarding address will be null.                          activation.ForwardingAddress = registrationResult.ExistingActivationAddress;                          if (activation.ForwardingAddress != null)                          {                              CounterStatistic                                  .FindOrCreate(StatisticNames.CATALOG_ACTIVATION_CONCURRENT_REGISTRATION_ATTEMPTS)                                  .Increment();                              var primary = directory.GetPrimaryForGrain(activation.ForwardingAddress.Grain);                              if (logger.IsEnabled(LogLevel.Information))                              {                                  // If this was a duplicate' it's not an error' just a race.                                  // Forward on all of the pending messages' and then forget about this activation.                                  var logMsg =                                      $"Tried to create a duplicate activation {address}' but we'll use {activation.ForwardingAddress} instead. " +                                      $"GrainInstanceType is {activation.GrainInstanceType}. " +                                      $"{(primary != null ? "Primary Directory partition for this grain is " + primary + ". " : string.Empty)}" +                                      $"Full activation address is {address.ToFullString()}. We have {activation.WaitingCount} messages to forward.";                                  if (activation.IsUsingGrainDirectory)                                  {                                      logger.Info(ErrorCode.Catalog_DuplicateActivation' logMsg);                                  }                                  else                                  {                                      logger.Debug(ErrorCode.Catalog_DuplicateActivation' logMsg);                                  }                              }                                RerouteAllQueuedMessages(activation' activation.ForwardingAddress' "Duplicate activation"' exception);                          }                          else                          {                              logger.Warn(ErrorCode.Runtime_Error_100064'                                  $"Failed to RegisterActivationInGrainDirectory for {activation}."' exception);                              // Need to undo the registration we just did earlier                              if (activation.IsUsingGrainDirectory)                              {                                  scheduler.RunOrQueueTask(                                      () => directory.UnregisterAsync(address' UnregistrationCause.Force)'                                      SchedulingContext).Ignore();                              }                              RerouteAllQueuedMessages(activation' null'                                  "Failed RegisterActivationInGrainDirectory"' exception);                          }                          break;                        case ActivationInitializationStage.SetupState: // failed to setup persistent state                            logger.Warn(ErrorCode.Catalog_Failed_SetupActivationState'                              string.Format("Failed to SetupActivationState for {0}."' activation)' exception);                          // Need to undo the registration we just did earlier                          if (activation.IsUsingGrainDirectory)                          {                              scheduler.RunOrQueueTask(                                  () => directory.UnregisterAsync(address' UnregistrationCause.Force)'                                  SchedulingContext).Ignore();                          }                            RerouteAllQueuedMessages(activation' null' "Failed SetupActivationState"' exception);                          break;                        case ActivationInitializationStage.InvokeActivate: // failed to InvokeActivate                            logger.Warn(ErrorCode.Catalog_Failed_InvokeActivate'                              string.Format("Failed to InvokeActivate for {0}."' activation)' exception);                          // Need to undo the registration we just did earlier                          if (activation.IsUsingGrainDirectory)                          {                              scheduler.RunOrQueueTask(                                  () => directory.UnregisterAsync(address' UnregistrationCause.Force)'                                  SchedulingContext).Ignore();                          }                            // Reject all of the messages queued for this activation.                          var activationFailedMsg = nameof(Grain.OnActivateAsync) + " failed";                          RejectAllQueuedMessages(activation' activationFailedMsg' exception);                          break;                  }
Missing Default,Orleans.Runtime,InsideRuntimeClient,C:\repos\dotnet_orleans\src\Orleans.Runtime\Core\InsideRuntimeClient.cs,SendRequestMessage,The following switch statement is missing a default case: switch (schedulingContext.ContextType)              {                  case SchedulingContextType.SystemThread:                      throw new ArgumentException(                          String.Format("Trying to send a message {0} on a silo not from within grain and not from within system target (RuntimeContext is of SchedulingContextType.SystemThread type)"' message)' "context");                    case SchedulingContextType.Activation:                      message.SendingActivation = schedulingContext.Activation.ActivationId;                      message.SendingGrain = schedulingContext.Activation.Grain;                      sendingActivation = schedulingContext.Activation;                      break;                    case SchedulingContextType.SystemTarget:                      message.SendingActivation = schedulingContext.SystemTarget.ActivationId;                      message.SendingGrain = ((ISystemTargetBase)schedulingContext.SystemTarget).GrainId;                      break;              }
Missing Default,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceActivationMaintainer,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceActivationMaintainer.cs,RunBatchedActivationRequests,The following switch statement is missing a default case: switch (outcome)                  {                      case OutcomeState.RemoteOwner:                      case OutcomeState.RemoteOwnerLikely:                      {                          // record activations that lost and need to be deactivated                          List<ActivationAddress> losers;                          if (!loser_activations_per_silo.TryGetValue(address.Silo' out losers))                              loser_activations_per_silo[address.Silo] = losers = new List<ActivationAddress>();                          losers.Add(address);                            router.DirectoryPartition.CacheOrUpdateRemoteClusterRegistration(address.Grain' address.Activation' outcomeDetails.RemoteOwnerAddress.Address);                          continue;                      }                      case OutcomeState.Succeed:                      {                          var ok = (router.DirectoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.Owned' GrainDirectoryEntryStatus.RequestedOwnership));                          if (ok)                              continue;                          else                              break;                      }                      case OutcomeState.Inconclusive:                      {                          break;                      }                  }
Missing Default,Orleans.Runtime.GrainDirectory,GlobalSingleInstanceRegistrar,C:\repos\dotnet_orleans\src\Orleans.Runtime\GrainDirectory\MultiClusterRegistration\GlobalSingleInstanceRegistrar.cs,RegisterAsync,The following switch statement is missing a default case: switch (outcome.State)                  {                      case OutcomeState.RemoteOwner:                      case OutcomeState.RemoteOwnerLikely:                          {                              directoryPartition.CacheOrUpdateRemoteClusterRegistration(address.Grain' address.Activation' outcome.RemoteOwnerAddress.Address);                              return outcome.RemoteOwnerAddress;                          }                      case OutcomeState.Succeed:                          {                              if (directoryPartition.UpdateClusterRegistrationStatus(address.Grain' address.Activation' GrainDirectoryEntryStatus.Owned' GrainDirectoryEntryStatus.RequestedOwnership))                                  return myActivation;                              else                                  break; // concurrently moved to RACE_LOSER                          }                      case OutcomeState.Inconclusive:                          {                              break;                          }                  }
