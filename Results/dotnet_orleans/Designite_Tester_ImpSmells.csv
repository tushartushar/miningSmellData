Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,CheckEquality,Cyclomatic complexity of the method is 9
Complex Method,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,Cyclomatic complexity of the method is 11
Complex Method,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,CheckCounters,Cyclomatic complexity of the method is 8
Long Parameter List,Tester,Logger,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,Log,The method has 5 parameters. Parameters: logLevel' eventId' state' exception' formatter
Long Parameter List,Tester,TestLogger<T>,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,Log,The method has 5 parameters. Parameters: logLevel' eventId' state' exception' formatter
Long Parameter List,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamConsumerOnDroppedClientTest,The method has 5 parameters. Parameters: streamProviderName' streamNamespace' output' getDeliveryFailureCount' waitForRetryTimeouts
Long Parameter List,Tester.TestStreamProviders.Controllable,ControllableTestAdapterFactory,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\TestStreamProviders\Controllable\ControllableTestStreamProvider.cs,QueueMessageBatchAsync,The method has 5 parameters. Parameters: streamGuid' streamNamespace' events' token' requestContext
Long Identifier,Tester,Configurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionEventTests.cs,Configure,The length of the parameter gatewayConnectionCountNotifier is 30.
Long Identifier,Tester.SerializationTests,ConsiderForCodeGenerationAttributeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\ConsiderForCodeGenerationAttributeTests.cs,GenerateSerializerForNonSerializableTypeTest,The length of the parameter typeDerivedFromTypeUsedInGrainInterface is 39.
Long Identifier,Tester.StreamingTests,PluggableQueueBalancerTestBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PlugableQueueBalancerTests\PluggableQueueBalancerTestBase.cs,ShouldUseInjectedQueueBalancerAndBalanceCorrectly,The length of the parameter expectedResponsibilityPerBalancer is 33.
Long Identifier,Tester.StreamingTests,PluggableQueueBalancerTestBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PlugableQueueBalancerTests\PluggableQueueBalancerTestBase.cs,CheckLeases,The length of the parameter expectedResponsibilityPerBalancer is 33.
Long Identifier,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest,The length of the parameter consumerGrainReceivedStreamMessage is 34.
Long Statement,Tester,GatewayConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\GatewayConnectionTests.cs,NoReconnectionToGatewayNotReturnedByManager,The length of the statement  "            var gateways = await this.HostedCluster.Client.ServiceProvider.GetRequiredService<IGatewayListProvider>().GetGateways(); " is 120.
Long Statement,Tester,LifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,RunLifecycle,The length of the statement  "                    .Select(i => new Observer(failOnStart.HasValue && kvp.Key == failOnStart' failOnStop.HasValue && kvp.Key == failOnStop)) " is 120.
Long Statement,Tester,MultiStageObserver,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,Participate,The length of the statement  "                lifecycle.Subscribe<MultiStageObserver>((int)TestStages.Down' ct => OnStartStage(TestStages.Down)' ct => OnStopStage(TestStages.Down)); " is 135.
Long Statement,Tester,MultiStageObserver,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,Participate,The length of the statement  "                lifecycle.Subscribe<MultiStageObserver>((int)TestStages.Initialize' ct => OnStartStage(TestStages.Initialize)' ct => OnStopStage(TestStages.Initialize)); " is 153.
Long Statement,Tester,MultiStageObserver,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,Participate,The length of the statement  "                lifecycle.Subscribe<MultiStageObserver>((int)TestStages.Configure' ct => OnStartStage(TestStages.Configure)' ct => OnStopStage(TestStages.Configure)); " is 150.
Long Statement,Tester,MultiStageObserver,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,Participate,The length of the statement  "                lifecycle.Subscribe<MultiStageObserver>((int)TestStages.Run' ct => OnStartStage(TestStages.Run)' ct => OnStopStage(TestStages.Run)); " is 132.
Long Statement,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,GenericFormatterRedact,The length of the statement  "                options.SomeConnectionString = "DefaultEndpointsProtocol=https;AccountName=someAccount;AccountKey=someKey;EndpointSuffix=core.windows.net"; " is 139.
Long Statement,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,GenericFormatterRedact,The length of the statement  "            Assert.Contains("SomeConnectionString: DefaultEndpointsProtocol=https;AccountName=someAccount;AccountKey=<--SNIP-->"' actual.ToString()); " is 137.
Long Statement,Tester.ClientConnectionTests,ClusterClientTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClusterClientTests.cs,ConnectIsRetryableTest,The length of the statement  "            var gateways = await this.HostedCluster.Client.ServiceProvider.GetRequiredService<IGatewayListProvider>().GetGateways(); " is 120.
Long Statement,Tester.ClientConnectionTests,InvalidPreambleConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\InvalidPreambleConnectionTests.cs,ShouldCloseConnectionWhenClientSendsInvalidPreambleSize,The length of the statement  "            var gateways = await this.HostedCluster.Client.ServiceProvider.GetRequiredService<IGatewayListProvider>().GetGateways(); " is 120.
Long Statement,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,AccountWithLog,The length of the statement  "            var account = this.fixture.GrainFactory.GetGrain<IAccountGrain>($"Account-{Guid.NewGuid()}"' "TestGrains.AccountGrain"); " is 120.
Long Statement,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,AccountWithoutLog,The length of the statement  "            var account = this.fixture.GrainFactory.GetGrain<IAccountGrain>($"Account-{Guid.NewGuid()}"' "TestGrains.AccountGrain_PersistStateOnly"); " is 137.
Long Statement,Tester.EventSourcingTests,TestSiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\EventSourcingClusterFixture.cs,Configure,The length of the statement  "                    .AddFaultInjectionMemoryStorage("SlowMemoryStore"' options=>options.NumStorageGrains = 10' faultyOptions => faultyOptions.Latency = TimeSpan.FromMilliseconds(15)); " is 163.
Long Statement,Tester.EventSourcingTests,PersonGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\PersonGrainTests.cs,JournaledGrainTests_Persist,The length of the statement  "            await grainWithState.RegisterBirth(new PersonAttributes { FirstName = "Luke"' LastName = "Skywalker"' Gender = GenderType.Male }); " is 130.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,SynchronousAggregateExceptionThrownShouldResultInFaultedTaskWithOriginalAggregateExceptionUnmodifiedAsInnerException,The length of the statement  "            // assert that the faulted task has an inner exception of type AggregateException' which should be our original exception " is 121.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsClient_Request_Deserialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.SendUndeserializableToClient(this.clientObjectRef)); " is 140.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsClient_Response_Serialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.GetUnserializableFromClient(this.clientObjectRef)); " is 139.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsClient_Response_Deserialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.GetUndeserializableFromClient(this.clientObjectRef)); " is 141.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsClient_Request_Serialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.SendUnserializableToClient(this.clientObjectRef)); " is 138.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsGrain_Request_Deserialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.SendUndeserializableToOtherSilo()); " is 123.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsGrain_Request_Serialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.SendUnserializableToOtherSilo()); " is 121.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsGrain_Response_Serialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.GetUnserializableFromOtherSilo()); " is 122.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_GrainCallsGrain_Response_Deserialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.GetUndeserializableFromOtherSilo()); " is 124.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_ClientCallsGrain_Request_Deserialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.SendUndeserializable(new UndeserializableType(32))); " is 140.
Long Statement,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_ClientCallsGrain_Request_Serialization_Failure,The length of the statement  "                var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.SendUnserializable(new UnserializableType())); " is 134.
Long Statement,UnitTests.General,GrainActivatorTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainActivatorTests.cs,CanUseCustomGrainActivatorToCreateGrains,The length of the statement  "            ISimpleDIGrain grain = this.fixture.GrainFactory.GetGrain<ISimpleDIGrain>(GetRandomGrainId()' grainClassNamePrefix: "UnitTests.Grains.ExplicitlyRegistered"); " is 157.
Long Statement,UnitTests.General,GrainActivatorTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainActivatorTests.cs,CanUseCustomGrainActivatorToReleaseGrains,The length of the statement  "            ISimpleDIGrain grain1 = this.fixture.GrainFactory.GetGrain<ISimpleDIGrain>(GetRandomGrainId()' grainClassNamePrefix: "UnitTests.Grains.ExplicitlyRegistered"); " is 158.
Long Statement,UnitTests.General,GrainActivatorTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainActivatorTests.cs,CanUseCustomGrainActivatorToReleaseGrains,The length of the statement  "            ISimpleDIGrain grain2 = this.fixture.GrainFactory.GetGrain<ISimpleDIGrain>(GetRandomGrainId()' grainClassNamePrefix: "UnitTests.Grains.ExplicitlyRegistered"); " is 158.
Long Statement,UnitTests.General,GrainActivatorTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainActivatorTests.cs,CanUseCustomGrainActivatorToReleaseGrains,The length of the statement  "            ISimpleDIGrain grain3 = this.fixture.GrainFactory.GetGrain<ISimpleDIGrain>(GetRandomGrainId()' grainClassNamePrefix: "UnitTests.Grains.ExplicitlyRegistered"); " is 158.
Long Statement,UnitTests.General,HardcodedGrainActivator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainActivatorTests.cs,Create,The length of the statement  "                    return new ExplicitlyRegisteredSimpleDIGrain(new InjectedService(NullLoggerFactory.Instance)' HardcodedValue' numberOfReleasedInstances); " is 137.
Long Statement,UnitTests.General,GrainCallFilterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainCallFilterTests.cs,GrainCallFilter_Incoming_GrainLevel_Test,The length of the statement  "            Assert.Equal("eat more oats"' result);// Grain interceptors should receive the MethodInfo of the implementation' not the interface. " is 131.
Long Statement,UnitTests.General,GrainCallFilterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainCallFilterTests.cs,GrainCallFilter_Incoming_FilterThrows_Test,The length of the statement  "            var exception = await Assert.ThrowsAsync<MethodInterceptionGrain.MyDomainSpecificException>(() => grain.FilterThrows()); " is 120.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,MergeGrainResolverTests,The length of the statement  "            await MergeGrainResolverTestsImpl<ITestGrain>(typeof(RandomPlacement)' true' this.CallITestGrainMethod' typeof(TestGrain)); " is 123.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,MergeGrainResolverTests,The length of the statement  "            await MergeGrainResolverTestsImpl<ITestGrain>(typeof(PreferLocalPlacement)' true' this.CallITestGrainMethod' typeof(TestGrain)); " is 128.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,MergeGrainResolverWithClientRefreshTests,The length of the statement  "            await MergeGrainResolverTestsImpl<ITestGrain>(typeof(RandomPlacement)' false' this.CallITestGrainMethod' typeof(TestGrain)); " is 124.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,MergeGrainResolverWithClientRefreshTests,The length of the statement  "            await MergeGrainResolverTestsImpl<ITestGrain>(typeof(PreferLocalPlacement)' false' this.CallITestGrainMethod' typeof(TestGrain)); " is 129.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,StatelessWorkerPlacementTests,The length of the statement  "            await MergeGrainResolverTestsImpl<IStatelessWorkerGrain>(typeof(RandomPlacement)' true' this.CallIStatelessWorkerGrainMethod' typeof(StatelessWorkerGrain)); " is 156.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,StatelessWorkerPlacementTests,The length of the statement  "            await MergeGrainResolverTestsImpl<IStatelessWorkerGrain>(typeof(PreferLocalPlacement)' true' this.CallIStatelessWorkerGrainMethod' typeof(StatelessWorkerGrain)); " is 161.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,StatelessWorkerPlacementWithClientRefreshTests,The length of the statement  "            await MergeGrainResolverTestsImpl<IStatelessWorkerGrain>(typeof(RandomPlacement)' false' this.CallIStatelessWorkerGrainMethod' typeof(StatelessWorkerGrain)); " is 157.
Long Statement,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,StatelessWorkerPlacementWithClientRefreshTests,The length of the statement  "            await MergeGrainResolverTestsImpl<IStatelessWorkerGrain>(typeof(PreferLocalPlacement)' false' this.CallIStatelessWorkerGrainMethod' typeof(StatelessWorkerGrain)); " is 162.
Long Statement,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,GetVersionTestDirectory,The length of the statement  "                throw new InvalidOperationException($"Number of directories found for pattern: '{BuildConfiguration}' under {testDirectory.FullName}: {directories.Length}"); " is 157.
Long Statement,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,GetVersionTestDirectory,The length of the statement  "                throw new InvalidOperationException($"Number of files found for pattern: '{VersionTestBinaryName}' under {testDirectory.FullName}: {files.Length}"); " is 148.
Long Statement,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,StartSilo,The length of the statement  "                    new MemoryConfigurationSource {InitialData = new Dictionary<string' string>{ [nameof(TestClusterOptions.ApplicationBaseDirectory)] = rootDir.FullName } } " is 153.
Long Statement,UnitTests.Management,ManagementGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ManagementGrainTests.cs,RunGetStatisticsTest,The length of the statement  "            Assert.True(stats.Count(s => s.GrainType == grainType) >= initialStatisticsCount' "Activation counter now exists for grain: " + grainType); " is 139.
Long Statement,Tester.CustomPlacementTests,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,ConfigureServices,The length of the statement  "                services.AddSingletonKeyedService<Type' IPlacementDirector' TestPlacementStrategyFixedSiloDirector>(typeof(TestCustomPlacementStrategy)); " is 137.
Long Statement,Tester.CustomPlacementTests,TestSiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,Configure,The length of the statement  "                    hostBuilder.Configure<TypeManagementOptions>(options => options.TypeMapRefreshInterval = TimeSpan.FromMilliseconds(100)); " is 121.
Long Statement,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_ImmutableCollections,The length of the statement  "                var copy = (ImmutableSortedDictionary<string' Dictionary<string' string>>)this.fixture.SerializationManager.DeepCopy(dict); " is 123.
Long Statement,UnitTests.Serialization,SerializationTestsJsonTypes,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\SerializationTests.JsonTypes.cs,SerializationTests_Json_InnerTypes_TypeNameHandling,The length of the statement  "            // JsonConvert fully deserializes the object back into RootType and InnerType since we are using TypeNameHandling.All setting. " is 126.
Long Statement,UnitTests.Serialization,SerializationTestsJsonTypes,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\SerializationTests.JsonTypes.cs,SerializationTests_Json_InnerTypes_TypeNameHandling,The length of the statement  "            // Orleans's SerializationManager also deserializes everything correctly' but it serializes it into its own binary format " is 121.
Long Statement,UnitTests.Serialization,SerializationTestsJsonTypes,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\SerializationTests.JsonTypes.cs,SerializationTests_Json_InnerTypes_NoTypeNameHandling,The length of the statement  "            // and pass it through .NET binary serializer it would fail on this object since JObject is not marked as [Serializable] " is 120.
Long Statement,Tester.StorageFacet.Implementations,TableExampleStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StorageFacet\Feature.Implementations\TableExampleStorage.cs,Participate,The length of the statement  "            lifecycle.Subscribe(OptionFormattingUtilities.Name<TableExampleStorage<TState>>(this.Name)' GrainLifecycleStage.SetupState' LoadState); " is 135.
Long Statement,Tester.StorageFacet.Infrastructure,ExampleStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StorageFacet\Feature.Infrastructure\ExampleStorageExtensions.cs,UseExampleStorage,The length of the statement  "                services.AddSingleton(typeof(IAttributeToFactoryMapper<ExampleStorageAttribute>)' typeof(ExampleStorageAttributeMapper)); " is 121.
Long Statement,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamConsumerOnDroppedClientTest,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => CheckCounters(() => Task.FromResult(eventCount[0])' producer.GetNumberProduced' lastTry)' _timeout); " is 145.
Long Statement,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamConsumerOnDroppedClientTest,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => CheckCounters(() => Task.FromResult(eventCount[0])' producer.GetNumberProduced' lastTry)' _timeout); " is 145.
Long Statement,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,ProduceEventsFromClient,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => CheckCounters(() => consumer.GetNumberConsumed()' () => Task.FromResult(eventsProduced)' lastTry)' _timeout); " is 154.
Long Statement,Tester.StreamingTests,ImplicitSubscritionRecoverableStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ImplicitSubscritionRecoverableStreamTestRunner.cs,Recoverable100EventStreamsWithTransientErrors,The length of the statement  "                await TestingUtils.WaitUntilAsync(assertIsTrue => this.CheckCounters(streamNamespace' streamCount' eventsInStream' assertIsTrue)' TimeSpan.FromSeconds(30)); " is 156.
Long Statement,Tester.StreamingTests,ImplicitSubscritionRecoverableStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ImplicitSubscritionRecoverableStreamTestRunner.cs,Recoverable100EventStreamsWith1NonTransientError,The length of the statement  "                // should eventually skip the faulted event' so event count should be one (faulted event) less that number of events in stream. " is 127.
Long Statement,Tester.StreamingTests,ImplicitSubscritionRecoverableStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ImplicitSubscritionRecoverableStreamTestRunner.cs,Recoverable100EventStreamsWith1NonTransientError,The length of the statement  "                await TestingUtils.WaitUntilAsync(assertIsTrue => this.CheckCounters(streamNamespace' streamCount' eventsInStream - 1' assertIsTrue)' TimeSpan.FromSeconds(90)); " is 160.
Long Statement,Tester.StreamingTests,MemoryStreamProviderBatchedClientTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\MemoryStreamProviderBatchedClientTests.cs,BatchedMemoryStreamProducerOnDroppedClientTest,The length of the statement  "            this.fixture.Logger.Info("************************ BatchedMemoryStreamProducerOnDroppedClientTest *********************************"); " is 134.
Long Statement,Tester.StreamingTests,MemoryStreamProviderBatchedClientTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\MemoryStreamProviderBatchedClientTests.cs,BatchedMemoryStreamConsumerOnDroppedClientTest,The length of the statement  "            this.fixture.Logger.Info("************************ BatchedMemoryStreamConsumerOnDroppedClientTest *********************************"); " is 134.
Long Statement,Tester.StreamingTests,MemoryStreamProviderClientTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\MemoryStreamProviderClientTests.cs,MemoryStreamProducerOnDroppedClientTest,The length of the statement  "            this.fixture.Logger.Info("************************ MemoryStreamProducerOnDroppedClientTest *********************************"); " is 127.
Long Statement,Tester.StreamingTests,MemoryStreamProviderClientTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\MemoryStreamProviderClientTests.cs,MemoryStreamConsumerOnDroppedClientTest,The length of the statement  "            this.fixture.Logger.Info("************************ MemoryStreamConsumerOnDroppedClientTest *********************************"); " is 127.
Long Statement,Tester.StreamingTests,PluggableQueueBalancerTestBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PlugableQueueBalancerTests\PluggableQueueBalancerTestBase.cs,ShouldUseInjectedQueueBalancerAndBalanceCorrectly,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => CheckLeases(leaseManager' siloCount' expectedResponsibilityPerBalancer' lastTry)' Timeout); " is 136.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_Subscribe,The length of the statement  "            var subscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 10); " is 120.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_Subscribe,The length of the statement  "            var consumers = subscriptions.Select(sub => this.fixture.HostedCluster.GrainFactory.GetGrain<IPassive_ConsumerGrain>(sub.GrainId.PrimaryKey)).ToList(); " is 151.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_Subscribe,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 122.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_UnSubscribe,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 122.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_UnSubscribe,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProducedWhenUnSub' producer' lastTry)' _timeout); " is 131.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_UnSubscribe,The length of the statement  "            lastTry =>CheckCounters(new List<ITypedProducerGrain> { producer }' consumerNormal' lastTry' this.fixture.Logger)' _timeout); " is 125.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_GetSubscriptions,The length of the statement  "            var expectedSubscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 2); " is 127.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_ConsumerUnsubscribeOnAdd,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 122.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            var subscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 10); " is 120.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            var consumers = subscriptions.Select(sub => this.fixture.GrainFactory.GetGrain<IPassive_ConsumerGrain>(sub.GrainId.PrimaryKey)).ToList(); " is 137.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 122.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            var tasks = consumers.Select(consumer => subscriptionManager.AddSubscription<IPassive_ConsumerGrain>(streamId2' consumer.GetPrimaryKey())).ToList(); " is 148.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProduced' producer2' lastTry)' _timeout); " is 123.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            var subscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 10); " is 120.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            var consumers = subscriptions.Select(sub => this.fixture.GrainFactory.GetGrain<IPassive_ConsumerGrain>(sub.GrainId.PrimaryKey)).ToList(); " is 137.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 122.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            var tasks = consumers.Select(consumer => subscriptionManager.AddSubscription<IPassive_ConsumerGrain>(streamId2' consumer.GetPrimaryKey())).ToList(); " is 148.
Long Statement,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProducerHasProducedSinceLastCheck(numProduced' producer2' lastTry)' _timeout); " is 123.
Long Statement,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,The length of the statement  "            IStreamLifecycleProducerGrain producer = this.fixture.GrainFactory.GetGrain<IStreamLifecycleProducerGrain>(Guid.NewGuid()); " is 123.
Long Statement,Tester.StreamingTests,SystemTargetRouteTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SystemTargetRouteTests.cs,PersistentStreamingOverSingleGatewayTest,The length of the statement  "            this.fixture.Logger.Info("************************ PersistentStreamingOverSingleGatewayTest *********************************"); " is 128.
Long Statement,Tester.StreamingTests,SystemTargetRouteTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SystemTargetRouteTests.cs,PersistentStreamingOverSingleGatewayTest,The length of the statement  "            await Task.WhenAll(Enumerable.Range(0' streamCount).Select(i => producers[i].BecomeProducer(streamIds[i]' null' Fixture.StreamProviderName))); " is 142.
Long Statement,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,ValidateControllableGeneratedStreamsTest,The length of the statement  "            this.fixture.Logger.Info("************************ ValidateControllableGeneratedStreamsTest *********************************"); " is 128.
Long Statement,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,Validate2ControllableGeneratedStreamsTest,The length of the statement  "            this.fixture.Logger.Info("************************ Validate2ControllableGeneratedStreamsTest *********************************"); " is 129.
Long Statement,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,ValidateControllableGeneratedStreams,The length of the statement  "                object[] results = await mgmt.SendControlCommandToProvider(Fixture.StreamProviderTypeName' Fixture.StreamProviderName' (int)StreamGeneratorCommand.Configure' generatorConfig); " is 175.
Long Statement,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,ValidateControllableGeneratedStreams,The length of the statement  "                var reporter = this.fixture.GrainFactory.GetGrain<IGeneratedEventReporterGrain>(GeneratedStreamTestConstants.ReporterId); " is 121.
Long Statement,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,CheckCounters,The length of the statement  "            var reporter = this.fixture.GrainFactory.GetGrain<IGeneratedEventReporterGrain>(GeneratedStreamTestConstants.ReporterId); " is 121.
Long Statement,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,CheckCounters,The length of the statement  "            var report = await reporter.GetReport(GeneratedStreamTestConstants.StreamProviderName' GeneratedEventCollectorGrain.StreamNamespace); " is 133.
Long Statement,UnitTests.StreamingTests,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,Configure,The length of the statement  "                                b.Configure<HashRingStreamQueueMapperOptions>(ob => ob.Configure(options => options.TotalQueueCount = TotalQueueCount)); " is 120.
Long Statement,UnitTests.StreamingTests,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,Configure,The length of the statement  "                                b.Configure<HashRingStreamQueueMapperOptions>(ob => ob.Configure(options => options.TotalQueueCount = TotalQueueCount)); " is 120.
Long Statement,UnitTests.StreamingTests,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,Configure,The length of the statement  "                        .ConfigureServices(services => services.AddSingletonNamedService<IStreamGeneratorConfig>(StreamProviderName' (s' n) => GeneratorConfig)) " is 136.
Long Statement,UnitTests.StreamingTests,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,Configure,The length of the statement  "                                b.Configure<HashRingStreamQueueMapperOptions>(ob => ob.Configure(options => options.TotalQueueCount = TotalQueueCount)); " is 120.
Long Statement,UnitTests.StreamingTests,ControllableStreamProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamProviderTests.cs,ControllableAdapterFactoryEchoTest,The length of the statement  "            this.fixture.Logger.Info("************************ ControllableAdapterFactoryEchoTest *********************************"); " is 122.
Long Statement,UnitTests.StreamingTests,ControllableStreamProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamProviderTests.cs,ControllableAdapterEchoTestRunner,The length of the statement  "            object[] results = await mgmt.SendControlCommandToProvider(this.fixture.StreamProviderTypeName' Fixture.StreamProviderName' (int)command' echoArg); " is 147.
Long Statement,UnitTests.StreamingTests,ControllableStreamProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamProviderTests.cs,ControllableAdapterEchoTestRunner,The length of the statement  "            Tuple<ControllableTestStreamProviderCommands' object>[] echos = results.Cast<Tuple<ControllableTestStreamProviderCommands' object>>().ToArray(); " is 144.
Long Statement,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest,The length of the statement  "            StreamSubscriptionHandle<int> subscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 130.
Long Statement,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest,The length of the statement  "            await Task.Delay(TimeSpan.FromMilliseconds(130000)); // wait for the PubSubRendezvousGrain and the SampleStreaming_ProducerGrain to be deactivated " is 146.
Long Statement,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest,The length of the statement  "            await producer.BecomeProducer(streamGuid' streamNamespace' streamProviderName).WithTimeout(Timeout' "BecomeProducer is hung due to deactivation deadlock"); " is 155.
Long Statement,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest,The length of the statement  "            Assert.True(count[subscriptionHandle].Item1 == 2' "Consumer did not receive stream messages after PubSubRendezvousGrain and SampleStreaming_ProducerGrain reactivation"); " is 169.
Long Statement,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest_ClientConsumer,The length of the statement  "            await Task.Delay(TimeSpan.FromMilliseconds(130000)); // wait for the PubSubRendezvousGrain and the SampleStreaming_ProducerGrain to be deactivated " is 146.
Long Statement,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest_ClientConsumer,The length of the statement  "            await producer.BecomeProducer(streamGuid' streamNamespace' streamProviderName).WithTimeout(Timeout' "BecomeProducer is hung due to deactivation deadlock"); " is 155.
Long Statement,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest_ClientConsumer,The length of the statement  "            Assert.Equal(2' count.Value); // Client consumer grain did not receive stream messages after PubSubRendezvousGrain and SampleStreaming_ProducerGrain reactivation " is 161.
Long Statement,UnitTests.StreamingTests,GeneratedImplicitSubscriptionStreamRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\GeneratedStreamRecoveryTests.cs,Recoverable100EventStreamsWithTransientErrorsTest,The length of the statement  "            this.fixture.Logger.Info("************************ Recoverable100EventStreamsWithTransientErrorsTest *********************************"); " is 137.
Long Statement,UnitTests.StreamingTests,GeneratedImplicitSubscriptionStreamRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\GeneratedStreamRecoveryTests.cs,Recoverable100EventStreamsWith1NonTransientErrorTest,The length of the statement  "            this.fixture.Logger.Info("************************ Recoverable100EventStreamsWith1NonTransientErrorTest *********************************"); " is 140.
Long Statement,UnitTests.StreamingTests,GeneratedImplicitSubscriptionStreamRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\GeneratedStreamRecoveryTests.cs,GenerateEvents,The length of the statement  "            object[] results = await mgmt.SendControlCommandToProvider(StreamProviderTypeName' Fixture.StreamProviderName' (int)StreamGeneratorCommand.Configure' generatorConfig); " is 167.
Long Statement,UnitTests.StreamingTests,PullingAgentManagementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PullingAgentManagementTests.cs,ValidateAgentsState,The length of the statement  "            var states = await mgmt.SendControlCommandToProvider(adapterType' adapterName' (int)PersistentStreamProviderCommand.GetAgentsState); " is 132.
Long Statement,UnitTests.StreamingTests,PullingAgentManagementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PullingAgentManagementTests.cs,ValidateAgentsState,The length of the statement  "            var numAgents = await mgmt.SendControlCommandToProvider(adapterType' adapterName' (int)PersistentStreamProviderCommand.GetNumberRunningAgents); " is 143.
Long Statement,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,MultipleImplicitSubscriptionTest,The length of the statement  "            var provider = this.fixture.HostedCluster.ServiceProvider.GetServiceByName<IStreamProvider>(StreamTestsConstants.SMS_STREAM_PROVIDER_NAME); " is 139.
Long Statement,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionGrainTest,The length of the statement  "            this.logger.Info($"************************ {nameof(FilteredImplicitSubscriptionGrainTest)} *********************************"); " is 128.
Long Statement,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionGrainTest,The length of the statement  "            var provider = this.fixture.HostedCluster.ServiceProvider.GetServiceByName<IStreamProvider>(StreamTestsConstants.SMS_STREAM_PROVIDER_NAME); " is 139.
Long Statement,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The length of the statement  "            logger.Info($"************************ {nameof(FilteredImplicitSubscriptionWithExtensionGrainTest)} *********************************"); " is 136.
Long Statement,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The length of the statement  "            var provider = this.fixture.HostedCluster.ServiceProvider.GetServiceByName<IStreamProvider>(StreamTestsConstants.SMS_STREAM_PROVIDER_NAME); " is 139.
Long Statement,UnitTests.StreamingTests,SMSSubscriptionMultiplicityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SMSSubscriptionMultiplicityTests.cs,SMSResubscriptionAfterDeactivationTest,The length of the statement  "            this.fixture.Logger.Info("************************ ResubscriptionAfterDeactivationTest *********************************"); " is 123.
Long Statement,UnitTests.StreamingTests,StreamBatchingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamBatchingTestRunner.cs,BatchSendBatchConsume,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => CheckCounters(consumer' ExpectedConsumed' ItemsPerBatch' lastTry)' Timeout); " is 121.
Long Statement,UnitTests.StreamingTests,StreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamGeneratorProviderTests.cs,CheckCounters,The length of the statement  "            var reporter = this.fixture.GrainFactory.GetGrain<IGeneratedEventReporterGrain>(GeneratedStreamTestConstants.ReporterId); " is 121.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleParallelSubscriptionTest,The length of the statement  "            StreamSubscriptionHandle<int> firstSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 135.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleParallelSubscriptionTest,The length of the statement  "            StreamSubscriptionHandle<int> secondSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 136.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleLinearSubscriptionTest,The length of the statement  "            StreamSubscriptionHandle<int> firstSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 135.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleLinearSubscriptionTest,The length of the statement  "            StreamSubscriptionHandle<int> secondSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 136.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleSubscriptionTest_AddRemove,The length of the statement  "            StreamSubscriptionHandle<int> firstSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 135.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleSubscriptionTest_AddRemove,The length of the statement  "            StreamSubscriptionHandle<int> secondSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 136.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ResubscriptionTest,The length of the statement  "            StreamSubscriptionHandle<int> firstSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 135.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ResubscriptionAfterDeactivationTest,The length of the statement  "            StreamSubscriptionHandle<int> firstSubscriptionHandle = await consumer.BecomeConsumer(streamGuid' streamNamespace' streamProviderName); " is 135.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ActiveSubscriptionTest,The length of the statement  "            IList<StreamSubscriptionHandle<int>> actualSubscriptions = await consumer.GetAllSubscriptions(streamGuid' streamNamespace' streamProviderName); " is 143.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,TwoIntermitentStreamTest,The length of the statement  "            StreamSubscriptionHandle<int> handle2 = await consumer2.BecomeConsumer(streamGuid' streamNamespace2' streamProviderName); " is 121.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,CheckCounters,The length of the statement  "                     numConsumed.Values.Any(consumedCount => consumedCount.Item1 != numProduced) ||// consumed events don't match produced events for any subscription? " is 146.
Long Statement,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,CheckCounters,The length of the statement  "                    logger.Info("consumerCount != numConsumed.Count: Incorrect number of consumers. consumerCount = {0}' numConsumed.Count = {1}"' " is 126.
Long Statement,Tester.StreamingTests.PlugableQueueBalancerTests,PluggableQueueBalancerTestsWithMemoryStreamProvider,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PlugableQueueBalancerTests\PluggableQueueBalancerTestsWithMemoryStreamProvider.cs,PluggableQueueBalancerTest_ShouldUseInjectedQueueBalancerAndBalanceCorrectly,The length of the statement  "            return base.ShouldUseInjectedQueueBalancerAndBalanceCorrectly(this.fixture' StreamProviderName' siloCount' totalQueueCount); " is 124.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubscribeTestSMSStreamProvider.cs,Configure,The length of the statement  "                hostBuilder.AddSimpleMessageStreamProvider(StreamProviderName2' options => options.PubSubType = StreamPubSubType.ExplicitGrainBasedOnly) " is 136.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_Subscribe,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 154.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_Subscribe,The length of the statement  "             await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.CheckCounters(new List<ITypedProducerGrain> { producer }' " is 134.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 154.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.ProducerHasProducedSinceLastCheck(numProduced' producer2' lastTry)' _timeout); " is 155.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.CheckCounters(new List<ITypedProducerGrain> { producer' producer2 }' " is 145.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.ProducerHasProducedSinceLastCheck(numProduced' producer' lastTry)' _timeout); " is 154.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.ProducerHasProducedSinceLastCheck(numProduced' producer2' lastTry)' _timeout); " is 155.
Long Statement,Tester.StreamingTests.ProgrammaticSubscribeTests,SubscriptionObserverWithImplicitSubscribingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\SubscriptionObserverWithImplicitSubscribingTestRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The length of the statement  "            await TestingUtils.WaitUntilAsync(lastTry => ProgrammaticSubcribeTestsRunner.CheckCounters(new List<ITypedProducerGrain> { producer' producer2 }' " is 145.
Long Statement,Tester.TestStreamProviders,TestAzureTableStorageStreamFailureHandler,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\TestStreamProviders\TestAzureTableStorageStreamFailureHandler.cs,GetDeliveryFailureCount,The length of the statement  "            var dataManager = new AzureTableDataManager<TableEntity>(TableName' TestDefaultConfiguration.DataConnectionString' loggerFactory); " is 130.
Long Statement,Tester.TestStreamProviders,TestAzureTableStorageStreamFailureHandler,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\TestStreamProviders\TestAzureTableStorageStreamFailureHandler.cs,DeleteAll,The length of the statement  "            var dataManager = new AzureTableDataManager<TableEntity>(TableName' TestDefaultConfiguration.DataConnectionString' NullLoggerFactory.Instance); " is 143.
Complex Conditional,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,GetGrains,The conditional expression  "(placeOnDifferentSilos && instanceId.Equals(targetInstanceId))                  || (!placeOnDifferentSilos && !instanceId.Equals(targetInstanceId))"  is complex.
Complex Conditional,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,CheckCounters,The conditional expression  "numProduced <= 0 || // no events produced?                       consumerCount != numConsumed.Count || // subscription counts are wrong?                       numConsumed.Values.Any(consumedCount => consumedCount.Item1 != numProduced) ||// consumed events don't match produced events for any subscription?                       numConsumed.Values.Any(v => v.Item2 != 0)"  is complex.
Empty Catch Block,Tester.StreamingTests,LeaseBasedQueueBalancerForTest,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PlugableQueueBalancerTests\LeaseBasedQueueBalancer.cs,GetInitialLease,The method has an empty catch block.
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,GrainTaskCancellation,The following statement contains a magic number: var grainTask = grain.LongWait(tcs.Token' TimeSpan.FromSeconds(10));
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,MultipleGrainsTaskCancellation,The following statement contains a magic number: var grainTasks = Enumerable.Range(0' 5)                  .Select(i => this.fixture.GrainFactory.GetGrain<ILongRunningTaskGrain<bool>>(Guid.NewGuid())                              .LongWait(tcs.Token' TimeSpan.FromSeconds(10)))                              .Select(task => Assert.ThrowsAsync<TaskCanceledException>(() => task)).ToList();
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,MultipleGrainsTaskCancellation,The following statement contains a magic number: var grainTasks = Enumerable.Range(0' 5)                  .Select(i => this.fixture.GrainFactory.GetGrain<ILongRunningTaskGrain<bool>>(Guid.NewGuid())                              .LongWait(tcs.Token' TimeSpan.FromSeconds(10)))                              .Select(task => Assert.ThrowsAsync<TaskCanceledException>(() => task)).ToList();
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,PreCancelledTokenPassing,The following statement contains a magic number: var grainTask = grain.LongWait(tcs.Token' TimeSpan.FromSeconds(10));
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,CancellationTokenCallbacksExecutionContext,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(100));
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,CancellationTokenCallbacksThrow_ExceptionShouldBePropagated,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(100));
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,ClientGrainGrainTokenPassing,The following statement contains a magic number: var grainTask = grain.CallOtherLongRunningTask(target' tcs.Token' TimeSpan.FromSeconds(10));
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,GrainGrainCancellation,The following statement contains a magic number: var grainTask = grain.CallOtherLongRunningTaskWithLocalToken(target' TimeSpan.FromSeconds(10)'                  TimeSpan.FromMilliseconds(delay));
Magic Number,UnitTests.CancellationTests,GrainCancellationTokenTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\CancellationTests\GrainCancellationTokenTests.cs,GetGrains,The following statement contains a magic number: var retriesLimit = 10;
Magic Number,Tester,ClientConnectionEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionEventTests.cs,EventSendWhenDisconnectedFromCluster,The following statement contains a magic number: i < 100
Magic Number,Tester,ClientConnectionEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionEventTests.cs,EventSendWhenDisconnectedFromCluster,The following statement contains a magic number: Assert.True(await semaphore.WaitAsync(TimeSpan.FromSeconds(10)));
Magic Number,Tester,ClientConnectionEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionEventTests.cs,GatewayChangedEventSentOnDisconnectAndReconnect,The following statement contains a magic number: this.runtimeClient.GatewayCountChanged += (sender' args) =>              {                  if (args.NumberOfConnectedGateways == 1)                  {                      lostGatewaySemaphore.Release();                  }                  if (args.NumberOfConnectedGateways == 2)                  {                      regainedGatewaySemaphore.Release();                  }              };
Magic Number,Tester,ClientConnectionEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionEventTests.cs,GatewayChangedEventSentOnDisconnectAndReconnect,The following statement contains a magic number: Assert.True(await lostGatewaySemaphore.WaitAsync(TimeSpan.FromSeconds(20)));
Magic Number,Tester,ClientConnectionEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionEventTests.cs,GatewayChangedEventSentOnDisconnectAndReconnect,The following statement contains a magic number: var remainingAttempts = 90;
Magic Number,Tester,ClientConnectionRegisteredServiceEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionRegisteredServiceEventTests.cs,EventSendWhenDisconnectedFromCluster,The following statement contains a magic number: i < 100
Magic Number,Tester,ClientConnectionRegisteredServiceEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionRegisteredServiceEventTests.cs,EventSendWhenDisconnectedFromCluster,The following statement contains a magic number: Assert.True(await semaphore.WaitAsync(TimeSpan.FromSeconds(10)));
Magic Number,Tester,ClientConnectionRegisteredServiceEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionRegisteredServiceEventTests.cs,GatewayChangedEventSentOnDisconnectAndReconnect,The following statement contains a magic number: args.NumberOfConnectedGateways == 2
Magic Number,Tester,ClientConnectionRegisteredServiceEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionRegisteredServiceEventTests.cs,GatewayChangedEventSentOnDisconnectAndReconnect,The following statement contains a magic number: Assert.True(await lostGatewaySemaphore.WaitAsync(TimeSpan.FromSeconds(20)));
Magic Number,Tester,ClientConnectionRegisteredServiceEventTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\ClientConnectionRegisteredServiceEventTests.cs,GatewayChangedEventSentOnDisconnectAndReconnect,The following statement contains a magic number: var remainingAttempts = 90;
Magic Number,Tester,GatewayConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\GatewayConnectionTests.cs,NoReconnectionToGatewayNotReturnedByManager,The following statement contains a magic number: var port = gateways.First().Port + 2;
Magic Number,Tester,GatewayConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\GatewayConnectionTests.cs,NoReconnectionToGatewayNotReturnedByManager,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Tester,GatewayConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\GatewayConnectionTests.cs,NoReconnectionToGatewayNotReturnedByManager,The following statement contains a magic number: i < 100
Magic Number,Tester,ClientBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\GatewayConnectionTests.cs,Configure,The following statement contains a magic number: clientBuilder.Configure<GatewayOptions>(options =>                  {                      options.GatewayListRefreshPeriod = TimeSpan.FromMilliseconds(100);                  });
Magic Number,Tester,LifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,FullLifecycleTest,The following statement contains a magic number: const int observersPerStage = 2;
Magic Number,Tester,LifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,FailOnStartOnEachStageLifecycleTest,The following statement contains a magic number: const int observersPerStage = 2;
Magic Number,Tester,LifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,FailOnStopOnEachStageLifecycleTest,The following statement contains a magic number: const int observersPerStage = 2;
Magic Number,Tester,LifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,MultiStageObserverLifecycleTest,The following statement contains a magic number: Assert.Equal(4' multiStageObserver.Started.Count);
Magic Number,Tester,LifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Lifecycle\LifecycleTests.cs,MultiStageObserverLifecycleTest,The following statement contains a magic number: Assert.Equal(4' multiStageObserver.Stopped.Count);
Magic Number,Tester,LocalhostClusterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LocalhostSiloTests.cs,LocalhostClusterTest,The following statement contains a magic number: var silo1 = new SiloHostBuilder()                  .AddMemoryGrainStorage("MemoryStore")                  .UseLocalhostClustering(12111' 30001)                  .Build();
Magic Number,Tester,LocalhostClusterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LocalhostSiloTests.cs,LocalhostClusterTest,The following statement contains a magic number: var silo1 = new SiloHostBuilder()                  .AddMemoryGrainStorage("MemoryStore")                  .UseLocalhostClustering(12111' 30001)                  .Build();
Magic Number,Tester,LocalhostClusterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LocalhostSiloTests.cs,LocalhostClusterTest,The following statement contains a magic number: var silo2 = new SiloHostBuilder()                  .AddMemoryGrainStorage("MemoryStore")                  .UseLocalhostClustering(12112' 30002' new IPEndPoint(IPAddress.Loopback' 12111))                  .Build();
Magic Number,Tester,LocalhostClusterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LocalhostSiloTests.cs,LocalhostClusterTest,The following statement contains a magic number: var silo2 = new SiloHostBuilder()                  .AddMemoryGrainStorage("MemoryStore")                  .UseLocalhostClustering(12112' 30002' new IPEndPoint(IPAddress.Loopback' 12111))                  .Build();
Magic Number,Tester,LocalhostClusterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LocalhostSiloTests.cs,LocalhostClusterTest,The following statement contains a magic number: var silo2 = new SiloHostBuilder()                  .AddMemoryGrainStorage("MemoryStore")                  .UseLocalhostClustering(12112' 30002' new IPEndPoint(IPAddress.Loopback' 12111))                  .Build();
Magic Number,Tester,LocalhostClusterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LocalhostSiloTests.cs,LocalhostClusterTest,The following statement contains a magic number: var client = new ClientBuilder()                  .UseLocalhostClustering(new[] {30001' 30002})                  .Build();
Magic Number,Tester,LocalhostClusterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LocalhostSiloTests.cs,LocalhostClusterTest,The following statement contains a magic number: var client = new ClientBuilder()                  .UseLocalhostClustering(new[] {30001' 30002})                  .Build();
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,GenericFormatterWithListAndDictionary,The following statement contains a magic number: services.Configure<TestOptionsWithListAndDictionary>(options => {                  options.SomeDictionary.Add("Account1"' "Key1");                  options.SomeDictionary.Add("Account2"' "Key2");                  options.SomeDictionary.Add("Account3"' "Key3");                  options.SomeList.Add(10);                  options.SomeList.Add(11);              });
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,GenericFormatterWithListAndDictionary,The following statement contains a magic number: services.Configure<TestOptionsWithListAndDictionary>(options => {                  options.SomeDictionary.Add("Account1"' "Key1");                  options.SomeDictionary.Add("Account2"' "Key2");                  options.SomeDictionary.Add("Account3"' "Key3");                  options.SomeList.Add(10);                  options.SomeList.Add(11);              });
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,NamedFormatterGoldenPath,The following statement contains a magic number: Enumerable                  .Range(1' 3)                  .ToList()                  .ForEach(i =>                  {                      string name = i.ToString();                      services.Configure<TestOptions>(name' (options => options.IntField = i));                      services.ConfigureNamedOptionForLogging<TestOptions>(name);                  });
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,NamedFormatterGoldenPath,The following statement contains a magic number: Assert.Equal(3' logFormatters.Count());
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,NamedFormatterGoldenPath,The following statement contains a magic number: Assert.True(logFormatters.ElementAt(2) is TestOptionsFormatter);
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,NamedGenericFormatterGoldenPath,The following statement contains a magic number: Enumerable                  .Range(1' 3)                  .ToList()                  .ForEach(i =>                  {                      string name = i.ToString();                      services.Configure<TestOptions>(name' (options => options.IntField = i));                      services.ConfigureNamedOptionForLogging<TestOptions>(name);                  });
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,NamedGenericFormatterGoldenPath,The following statement contains a magic number: Assert.Equal(3' logFormatters.Count());
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,CustomFormatterResolverOverridesDefaultFormatter_PreRegistration,The following statement contains a magic number: Enumerable                  .Range(1' 3)                  .ToList()                  .ForEach(i =>                  {                      string name = i.ToString();                      services.Configure<TestOptions>(name' (options => options.IntField = i));                      services.ConfigureNamedOptionForLogging<TestOptions>(name);                  });
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,CustomFormatterResolverOverridesDefaultFormatter_PreRegistration,The following statement contains a magic number: Assert.Equal(3' logFormatters.Count());
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,CustomFormatterResolverOverridesDefaultFormatter_PreRegistration,The following statement contains a magic number: Assert.True(logFormatters.ElementAt(2) is TestOptionsFormatter);
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,CustomFormatterResolverOverridesDefaultFormatter_PostRegistration,The following statement contains a magic number: Enumerable                  .Range(1' 3)                  .ToList()                  .ForEach(i =>                  {                      string name = i.ToString();                      services.Configure<TestOptions>(name' (options => options.IntField = i));                      services.ConfigureNamedOptionForLogging<TestOptions>(name);                  });
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,CustomFormatterResolverOverridesDefaultFormatter_PostRegistration,The following statement contains a magic number: Assert.Equal(3' logFormatters.Count());
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,CustomFormatterResolverOverridesDefaultFormatter_PostRegistration,The following statement contains a magic number: Assert.True(logFormatters.ElementAt(2) is TestOptionsFormatter);
Magic Number,Tester,LogFomatterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\LogFomatterTests.cs,BuildNamedOptionsExpectedResult,The following statement contains a magic number: IOptionFormatter[] formatters = Enumerable                  .Range(1' 3)                  .Select(i =>  TestOptionsFormatter.CreateNamed(i.ToString()' Options.Create(new TestOptions { IntField = i })))                  .ToArray<IOptionFormatter>();
Magic Number,Tester,StorageFacetTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StorageFacet\StorageFacetTests.cs,ExampleStorageHappyPath,The following statement contains a magic number: Assert.Equal(2' names.Length);
Magic Number,Tester,StorageFacetTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StorageFacet\StorageFacetTests.cs,ExampleStorageHappyPath,The following statement contains a magic number: Assert.Equal(2' info.Length);
Magic Number,Tester,StorageFacetTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StorageFacet\StorageFacetTests.cs,ExampleStorageDefaultPath,The following statement contains a magic number: Assert.Equal(2' names.Length);
Magic Number,Tester,StorageFacetTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StorageFacet\StorageFacetTests.cs,ExampleStorageDefaultPath,The following statement contains a magic number: Assert.Equal(2' info.Length);
Magic Number,Tester.ClientConnectionTests,InvalidPreambleConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\InvalidPreambleConnectionTests.cs,ShouldCloseConnectionWhenClientSendsInvalidPreambleSize,The following statement contains a magic number: Int32 invalidSize = 99999;
Magic Number,Tester.ClientConnectionTests,InvalidPreambleConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\InvalidPreambleConnectionTests.cs,ShouldCloseConnectionWhenClientSendsInvalidPreambleSize,The following statement contains a magic number: bool socketClosed = s.Poll(100000' SelectMode.SelectRead) && s.Available == 0;
Magic Number,Tester.ClientConnectionTests,StallConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\StallConnectionTests.cs,SiloJoinAfterStallConnectionOpened,The following statement contains a magic number: Assert.True(await WaitForClusterSize(2));
Magic Number,Tester.ClientConnectionTests,StallConnectionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ClientConnectionTests\StallConnectionTests.cs,WaitForClusterSize,The following statement contains a magic number: await Task.Delay(500);
Magic Number,UnitTests.CatalogTests,DuplicateActivationsTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\DuplicateActivationsTests.cs,DuplicateActivations,The following statement contains a magic number: const int nRunnerGrains = 100;
Magic Number,UnitTests.CatalogTests,DuplicateActivationsTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\DuplicateActivationsTests.cs,DuplicateActivations,The following statement contains a magic number: const int nTargetGrain = 10;
Magic Number,UnitTests.CatalogTests,DuplicateActivationsTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\DuplicateActivationsTests.cs,DuplicateActivations,The following statement contains a magic number: const int startingKey = 1000;
Magic Number,UnitTests.CatalogTests,DuplicateActivationsTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\DuplicateActivationsTests.cs,DuplicateActivations,The following statement contains a magic number: const int nCallsToEach = 100;
Magic Number,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,TestSequence,The following statement contains a magic number: await account.Deposit(100' initialdepositguid' "initial deposit");
Magic Number,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,TestSequence,The following statement contains a magic number: Assert.Equal(100u' await account.Balance());
Magic Number,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,TestSequence,The following statement contains a magic number: var success = await account.Withdraw(70' firstwithdrawalguid' "first withdrawal");
Magic Number,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,TestSequence,The following statement contains a magic number: Assert.Equal(30u' await account.Balance());
Magic Number,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,TestSequence,The following statement contains a magic number: success = await account.Withdraw(70' secondwithdrawalguid' "second withdrawal");
Magic Number,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,TestSequence,The following statement contains a magic number: Assert.Equal(30u' await account.Balance());
Magic Number,Tester.EventSourcingTests,AccountGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\AccountGrainTests.cs,TestSequence,The following statement contains a magic number: Assert.Equal(2' log.Count());
Magic Number,Tester.EventSourcingTests,ChatGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\ChatGrainTests.cs,PostThenEdit,The following statement contains a magic number: Assert.Equal(3' container.Elements("post").Count());
Magic Number,Tester.EventSourcingTests,ChatGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\ChatGrainTests.cs,PostThenEdit,The following statement contains a magic number: Assert.Equal(3' container.Elements("post").Count());
Magic Number,Tester.EventSourcingTests,ChatGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\ChatGrainTests.cs,Truncate,The following statement contains a magic number: i < ChatFormat.MaxNumPosts + 10
Magic Number,Tester.EventSourcingTests,CountersGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\CountersGrainPerfTests.cs,Record,The following statement contains a magic number: Assert.Equal(3' await grain.GetTentativeCount("Alice"));
Magic Number,Tester.EventSourcingTests,CountersGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\CountersGrainPerfTests.cs,ConcurrentIncrements,The following statement contains a magic number: await ConcurrentIncrementsRunner(grain' 50' false);
Magic Number,Tester.EventSourcingTests,TestSiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\EventSourcingClusterFixture.cs,Configure,The following statement contains a magic number: hostBuilder                      .AddLogStorageBasedLogConsistencyProvider("LogStorage")                      .AddStateStorageBasedLogConsistencyProvider("StateStorage")                      .ConfigureLogging(builder =>                      {                          builder.AddFilter(typeof(MemoryGrainStorage).FullName' LogLevel.Debug);                          builder.AddFilter(typeof(LogConsistencyProvider).Namespace' LogLevel.Debug);                      })                      .AddMemoryGrainStorageAsDefault()                      .AddMemoryGrainStorage("MemoryStore")                      .AddFaultInjectionMemoryStorage("SlowMemoryStore"' options=>options.NumStorageGrains = 10' faultyOptions => faultyOptions.Latency = TimeSpan.FromMilliseconds(15));
Magic Number,Tester.EventSourcingTests,TestSiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\EventSourcingTests\EventSourcingClusterFixture.cs,Configure,The following statement contains a magic number: hostBuilder                      .AddLogStorageBasedLogConsistencyProvider("LogStorage")                      .AddStateStorageBasedLogConsistencyProvider("StateStorage")                      .ConfigureLogging(builder =>                      {                          builder.AddFilter(typeof(MemoryGrainStorage).FullName' LogLevel.Debug);                          builder.AddFilter(typeof(LogConsistencyProvider).Namespace' LogLevel.Debug);                      })                      .AddMemoryGrainStorageAsDefault()                      .AddMemoryGrainStorage("MemoryStore")                      .AddFaultInjectionMemoryStorage("SlowMemoryStore"' options=>options.NumStorageGrains = 10' faultyOptions => faultyOptions.Latency = TimeSpan.FromMilliseconds(15));
Magic Number,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,SynchronousAggregateExceptionThrownShouldResultInFaultedTaskWithOriginalAggregateExceptionUnmodifiedAsInnerException,The following statement contains a magic number: Assert.Equal(2' exception.InnerExceptions.Count);
Magic Number,UnitTests.General,ExceptionPropagationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ExceptionPropagation_ClientCallsGrain_Request_Deserialization_Failure,The following statement contains a magic number: var exception = await Assert.ThrowsAnyAsync<NotSupportedException>(() => exceptionGrain.SendUndeserializable(new UndeserializableType(32)));
Magic Number,UnitTests.General,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\ExceptionPropagationTests.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 3;
Magic Number,UnitTests.General,GrainActivatorTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainActivatorTests.cs,CanUseCustomGrainActivatorToReleaseGrains,The following statement contains a magic number: await Task.Delay(250);
Magic Number,UnitTests.General,GrainCallFilterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainCallFilterTests.cs,GrainCallFilter_Incoming_Stream_Test,The following statement contains a magic number: const int testValue = 43;
Magic Number,UnitTests.General,GrainCallFilterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainCallFilterTests.cs,GrainCallFilter_Incoming_Stream_Test,The following statement contains a magic number: Assert.Equal(testValue * 2' actual);
Magic Number,UnitTests.General,GrainCallFilterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainCallFilterTests.cs,GrainCallFilter_Incoming_GenericGrain_Test,The following statement contains a magic number: var result = await grain.GetInputAsString(679);
Magic Number,UnitTests.General,GrainCallFilterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GrainCallFilterTests.cs,GrainCallFilter_Incoming_ConstructedGenericInheritance_Test,The following statement contains a magic number: Assert.Equal(38' bestNumber);
Magic Number,UnitTests.General,OneWayDeactivationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\OneWayDeactivationTests.cs,OneWay_Deactivation_CacheInvalidated,The following statement contains a magic number: var remainingAttempts = 50;
Magic Number,UnitTests.General,OneWayDeactivationTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\OneWayDeactivationTests.cs,OneWay_Deactivation_CacheInvalidated,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(100));
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_ForwardPendingRequest,The following statement contains a magic number: tasks.Add(grain.GetRuntimeInstanceIdWithDelay(TimeSpan.FromMilliseconds(50)));
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_ForwardPendingRequest,The following statement contains a magic number: i < 100
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_ForwardPendingRequest,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_ForwardPendingRequest,The following statement contains a magic number: Assert.Equal(results[99]' HostedCluster.Primary.SiloAddress.ToLongString());
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_PendingRequestTimers,The following statement contains a magic number: var promise = grain.StartAndWaitTimerTick(TimeSpan.FromSeconds(10));
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_PendingRequestTimers,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_StuckActivation,The following statement contains a magic number: var promise = grain.StartAndWaitTimerTick(TimeSpan.FromMinutes(2));
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_StuckActivation,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Tester.Forwarding,ShutdownSiloTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Forwarding\ShutdownSiloTests.cs,SiloGracefulShutdown_StuckActivation,The following statement contains a magic number: var cts = new CancellationTokenSource(TimeSpan.FromSeconds(30));
Magic Number,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,MultiClusterData_Configuration,The following statement contains a magic number: var ts1 = new DateTime(year: 2011' month: 1' day: 1' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,MultiClusterData_Configuration,The following statement contains a magic number: var ts2 = new DateTime(year: 2012' month: 2' day: 2' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,MultiClusterData_Configuration,The following statement contains a magic number: var ts2 = new DateTime(year: 2012' month: 2' day: 2' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,MultiClusterData_Configuration,The following statement contains a magic number: var ts2 = new DateTime(year: 2012' month: 2' day: 2' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,MultiClusterData_Gateways,The following statement contains a magic number: var ts3 = ts1 + new TimeSpan(hours: 0' minutes: 0' seconds: 2);
Magic Number,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,MultiClusterData_Gateways,The following statement contains a magic number: IPEndPoint ep1 = new IPEndPoint(ip' 21111);
Magic Number,Tester.GeoClusterTests,MultiClusterDataTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\GeoClusterTests\MultiClusterDataTests.cs,MultiClusterData_Gateways,The following statement contains a magic number: IPEndPoint ep2 = new IPEndPoint(ip' 21112);
Magic Number,Tester.HeterogeneousSilosTests,HeterogeneousTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\HeterogeneousTests.cs,MergeGrainResolverTestsImpl,The following statement contains a magic number: i < 5
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeCompatibilityStrategy,The following statement contains a magic number: Assert.Equal(2' await grainV2.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeCompatibilityStrategy,The following statement contains a magic number: Assert.Equal(2' await grainV1.ProxyGetVersion(grainV2));
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeCompatibilityStrategy,The following statement contains a magic number: Assert.Equal(2' await grainV2.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeCompatibilityStrategy,The following statement contains a magic number: i < 102
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeCompatibilityStrategy,The following statement contains a magic number: Assert.Equal(2' await grain.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeCompatibilityStrategy,The following statement contains a magic number: i < 202
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeVersionSelectorStrategy,The following statement contains a magic number: Assert.Equal(2' await grain.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeVersionSelectorStrategy,The following statement contains a magic number: i < 101
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeVersionSelectorStrategy,The following statement contains a magic number: Assert.Equal(2' await grain.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeVersionSelectorStrategy,The following statement contains a magic number: i < 101
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeVersionSelectorStrategy,The following statement contains a magic number: i < 201
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionCompatibilityStrategy,The following statement contains a magic number: var grainV1 = new IVersionUpgradeTestGrain[2];
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionCompatibilityStrategy,The following statement contains a magic number: var grainV2 = Client.GetGrain<IVersionUpgradeTestGrain>(2);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionCompatibilityStrategy,The following statement contains a magic number: Assert.Equal(2' await grainV2.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionCompatibilityStrategy,The following statement contains a magic number: Assert.Equal(2' await grainV2.ProxyGetVersion(grainV1[0]));
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionCompatibilityStrategy,The following statement contains a magic number: Assert.Equal(2' await grainV1[0].GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionSelectorStrategy,The following statement contains a magic number: i < 100
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionSelectorStrategy,The following statement contains a magic number: i < 100
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionSelectorStrategy,The following statement contains a magic number: Assert.Equal(2' await grain.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RuntimeStrategyChangeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\RuntimeStrategyChangeTests.cs,ChangeDefaultVersionSelectorStrategy,The following statement contains a magic number: i < 200
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,LatestVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,AlwaysCreateActivationWithLatestVersion,The following statement contains a magic number: return Step1_StartV1Silo_Step2_StartV2Silo_Step3_StopV2Silo(step2Version: 2);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,LatestVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,UpgradeProxyCallNoPendingRequest,The following statement contains a magic number: return ProxyCallNoPendingRequest(expectedVersion: 2);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,LatestVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,UpgradeProxyCallWithPendingRequest,The following statement contains a magic number: return ProxyCallWithPendingRequest(expectedVersion: 2);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RandomCompatibleVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,CreateActivationWithBothVersion,The following statement contains a magic number: const float numberOfGrains = 300;
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RandomCompatibleVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,CreateActivationWithBothVersion,The following statement contains a magic number: var versionCounter = new int[2];
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RandomCompatibleVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,CreateActivationWithBothVersion,The following statement contains a magic number: Assert.InRange(versionCounter[0]/numberOfGrains' 0.35' 0.65);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RandomCompatibleVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,CreateActivationWithBothVersion,The following statement contains a magic number: Assert.InRange(versionCounter[0]/numberOfGrains' 0.35' 0.65);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RandomCompatibleVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,CreateActivationWithBothVersion,The following statement contains a magic number: Assert.InRange(versionCounter[1]/numberOfGrains' 0.35' 0.65);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,RandomCompatibleVersionTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTests.cs,CreateActivationWithBothVersion,The following statement contains a magic number: Assert.InRange(versionCounter[1]/numberOfGrains' 0.35' 0.65);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,Step1_StartV1Silo_Step2_StartV2Silo_Step3_StopV2Silo,The following statement contains a magic number: const int numberOfGrains = 100;
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,Step1_StartV1Silo_Step2_StartV2Silo_Step3_StopV2Silo,The following statement contains a magic number: i < numberOfGrains * 2
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,Step1_StartV1Silo_Step2_StartV2Silo_Step3_StopV2Silo,The following statement contains a magic number: i < numberOfGrains * 3
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,ProxyCallNoPendingRequest,The following statement contains a magic number: Assert.Equal(2' await grain1.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,ProxyCallWithPendingRequest,The following statement contains a magic number: Assert.Equal(2' await grain1.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,ProxyCallWithPendingRequest,The following statement contains a magic number: var waitingTask = grain0.LongRunningTask(TimeSpan.FromSeconds(5));
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,UpgradeTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\UpgradeTestsBase.cs,ProxyCallWithPendingRequest,The following statement contains a magic number: await Task.Delay(100);
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,VersionPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\VersionPlacementTests.cs,ActivateDominantVersion,The following statement contains a magic number: i < 101
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,VersionPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\VersionPlacementTests.cs,ActivateDominantVersion,The following statement contains a magic number: Assert.Equal(2' await grain2.GetVersion());
Magic Number,Tester.HeterogeneousSilosTests.UpgradeTests,VersionPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HeterogeneousSilosTests\UpgradeTests\VersionPlacementTests.cs,ActivateDominantVersion,The following statement contains a magic number: i < 201
Magic Number,Tester.HostBuilder,HostBuilderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HostBuilder\HostBuilderTests.cs,MultipleConfigureLoggingInvokedInOrder,The following statement contains a magic number: Assert.Equal(2' callCount);
Magic Number,Tester.HostBuilder,HostBuilderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\HostBuilder\HostBuilderTests.cs,ConfigureServices_CanBeCalledMultipleTimes,The following statement contains a magic number: Assert.Equal(2' callCount);
Magic Number,UnitTests.MembershipTests,LivenessTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\LivenessTests.cs,Do_Liveness_OracleTest_1,The following statement contains a magic number: Assert.Equal(3' statuses.Count);
Magic Number,UnitTests.MembershipTests,LivenessTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\LivenessTests.cs,Do_Liveness_OracleTest_2,The following statement contains a magic number: i < 2 * numGrains
Magic Number,UnitTests.MembershipTests,LivenessTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\LivenessTests.cs,TestTraffic,The following statement contains a magic number: await SendTraffic(random.Next(10000));
Magic Number,UnitTests.MembershipTests,LivenessTests_MembershipGrain,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\LivenessTests.cs,Liveness_Grain_3_Restart_Silo_1,The following statement contains a magic number: await Do_Liveness_OracleTest_2(2);
Magic Number,UnitTests.MembershipTests,LivenessTests_MembershipGrain,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\LivenessTests.cs,Liveness_Grain_4_Kill_Silo_1_With_Timers,The following statement contains a magic number: await Do_Liveness_OracleTest_2(2' false' true);
Magic Number,UnitTests.MembershipTests,SilosStopTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\SilosStopTests.cs,SiloUngracefulShutdown_OutstandingRequestsBreak,The following statement contains a magic number: var promise = grain.CallOtherLongRunningTask(target' true' TimeSpan.FromSeconds(7));
Magic Number,UnitTests.MembershipTests,SilosStopTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\SilosStopTests.cs,SiloUngracefulShutdown_OutstandingRequestsBreak,The following statement contains a magic number: await Task.Delay(500);
Magic Number,UnitTests.MembershipTests,SilosStopTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\SilosStopTests.cs,GetGrainOnTargetSilo,The following statement contains a magic number: const int maxRetry = 10;
Magic Number,UnitTests.MembershipTests,SilosStopTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\SilosStopTests.cs,GetGrainOnTargetSilo,The following statement contains a magic number: await Task.Delay(100);
Magic Number,UnitTests.MembershipTests,BuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\MembershipTests\SilosStopTests.cs,Configure,The following statement contains a magic number: hostBuilder                      .Configure<ClusterMembershipOptions>(options =>                      {                          options.NumMissedProbesLimit = 1;                          options.NumVotesForDeathDeclaration = 1;                          options.TableRefreshTimeout = TimeSpan.FromSeconds(2);                      })                      .Configure<SiloMessagingOptions>(options => options.AssumeHomogenousSilosForTesting = true);
Magic Number,Tester.CustomPlacementTests,CustomPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,CustomPlacement_FixedSilo,The following statement contains a magic number: const int nGrains = 100;
Magic Number,Tester.CustomPlacementTests,CustomPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,CustomPlacement_FixedSilo,The following statement contains a magic number: Assert.Equal(silos[silos.Length-2]' silo);
Magic Number,Tester.CustomPlacementTests,CustomPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,CustomPlacement_ExcludeOne,The following statement contains a magic number: const int nGrains = 100;
Magic Number,Tester.CustomPlacementTests,CustomPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,CustomPlacement_RequestContextBased,The following statement contains a magic number: const int nGrains = 100;
Magic Number,Tester.CustomPlacementTests,CustomPlacementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,HashBasedPlacement,The following statement contains a magic number: const int nGrains = 100;
Magic Number,Tester.CustomPlacementTests,TestSiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\Placement\CustomPlacementTests.cs,Configure,The following statement contains a magic number: hostBuilder.Configure<TypeManagementOptions>(options => options.TypeMapRefreshInterval = TimeSpan.FromMilliseconds(100));
Magic Number,Tester.SerializationTests,ConsiderForCodeGenerationAttributeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\ConsiderForCodeGenerationAttributeTests.cs,GenerateSerializerForNonSerializableTypeTest,The following statement contains a magic number: var typeDerivedFromTypeUsedInGrainInterface = new SomeTypeDerivedFromTypeUsedInGrainInterface { Foo = 1' Bar = 2 };
Magic Number,Tester.SerializationTests,NonStaticSerializerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\NonStaticSerializerTests.cs,ConstructorIsCalled,The following statement contains a magic number: var input = new SimplePocoClass { A = 30 };
Magic Number,Tester.SerializationTests,NonStaticSerializerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\NonStaticSerializerTests.cs,ConstructorIsCalled,The following statement contains a magic number: Assert.Equal(2' SimplePocoClassSerializer.CallCounter);
Magic Number,Tester.SerializationTests,NonStaticSerializerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\NonStaticSerializerTests.cs,StaticMethodStillRegistered,The following statement contains a magic number: var input = new SimplePocoClass { A = 30 };
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: var original = new int[] { 0' 1' 2 };
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: copy[2] = 0;
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: Assert.Equal(2' original[2]);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: Assert.Equal(2' original[2]);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: var original = new int[] { 0' 1' 2 }.ToList();
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: copy[2] = 0;
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: Assert.Equal(2' original[2]);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: Assert.Equal(2' original[2]);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: var original = new int[][] { new int[] { 0' 1 }' new int[] { 2' 3 } };
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: var original = new int[][] { new int[] { 0' 1 }' new int[] { 2' 3 } };
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: Assert.Equal(2' original[1][0]);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: var original = new Dictionary<int' int>                  {                      [0] = 1'                      [1] = 2                  };
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_BuiltinCollections,The following statement contains a magic number: Assert.Equal(2' original[1]);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_UserDefinedType,The following statement contains a magic number: original.SetNumber("b"' 2);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_UserDefinedType,The following statement contains a magic number: original.SetBit(19);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_UserDefinedType,The following statement contains a magic number: Assert.Equal(2' copy.GetNumber("b"));
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_UserDefinedType,The following statement contains a magic number: Assert.True(copy.GetBit(19));
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_UserDefinedType,The following statement contains a magic number: copy.SetBit(19' false);
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_UserDefinedType,The following statement contains a magic number: Assert.Equal(2' original.GetNumber("b"));
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_UserDefinedType,The following statement contains a magic number: Assert.True(original.GetBit(19));
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_FSharp_Collections,The following statement contains a magic number: var original = ListModule.OfSeq(new List<int> { 0' 1' 2 });
Magic Number,UnitTests.Serialization,DeepCopyTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\DeepCopyTests.cs,DeepCopyTests_FSharp_Collections,The following statement contains a magic number: var elements = new List<int>() { 0' 1' 2 };
Magic Number,UnitTests.Serialization,SerializationTestsFSharpTypes,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\SerializationTests.FSharpTypes.cs,SerializationTests_FSharp_IntOption_Some,The following statement contains a magic number: RoundtripSerializationTest(FSharpOption<int>.Some(10));
Magic Number,UnitTests.Serialization,SerializationTestsFSharpTypes,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\SerializationTests\SerializationTests.FSharpTypes.cs,SerializationTests_FSharp_Collections,The following statement contains a magic number: var elements = new List<int>() { 0' 1' 2 };
Magic Number,DefaultCluster.Tests,StartupTaskTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StartupTaskTests.cs,StartupTaskCanCallGrains,The following statement contains a magic number: Assert.Equal(888' value);
Magic Number,DefaultCluster.Tests,StartupTaskTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StartupTaskTests.cs,StartupTaskCanCallGrains,The following statement contains a magic number: grain = this.fixture.GrainFactory.GetGrain<ISimpleGrain>(2);
Magic Number,DefaultCluster.Tests,StartupTaskTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StartupTaskTests.cs,StartupTaskCanCallGrains,The following statement contains a magic number: Assert.Equal(777' value);
Magic Number,DefaultCluster.Tests,StartupTaskSiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StartupTaskTests.cs,Configure,The following statement contains a magic number: hostBuilder.AddStartupTask(                          async (services' cancellation) =>                          {                              var grainFactory = services.GetRequiredService<IGrainFactory>();                              var grain = grainFactory.GetGrain<ISimpleGrain>(1);                              await grain.SetA(888);                          });
Magic Number,DefaultCluster.Tests,CallGrainStartupTask,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StartupTaskTests.cs,Execute,The following statement contains a magic number: var grain = this.grainFactory.GetGrain<ISimpleGrain>(2);
Magic Number,DefaultCluster.Tests,CallGrainStartupTask,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StartupTaskTests.cs,Execute,The following statement contains a magic number: await grain.SetA(777);
Magic Number,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamProducerOnDroppedClientTest,The following statement contains a magic number: const int eventsProduced = 10;
Magic Number,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamProducerOnDroppedClientTest,The following statement contains a magic number: await Task.Delay(Constants.DEFAULT_CLIENT_DROP_TIMEOUT + TimeSpan.FromSeconds(5));
Magic Number,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamConsumerOnDroppedClientTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamConsumerOnDroppedClientTest,The following statement contains a magic number: await Task.Delay(Constants.DEFAULT_CLIENT_DROP_TIMEOUT + TimeSpan.FromSeconds(5));
Magic Number,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamConsumerOnDroppedClientTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,Tester.StreamingTests,ClientStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ClientStreamTestRunner.cs,StreamConsumerOnDroppedClientTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(90));
Magic Number,Tester.StreamingTests,ImplicitSubscritionRecoverableStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ImplicitSubscritionRecoverableStreamTestRunner.cs,Recoverable100EventStreamsWithTransientErrors,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(assertIsTrue => this.CheckCounters(streamNamespace' streamCount' eventsInStream' assertIsTrue)' TimeSpan.FromSeconds(30));
Magic Number,Tester.StreamingTests,ImplicitSubscritionRecoverableStreamTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ImplicitSubscritionRecoverableStreamTestRunner.cs,Recoverable100EventStreamsWith1NonTransientError,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(assertIsTrue => this.CheckCounters(streamNamespace' streamCount' eventsInStream - 1' assertIsTrue)' TimeSpan.FromSeconds(90));
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_Subscribe,The following statement contains a magic number: var subscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 10);
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_UnSubscribe,The following statement contains a magic number: var subscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 2);
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_UnSubscribe,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(2000));
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_GetSubscriptions,The following statement contains a magic number: var expectedSubscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 2);
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_ConsumerUnsubscribeOnAdd,The following statement contains a magic number: await subscriptionManager.SetupStreamingSubscriptionForStream<IJerk_ConsumerGrain>(streamId' 10);
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_ConsumerUnsubscribeOnAdd,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToTwoStream_MessageWithPolymorphism,The following statement contains a magic number: var subscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 10);
Magic Number,Tester.StreamingTests,ProgrammaticSubcribeTestsRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ProgrammaticSubscribeTests\ProgrammaticSubcribeTestsRunner.cs,StreamingTests_Consumer_Producer_SubscribeToStreamsHandledByDifferentStreamProvider,The following statement contains a magic number: var subscriptions = await subscriptionManager.SetupStreamingSubscriptionForStream<IPassive_ConsumerGrain>(streamId' 10);
Magic Number,Tester.StreamingTests,SiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SMSClientStreamTests.cs,Configure,The following statement contains a magic number: hostBuilder.AddSimpleMessageStreamProvider(SMSStreamProviderName)                       .AddMemoryGrainStorage("PubSubStore")                       .Configure<SiloMessagingOptions>(options => options.ClientDropTimeout = TimeSpan.FromSeconds(5));
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,The following statement contains a magic number: const int numConsumers = 10;
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,The following statement contains a magic number: bool isEven = allCheckEven || loopCount % 2 == 0;
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,The following statement contains a magic number: bool roundIsEven = round % 2 == 0;
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(async tryLast => await producer.GetSendCount() >= 2' timeout);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,The following statement contains a magic number: bool indexIsEven = i % 2 == 0;
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_EvenOdd,The following statement contains a magic number: round <= 10
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Different,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(async tryLast => await producer.GetSendCount() >= 2' timeout);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Different,The following statement contains a magic number: await producer.SendItem(2);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Different,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(async tryLast => await producer.GetSendCount() >= 3' timeout);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Different,The following statement contains a magic number: await producer.SendItem(3);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Different,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(async tryLast => await producer.GetSendCount() >= 4' timeout);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Same,The following statement contains a magic number: int expectedCount = 2;
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Same,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(async tryLast => await producer.GetSendCount() >= 2' timeout);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Same,The following statement contains a magic number: await producer.SendItem(2);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Same,The following statement contains a magic number: expectedCount += 2;
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Same,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(async tryLast => await producer.GetSendCount() >= 3' timeout);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Same,The following statement contains a magic number: await producer.SendItem(3);
Magic Number,Tester.StreamingTests,StreamFilteringTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamFilteringTestsBase.cs,Test_Filter_TwoObsv_Same,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(async tryLast => await producer.GetSendCount() >= 4' timeout);
Magic Number,Tester.StreamingTests,SystemTargetRouteTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SystemTargetRouteTests.cs,PersistentStreamingOverSingleGatewayTest,The following statement contains a magic number: const int streamCount = 100;
Magic Number,Tester.StreamingTests,SystemTargetRouteTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SystemTargetRouteTests.cs,PersistentStreamingOverSingleGatewayTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,ValidateControllableGeneratedStreams,The following statement contains a magic number: var generatorConfig = new SimpleGeneratorOptions                  {                      StreamNamespace = Fixture.StreamNamespace'                      EventsInStream = 100                  };
Magic Number,UnitTests.StreamingTests,ControllableStreamGeneratorProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,ValidateControllableGeneratedStreams,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,UnitTests.StreamingTests,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,Configure,The following statement contains a magic number: hostBuilder                      .AddAzureQueueStreams(StreamTestsConstants.AZURE_QUEUE_STREAM_PROVIDER_NAME' b=>                          b.ConfigureAzureQueue(ob => ob.Configure<IOptions<ClusterOptions>>((options' dep) =>                             {                                 options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                                 options.QueueNames = Enumerable.Range(0' 8).Select(num => $"{dep.Value.ClusterId}-{num}").ToList();                             })));
Magic Number,UnitTests.StreamingTests,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamGeneratorProviderTests.cs,Configure,The following statement contains a magic number: hostBuilder                          .ConfigureServices(services => services.AddSingletonNamedService<IStreamGeneratorConfig>(StreamProviderName' (s' n) => GeneratorConfig))                          .AddPersistentStreams(                              StreamProviderName'                              GeneratorAdapterFactory.Create'                              b =>                              {                                  b.ConfigurePullingAgent(ob => ob.Configure(options => { options.BatchContainerBatchSize = 10; }));                                  b.Configure<HashRingStreamQueueMapperOptions>(ob => ob.Configure(options => options.TotalQueueCount = TotalQueueCount));                                  b.UseDynamicClusterConfigDeploymentBalancer();                                  b.ConfigureStreamPubSub(StreamPubSubType.ImplicitOnly);                              });
Magic Number,UnitTests.StreamingTests,ControllableStreamProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\ControllableStreamProviderTests.cs,ControllableAdapterEchoTestRunner,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(130000));
Magic Number,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest,The following statement contains a magic number: Assert.True(count[subscriptionHandle].Item1 == 2' "Consumer did not receive stream messages after PubSubRendezvousGrain and SampleStreaming_ProducerGrain reactivation");
Magic Number,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest_ClientConsumer,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(130000));
Magic Number,UnitTests.StreamingTests,DeactivationTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\DeactivationTestRunner.cs,DeactivationTest_ClientConsumer,The following statement contains a magic number: Assert.Equal(2' count.Value);
Magic Number,UnitTests.StreamingTests,GeneratedImplicitSubscriptionStreamRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\GeneratedStreamRecoveryTests.cs,Recoverable100EventStreamsWithTransientErrorsTest,The following statement contains a magic number: await runner.Recoverable100EventStreamsWithTransientErrors(GenerateEvents'                  ImplicitSubscription_TransientError_RecoverableStream_CollectorGrain.StreamNamespace'                  TotalQueueCount'                  100);
Magic Number,UnitTests.StreamingTests,GeneratedImplicitSubscriptionStreamRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\GeneratedStreamRecoveryTests.cs,Recoverable100EventStreamsWith1NonTransientErrorTest,The following statement contains a magic number: await runner.Recoverable100EventStreamsWith1NonTransientError(GenerateEvents'                  ImplicitSubscription_NonTransientError_RecoverableStream_CollectorGrain.StreamNamespace'                  TotalQueueCount'                  100);
Magic Number,UnitTests.StreamingTests,GeneratedImplicitSubscriptionStreamRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\GeneratedStreamRecoveryTests.cs,GenerateEvents,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,UnitTests.StreamingTests,PullingAgentManagementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PullingAgentManagementTests.cs,ValidateAgentsState,The following statement contains a magic number: Assert.Equal(2' states.Length);
Magic Number,UnitTests.StreamingTests,PullingAgentManagementTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\PullingAgentManagementTests.cs,ValidateAgentsState,The following statement contains a magic number: Assert.Equal(2' numAgents.Length);
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,MultipleImplicitSubscriptionTest,The following statement contains a magic number: const int nRedEvents = 5' nBlueEvents = 3;
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,MultipleImplicitSubscriptionTest,The following statement contains a magic number: const int nRedEvents = 5' nBlueEvents = 3;
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionGrainTest,The following statement contains a magic number: var events = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionGrainTest,The following statement contains a magic number: var events = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionGrainTest,The following statement contains a magic number: var events = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionGrainTest,The following statement contains a magic number: var events = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The following statement contains a magic number: var redEvents = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The following statement contains a magic number: var redEvents = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The following statement contains a magic number: var redEvents = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The following statement contains a magic number: var redEvents = new[] { 3' 5' 2' 4 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The following statement contains a magic number: var blueEvents = new[] { 7' 3' 6 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The following statement contains a magic number: var blueEvents = new[] { 7' 3' 6 };
Magic Number,UnitTests.StreamingTests,SampleSmsStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,FilteredImplicitSubscriptionWithExtensionGrainTest,The following statement contains a magic number: var blueEvents = new[] { 7' 3' 6 };
Magic Number,UnitTests.StreamingTests,SiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,Configure,The following statement contains a magic number: hostBuilder.AddSimpleMessageStreamProvider(StreamTestsConstants.SMS_STREAM_PROVIDER_NAME)                       .AddMemoryGrainStorage("PubSubStore")                       .Configure<GrainCollectionOptions>(op =>                      {                          op.CollectionAge = CollectionAge;                          op.ClassSpecificCollectionAge.Add(typeof(MultipleSubscriptionConsumerGrain).FullName' TimeSpan.FromHours(2));                      })                      .Configure<SiloMessagingOptions>(op=>op.ResponseTimeout = TimeSpan.FromMinutes(30));
Magic Number,UnitTests.StreamingTests,SiloConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,Configure,The following statement contains a magic number: hostBuilder.AddSimpleMessageStreamProvider(StreamTestsConstants.SMS_STREAM_PROVIDER_NAME)                       .AddMemoryGrainStorage("PubSubStore")                       .Configure<GrainCollectionOptions>(op =>                      {                          op.CollectionAge = CollectionAge;                          op.ClassSpecificCollectionAge.Add(typeof(MultipleSubscriptionConsumerGrain).FullName' TimeSpan.FromHours(2));                      })                      .Configure<SiloMessagingOptions>(op=>op.ResponseTimeout = TimeSpan.FromMinutes(30));
Magic Number,UnitTests.StreamingTests,SampleStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,StreamingTests_Consumer_Producer,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SampleStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,StreamingTests_Producer_Consumer,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SampleStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SampleStreamingTests.cs,StreamingTests_Producer_InlineConsumer,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,StreamBatchingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamBatchingTestRunner.cs,SingleSendBatchConsume,The following statement contains a magic number: const int ExpectedConsumed = 30;
Magic Number,UnitTests.StreamingTests,StreamBatchingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamBatchingTestRunner.cs,SingleSendBatchConsume,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => CheckCounters(consumer' ExpectedConsumed' 2' lastTry)' Timeout);
Magic Number,UnitTests.StreamingTests,StreamBatchingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamBatchingTestRunner.cs,BatchSendSingleConsume,The following statement contains a magic number: const int BatchesSent = 3;
Magic Number,UnitTests.StreamingTests,StreamBatchingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamBatchingTestRunner.cs,BatchSendSingleConsume,The following statement contains a magic number: const int ItemsPerBatch = 10;
Magic Number,UnitTests.StreamingTests,StreamBatchingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamBatchingTestRunner.cs,BatchSendBatchConsume,The following statement contains a magic number: const int BatchesSent = 3;
Magic Number,UnitTests.StreamingTests,StreamBatchingTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\StreamBatchingTestRunner.cs,BatchSendBatchConsume,The following statement contains a magic number: const int ItemsPerBatch = 10;
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleParallelSubscriptionTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleParallelSubscriptionTest,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => CheckCounters(producer' consumer' 2' lastTry)' Timeout);
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleLinearSubscriptionTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleLinearSubscriptionTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleSubscriptionTest_AddRemove,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleSubscriptionTest_AddRemove,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleSubscriptionTest_AddRemove,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => CheckCounters(producer' consumer' 2' lastTry)' Timeout);
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,MultipleSubscriptionTest_AddRemove,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ResubscriptionTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ResubscriptionTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ResubscriptionAfterDeactivationTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ResubscriptionAfterDeactivationTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(100));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ResubscriptionAfterDeactivationTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,ActiveSubscriptionTest,The following statement contains a magic number: const int subscriptionCount = 10;
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,TwoIntermitentStreamTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,TwoIntermitentStreamTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,TwoIntermitentStreamTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Magic Number,UnitTests.StreamingTests,SubscriptionMultiplicityTestRunner,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\StreamingTests\SubscriptionMultiplicityTestRunner.cs,SubscribeFromClientTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(1000));
Missing Default,Tester.TestStreamProviders.Controllable,ControllableTestAdapterFactory,D:\research\architectureSmells\repos\dotnet_orleans\test\Tester\TestStreamProviders\Controllable\ControllableTestStreamProvider.cs,ExecuteCommand,The following switch statement is missing a default case: switch ((ControllableTestStreamProviderCommands) command)              {                  case ControllableTestStreamProviderCommands.AdapterEcho:                      return Task.FromResult<object>(Tuple.Create(ControllableTestStreamProviderCommands.AdapterEcho' arg));                  case ControllableTestStreamProviderCommands.AdapterFactoryEcho:                      return Task.FromResult<object>(Tuple.Create(ControllableTestStreamProviderCommands.AdapterFactoryEcho' arg));              }
