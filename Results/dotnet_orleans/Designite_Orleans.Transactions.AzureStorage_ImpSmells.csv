Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Store,Cyclomatic complexity of the method is 19
Long Parameter List,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Store,The method has 5 parameters. Parameters: expectedETag' metadata' statesToPrepare' commitUpTo' abortAfter
Long Parameter List,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorageFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorageFactory.cs,AzureTableTransactionalStateStorageFactory,The method has 6 parameters. Parameters: name' options' clusterOptions' typeResolver' grainFactory' loggerFactory
Long Identifier,Orleans.Transactions.AzureStorage,StateEntity,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\StateEntity.cs,,The length of the parameter STRING_DATA_PROPERTY_NAME_PREFIX is 32.
Long Identifier,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadTableEntriesAndEtagsAsync,The length of the parameter executeQueryHandleContinuations is 31.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorageAsDefault,The length of the statement  "            return builder.AddAzureTableTransactionalStateStorage(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME' configureOptions); " is 121.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorage,The length of the statement  "            return builder.ConfigureServices(services => services.AddAzureTableTransactionalStateStorage(name' ob => ob.Configure(configureOptions))); " is 138.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorageAsDefault,The length of the statement  "            return builder.AddAzureTableTransactionalStateStorage(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME' configureOptions); " is 121.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorageAsDefault,The length of the statement  "            return builder.AddAzureTableTransactionalStateStorage(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME' configureOptions); " is 121.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorage,The length of the statement  "            return builder.ConfigureServices(services => services.AddAzureTableTransactionalStateStorage(name' ob => ob.Configure(configureOptions))); " is 138.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorageAsDefault,The length of the statement  "            return builder.AddAzureTableTransactionalStateStorage(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME' configureOptions); " is 121.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorage,The length of the statement  "            services.TryAddSingleton<ITransactionalStateStorageFactory>(sp => sp.GetServiceByName<ITransactionalStateStorageFactory>(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME)); " is 171.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorage,The length of the statement  "            services.AddSingletonNamedService<ITransactionalStateStorageFactory>(name' AzureTableTransactionalStateStorageFactory.Create); " is 126.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\Hosting\AzureTableTransactionsSiloBuilderExtensions.cs,AddAzureTableTransactionalStateStorage,The length of the statement  "            services.AddSingletonNamedService<ILifecycleParticipant<ISiloLifecycle>>(name' (s' n) => (ILifecycleParticipant<ISiloLifecycle>)s.GetRequiredServiceByName<ITransactionalStateStorageFactory>(n)); " is 194.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Load,The length of the statement  "                        logger.LogDebug($"{partition} Loaded v{this.key.CommittedSequenceId} rows={string.Join("'"' states.Select(s => s.Key.ToString("x16")))}"); " is 138.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Load,The length of the statement  "                    TransactionalStateMetaData metadata = JsonConvert.DeserializeObject<TransactionalStateMetaData>(this.key.Metadata' this.jsonSettings); " is 134.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Load,The length of the statement  "                    return new TransactionalStorageLoadResponse<TState>(this.key.ETag' committedState' this.key.CommittedSequenceId' metadata' PrepareRecordsToRecover); " is 148.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Store,The length of the statement  "                    logger.LogTrace($"{partition}.{KeyEntity.RK} Insert. v{this.key.CommittedSequenceId}' {metadata.CommitRecords.Count}c"); " is 120.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,Store,The length of the statement  "                    logger.LogTrace($"{partition}.{KeyEntity.RK} Update. v{this.key.CommittedSequenceId}' {metadata.CommitRecords.Count}c"); " is 120.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,ReadStates,The length of the statement  "                TableQuerySegment<StateEntity> queryResult = await table.ExecuteQuerySegmentedAsync(query' continuationToken).ConfigureAwait(false); " is 132.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorageFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorageFactory.cs,Create,The length of the statement  "            return ActivatorUtilities.CreateInstance<AzureTableTransactionalStateStorageFactory>(services' name' optionsMonitor.Get(name)); " is 127.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorageFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorageFactory.cs,Create,The length of the statement  "            return ActivatorUtilities.CreateInstance<AzureTableTransactionalStateStorage<TState>>(context.ActivationServices' this.table' partitionKey' this.jsonSettings); " is 159.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorageFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorageFactory.cs,Participate,The length of the statement  "            lifecycle.Subscribe(OptionFormattingUtilities.Name<AzureTableTransactionalStateStorageFactory>(this.name)' this.options.InitStage' Init); " is 137.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorageFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorageFactory.cs,CreateTable,The length of the statement  "            var tableManager = new AzureTableDataManager<TableEntity>(this.options.TableName' this.options.ConnectionString' this.loggerFactory); " is 133.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Info((int)Utilities.ErrorCode.AzureTable_01' "{0} Azure storage table {1}"' (didCreate ? "Created" : "Attached to")' TableName); " is 135.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Error((int)Utilities.ErrorCode.AzureTable_02' $"Could not initialize connection to storage table {TableName}"' exc); " is 123.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} partitionKey {2} rowKey = {3}"' operation' TableName' partitionKey' rowKey); " is 142.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Could not find table entry for PartitionKey={0} RowKey={1}"' partitionKey' rowKey); " is 135.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadAllTableEntriesForPartitionAsync,The length of the statement  "            string query = TableQuery.GenerateFilterCondition(nameof(ITableEntity.PartitionKey)' QueryComparisons.Equal' partitionKey); " is 123.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,DeleteTableEntriesAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Deleting {0} table entries: {1}"' TableName' Utils.EnumerableToString(collection)); " is 135.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,BulkInsertTableEntries,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Bulk inserting {0} entries to {1} table"' collection.Count' TableName); " is 123.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} into table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 132.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 127.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "            if (AzureTableUtils.EvaluateException(exc' out httpStatusCode' out restStatus) && AzureTableUtils.IsContentionError(httpStatusCode)) " is 132.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "                    $"Intermediate Azure table write error {operation} to table {TableName} data1 {(data1 ?? "null")} data2 {(data2 ?? "null")}"' exc); " is 131.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertSlowAccess,The length of the statement  "                Logger.Warn((int)Utilities.ErrorCode.AzureTable_15' "Slow access to Azure Table {0} for {1}' which took {2}."' TableName' operation' timeSpan); " is 143.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.Conflict) return true;     //Primary key violation. The app is trying to insert an entity' but there’s an entity on the table with the same values for PartitionKey and RowKey properties on the entity being inserted. " is 252.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsNotFoundError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The length of the statement  "            // http://www.jamestharpe.com/web-development/azure-table-service-character-combinations-disallowed-in-partitionkey-rowkey/ " is 123.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an Azure table key. Key={1}"' key.Length' key)); " is 124.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                    $"Intermediate issue reading Azure storage table {tableName}: HTTP status code={statusCode} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 157.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                            $"Intermediate issue reading Azure storage table {tableName}:{(iteration == 0 ? "" : (" Repeat=" + iteration))} IsRetriable={isLastErrorRetriable} HTTP status code={httpStatusCode} REST status code={restStatus} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 276.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                        $"Unexpected issue reading Azure storage table {tableName}: Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 125.
Long Statement,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,PrintStorageException,The length of the statement  "                            String.Format("' ExtendedErrorInformation.AdditionalDetails = {0}"' Utils.DictionaryToString(extendedError.AdditionalDetails)) : String.Empty); " is 143.
Magic Number,Orleans.Transactions.AzureStorage,StateEntity,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\StateEntity.cs,SetStateInternal,The following statement contains a magic number: this.CheckMaxDataSize((stringData ?? string.Empty).Length * 2' MAX_DATA_CHUNK_SIZE * MAX_DATA_CHUNKS_COUNT);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableCreationRetries = 60;
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableCreationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromSeconds(1)                  : TimeSpan.FromSeconds(100);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableOperationRetries = 5;
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableOperationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(100)                  : TimeSpan.FromSeconds(10);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableOperationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(100)                  : TimeSpan.FromSeconds(10);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxBusyRetries = 120;
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenBusyRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(500)                  : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenBusyRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(500)                  : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableCreationTimeout = TimeSpan.FromMilliseconds(PauseBetweenTableCreationRetries.TotalMilliseconds * MaxTableCreationRetries * 3);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableOperationTimeout = TimeSpan.FromMilliseconds(PauseBetweenTableOperationRetries.TotalMilliseconds * MaxTableOperationRetries *6);
Magic Number,Orleans.Transactions.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The following statement contains a magic number: key.Length >= 1024
Missing Default,Orleans.Transactions.AzureStorage,AzureTableTransactionalStateStorage<TState>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Transactions.AzureStorage\TransactionalState\AzureTableTransactionalStateStorage.cs,FindState,The following switch statement is missing a default case: switch (states[pos].Key.CompareTo(sequenceId))                  {                      case 0:                          return true;                      case -1:                          pos++;                          continue;                      case 1:                          return false;                  }
