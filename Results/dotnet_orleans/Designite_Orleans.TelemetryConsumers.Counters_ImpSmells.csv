Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,C:\repos\dotnet_orleans\src\Orleans.TelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,,The length of the parameter ExplainHowToCreateOrleansPerfCounters is 37.
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,C:\repos\dotnet_orleans\src\Orleans.TelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,AreWindowsPerfCountersAvailable,The length of the statement  "                    logger.Warn(ErrorCode.PerfCounterNotFound' "Windows perf counters are only available on Windows :) -- defaulting to in-memory counters."); " is 138.
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,C:\repos\dotnet_orleans\src\Orleans.TelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,Initialize,The length of the statement  "                // TODO: get rid of this static access. Telemetry consumers now allow being injected with dependencies' so extract it as such " is 125.
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,C:\repos\dotnet_orleans\src\Orleans.TelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,WriteMetric,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace(ErrorCode.PerfCounterWriting' "Writing perf counter {0}"' perfCounterName); " is 126.
Long Statement,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,C:\repos\dotnet_orleans\src\Orleans.TelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,WriteMetric,The length of the statement  "                logger.Error(ErrorCode.PerfCounterUnableToWrite' string.Format("Unable to write to Windows perf counter '{0}'"' statsName)' ex); " is 128.
Missing Default,OrleansTelemetryConsumers.Counters,OrleansPerfCounterTelemetryConsumer,C:\repos\dotnet_orleans\src\Orleans.TelemetryConsumers.Counters\OrleansPerfCounterTelemetryConsumer.cs,WriteMetric,The following switch statement is missing a default case: switch (mode)                  {                      case UpdateMode.Increment:                          if (value.HasValue)                          {                              cd.PerfCounter.IncrementBy((long)value.Value);                          }                          else                          {                              cd.PerfCounter.Increment();                          }                          break;                      case UpdateMode.Decrement:                          if (value.HasValue)                          {                              cd.PerfCounter.RawValue = cd.PerfCounter.RawValue - (long)value.Value;                          }                          else                          {                              cd.PerfCounter.Decrement();                          }                          break;                      case UpdateMode.Set:                          cd.PerfCounter.RawValue = (long)value.Value;                          break;                  }
