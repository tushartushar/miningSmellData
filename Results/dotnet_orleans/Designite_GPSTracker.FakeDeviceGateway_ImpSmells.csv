Implementation smell,Namespace,Class,File,Method,Description
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < 20; i++)              {                  devices.Add(new Model()                  {                      DeviceId = i'                      Lat = rand.NextDouble(SFLatMin' SFLatMax)'                      Lon = rand.NextDouble(SFLonMin' SFLonMax)'                      Direction = rand.NextDouble(-Math.PI' Math.PI)'                      Speed = rand.NextDouble(0' 0.0005)                  });              }
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < 20; i++)              {                  devices.Add(new Model()                  {                      DeviceId = i'                      Lat = rand.NextDouble(SFLatMin' SFLatMax)'                      Lon = rand.NextDouble(SFLonMin' SFLonMax)'                      Direction = rand.NextDouble(-Math.PI' Math.PI)'                      Speed = rand.NextDouble(0' 0.0005)                  });              }
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,Main,The following statement contains a magic number: timer.Interval = 1000;
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,Main,The following statement contains a magic number: foreach (var model in devices)              {                  var ts = new ThreadStart(() =>                  {                      while (true)                      {                          try                          {                              SendMessage(model).Wait();                              Thread.Sleep(rand.Next(500' 2500));                          }                          catch (Exception ex)                          {                              Console.WriteLine(ex.ToString());                          }                        }                  });                  new Thread(ts).Start();              }
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,Main,The following statement contains a magic number: foreach (var model in devices)              {                  var ts = new ThreadStart(() =>                  {                      while (true)                      {                          try                          {                              SendMessage(model).Wait();                              Thread.Sleep(rand.Next(500' 2500));                          }                          catch (Exception ex)                          {                              Console.WriteLine(ex.ToString());                          }                        }                  });                  new Thread(ts).Start();              }
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,SendMessage,The following statement contains a magic number: model.Speed += rand.NextDouble(-0.0001' 0.0001);
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,SendMessage,The following statement contains a magic number: model.Speed += rand.NextDouble(-0.0001' 0.0001);
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,SendMessage,The following statement contains a magic number: model.Direction += rand.NextDouble(-0.001' 0.001);
Magic Number,GPSTracker.FakeDeviceGateway,Program,C:\repos\dotnet_orleans\Samples\GPSTracker\GPSTracker.FakeDeviceGateway\Program.cs,SendMessage,The following statement contains a magic number: model.Direction += rand.NextDouble(-0.001' 0.001);
