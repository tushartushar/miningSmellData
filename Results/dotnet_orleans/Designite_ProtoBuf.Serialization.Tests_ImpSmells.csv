Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ProtoBuf.Serialization.Tests,Person,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(10);
Magic Number,ProtoBuf.Serialization.Tests,Person,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(16);
Magic Number,ProtoBuf.Serialization.Tests,Person,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(26);
Magic Number,ProtoBuf.Serialization.Tests,Person,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              Name = input.ReadString();              break;            }            case 16: {              Id = input.ReadInt32();              break;            }            case 26: {              Email = input.ReadString();              break;            }            case 34: {              phones_.AddEntriesFrom(input' _repeated_phones_codec);              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,Person,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              Name = input.ReadString();              break;            }            case 16: {              Id = input.ReadInt32();              break;            }            case 26: {              Email = input.ReadString();              break;            }            case 34: {              phones_.AddEntriesFrom(input' _repeated_phones_codec);              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,Person,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              Name = input.ReadString();              break;            }            case 16: {              Id = input.ReadInt32();              break;            }            case 26: {              Email = input.ReadString();              break;            }            case 34: {              phones_.AddEntriesFrom(input' _repeated_phones_codec);              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,Person,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              Name = input.ReadString();              break;            }            case 16: {              Id = input.ReadInt32();              break;            }            case 26: {              Email = input.ReadString();              break;            }            case 34: {              phones_.AddEntriesFrom(input' _repeated_phones_codec);              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,PhoneNumber,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(10);
Magic Number,ProtoBuf.Serialization.Tests,PhoneNumber,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(16);
Magic Number,ProtoBuf.Serialization.Tests,PhoneNumber,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {                default:                  input.SkipLastField();                  break;                case 10: {                  Number = input.ReadString();                  break;                }                case 16: {                  type_ = (global::ProtoBuf.Serialization.Tests.Person.Types.PhoneType) input.ReadEnum();                  break;                }              }
Magic Number,ProtoBuf.Serialization.Tests,PhoneNumber,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {                default:                  input.SkipLastField();                  break;                case 10: {                  Number = input.ReadString();                  break;                }                case 16: {                  type_ = (global::ProtoBuf.Serialization.Tests.Person.Types.PhoneType) input.ReadEnum();                  break;                }              }
Magic Number,ProtoBuf.Serialization.Tests,AddressBook,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(18);
Magic Number,ProtoBuf.Serialization.Tests,AddressBook,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              people_.AddEntriesFrom(input' _repeated_people_codec);              break;            }            case 18: {              AddressBookName = input.ReadString();              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,AddressBook,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Addressbook.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              people_.AddEntriesFrom(input' _repeated_people_codec);              break;            }            case 18: {              AddressBookName = input.ReadString();              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,Counter,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Counter.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(10);
Magic Number,ProtoBuf.Serialization.Tests,Counter,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Counter.cs,WriteTo,The following statement contains a magic number: output.WriteRawTag(16);
Magic Number,ProtoBuf.Serialization.Tests,Counter,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Counter.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              Name = input.ReadString();              break;            }            case 16: {              Id = input.ReadInt32();              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,Counter,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\Counter.cs,MergeFrom,The following statement contains a magic number: switch(tag) {            default:              input.SkipLastField();              break;            case 10: {              Name = input.ReadString();              break;            }            case 16: {              Id = input.ReadInt32();              break;            }          }
Magic Number,ProtoBuf.Serialization.Tests,SerializationTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\SerializationTestsBase.cs,CreatePerson,The following statement contains a magic number: var person = new OtherPerson              {                  Id = 12345'                  Name = "Fred"'                  Address = new Address                  {                      Line1 = "Flat 1"'                      Line2 = "The Meadows"                  }              };
Magic Number,ProtoBuf.Serialization.Tests,SerializationTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\SerializationTestsBase.cs,CreateImmutablePerson,The following statement contains a magic number: var person = new ImmutablePerson              {                  Id = 12345'                  Name = "Fred"'                  Address = new Address                  {                      Line1 = "Flat 1"'                      Line2 = "The Meadows"                  }              };
Magic Number,ProtoBuf.Serialization.Tests,SerializationTestsBase,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\Serializers\ProtoBuf.Serialization.Tests\SerializationTestsBase.cs,CreateAddressBook,The following statement contains a magic number: person.Id = 2;
