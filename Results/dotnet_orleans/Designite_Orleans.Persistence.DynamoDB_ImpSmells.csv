Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.Persistence.DynamoDB,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,GetRegionEndpoint,Cyclomatic complexity of the method is 16
Long Parameter List,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,DynamoDBGrainStorage,The method has 6 parameters. Parameters: name' options' serializationManager' grainFactory' typeResolver' loggerFactory
Long Parameter List,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,DynamoDBStorage,The method has 6 parameters. Parameters: loggerFactory' service' accessKey' secretKey' readCapacityUnits' writeCapacityUnits
Long Parameter List,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,UpsertEntryAsync,The method has 7 parameters. Parameters: tableName' keys' fields' conditionExpression' conditionValues' extraExpression' extraExpressionValues
Long Parameter List,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,QueryAsync,The method has 7 parameters. Parameters: tableName' keys' keyConditionExpression' resolver' indexName' scanIndexForward' lastEvaluatedKey
Long Parameter List,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,QueryAllAsync,The method has 6 parameters. Parameters: tableName' keys' keyConditionExpression' resolver' indexName' scanIndexForward
Long Statement,Orleans.Hosting,DynamoDBSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Hosting\DynamoDBSiloBuilderExtensions.cs,AddDynamoDBGrainStorageAsDefault,The length of the statement  "            return services.AddDynamoDBGrainStorage(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME' ob => ob.Configure(configureOptions)); " is 127.
Long Statement,Orleans.Hosting,DynamoDBSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Hosting\DynamoDBSiloBuilderExtensions.cs,AddDynamoDBGrainStorage,The length of the statement  "            services.AddTransient<IConfigurationValidator>(sp => new DynamoDBGrainStorageOptionsValidator(sp.GetRequiredService<IOptionsMonitor<DynamoDBStorageOptions>>().Get(name)' name)); " is 177.
Long Statement,Orleans.Hosting,DynamoDBSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Hosting\DynamoDBSiloBuilderExtensions.cs,AddDynamoDBGrainStorage,The length of the statement  "                           .AddSingletonNamedService(name' (s' n) => (ILifecycleParticipant<ISiloLifecycle>)s.GetRequiredServiceByName<IGrainStorage>(n)); " is 127.
Long Statement,Orleans.Configuration,DynamoDBGrainStorageOptionsValidator,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Options\DynamoDBStorageOptions.cs,ValidateConfiguration,The length of the statement  "                    $"Configuration for DynamoDBGrainStorage {this.name} is invalid. {nameof(this.options.ReadCapacityUnits)} is not valid."); " is 122.
Long Statement,Orleans.Configuration,DynamoDBGrainStorageOptionsValidator,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Options\DynamoDBStorageOptions.cs,ValidateConfiguration,The length of the statement  "                    $"Configuration for DynamoDBGrainStorage {this.name} is invalid. {nameof(this.options.WriteCapacityUnits)} is not valid."); " is 123.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,Participate,The length of the statement  "            lifecycle.Subscribe(OptionFormattingUtilities.Name<DynamoDBGrainStorage>(this.name)' this.options.InitStage' Init' Close); " is 122.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,Init,The length of the statement  "                this.logger.LogInformation((int)ErrorCode.StorageProviderBase' $"AWS DynamoDB Grain Storage {this.name} is initializing: {initMsg}"); " is 133.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,Init,The length of the statement  "                this.storage = new DynamoDBStorage(this.loggerFactory' this.options.Service' this.options.AccessKey' this.options.SecretKey' " is 124.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,Init,The length of the statement  "                    $"Initializing provider {this.name} of type {this.GetType().Name} in stage {this.options.InitStage} took {stopWatch.ElapsedMilliseconds} Milliseconds."); " is 153.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,Init,The length of the statement  "                this.logger.LogError((int)ErrorCode.Provider_ErrorFromInit' $"Initialization failed for provider {this.name} of type {this.GetType().Name} in stage {this.options.InitStage} in {stopWatch.ElapsedMilliseconds} Milliseconds."' exc); " is 229.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,WriteStateInternal,The length of the statement  "                var expression = $"attribute_not_exists({GRAIN_REFERENCE_PROPERTY_NAME}) AND attribute_not_exists({GRAIN_TYPE_PROPERTY_NAME})"; " is 127.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,WriteStateInternal,The length of the statement  "                var conditionalValues = new Dictionary<string' AttributeValue> { { CURRENT_ETAG_ALIAS' new AttributeValue { N = currentEtag.ToString() } } }; " is 141.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,WriteStateInternal,The length of the statement  "                await this.storage.UpsertEntryAsync(this.options.TableName' keys' fields' expression' conditionalValues).ConfigureAwait(false); " is 127.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,ClearStateAsync,The length of the statement  "            var record = new GrainStateRecord { GrainReference = partitionKey' ETag = string.IsNullOrWhiteSpace(grainState.ETag) ? 0 : int.Parse(grainState.ETag)' GrainType = rowKey }; " is 172.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,ClearStateAsync,The length of the statement  "                this.logger.Error(ErrorCode.StorageProviderBase' string.Format("Error {0}: GrainType={1} Grainid={2} ETag={3} from Table={4} Exception={5}"' " is 140.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,ConvertToStorageFormat,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace("Writing JSON data size = {0} for grain id = Partition={1} / Row={2}"' " is 131.
Long Statement,Orleans.Storage,DynamoDBGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Orleans.Persistence.DynamoDB\Provider\DynamoDBGrainStorage.cs,ConvertToStorageFormat,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace("Writing binary data size = {0} for grain id = Partition={1} / Row={2}"' " is 133.
Long Statement,Orleans.Persistence.DynamoDB,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBPartitionKey,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an DynamoDB partition key. Key={1}"' key.Length' key)); " is 131.
Long Statement,Orleans.Persistence.DynamoDB,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBRowKey,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an DynamoDB row key. Key={1}"' key.Length' key)); " is 125.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateClient,The length of the statement  "                ddbClient = new AmazonDynamoDBClient(credentials' new AmazonDynamoDBConfig { ServiceURL = service' RegionEndpoint = AWSUtils.GetRegionEndpoint(service) }); " is 155.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateClient,The length of the statement  "                ddbClient = new AmazonDynamoDBClient(new AmazonDynamoDBConfig { ServiceURL = service' RegionEndpoint = AWSUtils.GetRegionEndpoint(service) }); " is 142.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateTable,The length of the statement  "                var indexThroughput = new ProvisionedThroughput { ReadCapacityUnits = readCapacityUnits' WriteCapacityUnits = writeCapacityUnits }; " is 131.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,PutEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Creating {0} table entry: {1}"' tableName' Utils.DictionaryToString(fields)); " is 129.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,UpsertEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Upserting entry {0} with key(s) {1} into table {2}"' Utils.DictionaryToString(fields)' Utils.DictionaryToString(keys)' tableName); " is 182.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,DeleteEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Deleting table {0}  entry with key(s) {1}"' tableName' Utils.DictionaryToString(keys)); " is 139.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,ReadSingleEntryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Unable to find table entry for Keys = {0}"' Utils.DictionaryToString(keys)); " is 128.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,QueryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Unable to find table entry for Keys = {0}"' Utils.DictionaryToString(keys)); " is 128.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,ScanAsync,The length of the statement  "            // https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/DynamoDBv2/MDynamoDBScanAsyncStringDictionary!String'%20Condition!CancellationToken.html " is 146.
Long Statement,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,GetEntriesTxAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Unable to find table entry for Keys = {0}"' Utils.EnumerableToString(keys' d => Utils.DictionaryToString(d))); " is 162.
Magic Number,Orleans.Persistence.DynamoDB,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBPartitionKey,The following statement contains a magic number: key.Length >= 2048
Magic Number,Orleans.Persistence.DynamoDB,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBRowKey,The following statement contains a magic number: key.Length >= 1024
Magic Number,Orleans.Persistence.DynamoDB,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateTable,The following statement contains a magic number: await Task.Delay(2000);
