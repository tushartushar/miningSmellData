Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.ServiceBus.Providers,EventHubAdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterFactory.cs,Init,Cyclomatic complexity of the method is 8
Long Parameter List,Orleans.ServiceBus.Providers,EventHubAdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterFactory.cs,QueueMessageBatchAsync,The method has 5 parameters. Parameters: streamGuid' streamNamespace' events' token' requestContext
Long Parameter List,Orleans.ServiceBus.Providers,EventHubAdapterReceiver,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterReceiver.cs,EventHubAdapterReceiver,The method has 8 parameters. Parameters: settings' cacheFactory' checkpointerFactory' loggerFactory' monitor' getNodeConfig' telemetryProducer' eventHubReceiverFactory
Long Parameter List,Orleans.ServiceBus.Providers,EventHubBatchContainer,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubBatchContainer.cs,ToEventData,The method has 5 parameters. Parameters: serializationManager' streamGuid' streamNamespace' events' requestContext
Long Parameter List,Orleans.ServiceBus.Providers,EventHubMessage,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubDataAdapter.cs,EventHubMessage,The method has 8 parameters. Parameters: streamIdentity' partitionKey' offset' sequenceNumber' enqueueTimeUtc' dequeueTimeUtc' properties' payload
Long Parameter List,Orleans.ServiceBus.Providers,EventHubQueueCache<TCachedMessage>,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,EventHubQueueCache,The method has 8 parameters. Parameters: defaultMaxAddCount' checkpointer' cacheDataAdapter' comparer' logger' evictionStrategy' cacheMonitor' cacheMonitorWriteInterval
Long Parameter List,Orleans.ServiceBus.Providers,EventHubQueueCache,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,EventHubQueueCache,The method has 7 parameters. Parameters: checkpointer' bufferPool' timePurge' logger' serializationManager' cacheMonitor' cacheMonitorWriteInterval
Long Parameter List,Orleans.ServiceBus.Providers,EventHubQueueCache,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,EventHubQueueCache,The method has 7 parameters. Parameters: checkpointer' cacheDataAdapter' comparer' logger' evictionStrategy' cacheMonitor' cacheMonitorWriteInterval
Long Parameter List,Orleans.ServiceBus.Providers,EventHubQueueCache,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,EventHubQueueCache,The method has 8 parameters. Parameters: defaultMaxAddCount' checkpointer' cacheDataAdapter' comparer' logger' evictionStrategy' cacheMonitor' cacheMonitorWriteInterval
Long Parameter List,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,EventHubQueueCacheFactory,The method has 6 parameters. Parameters: providerSettings' serializationManager' sharedDimensions' loggerFactory' cacheMonitorFactory' blockPoolMonitorFactory
Long Parameter List,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateBufferPool,The method has 5 parameters. Parameters: providerSettings' loggerFactory' sharedDimensions' telemetryProducer' blockPoolId
Long Parameter List,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateCache,The method has 10 parameters. Parameters: partition' providerSettings' checkpointer' loggerFactory' bufferPool' blockPoolId' timePurge' serializationManager' sharedDimensions' telemetryProducer
Long Parameter List,Orleans.ServiceBus.Providers,EventHubSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubSettings.cs,EventHubSettings,The method has 5 parameters. Parameters: connectionString' consumerGroup' path' startFromNow' prefetchCount
Long Identifier,Orleans.ServiceBus.Providers.Testing,EventHubGeneratorStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventDataGeneratorStreamProvider.cs,,The length of the parameter DefaultStreamDataGeneratorType is 30.
Long Identifier,Orleans.ServiceBus.Providers,AveragingCachePressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\AveragingCachePressureMonitor.cs,,The length of the parameter cachePressureContributionCount is 30.
Long Identifier,Orleans.ServiceBus.Providers,SlowConsumingPressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\SlowConsumingPressureMonitor.cs,,The length of the parameter biggestPressureInCurrentWindow is 30.
Long Identifier,Orleans.ServiceBus.Providers,EventDataExtensions,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventDataExtensions.cs,,The length of the parameter EventDataPropertyStreamNamespaceKey is 35.
Long Identifier,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,,The length of the parameter SlowConsumingMonitorFlowControlThresholdName is 44.
Long Identifier,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,,The length of the parameter SlowConsumingMonitorPressureWindowSizeName is 42.
Long Identifier,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,,The length of the parameter AveragingCachePressureMonitorFlowControlThresholdName is 53.
Long Identifier,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,,The length of the parameter AveragingCachePressureMonitorFlowControlThreshold is 49.
Long Identifier,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,,The length of the parameter CachePressureMonitorOffThreshold is 32.
Long Identifier,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadTableEntriesAndEtagsAsync,The length of the parameter executeQueryHandleContinuations is 31.
Long Statement,Orleans.ServiceBus.Providers.Testing,EventHubGeneratorStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventDataGeneratorStreamProvider.cs,PopulateDataGeneratingConfigFromProviderConfig,The length of the statement  "            this.streamDataGeneratorType = providerConfiguration.GetTypeProperty(StreamDataGeneratorTypeName' DefaultStreamDataGeneratorType); " is 130.
Long Statement,Orleans.ServiceBus.Providers.Testing,EventHubGeneratorStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventDataGeneratorStreamProvider.cs,PopulateDataGeneratingConfigFromProviderConfig,The length of the statement  "            this.EventHubPartitionCount = providerConfiguration.GetIntProperty(EventHubPartitionCountName' DefaultEventHubPartitionCount); " is 126.
Long Statement,Orleans.ServiceBus.Providers.Testing,AdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventDataGeneratorStreamProvider.cs,GetPartitionIdsAsync,The length of the statement  "                return Task.FromResult(EventHubGeneratorStreamProviderSettings.GenerateEventHubPartitions(this.ehGeneratorSettings.EventHubPartitionCount)); " is 140.
Long Statement,Orleans.ServiceBus.Providers.Testing,AdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventDataGeneratorStreamProvider.cs,EHGeneratorReceiverFactory,The length of the statement  "                var generator = new EventHubPartitionDataGenerator(logger' this.serviceProvider.GetRequiredService<SerializationManager>()' this.ehGeneratorSettings); " is 150.
Long Statement,Orleans.ServiceBus.Providers.Testing,AdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventDataGeneratorStreamProvider.cs,RandomlyPlaceStreamToQueue,The length of the statement  "                var allQueueInTheCluster = (this.EventHubQueueMapper as EventHubQueueMapper)?.GetAllQueues().OrderBy(queueId => queueId.ToString()); " is 132.
Long Statement,Orleans.ServiceBus.Providers.Testing,SimpleStreamEventDataGenerator,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventHubPartitionDataGenerator.cs,TryReadEvents,The length of the statement  "                var eventData = EventHubBatchContainer.ToEventData<int>(this.serializationManager' this.StreamId.Guid' this.StreamId.Namespace' " is 127.
Long Statement,Orleans.ServiceBus.Providers.Testing,SimpleStreamEventDataGenerator,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventHubPartitionDataGenerator.cs,TryReadEvents,The length of the statement  "                this.logger.Info($"Generate data of SequemceNumber {SequenceNumberCounter.Value} for stream {this.StreamId.Namespace}-{this.StreamId.Guid}"); " is 141.
Long Statement,Orleans.ServiceBus.Providers,AveragingCachePressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\AveragingCachePressureMonitor.cs,CalculatePressure,The length of the statement  "                this.CacheMonitor?.TrackCachePressureMonitorStatusChange(this.GetType().Name' isUnderPressure' cachePressureContributionCount' pressure' this.flowControlThreshold); " is 164.
Long Statement,Orleans.ServiceBus.Providers,AveragingCachePressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\AveragingCachePressureMonitor.cs,CalculatePressure,The length of the statement  "                    ? $"Ingesting messages too fast. Throttling message reading. AccumulatedCachePressure: {accumulatedCachePressure}' Contributions: {cachePressureContributionCount}' AverageCachePressure: {pressure}' Threshold: {flowControlThreshold}" " is 232.
Long Statement,Orleans.ServiceBus.Providers,AveragingCachePressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\AveragingCachePressureMonitor.cs,CalculatePressure,The length of the statement  "                    : $"Message ingestion is healthy. AccumulatedCachePressure: {accumulatedCachePressure}' Contributions: {cachePressureContributionCount}' AverageCachePressure: {pressure}' Threshold: {flowControlThreshold}"); " is 207.
Long Statement,Orleans.ServiceBus.Providers,SlowConsumingPressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\SlowConsumingPressureMonitor.cs,IsUnderPressure,The length of the statement  "                this.CacheMonitor?.TrackCachePressureMonitorStatusChange(this.GetType().Name' underPressure' null' biggestPressureInCurrentWindow' this.FlowControlThreshold); " is 158.
Long Statement,Orleans.ServiceBus.Providers,SlowConsumingPressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\SlowConsumingPressureMonitor.cs,IsUnderPressure,The length of the statement  "                    logger.Debug($"Ingesting messages too fast. Throttling message reading. BiggestPressureInCurrentPeriod: {biggestPressureInCurrentWindow}' Threshold: {FlowControlThreshold}"); " is 174.
Long Statement,Orleans.ServiceBus.Providers,SlowConsumingPressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\SlowConsumingPressureMonitor.cs,IsUnderPressure,The length of the statement  "                    this.CacheMonitor?.TrackCachePressureMonitorStatusChange(this.GetType().Name' underPressure' null' biggestPressureInCurrentWindow' this.FlowControlThreshold); " is 158.
Long Statement,Orleans.ServiceBus.Providers,SlowConsumingPressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\SlowConsumingPressureMonitor.cs,IsUnderPressure,The length of the statement  "                        logger.Debug($"Message ingestion is healthy. BiggestPressureInCurrentPeriod: {biggestPressureInCurrentWindow}' Threshold: {FlowControlThreshold}"); " is 147.
Long Statement,Orleans.ServiceBus.Providers,EventDataExtensions,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventDataExtensions.cs,SerializeProperties,The length of the statement  "            serializationManager.Serialize(eventData.Properties.Where(kvp => !SkipProperties.Contains(kvp.Key)).ToList()' writeStream); " is 123.
Long Statement,Orleans.ServiceBus.Providers,EventDataExtensions,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventDataExtensions.cs,DeserializeProperties,The length of the statement  "            return serializationManager.Deserialize<List<KeyValuePair<string' object>>>(stream).ToDictionary(kvp => kvp.Key' kvp => kvp.Value); " is 131.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterFactory.cs,Init,The length of the statement  "                CheckpointerFactory = partition => EventHubCheckpointer.Create(checkpointerSettings' adapterSettings.StreamProviderName' partition' this.loggerFactory); " is 152.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterFactory.cs,Init,The length of the statement  "                StreamFailureHandlerFactory = partition => Task.FromResult<IStreamFailureHandler>(new NoOpStreamDeliveryFailureHandler()); " is 122.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterFactory.cs,Init,The length of the statement  "                ReceiverMonitorFactory = (dimensions' logger' telemetryProducer) => new DefaultEventHubReceiverMonitor(dimensions' telemetryProducer); " is 134.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterFactory.cs,QueueMessageBatchAsync,The length of the statement  "            EventData eventData = EventHubBatchContainer.ToEventData(this.SerializationManager' streamGuid' streamNamespace' events' requestContext); " is 137.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterFactory.cs,MakeReceiver,The length of the statement  "            return new EventHubAdapterReceiver(config' CacheFactory' CheckpointerFactory' loggerFactory' ReceiverMonitorFactory(receiverMonitorDimensions' loggerFactory' this.telemetryProducer)'  " is 182.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterReceiver,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterReceiver.cs,Initialize,The length of the statement  "                this.flowController = new AggregatedQueueFlowController(MaxMessagesPerRead) { cache' LoadShedQueueFlowController.CreateAsPercentOfLoadSheddingLimit(getNodeConfig) }; " is 165.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterReceiver,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterReceiver.cs,TryPurgeFromCache,The length of the statement  "            //if under pressure' which means consuming speed is less than producing speed' then shouldn't purge' and don't read more message into the cache " is 143.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterReceiver,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterReceiver.cs,CreateReceiver,The length of the statement  "                logger.Info("Starting to read from EventHub partition {0}-{1} at offset {2}"' partitionSettings.Hub.Path' partitionSettings.Partition' offset); " is 143.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterReceiver,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterReceiver.cs,CreateReceiver,The length of the statement  "                logger.Info("Starting to read latest messages from EventHub partition {0}-{1} at offset {2}"' partitionSettings.Hub.Path' partitionSettings.Partition' offset); " is 159.
Long Statement,Orleans.ServiceBus.Providers,EventHubAdapterReceiver,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubAdapterReceiver.cs,CreateReceiver,The length of the statement  "            PartitionReceiver receiver = client.CreateReceiver(partitionSettings.Hub.ConsumerGroup' partitionSettings.Partition' offset' offsetInclusive); " is 142.
Long Statement,Orleans.ServiceBus.Providers,EventHubBatchContainer,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubBatchContainer.cs,GetEvents,The length of the statement  "            return GetPayload().Events.Cast<T>().Select((e' i) => Tuple.Create<T' StreamSequenceToken>(e' new EventHubSequenceTokenV2(token.EventHubOffset' token.SequenceNumber' i))); " is 171.
Long Statement,Orleans.ServiceBus.Providers,EventHubDataAdapter,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubDataAdapter.cs,GetSegment,The length of the statement  "                    throw new OrleansException("Eviction strategy's OnBlockAllocated is not set for current data adapter' this will affect cache purging"); " is 135.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueCache,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,OnPurge,The length of the statement  "                log.Debug($"CachePeriod: EnqueueTimeUtc: {LogFormatter.PrintDate(lastItemPurged.Value.EnqueueTimeUtc)} to {LogFormatter.PrintDate(newestItem.Value.EnqueueTimeUtc)}' DequeueTimeUtc: {LogFormatter.PrintDate(lastItemPurged.Value.DequeueTimeUtc)} to {LogFormatter.PrintDate(newestItem.Value.DequeueTimeUtc)}"); " is 306.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueCache,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,TryCalculateCachePressureContribution,The length of the statement  "                cache.Newest.Value.SequenceNumber - cache.Oldest.Value.SequenceNumber < 10*defaultMaxAddCount) // not enough items in cache. " is 124.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateCache,The length of the statement  "            var blockPool = CreateBufferPool(this.providerSettings' loggerFactory' this.sharedDimensions' telemetryProducer' out blockPoolId); " is 130.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateCache,The length of the statement  "            var cache = CreateCache(partition' this.providerSettings' checkpointer' loggerFactory' blockPool' blockPoolId' this.timePurge' this.serializationManager' this.sharedDimensions' telemetryProducer); " is 196.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateCache,The length of the statement  "            AddCachePressureMonitors(cache' this.providerSettings' loggerFactory.CreateLogger($"{typeof(EventHubQueueCache).FullName}.{this.sharedDimensions.EventHubPath}.{partition}")); " is 174.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateBufferPool,The length of the statement  "                var objectPoolMonitor = new ObjectPoolMonitorBridge(this.BlockPoolMonitorFactory(monitorDimensions' loggerFactory' telemetryProducer)' bufferSize); " is 147.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateCache,The length of the statement  "            return new EventHubQueueCache(checkpointer' bufferPool' timePurge' loggerFactory.CreateLogger($"{typeof(EventHubQueueCache).FullName}.{sharedDimensions.EventHubPath}.{partition}")' serializationManager' cacheMonitor' providerSettings.StatisticMonitorWriteInterval); " is 265.
Long Statement,Orleans.ServiceBus.Providers,EventHubQueueMapper,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueMapper.cs,QueueToPartition,The length of the statement  "                throw new ArgumentOutOfRangeException(string.Format(CultureInfo.InvariantCulture' "queue {0}"' queue.ToStringWithHashCode())); " is 126.
Long Statement,Orleans.ServiceBus.Providers,EventHubSequenceToken,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubSequenceToken.cs,ToString,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "EventHubSequenceToken(EventHubOffset: {0}' SequenceNumber: {1}' EventIndex: {2})"' EventHubOffset' SequenceNumber' EventIndex); " is 179.
Long Statement,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,WriteProperties,The length of the statement  "                properties.Add(AveragingCachePressureMonitorFlowControlThresholdName' AveragingCachePressureMonitorFlowControlThreshold.ToString()); " is 132.
Long Statement,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,PopulateFromProviderConfig,The length of the statement  "            if (providerConfiguration.TryGetDoubleProperty(AveragingCachePressureMonitorFlowControlThresholdName' out flowControlThreshold)) " is 128.
Long Statement,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,GetEventHubSettings,The length of the statement  "            var hubSettings = (IEventHubSettings)(serviceProvider?.GetService(EventHubSettingsType) ?? Activator.CreateInstance(EventHubSettingsType)); " is 139.
Long Statement,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,GetCheckpointerSettings,The length of the statement  "            // if no checkpointer settings type is provided' use EventHubCheckpointerSettings and get populate settings from providerConfig " is 127.
Long Statement,Orleans.ServiceBus.Providers,EventHubStreamProviderSettings,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubStreamProviderSettings.cs,GetCheckpointerSettings,The length of the statement  "            var checkpointerSettings = (ICheckpointerSettings)(serviceProvider?.GetService(CheckpointerSettingsType) ?? Activator.CreateInstance(CheckpointerSettingsType)); " is 160.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.Conflict) return true;     //Primary key violation. The app is trying to insert an entity' but there’s an entity on the table with the same values for PartitionKey and RowKey properties on the entity being inserted. " is 252.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,IsNotFoundError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,ValidateTableName,The length of the statement  "                throw new ArgumentException(String.Format("A table name must be from 3 through 63 characters long' while your tableName length is {0}' tableName is {1}."' tableName.Length' tableName)' tableName); " is 196.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,ValidateTableName,The length of the statement  "                throw new ArgumentException(String.Format("A table name cannot begin with a numeric character' while your tableName is {0}."' tableName)' tableName); " is 149.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,ValidateTableName,The length of the statement  "                throw new ArgumentException(String.Format("A table name can only contain alphanumeric characters' while your tableName is {0}."' tableName)' tableName); " is 152.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,SanitizeTableProperty,The length of the statement  "            // http://www.jamestharpe.com/web-development/azure-table-service-character-combinations-disallowed-in-partitionkey-rowkey/ " is 123.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,SanitizeTableProperty,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an Azure table key. Key={1}"' key.Length' key)); " is 124.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,AnalyzeReadException,The length of the statement  "                    $"Intermediate issue reading Azure storage table {tableName}: HTTP status code={statusCode} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 157.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,AnalyzeReadException,The length of the statement  "                            $"Intermediate issue reading Azure storage table {tableName}:{(iteration == 0 ? "" : (" Repeat=" + iteration))} IsRetriable={isLastErrorRetriable} HTTP status code={httpStatusCode} REST status code={restStatus} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 276.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,AnalyzeReadException,The length of the statement  "                        $"Unexpected issue reading Azure storage table {tableName}: Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 125.
Long Statement,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,PrintStorageException,The length of the statement  "                            String.Format("' ExtendedErrorInformation.AdditionalDetails = {0}"' Utils.DictionaryToString(extendedError.AdditionalDetails)) : String.Empty); " is 143.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Info((int)Utilities.ErrorCode.AzureTable_01' "{0} Azure storage table {1}"' (didCreate ? "Created" : "Attached to")' TableName); " is 135.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Error((int)Utilities.ErrorCode.AzureTable_02' $"Could not initialize connection to storage table {TableName}"' exc); " is 123.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} partitionKey {2} rowKey = {3}"' operation' TableName' partitionKey' rowKey); " is 142.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Could not find table entry for PartitionKey={0} RowKey={1}"' partitionKey' rowKey); " is 135.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadAllTableEntriesForPartitionAsync,The length of the statement  "            string query = TableQuery.GenerateFilterCondition(nameof(ITableEntity.PartitionKey)' QueryComparisons.Equal' partitionKey); " is 123.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,DeleteTableEntriesAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Deleting {0} table entries: {1}"' TableName' Utils.EnumerableToString(collection)); " is 135.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,BulkInsertTableEntries,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Bulk inserting {0} entries to {1} table"' collection.Count' TableName); " is 123.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} into table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 132.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 127.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "            if(AzureStorageUtils.EvaluateException(exc' out httpStatusCode' out restStatus) && AzureStorageUtils.IsContentionError(httpStatusCode)) " is 135.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "                    $"Intermediate Azure table write error {operation} to table {TableName} data1 {(data1 ?? "null")} data2 {(data2 ?? "null")}"' exc); " is 131.
Long Statement,Orleans.Streaming.EventHubs,AzureTableDataManager<T>,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertSlowAccess,The length of the statement  "                Logger.Warn((int)Utilities.ErrorCode.AzureTable_15' "Slow access to Azure Table {0} for {1}' which took {2}."' TableName' operation' timeSpan); " is 143.
Complex Conditional,Orleans.ServiceBus.Providers,EventHubQueueCache,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,TryCalculateCachePressureContribution,The conditional expression  "cache.IsEmpty ||                  !cache.Newest.HasValue ||                  !cache.Oldest.HasValue ||                  cache.Newest.Value.SequenceNumber - cache.Oldest.Value.SequenceNumber < 10*defaultMaxAddCount"  is complex.
Magic Number,Orleans.ServiceBus.Providers.Testing,EventHubPartitionGeneratorReceiver,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\EventDataGeneratorStreamProvider\EventHubPartitionGeneratorReceiver.cs,ReceiveAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(30));
Magic Number,Orleans.ServiceBus.Providers,AveragingCachePressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\AveragingCachePressureMonitor.cs,RecordCachePressureContribution,The following statement contains a magic number: double weight = cachePressureContribution < flowControlThreshold ? 1.0 : 3.0;
Magic Number,Orleans.ServiceBus.Providers,AveragingCachePressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\AveragingCachePressureMonitor.cs,CalculatePressure,The following statement contains a magic number: if (cachePressureContributionCount < 0.5)              {                  // after 5 checks with no contributions' check anyway                  cachePressureContributionCount += 0.1;                  return;              }
Magic Number,Orleans.ServiceBus.Providers,AveragingCachePressureMonitor,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\CachePressureMonitors\AveragingCachePressureMonitor.cs,CalculatePressure,The following statement contains a magic number: if (cachePressureContributionCount < 0.5)              {                  // after 5 checks with no contributions' check anyway                  cachePressureContributionCount += 0.1;                  return;              }
Magic Number,Orleans.ServiceBus.Providers,EventHubQueueCache,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCache.cs,TryCalculateCachePressureContribution,The following statement contains a magic number: if (cache.IsEmpty ||                  !cache.Newest.HasValue ||                  !cache.Oldest.HasValue ||                  cache.Newest.Value.SequenceNumber - cache.Oldest.Value.SequenceNumber < 10*defaultMaxAddCount) // not enough items in cache.              {                  return false;              }
Magic Number,Orleans.ServiceBus.Providers,EventHubQueueCacheFactory,C:\repos\dotnet_orleans\src\Azure\Orleans.Streaming.EventHubs\Providers\Streams\EventHub\EventHubQueueCacheFactory.cs,CreateBufferPool,The following statement contains a magic number: if (this.bufferPool == null)              {                  var bufferSize = 1 << 20;                  this.bufferPoolId = $"BlockPool-{new Guid().ToString()}-BlockSize-{bufferSize}";                  var monitorDimensions = new EventHubBlockPoolMonitorDimensions(sharedDimensions' this.bufferPoolId);                  var objectPoolMonitor = new ObjectPoolMonitorBridge(this.BlockPoolMonitorFactory(monitorDimensions' loggerFactory' telemetryProducer)' bufferSize);                  this.bufferPool = new ObjectPool<FixedSizeBuffer>(() => new FixedSizeBuffer(bufferSize)'                      objectPoolMonitor' providerSettings.StatisticMonitorWriteInterval);              }
Magic Number,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,ValidateTableName,The following statement contains a magic number: if (!(tableName.Length >= 3 && tableName.Length <= 63))              {                  // Table names must be from 3 to 63 characters long.                  throw new ArgumentException(String.Format("A table name must be from 3 through 63 characters long' while your tableName length is {0}' tableName is {1}."' tableName.Length' tableName)' tableName);              }
Magic Number,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,ValidateTableName,The following statement contains a magic number: if (!(tableName.Length >= 3 && tableName.Length <= 63))              {                  // Table names must be from 3 to 63 characters long.                  throw new ArgumentException(String.Format("A table name must be from 3 through 63 characters long' while your tableName length is {0}' tableName is {1}."' tableName.Length' tableName)' tableName);              }
Magic Number,Orleans.Streaming.EventHubs,AzureStorageUtils,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureStorageUtils.cs,SanitizeTableProperty,The following statement contains a magic number: if (key.Length >= 1024)                  throw new ArgumentException(string.Format("Key length {0} is too long to be an Azure table key. Key={1}"' key.Length' key));
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableCreationRetries = 60;
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableOperationRetries = 5;
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableOperationRetries = TimeSpan.FromMilliseconds(100);
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxBusyRetries = 120;
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenBusyRetries = TimeSpan.FromMilliseconds(500);
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: if (Debugger.IsAttached)              {                  PauseBetweenTableCreationRetries = PauseBetweenTableCreationRetries.Multiply(100);                  PauseBetweenTableOperationRetries = PauseBetweenTableOperationRetries.Multiply(100);                  PauseBetweenBusyRetries = PauseBetweenBusyRetries.Multiply(10);              }
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: if (Debugger.IsAttached)              {                  PauseBetweenTableCreationRetries = PauseBetweenTableCreationRetries.Multiply(100);                  PauseBetweenTableOperationRetries = PauseBetweenTableOperationRetries.Multiply(100);                  PauseBetweenBusyRetries = PauseBetweenBusyRetries.Multiply(10);              }
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: if (Debugger.IsAttached)              {                  PauseBetweenTableCreationRetries = PauseBetweenTableCreationRetries.Multiply(100);                  PauseBetweenTableOperationRetries = PauseBetweenTableOperationRetries.Multiply(100);                  PauseBetweenBusyRetries = PauseBetweenBusyRetries.Multiply(10);              }
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableCreationTimeout = PauseBetweenTableCreationRetries.Multiply(MaxTableCreationRetries).Multiply(3);
Magic Number,Orleans.Streaming.EventHubs,AzureTableDefaultPolicies,C:\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableOperationTimeout = PauseBetweenTableOperationRetries.Multiply(MaxTableOperationRetries).Multiply(6);
