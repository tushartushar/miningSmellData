Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,Cyclomatic complexity of the method is 15
Long Statement,OrleansXO.Grains,PairingGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\PairingGrain.cs,GetGames,The length of the statement  "            return Task.FromResult(this.cache.Select(x => new PairingSummary { GameId = Guid.Parse(x.Key)' Name = x.Value as string }).ToArray()); " is 134.
Long Statement,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The length of the statement  "            if (move.PlayerId != ListOfPlayers[indexNextPlayerToMove]) throw new ArgumentException("The wrong player tried to make a move"' "move"); " is 136.
Long Statement,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The length of the statement  "            if (move.X < 0 || move.X > 2 || move.Y < 0 || move.Y > 2) throw new ArgumentException("Bad co-ordinates for a move"' "move"); " is 125.
Complex Conditional,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The conditional expression  "move.X < 0 || move.X > 2 || move.Y < 0 || move.Y > 2"  is complex.
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,OnActivateAsync,The following statement contains a magic number: this.theBoard = new int[3' 3] { { -1' -1' -1 }' { -1' -1' -1 }' { -1' -1' -1 } };
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,OnActivateAsync,The following statement contains a magic number: this.theBoard = new int[3' 3] { { -1' -1' -1 }' { -1' -1' -1 }' { -1' -1' -1 } };
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,AddPlayerToGame,The following statement contains a magic number: if (this.GameState == GameState.AwaitingPlayers && this.ListOfPlayers.Count == 2)              {                  // a new game is starting                  this.GameState = GameState.InPlay;                  this.indexNextPlayerToMove = new Random().Next(0' 1);  // random as to who has the first move              }
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (move.X < 0 || move.X > 2 || move.Y < 0 || move.Y > 2) throw new ArgumentException("Bad co-ordinates for a move"' "move");
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (move.X < 0 || move.X > 2 || move.Y < 0 || move.Y > 2) throw new ArgumentException("Bad co-ordinates for a move"' "move");
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  for (int i = 0; i < 3 && !win; i++)                      win = isWinningLine(theBoard[i' 0]' theBoard[i' 1]' theBoard[i' 2]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  for (int i = 0; i < 3 && !win; i++)                      win = isWinningLine(theBoard[i' 0]' theBoard[i' 1]' theBoard[i' 2]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  for (int i = 0; i < 3 && !win; i++)                      win = isWinningLine(theBoard[0' i]' theBoard[1' i]' theBoard[2' i]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  for (int i = 0; i < 3 && !win; i++)                      win = isWinningLine(theBoard[0' i]' theBoard[1' i]' theBoard[2' i]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  win = isWinningLine(theBoard[0' 0]' theBoard[1' 1]' theBoard[2' 2]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  win = isWinningLine(theBoard[0' 0]' theBoard[1' 1]' theBoard[2' 2]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  win = isWinningLine(theBoard[0' 2]' theBoard[1' 1]' theBoard[2' 0]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (!win)                  win = isWinningLine(theBoard[0' 2]' theBoard[1' 1]' theBoard[2' 0]);
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (this.ListOfMoves.Count() == 9)                  draw = true;
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (win || draw)              {                  // game over                  this.GameState = GameState.Finished;                  if (win)                  {                      WinnerId = ListOfPlayers[indexNextPlayerToMove];                      LoserId = ListOfPlayers[(indexNextPlayerToMove + 1) % 2];                  }                    // collect tasks up' so we await both notifications at the same time                  var promises = new List<Task>();                  // inform this player of outcome                  var playerGrain = GrainFactory.GetGrain<IPlayerGrain>(ListOfPlayers[indexNextPlayerToMove]);                  promises.Add(playerGrain.LeaveGame(this.GetPrimaryKey()' win ? GameOutcome.Win : GameOutcome.Draw));                    // inform other player of outcome                  playerGrain = GrainFactory.GetGrain<IPlayerGrain>(ListOfPlayers[(indexNextPlayerToMove + 1) % 2]);                  promises.Add(playerGrain.LeaveGame(this.GetPrimaryKey()' win ? GameOutcome.Lose : GameOutcome.Draw));                  await Task.WhenAll(promises);                  return this.GameState;              }
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: if (win || draw)              {                  // game over                  this.GameState = GameState.Finished;                  if (win)                  {                      WinnerId = ListOfPlayers[indexNextPlayerToMove];                      LoserId = ListOfPlayers[(indexNextPlayerToMove + 1) % 2];                  }                    // collect tasks up' so we await both notifications at the same time                  var promises = new List<Task>();                  // inform this player of outcome                  var playerGrain = GrainFactory.GetGrain<IPlayerGrain>(ListOfPlayers[indexNextPlayerToMove]);                  promises.Add(playerGrain.LeaveGame(this.GetPrimaryKey()' win ? GameOutcome.Win : GameOutcome.Draw));                    // inform other player of outcome                  playerGrain = GrainFactory.GetGrain<IPlayerGrain>(ListOfPlayers[(indexNextPlayerToMove + 1) % 2]);                  promises.Add(playerGrain.LeaveGame(this.GetPrimaryKey()' win ? GameOutcome.Lose : GameOutcome.Draw));                  await Task.WhenAll(promises);                  return this.GameState;              }
Magic Number,OrleansXO.Grains,GameGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\GameGrain.cs,MakeMove,The following statement contains a magic number: indexNextPlayerToMove = (indexNextPlayerToMove + 1) % 2;
Magic Number,OrleansXO.Grains,PlayerGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\PlayerGrain.cs,AddOrdinalSuffix,The following statement contains a magic number: int nMod100 = n % 100;
Magic Number,OrleansXO.Grains,PlayerGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\PlayerGrain.cs,AddOrdinalSuffix,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)                  return String.Concat(number' "th");
Magic Number,OrleansXO.Grains,PlayerGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\PlayerGrain.cs,AddOrdinalSuffix,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)                  return String.Concat(number' "th");
Magic Number,OrleansXO.Grains,PlayerGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\PlayerGrain.cs,AddOrdinalSuffix,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return String.Concat(number' "st");                  case 2:                      return String.Concat(number' "nd");                  case 3:                      return String.Concat(number' "rd");                  default:                      return String.Concat(number' "th");              }
Magic Number,OrleansXO.Grains,PlayerGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\PlayerGrain.cs,AddOrdinalSuffix,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return String.Concat(number' "st");                  case 2:                      return String.Concat(number' "nd");                  case 3:                      return String.Concat(number' "rd");                  default:                      return String.Concat(number' "th");              }
Magic Number,OrleansXO.Grains,PlayerGrain,C:\repos\dotnet_orleans\Samples\TicTacToe\OrleansXO.Grains\PlayerGrain.cs,AddOrdinalSuffix,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return String.Concat(number' "st");                  case 2:                      return String.Concat(number' "nd");                  case 3:                      return String.Concat(number' "rd");                  default:                      return String.Concat(number' "th");              }
