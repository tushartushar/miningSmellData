Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Orleans.Transactions.Azure.Tests,AzureTransactionalStateStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\AzureTransactionalStateStorageTests.cs,StateStorageFactory,The length of the statement  "            var stateStorage = new AzureTableTransactionalStateStorage<TestState>(table' $"{partition}{DateTime.UtcNow.Ticks}"' jsonSettings' " is 129.
Long Statement,Orleans.Transactions.Azure.Tests,AzureTransactionalStateStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\AzureTransactionalStateStorageTests.cs,InitTableAsync,The length of the statement  "                logger.Info($"{(didCreate ? "Created" : "Attached to")} Azure storage table {tableName}"' (didCreate ? "Created" : "Attached to")); " is 131.
Long Statement,Orleans.Transactions.AzureStorage.Tests,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\TestFixture.cs,Configure,The length of the statement  "                    .ConfigureServices(services => services.AddSingletonNamedService<IRemoteCommitService' RemoteCommitService>(TransactionTestConstants.RemoteCommitService)) " is 154.
Long Statement,Orleans.Transactions.AzureStorage.Tests,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\TestFixture.cs,Configure,The length of the statement  "                        .AddScoped<IControlledTransactionFaultInjector>(sp => sp.GetService<ITransactionFaultInjector>() as IControlledTransactionFaultInjector); " is 137.
Long Statement,Orleans.Transactions.AzureStorage.Tests,TxSiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\TestFixture.cs,Configure,The length of the statement  "                    .ConfigureServices(services => services.AddSingleton<ITransactionFaultInjector>(sp => new RandomErrorInjector(probability))); " is 125.
Long Statement,Orleans.Transactions.AzureStorage.Tests,TransactionRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\TransactionRecoveryTests.cs,TransactionWillRecoverAfterRandomSiloGracefulShutdown,The length of the statement  "            return this.testRunner.TransactionWillRecoverAfterRandomSiloGracefulShutdown(transactionTestGrainClassName' concurrent); " is 120.
Long Statement,Orleans.Transactions.AzureStorage.Tests,TransactionRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\TransactionRecoveryTests.cs,TransactionWillRecoverAfterRandomSiloUnGracefulShutdown,The length of the statement  "            return this.testRunner.TransactionWillRecoverAfterRandomSiloUnGracefulShutdown(transactionTestGrainClassName' concurrent); " is 122.
Magic Number,Orleans.Transactions.AzureStorage.Tests,TransactionRecoveryTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Transactions\Orleans.Transactions.Azure.Test\TransactionRecoveryTests.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 4;
