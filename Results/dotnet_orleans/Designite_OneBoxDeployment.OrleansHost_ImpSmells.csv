Implementation smell,Namespace,Class,File,Method,Description
Magic Number,OneBoxDeployment.OrleansHost,Program,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\src\OneBoxDeployment.OrleansHost\Program.cs,BuildOrleansHost,The following statement contains a magic number: var siloBuilder = new SiloHostBuilder()                 .ConfigureLogging((hostingContext' logging) =>                 {                     //TODO: Logging slows down testing a bit.                     //logging.AddConfiguration(hostingContext.Configuration.GetSection("Logging"));                     logging.AddConsole();                     logging.AddDebug();                 })                 .UsePerfCounterEnvironmentStatistics()                 .Configure<ClusterOptions>(options =>                 {                     options.ClusterId = clusterConfig.ClusterOptions.ClusterId;                     options.ServiceId = clusterConfig.ClusterOptions.ServiceId;                 })                 .UseAdoNetClustering(options =>                 {                     options.Invariant = clusterConfig.ConnectionConfig.AdoNetConstant;                     options.ConnectionString = clusterConfig.ConnectionConfig.ConnectionString;                 })                 .Configure<EndpointOptions>(options =>                 {                     options.AdvertisedIPAddress = clusterConfig.EndPointOptions.AdvertisedIPAddress ?? IPAddress.Loopback;                     options.GatewayListeningEndpoint = clusterConfig.EndPointOptions.GatewayListeningEndpoint;                     options.GatewayPort = clusterConfig.EndPointOptions.GatewayPort;                     options.SiloListeningEndpoint = clusterConfig.EndPointOptions.SiloListeningEndpoint;                     options.SiloPort = clusterConfig.EndPointOptions.SiloPort;                 })                 .Configure<SiloMessagingOptions>(options =>                 {                     options.ResponseTimeout = TimeSpan.FromSeconds(5);                 })                 .ConfigureApplicationParts(parts => parts.AddApplicationPart(typeof(TestStateGrain).Assembly).WithReferences())                 .UseAdoNetReminderService(options =>                 {                     options.Invariant = clusterConfig.ReminderConfigs[0].AdoNetConstant;                     options.ConnectionString = clusterConfig.ReminderConfigs[0].ConnectionString;                 })                 .AddAdoNetGrainStorage(clusterConfig.StorageConfigs[0].Name' options =>                 {                     options.Invariant = clusterConfig.StorageConfigs[0].AdoNetConstant;                     options.ConnectionString = clusterConfig.StorageConfigs[0].ConnectionString;                 });
