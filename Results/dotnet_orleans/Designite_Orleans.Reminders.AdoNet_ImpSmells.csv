Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.Reminders.AdoNet.Storage,RelationalStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorageExtensions.cs,ExecuteMultipleInsertIntoAsync,Cyclomatic complexity of the method is 10
Long Parameter List,Orleans.Reminders.AdoNet.Storage,DbExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbExtensions.cs,CreateParameter,The method has 6 parameters. Parameters: command' direction' parameterName' value' size' dbType
Long Parameter List,Orleans.Reminders.AdoNet.Storage,DbExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbExtensions.cs,AddParameter,The method has 6 parameters. Parameters: command' parameterName' value' direction' size' dbType
Long Parameter List,Orleans.Reminders.AdoNet.Storage,DbConstants,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConstantsStore.cs,DbConstants,The method has 7 parameters. Parameters: startEscapeIndicator' endEscapeIndicator' unionAllSelectTemplate' isSynchronousAdoNetImplementation' supportsStreamNatively' supportsCommandCancellation' commandInterceptor
Long Parameter List,Orleans.Reminders.AdoNet.Storage,IRelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\IRelationalStorage.cs,ReadAsync,The method has 5 parameters. Parameters: query' parameterProvider' selector' cancellationToken' commandBehavior
Long Parameter List,Orleans.Reminders.AdoNet.Storage,RelationalOrleansQueries,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalOrleansQueries.cs,UpsertReminderRowAsync,The method has 5 parameters. Parameters: serviceId' grainRef' reminderName' startTime' period
Long Parameter List,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ReadAsync,The method has 5 parameters. Parameters: query' parameterProvider' selector' cancellationToken' commandBehavior
Long Parameter List,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ExecuteAsync,The method has 6 parameters. Parameters: query' parameterProvider' executor' selector' cancellationToken' commandBehavior
Long Parameter List,Orleans.Reminders.AdoNet.Storage,RelationalStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorageExtensions.cs,ExecuteMultipleInsertIntoAsync,The method has 7 parameters. Parameters: storage' tableName' parameters' cancellationToken' nameMap' onlyOnceColumns' useSqlParams
Long Identifier,Orleans.Reminders.AdoNet.Storage,CachedFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,CachedFactory,The length of the parameter factoryAssemblyQualifiedNameKey is 31.
Long Identifier,Orleans.Reminders.AdoNet.Storage,CachedFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,,The length of the parameter FactoryAssemblyQualifiedNameKey is 31.
Long Identifier,Orleans.Reminders.AdoNet.Storage,DbConstants,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConstantsStore.cs,DbConstants,The length of the parameter isSynchronousAdoNetImplementation is 33.
Long Identifier,Orleans.Reminders.AdoNet.Storage,DbConstants,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConstantsStore.cs,,The length of the parameter IsSynchronousAdoNetImplementation is 33.
Long Identifier,Orleans.Reminders.AdoNet.Storage,RelationalOrleansQueries,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalOrleansQueries.cs,,The length of the parameter InsertStatisticsMultiupdateColumns is 34.
Long Identifier,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,,The length of the parameter isSynchronousAdoNetImplementation is 33.
Long Statement,Orleans.Runtime.ReminderService,AdoNetReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Orleans.Reminders.AdoNet\ReminderService\AdoNetReminderTable.cs,Init,The length of the statement  "            this.orleansQueries = await RelationalOrleansQueries.CreateInstance(this.options.Invariant' this.options.ConnectionString' this.grainReferenceConverter); " is 153.
Long Statement,Orleans.Runtime.ReminderService,AdoNetReminderTable,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Orleans.Reminders.AdoNet\ReminderService\AdoNetReminderTable.cs,UpsertRow,The length of the statement  "            return this.orleansQueries.UpsertReminderRowAsync(this.serviceId' entry.GrainRef' entry.ReminderName' entry.StartAt' entry.Period);             " is 131.
Long Statement,Orleans.Configuration,AdoNetReminderTableOptionsValidator,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Orleans.Reminders.AdoNet\ReminderService\AdoNetReminderTableOptionsValidator.cs,ValidateConfiguration,The length of the statement  "                throw new OrleansConfigurationException($"Invalid {nameof(AdoNetReminderTableOptions)} values for {nameof(AdoNetReminderTable)}. {nameof(options.Invariant)} is required."); " is 172.
Long Statement,Orleans.Configuration,AdoNetReminderTableOptionsValidator,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Orleans.Reminders.AdoNet\ReminderService\AdoNetReminderTableOptionsValidator.cs,ValidateConfiguration,The length of the statement  "                throw new OrleansConfigurationException($"Invalid {nameof(AdoNetReminderTableOptions)} values for {nameof(AdoNetReminderTable)}. {nameof(options.ConnectionString)} is required."); " is 179.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbConnectionFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,GetFactory,The length of the statement  "                throw new InvalidOperationException($"Unable to find and/or load a candidate assembly for '{invariantName}' invariant name."' exc); " is 131.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbConnectionFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,GetFactory,The length of the statement  "                throw new InvalidOperationException($"Can't find database provider factory with '{invariantName}' invariant name. Please make sure that your ADO.Net provider package library is deployed with your application."); " is 211.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbConnectionFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,GetFactory,The length of the statement  "                throw new InvalidOperationException($"Unable to load type '{providerFactoryDefinition.Item2}' for '{invariantName}' invariant name."); " is 134.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbConnectionFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,GetFactory,The length of the statement  "            var prop = providerFactoryType.GetFields().SingleOrDefault(p => string.Equals(p.Name' "Instance"' StringComparison.OrdinalIgnoreCase) && p.IsStatic); " is 149.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbConnectionFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,GetFactory,The length of the statement  "                throw new InvalidOperationException($"Invalid provider type '{providerFactoryDefinition.Item2}' for '{invariantName}' invariant name."); " is 136.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbConnectionFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbConnectionFactory.cs,CreateConnection,The length of the statement  "                throw new InvalidOperationException($"Database provider factory: '{invariantName}' did not return a connection object."); " is 121.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbExtensions.cs,GetValueOrDefaultAsync,The length of the statement  "            return (await record.IsDBNullAsync(ordinal).ConfigureAwait(false)) ? @default : (await record.GetFieldValueAsync<TValue>(ordinal).ConfigureAwait(false)); " is 153.
Long Statement,Orleans.Reminders.AdoNet.Storage,DbExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbExtensions.cs,ReflectionParameterProvider,The length of the statement  "                    parameter.ParameterName = nameMap != null && nameMap.ContainsKey(properties[i].Name) ? nameMap[property.Name] : properties[i].Name; " is 131.
Long Statement,Orleans.Reminders.AdoNet.Storage,Converters,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbStoredQueries.cs,GetReminderEntry,The length of the statement  "                        //GetValue<int> causes an InvalidCastException with oracle data provider. See https://github.com/dotnet/orleans/issues/3561 " is 123.
Long Statement,Orleans.Reminders.AdoNet.Storage,Converters,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbStoredQueries.cs,GetMembershipEntry,The length of the statement  "                //TODO: This is a bit of hack way to check in the current version if there's membership data or not' but if there's a start time' there's member.             " is 145.
Long Statement,Orleans.Reminders.AdoNet.Storage,Converters,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\DbStoredQueries.cs,GetSiloAddress,The length of the statement  "                //GetValue<int> causes an InvalidCastException with orcale data provider. See https://github.com/dotnet/orleans/issues/3561 " is 123.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalOrleansQueries,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalOrleansQueries.cs,CreateInstance,The length of the statement  "            var queries = await storage.ReadAsync(DbStoredQueries.GetQueriesKey' DbStoredQueries.Converters.GetQueryKeyAndValue' null); " is 123.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalOrleansQueries,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalOrleansQueries.cs,CreateInstance,The length of the statement  "            return new RelationalOrleansQueries(storage' new DbStoredQueries(queries.ToDictionary(q => q.Key' q => q.Value))' grainReferenceConverter); " is 139.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalOrleansQueries,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalOrleansQueries.cs,ReadReminderRowsAsync,The length of the statement  "            return ReadAsync(dbStoredQueries.ReadReminderRowsKey' record => DbStoredQueries.Converters.GetReminderEntry(record' this.grainReferenceConverter)' command => " is 157.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalOrleansQueries,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalOrleansQueries.cs,ReadReminderRowsAsync,The length of the statement  "            return ReadAsync(query' record => DbStoredQueries.Converters.GetReminderEntry(record' this.grainReferenceConverter)' command => " is 127.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalOrleansQueries,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalOrleansQueries.cs,ReadReminderRowAsync,The length of the statement  "            return ReadAsync(dbStoredQueries.ReadReminderRowKey' record => DbStoredQueries.Converters.GetReminderEntry(record' this.grainReferenceConverter)' command => " is 156.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ReadAsync,The length of the statement  "            //If the query is something else that is not acceptable (e.g. an empty string)' there will an appropriate database exception. " is 125.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ReadAsync,The length of the statement  "            return (await ExecuteAsync(query' parameterProvider' ExecuteReaderAsync' selector' cancellationToken' commandBehavior).ConfigureAwait(false)).Item1; " is 148.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ExecuteAsync,The length of the statement  "            //If the query is something else that is not acceptable (e.g. an empty string)' there will an appropriate database exception. " is 125.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ExecuteAsync,The length of the statement  "            return (await ExecuteAsync(query' parameterProvider' ExecuteReaderAsync' (unit' id' c) => Task.FromResult(unit)' cancellationToken' commandBehavior).ConfigureAwait(false)).Item2; " is 178.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ExecuteReaderAsync,The length of the statement  "            using(var reader = await command.ExecuteReaderAsync(commandBehavior' cancellationToken).ConfigureAwait(continueOnCapturedContext: false)) " is 137.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,ExecuteReaderAsync,The length of the statement  "                        cancellationRegistration = cancellationToken.Register(CommandCancellation' Tuple.Create(reader' command)' useSynchronizationContext: false); " is 140.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,CommandCancellation,The length of the statement  "            //The MSDN documentation tells that DbCommand.Cancel() should not be called for SqlCommand if the reader has been closed " is 120.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorage.cs,CommandCancellation,The length of the statement  "            //despite the connection already closed. Source: https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.cancel(v=vs.110).aspx. " is 145.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorageExtensions.cs,ExecuteMultipleInsertIntoAsync,The length of the statement  "                columns = string.Join("'"' nameMap == null ? properties.Select(pn => string.Format("{0}{1}{2}"' startEscapeIndicator' pn.Name' endEscapeIndicator)) : properties.Select(pn => string.Format("{0}{1}{2}"' startEscapeIndicator' (nameMap.ContainsKey(pn.Name) ? nameMap[pn.Name] : pn.Name)' endEscapeIndicator))); " is 306.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorageExtensions.cs,ExecuteMultipleInsertIntoAsync,The length of the statement  "                            var parameterName = string.Format("@{0}"' (nameMap.ContainsKey(onlyOnceProperties[i].Name) ? nameMap[onlyOnceProperties[i].Name] : onlyOnceProperties[i].Name)); " is 160.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorageExtensions.cs,ExecuteMultipleInsertIntoAsync,The length of the statement  "                var multiProperties = onlyOnceColumns == null ? properties : properties.Where(pn => !onlyOnceColumns.Contains(pn.Name)).Select(pn => pn).ToArray(); " is 147.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorageExtensions.cs,ExecuteMultipleInsertIntoAsync,The length of the statement  "            var query = string.Format(insertIntoValuesTemplate' tableName' columns' string.Join(storageConsts.UnionAllSelectTemplate' values)); " is 131.
Long Statement,Orleans.Reminders.AdoNet.Storage,RelationalStorageExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\AdoNet\Shared\Storage\RelationalStorageExtensions.cs,ReadAsync,The length of the statement  "            return storage.ReadAsync(query' parameterProvider' (record' i' cancellationToken) => Task.FromResult(selector(record))); " is 120.
