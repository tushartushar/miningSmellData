Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,,The length of the parameter ConcurrentTransactionsTransactions is 34.
Long Statement,Benchmarks.Ping,PingBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Ping\PingBenchmark.cs,FullRunAsync,The length of the statement  "            Report[] reports = await Task.WhenAll(Enumerable.Range(0' 200).Select(i => RunAsync(i' 100' TimeSpan.FromSeconds(30)))); " is 120.
Long Statement,Benchmarks.Ping,PingBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Ping\PingBenchmark.cs,FullRunAsync,The length of the statement  "                finalReport.Elapsed = TimeSpan.FromMilliseconds(Math.Max(finalReport.Elapsed.TotalMilliseconds' report.Elapsed.TotalMilliseconds)); " is 131.
Long Statement,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,RunAgainstMemory,The length of the statement  "            Factory<Task<ITransactionLogStorage>> storageFactory = () => Task.FromResult<ITransactionLogStorage>(new InMemoryTransactionLogStorage()); " is 138.
Long Statement,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,Run,The length of the statement  "            ITransactionManager tm = new Orleans.Transactions.TransactionManager(new TransactionLog(storageFactory)' Options.Create(new TransactionsOptions())' NullLoggerFactory.Instance' NullTelemetryProducer.Instance' () => new NodeConfiguration()' LogMaintenanceInterval); " is 263.
Long Statement,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,Run,The length of the statement  "                int generateCount = Math.Min(TransactionsPerRun - generatedTransactions' ConcurrentTransactionsTransactions - transactionsInFlight.Count); " is 138.
Long Statement,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,Run,The length of the statement  "                StartTransactionsResponse startResponse = await tms.StartTransactions(TransactionBatchTimeouts.Take(generateCount).ToList()); " is 125.
Long Statement,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,Run,The length of the statement  "            Console.WriteLine($"{generatedTransactions} Transactions performed in {sw.ElapsedMilliseconds}ms.  Succeeded: {success}' Failed: {failed}."); " is 141.
Long Statement,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,FullRunAsync,The length of the statement  "                finalReport.Elapsed = TimeSpan.FromMilliseconds(Math.Max(finalReport.Elapsed.TotalMilliseconds' report.Elapsed.TotalMilliseconds)); " is 131.
Long Statement,Benchmarks.Transactions,SiloBuilderFactory,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,CreateSiloBuilder,The length of the statement  "                    .ConfigureLogging(builder => TestingUtils.ConfigureDefaultLoggingBuilder(builder' TestingUtils.CreateTraceFileName(siloName' clusterConfiguration.Globals.ClusterId))) " is 166.
Magic Number,Benchmarks.MapReduce,MapReduceBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\MapReduce\MapReduceBenchmark.cs,Bench,The following statement contains a magic number: var pipelines = Enumerable                  .Range(0' this._pipelineParallelization)                  .AsParallel()                  .WithDegreeOfParallelism(4)                  .Select(async i =>                  {                      await BenchCore();                  });
Magic Number,Benchmarks.MapReduce,MapReduceBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\MapReduce\MapReduceBenchmark.cs,BenchCore,The following statement contains a magic number: while (Interlocked.Increment(ref this._currentRepeat) < this._repeats)              {                  await mapper.SendAsync(this._text);                  while (!resultList.Any() || resultList.First().Count < 84) // rough way of checking of pipeline completition.                  {                      resultList = await collector.ReceiveAll();                  }              }
Magic Number,Benchmarks.MapReduce,MapReduceBenchmarkConfig,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\MapReduce\MapReduceBenchmarkConfig.cs,MapReduceBenchmarkConfig,The following statement contains a magic number: Add(new Job              {                  Run = {                      LaunchCount = 1'                      TargetCount = 2'                      WarmupCount = 0                  }              });
Magic Number,Benchmarks.Ping,PingBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Ping\PingBenchmark.cs,FullRunAsync,The following statement contains a magic number: Report[] reports = await Task.WhenAll(Enumerable.Range(0' 200).Select(i => RunAsync(i' 100' TimeSpan.FromSeconds(30))));
Magic Number,Benchmarks.Ping,PingBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Ping\PingBenchmark.cs,FullRunAsync,The following statement contains a magic number: Report[] reports = await Task.WhenAll(Enumerable.Range(0' 200).Select(i => RunAsync(i' 100' TimeSpan.FromSeconds(30))));
Magic Number,Benchmarks.Ping,PingBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Ping\PingBenchmark.cs,FullRunAsync,The following statement contains a magic number: Report[] reports = await Task.WhenAll(Enumerable.Range(0' 200).Select(i => RunAsync(i' 100' TimeSpan.FromSeconds(30))));
Magic Number,Benchmarks.Ping,PingBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Ping\PingBenchmark.cs,FullRunAsync,The following statement contains a magic number: Console.WriteLine($"{finalReport.Succeeded * 1000 / finalReport.Elapsed.TotalMilliseconds} calls per second.");
Magic Number,Benchmarks.Ping,PingBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Ping\PingBenchmark.cs,RunAsync,The following statement contains a magic number: while (report == null)              {                  await Task.Delay(1000);                  report = await load.TryGetReport();              }
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.Int = 89;
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.NonSerializedInt = 39;
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.SetObsoleteInt(38);
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.Struct = new SomeStruct(10)              {                  Id = Guid.NewGuid()'                  PublicValue = 6'                  ValueWithPrivateGetter = 7              };
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.Struct = new SomeStruct(10)              {                  Id = Guid.NewGuid()'                  PublicValue = 6'                  ValueWithPrivateGetter = 7              };
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.Struct = new SomeStruct(10)              {                  Id = Guid.NewGuid()'                  PublicValue = 6'                  ValueWithPrivateGetter = 7              };
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.Struct.SetValueWithPrivateSetter(8);
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.complexClass.Struct.SetPrivateValue(9);
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.largeTestData.SetBit(13);
Magic Number,Benchmarks.Serialization,SerializationBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,BenchmarkSetup,The following statement contains a magic number: this.largeTestData.SetEnemy(17' CampaignEnemyTestType.Enemy1);
Magic Number,Benchmarks.Serialization,InnerType,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Serialization\SerializationBenchmarks.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (this.Id.GetHashCode() * 397) ^ (this.Something?.GetHashCode() ?? 0);              }
Magic Number,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,Run,The following statement contains a magic number: Console.WriteLine($"{success * 1000 / sw.ElapsedMilliseconds} Transactions/sec.");
Magic Number,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,CommitAndCount,The following statement contains a magic number: if (commitResponse.CommitResult.Count != 0)              {                  Console.WriteLine($"Commited {commitResponse.CommitResult.Count} Transactions.");              }              else await Task.Delay(10);
Magic Number,Benchmarks.TransactionManager,TransactionManagerBenchmarks,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\TransactionManager\TransactionManagerBentchmarks.cs,AzureStorageFactory,The following statement contains a magic number: var azureConfig = Options.Create(new AzureTransactionLogOptions()              {                  // TODO: Find better way for test isolation.                  TableName = $"TransactionLog{((uint)Guid.NewGuid().GetHashCode()) % 100000}"'                  ConnectionString = TestDefaultConfiguration.DataConnectionString              });
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,FullRunAsync,The following statement contains a magic number: Report[] reports = await Task.WhenAll(Enumerable.Range(0' 20).Select(i => RunAsync(i' 5000' 300)));
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,FullRunAsync,The following statement contains a magic number: Report[] reports = await Task.WhenAll(Enumerable.Range(0' 20).Select(i => RunAsync(i' 5000' 300)));
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,FullRunAsync,The following statement contains a magic number: Report[] reports = await Task.WhenAll(Enumerable.Range(0' 20).Select(i => RunAsync(i' 5000' 300)));
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,FullRunAsync,The following statement contains a magic number: Console.WriteLine($"{finalReport.Succeeded * 1000 / finalReport.Elapsed.TotalMilliseconds} transactions per second.");
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,WarmUpAsync,The following statement contains a magic number: return Task.WhenAll(Enumerable.Range(0' 100).Select(i => RunAsync(i' 100' 10)));
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,WarmUpAsync,The following statement contains a magic number: return Task.WhenAll(Enumerable.Range(0' 100).Select(i => RunAsync(i' 100' 10)));
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,WarmUpAsync,The following statement contains a magic number: return Task.WhenAll(Enumerable.Range(0' 100).Select(i => RunAsync(i' 100' 10)));
Magic Number,Benchmarks.Transactions,TransactionBenchmark,C:\repos\dotnet_orleans\test\Benchmarks\Benchmarks\Transactions\TransactionBenchmark.cs,RunAsync,The following statement contains a magic number: while (report == null)              {                  await Task.Delay(1000);                  report = await load.TryGetReport();              }
