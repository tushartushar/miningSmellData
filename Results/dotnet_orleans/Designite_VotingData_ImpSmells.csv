Implementation smell,Namespace,Class,File,Method,Description
Long Statement,VotingData,Program,D:\research\architectureSmells\repos\dotnet_orleans\Samples\2.0\ServiceFabricMesh\VotingApp\VotingData\Program.cs,Main,The length of the statement  "                .UseAzureStorageClustering(options => options.ConnectionString = Environment.GetEnvironmentVariable("CLUSTERING_CONNECTION_STRING")) " is 132.
Magic Number,VotingData,Program,D:\research\architectureSmells\repos\dotnet_orleans\Samples\2.0\ServiceFabricMesh\VotingApp\VotingData\Program.cs,Main,The following statement contains a magic number: var silo = new SiloHostBuilder()                  .ConfigureEndpoints(siloPort: 30001' gatewayPort: 30002' listenOnAnyHostAddress: true)                  .Configure<ClusterOptions>(options =>                  {                      options.ClusterId = "dev";                      options.ServiceId = "votingapp";                  })                  .UseAzureStorageClustering(options => options.ConnectionString = Environment.GetEnvironmentVariable("CLUSTERING_CONNECTION_STRING"))                  .ConfigureLogging(logging => logging.AddConsole())                  .AddAzureBlobGrainStorage("votes"'                      options =>                      {                          options.ContainerName = "votes";                          options.UseJson = true;                          options.ConnectionString = Environment.GetEnvironmentVariable("PERSISTENCE_CONNECTION_STRING");                      })                  .Build();
Magic Number,VotingData,Program,D:\research\architectureSmells\repos\dotnet_orleans\Samples\2.0\ServiceFabricMesh\VotingApp\VotingData\Program.cs,Main,The following statement contains a magic number: var silo = new SiloHostBuilder()                  .ConfigureEndpoints(siloPort: 30001' gatewayPort: 30002' listenOnAnyHostAddress: true)                  .Configure<ClusterOptions>(options =>                  {                      options.ClusterId = "dev";                      options.ServiceId = "votingapp";                  })                  .UseAzureStorageClustering(options => options.ConnectionString = Environment.GetEnvironmentVariable("CLUSTERING_CONNECTION_STRING"))                  .ConfigureLogging(logging => logging.AddConsole())                  .AddAzureBlobGrainStorage("votes"'                      options =>                      {                          options.ContainerName = "votes";                          options.UseJson = true;                          options.ConnectionString = Environment.GetEnvironmentVariable("PERSISTENCE_CONNECTION_STRING");                      })                  .Build();
