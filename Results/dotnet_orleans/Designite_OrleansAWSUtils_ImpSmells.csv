Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrleansAWSUtils,AWSUtils,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\AWSUtils.cs,GetRegionEndpoint,Cyclomatic complexity of the method is 12
Complex Method,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Orleans.Runtime.MembershipService,SiloInstanceRecord,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\SiloInstanceRecord.cs,SiloInstanceRecord,Cyclomatic complexity of the method is 15
Complex Method,Orleans.Runtime.MembershipService,SiloInstanceRecord,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\SiloInstanceRecord.cs,GetFields,Cyclomatic complexity of the method is 9
Complex Method,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,Cyclomatic complexity of the method is 11
Complex Method,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,UpsertEntryAsync,Cyclomatic complexity of the method is 12
Long Parameter List,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,UpsertEntryAsync,The method has 7 parameters.
Long Parameter List,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,QueryAsync,The method has 6 parameters.
Long Parameter List,OrleansAWSUtils.Streams,SQSAdapter,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapter.cs,SQSAdapter,The method has 5 parameters.
Long Parameter List,OrleansAWSUtils.Streams,SQSAdapter,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapter.cs,QueueMessageBatchAsync,The method has 5 parameters.
Long Parameter List,OrleansAWSUtils.Streams,SQSBatchContainer,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSBatchContainer.cs,SQSBatchContainer,The method has 5 parameters.
Long Parameter List,OrleansAWSUtils.Streams,SQSBatchContainer,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSBatchContainer.cs,ToSQSMessage,The method has 5 parameters.
Long Statement,OrleansAWSUtils,AWSUtils,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\AWSUtils.cs,ValidateDynamoDBPartitionKey,The length of the statement  "		throw new ArgumentException (string.Format ("Key length {0} is too long to be an DynamoDB partition key. Key={1}"' key.Length' key)); " is 133.
Long Statement,OrleansAWSUtils,AWSUtils,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\AWSUtils.cs,ValidateDynamoDBRowKey,The length of the statement  "		throw new ArgumentException (string.Format ("Key length {0} is too long to be an DynamoDB row key. Key={1}"' key.Length' key)); " is 127.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBGatewayListProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBGatewayListProvider.cs,GetGateways,The length of the statement  "		return SiloAddress.New (new IPEndPoint (IPAddress.Parse (gateway [SiloInstanceRecord.ADDRESS_PROPERTY_NAME].S)' int.Parse (gateway [SiloInstanceRecord.PROXY_PORT_PROPERTY_NAME].N))' int.Parse (gateway [SiloInstanceRecord.GENERATION_PROPERTY_NAME].N)).ToGatewayUri (); " is 267.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,DeleteMembershipTableEntries,The length of the statement  "		logger.Error (ErrorCode.MembershipBase' string.Format ("Unable to delete membership records on table {0} for deploymentId {1}: Exception={2}"' TABLE_NAME_DEFAULT_VALUE' deploymentId' exc)); " is 189.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,ReadRow,The length of the statement  "		var entry = await storage.ReadSingleEntryAsync (TABLE_NAME_DEFAULT_VALUE' keys' fields => new SiloInstanceRecord (fields)); " is 123.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,ReadRow,The length of the statement  "			logger.Verbose2 ("Read my entry {0} Table=" + Environment.NewLine + "{1}"' siloAddress.ToLongString ()' data.ToString ()); " is 122.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,UpdateRow,The length of the statement  "			await storage.UpsertEntryAsync (TABLE_NAME_DEFAULT_VALUE' siloEntry.GetKeys ()' siloEntry.GetFields ()' etagConditionalExpression' conditionalValues); " is 150.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,Parse,The length of the statement  "	parse.SiloAddress = SiloAddress.New (new IPEndPoint (IPAddress.Parse (tableEntry.Address)' tableEntry.Port)' tableEntry.Generation); " is 132.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,Parse,The length of the statement  "	parse.StartTime = !string.IsNullOrEmpty (tableEntry.StartTime) ? LogFormatter.ParseDate (tableEntry.StartTime) : default(DateTime); " is 131.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,Parse,The length of the statement  "	parse.IAmAliveTime = !string.IsNullOrEmpty (tableEntry.IAmAliveTime) ? LogFormatter.ParseDate (tableEntry.IAmAliveTime) : default(DateTime); " is 140.
Long Statement,Orleans.Runtime.MembershipService,DynamoDBMembershipTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Membership\DynamoDBMembershipTable.cs,Parse,The length of the statement  "		throw new OrleansException (String.Format ("SuspectingSilos.Length of {0} as read from Azure table is not eqaul to SuspectingTimes.Length of {1}"' suspectingSilos.Count' suspectingTimes.Count)); " is 194.
Long Statement,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,ReadRows,The length of the statement  "		var records = await storage.ScanAsync (TABLE_NAME_DEFAULT_VALUE' expressionValues' expression' Resolve).ConfigureAwait (false); " is 127.
Long Statement,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,ReadRows,The length of the statement  "		var records = await storage.ScanAsync (TABLE_NAME_DEFAULT_VALUE' expressionValues' expression' Resolve).ConfigureAwait (false); " is 127.
Long Statement,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,TestOnlyClearTable,The length of the statement  "		var records = await storage.ScanAsync (TABLE_NAME_DEFAULT_VALUE' expressionValues' expression' item => new Dictionary<string' AttributeValue> { " is 143.
Long Statement,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,CreateClient,The length of the statement  "	if (service.StartsWith ("http://"' StringComparison.OrdinalIgnoreCase) || service.StartsWith ("https://"' StringComparison.OrdinalIgnoreCase)) { " is 144.
Long Statement,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,UpsertEntryAsync,The length of the statement  "		Logger.Verbose2 ("Upserting entry {0} with key(s) {1} into table {2}"' Utils.DictionaryToString (fields)' Utils.DictionaryToString (keys)' tableName); " is 150.
Long Statement,OrleansAWSUtils.Storage,SQSStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\SQSStorage.cs,ReportErrorAndRethrow,The length of the statement  "	var errMsg = String.Format ("Error doing {0} for SQS queue {1} " + Environment.NewLine + "Exception = {2}"' operation' QueueName' exc); " is 135.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,Init,The length of the statement  "	isDeleteStateOnClear = config.Properties.ContainsKey (DELETE_ON_CLEAR_PROPERTY_NAME) && "true".Equals (config.Properties [DELETE_ON_CLEAR_PROPERTY_NAME]' StringComparison.OrdinalIgnoreCase); " is 190.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,Init,The length of the statement  "	var initMsg = string.Format ("Init: Name={0} ServiceId={1} Table={2} DeleteStateOnClear={3}"' Name' serviceId' tableName' isDeleteStateOnClear); " is 144.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,Init,The length of the statement  "	this.jsonSettings = OrleansJsonSerializer.UpdateSerializerSettings (OrleansJsonSerializer.GetDefaultSerializerSettings (this.serializationManager' grainFactory)' config); " is 170.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,ReadStateAsync,The length of the statement  "		Log.Verbose3 (ErrorCode.StorageProviderBase' "Reading: GrainType={0} Pk={1} Grainid={2} from Table={3}"' grainType' partitionKey' grainReference' tableName); " is 157.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,ReadStateAsync,The length of the statement  "			BinaryState = fields.ContainsKey (BINARY_STATE_PROPERTY_NAME) ? fields [BINARY_STATE_PROPERTY_NAME].B.ToArray () : null' " is 120.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,WriteStateAsync,The length of the statement  "		Log.Error (ErrorCode.StorageProviderBase' string.Format ("Error Writing: GrainType={0} Grainid={1} ETag={2} to Table={3} Exception={4}"' grainType' grainReference' grainState.ETag' tableName' exc.Message)' exc); " is 211.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,ClearStateAsync,The length of the statement  "		Log.Verbose3 (ErrorCode.StorageProviderBase' "Clearing: GrainType={0} Pk={1} Grainid={2} ETag={3} DeleteStateOnClear={4} from Table={5}"' grainType' partitionKey' grainReference' grainState.ETag' isDeleteStateOnClear' tableName); " is 229.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,ClearStateAsync,The length of the statement  "		Log.Error (ErrorCode.StorageProviderBase' string.Format ("Error {0}: GrainType={1} Grainid={2} ETag={3} from Table={4} Exception={5}"' operation' grainType' grainReference' grainState.ETag' tableName' exc.Message)' exc); " is 220.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,ConvertToStorageFormat,The length of the statement  "			Log.Verbose3 ("Writing JSON data size = {0} for grain id = Partition={1} / Row={2}"' dataSize' entity.GrainReference' entity.GrainType); " is 136.
Long Statement,Orleans.Storage,DynamoDBStorageProvider,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\Provider\DynamoDBStorageProvider.cs,ConvertToStorageFormat,The length of the statement  "			Log.Verbose3 ("Writing binary data size = {0} for grain id = Partition={1} / Row={2}"' dataSize' entity.GrainReference' entity.GrainType); " is 138.
Long Statement,OrleansAWSUtils.Streams,SQSAdapter,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapter.cs,QueueMessageBatchAsync,The length of the statement  "		throw new ArgumentException ("SQSStream stream provider currebtly does not support non-null StreamSequenceToken."' "token"); " is 124.
Long Statement,OrleansAWSUtils.Streams,SQSAdapter,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapter.cs,QueueMessageBatchAsync,The length of the statement  "	var msg = SQSBatchContainer.ToSQSMessage (this.serializationManager' streamGuid' streamNamespace' events' requestContext); " is 122.
Long Statement,OrleansAWSUtils.Streams,SQSAdapterFactory,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapterFactory.cs,CreateAdapter,The length of the statement  "	var adapter = new SQSAdapter (this.serializationManager' streamQueueMapper' dataConnectionString' deploymentId' providerName); " is 126.
Long Statement,OrleansAWSUtils.Streams,SQSAdapterReceiver,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapterReceiver.cs,Shutdown,The length of the statement  "		// await the last storage operation' so after we shutdown and stop this receiver we don't get async operation completions from pending storage operations. " is 154.
Long Statement,OrleansAWSUtils.Streams,SQSAdapterReceiver,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapterReceiver.cs,GetQueueMessagesAsync,The length of the statement  "		int count = maxCount < 0 || maxCount == QueueAdapterConstants.UNLIMITED_GET_QUEUE_MSG ? SQSStorage.MAX_NUMBER_OF_MESSAGE_TO_PEAK : Math.Min (maxCount' SQSStorage.MAX_NUMBER_OF_MESSAGE_TO_PEAK); " is 193.
Long Statement,OrleansAWSUtils.Streams,SQSAdapterReceiver,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSAdapterReceiver.cs,GetQueueMessagesAsync,The length of the statement  "		List<IBatchContainer> azureQueueMessages = messages.Select (msg => (IBatchContainer)SQSBatchContainer.FromSQSMessage (this.serializationManager' msg' lastReadMessage++)).ToList (); " is 180.
Long Statement,OrleansAWSUtils.Streams,SQSBatchContainer,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSBatchContainer.cs,GetEvents,The length of the statement  "	return events.OfType<T> ().Select ((e' i) => Tuple.Create<T' StreamSequenceToken> (e' sequenceToken.CreateSequenceTokenForEvent (i))); " is 134.
Long Statement,OrleansAWSUtils.Streams,SQSBatchContainer,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Streams\SQSBatchContainer.cs,ToSQSMessage,The length of the statement  "	var sqsBatchMessage = new SQSBatchContainer (streamGuid' streamNamespace' events.Cast<object> ().ToList ()' requestContext); " is 124.
Magic Number,OrleansAWSUtils,AWSUtils,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\AWSUtils.cs,ValidateDynamoDBPartitionKey,The following statement contains a magic number: if (key.Length >= 2048)  	throw new ArgumentException (string.Format ("Key length {0} is too long to be an DynamoDB partition key. Key={1}"' key.Length' key));  
Magic Number,OrleansAWSUtils,AWSUtils,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\AWSUtils.cs,ValidateDynamoDBRowKey,The following statement contains a magic number: if (key.Length >= 1024)  	throw new ArgumentException (string.Format ("Key length {0} is too long to be an DynamoDB row key. Key={1}"' key.Length' key));  
Magic Number,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,TestOnlyClearTable,The following statement contains a magic number: try {  	var expression;  	var records = await storage.ScanAsync (TABLE_NAME_DEFAULT_VALUE' expressionValues' expression' item => new Dictionary<string' AttributeValue> {  		{  			REMINDER_ID_PROPERTY_NAME'  			item [REMINDER_ID_PROPERTY_NAME]  		}'  		{  			GRAIN_HASH_PROPERTY_NAME'  			item [GRAIN_HASH_PROPERTY_NAME]  		}  	}).ConfigureAwait (false);  	if (records.Count <= 25) {  		await storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' records);  	} else {  		List<Task> tasks = new List<Task> ();  		foreach (var batch in records.BatchIEnumerable (25)) {  			tasks.Add (storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' batch));  		}  		await Task.WhenAll (tasks);  	}  } catch (Exception exc) {  	logger.Warn (ErrorCode.ReminderServiceBase' exc);  	throw;  }  
Magic Number,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,TestOnlyClearTable,The following statement contains a magic number: try {  	var expression;  	var records = await storage.ScanAsync (TABLE_NAME_DEFAULT_VALUE' expressionValues' expression' item => new Dictionary<string' AttributeValue> {  		{  			REMINDER_ID_PROPERTY_NAME'  			item [REMINDER_ID_PROPERTY_NAME]  		}'  		{  			GRAIN_HASH_PROPERTY_NAME'  			item [GRAIN_HASH_PROPERTY_NAME]  		}  	}).ConfigureAwait (false);  	if (records.Count <= 25) {  		await storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' records);  	} else {  		List<Task> tasks = new List<Task> ();  		foreach (var batch in records.BatchIEnumerable (25)) {  			tasks.Add (storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' batch));  		}  		await Task.WhenAll (tasks);  	}  } catch (Exception exc) {  	logger.Warn (ErrorCode.ReminderServiceBase' exc);  	throw;  }  
Magic Number,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,TestOnlyClearTable,The following statement contains a magic number: if (records.Count <= 25) {  	await storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' records);  } else {  	List<Task> tasks = new List<Task> ();  	foreach (var batch in records.BatchIEnumerable (25)) {  		tasks.Add (storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' batch));  	}  	await Task.WhenAll (tasks);  }  
Magic Number,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,TestOnlyClearTable,The following statement contains a magic number: if (records.Count <= 25) {  	await storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' records);  } else {  	List<Task> tasks = new List<Task> ();  	foreach (var batch in records.BatchIEnumerable (25)) {  		tasks.Add (storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' batch));  	}  	await Task.WhenAll (tasks);  }  
Magic Number,OrleansAWSUtils.Reminders,DynamoDBReminderTable,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Reminders\DynamoDBReminderTable.cs,TestOnlyClearTable,The following statement contains a magic number: foreach (var batch in records.BatchIEnumerable (25)) {  	tasks.Add (storage.DeleteEntriesAsync (TABLE_NAME_DEFAULT_VALUE' batch));  }  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (serviceConfig)) {  	var value = serviceConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		service = value [1];  }  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	service = value [1];  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (secretKeyConfig)) {  	var value = secretKeyConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		secretKey = value [1];  }  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	secretKey = value [1];  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (accessKeyConfig)) {  	var value = accessKeyConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		accessKey = value [1];  }  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	accessKey = value [1];  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (readCapacityUnitsConfig)) {  	var value = readCapacityUnitsConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		readCapacityUnits = int.Parse (value [1]);  }  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	readCapacityUnits = int.Parse (value [1]);  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (writeCapacityUnitsConfig)) {  	var value = writeCapacityUnitsConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		writeCapacityUnits = int.Parse (value [1]);  }  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	writeCapacityUnits = int.Parse (value [1]);  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,CreateTable,The following statement contains a magic number: try {  	var response = await ddbClient.CreateTableAsync (request);  	TableDescription description = null;  	do {  		description = await GetTableDescription (tableName);  		await Task.Delay (2000);  	} while (description.TableStatus == TableStatus.CREATING);  	if (description.TableStatus != TableStatus.ACTIVE)  		throw new InvalidOperationException ();  } catch (Exception exc) {  	Logger.Error (ErrorCode.StorageProviderBase' exc);  	throw;  }  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,CreateTable,The following statement contains a magic number: do {  	description = await GetTableDescription (tableName);  	await Task.Delay (2000);  } while (description.TableStatus == TableStatus.CREATING);  
Magic Number,OrleansAWSUtils.Storage,DynamoDBStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\DynamoDBStorage.cs,CreateTable,The following statement contains a magic number: await Task.Delay (2000);  
Magic Number,OrleansAWSUtils.Storage,SQSStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\SQSStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (serviceConfig)) {  	var value = serviceConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		service = value [1];  }  
Magic Number,OrleansAWSUtils.Storage,SQSStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\SQSStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	service = value [1];  
Magic Number,OrleansAWSUtils.Storage,SQSStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\SQSStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (secretKeyConfig)) {  	var value = secretKeyConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		secretKey = value [1];  }  
Magic Number,OrleansAWSUtils.Storage,SQSStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\SQSStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	secretKey = value [1];  
Magic Number,OrleansAWSUtils.Storage,SQSStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\SQSStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (accessKeyConfig)) {  	var value = accessKeyConfig.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  		accessKey = value [1];  }  
Magic Number,OrleansAWSUtils.Storage,SQSStorage,F:\newReposMay17\dotnet_orleans\src\OrleansAWSUtils\Storage\SQSStorage.cs,ParseDataConnectionString,The following statement contains a magic number: if (value.Length == 2 && !string.IsNullOrWhiteSpace (value [1]))  	accessKey = value [1];  
