Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OneBoxDeployment.IntegrationTests,InMemoryLoggerProvider,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\InMemoryLogger.cs,Log,The method has 6 parameters. Parameters: categoryName' logLevel' eventId' state' exception' formatter
Long Parameter List,OneBoxDeployment.IntegrationTests,InMemoryLogger,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\InMemoryLogger.cs,Log,The method has 5 parameters. Parameters: logLevel' eventId' state' exception' formatter
Long Statement,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,InitializeAsync,The length of the statement  "            DefaultExtraParameters.Add(nameof(ClusterConfig)' JsonConvert.SerializeObject(siloConfig' Formatting.Indented' new IPAddressConverter()));" is 138.
Long Statement,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,InitializeAsync,The length of the statement  "            ApiHost = Program.InternalBuildWebHost(new[] { "--server.urls"' DefaultApiRootUrl }' DefaultExtraParameters' new[] { InMemoryLoggerProvider });" is 143.
Long Statement,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,InitializeAsync,The length of the statement  "            //IdentityHost = Identity.Program.InternalBuildWebHost(new[] { "--server.urls"' DefaultIdentityRootUrl }' new Dictionary<string' string> { { "WellKnownTestUsers"' wellKnownTestUsers }' { "integrationtest"' "yes" } });" is 217.
Long Statement,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,RestoreAndDropDatabaseSnapshot,The length of the statement  "                var restoreDatabaseSnapshotQuery = DatabaseManagementQueries.RestoreDatabaseFromSnapshot(databaseName' databaseSnapshotName);" is 125.
Long Statement,OneBoxDeployment.IntegrationTests,SecurityHeaderTestMessageHandler,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\SecurityHeaderTestMessageHandler.cs,SendAsync,The length of the statement  "            if(!response.Headers.Contains(CspHeader) || !response.Headers.GetValues(CspHeader).Any(header => header.Contains(CspReportUri)))" is 128.
Long Statement,OneBoxDeployment.IntegrationTests,SecurityHeaderTestMessageHandler,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\SecurityHeaderTestMessageHandler.cs,SendAsync,The length of the statement  "                throw new InvalidOperationException($"APIs should always define \"{CspHeader}\" header with contents of \"{CspReportUri}\".");" is 126.
Long Statement,OneBoxDeployment.IntegrationTests.Tests,FaultInjectionTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\FaultInjectionTests.cs,DataApiUnhandledExceptionsReturnHttp500WithJsonContent,The length of the statement  "            var response = await supposedlyFaultyRouteValue.Content.DeserializeAsync<ValidationProblemDetails>().ConfigureAwait(false);" is 123.
Long Statement,OneBoxDeployment.IntegrationTests.Tests,TestStateGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\TestStateGrainTests.cs,IncrementTwoRandomStatesByRandomNumber,The length of the statement  "            var grain1IncrementedResponse = await TestStateClient.IncrementByAsync(grainId1' grainIncrement1).ConfigureAwait(false);" is 120.
Long Statement,OneBoxDeployment.IntegrationTests.Tests,TestStateGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\TestStateGrainTests.cs,IncrementTwoRandomStatesByRandomNumber,The length of the statement  "            var grain2IncrementedResponse = await TestStateClient.IncrementByAsync(grainId2' grainIncrement2).ConfigureAwait(false);" is 120.
Magic Number,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,IntegrationTestFixture,The following statement contains a magic number: var circuitBreaker = HttpPolicyExtensions                 .HandleTransientHttpError()                 .AdvancedCircuitBreakerAsync(                     failureThreshold: 0.5'                     samplingDuration: TimeSpan.FromSeconds(10)'                     minimumThroughput: 2'                     durationOfBreak: TimeSpan.FromMilliseconds(300)'                     onBreak: onBreak'                     onReset: onReset);
Magic Number,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,IntegrationTestFixture,The following statement contains a magic number: var circuitBreaker = HttpPolicyExtensions                 .HandleTransientHttpError()                 .AdvancedCircuitBreakerAsync(                     failureThreshold: 0.5'                     samplingDuration: TimeSpan.FromSeconds(10)'                     minimumThroughput: 2'                     durationOfBreak: TimeSpan.FromMilliseconds(300)'                     onBreak: onBreak'                     onReset: onReset);
Magic Number,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,IntegrationTestFixture,The following statement contains a magic number: var circuitBreaker = HttpPolicyExtensions                 .HandleTransientHttpError()                 .AdvancedCircuitBreakerAsync(                     failureThreshold: 0.5'                     samplingDuration: TimeSpan.FromSeconds(10)'                     minimumThroughput: 2'                     durationOfBreak: TimeSpan.FromMilliseconds(300)'                     onBreak: onBreak'                     onReset: onReset);
Magic Number,OneBoxDeployment.IntegrationTests,IntegrationTestFixture,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\IntegrationTestFixture.cs,IntegrationTestFixture,The following statement contains a magic number: var circuitBreaker = HttpPolicyExtensions                 .HandleTransientHttpError()                 .AdvancedCircuitBreakerAsync(                     failureThreshold: 0.5'                     samplingDuration: TimeSpan.FromSeconds(10)'                     minimumThroughput: 2'                     durationOfBreak: TimeSpan.FromMilliseconds(300)'                     onBreak: onBreak'                     onReset: onReset);
Magic Number,OneBoxDeployment.IntegrationTests.Tests,TestStateGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\TestStateGrainTests.cs,IncrementTwoRandomStatesByRandomNumber,The following statement contains a magic number: var grainIncrement1 = rand.Next(-100' 100);
Magic Number,OneBoxDeployment.IntegrationTests.Tests,TestStateGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\TestStateGrainTests.cs,IncrementTwoRandomStatesByRandomNumber,The following statement contains a magic number: var grainIncrement1 = rand.Next(-100' 100);
Magic Number,OneBoxDeployment.IntegrationTests.Tests,TestStateGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\TestStateGrainTests.cs,IncrementTwoRandomStatesByRandomNumber,The following statement contains a magic number: var grainIncrement2 = rand.Next(-100' 100);
Magic Number,OneBoxDeployment.IntegrationTests.Tests,TestStateGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\TestStateGrainTests.cs,IncrementTwoRandomStatesByRandomNumber,The following statement contains a magic number: var grainIncrement2 = rand.Next(-100' 100);
Magic Number,OneBoxDeployment.IntegrationTests.Tests,TestStateGrainTests,D:\research\architectureSmells\repos\dotnet_orleans\Samples\OneBoxDeployment\test\OneBoxDeployment.IntegrationTests\Tests\TestStateGrainTests.cs,IncrementTwoRandomStatesByRandomNumber,The following statement contains a magic number: Assert.Equal(4' messages.Count(m => m.EventId == Events.TestEvent.Id));
