Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Orleans.Samples.Chirper.Network.Loader,ChirperNetworkLoader,C:\repos\dotnet_orleans\Samples\Chirper\NetworkLoader\ChirperNetworkLoader.cs,Run,The length of the statement  "            LogMessage("\t{0} users ({1} duplicates' {2} new)"' this.numUsers' this.duplicateNodes' this.numUsers - this.duplicateNodes); " is 125.
Long Statement,Orleans.Samples.Chirper.Network.Loader,ChirperNetworkLoader,C:\repos\dotnet_orleans\Samples\Chirper\NetworkLoader\ChirperNetworkLoader.cs,WaitForCompletion,The length of the statement  "            LogMessage("Loading Completed: {0} users' {1} relationship links' {2} errors"' this.numUsers' this.numRelationships' this.numErrors); " is 133.
Long Statement,Orleans.Samples.Chirper.Network.Loader,ChirperNetworkLoader,C:\repos\dotnet_orleans\Samples\Chirper\NetworkLoader\ChirperNetworkLoader.cs,AddChirperFollower,The length of the statement  "                ReportError(string.Format("Error adding follower relationship from user id {0} to user id {1}"' fromUserId' toUserId)' exc); " is 124.
Long Statement,Orleans.Samples.Chirper.Network.Loader,NetworkDataReader,C:\repos\dotnet_orleans\Samples\Chirper\NetworkLoader\NetworkDataReader.cs,ParseGraphMLData,The length of the statement  "            this.customDataUserAliasValue = xml.Elements(ns + "key").Single(e => e.Attribute("id").Value == "User.Alias").Attribute("attr.name").Value; " is 139.
Magic Number,Orleans.Samples.Chirper.Network.Loader,Program,C:\repos\dotnet_orleans\Samples\Chirper\NetworkLoader\Program.cs,Main,The following statement contains a magic number: try              {                  if (!prog.ParseArguments(args))                  {                      prog.PrintUsage();                      exitCode = -1;                  }                  else                  {                      Task<int> run = prog.Run();                        // Note: Unfortunately we can't use await in Main method.                      bool ok = run.Wait(timeout);                        if (run.IsFaulted)                      {                          Console.WriteLine("Error running client program: " + run.Exception);                          prog.DumpStatus();                          exitCode = 1;                      }                      else if (!ok)                      {                          Console.WriteLine("Timeout running client program");                          prog.DumpStatus();                          exitCode = 2;                      }                      else                      {                          exitCode = run.Result;                      }                  }              }              catch (Exception exc)              {                  prog.ReportError(thisProg.Name + " halting due to error"' exc);                  exitCode = 1;              }
