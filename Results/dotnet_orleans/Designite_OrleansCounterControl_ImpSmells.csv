Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.Counter.Control,CounterControl,F:\newReposMay17\dotnet_orleans\src\OrleansCounterControl\CounterControl.cs,ParseArguments,Cyclomatic complexity of the method is 26
Long Statement,Orleans.Counter.Control,CounterControl,F:\newReposMay17\dotnet_orleans\src\OrleansCounterControl\CounterControl.cs,Run,The length of the statement  "		ConsoleText.WriteError ("Error running " + typeof(CounterControl).GetTypeInfo ().Assembly.GetName ().Name + ".exe"' exc); " is 121.
Long Statement,Orleans.Counter.Control,CounterControl,F:\newReposMay17\dotnet_orleans\src\OrleansCounterControl\CounterControl.cs,InitConsoleLogging,The length of the statement  "	//var logWriter = new LogWriterToConsole(true' true); // Use compact console output & no timestamps / log message metadata " is 122.
Magic Number,Orleans.Counter.Control,CounterControl,F:\newReposMay17\dotnet_orleans\src\OrleansCounterControl\CounterControl.cs,Run,The following statement contains a magic number: try {  	if (Unregister) {  		ConsoleText.WriteStatus ("Unregistering Orleans performance counters with Windows");  		UnregisterWindowsPerfCounters (this.BruteForce);  	} else {  		ConsoleText.WriteStatus ("Registering Orleans performance counters with Windows");  		RegisterWindowsPerfCounters (true);  		// Always reinitialize counter registrations' even if already existed  	}  	ConsoleText.WriteStatus ("Operation completed successfully.");  	return 0;  } catch (Exception exc) {  	ConsoleText.WriteError ("Error running " + typeof(CounterControl).GetTypeInfo ().Assembly.GetName ().Name + ".exe"' exc);  	if (!BruteForce)  		return 2;  	ConsoleText.WriteStatus ("Ignoring error due to brute-force mode");  	return 0;  }  
Magic Number,Orleans.Counter.Control,CounterControl,F:\newReposMay17\dotnet_orleans\src\OrleansCounterControl\CounterControl.cs,Run,The following statement contains a magic number: if (!BruteForce)  	return 2;  
Magic Number,Orleans.Counter.Control,CounterControl,F:\newReposMay17\dotnet_orleans\src\OrleansCounterControl\CounterControl.cs,Run,The following statement contains a magic number: return 2;  
