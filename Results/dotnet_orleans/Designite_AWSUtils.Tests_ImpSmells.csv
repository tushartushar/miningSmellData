Implementation smell,Namespace,Class,File,Method,Description
Long Method,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The method has 102 lines of code.
Complex Method,Orleans.AWSUtils.Tests,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,GetRegionEndpoint,Cyclomatic complexity of the method is 16
Long Parameter List,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,RunPerfTest,The method has 7 parameters. Parameters: n' testName' target' actionNoState' actionMemory' actionMemoryStore' actionAWSTable
Long Parameter List,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,DynamoDBStorage,The method has 6 parameters. Parameters: loggerFactory' service' accessKey' secretKey' readCapacityUnits' writeCapacityUnits
Long Parameter List,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,UpsertEntryAsync,The method has 7 parameters. Parameters: tableName' keys' fields' conditionExpression' conditionValues' extraExpression' extraExpressionValues
Long Parameter List,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,QueryAsync,The method has 7 parameters. Parameters: tableName' keys' keyConditionExpression' resolver' indexName' scanIndexForward' lastEvaluatedKey
Long Parameter List,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,QueryAllAsync,The method has 6 parameters. Parameters: tableName' keys' keyConditionExpression' resolver' indexName' scanIndexForward
Long Statement,AWSUtils.Tests.MembershipTests,DynamoDBMembershipTableTest,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\MembershipTests\DynamoDBMembershipTableTest.cs,CreateGatewayListProvider,The length of the statement  "            return new DynamoDBGatewayListProvider(this.loggerFactory' Options.Create(options)' this.clusterOptions' this.gatewayOptions); " is 126.
Long Statement,AWSUtils.Tests.StorageTests,DynamoDBStorageProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageProviderTests.cs,InitDynamoDBGrainStorage,The length of the statement  "            DynamoDBGrainStorage store = ActivatorUtilities.CreateInstance<DynamoDBGrainStorage>(this.providerRuntime.ServiceProvider' options); " is 132.
Long Statement,AWSUtils.Tests.StorageTests,DynamoDBStorageProviderTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageProviderTests.cs,InitDynamoDBGrainStorage,The length of the statement  "            ISiloLifecycleSubject lifecycle = ActivatorUtilities.CreateInstance<SiloLifecycleSubject>(this.providerRuntime.ServiceProvider' new LifecycleSubject(null)); " is 156.
Long Statement,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_ReadAll_SinglePartition,The length of the statement  "            var data = manager.QueryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' keys' $"PartitionKey = :PK"' item => new UnitTestDynamoDBTableData(item)).Result; " is 156.
Long Statement,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_ReadAll_SinglePartition,The length of the statement  "            output.WriteLine("DynamoDBDataManagerStressTests_ReadAll completed. ReadAll {0} entries in {1} at {2} RPS"' count' sw.Elapsed' count / sw.Elapsed.TotalSeconds); " is 160.
Long Statement,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,WriteAlot_Async,The length of the statement  "                var promise = manager.UpsertEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' DynamoDBStorageTests.GetKeys(dataObject)' DynamoDBStorageTests.GetValues(dataObject)); " is 170.
Long Statement,AWSUtils.Tests.StorageTests,PersistenceGrainTests_AWSDynamoDBStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,AWSDynamoDBStore_ConvertToFromStorageFormat_GrainReference,The length of the statement  "            // NOTE: This test requires Silo to be running & Client init so that grain references can be resolved before serialization. " is 123.
Long Statement,AWSUtils.Tests.StorageTests,PersistenceGrainTests_AWSDynamoDBStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,AWSDynamoDBStore_ConvertToFromStorageFormat_GrainReference_List,The length of the statement  "            // NOTE: This test requires Silo to be running & Client init so that grain references can be resolved before serialization. " is 123.
Long Statement,AWSUtils.Tests.StorageTests,PersistenceGrainTests_AWSDynamoDBStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,AWSDynamoDBStore_ConvertToFromStorageFormat_GrainReference_List,The length of the statement  "            var convertedState = (GrainStateContainingGrainReferences)storage.ConvertFromStorageFormat(entity' initialState.GetType()); " is 123.
Long Statement,AWSUtils.Tests.StorageTests,PersistenceGrainTests_AWSDynamoDBStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,InitDynamoDBTableStorageProvider,The length of the statement  "            ISiloLifecycleSubject lifecycle = ActivatorUtilities.CreateInstance<SiloLifecycleSubject>(runtime.ServiceProvider' new LifecycleSubject(null)); " is 143.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_CreateItemAsync,The length of the statement  "            var persisted = await manager.ReadSingleEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(toPersist)' response => new UnitTestDynamoDBTableData(response) ); " is 170.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_UpsertItemAsync,The length of the statement  "            var persisted = await manager.ReadSingleEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(toPersist)' response => new UnitTestDynamoDBTableData(response)); " is 169.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_UpsertItemAsync,The length of the statement  "            var expValues = new Dictionary<string' AttributeValue> { { ":OldETag"' new AttributeValue { N = persistedEtag.ToString() } } }; " is 127.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_UpsertItemAsync,The length of the statement  "            await manager.UpsertEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(persisted)' GetValues(persisted)' expression' expValues); " is 141.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_UpsertItemAsync,The length of the statement  "            persisted = await manager.ReadSingleEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(toPersist)' response => new UnitTestDynamoDBTableData(response)); " is 165.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_UpsertItemAsync,The length of the statement  "                await manager.UpsertEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(toPersist)' GetValues(toPersist)' expression' expValues); " is 141.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_DeleteItemAsync,The length of the statement  "            var persisted = await manager.ReadSingleEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(toPersist)' response => new UnitTestDynamoDBTableData(response)); " is 169.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_ReadSingleTableEntryAsync,The length of the statement  "            var persisted = await manager.ReadSingleEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(toPersist)' response => new UnitTestDynamoDBTableData(response)); " is 169.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_ReadSingleTableEntryAsync,The length of the statement  "            var notFound = await manager.ReadSingleEntryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' GetKeys(data)' response => new UnitTestDynamoDBTableData(response)); " is 163.
Long Statement,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_ReadAllTableEntryByPartitionAsync,The length of the statement  "            var found = await manager.QueryAsync(UnitTestDynamoDBStorage.INSTANCE_TABLE_NAME' keys' $"PartitionKey = :PK"' item => new UnitTestDynamoDBTableData(item)); " is 156.
Long Statement,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,Dispose,The length of the statement  "            SQSStreamProviderUtils.DeleteAllUsedQueues(SQS_STREAM_PROVIDER_NAME' this.clusterId' AWSTestConstants.DefaultSQSConnectionString' NullLoggerFactory.Instance).Wait(); " is 165.
Long Statement,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromSQS,The length of the statement  "            var adapterFactory = new SQSAdapterFactory(SQS_STREAM_PROVIDER_NAME' options' new HashRingStreamQueueMapperOptions()' new SimpleQueueCacheOptions()' null' Options.Create(new ClusterOptions())' null' null); " is 205.
Long Statement,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "            Dictionary<QueueId' IQueueAdapterReceiver> receivers = mapper.GetAllQueues().ToDictionary(queueId => queueId' adapter.CreateReceiver); " is 134.
Long Statement,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "            Dictionary<QueueId' IQueueCache> caches = mapper.GetAllQueues().ToDictionary(queueId => queueId' cache.CreateQueueCache); " is 121.
Long Statement,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "                        events.Take(NumMessagesPerBatch).ToArray()' null' RequestContextExtensions.Export(this.fixture.SerializationManager)).Wait()))); " is 128.
Long Statement,AWSUtils.Tests.Streaming,SQSClientStreamTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSClientStreamTests.cs,Dispose,The length of the statement  "            SQSStreamProviderUtils.DeleteAllUsedQueues(SQSStreamProviderName' clusterId' StorageConnectionString' NullLoggerFactory.Instance).Wait(); " is 137.
Long Statement,AWSUtils.Tests.Streaming,SQSStreamTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSStreamTests.cs,Dispose,The length of the statement  "            SQSStreamProviderUtils.DeleteAllUsedQueues(SQS_STREAM_PROVIDER_NAME' clusterId' AWSTestConstants.DefaultSQSConnectionString' NullLoggerFactory.Instance).Wait(); " is 160.
Long Statement,AWSUtils.Tests.Streaming,SQSSubscriptionMultiplicityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSSubscriptionMultiplicityTests.cs,Dispose,The length of the statement  "            SQSStreamProviderUtils.DeleteAllUsedQueues(SQSStreamProviderName' clusterId' StreamConnectionString' NullLoggerFactory.Instance).Wait(); " is 136.
Long Statement,Orleans.AWSUtils.Tests,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBPartitionKey,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an DynamoDB partition key. Key={1}"' key.Length' key)); " is 131.
Long Statement,Orleans.AWSUtils.Tests,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBRowKey,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an DynamoDB row key. Key={1}"' key.Length' key)); " is 125.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateClient,The length of the statement  "                ddbClient = new AmazonDynamoDBClient(credentials' new AmazonDynamoDBConfig { ServiceURL = service' RegionEndpoint = AWSUtils.GetRegionEndpoint(service) }); " is 155.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateClient,The length of the statement  "                ddbClient = new AmazonDynamoDBClient(new AmazonDynamoDBConfig { ServiceURL = service' RegionEndpoint = AWSUtils.GetRegionEndpoint(service) }); " is 142.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateTable,The length of the statement  "                var indexThroughput = new ProvisionedThroughput { ReadCapacityUnits = readCapacityUnits' WriteCapacityUnits = writeCapacityUnits }; " is 131.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,PutEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Creating {0} table entry: {1}"' tableName' Utils.DictionaryToString(fields)); " is 129.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,UpsertEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Upserting entry {0} with key(s) {1} into table {2}"' Utils.DictionaryToString(fields)' Utils.DictionaryToString(keys)' tableName); " is 182.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,DeleteEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Deleting table {0}  entry with key(s) {1}"' tableName' Utils.DictionaryToString(keys)); " is 139.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,ReadSingleEntryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Unable to find table entry for Keys = {0}"' Utils.DictionaryToString(keys)); " is 128.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,QueryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Unable to find table entry for Keys = {0}"' Utils.DictionaryToString(keys)); " is 128.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,ScanAsync,The length of the statement  "            // https://docs.aws.amazon.com/sdkfornet/v3/apidocs/items/DynamoDBv2/MDynamoDBScanAsyncStringDictionary!String'%20Condition!CancellationToken.html " is 146.
Long Statement,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,GetEntriesTxAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Unable to find table entry for Keys = {0}"' Utils.EnumerableToString(keys' d => Utils.DictionaryToString(d))); " is 162.
Magic Number,AWSUtils.Tests.Liveness,LivenessTests_DynamoDB,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\LivenessTests.cs,Liveness_AWS_DynamoDB_4_Restart_Silo_1,The following statement contains a magic number: await Do_Liveness_OracleTest_2(2);
Magic Number,AWSUtils.Tests.Liveness,LivenessTests_DynamoDB,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\LivenessTests.cs,Liveness_AWS_DynamoDB_5_Kill_Silo_1_With_Timers,The following statement contains a magic number: await Do_Liveness_OracleTest_2(2' false' true);
Magic Number,AWSUtils.Tests.MembershipTests,SiloInstanceRecordTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\MembershipTests\SiloInstanceRecordTests.cs,GetKeysTest,The following statement contains a magic number: SiloAddress address = SiloAddress.New(new IPEndPoint(IPAddress.Parse("127.0.0.1")' 12345)' 67890);
Magic Number,AWSUtils.Tests.MembershipTests,SiloInstanceRecordTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\MembershipTests\SiloInstanceRecordTests.cs,GetKeysTest,The following statement contains a magic number: SiloAddress address = SiloAddress.New(new IPEndPoint(IPAddress.Parse("127.0.0.1")' 12345)' 67890);
Magic Number,AWSUtils.Tests.MembershipTests,SiloInstanceRecordTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\MembershipTests\SiloInstanceRecordTests.cs,GetKeysTest,The following statement contains a magic number: Assert.Equal(2' keys.Count);
Magic Number,AWSUtils.Tests.RemindersTest,DynamoDBRemindersTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Reminder\DynamoDBRemindersTableTests.cs,RemindersTable_AWS_RemindersRange,The following statement contains a magic number: await RemindersRange(50);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_AWSStore_Delete,The following statement contains a magic number: await grain.DoWrite(2);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_AWSStore_Delete,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_GuidKey_AWSStore_Read_Write,The following statement contains a magic number: await grain.DoWrite(2);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_GuidKey_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_GuidKey_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_LongKey_AWSStore_Read_Write,The following statement contains a magic number: await grain.DoWrite(2);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_LongKey_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_LongKey_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_LongKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: await grain.DoWrite(2);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_LongKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_LongKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_LongKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_GuidKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: await grain.DoWrite(2);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_GuidKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_GuidKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_GuidKeyExtended_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_Generic_AWSStore_Read_Write,The following statement contains a magic number: await grain.DoWrite(2);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_Generic_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_Generic_AWSStore_Read_Write,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_Generic_AWSStore_DiffTypes,The following statement contains a magic number: double expected3 = 5.1;
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_Generic_AWSStore_DiffTypes,The following statement contains a magic number: expected1 = 2;
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_Generic_AWSStore_DiffTypes,The following statement contains a magic number: expected3 = 6.2;
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_AWSStore_SiloRestart,The following statement contains a magic number: await grain.DoWrite(2);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_AWSStore_SiloRestart,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,Grain_AWSStore_SiloRestart,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,AWSUtils.Tests.StorageTests,Base_PersistenceGrainTests_AWSStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\Base_PersistenceGrainTests_AWSStore.cs,RunPerfTest,The following statement contains a magic number: elapsed > target.Multiply(2.0 * timingFactor)
Magic Number,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_WriteAlot_SinglePartition,The following statement contains a magic number: const int iterations = 2000;
Magic Number,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_WriteAlot_SinglePartition,The following statement contains a magic number: const int batchSize = 1000;
Magic Number,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_WriteAlot_MultiPartition,The following statement contains a magic number: const int iterations = 2000;
Magic Number,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_WriteAlot_MultiPartition,The following statement contains a magic number: const int batchSize = 1000;
Magic Number,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_WriteAlot_MultiPartition,The following statement contains a magic number: const int numPartitions = 100;
Magic Number,AWSUtils.Tests.StorageTests,DynamoDBStorageStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageStressTests.cs,DynamoDBDataManagerStressTests_ReadAll_SinglePartition,The following statement contains a magic number: const int iterations = 1000;
Magic Number,AWSUtils.Tests.StorageTests,PersistenceGrainTests_AWSDynamoDBStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,AWSDynamoDBStore_ConvertToFromStorageFormat_GrainReference_List,The following statement contains a magic number: IUser[] grains = new IUser[3];
Magic Number,AWSUtils.Tests.StorageTests,PersistenceGrainTests_AWSDynamoDBStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,AWSDynamoDBStore_ConvertToFromStorageFormat_GrainReference_List,The following statement contains a magic number: grains[2] = this.HostedCluster.GrainFactory.GetGrain<IUser>(ids[2]);
Magic Number,AWSUtils.Tests.StorageTests,PersistenceGrainTests_AWSDynamoDBStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,AWSDynamoDBStore_ConvertToFromStorageFormat_GrainReference_List,The following statement contains a magic number: grains[2] = this.HostedCluster.GrainFactory.GetGrain<IUser>(ids[2]);
Magic Number,AWSUtils.Tests.StorageTests,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\PersistenceGrainTests_AWSDynamoDBStore.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 4;
Magic Number,AWSUtils.Tests.StorageTests.AWSUtils,DynamoDBStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\StorageTests\DynamoDBStorageTests.cs,DynamoDBDataManager_ReadAllTableEntryByPartitionAsync,The following statement contains a magic number: Assert.True(found.results.Count == 2);
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: await Task.WhenAll(receivers.Values.Select(receiver => receiver.Initialize(TimeSpan.FromSeconds(5))));
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: Task task = Task.Factory.StartNew(() =>                  {                      while (receivedBatches < NumBatches)                      {                          var messages = receiver.GetQueueMessagesAsync(SQSStorage.MAX_NUMBER_OF_MESSAGE_TO_PEAK).Result.ToArray();                          if (!messages.Any())                          {                              continue;                          }                          foreach (var message in messages.Cast<SQSBatchContainer>())                          {                              streamsPerQueue.AddOrUpdate(queueId'                                  id => new HashSet<IStreamIdentity> { new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()) }'                                  (id' set) =>                                  {                                      set.Add(new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()));                                      return set;                                  });                              output.WriteLine("Queue {0} received message on stream {1}"' queueId'                                  message.StreamGuid);                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<int>().Count());  // "Half the events were ints"                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<string>().Count());  // "Half the events were strings"                          }                          Interlocked.Add(ref receivedBatches' messages.Length);                          qCache.AddToCache(messages);                      }                  });
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: Task task = Task.Factory.StartNew(() =>                  {                      while (receivedBatches < NumBatches)                      {                          var messages = receiver.GetQueueMessagesAsync(SQSStorage.MAX_NUMBER_OF_MESSAGE_TO_PEAK).Result.ToArray();                          if (!messages.Any())                          {                              continue;                          }                          foreach (var message in messages.Cast<SQSBatchContainer>())                          {                              streamsPerQueue.AddOrUpdate(queueId'                                  id => new HashSet<IStreamIdentity> { new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()) }'                                  (id' set) =>                                  {                                      set.Add(new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()));                                      return set;                                  });                              output.WriteLine("Queue {0} received message on stream {1}"' queueId'                                  message.StreamGuid);                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<int>().Count());  // "Half the events were ints"                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<string>().Count());  // "Half the events were strings"                          }                          Interlocked.Add(ref receivedBatches' messages.Length);                          qCache.AddToCache(messages);                      }                  });
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: work.Add(Task.Factory.StartNew(() => Enumerable.Range(0' NumBatches)                  .Select(i => i % 2 == 0 ? streamId1 : streamId2)                  .ToList()                  .ForEach(streamId =>                      adapter.QueueMessageBatchAsync(streamId' streamId.ToString()'                          events.Take(NumMessagesPerBatch).ToArray()' null' RequestContextExtensions.Export(this.fixture.SerializationManager)).Wait())));
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: messageCount == 10
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: Assert.Equal(NumBatches / 2' messageCount);
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: const int expected = NumBatches / 2 - 10 + 1;
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: const int expected = NumBatches / 2 - 10 + 1;
Magic Number,AWSUtils.Tests.Streaming,SQSAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSAdapterTests.cs,CreateEvents,The following statement contains a magic number: return Enumerable.Range(0' count).Select(i =>              {                  if (i % 2 == 0)                  {                      return Random.Next(int.MaxValue) as object;                  }                  return Random.Next(int.MaxValue).ToString(CultureInfo.InvariantCulture);              }).ToList();
Magic Number,AWSUtils.Tests.Streaming,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSClientStreamTests.cs,Configure,The following statement contains a magic number: hostBuilder                      .AddSqsStreams(SQSStreamProviderName' options =>                       {                          options.ConnectionString = AWSTestConstants.DefaultSQSConnectionString;                      })                      .AddMemoryGrainStorage("PubSubStore")                      .Configure<SiloMessagingOptions>(options => options.ClientDropTimeout = TimeSpan.FromSeconds(5));
Magic Number,AWSUtils.Tests.Streaming,SQSStreamTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSStreamTests.cs,SQS_16_MultipleStreams_ManyDifferent_ManyProducerGrainsManyConsumerGrains,The following statement contains a magic number: var multiRunner = new MultipleStreamsTestRunner(this.InternalClient' SQS_STREAM_PROVIDER_NAME' 16' false);
Magic Number,AWSUtils.Tests.Streaming,SQSStreamTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\AWSUtils.Tests\Streaming\SQSStreamTests.cs,SQS_17_MultipleStreams_1J_ManyProducerGrainsManyConsumerGrains,The following statement contains a magic number: var multiRunner = new MultipleStreamsTestRunner(this.InternalClient' SQS_STREAM_PROVIDER_NAME' 17' false);
Magic Number,Orleans.AWSUtils.Tests,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBPartitionKey,The following statement contains a magic number: key.Length >= 2048
Magic Number,Orleans.AWSUtils.Tests,AWSUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\AWSUtils.cs,ValidateDynamoDBRowKey,The following statement contains a magic number: key.Length >= 1024
Magic Number,Orleans.AWSUtils.Tests,DynamoDBStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\AWS\Shared\Storage\DynamoDBStorage.cs,CreateTable,The following statement contains a magic number: await Task.Delay(2000);
