Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,ChirperNetworkDriver,The following statement contains a magic number: this.LinksPerUser = 27;
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,ChirperNetworkDriver,The following statement contains a magic number: this.LoggedInUserRate = 0.001;
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,ChirperNetworkDriver,The following statement contains a magic number: this.PipelineLength = 500;
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do              {                  int i = rand.Next(activeUsers.Count);                  SimulatedUser u = activeUsers[i];                  if (u == null)                  {                      Console.WriteLine("User {0} not found."' i);                      return -1;                  }                    string msg = fortune.GetFortune();                    pipeline.Add(u.PublishMessage(msg));                  count++;                  if (count % 10000 == 0)                  {                      Console.WriteLine("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."'                          ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);                      perfCounters.ChirpsPerSecond.RawValue = (int) (((float) 10000 / stopwatch.ElapsedMilliseconds) * 1000);                        stopwatch.Restart();                  }                    if (ChirpPublishTimebase > 0)                  {                      Thread.Sleep(ChirpPublishTimebase * 1000);                  }              } while (true);
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do              {                  int i = rand.Next(activeUsers.Count);                  SimulatedUser u = activeUsers[i];                  if (u == null)                  {                      Console.WriteLine("User {0} not found."' i);                      return -1;                  }                    string msg = fortune.GetFortune();                    pipeline.Add(u.PublishMessage(msg));                  count++;                  if (count % 10000 == 0)                  {                      Console.WriteLine("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."'                          ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);                      perfCounters.ChirpsPerSecond.RawValue = (int) (((float) 10000 / stopwatch.ElapsedMilliseconds) * 1000);                        stopwatch.Restart();                  }                    if (ChirpPublishTimebase > 0)                  {                      Thread.Sleep(ChirpPublishTimebase * 1000);                  }              } while (true);
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do              {                  int i = rand.Next(activeUsers.Count);                  SimulatedUser u = activeUsers[i];                  if (u == null)                  {                      Console.WriteLine("User {0} not found."' i);                      return -1;                  }                    string msg = fortune.GetFortune();                    pipeline.Add(u.PublishMessage(msg));                  count++;                  if (count % 10000 == 0)                  {                      Console.WriteLine("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."'                          ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);                      perfCounters.ChirpsPerSecond.RawValue = (int) (((float) 10000 / stopwatch.ElapsedMilliseconds) * 1000);                        stopwatch.Restart();                  }                    if (ChirpPublishTimebase > 0)                  {                      Thread.Sleep(ChirpPublishTimebase * 1000);                  }              } while (true);
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do              {                  int i = rand.Next(activeUsers.Count);                  SimulatedUser u = activeUsers[i];                  if (u == null)                  {                      Console.WriteLine("User {0} not found."' i);                      return -1;                  }                    string msg = fortune.GetFortune();                    pipeline.Add(u.PublishMessage(msg));                  count++;                  if (count % 10000 == 0)                  {                      Console.WriteLine("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."'                          ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);                      perfCounters.ChirpsPerSecond.RawValue = (int) (((float) 10000 / stopwatch.ElapsedMilliseconds) * 1000);                        stopwatch.Restart();                  }                    if (ChirpPublishTimebase > 0)                  {                      Thread.Sleep(ChirpPublishTimebase * 1000);                  }              } while (true);
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do              {                  int i = rand.Next(activeUsers.Count);                  SimulatedUser u = activeUsers[i];                  if (u == null)                  {                      Console.WriteLine("User {0} not found."' i);                      return -1;                  }                    string msg = fortune.GetFortune();                    pipeline.Add(u.PublishMessage(msg));                  count++;                  if (count % 10000 == 0)                  {                      Console.WriteLine("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."'                          ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);                      perfCounters.ChirpsPerSecond.RawValue = (int) (((float) 10000 / stopwatch.ElapsedMilliseconds) * 1000);                        stopwatch.Restart();                  }                    if (ChirpPublishTimebase > 0)                  {                      Thread.Sleep(ChirpPublishTimebase * 1000);                  }              } while (true);
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,C:\repos\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do              {                  int i = rand.Next(activeUsers.Count);                  SimulatedUser u = activeUsers[i];                  if (u == null)                  {                      Console.WriteLine("User {0} not found."' i);                      return -1;                  }                    string msg = fortune.GetFortune();                    pipeline.Add(u.PublishMessage(msg));                  count++;                  if (count % 10000 == 0)                  {                      Console.WriteLine("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."'                          ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);                      perfCounters.ChirpsPerSecond.RawValue = (int) (((float) 10000 / stopwatch.ElapsedMilliseconds) * 1000);                        stopwatch.Restart();                  }                    if (ChirpPublishTimebase > 0)                  {                      Thread.Sleep(ChirpPublishTimebase * 1000);                  }              } while (true);
