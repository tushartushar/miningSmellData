Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,ParseArguments,Cyclomatic complexity of the method is 29
Long Statement,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The length of the statement  "	Console.WriteLine ("Starting Chirper network traffic simulation for {0} users.\n" + "Chirp publication time base = {1}\n" + "Random time distribution = {2}\n" + "Rechirp rate = {3}"' loader.Users.Count' this.ChirpPublishTimebase' this.ChirpPublishTimeRandom' this.ShouldRechirpRate); " is 283.
Long Statement,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The length of the statement  "			Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count); " is 188.
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,ChirperNetworkDriver,The following statement contains a magic number: this.LinksPerUser = 27;  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,ChirperNetworkDriver,The following statement contains a magic number: this.LoggedInUserRate = 0.001;  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,ChirperNetworkDriver,The following statement contains a magic number: this.PipelineLength = 500;  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do {  	int i = rand.Next (activeUsers.Count);  	SimulatedUser u = activeUsers [i];  	if (u == null) {  		Console.WriteLine ("User {0} not found."' i);  		return -1;  	}  	string msg = fortune.GetFortune ();  	pipeline.Add (u.PublishMessage (msg));  	count++;  	if (count % 10000 == 0) {  		Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  		perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  		stopwatch.Restart ();  	}  	if (ChirpPublishTimebase > 0) {  		Thread.Sleep (ChirpPublishTimebase * 1000);  	}  } while (true);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do {  	int i = rand.Next (activeUsers.Count);  	SimulatedUser u = activeUsers [i];  	if (u == null) {  		Console.WriteLine ("User {0} not found."' i);  		return -1;  	}  	string msg = fortune.GetFortune ();  	pipeline.Add (u.PublishMessage (msg));  	count++;  	if (count % 10000 == 0) {  		Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  		perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  		stopwatch.Restart ();  	}  	if (ChirpPublishTimebase > 0) {  		Thread.Sleep (ChirpPublishTimebase * 1000);  	}  } while (true);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do {  	int i = rand.Next (activeUsers.Count);  	SimulatedUser u = activeUsers [i];  	if (u == null) {  		Console.WriteLine ("User {0} not found."' i);  		return -1;  	}  	string msg = fortune.GetFortune ();  	pipeline.Add (u.PublishMessage (msg));  	count++;  	if (count % 10000 == 0) {  		Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  		perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  		stopwatch.Restart ();  	}  	if (ChirpPublishTimebase > 0) {  		Thread.Sleep (ChirpPublishTimebase * 1000);  	}  } while (true);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do {  	int i = rand.Next (activeUsers.Count);  	SimulatedUser u = activeUsers [i];  	if (u == null) {  		Console.WriteLine ("User {0} not found."' i);  		return -1;  	}  	string msg = fortune.GetFortune ();  	pipeline.Add (u.PublishMessage (msg));  	count++;  	if (count % 10000 == 0) {  		Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  		perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  		stopwatch.Restart ();  	}  	if (ChirpPublishTimebase > 0) {  		Thread.Sleep (ChirpPublishTimebase * 1000);  	}  } while (true);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do {  	int i = rand.Next (activeUsers.Count);  	SimulatedUser u = activeUsers [i];  	if (u == null) {  		Console.WriteLine ("User {0} not found."' i);  		return -1;  	}  	string msg = fortune.GetFortune ();  	pipeline.Add (u.PublishMessage (msg));  	count++;  	if (count % 10000 == 0) {  		Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  		perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  		stopwatch.Restart ();  	}  	if (ChirpPublishTimebase > 0) {  		Thread.Sleep (ChirpPublishTimebase * 1000);  	}  } while (true);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: do {  	int i = rand.Next (activeUsers.Count);  	SimulatedUser u = activeUsers [i];  	if (u == null) {  		Console.WriteLine ("User {0} not found."' i);  		return -1;  	}  	string msg = fortune.GetFortune ();  	pipeline.Add (u.PublishMessage (msg));  	count++;  	if (count % 10000 == 0) {  		Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  		perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  		stopwatch.Restart ();  	}  	if (ChirpPublishTimebase > 0) {  		Thread.Sleep (ChirpPublishTimebase * 1000);  	}  } while (true);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: if (count % 10000 == 0) {  	Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  	perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  	stopwatch.Restart ();  }  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: if (count % 10000 == 0) {  	Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  	perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  	stopwatch.Restart ();  }  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: if (count % 10000 == 0) {  	Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  	perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  	stopwatch.Restart ();  }  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: if (count % 10000 == 0) {  	Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  	perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  	stopwatch.Restart ();  }  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: if (count % 10000 == 0) {  	Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  	perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  	stopwatch.Restart ();  }  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: Console.WriteLine ("{0:0.#}/sec: {1} in {2}ms.  Pipeline contains {3} items."' ((float)10000 / stopwatch.ElapsedMilliseconds) * 1000' count' stopwatch.ElapsedMilliseconds' pipeline.Count);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: perfCounters.ChirpsPerSecond.RawValue = (int)(((float)10000 / stopwatch.ElapsedMilliseconds) * 1000);  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: if (ChirpPublishTimebase > 0) {  	Thread.Sleep (ChirpPublishTimebase * 1000);  }  
Magic Number,Orleans.Samples.Chirper.Network.Driver,ChirperNetworkDriver,F:\newReposMay17\dotnet_orleans\Samples\Chirper\NetworkDriver\ChirperNetworkDriver.cs,Run,The following statement contains a magic number: Thread.Sleep (ChirpPublishTimebase * 1000);  
