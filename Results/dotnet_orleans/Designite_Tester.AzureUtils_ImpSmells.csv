Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The method has 102 lines of code.
Complex Method,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Churn_NumStreams_FewPublishers,Cyclomatic complexity of the method is 8
Long Parameter List,Tester.AzureUtils.Persistence,Base_PersistenceGrainTests_AzureStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureStore.cs,RunPerfTest,The method has 7 parameters. Parameters: n' testName' target' actionNoState' actionMemory' actionMemoryStore' actionAzureTable
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Churn_NumStreams_FewPublishers,The method has 8 parameters. Parameters: streamProviderName' pipelineSize' numStreams' numConsumers' numProducers' warmUpPubSub' warmUpProducers' normalSubscribeCalls
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Churn_NumStreams,The method has 7 parameters. Parameters: streamProviderName' pipelineSize' numStreams' numConsumers' numProducers' warmUpPubSub' normalSubscribeCalls
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SetupOneStream,The method has 6 parameters. Parameters: streamId' streamProviderName' pipeline' numConsumers' numProducers' normalSubscribeCalls
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SetupProducers,The method has 5 parameters. Parameters: streamId' streamNamespace' streamProviderName' pipeline' numProducers
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SetupConsumers,The method has 6 parameters. Parameters: streamId' streamNamespace' streamProviderName' pipeline' numConsumers' normalSubscribeCalls
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Limits,The method has 6 parameters. Parameters: streamProviderName' numStreams' numProducers' numConsumers' numMessages' useFanOut
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,TestOneStream,The method has 6 parameters. Parameters: streamId' streamProviderName' numProducers' numConsumers' numMessages' useFanOut
Long Parameter List,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,InitializeTopology,The method has 8 parameters. Parameters: streamId' streamNamespace' streamProviderName' numProducers' numConsumers' producers' consumers' useFanOut
Long Parameter List,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckConsumerProducerStatus,The method has 5 parameters. Parameters: when' producerGrainId' consumerGrainId' expectIsProducer' expectIsConsumer
Long Parameter List,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckConsumerProducerStatus,The method has 5 parameters. Parameters: when' producerGrainId' consumerGrainId' expectedNumProducers' expectedNumConsumers
Long Identifier,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,,The length of the parameter AZURE_QUEUE_STREAM_PROVIDER_NAME is 32.
Long Identifier,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,,The length of the parameter AZURE_QUEUE_STREAM_PROVIDER_NAME is 32.
Long Statement,Tester.AzureUtils,Configurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureLivenessTests.cs,Configure,The length of the statement  "                hostBuilder.UseAzureStorageClustering(options => options.ConnectionString = TestDefaultConfiguration.DataConnectionString); " is 123.
Long Statement,Tester.AzureUtils,Configurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureLivenessTests.cs,Configure,The length of the statement  "                clientBuilder.UseAzureStorageClustering(options => options.ConnectionString = TestDefaultConfiguration.DataConnectionString); " is 125.
Long Statement,Tester.AzureUtils,AzureQueueDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureQueueDataManagerTests.cs,GetTableManager,The length of the statement  "            AzureQueueDataManager manager = new AzureQueueDataManager(this.loggerFactory' $"{qName}-{DeploymentId}"' TestDefaultConfiguration.DataConnectionString' visibilityTimeout); " is 171.
Long Statement,Tester.AzureUtils,AzureQueueDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureQueueDataManagerTests.cs,PrintCloudQueueMessage,The length of the statement  "            return String.Format("CloudQueueMessage: Id = {0}' NextVisibleTime = {1}' DequeueCount = {2}' PopReceipt = {3}' Content = {4}"' " is 127.
Long Statement,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_ReadAll_SinglePartition,The length of the statement  "            output.WriteLine("AzureTable_ReadAll completed. ReadAll {0} entries in {1} at {2} RPS"' count' sw.Elapsed' count / sw.Elapsed.TotalSeconds); " is 140.
Long Statement,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_ReadAllTableEntities,The length of the statement  "            output.WriteLine("AzureTable_ReadAllTableEntities completed. ReadAll {0} entries in {1} at {2} RPS"' count' sw.Elapsed' count / sw.Elapsed.TotalSeconds); " is 153.
Long Statement,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_ReadAllTableEntities,The length of the statement  "            output.WriteLine("AzureTable_ReadAllTableEntities clear. Cleared table of {0} entries in {1} at {2} RPS"' count' sw.Elapsed' count / sw.Elapsed.TotalSeconds); " is 158.
Long Statement,Tester.AzureUtils,AzureTableDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerTests.cs,AzureTableDataManager_CreateTableEntryAsync,The length of the statement  "                Assert.Equal((int)HttpStatusCode.Conflict' exc.RequestInformation.HttpStatusCode);  // "Creating an already existing entry." " is 124.
Long Statement,Tester.AzureUtils,AzureTableDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerTests.cs,AzureTableDataManager_DeleteTableAsync,The length of the statement  "                Assert.Equal((int)HttpStatusCode.NotFound' exc.RequestInformation.HttpStatusCode);  // "Deleting an already deleted item." " is 122.
Long Statement,Tester.AzureUtils,AzureTableDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerTests.cs,AzureTableDataManager_InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                Assert.Equal((int)HttpStatusCode.NotFound' exc.RequestInformation.HttpStatusCode);  // "Upadte item 2 before created it." " is 121.
Long Statement,Tester.AzureUtils,AzureTableDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerTests.cs,AzureTableDataManager_InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                Assert.Equal((int)HttpStatusCode.Conflict' exc.RequestInformation.HttpStatusCode);  // "Inserting an already existing item 1." " is 126.
Long Statement,Tester.AzureUtils,AzureTableDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerTests.cs,AzureTableDataManager_InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                Assert.Equal((int)HttpStatusCode.Conflict' exc.RequestInformation.HttpStatusCode);  // "Inserting an already existing item 1 AND wring eTag" " is 140.
Long Statement,Tester.AzureUtils,AzureTableDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerTests.cs,AzureTableDataManager_UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                await manager.UpdateTwoTableEntriesConditionallyAsync(data1' AzureTableUtils.ANY_ETAG' data2' AzureTableUtils.ANY_ETAG); " is 120.
Long Statement,Tester.AzureUtils,StorageEmulatorUtilities,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\StorageEmulatorUtilities.cs,EnsureEmulatorIsNotUsed,The length of the statement  "            if (CloudStorageAccount.DevelopmentStorageAccount.ToString().Equals(TestDefaultConfiguration.DataConnectionString' StringComparison.OrdinalIgnoreCase)) " is 151.
Long Statement,UnitTests.RemindersTest,AzureRemindersTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureRemindersTableTests.cs,CreateRemindersTable,The length of the statement  "            return new AzureBasedReminderTable(this.ClusterFixture.Services.GetRequiredService<IGrainReferenceConverter>()' loggerFactory' this.clusterOptions' options); " is 157.
Long Statement,Tester.AzureUtils.General,GenericGrainsInAzureTableStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\GenericGrainsInAzureStorageTests.cs,Generic_OnAzureTableStorage_LongNamedGrain_EchoValue,The length of the statement  "            var grain = this.fixture.GrainFactory.GetGrain<ISimpleGenericGrainUsingAzureStorageAndLongGrainName<int>>(Guid.NewGuid()); " is 122.
Long Statement,Tester.AzureUtils.General,GenericGrainsInAzureBlobStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\GenericGrainsInAzureStorageTests.cs,Generic_OnAzureBlobStorage_LongNamedGrain_EchoValue,The length of the statement  "            var grain = this.fixture.GrainFactory.GetGrain<ISimpleGenericGrainUsingAzureStorageAndLongGrainName<int>>(Guid.NewGuid()); " is 122.
Long Statement,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,AgentManagerOwnCorrectAmountOfAgents,The length of the statement  "                object[] agentStarted = await mgmtGrain.SendControlCommandToProvider(typeof(PersistentStreamProvider).FullName' StreamProviderName' (int)PersistentStreamProviderCommand.GetNumberRunningAgents); " is 193.
Long Statement,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,AgentManagerOwnCorrectAmountOfAgents,The length of the statement  "                    counts.All(startedAgentInEachSilo => startedAgentInEachSilo <= expectedAgentCountMax && startedAgentInEachSilo >= expectedAgentCountMin); " is 137.
Long Statement,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,AgentManagerOwnCorrectAmountOfAgents,The length of the statement  "                    throw new OrleansException($"AgentManager doesn't own correct amount of agents: {string.Join("'"' counts.Select(startedAgentInEachSilo => startedAgentInEachSilo.ToString()))}"); " is 177.
Long Statement,Tester.AzureUtils.Persistence,ClientBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureStore.cs,Configure,The length of the statement  "                clientBuilder.UseAzureStorageClustering(gatewayOptions => { gatewayOptions.ConnectionString = TestDefaultConfiguration.DataConnectionString; }); " is 144.
Long Statement,Tester.AzureUtils.Persistence,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureTableGrainStorage.cs,Configure,The length of the statement  "                        .AddAzureTableGrainStorage("GrainStorageForTest"' builder => builder.Configure<IOptions<ClusterOptions>>((options' silo) => " is 123.
Long Statement,Tester.AzureUtils.Persistence,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureTableGrainStorage.cs,Configure,The length of the statement  "                        .AddAzureTableGrainStorage("GrainStorageForTest"' builder => builder.Configure<IOptions<ClusterOptions>>((options' silo) => " is 123.
Long Statement,Tester.AzureUtils.Persistence,PersistenceProviderTests_Local,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceProviderTests.cs,AzureTableStorage_ConvertJsonToFromStorageFormatWithCustomJsonProperties,The length of the statement  "            var convertedState = (TestStoreGrainStateWithCustomJsonProperties)storage.ConvertFromStorageFormat(entity' typeof(TestStoreGrainStateWithCustomJsonProperties)); " is 160.
Long Statement,Tester.AzureUtils.Persistence,PersistenceProviderTests_Local,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceProviderTests.cs,InitAzureTableGrainStorage,The length of the statement  "            AzureTableGrainStorage store = ActivatorUtilities.CreateInstance<AzureTableGrainStorage>(this.providerRuntime.ServiceProvider' options' "TestStorage"); " is 151.
Long Statement,Tester.AzureUtils.Persistence,PersistenceProviderTests_Local,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceProviderTests.cs,InitAzureTableGrainStorage,The length of the statement  "            ISiloLifecycleSubject lifecycle = ActivatorUtilities.CreateInstance<SiloLifecycleSubject>(this.providerRuntime.ServiceProvider); " is 128.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertRate,The length of the statement  "            var storageOptions = Options.Create(new AzureTableReminderStorageOptions { ConnectionString = TestDefaultConfiguration.DataConnectionString }); " is 143.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertRate,The length of the statement  "            IReminderTable table = new AzureBasedReminderTable(this.fixture.Services.GetRequiredService<IGrainReferenceConverter>()' this.loggerFactory' clusterOptions' storageOptions); " is 173.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            var storageOptions = Options.Create(new AzureTableReminderStorageOptions { ConnectionString = TestDefaultConfiguration.DataConnectionString }); " is 143.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            IReminderTable table = new AzureBasedReminderTable(this.fixture.Services.GetRequiredService<IGrainReferenceConverter>()' this.loggerFactory' clusterOptions' storageOptions); " is 173.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            Assert.Single(rows); // "The reminder table (sid={0}' did={1}) did not contain the correct number of rows (1)."' ServiceId' clusterId); " is 135.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            Assert.Equal(expected.GrainRef'  actual.GrainRef); // "The newly inserted reminder table (sid={0}' did={1}) row did not contain the expected grain reference."' ServiceId' clusterId); " is 182.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            Assert.Equal(expected.ReminderName'  actual.ReminderName); // "The newly inserted reminder table (sid={0}' did={1}) row did not have the expected reminder name."' ServiceId' clusterId); " is 185.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            Assert.Equal(expected.Period'  actual.Period); // "The newly inserted reminder table (sid={0}' did={1}) row did not have the expected period."' ServiceId' clusterId); " is 166.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            // the following assertion fails but i don't know why yet-- the timestamps appear identical in the error message. it's not really a priority to hunt down the reason' however' because i have high confidence it is working well enough for the moment. " is 247.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            /*Assert.Equal(expected.StartAt'  actual.StartAt); // "The newly inserted reminder table (sid={0}' did={1}) row did not contain the correct start time."' ServiceId' clusterId);*/ " is 178.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertNewRowAndReadBack,The length of the statement  "            Assert.False(string.IsNullOrWhiteSpace(actual.ETag)' $"The newly inserted reminder table (sid={this.serviceId}' did={clusterId}) row contains an invalid etag."); " is 161.
Long Statement,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,TestTableInsertRate,The length of the statement  "            this.log.Info("Inserted {0} rows in {1}' i.e.' {2:f2} upserts/sec"' numOfInserts' dur' (numOfInserts / dur.TotalSeconds)); " is 122.
Long Statement,Tester.AzureUtils.Streaming,AQClientStreamTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQClientStreamTests.cs,Dispose,The length of the statement  "                var serviceId = this.HostedCluster.Client.ServiceProvider.GetRequiredService<IOptions<ClusterOptions>>().Value.ServiceId; " is 121.
Long Statement,Tester.AzureUtils.Streaming,AQClientStreamTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQClientStreamTests.cs,Dispose,The length of the statement  "                AzureQueueStreamProviderUtils.DeleteAllUsedAzureQueues(NullLoggerFactory.Instance' AzureQueueStreamProviderUtils.GenerateDefaultAzureQueueNames(serviceId' AQStreamProviderName)' " is 177.
Long Statement,Tester.AzureUtils.Streaming,AQClientStreamTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQClientStreamTests.cs,AQStreamConsumerOnDroppedClientTest,The length of the statement  "                    () => TestAzureTableStorageStreamFailureHandler.GetDeliveryFailureCount(AQStreamProviderName' NullLoggerFactory.Instance)); " is 123.
Long Statement,Tester.AzureUtils.Streaming,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQProgrammaticSubscribeTest.cs,Dispose,The length of the statement  "                        AzureQueueUtilities.GenerateQueueNames(this.HostedCluster.Options.ClusterId' queueCount)' TestDefaultConfiguration.DataConnectionString).Wait(); " is 144.
Long Statement,Tester.AzureUtils.Streaming,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQProgrammaticSubscribeTest.cs,Dispose,The length of the statement  "                        AzureQueueUtilities.GenerateQueueNames($"{this.HostedCluster.Options.ClusterId}2"' queueCount)' TestDefaultConfiguration.DataConnectionString).Wait(); " is 150.
Long Statement,Tester.AzureUtils.Streaming,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQProgrammaticSubscribeTest.cs,Dispose,The length of the statement  "                    AzureQueueStreamProviderUtils.DeleteAllUsedAzureQueues(NullLoggerFactory.Instance' AzureQueueUtilities.GenerateQueueNames(this.HostedCluster.Options.ClusterId' queueCount)' " is 172.
Long Statement,Tester.AzureUtils.Streaming,AQStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQStreamingTests.cs,AQ_16_MultipleStreams_ManyDifferent_ManyProducerGrainsManyConsumerGrains,The length of the statement  "            var multiRunner = new MultipleStreamsTestRunner(this.InternalClient' SingleStreamTestRunner.AQ_STREAM_PROVIDER_NAME' 16' false); " is 128.
Long Statement,Tester.AzureUtils.Streaming,AQStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQStreamingTests.cs,AQ_17_MultipleStreams_1J_ManyProducerGrainsManyConsumerGrains,The length of the statement  "            var multiRunner = new MultipleStreamsTestRunner(this.InternalClient' SingleStreamTestRunner.AQ_STREAM_PROVIDER_NAME' 17' false); " is 128.
Long Statement,Tester.AzureUtils.Streaming,AQSubscriptionMultiplicityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQSubscriptionMultiplicityTests.cs,Dispose,The length of the statement  "                AzureQueueStreamProviderUtils.DeleteAllUsedAzureQueues(NullLoggerFactory.Instance' AzureQueueUtilities.GenerateQueueNames(this.HostedCluster.Options.ClusterId' queueCount)' TestDefaultConfiguration.DataConnectionString).Wait(); " is 227.
Long Statement,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,Dispose,The length of the statement  "                AzureQueueStreamProviderUtils.DeleteAllUsedAzureQueues(this.loggerFactory' azureQueueNames' TestDefaultConfiguration.DataConnectionString).Wait(); " is 146.
Long Statement,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "            Dictionary<QueueId' IQueueAdapterReceiver> receivers = mapper.GetAllQueues().ToDictionary(queueId => queueId' adapter.CreateReceiver); " is 134.
Long Statement,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "            Dictionary<QueueId' IQueueCache> caches = mapper.GetAllQueues().ToDictionary(queueId => queueId' cache.CreateQueueCache); " is 121.
Long Statement,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "                        events.Take(NumMessagesPerBatch).ToArray()' null' RequestContextExtensions.Export(this.fixture.SerializationManager)).Wait()))); " is 128.
Long Statement,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "                    this.output.WriteLine("On Queue {0} we received a total of {1} message on stream {2}"' kvp.Key' messageCount' streamGuid); " is 122.
Long Statement,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The length of the statement  "                    this.output.WriteLine("On Queue {0} we received a total of {1} message on stream {2}"' kvp.Key' messageCount' streamGuid); " is 122.
Long Statement,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,ValidateAgentsState,The length of the statement  "            object[] results = await mgmt.SendControlCommandToProvider(adapterType' adapterName' (int)PersistentStreamProviderCommand.GetNumberRunningAgents); " is 146.
Long Statement,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,ValidateAgentsState,The length of the statement  "            // The binary one deserializes object[] into array of ints when the latter one - into longs. http://stackoverflow.com/a/17918824 " is 128.
Long Statement,Tester.AzureUtils.Streaming,ClientConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,Configure,The length of the statement  "                clientBuilder.Configure<StaticGatewayListProviderOptions>(options => options.Gateways = options.Gateways.Take(1).ToList()); " is 123.
Long Statement,UnitTests.HaloTests.Streaming,HaloStreamSubscribeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\HaloStreamSubscribeTests.cs,Halo_SMS_ResubscribeTest_ConsumerProducer,The length of the statement  "            this.fixture.Logger.Info("\n\n************************ Halo_SMS_ResubscribeTest_ConsumerProducer ********************************* \n\n"); " is 138.
Long Statement,UnitTests.HaloTests.Streaming,HaloStreamSubscribeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\HaloStreamSubscribeTests.cs,Halo_SMS_ResubscribeTest_ProducerConsumer,The length of the statement  "            this.fixture.Logger.Info("\n\n************************ Halo_SMS_ResubscribeTest_ProducerConsumer ********************************* \n\n"); " is 138.
Long Statement,UnitTests.HaloTests.Streaming,HaloStreamSubscribeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\HaloStreamSubscribeTests.cs,Halo_AzureQueue_ResubscribeTest_ConsumerProducer,The length of the statement  "            this.fixture.Logger.Info("\n\n************************ Halo_AzureQueue_ResubscribeTest_ConsumerProducer ********************************* \n\n"); " is 145.
Long Statement,UnitTests.HaloTests.Streaming,HaloStreamSubscribeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\HaloStreamSubscribeTests.cs,Halo_AzureQueue_ResubscribeTest_ProducerConsumer,The length of the statement  "            this.fixture.Logger.Info("\n\n************************ Halo_AzureQueue_ResubscribeTest_ProducerConsumer ********************************* \n\n"); " is 145.
Long Statement,UnitTests.HaloTests.Streaming,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\HaloStreamSubscribeTests.cs,Configure,The length of the statement  "                        .AddSimpleMessageStreamProvider("SMSProviderDoNotOptimizeForImmutableData"' options => options.OptimizeForImmutableData = false) " is 128.
Long Statement,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' "after deactivate first producer"' expectedNumProducers' 1' " is 128.
Long Statement,UnitTests.StreamingTests,MySiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,Configure,The length of the statement  "                    .AddSimpleMessageStreamProvider("SMSProviderDoNotOptimizeForImmutableData"' options => options.OptimizeForImmutableData = false) " is 128.
Long Statement,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Churn_NumStreams_FewPublishers,The length of the statement  "            Assert.Equal(activeConsumerGrains + (numStreams * numConsumers)'  consumerCount);  //  "The right number of Consumer grains are active" " is 135.
Long Statement,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Churn_NumStreams_FewPublishers,The length of the statement  "            Assert.Equal(activeProducerGrains + (numStreams * numProducers)'  producerCount);  //  "The right number of Producer grains are active" " is 135.
Long Statement,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Churn_NumStreams,The length of the statement  "                Task promise = SetupOneStream(streamIds[i]' streamProviderName' pipeline' numConsumers' numProducers' normalSubscribeCalls); " is 124.
Long Statement,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Test_Stream_Churn_NumStreams,The length of the statement  "            Assert.Equal(activeConsumerGrains + (numStreams * numConsumers)'  consumerCount);  //  "The correct number of new Consumer grains are active" " is 141.
Long Statement,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SetupOneStream,The length of the statement  "                var c = SetupConsumers(streamId' this.StreamNamespace' streamProviderName' pipeline' numConsumers' normalSubscribeCalls); " is 121.
Long Statement,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SetupProducers,The length of the statement  "                    // First call for this stream' so wait for call to complete successfully so we know underlying infrastructure is set up. " is 120.
Long Statement,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SetupConsumers,The length of the statement  "                //    // First call for this stream' so wait for call to complete successfully so we know underlying infrastructure is set up. " is 126.
Long Statement,UnitTests.StreamingTests,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,Configure,The length of the statement  "                    .AddSimpleMessageStreamProvider("SMSProviderDoNotOptimizeForImmutableData"' options => options.OptimizeForImmutableData = false) " is 128.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiConsumerSameGrain,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 0' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiConsumerSameGrain,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 1' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiConsumerSameGrain,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 2' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiProducerSameGrain,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 0' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiProducerSameGrain,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 0' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiProducerSameGrain,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 1' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiProducerSameGrain,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 2' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_Unsubscribe,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 0' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_Unsubscribe,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 1' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_Unsubscribe,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 2' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_Unsubscribe,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 1' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_Unsubscribe,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 0' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AllSilosRestart_PubSubCounts,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 1' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AllSilosRestart_PubSubCounts,The length of the statement  "            // Note: It is not guaranteed that the list of producers will not get modified / cleaned up during silo shutdown' so can't assume count will be 1 here. " is 151.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AllSilosRestart_PubSubCounts,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' -1' 1' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 163.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AllSilosRestart_PubSubCounts,The length of the statement  "            await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 1' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace); " is 162.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_SiloJoins,The length of the statement  "            output.WriteLine("Grain silo locations: Producer={0} OldConsumer={1} NewConsumer={2}"' producerLocation' consumerLocation' newSilo.SiloAddress); " is 144.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckConsumerProducerStatus,The length of the statement  "            output.WriteLine("Grain {0} HandleCount={1} ObserverCount={2}"' consumerGrainId' consumerHandleCount' consumerObserverCount); " is 125.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckGrainCounts,The length of the statement  "                StreamTestUtils.Assert_AreEqual(output' 2' grainLocs[0].ActivationCount' "Num grains on same Silo " + grainLocs[0].SiloAddress); " is 128.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckGrainCounts,The length of the statement  "                StreamTestUtils.Assert_AreEqual(output' 1' grainLocs[0].ActivationCount' "Num grains on Silo " + grainLocs[0].SiloAddress); " is 123.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckGrainCounts,The length of the statement  "                StreamTestUtils.Assert_AreEqual(output' 1' grainLocs[1].ActivationCount' "Num grains on Silo " + grainLocs[1].SiloAddress); " is 123.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckReceivedCounts,The length of the statement  "            StreamTestUtils.Assert_AreEqual(output' expectedErrorsCount' errorsCount' "ErrorsCount for stream {0} for grain {1} {2}"' _streamId' pk' when); " is 143.
Long Statement,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckConsumerCounts,The length of the statement  "            StreamTestUtils.Assert_AreEqual(output' expectedConsumerCount' consumerCount' "ConsumerCount for stream {0} {1}"' _streamId' when); " is 131.
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossipTableTests,The following statement contains a magic number: IPEndPoint ep1 = new IPEndPoint(ip' 21111);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossipTableTests,The following statement contains a magic number: IPEndPoint ep2 = new IPEndPoint(ip' 21112);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_ConfigGossip,The following statement contains a magic number: var ts1 = new DateTime(year: 2011' month: 1' day: 1' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_ConfigGossip,The following statement contains a magic number: var ts2 = new DateTime(year: 2012' month: 2' day: 2' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_ConfigGossip,The following statement contains a magic number: var ts2 = new DateTime(year: 2012' month: 2' day: 2' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_ConfigGossip,The following statement contains a magic number: var ts2 = new DateTime(year: 2012' month: 2' day: 2' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_ConfigGossip,The following statement contains a magic number: var ts3 = new DateTime(year: 2013' month: 3' day: 3' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_ConfigGossip,The following statement contains a magic number: var ts3 = new DateTime(year: 2013' month: 3' day: 3' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_ConfigGossip,The following statement contains a magic number: var ts3 = new DateTime(year: 2013' month: 3' day: 3' hour: 0' minute: 0' second: 0' kind: DateTimeKind.Utc);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_GatewayGossip,The following statement contains a magic number: var ts3 = ts1 + new TimeSpan(hours: 0' minutes: 0' seconds: 2);
Magic Number,Tester.AzureUtils,AzureGossipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureGossipTableTests.cs,AzureGossip_GatewayGossip,The following statement contains a magic number: Assert.Equal(2' answer.Gateways.Count);
Magic Number,Tester.AzureUtils,LivenessTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureLivenessTests.cs,Liveness_Azure_4_Restart_Silo_1,The following statement contains a magic number: await Do_Liveness_OracleTest_2(2);
Magic Number,Tester.AzureUtils,LivenessTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureLivenessTests.cs,Liveness_Azure_5_Kill_Silo_1_With_Timers,The following statement contains a magic number: await Do_Liveness_OracleTest_2(2' false' true);
Magic Number,Tester.AzureUtils,AzureMembershipTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureMembershipTableTests.cs,CreateMembershipTable,The following statement contains a magic number: var options = new AzureStorageClusteringOptions()              {                  MaxStorageBusyRetries = 3'                  ConnectionString = this.connectionString'              };
Magic Number,Tester.AzureUtils,AzureQueueDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureQueueDataManagerTests.cs,AQ_Standalone_2,The following statement contains a magic number: int numMsgs = 10;
Magic Number,Tester.AzureUtils,AzureQueueDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureQueueDataManagerTests.cs,AQ_Standalone_3_Init_MultipleThreads,The following statement contains a magic number: const int NumThreads = 100;
Magic Number,Tester.AzureUtils,AzureQueueDataManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureQueueDataManagerTests.cs,AQ_Standalone_4,The following statement contains a magic number: TimeSpan visibilityTimeout = TimeSpan.FromSeconds(2);
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_WriteAlot_SinglePartition,The following statement contains a magic number: const int iterations = 2000;
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_WriteAlot_SinglePartition,The following statement contains a magic number: const int batchSize = 1000;
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_WriteAlot_MultiPartition,The following statement contains a magic number: const int iterations = 2000;
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_WriteAlot_MultiPartition,The following statement contains a magic number: const int batchSize = 1000;
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_WriteAlot_MultiPartition,The following statement contains a magic number: const int numPartitions = 100;
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_ReadAll_SinglePartition,The following statement contains a magic number: const int iterations = 1000;
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_ReadAllTableEntities,The following statement contains a magic number: const int iterations = 2000;
Magic Number,Tester.AzureUtils,AzureTableDataManagerStressTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableDataManagerStressTests.cs,AzureTableDataManagerStressTests_ReadAllTableEntities,The following statement contains a magic number: WriteAlot_Async(testName' 3' iterations' iterations);
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsRetriableHttpError,The following statement contains a magic number: Assert.True(AzureTableUtils.IsRetriableHttpError((HttpStatusCode) 503' null));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsRetriableHttpError,The following statement contains a magic number: Assert.True(AzureTableUtils.IsRetriableHttpError((HttpStatusCode) 504' null));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsRetriableHttpError,The following statement contains a magic number: Assert.True(AzureTableUtils.IsRetriableHttpError((HttpStatusCode) 408' null));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsRetriableHttpError,The following statement contains a magic number: Assert.True(AzureTableUtils.IsRetriableHttpError((HttpStatusCode) 500' "OperationTimedOut"));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsRetriableHttpError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsRetriableHttpError((HttpStatusCode) 500' null));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsRetriableHttpError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsRetriableHttpError((HttpStatusCode) 500' "SomeOtherStatusValue"));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsRetriableHttpError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsRetriableHttpError((HttpStatusCode) 200' null));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsContentionError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsContentionError((HttpStatusCode) 503));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsContentionError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsContentionError((HttpStatusCode) 504));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsContentionError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsContentionError((HttpStatusCode) 408));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsContentionError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsContentionError((HttpStatusCode) 500));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsContentionError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsContentionError((HttpStatusCode) 500));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsContentionError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsContentionError((HttpStatusCode) 500));
Magic Number,Tester.AzureUtils,AzureTableErrorCodeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureTableErrorCodeTests.cs,AzureTableErrorCode_IsContentionError,The following statement contains a magic number: Assert.False(AzureTableUtils.IsContentionError((HttpStatusCode) 200));
Magic Number,Tester.AzureUtils,SiloInstanceTableManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\SiloInstanceTableManagerTests.cs,SiloInstanceTable_Op_CleanDeadSiloInstance,The following statement contains a magic number: i < 5
Magic Number,Tester.AzureUtils,SiloInstanceTableManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\SiloInstanceTableManagerTests.cs,SiloInstanceTable_Op_CleanDeadSiloInstance,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(3));
Magic Number,Tester.AzureUtils,SiloInstanceTableManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\SiloInstanceTableManagerTests.cs,SiloInstanceTable_Op_CleanDeadSiloInstance,The following statement contains a magic number: Assert.Equal(5' entries.Count);
Magic Number,Tester.AzureUtils,SiloInstanceTableManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\SiloInstanceTableManagerTests.cs,SiloAddress_ToFrom_RowKey,The following statement contains a magic number: int port = 5555;
Magic Number,Tester.AzureUtils,SiloInstanceTableManagerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\SiloInstanceTableManagerTests.cs,SiloAddress_ToFrom_RowKey,The following statement contains a magic number: int generation = 6666;
Magic Number,UnitTests.RemindersTest,AzureRemindersTableTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\AzureRemindersTableTests.cs,RemindersTable_Azure_RemindersRange,The following statement contains a magic number: await RemindersRange(50);
Magic Number,Tester.AzureUtils.General,GenericGrainsInAzureTableStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\GenericGrainsInAzureStorageTests.cs,Generic_OnAzureTableStorage_LongNamedGrain_EchoValue,The following statement contains a magic number: await grain.EchoAsync(42);
Magic Number,Tester.AzureUtils.General,GenericGrainsInAzureTableStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\GenericGrainsInAzureStorageTests.cs,Generic_OnAzureTableStorage_ShortNamedGrain_EchoValue,The following statement contains a magic number: await grain.EchoAsync(42);
Magic Number,Tester.AzureUtils.General,GenericGrainsInAzureBlobStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\GenericGrainsInAzureStorageTests.cs,Generic_OnAzureBlobStorage_LongNamedGrain_EchoValue,The following statement contains a magic number: await grain.EchoAsync(42);
Magic Number,Tester.AzureUtils.General,GenericGrainsInAzureBlobStorageTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\GenericGrainsInAzureStorageTests.cs,Generic_OnAzureBlobStorage_ShortNamedGrain_EchoValue,The following statement contains a magic number: await grain.EchoAsync(42);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportAutoScaleScenario,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(1' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportAutoScaleScenario,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportAutoScaleScenario,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportAutoScaleScenario,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(3' 3' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportAutoScaleScenario,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(3' 3' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportAutoScaleScenario,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportAutoScaleScenario,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(1' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(3' 3' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(3' 3' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio,The following statement contains a magic number: await TestingUtils.WaitUntilAsync(lastTry => AgentManagerOwnCorrectAmountOfAgents(2' 2' mgmtGrain' lastTry)' TimeOut);
Magic Number,Tester.AzureUtils.Lease,LeaseBasedQueueBalancerTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,AgentManagerOwnCorrectAmountOfAgents,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(10));
Magic Number,Tester.AzureUtils.Lease,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,Configure,The following statement contains a magic number: hostBuilder                      .UseAzureBlobLeaseProvider(ob => ob.Configure<IOptions<ClusterOptions>>((options' cluster) =>                      {                          options.DataConnectionString = TestDefaultConfiguration.DataConnectionString;                          options.BlobContainerName = "cluster-" + cluster.Value.ClusterId + "-leases";                      }))                      .UseAzureStorageClustering(options => options.ConnectionString = TestDefaultConfiguration.DataConnectionString)                      .AddMemoryStreams<DefaultMemoryMessageBodySerializer>(StreamProviderName' b=>                      {                          b.ConfigurePartitioning(totalQueueCount);                          b.UseLeaseBasedQueueBalancer(ob => ob.Configure(options =>                          {                              options.LeaseLength = TimeSpan.FromSeconds(15);                              options.LeaseRenewPeriod = TimeSpan.FromSeconds(10);                              options.LeaseAquisitionPeriod = TimeSpan.FromSeconds(10);                          }));                      })                      .ConfigureLogging(builder => builder.AddFilter($"LeaseBasedQueueBalancer-{StreamProviderName}"' LogLevel.Trace))                      .AddMemoryGrainStorage("PubSubStore");
Magic Number,Tester.AzureUtils.Lease,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,Configure,The following statement contains a magic number: hostBuilder                      .UseAzureBlobLeaseProvider(ob => ob.Configure<IOptions<ClusterOptions>>((options' cluster) =>                      {                          options.DataConnectionString = TestDefaultConfiguration.DataConnectionString;                          options.BlobContainerName = "cluster-" + cluster.Value.ClusterId + "-leases";                      }))                      .UseAzureStorageClustering(options => options.ConnectionString = TestDefaultConfiguration.DataConnectionString)                      .AddMemoryStreams<DefaultMemoryMessageBodySerializer>(StreamProviderName' b=>                      {                          b.ConfigurePartitioning(totalQueueCount);                          b.UseLeaseBasedQueueBalancer(ob => ob.Configure(options =>                          {                              options.LeaseLength = TimeSpan.FromSeconds(15);                              options.LeaseRenewPeriod = TimeSpan.FromSeconds(10);                              options.LeaseAquisitionPeriod = TimeSpan.FromSeconds(10);                          }));                      })                      .ConfigureLogging(builder => builder.AddFilter($"LeaseBasedQueueBalancer-{StreamProviderName}"' LogLevel.Trace))                      .AddMemoryGrainStorage("PubSubStore");
Magic Number,Tester.AzureUtils.Lease,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Lease\LeaseBasedQueueBalancerTests.cs,Configure,The following statement contains a magic number: hostBuilder                      .UseAzureBlobLeaseProvider(ob => ob.Configure<IOptions<ClusterOptions>>((options' cluster) =>                      {                          options.DataConnectionString = TestDefaultConfiguration.DataConnectionString;                          options.BlobContainerName = "cluster-" + cluster.Value.ClusterId + "-leases";                      }))                      .UseAzureStorageClustering(options => options.ConnectionString = TestDefaultConfiguration.DataConnectionString)                      .AddMemoryStreams<DefaultMemoryMessageBodySerializer>(StreamProviderName' b=>                      {                          b.ConfigurePartitioning(totalQueueCount);                          b.UseLeaseBasedQueueBalancer(ob => ob.Configure(options =>                          {                              options.LeaseLength = TimeSpan.FromSeconds(15);                              options.LeaseRenewPeriod = TimeSpan.FromSeconds(10);                              options.LeaseAquisitionPeriod = TimeSpan.FromSeconds(10);                          }));                      })                      .ConfigureLogging(builder => builder.AddFilter($"LeaseBasedQueueBalancer-{StreamProviderName}"' LogLevel.Trace))                      .AddMemoryGrainStorage("PubSubStore");
Magic Number,Tester.AzureUtils.Persistence,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureBlobStore.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 4;
Magic Number,Tester.AzureUtils.Persistence,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureBlobStore.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 4;
Magic Number,Tester.AzureUtils.Persistence,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureBlobStore.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 4;
Magic Number,Tester.AzureUtils.Persistence,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureBlobStore.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 4;
Magic Number,Tester.AzureUtils.Persistence,Fixture,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureBlobStore.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 4;
Magic Number,Tester.AzureUtils.Persistence,Base_PersistenceGrainTests_AzureStore,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureStore.cs,RunPerfTest,The following statement contains a magic number: elapsed > target.Multiply(2.0 * timingFactor)
Magic Number,Tester.AzureUtils.Persistence,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceGrainTests_AzureStore.cs,Configure,The following statement contains a magic number: hostBuilder.UseAzureStorageClustering(options =>                  {                      options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                      options.MaxStorageBusyRetries = 3;                  });
Magic Number,Tester.AzureUtils.Persistence,PersistenceProviderTests_Local,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceProviderTests.cs,PersistenceProvider_Memory_FixedLatency_WriteRead,The following statement contains a magic number: TimeSpan expectedLatency = TimeSpan.FromMilliseconds(200);
Magic Number,Tester.AzureUtils.Persistence,PersistenceProviderTests_Local,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceProviderTests.cs,Json_Perf_Newtonsoft_vs_Net,The following statement contains a magic number: const int numIterations = 10000;
Magic Number,Tester.AzureUtils.Persistence,PersistenceProviderTests_Local,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceProviderTests.cs,EnsureEnvironmentSupportsState,The following statement contains a magic number: grainState.State.A.Length > 400 * 1024
Magic Number,Tester.AzureUtils.Persistence,PersistenceProviderTests_Local,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceProviderTests.cs,EnsureEnvironmentSupportsState,The following statement contains a magic number: grainState.State.A.Length > 400 * 1024
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Basic,The following statement contains a magic number: Thread.Sleep(period.Multiply(2) + LEEWAY);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Basic,The following statement contains a magic number: Assert.Equal(2' last);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Basic_Restart,The following statement contains a magic number: Thread.Sleep(period.Multiply(2) + LEEWAY);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Basic_Restart,The following statement contains a magic number: Assert.Equal(2' last);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Basic_Restart,The following statement contains a magic number: sleepFor = period.Multiply(2) + LEEWAY;
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Basic_Restart,The following statement contains a magic number: AssertIsInRange(curr' 2' 3' grain' DR' sleepFor);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Basic_Restart,The following statement contains a magic number: AssertIsInRange(curr' 2' 3' grain' DR' sleepFor);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_2J_MultiGrainMultiReminders,The following statement contains a magic number: await Task.Delay(period.Multiply(5));
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_2J_MultiGrainMultiReminders,The following statement contains a magic number: await this.HostedCluster.StartAdditionalSilosAsync(2' true);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_2F_MultiGrain,The following statement contains a magic number: List<SiloHandle> silos = await this.HostedCluster.StartAdditionalSilosAsync(2'true);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_RegisterSameReminderTwice,The following statement contains a magic number: await Task.WhenAll(tasks).WithTimeout(TimeSpan.FromSeconds(15));
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_GT_Basic,The following statement contains a magic number: Thread.Sleep(period.Multiply(2) + LEEWAY);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_GT_Basic,The following statement contains a magic number: Thread.Sleep(period.Multiply(2) + LEEWAY);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_GT_Basic,The following statement contains a magic number: Assert.Equal(4' last1);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_GT_Basic,The following statement contains a magic number: Assert.Equal(2' last2);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_GT_Basic,The following statement contains a magic number: Thread.Sleep(period.Multiply(2) + LEEWAY);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_GT_Basic,The following statement contains a magic number: Assert.Equal(4' curr2);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_AzureTable,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_AzureTable.cs,Rem_Azure_Wrong_LowerThanAllowedPeriod,The following statement contains a magic number: await Assert.ThrowsAsync<ArgumentException>(() =>                  grain.StartReminder(DR' TimeSpan.FromMilliseconds(3000)' true));
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,ReminderTests_Azure_Standalone,The following statement contains a magic number: TestUtils.ConfigureClientThreadPoolSettingsForStorageTests(1000);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertRate,The following statement contains a magic number: await TestTableInsertRate(table' 10);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,Reminders_AzureTable_InsertRate,The following statement contains a magic number: await TestTableInsertRate(table' 500);
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,TestTableInsertRate,The following statement contains a magic number: var e = new ReminderEntry                      {                          //GrainId = GrainId.GetGrainId(new Guid(s))'                          GrainRef = this.fixture.InternalGrainFactory.GetGrain(GrainId.NewId())'                          ReminderName = "MY_REMINDER_" + i'                          Period = TimeSpan.FromSeconds(5)'                          StartAt = DateTime.UtcNow                      };
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,TestTableInsertRate,The following statement contains a magic number: await Task.WhenAll(promises).WithTimeout(TimeSpan.FromSeconds(500));
Magic Number,Tester.AzureUtils.TimerTests,ReminderTests_Azure_Standalone,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Reminder\ReminderTests_Azure_Standalone.cs,NewReminderEntry,The following statement contains a magic number: return new ReminderEntry                  {                      GrainRef = this.fixture.InternalGrainFactory.GetGrain(GrainId.NewId())'                      ReminderName = string.Format("TestReminder.{0}"' guid)'                      Period = TimeSpan.FromSeconds(5)'                      StartAt = DateTime.UtcNow                  };
Magic Number,Tester.AzureUtils.Streaming,MyClientBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQClientStreamTests.cs,Configure,The following statement contains a magic number: clientBuilder                      .AddAzureQueueStreams(AQStreamProviderName' ob=>ob.Configure<IOptions<ClusterOptions>>(                          (options' dep) =>                          {                              options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                          }))                      .Configure<SiloMessagingOptions>(options => options.ClientDropTimeout = TimeSpan.FromSeconds(5));
Magic Number,Tester.AzureUtils.Streaming,AQStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQStreamingTests.cs,AQ_16_MultipleStreams_ManyDifferent_ManyProducerGrainsManyConsumerGrains,The following statement contains a magic number: var multiRunner = new MultipleStreamsTestRunner(this.InternalClient' SingleStreamTestRunner.AQ_STREAM_PROVIDER_NAME' 16' false);
Magic Number,Tester.AzureUtils.Streaming,AQStreamingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQStreamingTests.cs,AQ_17_MultipleStreams_1J_ManyProducerGrainsManyConsumerGrains,The following statement contains a magic number: var multiRunner = new MultipleStreamsTestRunner(this.InternalClient' SingleStreamTestRunner.AQ_STREAM_PROVIDER_NAME' 17' false);
Magic Number,Tester.AzureUtils.Streaming,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AQStreamingTests.cs,Configure,The following statement contains a magic number: hostBuilder                          .AddAzureQueueStreams(StreamBatchingTestConst.ProviderName' b =>                          {                              b.ConfigureAzureQueue(ob => ob.Configure<IOptions<ClusterOptions>>(                                  (options' dep) =>                                  {                                      options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                                      options.QueueNames = AzureQueueUtilities.GenerateQueueNames(dep.Value.ClusterId' queueCount);                                  }));                              b.ConfigurePullingAgent(ob => ob.Configure(options =>                              {                                  options.BatchContainerBatchSize = 10;                              }));                              b.ConfigureStreamPubSub(StreamPubSubType.ImplicitOnly);                          });
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromAzureQueue,The following statement contains a magic number: var options = new AzureQueueOptions              {                  ConnectionString = TestDefaultConfiguration.DataConnectionString'                  MessageVisibilityTimeout = TimeSpan.FromSeconds(30)'                  QueueNames = azureQueueNames              };
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: await Task.WhenAll(receivers.Values.Select(receiver => receiver.Initialize(TimeSpan.FromSeconds(5))));
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: Task task = Task.Factory.StartNew(() =>                  {                      while (receivedBatches < NumBatches)                      {                          var messages = receiver.GetQueueMessagesAsync(CloudQueueMessage.MaxNumberOfMessagesToPeek).Result.ToArray();                          if (!messages.Any())                          {                              continue;                          }                          foreach (IBatchContainer message in messages)                          {                              streamsPerQueue.AddOrUpdate(queueId'                                  id => new HashSet<IStreamIdentity> { new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()) }'                                  (id' set) =>                                  {                                      set.Add(new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()));                                      return set;                                  });                              this.output.WriteLine("Queue {0} received message on stream {1}"' queueId'                                  message.StreamGuid);                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<int>().Count());  // "Half the events were ints"                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<string>().Count());  // "Half the events were strings"                          }                          Interlocked.Add(ref receivedBatches' messages.Length);                          qCache.AddToCache(messages);                      }                  });
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: Task task = Task.Factory.StartNew(() =>                  {                      while (receivedBatches < NumBatches)                      {                          var messages = receiver.GetQueueMessagesAsync(CloudQueueMessage.MaxNumberOfMessagesToPeek).Result.ToArray();                          if (!messages.Any())                          {                              continue;                          }                          foreach (IBatchContainer message in messages)                          {                              streamsPerQueue.AddOrUpdate(queueId'                                  id => new HashSet<IStreamIdentity> { new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()) }'                                  (id' set) =>                                  {                                      set.Add(new StreamIdentity(message.StreamGuid' message.StreamGuid.ToString()));                                      return set;                                  });                              this.output.WriteLine("Queue {0} received message on stream {1}"' queueId'                                  message.StreamGuid);                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<int>().Count());  // "Half the events were ints"                              Assert.Equal(NumMessagesPerBatch / 2' message.GetEvents<string>().Count());  // "Half the events were strings"                          }                          Interlocked.Add(ref receivedBatches' messages.Length);                          qCache.AddToCache(messages);                      }                  });
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: work.Add(Task.Factory.StartNew(() => Enumerable.Range(0' NumBatches)                  .Select(i => i % 2 == 0 ? streamId1 : streamId2)                  .ToList()                  .ForEach(streamId =>                      adapter.QueueMessageBatchAsync(streamId' streamId.ToString()'                          events.Take(NumMessagesPerBatch).ToArray()' null' RequestContextExtensions.Export(this.fixture.SerializationManager)).Wait())));
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: messageCount == 10
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: Assert.Equal(NumBatches / 2' messageCount);
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: const int expected = NumBatches / 2 - 10 + 1;
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,SendAndReceiveFromQueueAdapter,The following statement contains a magic number: const int expected = NumBatches / 2 - 10 + 1;
Magic Number,Tester.AzureUtils.Streaming,AzureQueueAdapterTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\AzureQueueAdapterTests.cs,CreateEvents,The following statement contains a magic number: return Enumerable.Range(0' count).Select(i =>              {                  if (i % 2 == 0)                  {                      return Random.Next(int.MaxValue) as object;                  }                  return Random.Next(int.MaxValue).ToString(CultureInfo.InvariantCulture);              }).ToList();
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,ConfigureTestCluster,The following statement contains a magic number: builder.Options.InitialSilosCount = 2;
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_1,The following statement contains a magic number: await ValidateAgentsState(2' 2' "1");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_1,The following statement contains a magic number: await ValidateAgentsState(2' 2' "1");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_1,The following statement contains a magic number: await ValidateAgentsState(2' 4' "2");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_1,The following statement contains a magic number: await ValidateAgentsState(2' 4' "2");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_2,The following statement contains a magic number: await ValidateAgentsState(2' 2' "1");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_2,The following statement contains a magic number: await ValidateAgentsState(2' 2' "1");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_2,The following statement contains a magic number: await this.HostedCluster.StartAdditionalSilosAsync(2' true);
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_2,The following statement contains a magic number: await ValidateAgentsState(4' 2' "2");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_2,The following statement contains a magic number: await ValidateAgentsState(4' 2' "2");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_2,The following statement contains a magic number: await ValidateAgentsState(4' 2' "3");
Magic Number,Tester.AzureUtils.Streaming,DelayedQueueRebalancingTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\DelayedQueueRebalancingTests.cs,DelayedQueueRebalancingTests_2,The following statement contains a magic number: await ValidateAgentsState(4' 2' "3");
Magic Number,UnitTests.HaloTests.Streaming,HaloStreamSubscribeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\HaloStreamSubscribeTests.cs,ConsumerProducerTest,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,UnitTests.HaloTests.Streaming,HaloStreamSubscribeTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\HaloStreamSubscribeTests.cs,ProducerConsumerTest,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DisposeAsync,The following statement contains a magic number: await watcher.Clear().WithTimeout(TimeSpan.FromSeconds(15));
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,Stream_Lifecycle_AddRemoveProducers,The following statement contains a magic number: int numProducers = 10;
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: Assert.Equal(2' activations.Length);
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' "after add second consumer"' 0' 2'                  StreamId' StreamProviderName' StreamNamespace);
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' "after add second producer"' 1' 2'                      StreamId' StreamProviderName' StreamNamespace);
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: Assert.Equal(2' await consumer1.GetReceivedCount());
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: await producer2.SendItem(3);
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' "after second producer send"' 1' 2'                      StreamId' StreamProviderName' StreamNamespace);
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: Assert.Equal(3' await consumer1.GetReceivedCount());
Magic Number,UnitTests.StreamingTests,StreamLifecycleTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLifecycleTests.cs,DoStreamCleanupTest_Deactivate,The following statement contains a magic number: Assert.Equal(2' await consumer2.GetReceivedCount());
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P1_C128_S1,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  1' 1' 128);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P128_C1_S1,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  1' 128' 1);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P128_C128_S1,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  1' 128' 128);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P128_C128_S1,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  1' 128' 128);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P1_C400_S1,The following statement contains a magic number: int numConsumers = 400;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P9_C9_S152_Burst,The following statement contains a magic number: int numStreams = 152;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P9_C9_S152_Burst,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  numStreams' 9' 9' useFanOut: true);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P9_C9_S152_Burst,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  numStreams' 9' 9' useFanOut: true);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P9_C9_S152_NoBurst,The following statement contains a magic number: int numStreams = 152;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P9_C9_S152_NoBurst,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  numStreams' 9' 9' useFanOut: false);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P9_C9_S152_NoBurst,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  numStreams' 9' 9' useFanOut: false);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P1_C9_S152_Burst,The following statement contains a magic number: int numStreams = 152;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P1_C9_S152_Burst,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  numStreams' 1' 9' useFanOut: true);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P1_C9_S152_NoBurst,The following statement contains a magic number: int numStreams = 152;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Limits_P1_C9_S152_NoBurst,The following statement contains a magic number: await Test_Stream_Limits(                  SmsStreamProviderName'                  numStreams' 1' 9' useFanOut: false);
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Churn_Subscribers_P0_C10_ManyStreams,The following statement contains a magic number: int numStreams = 2000;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Churn_Subscribers_P0_C10_ManyStreams,The following statement contains a magic number: int pipelineSize = 10000;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Churn_Subscribers_P0_C10_ManyStreams,The following statement contains a magic number: await Test_Stream_Churn_NumStreams(                  SmsStreamProviderName'                  pipelineSize'                  numStreams'                  numConsumers: 10'                  numProducers: 0              );
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Churn_FewPublishers_C9_ManyStreams,The following statement contains a magic number: int numStreams = 1000;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Churn_FewPublishers_C9_ManyStreams,The following statement contains a magic number: int pipelineSize = 100;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Churn_FewPublishers_C9_ManyStreams_PubSubDirect,The following statement contains a magic number: int numStreams = 1000;
Magic Number,UnitTests.StreamingTests,StreamLimitTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamLimitTests.cs,SMS_Churn_FewPublishers_C9_ManyStreams_PubSubDirect,The following statement contains a magic number: int pipelineSize = 100;
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,ConfigureTestCluster,The following statement contains a magic number: this.numExpectedSilos = 2;
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AddMany_Consumers,The following statement contains a magic number: const int numLoops = 100;
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AddMany_Consumers,The following statement contains a magic number: const int numGrains = 10;
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AddMany_Consumers,The following statement contains a magic number: int baseId = 10000 * ++baseConsumerId;
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AddMany_Consumers,The following statement contains a magic number: await producerGrain.SendItem(2);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AddMany_Consumers,The following statement contains a magic number: baseId = 10000 * ++baseConsumerId;
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AddMany_Consumers,The following statement contains a magic number: await producerGrain.SendItem(3);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_AddMany_Consumers,The following statement contains a magic number: await CheckReceivedCounts(when2' consumerGrain' numLoops*2 + 1' 0);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiConsumerSameGrain,The following statement contains a magic number: await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 2' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_MultiProducerSameGrain,The following statement contains a magic number: await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 2' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_Unsubscribe,The following statement contains a magic number: await StreamTestUtils.CheckPubSubCounts(this.InternalClient' output' when' 1' 2' _streamId' _streamProviderName' StreamTestsConstants.StreamReliabilityNamespace);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_PubSub_Unsubscribe,The following statement contains a magic number: await CheckConsumerCounts(when' consumerGrain' 2);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,SMS_AllSilosRestart_UnsubscribeConsumer,The following statement contains a magic number: await Task.Delay(100);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,SMS_AllSilosRestart_UnsubscribeConsumer,The following statement contains a magic number: i < 3
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_SiloJoins,The following statement contains a magic number: const int numLoops = 3;
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_SiloJoins,The following statement contains a magic number: await producerGrain.SendItem(2);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Test_SiloJoins,The following statement contains a magic number: await producerGrain.SendItem(4);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,StopSilo,The following statement contains a magic number: logger.Warn(2' "{0} {1} silo {2}"' action' siloType' oldSilo);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckGrainCounts,The following statement contains a magic number: Assert.True(grainLocs.Length <= 2' "Found too many grains " + grainLocs.Length);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckGrainCounts,The following statement contains a magic number: StreamTestUtils.Assert_AreEqual(output' 2' grainLocs[0].ActivationCount' "Num grains on same Silo " + grainLocs[0].SiloAddress);
Magic Number,UnitTests.Streaming.Reliability,StreamReliabilityTests,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,CheckReceivedCounts,The following statement contains a magic number: i < 20
Magic Number,UnitTests.Streaming.Reliability,ClientBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Configure,The following statement contains a magic number: clientBuilder.UseAzureStorageClustering(gatewayOptions =>                  {                      gatewayOptions.ConnectionString = TestDefaultConfiguration.DataConnectionString;                  })                  .AddAzureQueueStreams(AZURE_QUEUE_STREAM_PROVIDER_NAME' ob => ob.Configure<IOptions<ClusterOptions>>(                      (options' dep) =>                      {                          options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                          options.QueueNames = AzureQueueUtilities.GenerateQueueNames(dep.Value.ClusterId' queueCount);                      }))                  .AddSimpleMessageStreamProvider(SMS_STREAM_PROVIDER_NAME)                  .Configure<GatewayOptions>(options => options.GatewayListRefreshPeriod = TimeSpan.FromSeconds(5));
Magic Number,UnitTests.Streaming.Reliability,SiloBuilderConfigurator,D:\research\architectureSmells\repos\dotnet_orleans\test\Extensions\TesterAzureUtils\Streaming\StreamReliabilityTests.cs,Configure,The following statement contains a magic number: hostBuilder.UseAzureStorageClustering(options =>                  {                      options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                      options.MaxStorageBusyRetries = 3;                  })                  .AddAzureTableGrainStorage("AzureStore"' builder => builder.Configure<IOptions<ClusterOptions>>((options' silo) =>                      {                          options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                          options.DeleteStateOnClear = true;                      }))                  .AddMemoryGrainStorage("MemoryStore"' options => options.NumStorageGrains = 1)                  .AddSimpleMessageStreamProvider(SMS_STREAM_PROVIDER_NAME)                  .AddAzureTableGrainStorage("PubSubStore"' builder => builder.Configure<IOptions<ClusterOptions>>((options' silo) =>                  {                      options.DeleteStateOnClear = true;                      options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                  }))                  .AddAzureQueueStreams(AZURE_QUEUE_STREAM_PROVIDER_NAME' ob => ob.Configure<IOptions<ClusterOptions>>(                  (options' dep) =>                  {                      options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                      options.QueueNames = AzureQueueUtilities.GenerateQueueNames(dep.Value.ClusterId' queueCount);                  }))                  .AddAzureQueueStreams("AzureQueueProvider2"' ob => ob.Configure<IOptions<ClusterOptions>>(                  (options' dep) =>                  {                      options.ConnectionString = TestDefaultConfiguration.DataConnectionString;                      options.QueueNames = AzureQueueUtilities.GenerateQueueNames($"{dep.Value.ClusterId}2"' queueCount);                  }));
