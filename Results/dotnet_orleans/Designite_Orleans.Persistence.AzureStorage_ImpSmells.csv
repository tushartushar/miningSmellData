Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,AzureBlobGrainStorage,The method has 6 parameters. Parameters: name' options' serializationManager' grainFactory' typeResolver' loggerFactory
Long Parameter List,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,WriteStateAndCreateContainerIfNotExists,The method has 5 parameters. Parameters: grainType' grainId' grainState' contents' blob
Long Parameter List,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,AzureTableGrainStorage,The method has 7 parameters. Parameters: name' options' clusterOptions' serializationManager' grainFactory' typeResolver' loggerFactory
Long Parameter List,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,DoOptimisticUpdate,The method has 5 parameters. Parameters: updateOperation' grainType' grainReference' tableName' currentETag
Long Parameter List,Orleans.Storage,TableStorageUpdateConditionNotSatisfiedException,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Storage\TableStorageUpdateConditionNotSatisfiedException.cs,TableStorageUpdateConditionNotSatisfiedException,The method has 7 parameters. Parameters: errorMsg' grainType' grainId' tableName' storedEtag' currentEtag' storageException
Long Parameter List,Orleans.Storage,TableStorageUpdateConditionNotSatisfiedException,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Storage\TableStorageUpdateConditionNotSatisfiedException.cs,TableStorageUpdateConditionNotSatisfiedException,The method has 6 parameters. Parameters: grainType' grainId' tableName' storedEtag' currentEtag' storageException
Long Parameter List,Orleans.Storage,TableStorageUpdateConditionNotSatisfiedException,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Storage\TableStorageUpdateConditionNotSatisfiedException.cs,CreateDefaultMessage,The method has 5 parameters. Parameters: grainType' grainId' tableName' storedEtag' currentEtag
Long Identifier,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadTableEntriesAndEtagsAsync,The length of the parameter executeQueryHandleContinuations is 31.
Long Statement,Orleans.Hosting,AzureBlobSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureBlobSiloBuilderExtensions.cs,AddAzureBlobGrainStorageAsDefault,The length of the statement  "            return services.AddAzureBlobGrainStorage(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME' ob => ob.Configure(configureOptions)); " is 128.
Long Statement,Orleans.Hosting,AzureBlobSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureBlobSiloBuilderExtensions.cs,AddAzureBlobGrainStorage,The length of the statement  "            services.AddTransient<IConfigurationValidator>(sp => new AzureBlobStorageOptionsValidator(sp.GetRequiredService<IOptionsMonitor<AzureBlobStorageOptions>>().Get(name)' name)); " is 174.
Long Statement,Orleans.Hosting,AzureBlobSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureBlobSiloBuilderExtensions.cs,AddAzureBlobGrainStorage,The length of the statement  "            services.TryAddSingleton<IGrainStorage>(sp => sp.GetServiceByName<IGrainStorage>(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME)); " is 131.
Long Statement,Orleans.Hosting,AzureBlobSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureBlobSiloBuilderExtensions.cs,AddAzureBlobGrainStorage,The length of the statement  "                           .AddSingletonNamedService<ILifecycleParticipant<ISiloLifecycle>>(name' (s' n) => (ILifecycleParticipant<ISiloLifecycle>)s.GetRequiredServiceByName<IGrainStorage>(n)); " is 166.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureTableSiloBuilderExtensions.cs,AddAzureTableGrainStorage,The length of the statement  "            return builder.ConfigureServices(services => services.AddAzureTableGrainStorage(name' ob => ob.Configure(configureOptions))); " is 125.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureTableSiloBuilderExtensions.cs,AddAzureTableGrainStorage,The length of the statement  "            return builder.ConfigureServices(services => services.AddAzureTableGrainStorage(name' ob => ob.Configure(configureOptions))); " is 125.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureTableSiloBuilderExtensions.cs,AddAzureTableGrainStorage,The length of the statement  "            services.AddTransient<IConfigurationValidator>(sp => new AzureTableGrainStorageOptionsValidator(sp.GetRequiredService<IOptionsMonitor<AzureTableStorageOptions>>().Get(name)' name)); " is 181.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureTableSiloBuilderExtensions.cs,AddAzureTableGrainStorage,The length of the statement  "            services.TryAddSingleton<IGrainStorage>(sp => sp.GetServiceByName<IGrainStorage>(ProviderConstants.DEFAULT_STORAGE_PROVIDER_NAME)); " is 131.
Long Statement,Orleans.Hosting,AzureTableSiloBuilderExtensions,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Hosting\AzureTableSiloBuilderExtensions.cs,AddAzureTableGrainStorage,The length of the statement  "                           .AddSingletonNamedService<ILifecycleParticipant<ISiloLifecycle>>(name' (s' n) => (ILifecycleParticipant<ISiloLifecycle>)s.GetRequiredServiceByName<IGrainStorage>(n)); " is 166.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ReadStateAsync,The length of the statement  "            if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_Storage_Reading' "Reading: GrainType={0} Grainid={1} ETag={2} from BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 269.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ReadStateAsync,The length of the statement  "                    if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_BlobNotFound' "BlobNotFound reading: GrainType={0} Grainid={1} ETag={2} from BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 279.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ReadStateAsync,The length of the statement  "                    if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_ContainerNotFound' "ContainerNotFound reading: GrainType={0} Grainid={1} ETag={2} from BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 289.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ReadStateAsync,The length of the statement  "                    if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_BlobEmpty' "BlobEmpty reading: GrainType={0} Grainid={1} ETag={2} from BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 273.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ReadStateAsync,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_Storage_DataRead' "Read: GrainType={0} Grainid={1} ETag={2} from BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 267.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ReadStateAsync,The length of the statement  "                    string.Format("Error reading: GrainType={0} Grainid={1} ETag={2} from BlobName={3} in Container={4} Exception={5}"' grainType' grainId' grainState.ETag' blobName' container.Name' ex.Message)' " is 191.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,WriteStateAsync,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_Storage_Writing' "Writing: GrainType={0} Grainid={1} ETag={2} to BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 267.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,WriteStateAsync,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_Storage_DataRead' "Written: GrainType={0} Grainid={1} ETag={2} to BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 268.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,WriteStateAsync,The length of the statement  "                    string.Format("Error writing: GrainType={0} Grainid={1} ETag={2} to BlobName={3} in Container={4} Exception={5}"' grainType' grainId' grainState.ETag' blobName' container.Name' ex.Message)' " is 189.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ClearStateAsync,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_ClearingData' "Clearing: GrainType={0} Grainid={1} ETag={2} BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blobName' container.Name); " is 262.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ClearStateAsync,The length of the statement  "                await DoOptimisticUpdate(() => blob.DeleteIfExistsAsync(DeleteSnapshotsOption.None' AccessCondition.GenerateIfMatchCondition(grainState.ETag)' null' null)' " is 155.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ClearStateAsync,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_Cleared' "Cleared: GrainType={0} Grainid={1} ETag={2} BlobName={3} in Container={4}"' grainType' grainId' blob.Properties.ETag' blobName' container.Name); " is 261.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,ClearStateAsync,The length of the statement  "                  string.Format("Error clearing: GrainType={0} Grainid={1} ETag={2} BlobName={3} in Container={4} Exception={5}"' grainType' grainId' grainState.ETag' blobName' container.Name' ex.Message)' " is 187.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,WriteStateAndCreateContainerIfNotExists,The length of the statement  "                await DoOptimisticUpdate(() => blob.UploadFromByteArrayAsync(contents' 0' contents.Length' AccessCondition.GenerateIfMatchCondition(grainState.ETag)' null' null)' " is 162.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,WriteStateAndCreateContainerIfNotExists,The length of the statement  "                if (this.logger.IsEnabled(LogLevel.Trace)) this.logger.Trace((int)AzureProviderErrorCode.AzureBlobProvider_ContainerNotFound' "Creating container: GrainType={0} Grainid={1} ETag={2} to BlobName={3} in Container={4}"' grainType' grainId' grainState.ETag' blob.Name' container.Name); " is 281.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,DoOptimisticUpdate,The length of the statement  "                throw new InconsistentStateException($"Blob storage condition not Satisfied.  BlobName: {blob.Name}' Container: {blob.Container?.Name}' CurrentETag: {currentETag}"' "Unknown"' currentETag' ex); " is 193.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,Init,The length of the statement  "                this.logger.LogInformation((int)AzureProviderErrorCode.AzureTableProvider_InitProvider' $"AzureTableGrainStorage initializing: {this.options.ToString()}"); " is 155.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,Init,The length of the statement  "                this.logger.LogInformation((int)AzureProviderErrorCode.AzureTableProvider_ParamConnectionString' "AzureTableGrainStorage is using DataConnectionString: {0}"' ConfigUtilities.RedactConnectionStringInfo(this.options.ConnectionString)); " is 233.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,Init,The length of the statement  "                this.jsonSettings = OrleansJsonSerializer.UpdateSerializerSettings(OrleansJsonSerializer.GetDefaultSerializerSettings(this.typeResolver' this.grainFactory)' this.options.UseFullAssemblyNames' this.options.IndentJson' this.options.TypeNameHandling); " is 248.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,Init,The length of the statement  "                this.logger.LogInformation((int)AzureProviderErrorCode.AzureBlobProvider_InitProvider' $"Initializing provider {this.name} of type {this.GetType().Name} in stage {this.options.InitStage} took {stopWatch.ElapsedMilliseconds} Milliseconds."); " is 240.
Long Statement,Orleans.Storage,AzureBlobGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureBlobStorage.cs,Init,The length of the statement  "                this.logger.LogError((int)ErrorCode.Provider_ErrorFromInit' $"Initialization failed for provider {this.name} of type {this.GetType().Name} in stage {this.options.InitStage} in {stopWatch.ElapsedMilliseconds} Milliseconds."' ex); " is 228.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ReadStateAsync,The length of the statement  "            if(logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_ReadingData' "Reading: GrainType={0} Pk={1} Grainid={2} from Table={3}"' grainType' pk' grainReference' this.options.TableName); " is 225.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,WriteStateAsync,The length of the statement  "                logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_WritingData' "Writing: GrainType={0} Pk={1} Grainid={2} ETag={3} to Table={4}"' grainType' pk' grainReference' grainState.ETag' this.options.TableName); " is 212.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,WriteStateAsync,The length of the statement  "                await DoOptimisticUpdate(() => tableDataManager.Write(record)' grainType' grainReference' this.options.TableName' grainState.ETag).ConfigureAwait(false); " is 153.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,WriteStateAsync,The length of the statement  "                    $"Error Writing: GrainType={grainType} Grainid={grainReference} ETag={grainState.ETag} to Table={this.options.TableName} Exception={exc.Message}"' exc); " is 152.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ClearStateAsync,The length of the statement  "            if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_WritingData' "Clearing: GrainType={0} Pk={1} Grainid={2} ETag={3} DeleteStateOnClear={4} from Table={5}"' grainType' pk' grainReference' grainState.ETag' this.options.DeleteStateOnClear' this.options.TableName); " is 309.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ClearStateAsync,The length of the statement  "                    await DoOptimisticUpdate(() => tableDataManager.Delete(record)' grainType' grainReference' this.options.TableName' grainState.ETag).ConfigureAwait(false); " is 154.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ClearStateAsync,The length of the statement  "                    await DoOptimisticUpdate(() => tableDataManager.Write(record)' grainType' grainReference' this.options.TableName' grainState.ETag).ConfigureAwait(false); " is 153.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ClearStateAsync,The length of the statement  "                logger.Error((int)AzureProviderErrorCode.AzureTableProvider_DeleteError' string.Format("Error {0}: GrainType={1} Grainid={2} ETag={3} from Table={4} Exception={5}"' " is 164.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,DoOptimisticUpdate,The length of the statement  "                throw new TableStorageUpdateConditionNotSatisfiedException(grainType' grainReference' tableName' "Unknown"' currentETag' ex); " is 125.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ConvertToStorageFormat,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("Writing JSON data size = {0} for grain id = Partition={1} / Row={2}"' " is 121.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ConvertToStorageFormat,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace("Writing binary data size = {0} for grain id = Partition={1} / Row={2}"' " is 123.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Init,The length of the statement  "                this.logger.LogInformation((int)AzureProviderErrorCode.AzureTableProvider_InitProvider' $"AzureTableGrainStorage {name} initializing: {this.options.ToString()}"); " is 162.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Init,The length of the statement  "                this.logger.LogInformation((int)AzureProviderErrorCode.AzureTableProvider_ParamConnectionString' $"AzureTableGrainStorage {name} is using DataConnectionString: {ConfigUtilities.RedactConnectionStringInfo(this.options.ConnectionString)}"); " is 238.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Init,The length of the statement  "                this.JsonSettings = OrleansJsonSerializer.UpdateSerializerSettings(OrleansJsonSerializer.GetDefaultSerializerSettings(this.typeResolver' this.grainFactory)' this.options.UseFullAssemblyNames' this.options.IndentJson' this.options.TypeNameHandling); " is 248.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Init,The length of the statement  "                this.tableDataManager = new GrainStateTableDataManager(this.options.TableName' this.options.ConnectionString' this.loggerFactory); " is 130.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Init,The length of the statement  "                this.logger.LogInformation((int)AzureProviderErrorCode.AzureTableProvider_InitProvider' $"Initializing provider {this.name} of type {this.GetType().Name} in stage {this.options.InitStage} took {stopWatch.ElapsedMilliseconds} Milliseconds."); " is 241.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Init,The length of the statement  "                this.logger.LogError((int)ErrorCode.Provider_ErrorFromInit' $"Initialization failed for provider {this.name} of type {this.GetType().Name} in stage {this.options.InitStage} in {stopWatch.ElapsedMilliseconds} Milliseconds."' ex); " is 228.
Long Statement,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Participate,The length of the statement  "            lifecycle.Subscribe(OptionFormattingUtilities.Name<AzureTableGrainStorage>(this.name)' this.options.InitStage' Init' Close); " is 124.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Read,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_Storage_Reading' "Reading: PartitionKey={0} RowKey={1} from Table={2}"' partitionKey' rowKey' TableName); " is 203.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Read,The length of the statement  "                    Tuple<DynamicTableEntity' string> data = await tableManager.ReadSingleTableEntryAsync(partitionKey' rowKey).ConfigureAwait(false); " is 130.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Read,The length of the statement  "                        if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_DataNotFound' "DataNotFound reading: PartitionKey={0} RowKey={1} from Table={2}"' partitionKey' rowKey' TableName); " is 213.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Read,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_Storage_DataRead' "Read: PartitionKey={0} RowKey={1} from Table={2} with ETag={3}"' stateEntity.PartitionKey' stateEntity.RowKey' TableName' record.ETag); " is 252.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Read,The length of the statement  "                        if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_DataNotFound' "DataNotFound reading (exception): PartitionKey={0} RowKey={1} from Table={2} Exception={3}"' partitionKey' rowKey' TableName' LogFormatter.PrintException(exc)); " is 273.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Write,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_Storage_Writing' "Writing: PartitionKey={0} RowKey={1} to Table={2} with ETag={3}"' entity.PartitionKey' entity.RowKey' TableName' record.ETag); " is 242.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Delete,The length of the statement  "                    if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_DataNotFound' "Not attempting to delete non-existent persistent state: PartitionKey={0} RowKey={1} from Table={2} with ETag={3}"' entity.PartitionKey' entity.RowKey' TableName' record.ETag); " is 288.
Long Statement,Orleans.Storage,GrainStateTableDataManager,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Delete,The length of the statement  "                if (logger.IsEnabled(LogLevel.Trace)) logger.Trace((int)AzureProviderErrorCode.AzureTableProvider_Storage_Writing' "Deleting: PartitionKey={0} RowKey={1} from Table={2} with ETag={3}"' entity.PartitionKey' entity.RowKey' TableName' record.ETag); " is 245.
Long Statement,Orleans.Storage,AzureTableGrainStorageFactory,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,Create,The length of the statement  "            return ActivatorUtilities.CreateInstance<AzureTableGrainStorage>(services' name' optionsSnapshot.Get(name)' clusterOptions); " is 124.
Long Statement,Orleans.Configuration,AzureTableGrainStorageOptionsValidator,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorageOptions.cs,ValidateConfiguration,The length of the statement  "                    $"Configuration for AzureTableStorageProvider {name} is invalid. {nameof(this.options.ConnectionString)} is not valid."); " is 121.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Info((int)Utilities.ErrorCode.AzureTable_01' "{0} Azure storage table {1}"' (didCreate ? "Created" : "Attached to")' TableName); " is 135.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InitTableAsync,The length of the statement  "                Logger.Error((int)Utilities.ErrorCode.AzureTable_02' $"Could not initialize connection to storage table {TableName}"' exc); " is 123.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} partitionKey {2} rowKey = {3}"' operation' TableName' partitionKey' rowKey); " is 142.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadSingleTableEntryAsync,The length of the statement  "                if (Logger.IsEnabled(LogLevel.Debug)) Logger.Debug("Could not find table entry for PartitionKey={0} RowKey={1}"' partitionKey' rowKey); " is 135.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,ReadAllTableEntriesForPartitionAsync,The length of the statement  "            string query = TableQuery.GenerateFilterCondition(nameof(ITableEntity.PartitionKey)' QueryComparisons.Equal' partitionKey); " is 123.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,DeleteTableEntriesAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Deleting {0} table entries: {1}"' TableName' Utils.EnumerableToString(collection)); " is 135.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,BulkInsertTableEntries,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("Bulk inserting {0} entries to {1} table"' collection.Count' TableName); " is 123.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} into table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 132.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,InsertTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "            if (Logger.IsEnabled(LogLevel.Trace)) Logger.Trace("{0} table {1} data1 {2} data2 {3}"' operation' TableName' data1' data2Str); " is 127.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    // Only AddObject' do NOT AttachTo. If we did both UpdateObject and AttachTo' it would have been equivalent to InsertOrReplace. " is 127.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,UpdateTwoTableEntriesConditionallyAsync,The length of the statement  "                    //see reference at https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.storage.table.cloudtable.executebatch.aspx. " is 126.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "            if (AzureTableUtils.EvaluateException(exc' out httpStatusCode' out restStatus) && AzureTableUtils.IsContentionError(httpStatusCode)) " is 132.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertWriteError,The length of the statement  "                    $"Intermediate Azure table write error {operation} to table {TableName} data1 {(data1 ?? "null")} data2 {(data2 ?? "null")}"' exc); " is 131.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableDataManager<T>,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs,CheckAlertSlowAccess,The length of the statement  "                Logger.Warn((int)Utilities.ErrorCode.AzureTable_15' "Slow access to Azure Table {0} for {1}' which took {2}."' TableName' operation' timeSpan); " is 143.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.Conflict) return true;     //Primary key violation. The app is trying to insert an entity' but there’s an entity on the table with the same values for PartitionKey and RowKey properties on the entity being inserted. " is 252.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsContentionError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,IsNotFoundError,The length of the statement  "            if (httpStatusCode == HttpStatusCode.NotImplemented) return true; // New table: Azure table schema not yet initialized' so need to do first create " is 146.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The length of the statement  "            // http://www.jamestharpe.com/web-development/azure-table-service-character-combinations-disallowed-in-partitionkey-rowkey/ " is 123.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The length of the statement  "                throw new ArgumentException(string.Format("Key length {0} is too long to be an Azure table key. Key={1}"' key.Length' key)); " is 124.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                    $"Intermediate issue reading Azure storage table {tableName}: HTTP status code={statusCode} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 157.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                            $"Intermediate issue reading Azure storage table {tableName}:{(iteration == 0 ? "" : (" Repeat=" + iteration))} IsRetriable={isLastErrorRetriable} HTTP status code={httpStatusCode} REST status code={restStatus} Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 276.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,AnalyzeReadException,The length of the statement  "                        $"Unexpected issue reading Azure storage table {tableName}: Exception Type={exc.GetType().FullName} Message='{exc.Message}'"' " is 125.
Long Statement,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,PrintStorageException,The length of the statement  "                            String.Format("' ExtendedErrorInformation.AdditionalDetails = {0}"' Utils.DictionaryToString(extendedError.AdditionalDetails)) : String.Empty); " is 143.
Magic Number,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ConvertToStorageFormat,The following statement contains a magic number: dataSize = data.Length * 2;
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableCreationRetries = 60;
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableCreationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromSeconds(1)                  : TimeSpan.FromSeconds(100);
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxTableOperationRetries = 5;
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableOperationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(100)                  : TimeSpan.FromSeconds(10);
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenTableOperationRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(100)                  : TimeSpan.FromSeconds(10);
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: MaxBusyRetries = 120;
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenBusyRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(500)                  : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: PauseBetweenBusyRetries = (!Debugger.IsAttached)                  ? TimeSpan.FromMilliseconds(500)                  : TimeSpan.FromSeconds(5);
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableCreationTimeout = TimeSpan.FromMilliseconds(PauseBetweenTableCreationRetries.TotalMilliseconds * MaxTableCreationRetries * 3);
Magic Number,Orleans.Persistence.AzureStorage,AzureTableDefaultPolicies,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableDefaultPolicies.cs,AzureTableDefaultPolicies,The following statement contains a magic number: TableOperationTimeout = TimeSpan.FromMilliseconds(PauseBetweenTableOperationRetries.TotalMilliseconds * MaxTableOperationRetries *6);
Magic Number,Orleans.Persistence.AzureStorage,AzureTableUtils,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Shared\Storage\AzureTableUtils.cs,SanitizeTableProperty,The following statement contains a magic number: key.Length >= 1024
Missing Default,Orleans.Storage,AzureTableGrainStorage,D:\research\architectureSmells\repos\dotnet_orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs,ReadBinaryDataChunks,The following switch statement is missing a default case: switch (dataProperty.PropertyType)                      {                          // if TablePayloadFormat.JsonNoMetadata is used                          case EdmType.String:                              var stringValue = dataProperty.StringValue;                              if (!string.IsNullOrEmpty(stringValue))                              {                                  yield return Convert.FromBase64String(stringValue);                              }                              break;                            // if any payload type providing metadata is used                          case EdmType.Binary:                              var binaryValue = dataProperty.BinaryValue;                              if (binaryValue != null && binaryValue.Length > 0)                              {                                  yield return binaryValue;                              }                              break;                      }
