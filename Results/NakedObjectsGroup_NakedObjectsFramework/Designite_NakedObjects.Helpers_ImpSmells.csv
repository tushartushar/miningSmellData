Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NakedObjects,NewTitleBuilder,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Util\NewTitleBuilder.cs,TitleOrToString,Cyclomatic complexity of the method is 9
Complex Method,NakedObjects.Util,TypeUtils,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Util\TypeUtils.cs,MemberInfoEquals,Cyclomatic complexity of the method is 9
Long Statement,NakedObjects.Services,AbstractFactoryAndRepository,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Services\AbstractFactoryAndRepository.cs,FindByTitleAndType,The length of the statement  "            MethodInfo m = GetType().GetMethod("FindByTitle"' BindingFlags.Instance | BindingFlags.NonPublic).MakeGenericMethod(type); " is 122.
Long Statement,NakedObjects.Util,TypeUtils,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Util\TypeUtils.cs,IsIntegralValueForEnum,The length of the statement  "            return obj is sbyte || obj is byte || obj is short || obj is ushort || obj is int || obj is uint || obj is long || obj is ulong; " is 128.
Magic Number,NakedObjects,DateTimeExtensions,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Util\DateTimeExtensions.cs,EndOfWeek,The following statement contains a magic number: return StartOfWeek(referenceDate).AddDays(6);
Magic Number,NakedObjects,NewTitleBuilder,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Util\NewTitleBuilder.cs,Truncate,The following statement contains a magic number: if (end >= length) {                  title = new StringBuilder(title.ToString(0' end));                    if (breakOnWords) {                      for (; end > 5; end--) {                          if (title[end - 1] == ' ') {                              break;                          }                      }                      end--;                  }                  else {                      for (; end > 5; end--) {                          if (title[end - 1] != ' ') {                              break;                          }                      }                  }                  title.Length = end;                  title.Append(continuation);              }
Magic Number,NakedObjects,NewTitleBuilder,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Util\NewTitleBuilder.cs,Truncate,The following statement contains a magic number: if (end >= length) {                  title = new StringBuilder(title.ToString(0' end));                    if (breakOnWords) {                      for (; end > 5; end--) {                          if (title[end - 1] == ' ') {                              break;                          }                      }                      end--;                  }                  else {                      for (; end > 5; end--) {                          if (title[end - 1] != ' ') {                              break;                          }                      }                  }                  title.Length = end;                  title.Append(continuation);              }
Magic Number,NakedObjects.Util,NameUtils,C:\repos\NakedObjectsGroup_NakedObjectsFramework\Programming Model\NakedObjects.Helpers\Util\NameUtils.cs,NaturalName,The following statement contains a magic number: for (int pos = 2; pos < length; pos++) {                  char previousCharacter = character;                  character = nextCharacter;                  nextCharacter = name[pos];                    if (!Char.IsWhiteSpace(previousCharacter)) {                      if (Char.IsUpper(character) && !Char.IsUpper(previousCharacter)) {                          naturalName.Append(space);                      }                      if (Char.IsUpper(character) && Char.IsLower(nextCharacter) && Char.IsUpper(previousCharacter)) {                          naturalName.Append(space);                      }                      if (Char.IsDigit(character) && !Char.IsDigit(previousCharacter)) {                          naturalName.Append(space);                      }                  }                  naturalName.Append(character);              }
