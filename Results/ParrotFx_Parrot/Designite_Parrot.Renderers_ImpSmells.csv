Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Parrot.Renderers,BaseRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\BaseRenderer.cs,GetLocalModelValue,Cyclomatic complexity of the method is 8
Complex Method,Parrot.Renderers.Infrastructure,ObjectModelValueProvider,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\ObjectModelValueProvider.cs,GetModelProperty,Cyclomatic complexity of the method is 8
Long Parameter List,Parrot.Renderers,BaseRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\BaseRenderer.cs,BeforeRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,BaseRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\BaseRenderer.cs,AfterRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,ConditionalRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ConditionalRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,DocTypeRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\DocTypeRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,ForeachRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ForeachRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,FuncRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\FuncRenderer.cs,BeforeRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,FuncRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\FuncRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,FuncRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\FuncRenderer.cs,AfterRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,HtmlRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\HtmlRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,HtmlRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\HtmlRenderer.cs,CreateTag,The method has 5 parameters. Parameters: writer' rendererFactory' documentHost' model' statement
Long Parameter List,Parrot.Renderers,HtmlRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\HtmlRenderer.cs,RenderChildren,The method has 6 parameters. Parameters: writer' statement' rendererFactory' documentHost' model' defaultTag
Long Parameter List,Parrot.Renderers,HtmlRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\HtmlRenderer.cs,RenderChildren,The method has 6 parameters. Parameters: writer' children' rendererFactory' documentHost' defaultTag' model
Long Parameter List,Parrot.Renderers,HtmlRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\HtmlRenderer.cs,RenderAttributes,The method has 5 parameters. Parameters: rendererFactory' documentHost' model' statement' builder
Long Parameter List,Parrot.Renderers,IfRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\IfRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,InputRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\InputRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,ListRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ListRenderer.cs,RenderChildren,The method has 6 parameters. Parameters: writer' statement' rendererFactory' documentHost' model' defaultTag
Long Parameter List,Parrot.Renderers,ScriptRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ScriptRenderer.cs,CreateTag,The method has 5 parameters. Parameters: writer' rendererFactory' documentHost' model' statement
Long Parameter List,Parrot.Renderers,SelfClosingRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\SelfClosingRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,SelfClosingRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\SelfClosingRenderer.cs,CreateTag,The method has 5 parameters. Parameters: writer' rendererFactory' documentHost' model' statement
Long Parameter List,Parrot.Renderers,StringLiteralRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\StringLiteralRenderer.cs,GetModelValue,The method has 5 parameters. Parameters: factory' documentHost' model' type' data
Long Parameter List,Parrot.Renderers,StringLiteralRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\StringLiteralRenderer.cs,BeforeRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,StringLiteralRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\StringLiteralRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers,StringLiteralRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\StringLiteralRenderer.cs,AfterRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers.Infrastructure,ExpandoObjectModelValueProvider,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\ExpandoObjectModelValueProvider.cs,GetValue,The method has 5 parameters. Parameters: documentHost' model' valueType' property' value
Long Parameter List,Parrot.Renderers.Infrastructure,IModelValueProvider,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\IModelValueProvider.cs,GetValue,The method has 5 parameters. Parameters: documentHost' model' valueType' property' value
Long Parameter List,Parrot.Renderers.Infrastructure,ObjectModelValueProvider,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\ObjectModelValueProvider.cs,GetValue,The method has 5 parameters. Parameters: documentHost' model' valueType' property' value
Long Parameter List,Parrot.Renderers.Infrastructure,IRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\IRenderer.cs,BeforeRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers.Infrastructure,IRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\IRenderer.cs,Render,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Parameter List,Parrot.Renderers.Infrastructure,IRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\IRenderer.cs,AfterRender,The method has 5 parameters. Parameters: writer' rendererFactory' statement' documentHost' model
Long Statement,Parrot.Renderers,BaseRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\BaseRenderer.cs,BeforeRender,The length of the statement  "                    if (parameter.Value != null && ((parameter.Value.StartsWith("\"") && parameter.Value.EndsWith("\"")) || (parameter.Value.StartsWith("'") && parameter.Value.EndsWith("'")))) " is 172.
Long Statement,Parrot.Renderers,ConditionalRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ConditionalRenderer.cs,Render,The length of the statement  "            var defaultChild = statement.Children.SingleOrDefault(s => s.Name.Equals("default"' StringComparison.OrdinalIgnoreCase)); " is 121.
Complex Conditional,Parrot.Renderers,BaseRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\BaseRenderer.cs,BeforeRender,The conditional expression  "parameter.Value != null && ((parameter.Value.StartsWith("\"") && parameter.Value.EndsWith("\"")) || (parameter.Value.StartsWith("'") && parameter.Value.EndsWith("'")))"  is complex.
Magic Number,Parrot.Renderers,ForeachRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ForeachRenderer.cs,IteratorItem,The following statement contains a magic number: return new                  {                      _first = index == 0'                      _last = index == items.Count - 1'                      _index = index'                      _even = index % 2 == 0'                      _odd = index % 2 == 1                  };
Magic Number,Parrot.Renderers,ForeachRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ForeachRenderer.cs,IteratorItem,The following statement contains a magic number: return new                  {                      _first = index == 0'                      _last = index == items.Count - 1'                      _index = index'                      _even = index % 2 == 0'                      _odd = index % 2 == 1                  };
Magic Number,Parrot.Renderers,ListRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ListRenderer.cs,IteratorItem,The following statement contains a magic number: return new              {                  _first = index == 0'                  _last = index == items.Count - 1'                  _index = index'                  _even = index % 2 == 0'                  _odd = index % 2 == 1              };
Magic Number,Parrot.Renderers,ListRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\ListRenderer.cs,IteratorItem,The following statement contains a magic number: return new              {                  _first = index == 0'                  _last = index == items.Count - 1'                  _index = index'                  _even = index % 2 == 0'                  _odd = index % 2 == 1              };
Missing Default,Parrot.Renderers,InputRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\InputRenderer.cs,Render,The following switch statement is missing a default case: switch (type)              {                  case "checkbox":                  case "radio":                      //special handling for "checked"                      //is there a checked attribute                      for (int i = 0; i < statement.Attributes.Count; i++)                      {                          if (statement.Attributes[i].Key == "checked")                          {                              string attributeValue = RenderAttribute(statement.Attributes[i]' rendererFactory' documentHost' model);                                switch (attributeValue)                              {                                  case "true":                                      statement.Attributes[i] = new Nodes.Attribute(statement.Attributes[i].Key' new StringLiteral("\"checked\""));                                      //.Value = "checked";                                      break;                                  case "false":                                  case "null":                                      //remove this attribute                                      statement.Attributes.RemoveAt(i);                                      i -= 1;                                      break;                              }                          }                      }                        break;              }
Missing Default,Parrot.Renderers,InputRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\InputRenderer.cs,Render,The following switch statement is missing a default case: switch (attributeValue)                              {                                  case "true":                                      statement.Attributes[i] = new Nodes.Attribute(statement.Attributes[i].Key' new StringLiteral("\"checked\""));                                      //.Value = "checked";                                      break;                                  case "false":                                  case "null":                                      //remove this attribute                                      statement.Attributes.RemoveAt(i);                                      i -= 1;                                      break;                              }
Missing Default,Parrot.Renderers,StringLiteralRenderer,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\StringLiteralRenderer.cs,GetModelValue,The following switch statement is missing a default case: switch (type)              {                  case StringLiteralPartType.Encoded:                      //get the valuetype                      if (factory.Get(modelType).GetValue(documentHost' model' data' out value))                      {                          return System.Net.WebUtility.HtmlEncode(value.ToString());                      }                      break;                  case StringLiteralPartType.Raw:                      if (factory.Get(modelType).GetValue(documentHost' model' data' out value))                      {                          return value.ToString();                      }                      break;              }
Missing Default,Parrot.Renderers.Infrastructure,ExpandoObjectModelValueProvider,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\ExpandoObjectModelValueProvider.cs,GetValue,The following switch statement is missing a default case: switch (valueType)              {                  case Parrot.Infrastructure.ValueType.StringLiteral:                  case Parrot.Infrastructure.ValueType.Keyword:                      value = property;                      return true;                  case Parrot.Infrastructure.ValueType.Local:                      value = model;                      return true;                  case Parrot.Infrastructure.ValueType.Property:                      if (model == null)                      {                          throw new NullReferenceException("model");                      }                        var propertyValues = (IDictionary<string' object>) model;                      var result = model;                        var properties = property.ToString().Split(".".ToCharArray());                      for (int i = 0; i < properties.Length; i++)                      {                          var name = properties[i];                          result = propertyValues[name];                          propertyValues = result as IDictionary<string' object>;                      }                        value = result;                      return true;              }
Missing Default,Parrot.Renderers.Infrastructure,ObjectModelValueProvider,C:\repos\ParrotFx_Parrot\src\Parrot.Renderers\Infrastructure\ObjectModelValueProvider.cs,GetValue,The following switch statement is missing a default case: switch (valueType)              {                  case Parrot.Infrastructure.ValueType.StringLiteral:                  case Parrot.Infrastructure.ValueType.Keyword:                      value = property;                      return true;                  case Parrot.Infrastructure.ValueType.Local:                      value = model;                      return true;                  case Parrot.Infrastructure.ValueType.Property:                      if (model != null && GetModelProperty(model' property' out value))                      {                          return true;                      }                        if (documentHost != null && GetModelProperty(documentHost' property' out value))                      {                          return true;                      }                        value = null;                      return false;              }
