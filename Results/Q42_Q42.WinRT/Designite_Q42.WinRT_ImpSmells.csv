Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Q42.WinRT.Controls,WrapPanel,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Controls\WrapPanel.cs,MeasureOverride,Cyclomatic complexity of the method is 11
Complex Method,Q42.WinRT.Controls,WrapPanel,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Controls\WrapPanel.cs,ArrangeOverride,Cyclomatic complexity of the method is 10
Complex Method,Q42.WinRT.Converters,InverseVisibilityConverter,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Converters\InverseVisibilityConverter.cs,Convert,Cyclomatic complexity of the method is 11
Complex Method,Q42.WinRT.Converters,VisibilityConverter,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Converters\VisibilityConverter.cs,Convert,Cyclomatic complexity of the method is 11
Long Parameter List,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,GetAsync,The method has 5 parameters. Parameters: key' generate' expireDate' forceRefresh' serializerType
Long Statement,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,GetFromCache,The length of the statement  "        IStorageHelper<CacheObject<T>> storage = new StorageHelper<CacheObject<T>>(_storageFolder' CacheFolder' serializerType);" is 120.
Long Statement,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,Set,The length of the statement  "      IStorageHelper<CacheObject<T>> storage = new StorageHelper<CacheObject<T>>(_storageFolder' CacheFolder' serializerType);" is 120.
Long Statement,Q42.WinRT.Data,WebDataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\WebDataCache.cs,SaveIndexFile,The length of the statement  "                IStorageHelper<Dictionary<string' string>> storage = new StorageHelper<Dictionary<string' string>>(_storageFolder' CacheFolder' StorageSerializer.JSON);" is 152.
Long Statement,Q42.WinRT.Data,WebDataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\WebDataCache.cs,GetIndexFile,The length of the statement  "            IStorageHelper<Dictionary<string' string>> storage = new StorageHelper<Dictionary<string' string>>(_storageFolder' CacheFolder' StorageSerializer.JSON);" is 152.
Complex Conditional,Q42.WinRT.Data,WebDataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\WebDataCache.cs,GetLocalUriAsync,The conditional expression  "uri.Scheme == "ms-resource"                 || uri.Scheme == "ms-appx"                 || uri.Scheme == "ms-appdata"               || uri.Scheme == "isostore""  is complex.
Empty Catch Block,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,GetFromCache,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,Clear,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,Clear,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,Clear,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,DataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\DataCache.cs,Clear,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,WebDataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\WebDataCache.cs,SaveIndexFile,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,WebDataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\WebDataCache.cs,ClearAll,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,WebDataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\WebDataCache.cs,Clear,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Data,WebDataCache,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Data\WebDataCache.cs,Clear,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Storage,StorageHelper<T>,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Storage\StorageHelper.cs,DeleteAllFiles,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Storage,StorageHelper<T>,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Storage\StorageHelper.cs,ClearAll,The method has an empty catch block.
Empty Catch Block,Q42.WinRT.Storage,StorageHelper<T>,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Storage\StorageHelper.cs,ClearAll,The method has an empty catch block.
Magic Number,Q42.WinRT.Converters,ByteToStringConverter,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Converters\ByteToStringConverter.cs,Convert,The following statement contains a magic number: size = String.Format("{0:##.##}"' byteCount / 1073741824) + " GB";
Magic Number,Q42.WinRT.Converters,ByteToStringConverter,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Converters\ByteToStringConverter.cs,Convert,The following statement contains a magic number: byteCount >= 1073741824
Missing Default,Q42.WinRT.Storage,StorageHelper<T>,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Storage\StorageHelper.cs,GetFileExtension,The following switch statement is missing a default case: switch (_serializerType)       {         case StorageSerializer.JSON:           return ".json";         case StorageSerializer.XML:           return ".xml";       }
Missing Default,Q42.WinRT.Storage,StorageHelper<T>,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Storage\StorageHelper.cs,SaveAsync,The following switch statement is missing a default case: switch (_serializerType)           {             case StorageSerializer.JSON:               storageString = JsonConvert.SerializeObject(obj);               //Write content to file               await FileIO.WriteTextAsync(file' storageString);               break;             case StorageSerializer.XML:                IRandomAccessStream sessionRandomAccess = await file.OpenAsync(FileAccessMode.ReadWrite);               IOutputStream sessionOutputStream = sessionRandomAccess.GetOutputStreamAt(0);               XmlSerializer serializer = new XmlSerializer(typeof(T));               serializer.Serialize(sessionOutputStream.AsStreamForWrite()' obj);               sessionRandomAccess.Dispose();               await sessionOutputStream.FlushAsync();               sessionOutputStream.Dispose();               break;           }
Missing Default,Q42.WinRT.Storage,StorageHelper<T>,C:\research\architectureSmells\repos\Q42_Q42.WinRT\Q42.WinRT\Storage\StorageHelper.cs,LoadAsync,The following switch statement is missing a default case: switch (_serializerType)           {             case StorageSerializer.JSON:               var data = await FileIO.ReadTextAsync(file);               result = JsonConvert.DeserializeObject<T>(data);               break;             case StorageSerializer.XML:               XmlSerializer serializer = new XmlSerializer(typeof(T));               IInputStream sessionInputStream = await file.OpenReadAsync();               result = (T)serializer.Deserialize(sessionInputStream.AsStreamForRead());               sessionInputStream.Dispose();                break;           }
