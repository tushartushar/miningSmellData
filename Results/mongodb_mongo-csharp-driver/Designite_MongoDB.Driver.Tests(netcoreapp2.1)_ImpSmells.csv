Implementation smell,Namespace,Class,File,Method,Description
Long Method,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The method has 105 lines of code.
Long Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The method has 139 lines of code.
Long Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The method has 114 lines of code.
Long Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The method has 115 lines of code.
Long Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The method has 115 lines of code.
Long Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The method has 108 lines of code.
Long Method,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The method has 114 lines of code.
Long Method,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The method has 144 lines of code.
Long Method,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The method has 137 lines of code.
Long Method,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The method has 122 lines of code.
Long Method,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The method has 145 lines of code.
Long Method,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The method has 108 lines of code.
Long Method,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The method has 134 lines of code.
Long Method,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_execute_a_BulkMixedOperation,The method has 127 lines of code.
Long Method,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The method has 142 lines of code.
Long Method,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The method has 149 lines of code.
Long Method,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,CorpusTest,The method has 144 lines of code.
Complex Method,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,Cyclomatic complexity of the method is 12
Complex Method,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,Cyclomatic complexity of the method is 9
Complex Method,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,Cyclomatic complexity of the method is 31
Complex Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,Cyclomatic complexity of the method is 14
Complex Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindSync_should_call_collection_FindSync_with_expected_arguments,Cyclomatic complexity of the method is 8
Complex Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,Cyclomatic complexity of the method is 14
Complex Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,Cyclomatic complexity of the method is 14
Complex Method,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,Cyclomatic complexity of the method is 14
Complex Method,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenBulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenBulkWriteTest.cs,AssertResultAspect,Cyclomatic complexity of the method is 8
Complex Method,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCommandTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCommandTest.cs,AssertException,Cyclomatic complexity of the method is 17
Complex Method,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTestFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTestFactory.cs,CreateTest,Cyclomatic complexity of the method is 50
Complex Method,MongoDB.Driver.Tests.Specifications.auth,AuthTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\auth\AuthTestRunner.cs,AssertValid,Cyclomatic complexity of the method is 8
Complex Method,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertChangeStreamDocument,Cyclomatic complexity of the method is 9
Complex Method,MongoDB.Driver.Tests.Specifications.client_side_encryption,ClientSideEncryptionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,ReplaceTypeAssertionWithActual,Cyclomatic complexity of the method is 8
Complex Method,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,CorpusTest,Cyclomatic complexity of the method is 10
Complex Method,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,Cyclomatic complexity of the method is 12
Complex Method,MongoDB.Driver.Tests.Specifications.crud,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\BulkWriteTest.cs,ConvertExpectedResult,Cyclomatic complexity of the method is 11
Complex Method,MongoDB.Driver.Tests.Specifications.crud,CrudOperationTestFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CrudOperationTestFactory.cs,CreateTest,Cyclomatic complexity of the method is 20
Complex Method,MongoDB.Driver.Tests.Specifications.crud,FindOneAndUpdateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\FindOneAndUpdateTest.cs,TrySetArgument,Cyclomatic complexity of the method is 9
Complex Method,MongoDB.Driver.Tests.Specifications.retryable_writes,FindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-writes\FindOneAndReplaceTest.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,MongoDB.Driver.Tests.Specifications.retryable_writes,FindOneAndUpdateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-writes\FindOneAndUpdateTest.cs,Initialize,Cyclomatic complexity of the method is 11
Complex Method,MongoDB.Driver.Tests.Specifications.retryable_writes,RetryableWriteTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-writes\RetryableWriteTestRunner.cs,CreateExecutableTest,Cyclomatic complexity of the method is 12
Complex Method,MongoDB.Driver.Tests.Specifications.transactions,TransactionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\transactions\TransactionTestRunner.cs,ConfigureClientSettings,Cyclomatic complexity of the method is 9
Long Parameter List,MongoDB.Driver.Tests,AuthenticationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AuthenticationTests.cs,CreateAdminDatabaseUser,The method has 5 parameters. Parameters: client' userName' password' role' mechanisms
Long Parameter List,MongoDB.Driver.Tests,AuthenticationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AuthenticationTests.cs,CreateDatabaseUser,The method has 6 parameters. Parameters: client' source' userName' password' role' mechanisms
Long Parameter List,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The method has 7 parameters. Parameters: isRetryAttemptsWithTimeout' callbackTransactionErrorStates' isTransactionInProgress' shouldExceptionBeThrown' expectedStartTransactionAttempts' expectedCommitTransactionAttempts' async
Long Parameter List,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The method has 6 parameters. Parameters: isRetryAttemptsWithTimeout' commitTransactionErrorStates' shouldExceptionBeThrown' expectedCommitTransactionAttempts' expectedFullTransactionBeRetriedState' async
Long Parameter List,MongoDB.Driver.Tests,SslSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\SslSettingsTests.cs,ClientCertificateSelectionCallback,The method has 5 parameters. Parameters: sender' targetHost' localCertificates' remoteCertificate' acceptableIssuers
Long Parameter List,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTestFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTestFactory.cs,JsonDrivenTestFactory,The method has 5 parameters. Parameters: client' databaseName' collectionName' bucketName' objectMap
Long Parameter List,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTestFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTestFactory.cs,JsonDrivenTestFactory,The method has 6 parameters. Parameters: client' databaseName' collectionName' bucketName' objectMap' eventCapturer
Long Parameter List,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTestFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTestFactory.cs,JsonDrivenTestFactory,The method has 6 parameters. Parameters: testRunner' client' databaseName' collectionName' bucketName' objectMap
Long Parameter List,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndReplace_should_execute_a_FindOneAndReplaceOperation,The method has 5 parameters. Parameters: usingSession' bypassDocumentValidation' isUpsert' returnDocument' async
Long Parameter List,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndUpdate_should_execute_a_FindOneAndUpdateOperation,The method has 5 parameters. Parameters: usingSession' bypassDocumentValidation' isUpsert' returnDocument' async
Long Parameter List,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The method has 5 parameters. Parameters: usingSession' usingCreateOneIndexOptions' usingWildcardIndex' async' milliseconds
Long Parameter List,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The method has 5 parameters. Parameters: usingSession' usingCreateManyIndexesOptions' usingWildcardIndex' async' milliseconds
Long Parameter List,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Watch_should_execute_a_ChangeStreamOperation,The method has 8 parameters. Parameters: usingSession' batchSize' locale' fullDocument' maxAwaitTimeMS' readConcernLevel' resumeAferString' async
Long Parameter List,MongoDB.Driver.Tests.Specifications.client_side_encryption,ClientSideEncryptionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,CreateCollection,The method has 5 parameters. Parameters: client' databaseName' collectionName' test' shared
Long Parameter List,MongoDB.Driver.Tests.Specifications.client_side_encryption,ClientSideEncryptionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,DropCollection,The method has 5 parameters. Parameters: client' databaseName' collectionName' test' shared
Long Parameter List,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,CreateMongoClient,The method has 5 parameters. Parameters: keyVaultNamespace' schemaMapDocument' kmsProviders' withExternalKeyVault' clusterConfigurator
Long Parameter List,MongoDB.Driver.Tests.Specifications.command_monitoring,CrudOperationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\CrudOperationTestBase.cs,Execute,The method has 5 parameters. Parameters: clusterDescription' database' collection' arguments' async
Long Parameter List,MongoDB.Driver.Tests.Specifications.command_monitoring,ICrudOperationTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\ICrudOperationTest.cs,Execute,The method has 5 parameters. Parameters: clusterDescription' database' collection' arguments' async
Long Parameter List,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The method has 5 parameters. Parameters: data' databaseName' collectionName' definition' async
Long Parameter List,MongoDB.Driver.Tests.Specifications.crud,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\BulkWriteTest.cs,ParseReplaceArguments,The method has 5 parameters. Parameters: value' filter' replacement' collation' isUpsert
Long Parameter List,MongoDB.Driver.Tests.Specifications.crud,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\BulkWriteTest.cs,ParseUpdateArguments,The method has 6 parameters. Parameters: value' filter' update' arrayFilters' collation' isUpsert
Long Parameter List,MongoDB.Driver.Tests.Specifications.crud,CrudOperationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CrudOperationTestBase.cs,Execute,The method has 7 parameters. Parameters: clusterDescription' database' collection' arguments' outcome' isErrorExpected' async
Long Parameter List,MongoDB.Driver.Tests.Specifications.crud,CrudTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CrudTestRunner.cs,ExecuteOperation,The method has 6 parameters. Parameters: client' database' collection' operation' outcome' async
Long Parameter List,MongoDB.Driver.Tests.Specifications.crud,ICrudOperationTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\ICrudOperationTest.cs,Execute,The method has 7 parameters. Parameters: clusterDescription' database' collection' arguments' outcome' isErrorExpected' async
Long Parameter List,MongoDB.Driver.Tests.Specifications.Runner,MongoClientJsonDrivenTestRunnerBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\Runner\MongoClientJsonDrivenTestRunnerBase.cs,CreateCollection,The method has 5 parameters. Parameters: client' databaseName' collectionName' test' shared
Long Parameter List,MongoDB.Driver.Tests.Specifications.Runner,MongoClientJsonDrivenTestRunnerBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\Runner\MongoClientJsonDrivenTestRunnerBase.cs,DropCollection,The method has 5 parameters. Parameters: client' databaseName' collectionName' test' shared
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the parameter callbackTransactionErrorStates is 30.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the parameter expectedStartTransactionAttempts is 32.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the parameter expectedCommitTransactionAttempts is 33.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the parameter expectedAbortTransactionNumberOfCalls is 37.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the parameter expectedAbortTransactionNumberOfCalls is 37.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The length of the parameter expectedCommitTransactionAttempts is 33.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The length of the parameter expectedFullTransactionBeRetriedState is 37.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_with_error_in_callback_should_call_AbortTransaction_according_to_transaction_state,The length of the parameter shouldAbortTransactionBeCalled is 30.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,,The length of the parameter TransientTransactionErrorLabel is 30.
Long Identifier,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,,The length of the parameter UnknownTransactionCommitResultLabel is 35.
Long Identifier,MongoDB.Driver.Tests,ReadPreferenceOnStandaloneTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ReadPreferenceOnStandaloneTests.cs,ReadPreference_should_not_be_sent_to_standalone_server,The length of the parameter expectedContainsReadPreference is 30.
Long Identifier,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,,The length of the parameter NotSupportErrorMessageTemplate is 30.
Long Identifier,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertChangeStreamDocument,The length of the parameter expectedRenameToCollectionName is 30.
Long Identifier,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertChangeStreamDocument,The length of the parameter expectedRenameToCollectionNamespace is 35.
Long Identifier,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,CreateDataKeyAndDoubleEncryptionTest,The length of the parameter encryptedValueWithAlternateKeyName is 34.
Long Identifier,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,CreateMongoClient,The length of the parameter externalKeyVaultClientSettings is 30.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 1' title: \"The Pillars of Society\"' artist : \"Grosz\"' year: 1926' tags: [ \"painting\"' \"satire\"' \"Expressionism\"' \"caricature\" ] }")' " is 171.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 2' title: \"Melancholy III\"' \"artist\" : \"Munch\"' year: 1902' tags: [ \"woodcut\"' \"Expressionism\" ] }")' " is 138.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 3' title: \"Dancer\"' \"artist\" : \"Miro\"' year: 1925' tags: [ \"oil\"' \"Surrealism\"' \"painting\" ] }")' " is 136.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 4' title: \"The Great Wave off Kanagawa\"' artist: \"Hokusai\"' tags: [ \"woodblock\"' \"ukiyo-e\" ] }") " is 131.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_output_should_add_expected_stage,The length of the statement  "            var output = (ProjectionDefinition<BsonDocument' BsonDocument>)"{ years : { $push : \"$year\" }' count : { $sum : 1 } }"; " is 121.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_output_should_add_expected_stage,The length of the statement  "            renderedStage.Document.Should().Be("{ $bucketAuto : { groupBy : \"$year\"' buckets : 4' output : { years : { $push : \"$year\" }' count : { $sum : 1 } } } }"); " is 159.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_output_should_return_expected_result,The length of the statement  "            var output = (ProjectionDefinition<BsonDocument' BsonDocument>)"{ years : { $push : \"$year\" }' count : { $sum : 1 } }"; " is 121.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_add_expected_stage,The length of the statement  "            renderedStage.Document.Should().Be("{ $bucketAuto : { groupBy : \"$year\"' buckets : 4' output : { Years : { $push : \"$year\" }' Count : { $sum : 1 } } } }"); " is 159.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 1' title: \"The Pillars of Society\"' artist : \"Grosz\"' year: 1926' tags: [ \"painting\"' \"satire\"' \"Expressionism\"' \"caricature\" ] }")' " is 171.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 2' title: \"Melancholy III\"' \"artist\" : \"Munch\"' year: 1902' tags: [ \"woodcut\"' \"Expressionism\" ] }")' " is 138.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 3' title: \"Dancer\"' \"artist\" : \"Miro\"' year: 1925' tags: [ \"oil\"' \"Surrealism\"' \"painting\" ] }")' " is 136.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,CreateTestData,The length of the statement  "                    BsonDocument.Parse("{ _id: 4' title: \"The Great Wave off Kanagawa\"' artist: \"Hokusai\"' tags: [ \"woodblock\"' \"ukiyo-e\" ] }") " is 131.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_add_expected_stage,The length of the statement  "            renderedStage.Document.Should().Be("{ $bucket : { groupBy : \"$year\"' boundaries : [ 1900' 1920' 1950 ]' default : \"Unknown\" } }"); " is 134.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_add_expected_stage,The length of the statement  "            var output = (ProjectionDefinition<BsonDocument' BsonDocument>)"{ years : { $push : \"$year\" }' count : { $sum : 1 } }"; " is 121.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_add_expected_stage,The length of the statement  "            renderedStage.Document.Should().Be("{ $bucket : { groupBy : \"$year\"' boundaries : [ 1900' 1920' 1950 ]' default : \"Unknown\"' output : { years : { $push : \"$year\" }' count : { $sum : 1 } } } }"); " is 200.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_return_expected_result,The length of the statement  "            var output = (ProjectionDefinition<BsonDocument' BsonDocument>)"{ years : { $push : \"$year\" }' count : { $sum : 1 } }"; " is 121.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_add_expected_stage,The length of the statement  "            renderedStage.Document.Should().Be("{ $bucket : { groupBy : \"$year\"' boundaries : [ 1900' 1920' 1950 ]' default : \"Unknown\" } }"); " is 134.
Long Statement,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_add_expected_stage,The length of the statement  "            renderedStage.Document.Should().Be("{ $bucket : { groupBy : \"$year\"' boundaries : [ 1900' 1920' 1950 ]' default : \"Unknown\"' output : { Years : { $push : \"$year\" }' Count : { $sum : 1 } } } }"); " is 200.
Long Statement,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,CreateTestData,The length of the statement  "                BsonDocument.Parse("{ _id: 1' title: \"The Pillars of Society\"' artist : \"Grosz\"' year: 1926' tags: [ \"painting\"' \"satire\"' \"Expressionism\"' \"caricature\" ] }")' " is 171.
Long Statement,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,CreateTestData,The length of the statement  "                BsonDocument.Parse("{ _id: 2' title: \"Melancholy III\"' artist : \"Munch\"' year: 1902' tags: [ \"woodcut\"' \"Expressionism\" ] }")' " is 134.
Long Statement,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,CreateTestData,The length of the statement  "                BsonDocument.Parse("{ _id: 3' title: \"Dancer\"' artist : \"Miro\"' year: 1925' tags: [ \"oil\"' \"Surrealism\"' \"painting\" ] }")' " is 132.
Long Statement,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,CreateTestData,The length of the statement  "                BsonDocument.Parse("{ _id: 4' title: \"The Great Wave off Kanagawa\"' artist: \"Hokusai\"' tags: [ \"woodblock\"' \"ukiyo-e\" ] }") " is 131.
Long Statement,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_with_3_facets_should_return_expected_result,The length of the statement  "            result.Facets.Select(f => f.Name).Should().Equal("categorizedByTags"' "categorizedByYears"' "categorizedByYears(Auto)"); " is 120.
Long Statement,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_should_add_expected_stage,The length of the statement  "            var result = subject.GraphLookup(__airportsCollection' connectFromField' connectToField' startWith' @as' depthField' options); " is 126.
Long Statement,MongoDB.Driver.Tests,EmployeeWithReportingHierarchyBsonDocumentEqualityComparer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithEmployeeCollectionTests.cs,Equals,The length of the statement  "                    _reportingHierarchyComparer.Equals(x["reportingHierarchy"].AsBsonArray.Cast<BsonDocument>()' y["reportingHierarchy"].AsBsonArray.Cast<BsonDocument>()); " is 151.
Long Statement,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The length of the statement  "            result[0].Should().Be("{ 'item' : 'almonds'' 'price' : 12' 'ordered' : 2' 'stockdata' : [{ 'instock' : 120 }' { 'instock' : 60 }] }"); " is 134.
Long Statement,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The length of the statement  "            result[0].Should().Be("{ 'item' : 'almonds'' 'price' : 12' 'ordered' : 2' 'stockdata' : [{ 'instock' : 120 }' { 'instock' : 60 }] }"); " is 134.
Long Statement,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The length of the statement  "            result[0].Should().Be("{ 'item' : 'almonds'' 'price' : 12' 'ordered' : 2' 'stockdata' : [{ 'instock' : 120 }' { 'instock' : 80 }' { 'instock' : 60 }' { 'instock' : 40 }' { 'instock' : 80 }] }"); " is 194.
Long Statement,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The length of the statement  "            result[1].Should().Be("{ 'item' : 'pecans'' 'price' : 20' 'ordered' : 1' 'stockdata' : [{ 'instock' : 120 }' { 'instock' : 80 }' { 'instock' : 60 }' { 'instock' : 40 }' { 'instock' : 80 }] }"); " is 193.
Long Statement,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The length of the statement  "            result[2].Should().Be("{ 'item' : 'cookies'' 'price' : 10' 'ordered' : 60' 'stockdata' : [{ 'instock' : 120 }' { 'instock' : 80 }' { 'instock' : 60 }' { 'instock' : 40 }' { 'instock' : 80 }] }"); " is 195.
Long Statement,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,CreateSubject,The length of the statement  "            var subject = new CollectionAggregateFluent<C' C>(session' _mockCollection.Object' new EmptyPipelineDefinition<C>()' options); " is 126.
Long Statement,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,SetupDatabaseGetCollectionMethod,The length of the statement  "                    mockCollection.SetupGet(c => c.CollectionNamespace).Returns(new CollectionNamespace(new DatabaseNamespace("test")' collectionName)); " is 132.
Long Statement,MongoDB.Driver.Tests,AggregateFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,_options,The length of the statement  "            var fieldInfo = typeof(AggregateFluent<TInput' TResult>).GetField("_options"' BindingFlags.NonPublic | BindingFlags.Instance); " is 126.
Long Statement,MongoDB.Driver.Tests,AggregateFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,_pipeline,The length of the statement  "            var fieldInfo = typeof(AggregateFluent<TInput' TResult>).GetField("_pipeline"' BindingFlags.NonPublic | BindingFlags.Instance); " is 127.
Long Statement,MongoDB.Driver.Tests,AggregateFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,_session,The length of the statement  "            var fieldInfo = typeof(AggregateFluent<TInput' TResult>).GetField("_session"' BindingFlags.NonPublic | BindingFlags.Instance); " is 126.
Long Statement,MongoDB.Driver.Tests,CollectionAggregateFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,_collection,The length of the statement  "            var fieldInfo = typeof(CollectionAggregateFluent<TDocument' TResult>).GetField("_collection"' BindingFlags.NonPublic | BindingFlags.Instance); " is 142.
Long Statement,MongoDB.Driver.Tests,AsyncCursorHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AsyncCursorHelperTests.cs,SetupResultInFirstBatch,The length of the statement  "            mockCursor.SetupSequence(c => c.MoveNextAsync(It.IsAny<CancellationToken>())).Returns(Task.FromResult(true)).Returns(Task.FromResult(false)); " is 141.
Long Statement,MongoDB.Driver.Tests,AsyncCursorHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AsyncCursorHelperTests.cs,SetupResultInSecondBatch,The length of the statement  "            mockCursor.SetupSequence(c => c.MoveNextAsync(It.IsAny<CancellationToken>())).Returns(Task.FromResult(true)).Returns(Task.FromResult(true)).Returns(Task.FromResult(false)); " is 172.
Long Statement,MongoDB.Driver.Tests,AsyncCursorHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AsyncCursorHelperTests.cs,SetupResultInSecondBatch,The length of the statement  "            mockCursor.SetupSequence(c => c.Current).Returns(new List<int>()).Returns(new List<int> { 1 }).Returns((List<int>)null); " is 120.
Long Statement,MongoDB.Driver.Tests,AsyncCursorHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AsyncCursorHelperTests.cs,SetupNoResultInTwoBatches,The length of the statement  "            mockCursor.SetupSequence(c => c.MoveNextAsync(It.IsAny<CancellationToken>())).Returns(Task.FromResult(true)).Returns(Task.FromResult(false)); " is 141.
Long Statement,MongoDB.Driver.Tests,AsyncCursorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AsyncCursorTests.cs,Cursor_should_not_throw_exception_after_double_close,The length of the statement  "            var cursor = collection.Find(FilterDefinition<BsonDocument>.Empty' new FindOptions { BatchSize = 1 }).ToCursor().As<AsyncCursor<BsonDocument>>(); " is 145.
Long Statement,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_client_returns_expected_result,The length of the statement  "            var result = ChangeStreamHelper.CreateChangeStreamOperation(pipeline' options' readConcern' messageEncoderSettings' true); " is 122.
Long Statement,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_database_returns_expected_result,The length of the statement  "            var result = ChangeStreamHelper.CreateChangeStreamOperation(mockDatabase.Object' pipeline' options' readConcern' messageEncoderSettings' true); " is 143.
Long Statement,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_collection_returns_expected_result,The length of the statement  "            var result = ChangeStreamHelper.CreateChangeStreamOperation(mockCollection.Object' pipeline' documentSerializer' options' readConcern' messageEncoderSettings' true); " is 165.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                    Assert.ThrowsAsync<MongoException>(() => subject.WithTransactionAsync(async (handle' cancellationToken) => await mockCallbackProcessing.Object.CallbackAsync(It.IsAny<IClientSessionHandle>()))).GetAwaiter().GetResult(); " is 218.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                    var withTransactionResult = subject.WithTransactionAsync(async (handle' cancellationToken) => await mockCallbackProcessing.Object.CallbackAsync(It.IsAny<IClientSessionHandle>())).Result; " is 186.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                        var expectedAbortTransactionNumberOfCalls = callbackTransactionErrorStates.Count(c => c != WithTransactionErrorState.NoError); " is 126.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                        mockCoreSession.Verify(handle => handle.AbortTransactionAsync(It.IsAny<CancellationToken>())' Times.Exactly(expectedAbortTransactionNumberOfCalls)); " is 148.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                mockCoreSession.Verify(handle => handle.CommitTransactionAsync(It.IsAny<CancellationToken>())' Times.Exactly(expectedCommitTransactionAttempts)); " is 145.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                    Assert.Throws<MongoException>(() => subject.WithTransaction((handle' cancellationToken) => mockCallbackProcessing.Object.Callback(It.IsAny<IClientSessionHandle>()))); " is 166.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                    var withTransactionResult = subject.WithTransaction((handle' cancellationToken) => mockCallbackProcessing.Object.Callback(It.IsAny<IClientSessionHandle>())); " is 157.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                        var expectedAbortTransactionNumberOfCalls = callbackTransactionErrorStates.Count(c => c != WithTransactionErrorState.NoError); " is 126.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                        mockCoreSession.Verify(handle => handle.AbortTransaction(It.IsAny<CancellationToken>())' Times.Exactly(expectedAbortTransactionNumberOfCalls)); " is 143.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "                mockCoreSession.Verify(handle => handle.CommitTransaction(It.IsAny<CancellationToken>())' Times.Exactly(expectedCommitTransactionAttempts)); " is 140.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_should_be_processed_with_expected_result,The length of the statement  "            mockCoreSession.Verify(handle => handle.StartTransaction(It.IsAny<TransactionOptions>())' Times.Exactly(expectedStartTransactionAttempts)); " is 139.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_callback_with_a_custom_error_should_not_be_retried,The length of the statement  "            Assert.Throws<MongoException>(() => subject.WithTransaction<bool>((handle' cancellationToken) => throw new MongoException("test"))); " is 132.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The length of the statement  "                    Assert.ThrowsAnyAsync<MongoException>(() => TransactionExecutorReflector.CommitWithRetriesAsync(subject' now' mockClock.Object' CancellationToken.None)).GetAwaiter().GetResult(); " is 178.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The length of the statement  "                    var result = TransactionExecutorReflector.CommitWithRetriesAsync(subject' now' mockClock.Object' CancellationToken.None).Result; " is 128.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The length of the statement  "                mockCoreSession.Verify(handle => handle.CommitTransactionAsync(It.IsAny<CancellationToken>())' Times.Exactly(expectedCommitTransactionAttempts)); " is 145.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The length of the statement  "                    Assert.ThrowsAny<MongoException>(() => TransactionExecutorReflector.CommitWithRetries(subject' now' mockClock.Object' CancellationToken.None)); " is 143.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_commit_after_callback_processing_should_be_processed_with_expected_result,The length of the statement  "                mockCoreSession.Verify(handle => handle.CommitTransaction(It.IsAny<CancellationToken>())' Times.Exactly(expectedCommitTransactionAttempts)); " is 140.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_with_error_in_callback_should_call_AbortTransaction_according_to_transaction_state,The length of the statement  "            Assert.Throws<Exception>(() => subject.WithTransaction<object>((handle' cancellationToken) => throw new Exception("test"))); " is 124.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,WithTransaction_with_error_in_callback_should_call_AbortTransaction_according_to_transaction_state,The length of the statement  "            mockCoreSession.Verify(handle => handle.AbortTransaction(It.IsAny<CancellationToken>())' shouldAbortTransactionBeCalled ? Times.Once() : Times.Never()); " is 152.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,CreateCoreSessionMock,The length of the statement  "            mockCoreSession.Setup(m => m.CurrentTransaction).Returns(new CoreTransaction(It.IsAny<long>()' It.IsAny<TransactionOptions>())); " is 128.
Long Statement,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,SetupTransactionState,The length of the statement  "            clientSession.WrappedCoreSession.CurrentTransaction.SetState(isTransactionInProgress ? CoreTransactionState.InProgress : CoreTransactionState.Aborted); " is 151.
Long Statement,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,Equals_should_return_true_if_kms_providers_have_different_records_count,The length of the statement  "            var kmsProvider2 = GetKmsProviders(skipTheLastMainRecord: skipTheLastMainRecord' skipTheLastNestedRecord: skipTheLastNestedRecord); " is 131.
Long Statement,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,Equals_should_return_true_if_kms_providers_have_the_same_items_but_with_different_order,The length of the statement  "            var kmsProviders2 = GetKmsProviders(withReverseInMainKeys: withReverseInMainKeys' withReverseInNestedKeys: withReverseInNestedKeys); " is 132.
Long Statement,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The length of the statement  "            var credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("source"' "username"' "password") }; " is 122.
Long Statement,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The length of the statement  "                    case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break; " is 150.
Long Statement,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The length of the statement  "            var credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("source"' "username"' "password") }; " is 122.
Long Statement,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The length of the statement  "            var credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("source"' "username"' "password") }; " is 122.
Long Statement,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The length of the statement  "            var servers = new[] { new MongoServerAddress("localhost")' new MongoServerAddress("127.0.0.1"' 30000)' new MongoServerAddress("[::1]"' 27018) }; " is 144.
Long Statement,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_be_cleared_when_Shutdown_exceptions,The length of the statement  "                var collection = database.GetCollection<BsonDocument>(_collectionName' new MongoCollectionSettings { WriteConcern = WriteConcern.WMajority }); " is 142.
Long Statement,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The length of the statement  "                var collection = database.GetCollection<BsonDocument>(_collectionName' new MongoCollectionSettings { WriteConcern = WriteConcern.WMajority }); " is 142.
Long Statement,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The length of the statement  "                var cursor = collection.FindSync(FilterDefinition<BsonDocument>.Empty' new FindOptions<BsonDocument> { BatchSize = 2 }); " is 120.
Long Statement,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The length of the statement  "                    replSetStepDownResult = adminDatabase.RunCommandAsync<BsonDocument>("{ replSetStepDown : 5' force : true }").GetAwaiter().GetResult(); " is 134.
Long Statement,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_work_as_expected_when_NonMaster_exception,The length of the statement  "            var shouldConnectionPoolBeCleared = !Feature.KeepConnectionPoolWhenNotMasterConnectionException.IsSupported(CoreTestConfiguration.ServerVersion); " is 145.
Long Statement,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_work_as_expected_when_NonMaster_exception,The length of the statement  "                var collection = database.GetCollection<BsonDocument>(_collectionName' new MongoCollectionSettings { WriteConcern = WriteConcern.WMajority }); " is 142.
Long Statement,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,ConfigureFailPoint,The length of the statement  "            var args = BsonDocument.Parse($"{{ mode : {{ times : 1 }}' data : {{ failCommands : [\"insert\"]' errorCode : {errorCode} }} }}"); " is 130.
Long Statement,MongoDB.Driver.Tests,DecryptedSecureStringReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\DecryptedSecureStringTests.cs,_secureString,The length of the statement  "            var fieldInfo = typeof(DecryptedSecureString).GetField("_secureString"' BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,MongoDB.Driver.Tests,DecryptedSecureStringReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\DecryptedSecureStringTests.cs,_utf8BytesHandle,The length of the statement  "            var fieldInfo = typeof(DecryptedSecureString).GetField("_utf8BytesHandle"' BindingFlags.NonPublic | BindingFlags.Instance); " is 123.
Long Statement,MongoDB.Driver.Tests,ClientEncryptionReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\EncryptionTests.cs,_libMongoCryptController,The length of the statement  "            return (ExplicitEncryptionLibMongoCryptController)Reflector.GetFieldValue(clientEncryption' nameof(_libMongoCryptController)); " is 126.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_top_level_field,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_a_nested_field,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_a_nested_field_that_does_not_exist,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_array_name,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_array_name_with_multiple_dots,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_array_name_with_single_digit_indexer,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_array_name_with_a_multi_digit_indexer,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_array_name_with_positional_operator,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_array_name_with_positional_operator_with_multiple_dots,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_enum_with_field_type,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_enum_without_field_type,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_assign_a_non_typed_field_definition_from_a_typed_field_definition,The length of the statement  "            var renderedField = subject2.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 130.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_lambda,The length of the statement  "            FieldDefinition<Person' IEnumerable<Gender>> subject = new ExpressionFieldDefinition<Person' IEnumerable<Gender>>(x => x.Genders); " is 130.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_lambda,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_lambda,The length of the statement  "            renderedField.UnderlyingSerializer.Should().BeOfType<ImpliedImplementationInterfaceSerializer<IEnumerable<Gender>' List<Gender>>>(); " is 132.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_name,The length of the statement  "            FieldDefinition<Person' IEnumerable<Gender>> subject = new StringFieldDefinition<Person' IEnumerable<Gender>>("Genders"); " is 121.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_name,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_name,The length of the statement  "            renderedField.UnderlyingSerializer.Should().BeOfType<ImpliedImplementationInterfaceSerializer<IEnumerable<Gender>' List<Gender>>>(); " is 132.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_name_and_scalar_value_and_scalar_value_is_allowed,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry' allowScalarValueForArrayField: true); " is 166.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_name_and_scalar_value_and_scalar_value_is_allowed,The length of the statement  "            renderedField.UnderlyingSerializer.Should().BeOfType<ImpliedImplementationInterfaceSerializer<IEnumerable<Gender>' List<Gender>>>(); " is 132.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_name_and_scalar_value_and_scalar_value_is_not_allowed,The length of the statement  "            var renderedField = subject.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry' allowScalarValueForArrayField: false); " is 167.
Long Statement,MongoDB.Driver.Tests,FieldDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FieldDefinitionTests.cs,Should_resolve_an_array_field_with_field_name_and_scalar_value_and_scalar_value_is_not_allowed,The length of the statement  "            renderedField.UnderlyingSerializer.Should().BeOfType<ImpliedImplementationInterfaceSerializer<IEnumerable<Gender>' List<Gender>>>(); " is 132.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The length of the statement  "            Assert(subject.GeoIntersects("x"' poly)' "{x: {$geoIntersects: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 171.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The length of the statement  "            Assert(subject.GeoIntersects(x => x.Location' poly)' "{loc: {$geoIntersects: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 185.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The length of the statement  "            Assert(subject.GeoIntersects("Location"' poly)' "{loc: {$geoIntersects: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 180.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The length of the statement  "            Assert(subject.GeoIntersects(x => x.Location' poly)' "{loc: {$geoIntersects: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 185.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The length of the statement  "            Assert(subject.GeoIntersects("Location"' poly)' "{loc: {$geoIntersects: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 180.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The length of the statement  "            Assert(subject.GeoWithin("x"' poly)' "{x: {$geoWithin: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 163.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The length of the statement  "            Assert(subject.GeoWithin(x => x.Location' poly)' "{loc: {$geoWithin: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 177.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The length of the statement  "            Assert(subject.GeoWithin("Location"' poly)' "{loc: {$geoWithin: {$geometry: {type: 'Polygon'' coordinates: [[[40.0' 18.0]' [40.0' 19.0]' [41.0' 19.0]' [40.0' 18.0]]]}}}}"); " is 172.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The length of the statement  "            Assert(subject.GeoWithinBox(x => x.Location' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}"); " is 123.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The length of the statement  "            Assert(subject.GeoWithinCenterSphere(x => x.Location' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}"); " is 129.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The length of the statement  "            Assert(subject.GeoWithinCenterSphere("Location"' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}"); " is 124.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon,The length of the statement  "            Assert(subject.GeoWithinPolygon("x"' new['] { { 1d' 2d }' { 3d' 4d } })' "{x: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}"); " is 132.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The length of the statement  "            Assert(subject.GeoWithinPolygon(x => x.Location' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}"); " is 146.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The length of the statement  "            Assert(subject.GeoWithinPolygon("Location"' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}"); " is 141.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In_with_enum_typed,The length of the statement  "            Assert(subject.In("E"' new[] { EnumForClassWithEnums.A' EnumForClassWithEnums.B })' "{ E : { $in : [ \"A\"' \"B\" ] } }"); " is 122.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In_with_enum_typed,The length of the statement  "            Assert(subject.In("A"' new[] { EnumForClassWithEnums.A' EnumForClassWithEnums.B })' "{ A : { $in : [ \"A\"' \"B\" ] } }"); " is 122.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In_with_enum_typed,The length of the statement  "            Assert(subject.AnyIn("A"' new[] { EnumForClassWithEnums.A' EnumForClassWithEnums.B })' "{ A : { $in : [ \"A\"' \"B\" ] } }"); " is 125.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The length of the statement  "            Assert(subject.OfType<Twin>(Builders<Twin>.Filter.Eq(p => p.WasBornFirst' true))' "{ _t : \"Twin\"' wasBornFirst : true }"); " is 124.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The length of the statement  "            Assert(subject.OfType<Animal' Cat>("favoritePet"' Builders<Cat>.Filter.Eq(c => c.LivesLeft' 9))' "{ \"favoritePet._t\" : \"Cat\"' \"favoritePet.livesLeft\" : 9 }"); " is 164.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The length of the statement  "            Assert(subject.OfType<Animal' Cat>("favoritePet"' "{ livesLeft : 9 }")' "{ \"favoritePet._t\" : \"Cat\"' \"favoritePet.livesLeft\" : 9 }"); " is 139.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The length of the statement  "            Assert(subject.OfType<Animal' Cat>("favoritePet"' BsonDocument.Parse("{ livesLeft : 9 }"))' "{ \"favoritePet._t\" : \"Cat\"' \"favoritePet.livesLeft\" : 9 }"); " is 159.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The length of the statement  "            Assert(subject.OfType<Animal' Cat>(p => p.FavoritePet' c => c.LivesLeft == 9)' "{ \"favoritePet._t\" : \"Cat\"' \"favoritePet.livesLeft\" : 9 }"); " is 146.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The length of the statement  "            Assert(animalFilter' "{ $or : [{ \"favoritePet._t\" : \"Cat\"' \"favoritePet.livesLeft\" : 9 }' { \"favoritePet._t\" : \"Dog\"' \"favoritePet.isLapDog\" : true }] }"); " is 167.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Text,The length of the statement  "            Assert(subject.Text("funny"' new TextSearchOptions { Language = "en" })' "{$text: {$search: 'funny'' $language: 'en'}}"); " is 121.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Text,The length of the statement  "            Assert(subject.Text("funny"' new TextSearchOptions { CaseSensitive = true })' "{$text: {$search: 'funny'' $caseSensitive: true}}"); " is 131.
Long Statement,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Text,The length of the statement  "            Assert(subject.Text("funny"' new TextSearchOptions { DiacriticSensitive = true })' "{$text: {$search: 'funny'' $diacriticSensitive: true}}"); " is 141.
Long Statement,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,CreateSubject,The length of the statement  "            var subject = new FindFluent<Person' Person>(session: session' collection: _mockCollection.Object' filter: filter' options: options); " is 133.
Long Statement,MongoDB.Driver.Tests,FindFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,_collection,The length of the statement  "            var fieldInfo = typeof(FindFluent<TDocument' TProjection>).GetField("_collection"' BindingFlags.NonPublic | BindingFlags.Instance); " is 131.
Long Statement,MongoDB.Driver.Tests,FindFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,_filter,The length of the statement  "            var fieldInfo = typeof(FindFluent<TDocument' TProjection>).GetField("_filter"' BindingFlags.NonPublic | BindingFlags.Instance); " is 127.
Long Statement,MongoDB.Driver.Tests,FindFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,_options,The length of the statement  "            var fieldInfo = typeof(FindFluent<TDocument' TProjection>).GetField("_options"' BindingFlags.NonPublic | BindingFlags.Instance); " is 128.
Long Statement,MongoDB.Driver.Tests,FindFluentReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,_session,The length of the statement  "            var fieldInfo = typeof(FindFluent<TDocument' TProjection>).GetField("_session"' BindingFlags.NonPublic | BindingFlags.Instance); " is 128.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Group_should_generate_the_correct_document_using_expressions,The length of the statement  "            var expectedGroup = BsonDocument.Parse("{$group: {_id: '$Age'' Name: {'$first': { '$concat': ['$FirstName'' ' '' '$LastName']}}}}"); " is 132.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Lookup_should_generate_the_correct_group_when_using_BsonDocument,The length of the statement  "            var expectedLookup = BsonDocument.Parse("{$lookup: { from: 'from'' localField: 'local'' foreignField: 'foreign'' as: 'as' } }"); " is 128.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Lookup_should_generate_the_correct_group_when_using_lambdas,The length of the statement  "            var expectedLookup = BsonDocument.Parse("{$lookup: { from: 'NameMeaning'' localField: 'FirstName'' foreignField: 'Name'' as: 'Meanings' } }"); " is 142.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Lookup_expressive_should_generate_the_correct_lookup_when_using_BsonDocument,The length of the statement  "            var expectedLookup = BsonDocument.Parse("{ $lookup : { from : 'foreign'' let : { 'name' : 'value' }' pipeline : [ ]' as : 'as' } }"); " is 133.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Lookup_expressive_should_generate_the_correct_lookup_when_using_lambdas,The length of the statement  "            var expectedLookup = BsonDocument.Parse("{ $lookup : { from : 'NameMeaning'' let : { 'name' : 'value' }' pipeline : [ { } ]' as : 'Meanings' } }"); " is 147.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,ReplaceRoot_should_generate_the_correct_stage_with_anonymous_class,The length of the statement  "            var expectedStage = BsonDocument.Parse("{ $replaceRoot : { newRoot:  { Name : { $concat : [ '$FirstName'' ' '' '$LastName' ] } } } }"); " is 135.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,ReplaceWith_should_generate_the_correct_stage_with_anonymous_class,The length of the statement  "            var expectedStage = BsonDocument.Parse("{ $replaceWith : { Name : { $concat : [ '$FirstName'' ' '' '$LastName' ] } } }"); " is 121.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Unwind_with_options_with_includeArrayIndex_set_and_preserveNullAndEmptyArrays_set,The length of the statement  "            var expectedUnwind = BsonDocument.Parse("{$unwind: { path: '$Age'' preserveNullAndEmptyArrays: true' includeArrayIndex: 'AgeIndex' } }"); " is 137.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,AssertLast,The length of the statement  "            var renderedPipeline = pipeline.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry); " is 133.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,CreateSubject,The length of the statement  "            return new CollectionAggregateFluent<Person' Person>(null' collection' new EmptyPipelineDefinition<Person>()' new AggregateOptions()); " is 134.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,CreateCollection,The length of the statement  "            mockCollection.SetupGet(c => c.CollectionNamespace).Returns(new CollectionNamespace(new DatabaseNamespace("test")' collectionName ?? typeof(T).Name)); " is 150.
Long Statement,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,SetupDatabaseGetCollectionMethod,The length of the statement  "                    mockCollection.SetupGet(c => c.CollectionNamespace).Returns(new CollectionNamespace(new DatabaseNamespace("test")' collectionName)); " is 132.
Long Statement,MongoDB.Driver.Tests,IFindFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IFindFluentExtensionsTests.cs,AssertProjection,The length of the statement  "            Assert.Equal(expectedProjection' subject.Options.Projection.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry).Document); " is 171.
Long Statement,MongoDB.Driver.Tests,IFindFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IFindFluentExtensionsTests.cs,AssertSort,The length of the statement  "            Assert.Equal(expectedSort' subject.Options.Sort.Render(BsonSerializer.SerializerRegistry.GetSerializer<Person>()' BsonSerializer.SerializerRegistry)); " is 150.
Long Statement,MongoDB.Driver.Tests,IFindFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IFindFluentExtensionsTests.cs,CreateSubject,The length of the statement  "            return new FindFluent<Person' Person>(session: null' collection: mockCollection.Object' filter: new BsonDocument()' options: options); " is 134.
Long Statement,MongoDB.Driver.Tests,IMongoClientExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoClientExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockClient.Verify(m => m.WatchAsync(session' It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 159.
Long Statement,MongoDB.Driver.Tests,IMongoClientExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoClientExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockClient.Verify(m => m.Watch(session' It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 154.
Long Statement,MongoDB.Driver.Tests,IMongoClientExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoClientExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockClient.Verify(m => m.WatchAsync(It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 150.
Long Statement,MongoDB.Driver.Tests,IMongoClientExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoClientExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockClient.Verify(m => m.Watch(It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 145.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Count_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.CountAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 138.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Count_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.Count(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Count_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.CountAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 129.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Count_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.Count(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,CountDocuments_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.CountDocumentsAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 147.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,CountDocuments_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.CountDocuments(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 142.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,CountDocuments_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.CountDocumentsAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 138.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,CountDocuments_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.CountDocuments(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteMany_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.DeleteManyAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 143.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteMany_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.DeleteMany(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 138.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteMany_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(s => s.DeleteManyAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 134.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteMany_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(s => s.DeleteMany(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 129.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteMany_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(s => s.DeleteManyAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' cancellationToken)' Times.Once); " is 125.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteMany_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(s => s.DeleteMany(It.IsAny<ExpressionFilterDefinition<Person>>()' cancellationToken)' Times.Once); " is 120.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteOne_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.DeleteOneAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 142.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteOne_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(s => s.DeleteOne(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 137.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(s => s.DeleteOneAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(s => s.DeleteOne(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 128.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,DeleteOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(s => s.DeleteOneAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' cancellationToken)' Times.Once); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.DistinctAsync(session' It.IsAny<ExpressionFieldDefinition<Person' string>>()' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' " is 161.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.Distinct(session' It.IsAny<ExpressionFieldDefinition<Person' string>>()' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' " is 156.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.DistinctAsync(session' It.IsAny<ExpressionFieldDefinition<Person' string>>()' filterDefinition' options' cancellationToken)' " is 131.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.Distinct(session' It.IsAny<ExpressionFieldDefinition<Person' string>>()' filterDefinition' options' cancellationToken)' " is 126.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.DistinctAsync(collection' session' fieldDefinition' filterExpression' options' cancellationToken); " is 125.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.DistinctAsync(session' fieldDefinition' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' " is 123.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.Distinct(collection' session' fieldDefinition' filterExpression' options' cancellationToken); " is 120.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.DistinctAsync(It.IsAny<ExpressionFieldDefinition<Person' string>>()' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' " is 152.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.Distinct(It.IsAny<ExpressionFieldDefinition<Person' string>>()' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' " is 147.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Distinct_should_call_collection_with_expected_arguments,The length of the statement  "                                s => s.DistinctAsync(It.IsAny<ExpressionFieldDefinition<Person' string>>()' filterDefinition' options' cancellationToken)' " is 122.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindSync_should_call_collection_FindSync_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.FindAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 137.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindSync_should_call_collection_FindSync_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.FindSync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 136.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindSync_should_call_collection_FindSync_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.FindAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 128.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindSync_should_call_collection_FindSync_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.FindSync(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 127.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndDeleteAsync(collection' session' filterExpression' optionsWithProjection' cancellationToken); " is 130.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDeleteAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' optionsWithProjection' cancellationToken)' Times.Once); " is 163.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndDelete(collection' session' filterExpression' optionsWithProjection' cancellationToken); " is 125.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDelete(session' It.IsAny<ExpressionFilterDefinition<Person>>()' optionsWithProjection' cancellationToken)' Times.Once); " is 158.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndDeleteAsync<Person>(collection' session' filterExpression' options' cancellationToken); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDeleteAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 149.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDelete(session' It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 144.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndDeleteAsync(collection' filterExpression' optionsWithProjection' cancellationToken); " is 121.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDeleteAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' optionsWithProjection' cancellationToken)' Times.Once); " is 154.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDelete(It.IsAny<ExpressionFilterDefinition<Person>>()' optionsWithProjection' cancellationToken)' Times.Once); " is 149.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDeleteAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 140.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndDelete_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndDelete(It.IsAny<ExpressionFilterDefinition<Person>>()' options' cancellationToken)' Times.Once); " is 135.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplaceAsync(collection' session' filterExpression' replacement' optionsWithProjection' cancellationToken); " is 144.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplaceAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' optionsWithProjection' cancellationToken)' Times.Once); " is 177.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplace(collection' session' filterExpression' replacement' optionsWithProjection' cancellationToken); " is 139.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplace(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' optionsWithProjection' cancellationToken)' Times.Once); " is 172.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplaceAsync(collection' session' filterExpression' replacement' options' cancellationToken); " is 130.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplaceAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 163.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplace<Person>(collection' session' filterExpression' replacement' options' cancellationToken); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplace(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 158.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplaceAsync(collection' session' filterDefinition' replacement' options' cancellationToken); " is 130.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplaceAsync(session' filterDefinition' replacement' options' cancellationToken)' Times.Once); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplace(collection' session' filterDefinition' replacement' options' cancellationToken); " is 125.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplace(session' filterDefinition' replacement' options' cancellationToken)' Times.Once); " is 128.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplaceAsync(collection' filterExpression' replacement' optionsWithProjection' cancellationToken); " is 135.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplaceAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' optionsWithProjection' cancellationToken)' Times.Once); " is 168.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplace(collection' filterExpression' replacement' optionsWithProjection' cancellationToken); " is 130.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplace(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' optionsWithProjection' cancellationToken)' Times.Once); " is 163.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplaceAsync<Person>(collection' filterExpression' replacement' options' cancellationToken); " is 129.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplaceAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 154.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplace<Person>(collection' filterExpression' replacement' options' cancellationToken); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplace(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 149.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndReplaceAsync(collection' filterDefinition' replacement' options' cancellationToken); " is 121.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndReplace_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndReplaceAsync(filterDefinition' replacement' options' cancellationToken)' Times.Once); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdateAsync(collection' session' filterExpression' update' optionsWithProjection' cancellationToken); " is 138.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdateAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' optionsWithProjection' cancellationToken)' Times.Once); " is 171.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdate(collection' session' filterExpression' update' optionsWithProjection' cancellationToken); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdate(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' optionsWithProjection' cancellationToken)' Times.Once); " is 166.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdateAsync<Person>(collection' session' filterExpression' update' options' cancellationToken); " is 132.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdateAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)' Times.Once); " is 157.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdate<Person>(collection' session' filterExpression' update' options' cancellationToken); " is 127.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdate(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)' Times.Once); " is 152.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdateAsync(collection' session' filterDefinition' update' options' cancellationToken); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdateAsync(session' filterDefinition' update' options' cancellationToken)' Times.Once); " is 127.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdate(session' filterDefinition' update' options' cancellationToken)' Times.Once); " is 122.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdateAsync(collection' filterExpression' update' optionsWithProjection' cancellationToken); " is 129.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdateAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' update' optionsWithProjection' cancellationToken)' Times.Once); " is 162.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdate(collection' filterExpression' update' optionsWithProjection' cancellationToken); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdate(It.IsAny<ExpressionFilterDefinition<Person>>()' update' optionsWithProjection' cancellationToken)' Times.Once); " is 157.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            IMongoCollectionExtensions.FindOneAndUpdateAsync<Person>(collection' filterExpression' update' options' cancellationToken); " is 123.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdateAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)' Times.Once); " is 148.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,FindOneAndUpdate_should_call_collection_with_expected_arguments,The length of the statement  "                            mockCollection.Verify(m => m.FindOneAndUpdate(It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)' Times.Once); " is 143.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        IMongoCollectionExtensions.ReplaceOneAsync(collection' session' filterExpression' replacement' cancellationToken: cancellationToken); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOneAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' (ReplaceOptions)null' cancellationToken)' Times.Once); " is 169.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        IMongoCollectionExtensions.ReplaceOne(collection' session' filterExpression' replacement' cancellationToken: cancellationToken); " is 128.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOne(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' (ReplaceOptions)null' cancellationToken)' Times.Once); " is 164.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        IMongoCollectionExtensions.ReplaceOneAsync(collection' filterExpression' replacement' cancellationToken: cancellationToken); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOneAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' (ReplaceOptions)null' cancellationToken)' Times.Once); " is 160.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOne(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' (ReplaceOptions)null' cancellationToken)' Times.Once); " is 155.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        IMongoCollectionExtensions.ReplaceOneAsync(collection' session' filterExpression' replacement' options' cancellationToken); " is 123.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOneAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 156.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOne(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 151.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOneAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 147.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOne(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 142.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        IMongoCollectionExtensions.ReplaceOneAsync(collection' session' filterExpression' replacement' options' cancellationToken); " is 123.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOneAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 156.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOne(session' It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 151.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOneAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 147.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,ReplaceOne_should_call_collection_with_expected_arguments,The length of the statement  "                        mockCollection.Verify(m => m.ReplaceOne(It.IsAny<ExpressionFilterDefinition<Person>>()' replacement' options' cancellationToken)' Times.Once); " is 142.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateMany_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateManyAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 139.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateMany_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateMany(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 134.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateMany_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateManyAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 130.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateMany_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateMany(It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 125.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateOne_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateOneAsync(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 138.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateOne_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateOne(session' It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 133.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateOne_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateOneAsync(It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 129.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,UpdateOne_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.UpdateOne(It.IsAny<ExpressionFilterDefinition<Person>>()' update' options' cancellationToken)); " is 124.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Watch_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.WatchAsync(session' It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<Person>>>()' options' cancellationToken)' Times.Once); " is 157.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Watch_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.Watch(session' It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<Person>>>()' options' cancellationToken)' Times.Once); " is 152.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Watch_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.WatchAsync(It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<Person>>>()' options' cancellationToken)' Times.Once); " is 148.
Long Statement,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Watch_should_call_collection_with_expected_arguments,The length of the statement  "                    mockCollection.Verify(m => m.Watch(It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<Person>>>()' options' cancellationToken)' Times.Once); " is 143.
Long Statement,MongoDB.Driver.Tests,IMongoDatabaseExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoDatabaseExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockDatabase.Verify(m => m.WatchAsync(session' It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 161.
Long Statement,MongoDB.Driver.Tests,IMongoDatabaseExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoDatabaseExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockDatabase.Verify(m => m.Watch(session' It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 156.
Long Statement,MongoDB.Driver.Tests,IMongoDatabaseExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoDatabaseExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockDatabase.Verify(m => m.WatchAsync(It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 152.
Long Statement,MongoDB.Driver.Tests,IMongoDatabaseExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoDatabaseExtensionsTests.cs,Watch_should_call_client_with_expected_arguments,The length of the statement  "                    mockDatabase.Verify(m => m.Watch(It.IsAny<EmptyPipelineDefinition<ChangeStreamDocument<BsonDocument>>>()' options' cancellationToken)' Times.Once); " is 147.
Long Statement,MongoDB.Driver.Tests,MockOperationExecutor,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MockOperationExecutor.cs,GetReadCall,The length of the statement  "                throw new InvalidOperationException(string.Format("Expected a call of type {0} but had {1}."' typeof(ReadCall<TResult>)' call.GetType())); " is 138.
Long Statement,MongoDB.Driver.Tests,MockOperationExecutor,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MockOperationExecutor.cs,GetWriteCall,The length of the statement  "                throw new InvalidOperationException(string.Format("Expected a call of type {0} but had {1}."' typeof(WriteCall<TResult>)' call.GetType())); " is 139.
Long Statement,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,OneTimeSetup,The length of the statement  "            __writeErrors = new[] { new BulkWriteError(10' ServerErrorCategory.Uncategorized' 1' "blah"' new BsonDocument("a"' 1)) }; " is 121.
Long Statement,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,constructor_should_initialize_subject,The length of the statement  "            var subject = new MongoBulkWriteException<BsonDocument>(__connectionId' __bulkWriteResult' __writeErrors' __writeConcernError' __unprocessedRequests); " is 150.
Long Statement,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,FromCore_should_convert_from_core_exception_with_a_write_concern_error_when_original_models_do_not_exist,The length of the statement  "                    processedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("b"' 1))) { CorrelationId = 1 } }' " is 120.
Long Statement,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,FromCore_should_convert_from_core_exception_with_a_write_concern_error_when_original_models_do_not_exist,The length of the statement  "                unprocessedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("a"' 1))) { CorrelationId = 0 } }); " is 123.
Long Statement,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestClone,The length of the statement  "                "connect=direct;connectTimeout=123;uuidRepresentation=pythonLegacy;ipv6=true;heartbeatInterval=1m;heartbeatTimeout=2m;localThreshold=128;" + " is 140.
Long Statement,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestClone,The length of the statement  "            settings.Credential = MongoCredential.CreateMongoCRCredential("database"' "username"' "password").WithMechanismProperty("SERVICE_NAME"' "other"); " is 145.
Long Statement,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestFromUrl,The length of the statement  "                "compressors=zlib'snappy;zlibCompressionLevel=9;connect=direct;connectTimeout=123;uuidRepresentation=pythonLegacy;ipv6=true;heartbeatInterval=1m;heartbeatTimeout=2m;localThreshold=128;" + " is 187.
Long Statement,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestFromUrl,The length of the statement  "                "readPreference=secondary;readPreferenceTags=a:1'b:2;readPreferenceTags=c:3'd:4;retryReads=false;retryWrites=true;socketTimeout=129;" + " is 135.
Long Statement,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestSocketConfigurator,The length of the statement  "            SpinWait.SpinUntil(() => subject.Cluster.Description.State == ClusterState.Connected' TimeSpan.FromSeconds(5)).Should().BeTrue(); " is 129.
Long Statement,MongoDB.Driver.Tests,MongoClientTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,DropDatabase_should_invoke_the_correct_operation,The length of the statement  "            var subject = new MongoClient(operationExecutor' DriverTestConfiguration.GetClientSettings()).WithWriteConcern(writeConcern); " is 125.
Long Statement,MongoDB.Driver.Tests,MongoClientTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,Watch_should_invoke_the_correct_operation,The length of the statement  "            var changeStreamOperation = call.Operation.Should().BeOfType<ChangeStreamOperation<ChangeStreamDocument<BsonDocument>>>().Subject; " is 130.
Long Statement,MongoDB.Driver.Tests,AreSessionsSupportedServerSelectorReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,CreateInstance,The length of the statement  "            var type = typeof(MongoClient).GetTypeInfo().Assembly.GetType("MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector"); " is 127.
Long Statement,MongoDB.Driver.Tests,MongoDBRefTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDBRefTests.cs,TestDateTimeRefId,The length of the statement  "            var expected = "{ '_id' : ObjectId('#id')' 'DBRef' : { '$ref' : 'collection'' '$id' : ISODate('1970-01-01T00:00:00Z') } }"; " is 123.
Long Statement,MongoDB.Driver.Tests,MongoDBRefTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDBRefTests.cs,TestInt64RefId,The length of the statement  "            var expected = "{ '_id' : ObjectId('#id')' 'DBRef' : { '$ref' : 'collection'' '$id' : NumberLong('123456789012345') } }"; " is 121.
Long Statement,MongoDB.Driver.Tests,MongoDBRefTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDBRefTests.cs,TestWithDatabase,The length of the statement  "            var expected = "{ '_id' : ObjectId('#id')' 'DBRef' : { '$ref' : 'collection'' '$id' : ObjectId('#ref')' '$db' : 'database' } }"; " is 128.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The length of the statement  "            var readPreference = new ReadPreference(ReadPreferenceMode.Secondary' new[] { new TagSet(new[] { new Tag("dc"' "1") }) }' TimeSpan.FromSeconds(11)); " is 148.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestGetWriteConcern_W,The length of the statement  "            var w = (wobj == null) ? null : (wobj is int) ? (WriteConcern.WValue)new WriteConcern.WCount((int)wobj) : new WriteConcern.WMode((string)wobj); " is 143.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestGuidRepresentation,The length of the statement  "            var canonicalConnectionString = string.Format(formatString' values[0]' "uuidRepresentation").Replace("/?uuidRepresentation=csharpLegacy"' ""); " is 142.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestMaxStaleness,The length of the statement  "            var readPreference = maxStaleness.HasValue ? new ReadPreference(ReadPreferenceMode.Secondary' maxStaleness: maxStaleness) : null; " is 129.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestReadPreference_SecondaryWithTwoTagSets,The length of the statement  "            var connectionString = "mongodb://localhost/?readPreference=secondary;readPreferenceTags=dc:ny'rack:1;readPreferenceTags=dc:sf"; " is 128.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestServer,The length of the statement  "            var server = (host == null) ? null : (port == null) ? new MongoServerAddress(host) : new MongoServerAddress(host' port.Value); " is 126.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestServers,The length of the statement  "                    var server = (hosts[i] == null) ? null : (ports[i] == null) ? new MongoServerAddress(hosts[i]) : new MongoServerAddress(hosts[i]' (int)ports[i]); " is 145.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestSlaveOk_AfterReadPreference,The length of the statement  "            Assert.Throws<MongoConfigurationException>(() => new MongoUrlBuilder("mongodb://localhost/?readPreference=primary&slaveOk=true")); " is 130.
Long Statement,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestW,The length of the statement  "            var w = (wobj == null) ? null : (wobj is int) ? (WriteConcern.WValue)new WriteConcern.WCount((int)wobj) : new WriteConcern.WMode((string)wobj); " is 143.
Long Statement,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The length of the statement  "            var readPreference = new ReadPreference(ReadPreferenceMode.Secondary' new[] { new TagSet(new[] { new Tag("dc"' "1") }) }' TimeSpan.FromSeconds(11)); " is 148.
Long Statement,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestResolveWithASrvUrl,The length of the statement  "            Assert.Equal("mongodb://user%40GSSAPI.COM:password@localhost.test.build.10gen.cc/funny?authSource=thisDB;tls=true;replicaSet=rs0"' resolved.ToString()); " is 152.
Long Statement,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestResolveAsyncWithASrvUrl,The length of the statement  "            Assert.Equal("mongodb://user%40GSSAPI.COM:password@localhost.test.build.10gen.cc/funny?authSource=thisDB;tls=true;replicaSet=rs0"' resolved.ToString()); " is 152.
Long Statement,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,OneTimeSetup,The length of the statement  "            __writeConcernError = new WriteConcernError(1' null' "writeConcernError"' new BsonDocument("details"' "writeConcernError")); " is 124.
Long Statement,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,OneTimeSetup,The length of the statement  "            __writeError = new WriteError(ServerErrorCategory.Uncategorized' 1' "writeError"' new BsonDocument("details"' "writeError")); " is 125.
Long Statement,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,constructor_should_initialize_subject,The length of the statement  "            subject.Message.Should().Be("A write operation resulted in an error." + Environment.NewLine + "  writeError" + Environment.NewLine + "  writeConcernError"); " is 156.
Long Statement,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,FromBulkWriteException_should_return_expected_result,The length of the statement  "            var writeErrors = new[] { new BulkWriteError(1' ServerErrorCategory.Uncategorized' 2' "message"' new BsonDocument("details"' 1)) }; " is 131.
Long Statement,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,FromBulkWriteException_should_return_expected_result,The length of the statement  "            var bulkWriteException = new MongoBulkWriteException<BsonDocument>(__connectionId' bulkWriteResult' writeErrors' writeConcernError' unprocessedRequests); " is 153.
Long Statement,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,FromBulkWriteException_should_return_expected_result,The length of the statement  "            result.Message.Should().Be("A write operation resulted in an error." + Environment.NewLine + "  message" + Environment.NewLine + "  message"); " is 142.
Long Statement,MongoDB.Driver.Tests,OfTypeMongoCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,Aggregate_should_combine_match_statements_at_the_beginning_of_a_pipeline,The length of the statement  "                subject.AggregateAsync<B>(new[] { new BsonDocument("$match"' new BsonDocument("x"' 1)) }' options' CancellationToken.None); " is 123.
Long Statement,MongoDB.Driver.Tests,PipelineStageDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PipelineStageDefinitionBuilderTests.cs,Lookup_with_let_should_return_the_expected_result,The length of the statement  "            var result = PipelineStageDefinitionBuilder.Lookup<BsonDocument'BsonDocument' BsonDocument' IEnumerable<BsonDocument>' BsonDocument>( " is 133.
Long Statement,MongoDB.Driver.Tests,PipelineStageDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PipelineStageDefinitionBuilderTests.cs,Lookup_without_optional_let_should_return_the_expected_result,The length of the statement  "            var result = PipelineStageDefinitionBuilder.Lookup<BsonDocument' BsonDocument' BsonDocument' IEnumerable<BsonDocument>' BsonDocument >( " is 135.
Long Statement,MongoDB.Driver.Tests,PipelineStageDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PipelineStageDefinitionBuilderTests.cs,Lookup_with_empty_required_params_should_throw_expected_exception,The length of the statement  "                PipelineStageDefinitionBuilder.Lookup<BsonDocument' BsonDocument' BsonDocument' IEnumerable<BsonDocument>' BsonDocument>( " is 121.
Long Statement,MongoDB.Driver.Tests,PipelineStageDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PipelineStageDefinitionBuilderTests.cs,Lookup_with_empty_required_params_should_throw_expected_exception,The length of the statement  "                PipelineStageDefinitionBuilder.Lookup<BsonDocument' BsonDocument' BsonDocument' IEnumerable<BsonDocument>' BsonDocument>( " is 121.
Long Statement,MongoDB.Driver.Tests,PipelineStageDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PipelineStageDefinitionBuilderTests.cs,Lookup_with_empty_required_params_should_throw_expected_exception,The length of the statement  "                PipelineStageDefinitionBuilder.Lookup<BsonDocument' BsonDocument' BsonDocument' IEnumerable<BsonDocument>' BsonDocument>( " is 121.
Long Statement,MongoDB.Driver.Tests,PipelineUpdateDefinitionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PipelineUpdateDefinitionTests.cs,PipelineUpdateDefinition_should_work_with_pipeline_builder_and_replaceWith,The length of the statement  "                .ReplaceWith((AggregateExpressionDefinition<BsonDocument' BsonDocument>)"{ _id : \"$_id\"' s : { $sum : [\"$X\"' \"$Y\"] } }"); " is 127.
Long Statement,MongoDB.Driver.Tests,SslSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\SslSettingsTests.cs,TestClientCertificates,The length of the statement  "            var clientCertificates = new[] { new X509Certificate2(certificateFileName' "password")' new X509Certificate2(certificateFileName' "password") }; " is 144.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSetEach,The length of the statement  "            Assert(subject.AddToSetEach("a"' new[] { new[] { 1' 2 }' new[] { 3' 4 } })' "{$addToSet: {a: {$each: [[1' 2]' [3' 4]]}}}"); " is 123.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSetEach_Typed,The length of the statement  "            Assert(subject.AddToSetEach(x => x.FavoriteColors' new[] { "green"' "violet" })' "{$addToSet: {colors: {$each: ['green'' 'violet']}}}"); " is 136.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSetEach_Typed,The length of the statement  "            Assert(subject.AddToSetEach("FavoriteColors"' new[] { "green"' "violet" })' "{$addToSet: {colors: {$each: ['green'' 'violet']}}}"); " is 131.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,CurrentDate_with_timestamp_type,The length of the statement  "            Assert(subject.CurrentDate("a"' UpdateDefinitionCurrentDateType.Timestamp)' "{$currentDate: {a: {$type: 'timestamp'}}}"); " is 121.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,CurrentDate_Typed_with_date_type,The length of the statement  "            Assert(subject.CurrentDate(x => x.LastUpdated' UpdateDefinitionCurrentDateType.Date)' "{$currentDate: {last_updated: {$type: 'date'}}}"); " is 137.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,CurrentDate_Typed_with_date_type,The length of the statement  "            Assert(subject.CurrentDate("LastUpdated"' UpdateDefinitionCurrentDateType.Date)' "{$currentDate: {last_updated: {$type: 'date'}}}"); " is 132.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,CurrentDate_Typed_with_timestamp_type,The length of the statement  "            Assert(subject.CurrentDate(x => x.LastUpdated' UpdateDefinitionCurrentDateType.Timestamp)' "{$currentDate: {last_updated: {$type: 'timestamp'}}}"); " is 147.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,CurrentDate_Typed_with_timestamp_type,The length of the statement  "            Assert(subject.CurrentDate("LastUpdated"' UpdateDefinitionCurrentDateType.Timestamp)' "{$currentDate: {last_updated: {$type: 'timestamp'}}}"); " is 142.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Incorrect_index_should_throw_expected_exception_with_set,The length of the statement  "            AssertThrow<Person' IndexOutOfRangeException>(subject.Set(x => x.Pets[-2].Name' "Fluffencutters")' expectedErrorMessage); " is 121.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Incorrect_index_should_throw_expected_exception_with_set,The length of the statement  "            AssertThrow<Person' IndexOutOfRangeException>(subject.Set(x => x.Pets.ElementAt(-2).Name' "Fluffencutters")' expectedErrorMessage); " is 131.
Long Statement,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,PullAll_Typed,The length of the statement  "            Assert(subject.PullAll(x => x.FavoriteColors' new[] { "green"' "violet" })' "{$pullAll: {colors: ['green'' 'violet']}}"); " is 121.
Long Statement,MongoDB.Driver.Tests.Communication.Security,PlainAuthenticationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Communication\Security\PlainAuthenticationTests.cs,TestBadPassword,The length of the statement  "            _settings.Credential = MongoCredential.CreatePlainCredential(currentCredential.Source' currentCredential.Username' "wrongPassword"); " is 132.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The length of the statement  "                    new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }' " is 123.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The length of the statement  "                    GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))' " is 138.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The length of the statement  "                    new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }' " is 152.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The length of the statement  "            var feature1 = "{ 'type' : 'Feature'' 'geometry' : { 'type' : 'Point'' 'coordinates' : [102.0' 0.5] }' 'properties' : { 'prop0' : 'value0' } }"; " is 144.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The length of the statement  "            var feature2 = "{ 'type' : 'Feature'' 'geometry' : { 'type' : 'LineString'' 'coordinates' : [[102.0' 0.0]' [103.0' 1.0]' [104.0' 0.0]' [105.0' 1.0]] }' 'properties' : { 'prop0' : 'value0'' 'prop1' : 0.0 } }"; " is 208.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The length of the statement  "            var feature3 = "{ 'type' : 'Feature'' 'geometry' : { 'type' : 'Polygon'' 'coordinates' : [[[100.0' 0.0]' [101.0' 0.0]' [101.0' 1.0]' [100.0' 1.0]' [100.0' 0.0]]] }' 'properties' : { 'prop0' : 'value0'' 'prop1' : { 'this' : 'that' } } }"; " is 237.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The length of the statement  "            var expected = "{ 'type' : 'FeatureCollection'' 'features' : [#1' #2' #3] }".Replace("#1"' feature1).Replace("#2"' feature2).Replace("#3"' feature3).Replace("'"' "\""); " is 168.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestFeatureCollectionWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'FeatureCollection'' 'features' : [#1' #2]' 'x' : 1 }".Replace("#1"' feature1).Replace("#2"' feature2).Replace("'"' "\""); " is 149.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The length of the statement  "                new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }' " is 147.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The length of the statement  "            var polygon = "{ 'type' : 'Polygon'' 'coordinates' : [[[-180.0' 10.0]' [20.0' 90.0]' [180.0' -5.0]' [-30.0' -90.0]' [-180.0' 10.0]]] }"; " is 136.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The length of the statement  "            var expected = "{ 'type' : 'Feature'' 'bbox' : #bbox' 'geometry' : #polygon }".Replace("#bbox"' boundingBox).Replace("#polygon"' polygon).Replace("'"' "\""); " is 157.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestFeatureWithId,The length of the statement  "            var expected = "{ 'type' : 'Feature'' 'geometry' : { 'type' : 'Point'' 'coordinates' : [1.0' 2.0] }' 'id' : 1 }".Replace("'"' "\""); " is 132.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestFeatureWithProperties,The length of the statement  "            var expected = "{ 'type' : 'Feature'' 'geometry' : { 'type' : 'Point'' 'coordinates' : [1.0' 2.0] }' 'properties' : { 'x' : 1 } }".Replace("'"' "\""); " is 150.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestExampleFromSpec,The length of the statement  "            var expected = "{ 'type' : 'GeometryCollection'' 'geometries' : [#1' #2] }".Replace("#1"' geometry1).Replace("#2"' geometry2).Replace("'"' "\""); " is 145.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestGeometryCollectionWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'GeometryCollection'' 'geometries' : [#1' #2]' 'x' : 1 }".Replace("#1"' geometry1).Replace("#2"' geometry2).Replace("'"' "\""); " is 154.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'LineString'' 'coordinates' : [[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]]' 'x' : 1 }".Replace("'"' "\""); " is 123.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLinkedCoordinateReferenceSystemTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLinkedCoordinateReferenceSystemTests.cs,TestExampleFromSpec,The length of the statement  "            var expected = "{ 'type' : 'link'' 'properties' : { 'href' : 'http://example.com/crs/42'' 'type' : 'proj4' } }".Replace("'"' "\""); " is 131.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestExampleFromSpec,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[100.0' 0.0]' [101.0' 1.0]]' [[102.0' 2.0]' [103.0' 3.0]]] }".Replace("'"' "\""); " is 145.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]]' [[5.0' 6.0]' [7.0' 8.0]]] }".Replace("'"' "\""); " is 137.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]]' [[5.0' 6.0]' [7.0' 8.0]]] }".Replace("'"' "\""); " is 137.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]]' [[5.0' 6.0]' [7.0' 8.0]]] }".Replace("'"' "\""); " is 137.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]]' [[5.0' 6.0]' [7.0' 8.0]]]' 'x' : 1 }".Replace("'"' "\""); " is 146.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]]' [[7.0' 8.0' 9.0]' [10.0' 11.0' 12.0]]] }".Replace("'"' "\""); " is 160.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]]' [[7.0' 8.0' 9.0]' [10.0' 11.0' 12.0]]] }".Replace("'"' "\""); " is 160.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]]' [[7.0' 8.0' 9.0]' [10.0' 11.0' 12.0]]] }".Replace("'"' "\""); " is 160.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'MultiLineString'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]]' [[7.0' 8.0' 9.0]' [10.0' 11.0' 12.0]]]' 'x' : 1 }".Replace("'"' "\""); " is 169.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'MultiPoint'' 'coordinates' : [[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]]' 'x' : 1 }".Replace("'"' "\""); " is 123.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))' " is 177.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The length of the statement  "                    GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))' " is 180.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The length of the statement  "                    GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0)))); " is 182.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[#x1]' [#x2' #h2]] }".Replace("#x1"' exterior1).Replace("#x2"' exterior2).Replace("#h2"' hole2).Replace("'"' "\""); " is 175.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))' " is 139.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0))); " is 140.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]]' [[[2.0' 3.0]' [4.0' 5.0]' [6.0' 7.0]' [2.0' 3.0]]]] }".Replace("'"' "\""); " is 186.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))' " is 147.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0))); " is 148.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]]' [[[2.0' 3.0]' [4.0' 5.0]' [6.0' 7.0]' [2.0' 3.0]]]] }".Replace("'"' "\""); " is 186.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))' " is 143.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0))); " is 144.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]]' [[[2.0' 3.0]' [4.0' 5.0]' [6.0' 7.0]' [2.0' 3.0]]]] }".Replace("'"' "\""); " is 186.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))' " is 139.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0))); " is 140.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]]' [[[2.0' 3.0]' [4.0' 5.0]' [6.0' 7.0]' [2.0' 3.0]]]]' 'x' : 1 }".Replace("'"' "\""); " is 195.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))' " is 159.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0))); " is 161.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]]' [[[2.0' 3.0' 4.0]' [5.0' 6.0' 7.0]' [8.0' 9.0' 10.0]' [2.0' 3.0' 4.0]]]] }".Replace("'"' "\""); " is 227.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))' " is 167.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0))); " is 169.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]]' [[[2.0' 3.0' 4.0]' [5.0' 6.0' 7.0]' [8.0' 9.0' 10.0]' [2.0' 3.0' 4.0]]]] }".Replace("'"' "\""); " is 227.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))' " is 163.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0))); " is 165.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]]' [[[2.0' 3.0' 4.0]' [5.0' 6.0' 7.0]' [8.0' 9.0' 10.0]' [2.0' 3.0' 4.0]]]] }".Replace("'"' "\""); " is 227.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))' " is 159.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The length of the statement  "                GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0))); " is 161.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'MultiPolygon'' 'coordinates' : [[[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]]' [[[2.0' 3.0' 4.0]' [5.0' 6.0' 7.0]' [8.0' 9.0' 10.0]' [2.0' 3.0' 4.0]]]]' 'x' : 1 }".Replace("'"' "\""); " is 236.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithBoundingBox,The length of the statement  "                new GeoJsonObjectArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)) }' " is 138.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithLinkedCoordinateReferenceSystem,The length of the statement  "                new GeoJsonObjectArgs<GeoJson2DCoordinates> { CoordinateReferenceSystem = new GeoJsonLinkedCoordinateReferenceSystem("abc") }' " is 126.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithLinkedCoordinateReferenceSystem,The length of the statement  "            var expected = "{ 'type' : 'Point'' 'crs' : { 'type' : 'link'' 'properties' : { 'href' : 'abc' } }' 'coordinates' : [100.0' 0.0] }".Replace("'"' "\""); " is 151.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithLinkedCoordinateReferenceSystemWithType,The length of the statement  "                new GeoJsonObjectArgs<GeoJson2DCoordinates> { CoordinateReferenceSystem = new GeoJsonLinkedCoordinateReferenceSystem("abc"' "def") }' " is 133.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithLinkedCoordinateReferenceSystemWithType,The length of the statement  "            var expected = "{ 'type' : 'Point'' 'crs' : { 'type' : 'link'' 'properties' : { 'href' : 'abc'' 'type' : 'def' } }' 'coordinates' : [100.0' 0.0] }".Replace("'"' "\""); " is 167.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithNamedCoordinateReferenceSystem,The length of the statement  "                new GeoJsonObjectArgs<GeoJson2DCoordinates> { CoordinateReferenceSystem = new GeoJsonNamedCoordinateReferenceSystem("abc") }' " is 125.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithNamedCoordinateReferenceSystem,The length of the statement  "            var expected = "{ 'type' : 'Point'' 'crs' : { 'type' : 'name'' 'properties' : { 'name' : 'abc' } }' 'coordinates' : [100.0' 0.0] }".Replace("'"' "\""); " is 151.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The length of the statement  "                new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }' " is 148.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The length of the statement  "            var expected = "{ 'type' : 'Point'' 'bbox' : [1.0' 2.0' 3.0' 4.0' 5.0' 6.0]' 'coordinates' : [1.0' 2.0' 3.0] }".Replace("'"' "\""); " is 131.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecNoHoles,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[100.0' 0.0]' [101.0' 0.0]' [101.0' 1.0]' [100.0' 0.0]]] }".Replace("'"' "\""); " is 135.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [#exterior' #hole] }".Replace("#exterior"' exterior).Replace("#hole"' hole).Replace("'"' "\""); " is 149.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2D,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]] }".Replace("'"' "\""); " is 127.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DGeographic,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]] }".Replace("'"' "\""); " is 127.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DProjected,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]] }".Replace("'"' "\""); " is 127.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0]' [3.0' 4.0]' [5.0' 6.0]' [1.0' 2.0]]]' 'x' : 1 }".Replace("'"' "\""); " is 136.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]] }".Replace("'"' "\""); " is 147.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]] }".Replace("'"' "\""); " is 147.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]] }".Replace("'"' "\""); " is 147.
Long Statement,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The length of the statement  "            var expected = "{ 'type' : 'Polygon'' 'coordinates' : [[[1.0' 2.0' 3.0]' [4.0' 5.0' 6.0]' [7.0' 8.0' 9.0]' [1.0' 2.0' 3.0]]]' 'x' : 1 }".Replace("'"' "\""); " is 156.
Long Statement,MongoDB.Driver.Tests.Jira,CSharp2564Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp2564Tests.cs,Misbehaved_async_method_should_not_deadlock_server_selection,The length of the statement  "            // note: the code below deadlocks because await StartSessionAsync continues when UpdateClusterDescription in Cluster called TrySetResult after finding the secondary " is 164.
Long Statement,MongoDB.Driver.Tests.Jira,CSharp2564Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp2564Tests.cs,Misbehaved_async_method_should_not_deadlock_server_selection,The length of the statement  "            // which in turn prevents SDAM from unwinding back to process the next queued heartbeat event so the primary is never found " is 123.
Long Statement,MongoDB.Driver.Tests.Jira,CSharp2564Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp2564Tests.cs,Misbehaved_async_method_should_not_deadlock_server_selection,The length of the statement  "            var primary = CoreTestConfiguration.Cluster.Description.Servers.Where(s => s.Type == ServerType.ReplicaSetPrimary).Single(); " is 124.
Long Statement,MongoDB.Driver.Tests.Jira,CSharp2564Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp2564Tests.cs,Misbehaved_async_method_should_not_deadlock_server_selection,The length of the statement  "                    adminDatabase.RunCommand<BsonDocument>(session' "{ ping : 1 }"); // this async method is misbehaving by calling a blocking sync method " is 134.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenAggregateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenAggregateTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenAggregateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenAggregateTest.cs,SetArgument,The length of the statement  "                    _pipeline = new BsonDocumentStagePipelineDefinition<BsonDocument' BsonDocument>(value.AsBsonArray.Cast<BsonDocument>()); " is 120.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCollectionWatchTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCollectionWatchTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCommandTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCommandTest.cs,AssertException,The length of the statement  "                    var writeConcernException = commandException as MongoWriteConcernException; // MongoWriteConcernException is a subclass of MongoCommandException " is 144.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCommandTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCommandTest.cs,AssertException,The length of the statement  "                        actualErrorCodeName = writeConcernException.Result.GetValue("writeConcernError"' null)?.AsBsonDocument.GetValue("codeName"' null)?.AsString; " is 140.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCommandTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCommandTest.cs,AssertException,The length of the statement  "                foreach (var expectedLabel in _expectedException["errorLabelsContain"].AsBsonArray.OfType<BsonString>().Select(x => x.AsString)) " is 128.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCommandTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCommandTest.cs,AssertException,The length of the statement  "                foreach (var omittedLabel in _expectedException["errorLabelsOmit"].AsBsonArray.OfType<BsonString>().Select(x => x.AsString)) " is 124.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCountDocumentsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCountDocumentsTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCountTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCountTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDatabaseAggregateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDatabaseAggregateTest.cs,SetArgument,The length of the statement  "                    _pipeline = new BsonDocumentStagePipelineDefinition<NoPipelineInput' BsonDocument>(value.AsBsonArray.Cast<BsonDocument>()); " is 123.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDatabaseWatchTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDatabaseWatchTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "databaseOptions"' "arguments"' "result"' "error"); " is 120.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDistinctTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDistinctTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenEstimatedCountTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenEstimatedDocumentCount.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindOneAndDeleteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindOneAndDeleteTest.cs,CallMethodAsync,The length of the statement  "                _result = await _collection.FindOneAndDeleteAsync(_session' _filter' _options' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindOneAndReplaceTest.cs,CallMethodAsync,The length of the statement  "                _result = await _collection.FindOneAndReplaceAsync(_filter' _replacement' _options' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindOneAndReplaceTest.cs,CallMethodAsync,The length of the statement  "                _result = await _collection.FindOneAndReplaceAsync(_session' _filter' _replacement' _options' cancellationToken).ConfigureAwait(false); " is 135.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindOneAndUpdateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindOneAndUpdateTest.cs,CallMethodAsync,The length of the statement  "                _result = await _collection.FindOneAndUpdateAsync(_session' _filter' _udpate' _options' cancellationToken).ConfigureAwait(false); " is 129.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "results"' "error"); " is 133.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenGridFSDownloadByNameTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenGridFSDownloadByNameTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "databaseOptions"' "arguments"' "result"' "error"); " is 120.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenGridFSDownloadTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenGridFSDownloadTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "databaseOptions"' "arguments"' "result"' "error"); " is 120.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenInsertOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenInsertOneTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenListIndexesTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenListIndexesTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenMapReduceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenMapReduceTest.cs,Arrange,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(document' "name"' "object"' "collectionOptions"' "arguments"' "result"' "error"); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenReplaceOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenReplaceOneTest.cs,CallMethodAsync,The length of the statement  "                _result = await _collection.ReplaceOneAsync(_session' _filter' _replacement' _options' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenRunCommandTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenRunCommandTest.cs,Arrange,The length of the statement  "                    throw new FormatException($"Actual command name \"{actualCommandName}\" does not match expected command name \"{expectedCommandName}\"."); " is 138.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTestFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTestFactory.cs,CreateTest,The length of the statement  "                        case "assertDifferentLsidOnLastTwoCommands": return new JsonDrivenAssertDifferentLsidOnLastTwoCommandsTest(_testRunner' _eventCapturer' _objectMap); " is 148.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTestFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTestFactory.cs,CreateTest,The length of the statement  "                        case "assertSameLsidOnLastTwoCommands": return new JsonDrivenAssertSameLsidOnLastTwoCommandsTest(_testRunner' _eventCapturer' _objectMap); " is 138.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenUpdateManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenUpdateManyTest.cs,CallMethodAsync,The length of the statement  "                _result = await _collection.UpdateManyAsync(_session' _filter' _update' _options' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenUpdateOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenUpdateOneTest.cs,CallMethodAsync,The length of the statement  "                _result = await _collection.UpdateOneAsync(_session' _filter' _update' _options' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenWithTransactionTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenWithTransactionTest.cs,CallMethodAsync,The length of the statement  "            _result = await _session.WithTransactionAsync(_callbackAsync' _transactionOptions' cancellationToken).ConfigureAwait(false); " is 124.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenWithTransactionTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenWithTransactionTest.cs,ParseCallback,The length of the statement  "                    test.Act(cancellationToken); // uses the session from the JSON file which usually is the same as the one passed to the callback " is 127.
Long Statement,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenWithTransactionTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenWithTransactionTest.cs,ParseCallbackAsync,The length of the statement  "                    await test.ActAsync(cancellationToken).ConfigureAwait(false); // uses the session from the JSON file which usually is the same as the one passed to the callback " is 160.
Long Statement,MongoDB.Driver.Tests.Linq,MongoQueryableWithDotNotationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableWithDotNotationTests.cs,Where_with_ExtraInfo_Type_and_ExtraInfo_NotNullableType_should_render_correctly,The length of the statement  "            result.ToString().Should().Be("aggregate([{ \"$match\" : { \"ExtraInfo.Type\" : 1' \"ExtraInfo.NotNullableType\" : 1 } }])"); " is 125.
Long Statement,MongoDB.Driver.Tests.Linq,MongoQueryableWithDotNotationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableWithDotNotationTests.cs,Where_with_Contains_should_render_correctly,The length of the statement  "            result.ToString().Should().Be("aggregate([{ \"$match\" : { \"$or\" : [{ \"ExtraInfo.Type\" : { \"$in\" : [4' 5] } }' { \"ExtraInfo.NotNullableType\" : { \"$in\" : [4' 5] } }] } }])"); " is 183.
Long Statement,MongoDB.Driver.Tests.Linq,MongoQueryProviderImplReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryProviderImplTests.cs,_collection,The length of the statement  "            var fieldInfo = typeof(MongoQueryProviderImpl<TDocument>).GetField("_collection"' BindingFlags.NonPublic | BindingFlags.Instance); " is 130.
Long Statement,MongoDB.Driver.Tests.Linq,MongoQueryProviderImplReflector,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryProviderImplTests.cs,_options,The length of the statement  "            var fieldInfo = typeof(MongoQueryProviderImpl<TDocument>).GetField("_options"' BindingFlags.NonPublic | BindingFlags.Instance); " is 127.
Long Statement,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_with_predicated_any,The length of the statement  "                "{ $project: { __fld0: { $anyElementTrue: { $map: { input: '$G'' as: 'g'' 'in': { $eq: ['$$g.D'' \"Don't\"] } } } }' _id: 0 } }"); " is 130.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_count_with_a_predicate,The length of the statement  "            result.Projection.Should().Be("{ \"_id\" : \"$A\"' \"Result\" : { \"$sum\" : { \"$cond\" : [{ \"$ne\" : [\"$A\"' \"Awesome\"] }' 1' 0] } } }"); " is 143.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_where_with_a_predicate_and_count,The length of the statement  "            result.Projection.Should().Be("{ \"_id\" : \"$A\"' \"Result\" : { \"$sum\" : { \"$cond\" : [{ \"$ne\" : [\"$A\"' \"Awesome\"] }' 1' 0] } } }"); " is 143.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_where_select_and_count_with_predicates,The length of the statement  "            result.Projection.Should().Be("{ \"_id\" : \"$A\"' \"Result\" : { \"$sum\" : { \"$cond\" : [{ \"$ne\" : [\"$A\"' \"Awesome\"] }' 1' 0] } } }"); " is 143.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_complex_selector,The length of the statement  "            result.Projection.Should().Be("{ _id : \"$A\"' Count : { \"$sum\" : 1 }' Sum : { \"$sum\" : { \"$add\": [\"$C.E.F\"' \"$C.E.H\"] } }' First : { \"$first\" : \"$B\" }' Last : { \"$last\" : \"$K\" }' Min : { \"$min\" : { \"$add\" : [\"$C.E.F\"' \"$C.E.H\"] } }' Max : { \"$max\" : { \"$add\" : [\"$C.E.F\"' \"$C.E.H\"] } } }"); " is 325.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Group,The length of the statement  "            var projectionInfo = AggregateGroupTranslator.Translate<TKey' Root' TResult>(idProjector' groupProjector' serializer' BsonSerializer.SerializerRegistry' translationOptions); " is 173.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Group,The length of the statement  "            var list = __collection.Aggregate<TResult>(new BsonDocumentStagePipelineDefinition<Root' TResult>(new[] { group' sort }' projectionInfo.ProjectionSerializer)).ToList(); " is 168.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_allElementsTrue,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$allElementsTrue\" : { \"$map\": { input: \"$G\"' as: \"g\"' in: { \"$gt\": [\"$$g.E.F\"' 30 ] } } } }' _id: 0 }"); " is 160.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_with_predicate,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$anyElementTrue\" : { \"$map\": { input: \"$G\"' as: \"g\"' in: { \"$gt\": [\"$$g.E.F\"' 40 ] } } } }' _id: 0 }"); " is 159.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_using_Contains,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$anyElementTrue\": { $map: { input: \"$L\"' as: \"x\"' in: { $eq: [\"$$x\"' 5 ] } } } }' _id: 0 }"); " is 145.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_using_Contains_on_a_local_collection,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$anyElementTrue\": { $map: { input: [11' 33' 55]' as: \"x\"' in: { $eq: [\"$$x\"' \"$C.E.F\" ] } } } }' _id: 0 }"); " is 160.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_and,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$and\": [{ \"$eq\": [\"$A\"' \"yes\"] }' { \"$eq\": [\"$B\"' \"no\"] }] }' _id: 0 }"); " is 131.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_and_flattened,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$and\": [{ \"$eq\": [\"$A\"' \"yes\"] }' { \"$eq\": [\"$B\"' \"no\"] }' { \"$eq\" : [\"$C.D\"' \"maybe\"] } ] }' _id: 0 }"); " is 169.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_constant_ElementAt_followed_by_a_field,The length of the statement  "            result.Projection.Should().Be("{ Result: { $let: { vars: { item: { \"$arrayElemAt\": [\"$G\"' 1] } }' in: \"$$item.D\" } }' _id: 0 }"); " is 135.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_variable_ElementAt_followed_by_a_field,The length of the statement  "            result.Projection.Should().Be("{ Result: { $let: { vars: { item: { \"$arrayElemAt\": [\"$G\"' \"$T.one\"] } }' in: \"$$item.D\" } }' _id: 0 }"); " is 144.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_divide_3_numbers,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$divide\": [{ \"$divide\": [\"$_id\"' \"$C.E.F\"] }' \"$C.E.H\"] }' _id: 0 }"); " is 124.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_map_with_document,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$map\": { input: \"$G\"' as: \"g\"' in: { \"$concat\": [\"$$g.D\"' \"0\"] } } }' _id: 0 }"); " is 137.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_map_with_value,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$map\": { input: \"$C.E.I\"' as: \"i\"' in: { \"$concat\": [\"$$i\"' \"0\"] } } }' _id: 0 }"); " is 139.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$dateFromParts\": { \"year\": \"$_id\"' \"month\": 11' \"day\": 12 } }' _id: 0 }"); " is 128.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$dateFromParts\": { \"year\": \"$_id\"' \"month\": 11' \"day\": 12' \"hour\": 1' \"minute\": 2' \"second\": 3 } }' _id: 0 }"); " is 171.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$dateFromParts\": { \"year\": \"$_id\"' \"month\": 11' \"day\": 12' \"hour\": 1' \"minute\": 2' \"second\": 3' \"millisecond\": 4 } }' _id: 0 }"); " is 191.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_or,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$or\": [{ \"$eq\": [\"$A\"' \"yes\"] }' { \"$eq\": [\"$B\"' \"no\"] }] }' _id: 0 }"); " is 130.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_or_flattened,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$or\": [{ \"$eq\": [\"$A\"' \"yes\"] }' { \"$eq\": [\"$B\"' \"no\"] }' { \"$eq\" : [\"$C.D\"' \"maybe\"] } ] }' _id: 0 }"); " is 168.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The length of the statement  "            result.Projection.Should().Be("{ Result: { $reduce: { input: \"$M\"' initialValue: 0' in: { $add: [\"$$value\"' \"$$this\"] } } }' _id: 0 }"); " is 142.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The length of the statement  "            var arrayResult = Project(x => new { Result = x.M.Aggregate(new int[] { 0' 0 }' (a' b) => new int[] { a[0] + a[1]' b }) }); " is 123.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The length of the statement  "            arrayResult.Projection.Should().Be("{ Result: { $reduce: { input: \"$M\"' initialValue: [0'0]' in: [{ $add: [{$arrayElemAt: [\"$$value\"' 0]}' {$arrayElemAt: [\"$$value\"' 1]}]}'\"$$this\"]}}' _id: 0}"); " is 203.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The length of the statement  "            var arrayResultWithSelector = Project(x => new { Result = x.M.Aggregate(new int[] { 0' 0 }' (a' b) => new int[] { a[0] + a[1]' b }' r => new { x = r[0]' y = r[1] }) }); " is 168.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The length of the statement  "            arrayResultWithSelector.Projection.Should().Be("{ Result: { $let: { vars: { r: { $reduce: { input: \"$M\"' initialValue: [0'0]' in: [{ $add: [{$arrayElemAt: [\"$$value\"' 0]}' {$arrayElemAt: [\"$$value\"' 1]}]}'\"$$this\"]}}}' in: { x: { $arrayElemAt: [\"$$r\"' 0] }' y: { $arrayElemAt: [\"$$r\"' 1] } } } }' _id: 0}"); " is 319.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The length of the statement  "            var typeResult = Project(x => new { Result = x.M.Aggregate(new { x = 0' y = 0 }' (a' b) => new { x = a.x + a.y' y = b }) }); " is 124.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The length of the statement  "            typeResult.Projection.Should().Be("{ Result: { $reduce: { input: \"$M\"' initialValue: {x: 0' y: 0}' in: { x: { $add: [\"$$value.x\"' \"$$value.y\"]}' y: \"$$this\"}}}' _id: 0}"); " is 179.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_intersection,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$setIntersection\": [\"$C.E.I\"' [\"it\"' \"not in here\"] ] }' _id: 0 }"); " is 120.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_where_to_filter,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$filter\": { \"input\": \"$G\"' \"as\": \"c\"' \"cond\": { \"$eq\": [\"$$c.E.F\"' 33] } } }' _id: 0 }"); " is 149.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_where_then_select_to_filter_then_map,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$map\": { \"input\": { \"$filter\": { \"input\": \"$G\"' \"as\": \"c\"' \"cond\": { \"$eq\": [\"$$c.E.F\"' 33] } } }' \"as\": \"c\"' \"in\": \"$$c.D\" } }' _id: 0 }"); " is 212.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_select_then_where_to_map_then_filter,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$filter\": { \"input\": \"$G.D\"' \"as\": \"c\"' \"cond\": { \"$eq\": [\"$$c\"' \"Don't\"] } } }' _id: 0 }"); " is 154.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_select_with_an_anonymous_type_then_where_to_map_then_filter,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$filter\": { \"input\": { \"$map\" : { \"input\": \"$G\"' \"as\": \"c\"' \"in\": { \"D\": \"$$c.D\"' \"F\": \"$$c.E.F\" } } }' \"as\": \"c\"' \"cond\": { \"$eq\": [\"$$c.F\"' 33] } } }' _id: 0 }"); " is 242.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_subtract_3_numbers,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$subtract\": [{ \"$subtract\": [\"$_id\"' \"$C.E.F\"] }' \"$C.E.H\"] }' _id: 0 }"); " is 128.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_operation,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$map\": { input: { \"$zip\": { inputs: [\"$M\"' \"$O\"] } }' as: \"a_b\"' in: { $add: [{ $arrayElemAt: [\"$$a_b\"' 0] }' { $arrayElemAt: [\"$$a_b\"' 1] }] } } }' _id: 0 }"); " is 218.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_anonymous_type,The length of the statement  "            result.Projection.Should().Be("{ Result: { \"$map\": { input: { \"$zip\": { inputs: [\"$M\"' \"$O\"] } }' as: \"a_b\"' in: { a: { $arrayElemAt: [\"$$a_b\"' 0] }' b: { $arrayElemAt: [\"$$a_b\"' 1] } } } }' _id: 0 }"); " is 216.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_array_projection_complex,The length of the statement  "            result.Projection.Should().Be("{ Result : { $map: { input: \"$G\"' as: \"y\"' in: { F : \"$$y.E.F\"' H : \"$$y.E.H\" } } }' _id : 0 }"); " is 136.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Project,The length of the statement  "            var projectionInfo = AggregateProjectTranslator.Translate(projector' serializer' BsonSerializer.SerializerRegistry' translationOptions); " is 136.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Project,The length of the statement  "                .Project(new BsonDocumentProjectionDefinition<Root' TResult>(projectionInfo.Document' projectionInfo.ProjectionSerializer)) " is 123.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_using_SelectMany,The length of the statement  "            var result = Project(p => p.G.SelectMany(x => x.E.I)' "{ G: [{ E: { I: [\"a\"' \"b\"] } }' { E: { I: [\"c\"' \"d\"] } }] }"); " is 125.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_when_array_identity_is_present,The length of the statement  "            var result = Project(p => new { p.G' Sums = p.G.Select(x => x.E.F + x.E.H) }' "{ G: [{ D: \"Uno\"' E: { F: 2' H: 3 } }' { D: \"Dos\"' E: { F: 6' H: 7 } }] }"); " is 159.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_parent_field_in_a_child_selector,The length of the statement  "            var result = Project(p => p.G.Select(x => new { A = p.A' D = x.D })' "{ A: \"Yay\"' G: [{ D: \"Uno\" }' { D: \"Dos\" }] }"); " is 124.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Project,The length of the statement  "            var projectionInfo = FindProjectionTranslator.Translate<Root' T>(projector' serializer' BsonSerializer.SerializerRegistry); " is 123.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The length of the statement  "                new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }' " is 269.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The length of the statement  "                new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }' " is 205.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The length of the statement  "                new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }' " is 237.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The length of the statement  "                new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }' " is 202.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The length of the statement  "                new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } } " is 219.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDAAnyWithPredicate,The length of the statement  "            Assert<C>(c => c.DA.Any(d => d.Z >= 222 && d.Z <= 444)' 2' "{ \"da\" : { \"$elemMatch\" : { \"z\" : { \"$gte\" : 222' \"$lte\" : 444 } } } }"); " is 143.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIndexOfAnyBCStartIndex1Count2Equals1,The length of the statement  "            Assert<C>(c => c.S.IndexOfAny(new char[] { 'b'' '-'' 'c' }' 1' 2) == 1' 1' "{ \"s\" : /^.{1}(?=.{2})[^b\\-c]{0}[b\\-c]/s }"); " is 125.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereTripleAnd,The length of the statement  "            Assert<C>(c => c.X >= 0 && c.X >= 1 && c.Y == 11' 2' "{ \"$and\" : [{ \"x\" : { \"$gte\" : 0 } }' { \"x\" : { \"$gte\" : 1 } }' { \"y\" : 11 }] }"); " is 148.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereTripleOr,The length of the statement  "            Assert<C>(c => c.X == 1 || c.Y == 33 || c.S == "x is 1"' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }' { \"s\" : \"x is 1\" }] }"); " is 133.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0,The length of the statement  "            Assert<C>(c => (c.X % 1 == 0) && (c.X % 2 == 0)' 2' "{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }"); " is 189.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0Not,The length of the statement  "            Assert<C>(c => !((c.X % 1 == 0) && (c.X % 2 == 0))' 3' "{ \"$nor\" : [{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }] }"); " is 209.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0NotNot,The length of the statement  "            Assert<C>(c => !!((c.X % 1 == 0) && (c.X % 2 == 0))' 2' "{ \"$or\" : [{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }] }"); " is 209.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_documents_itself_and_ClassEquals,The length of the statement  "                "{ \"G\" : { \"$elemMatch\" : { \"Ids\" : null' \"D\" : \"Dolphin\"' \"E\" : { \"F\" : 55' \"H\" : 66' \"S\": null' \"I\" : [\"insecure\"]' \"C\" : null }' \"S\" : null' \"X\" : null' \"Y\" : null' \"Z\" : null } } }"); " is 219.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The length of the statement  "                "{ G : { $elemMatch : { \"D\" : \"Don't\"' \"S\" : { $elemMatch : { \"E\" : null' \"Z\" : { $elemMatch : { \"H\" : 0 } } } } } } }"); " is 133.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The length of the statement  "                "{ G : { $elemMatch : { \"D\" : \"Don't\"' \"Y.S\" : { $elemMatch : { \"E\" : null' \"Z\" : { $elemMatch : { \"H\" : 0 } } } } } } }"); " is 135.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The length of the statement  "                "{ G:  { $elemMatch : { \"D\" : \"Don't\"' \"Y.S\" : { $elemMatch : { \"E\" : null' \"Z.C.X\" : { $elemMatch : { \"F\" : 4 } } } } } } }"); " is 139.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The length of the statement  "                "{ G : { $elemMatch : { \"D\" : \"Don't\"' \"Y.S\" : { $elemMatch : { \"E\" : null' \"Z.C.X\" : { $elemMatch : { \"F\" : 4' \"H\" : 0 } } } } } } }"); " is 150.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The length of the statement  "                i => i.G.Any(g => g.D == "Don't" && g.Y.S.Any(s => s.E == null && s.Z.Any(z => z.F == 1 && z.C.X.Any(x => x.F == 4 && x.H == 0))))' " is 131.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The length of the statement  "                "{ G : { $elemMatch : { \"D\" : \"Don't\"' \"Y.S\" : { $elemMatch : { \"E\" : null' \"Z\" : { $elemMatch : { \"F\" : 1' \"C.X\" : { $elemMatch : { \"F\" : 4' \"H\" : 0 } } } } } } } } }"); " is 188.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The length of the statement  "                    ""Y.S"" : { $elemMatch : { ""E"" : null' ""Z"" : { $elemMatch : { ""F"" : 1' ""C.X"" : { $elemMatch : { ""F"" : 4' ""H"" : 0 } } } } } }' " is 137.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys_and_contains,The length of the statement  "                "{ G : { '$ne' : null' '$elemMatch' : { 'X' : { '$ne' : null' '$elemMatch' : { 'C.Ids' : ObjectId('222222222222222222222222') } } } } }"); " is 138.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_a_child_expression_is_called_from_nested_locals,The length of the statement  "            expr = (a) => a.Collection1.Any(b => b.Collection2 != null && b.Collection1.Any(c => local.Any(d => c.Collection2.Contains(d)))); " is 129.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_a_child_expression_is_called_from_nested_locals,The length of the statement  "            AssertWhere(expr' "{ $match : { 'Collection1' : { '$elemMatch' : { 'Collection2' : { '$ne' : null' '$in' : [1' 2] } } } } }"); " is 126.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_grandparents,The length of the statement  "            exception.Message.Should().Be(string.Format(NotSupportErrorMessageTemplate' "{document}{Collection1}.Where(Any({document}{Collection1}.Where(({document}{Value1} == 2))))"' "a")); " is 178.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The length of the statement  "            exception.Message.Should().Be(string.Format(NotSupportErrorMessageTemplate' "{document}{Collection1}.Where(({document}{Value1} == 2))"' "a")); " is 142.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The length of the statement  "            exception.Message.Should().Be(string.Format(NotSupportErrorMessageTemplate' "{document}{Collection1}.Where((({document}{Value1} == 2) AndAlso ({document}{Value1} == 3)))"' "a")); " is 178.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The length of the statement  "            exception.Message.Should().Be(string.Format(NotSupportErrorMessageTemplate' "{document}{Collection3}.Where({document}{Value2})"' "a")); " is 135.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The length of the statement  "            exception.Message.Should().Be(string.Format(NotSupportErrorMessageTemplate' "{document}{Collection1}.Where(({document}{Value1} == 2))"' "a")); " is 142.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_there_is_the_parent_parameter_in_the_child_expression_and_there_are_several_conditions,The length of the statement  "            exception.Message.Should().Be(string.Format(NotSupportErrorMessageTemplate' "{document}{Collection1}.Where(({document}{Value1} != 4))"' "a")); " is 142.
Long Statement,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_there_is_the_parent_parameter_in_the_child_expression_and_there_are_several_conditions,The length of the statement  "            exception.Message.Should().Be(string.Format(NotSupportErrorMessageTemplate' "{document}{Collection1}.Where((({document}{Value1} != 3) AndAlso Any({document}{Collection1}.Where(({document}{Value1} != 5)))))"' "a")); " is 214.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The length of the statement  "                new ReplaceOneModel<BsonDocument>(new BsonDocument("f"' 1)' new BsonDocument("g"' 1)) { Collation = collation' IsUpsert = true }' " is 129.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The length of the statement  "                new UpdateManyModel<BsonDocument>(new BsonDocument("h"' 1)' new BsonDocument("$set"' new BsonDocument("i"' 1))) { Collation = collation }' " is 138.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The length of the statement  "                new UpdateManyModel<BsonDocument>(new BsonDocument("j"' 1)' new BsonDocument("$set"' new BsonDocument("k"' 1))) { Collation = collation' IsUpsert = true }' " is 155.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The length of the statement  "                new UpdateOneModel<BsonDocument>(new BsonDocument("l"' 1)' new BsonDocument("$set"' new BsonDocument("m"' 1))) { Collation = collation }' " is 137.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The length of the statement  "                new UpdateOneModel<BsonDocument>(new BsonDocument("n"' 1)' new BsonDocument("$set"' new BsonDocument("o"' 1))) { Collation = collation' IsUpsert = true }' " is 154.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The length of the statement  "            var operationResult = new BulkWriteOperationResult.Unacknowledged(9' new[] { new InsertRequest(new BsonDocument("b"' 1)) }); " is 124.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_throw_if_model_is_invalid,The length of the statement  "            var pipeline = new BsonDocumentStagePipelineDefinition<BsonDocument' BsonDocument>(new[] { new BsonDocument("$project"' "{ value : 1 }") }); " is 140.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,DeleteMany_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.DeleteManyAsync(session' filter' options' cancellationToken).GetAwaiter().GetResult()); " is 130.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,DeleteMany_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.DeleteManyAsync(filter' options' cancellationToken).GetAwaiter().GetResult()); " is 121.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,DeleteOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.DeleteOneAsync(session' filter' options' cancellationToken).GetAwaiter().GetResult()); " is 129.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,DeleteOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.DeleteOneAsync(filter' options' cancellationToken).GetAwaiter().GetResult()); " is 120.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Distinct_should_execute_a_DistinctOperation_when_type_parameter_is_array_field_item_type,The length of the statement  "            ((IBsonDocumentSerializer)documentSerializer).TryGetMemberSerializationInfo(fieldName' out fieldSerializationInfo).Should().BeTrue(); " is 133.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndReplace_should_execute_a_FindOneAndReplaceOperation,The length of the statement  "                    subject.FindOneAndReplaceAsync(session' filterDefinition' replacement' options' cancellationToken).GetAwaiter().GetResult(); " is 124.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndReplace_with_Projection_As_should_execute_correctly,The length of the statement  "                    subject.FindOneAndReplaceAsync(session' filterDefinition' replacement' options' cancellationToken).GetAwaiter().GetResult(); " is 124.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndUpdate_should_execute_a_FindOneAndUpdateOperation,The length of the statement  "                    subject.FindOneAndUpdateAsync(session' filterDefinition' updateDefinition' options' cancellationToken).GetAwaiter().GetResult(); " is 128.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndUpdate_should_throw_if_parameters_are_invalid,The length of the statement  "            var pipeline = new BsonDocumentStagePipelineDefinition<BsonDocument' BsonDocument>(new[] { new BsonDocument("$project"' "{ value : 1 }") }); " is 140.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndUpdate_should_throw_if_parameters_are_invalid,The length of the statement  "                exception = Record.ExceptionAsync(async () => { await subject.FindOneAndUpdateAsync(filterDefinition' update' options' cancellationToken); }) " is 141.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndUpdate_should_throw_if_parameters_are_invalid,The length of the statement  "                exception = Record.Exception(() => { subject.FindOneAndUpdate(filterDefinition' update' options' cancellationToken); }); " is 120.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndUpdate_with_Projection_As_should_execute_correctly,The length of the statement  "                    subject.FindOneAndUpdateAsync(session' filterDefinition' updateDefinition' options' cancellationToken).GetAwaiter().GetResult(); " is 128.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The length of the statement  "                var wildcardProjection = wildcardProjectionDefinition.Render(BsonDocumentSerializer.Instance' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The length of the statement  "            var createManyIndexesOptions = usingCreateManyIndexesOptions ? new CreateManyIndexesOptions { MaxTime = maxTime } : null; " is 121.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The length of the statement  "                    subject.Indexes.CreateManyAsync(session' new[] { model1' model2 }' createManyIndexesOptions' cancellationToken).GetAwaiter().GetResult(); " is 137.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The length of the statement  "                    subject.Indexes.CreateManyAsync(new[] { model1' model2 }' createManyIndexesOptions' cancellationToken).GetAwaiter().GetResult(); " is 128.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The length of the statement  "                var wildcardProjection = wildcardProjectionDefinition.Render(BsonDocumentSerializer.Instance' BsonSerializer.SerializerRegistry); " is 129.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,InsertOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.InsertOneAsync(session' document' options' cancellationToken).GetAwaiter().GetResult()); " is 131.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,InsertOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.InsertOneAsync(document' options' cancellationToken).GetAwaiter().GetResult()); " is 122.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_execute_a_BulkMixedOperation,The length of the statement  "                        subject.ReplaceOneAsync(session' filterDefinition' replacement' cancellationToken: cancellationToken).GetAwaiter().GetResult(); " is 127.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOneAsync(session' filterDefinition' replacement' cancellationToken: cancellationToken).GetAwaiter().GetResult()); " is 163.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOne(session' filterDefinition' replacement' cancellationToken: cancellationToken)); " is 133.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOneAsync(filterDefinition' replacement' cancellationToken: cancellationToken).GetAwaiter().GetResult()); " is 154.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOne(filterDefinition' replacement' cancellationToken: cancellationToken)); " is 124.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOneAsync(session' filterDefinition' replacement' options' cancellationToken).GetAwaiter().GetResult()); " is 153.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOne(session' filterDefinition' replacement' options' cancellationToken)); " is 123.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOneAsync(filterDefinition' replacement' options' cancellationToken).GetAwaiter().GetResult()); " is 144.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOneAsync(session' filterDefinition' replacement' options' cancellationToken).GetAwaiter().GetResult()); " is 153.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOne(session' filterDefinition' replacement' options' cancellationToken)); " is 123.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                        exception = Record.Exception(() => subject.ReplaceOneAsync(filterDefinition' replacement' options' cancellationToken).GetAwaiter().GetResult()); " is 144.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateMany_should_execute_a_BulkMixedOperation,The length of the statement  "                    subject.UpdateManyAsync(session' filterDefinition' updateDefinition' options' cancellationToken).GetAwaiter().GetResult(); " is 122.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateMany_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.UpdateManyAsync(session' filterDefinition' updateDefinition' updateOptions' cancellationToken).GetAwaiter().GetResult()); " is 164.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateMany_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.UpdateMany(session' filterDefinition' updateDefinition' updateOptions' cancellationToken)); " is 134.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateMany_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.UpdateManyAsync(filterDefinition' updateDefinition' updateOptions' cancellationToken).GetAwaiter().GetResult()); " is 155.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateMany_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.UpdateMany(filterDefinition' updateDefinition' updateOptions' cancellationToken)); " is 125.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateOne_should_execute_a_BulkMixedOperation,The length of the statement  "                    subject.UpdateOneAsync(session' filterDefinition' updateDefinition' options' cancellationToken).GetAwaiter().GetResult(); " is 121.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.UpdateOneAsync(session' filterDefinition' updateDefinition' options' cancellationToken).GetAwaiter().GetResult()); " is 157.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.UpdateOne(session' filterDefinition' updateDefinition' options' cancellationToken)); " is 127.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateOne_should_throw_a_WriteException_when_an_error_occurs,The length of the statement  "                    exception = Record.Exception(() => subject.UpdateOneAsync(filterDefinition' updateDefinition' options' cancellationToken).GetAwaiter().GetResult()); " is 148.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Watch_should_execute_a_ChangeStreamOperation,The length of the statement  "            var pipeline = (PipelineDefinition<ChangeStreamDocument<BsonDocument>' ChangeStreamDocument<BsonDocument>>)(new[] { stageDocument }); " is 133.
Long Statement,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Watch_should_execute_a_ChangeStreamOperation_with_default_options_when_options_is_null,The length of the statement  "            var pipeline = (PipelineDefinition<ChangeStreamDocument<BsonDocument>' ChangeStreamDocument<BsonDocument>>)(new[] { stageDocument }); " is 133.
Long Statement,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,CreateView_should_execute_a_CreateViewOperation,The length of the statement  "                    subject.CreateViewAsync(session' viewName' viewOn' pipelineDefinition' options' cancellationToken).GetAwaiter().GetResult(); " is 124.
Long Statement,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Watch_should_invoke_the_correct_operation,The length of the statement  "            var changeStreamOperation = call.Operation.Should().BeOfType<ChangeStreamOperation<ChangeStreamDocument<BsonDocument>>>().Subject; " is 130.
Long Statement,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Average_city_population_by_state,The length of the statement  "                .Group(x => new { State = x.State' City = x.City }' g => new { StateAndCity = g.Key' Population = g.Sum(x => x.Population) }) " is 125.
Long Statement,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Average_city_population_by_state,The length of the statement  "                "{ \"$group\" : { \"_id\" : { \"State\" : \"$state\"' \"City\" : \"$city\" }' \"Population\" : { \"$sum\" : \"$pop\" } } }' " + " is 127.
Long Statement,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The length of the statement  "                .Group(x => new { State = x.State' City = x.City }' g => new { StateAndCity = g.Key' Population = g.Sum(x => x.Population) }) " is 125.
Long Statement,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The length of the statement  "                "{ \"$group\" : { \"_id\" : { \"State\" : \"$state\"' \"City\" : \"$city\" }' \"Population\" : { \"$sum\" : \"$pop\" } } }' " + " is 127.
Long Statement,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The length of the statement  "                "{ \"$group\" : { \"_id\" : \"$_id.State\"' \"BiggestCity\" : { \"$last\" : \"$_id.City\" }' \"BiggestPopulation\" : { \"$last\" : \"$Population\" }' \"SmallestCity\" : { \"$first\" : \"$_id.City\" }' \"SmallestPopulation\" : { \"$first\" : \"$Population\" } } }' " + " is 267.
Long Statement,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The length of the statement  "                "{ \"$project\" : { \"State\" : \"$_id\"' \"BiggestCity\" : { \"Name\" : \"$BiggestCity\"' \"Population\" : \"$BiggestPopulation\" }' \"SmallestCity\" : { \"Name\" : \"$SmallestCity\"' \"Population\" : \"$SmallestPopulation\" }' \"_id\" : 0 } }' " + " is 249.
Long Statement,MongoDB.Driver.Tests.Specifications.auth,AuthTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\auth\AuthTestRunner.cs,AssertValid,The length of the statement  "                JsonDrivenHelper.EnsureAllFieldsAreValid(expectedCredential' "username"' "password"' "source"' "mechanism"' "mechanism_properties"); " is 132.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,Run,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(shared' "_path"' "database_name"' "database2_name"' "collection_name"' "collection2_name"' "tests"); " is 141.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,Run,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(test' "description"' "minServerVersion"' "topology"' "target"' "changeStreamPipeline"' "changeStreamOptions"' "operations"' "expectations"' "result"' "async"' "failPoint"); " is 213.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,Watch,The length of the statement  "            var pipeline = new BsonDocumentStagePipelineDefinition<ChangeStreamDocument<BsonDocument>' ChangeStreamDocument<BsonDocument>>(stages); " is 135.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,ExecuteOperation,The length of the statement  "            test.Execute(DriverTestConfiguration.Client.Cluster.Description' database' collection' arguments' outcome: null' isErrorExpected: false' async: false); " is 151.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertEvent,The length of the statement  "                throw new FormatException("Expected event must be a document with a single element with a name the specifies the type of the event."); " is 134.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertChangeStreamDocument,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(expectedDocument' "_id"' "documentKey"' "operationType"' "ns"' "fullDocument"' "updateDescription"' "to"); " is 147.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertChangeStreamDocument,The length of the statement  "                var expectedOperationType = (ChangeStreamOperationType)Enum.Parse(typeof(ChangeStreamOperationType)' expectedDocument["operationType"].AsString' ignoreCase: true); " is 163.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertChangeStreamDocument,The length of the statement  "                var expectedCollectionNamespace = new CollectionNamespace(new DatabaseNamespace(expectedDatabaseName)' expectedCollectionName); " is 127.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertChangeStreamDocument,The length of the statement  "                var expectedRenameToCollectionNamespace = new CollectionNamespace(new DatabaseNamespace(expectedRenameToDatabaseName)' expectedRenameToCollectionName); " is 151.
Long Statement,MongoDB.Driver.Tests.Specifications.change_streams,ChangeStreamTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\change-streams\ChangeStreamTestRunner.cs,AssertError,The length of the statement  "                throw new Exception($"Expected a MongoCommandException to be thrown but instead a ${actualException.GetType().Name} was."); " is 123.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption,ClientSideEncryptionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,ConfigureAutoEncryptionOptions,The length of the statement  "            var kmsProviders = new ReadOnlyDictionary<string' IReadOnlyDictionary<string' object>>(new Dictionary<string' IReadOnlyDictionary<string' object>>()); " is 150.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption,ClientSideEncryptionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,ConfigureAutoEncryptionOptions,The length of the statement  "                        autoEncryptionOptions = autoEncryptionOptions.With(keyVaultNamespace: CollectionNamespace.FromFullName(option.Value.AsString)); " is 127.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption,ClientSideEncryptionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,ParseKmsProviders,The length of the statement  "                            var awsAccessKey = Environment.GetEnvironmentVariable("FLE_AWS_ACCESS_KEY_ID") ?? throw new Exception("The FLE_AWS_ACCESS_KEY_ID system variable should be configured on the machine."); " is 184.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption,ClientSideEncryptionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,ParseKmsProviders,The length of the statement  "                            var awsSecretAccessKey = Environment.GetEnvironmentVariable("FLE_AWS_SECRET_ACCESS_KEY") ?? throw new Exception("The FLE_AWS_SECRET_ACCESS_KEY system variable should be configured on the machine."); " is 198.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption,TestCaseFactory,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\ClientSideEncryptionTestRunner.cs,CreateTestCases,The length of the statement  "            var testCases = base.CreateTestCases(document).Where(test => !__ignoredTestNames.Any(ignoredName => test.Name.EndsWith(ignoredName))); " is 134.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,ExternalKeyVaultTest,The length of the statement  "            var clientEncryptedSchema = new BsonDocument("db.coll"' JsonFileReader.Instance.Documents["external.external-schema.json"]); " is 124.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,CreateMongoClient,The length of the statement  "                    kmsProviders = new ReadOnlyDictionary<string' IReadOnlyDictionary<string' object>>(new Dictionary<string' IReadOnlyDictionary<string' object>>()); " is 146.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,GetKmsProviders,The length of the statement  "            var awsAccessKey = Environment.GetEnvironmentVariable("FLE_AWS_ACCESS_KEY_ID") ?? throw new Exception("The AWS_ACCESS_KEY_ID system variable should be configured on the machine."); " is 180.
Long Statement,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,GetKmsProviders,The length of the statement  "            var awsSecretAccessKey = Environment.GetEnvironmentVariable("FLE_AWS_SECRET_ACCESS_KEY") ?? throw new Exception("The AWS_SECRET_ACCESS_KEY system variable should be configured on the machine."); " is 194.
Long Statement,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The length of the statement  "            definition = (BsonDocument)DeepCopy(definition); // protect against side effects when the same definition is run twice (async=false/true) " is 137.
Long Statement,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The length of the statement  "                    throw new SkipException($"Test ignored because server version {serverVersion} is greater than max server version {maxServerVersion}."); " is 135.
Long Statement,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The length of the statement  "                    throw new SkipException($"Test ignored because server version {serverVersion} is less than min server version {minServerVersion}."); " is 132.
Long Statement,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The length of the statement  "            // TODO: re-enable these tests once a decision has been made about how to deal with unexpected fields in the server response (see: CSHARP-2444) " is 143.
Long Statement,MongoDB.Driver.Tests.Specifications.crud,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\BulkWriteTest.cs,ConvertExpectedResult,The length of the statement  "            return new BulkWriteResult<BsonDocument>.Acknowledged(requestCount' matchedCount' deletedCount' insertedCount' modifiedCount' _requests' upserts); " is 146.
Long Statement,MongoDB.Driver.Tests.Specifications.crud,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\BulkWriteTest.cs,ParseUpdateManyModel,The length of the statement  "            return new UpdateManyModel<BsonDocument>(filter' update) { ArrayFilters = arrayFilters' Collation = collation' IsUpsert = isUpsert }; " is 133.
Long Statement,MongoDB.Driver.Tests.Specifications.crud,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\BulkWriteTest.cs,ParseUpdateOneModel,The length of the statement  "            return new UpdateOneModel<BsonDocument>(filter' update) { ArrayFilters = arrayFilters' Collation = collation' IsUpsert = isUpsert }; " is 132.
Long Statement,MongoDB.Driver.Tests.Specifications.crud,CrudTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CrudTestRunner.cs,RunTestDefinition,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(definition' "_path"' "database_name"' "collection_name"' "runOn"' "minServerVersion"' "maxServerVersion"' "data"' "tests"); " is 164.
Long Statement,MongoDB.Driver.Tests.Specifications.crud,CrudTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CrudTestRunner.cs,RunTestDefinition,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(test' "description"' "skipReason"' "operation"' "operations"' "expectations"' "outcome"' "async"); " is 139.
Long Statement,MongoDB.Driver.Tests.Specifications.crud,CrudTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CrudTestRunner.cs,AssertEvent,The length of the statement  "                throw new FormatException("Expected event must be a document with a single element with a name the specifies the type of the event."); " is 134.
Long Statement,MongoDB.Driver.Tests.Specifications.crud,CrudTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CrudTestRunner.cs,ExecuteOperation,The length of the statement  "            JsonDrivenHelper.EnsureAllFieldsAreValid(operation' "name"' "object"' "collectionOptions"' "arguments"' "error"' "result"); " is 123.
Long Statement,MongoDB.Driver.Tests.Specifications.retryable_reads,RetryableReadsTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-reads\RetryableReadsTestRunner.cs,AssertEvent,The length of the statement  "                throw new FormatException("Expected event must be a document with a single element with a name the specifies the type of the event."); " is 134.
Long Statement,MongoDB.Driver.Tests.Specifications.retryable_writes,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-writes\BulkWriteTest.cs,ParseResult,The length of the statement  "            VerifyFields(result' "deletedCount"' "insertedCount"' "insertedIds"' "matchedCount"' "modifiedCount"' "upsertedCount"' "upsertedIds"); " is 134.
Long Statement,MongoDB.Driver.Tests.Specifications.retryable_writes,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-writes\BulkWriteTest.cs,ParseResult,The length of the statement  "            return new BulkWriteResult<BsonDocument>.Acknowledged(requestCount' matchedCount' deletedCount' insertedCount' modifiedCount' processedRequests' upserts); " is 154.
Long Statement,MongoDB.Driver.Tests.Specifications.Runner,MongoClientJsonDrivenTestRunnerBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\Runner\MongoClientJsonDrivenTestRunnerBase.cs,AssertEvent,The length of the statement  "                throw new FormatException("Expected event must be a document with a single element with a name the specifies the type of the event."); " is 134.
Long Statement,MongoDB.Driver.Tests.Specifications.Runner,MongoClientJsonDrivenTestRunnerBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\Runner\MongoClientJsonDrivenTestRunnerBase.cs,ExecuteOperations,The length of the statement  "            var factory = new JsonDrivenTestFactory(client' DatabaseName' CollectionName' bucketName: null' objectMap' eventCapturer); " is 122.
Long Statement,MongoDB.Driver.Tests.Specifications.Runner,MongoClientJsonDrivenTestRunnerBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\Runner\MongoClientJsonDrivenTestRunnerBase.cs,SetupAndRunTest,The length of the statement  "                    eventCapturer = new EventCapturer().Capture<CommandStartedEvent>(e => !DefaultCommandsToNotCapture.Contains(e.CommandName)); " is 124.
Long Statement,MongoDB.Driver.Tests.Specifications.transactions,TransactionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\transactions\TransactionTestRunner.cs,AssertEvent,The length of the statement  "                throw new FormatException("Expected event must be a document with a single element with a name the specifies the type of the event."); " is 134.
Complex Conditional,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,CreateMongoClient,The conditional expression  "keyVaultNamespace != null || schemaMapDocument != null || kmsProviders != null || withExternalKeyVault"  is complex.
Empty Catch Block,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Tests.Specifications.Runner,MongoClientJsonDrivenSessionsTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\Runner\MongoClientJsonDrivenSessionsTestRunner.cs,KillAllSessions,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Tests.Specifications.transactions,TransactionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\transactions\TransactionTestRunner.cs,KillAllSessions,The method has an empty catch block.
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_add_expected_stage,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<BsonValue>(BsonNull.Value' 1902' 1)'                  new AggregateBucketAutoResult<BsonValue>(1902' 1925' 1)'                  new AggregateBucketAutoResult<BsonValue>(1925' 1926' 1)'                  new AggregateBucketAutoResult<BsonValue>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<BsonValue>(BsonNull.Value' 1902' 1)'                  new AggregateBucketAutoResult<BsonValue>(1902' 1925' 1)'                  new AggregateBucketAutoResult<BsonValue>(1925' 1926' 1)'                  new AggregateBucketAutoResult<BsonValue>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<BsonValue>(BsonNull.Value' 1902' 1)'                  new AggregateBucketAutoResult<BsonValue>(1902' 1925' 1)'                  new AggregateBucketAutoResult<BsonValue>(1925' 1926' 1)'                  new AggregateBucketAutoResult<BsonValue>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<BsonValue>(BsonNull.Value' 1902' 1)'                  new AggregateBucketAutoResult<BsonValue>(1902' 1925' 1)'                  new AggregateBucketAutoResult<BsonValue>(1925' 1926' 1)'                  new AggregateBucketAutoResult<BsonValue>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<BsonValue>(BsonNull.Value' 1902' 1)'                  new AggregateBucketAutoResult<BsonValue>(1902' 1925' 1)'                  new AggregateBucketAutoResult<BsonValue>(1925' 1926' 1)'                  new AggregateBucketAutoResult<BsonValue>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<BsonValue>(BsonNull.Value' 1902' 1)'                  new AggregateBucketAutoResult<BsonValue>(1902' 1925' 1)'                  new AggregateBucketAutoResult<BsonValue>(1925' 1926' 1)'                  new AggregateBucketAutoResult<BsonValue>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<BsonValue>(BsonNull.Value' 1902' 1)'                  new AggregateBucketAutoResult<BsonValue>(1902' 1925' 1)'                  new AggregateBucketAutoResult<BsonValue>(1925' 1926' 1)'                  new AggregateBucketAutoResult<BsonValue>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_add_expected_stage,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<double>(0.5' 2.0' 1)'                  new AggregateBucketAutoResult<double>(2.0' 4.0' 2)'                  new AggregateBucketAutoResult<double>(4.0' 8.0' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<double>(0.5' 2.0' 1)'                  new AggregateBucketAutoResult<double>(2.0' 4.0' 2)'                  new AggregateBucketAutoResult<double>(4.0' 8.0' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<double>(0.5' 2.0' 1)'                  new AggregateBucketAutoResult<double>(2.0' 4.0' 2)'                  new AggregateBucketAutoResult<double>(4.0' 8.0' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<double>(0.5' 2.0' 1)'                  new AggregateBucketAutoResult<double>(2.0' 4.0' 2)'                  new AggregateBucketAutoResult<double>(4.0' 8.0' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<double>(0.5' 2.0' 1)'                  new AggregateBucketAutoResult<double>(2.0' 4.0' 2)'                  new AggregateBucketAutoResult<double>(4.0' 8.0' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<double>(0.5' 2.0' 1)'                  new AggregateBucketAutoResult<double>(2.0' 4.0' 2)'                  new AggregateBucketAutoResult<double>(4.0' 8.0' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_granularity_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<double>(0.5' 2.0' 1)'                  new AggregateBucketAutoResult<double>(2.0' 4.0' 2)'                  new AggregateBucketAutoResult<double>(4.0' 8.0' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_output_should_add_expected_stage,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_with_output_should_return_expected_result,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_add_expected_stage,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<int?>(null' 1902' 1)'                  new AggregateBucketAutoResult<int?>(1902' 1925' 1)'                  new AggregateBucketAutoResult<int?>(1925' 1926' 1)'                  new AggregateBucketAutoResult<int?>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<int?>(null' 1902' 1)'                  new AggregateBucketAutoResult<int?>(1902' 1925' 1)'                  new AggregateBucketAutoResult<int?>(1925' 1926' 1)'                  new AggregateBucketAutoResult<int?>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<int?>(null' 1902' 1)'                  new AggregateBucketAutoResult<int?>(1902' 1925' 1)'                  new AggregateBucketAutoResult<int?>(1925' 1926' 1)'                  new AggregateBucketAutoResult<int?>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<int?>(null' 1902' 1)'                  new AggregateBucketAutoResult<int?>(1902' 1925' 1)'                  new AggregateBucketAutoResult<int?>(1925' 1926' 1)'                  new AggregateBucketAutoResult<int?>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<int?>(null' 1902' 1)'                  new AggregateBucketAutoResult<int?>(1902' 1925' 1)'                  new AggregateBucketAutoResult<int?>(1925' 1926' 1)'                  new AggregateBucketAutoResult<int?>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<int?>(null' 1902' 1)'                  new AggregateBucketAutoResult<int?>(1902' 1925' 1)'                  new AggregateBucketAutoResult<int?>(1925' 1926' 1)'                  new AggregateBucketAutoResult<int?>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketAutoResult<int?>(null' 1902' 1)'                  new AggregateBucketAutoResult<int?>(1902' 1925' 1)'                  new AggregateBucketAutoResult<int?>(1925' 1926' 1)'                  new AggregateBucketAutoResult<int?>(1926' 1926' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_add_expected_stage,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: var buckets = 4;
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(r => r._id.Min).Should().Equal(null' 1902' 1925' 1926);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(r => r._id.Min).Should().Equal(null' 1902' 1925' 1926);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(r => r._id.Min).Should().Equal(null' 1902' 1925' 1926);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(r => r._id.Max).Should().Equal(1902' 1925' 1926' 1926);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(r => r._id.Max).Should().Equal(1902' 1925' 1926' 1926);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(r => r._id.Max).Should().Equal(1902' 1925' 1926' 1926);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(r => r._id.Max).Should().Equal(1902' 1925' 1926' 1926);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[1].Years.Should().Equal(new int[] { 1902 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[2].Years.Should().Equal(new int[] { 1925 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[2].Years.Should().Equal(new int[] { 1925 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[3].Years.Should().Equal(new int[] { 1926 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketAutoTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketAutoTests.cs,BucketAuto_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[3].Years.Should().Equal(new int[] { 1926 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketResult<BsonValue>(1900' 1)'                  new AggregateBucketResult<BsonValue>(1920' 2)'                  new AggregateBucketResult<BsonValue>("Unknown"' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketResult<BsonValue>(1900' 1)'                  new AggregateBucketResult<BsonValue>(1920' 2)'                  new AggregateBucketResult<BsonValue>("Unknown"' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketResult<BsonValue>(1900' 1)'                  new AggregateBucketResult<BsonValue>(1920' 2)'                  new AggregateBucketResult<BsonValue>("Unknown"' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_with_output_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketResult<BsonValue>(1900' 1)'                  new AggregateBucketResult<BsonValue>(1920' 2)'                  new AggregateBucketResult<BsonValue>("Unknown"' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketResult<BsonValue>(1900' 1)'                  new AggregateBucketResult<BsonValue>(1920' 2)'                  new AggregateBucketResult<BsonValue>("Unknown"' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new AggregateBucketResult<BsonValue>(1900' 1)'                  new AggregateBucketResult<BsonValue>(1920' 2)'                  new AggregateBucketResult<BsonValue>("Unknown"' 1));
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_add_expected_stage,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: var boundaries = new BsonValue[] { 1900' 1920' 1950 };
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(b => b._id).Should().Equal(1900' 1920' "Unknown");
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(b => b._id).Should().Equal(1900' 1920' "Unknown");
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[0].Years.Should().Equal(new[] { 1902 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[1].Years.Should().Equal(new[] { 1926' 1925 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[1].Years.Should().Equal(new[] { 1926' 1925 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: result[2].Years.Should().Equal(new int[0]);
Magic Number,MongoDB.Driver.Tests,AggregateFluentBucketTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentBucketTests.cs,Bucket_typed_with_output_should_return_expected_result,The following statement contains a magic number: result.Select(b => b.Count).Should().Equal(1' 2' 1);
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.Facets[2].Output<BsonDocument>().Should().BeEquivalentTo(                  BsonDocument.Parse("{ _id: { min: null' max: 1902 }' count: 1 }")'                  BsonDocument.Parse("{ _id: { min: 1902' max: 1925 }' count: 1 }")'                  BsonDocument.Parse("{ _id: { min: 1925' max: 1926 }' count: 1 }")'                  BsonDocument.Parse("{ _id: { min: 1926' max: 1926 }' count: 1 }"));
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_1_facet_should_return_expected_result,The following statement contains a magic number: result.CategorizedByTags.WithComparer(new CategorizedByTagComparer()).Should().BeEquivalentTo(                  new CategorizedByTag { Id = "Expressionism"' Count = 2 }'                  new CategorizedByTag { Id = "painting"' Count = 2 }'                  new CategorizedByTag { Id = "ukiyo-e"' Count = 1 }'                  new CategorizedByTag { Id = "woodblock"' Count = 1 }'                  new CategorizedByTag { Id = "Surrealism"' Count = 1 }'                  new CategorizedByTag { Id = "woodcut"' Count = 1 }'                  new CategorizedByTag { Id = "oil"' Count = 1 }'                  new CategorizedByTag { Id = "satire"' Count = 1 }'                  new CategorizedByTag { Id = "caricature"' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_1_facet_should_return_expected_result,The following statement contains a magic number: result.CategorizedByTags.WithComparer(new CategorizedByTagComparer()).Should().BeEquivalentTo(                  new CategorizedByTag { Id = "Expressionism"' Count = 2 }'                  new CategorizedByTag { Id = "painting"' Count = 2 }'                  new CategorizedByTag { Id = "ukiyo-e"' Count = 1 }'                  new CategorizedByTag { Id = "woodblock"' Count = 1 }'                  new CategorizedByTag { Id = "Surrealism"' Count = 1 }'                  new CategorizedByTag { Id = "woodcut"' Count = 1 }'                  new CategorizedByTag { Id = "oil"' Count = 1 }'                  new CategorizedByTag { Id = "satire"' Count = 1 }'                  new CategorizedByTag { Id = "caricature"' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_2_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByTags.WithComparer(new CategorizedByTagComparer()).Should().BeEquivalentTo(                  new CategorizedByTag { Id = "Expressionism"' Count = 2 }'                  new CategorizedByTag { Id = "painting"' Count = 2 }'                  new CategorizedByTag { Id = "ukiyo-e"' Count = 1 }'                  new CategorizedByTag { Id = "woodblock"' Count = 1 }'                  new CategorizedByTag { Id = "Surrealism"' Count = 1 }'                  new CategorizedByTag { Id = "woodcut"' Count = 1 }'                  new CategorizedByTag { Id = "oil"' Count = 1 }'                  new CategorizedByTag { Id = "satire"' Count = 1 }'                  new CategorizedByTag { Id = "caricature"' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_2_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByTags.WithComparer(new CategorizedByTagComparer()).Should().BeEquivalentTo(                  new CategorizedByTag { Id = "Expressionism"' Count = 2 }'                  new CategorizedByTag { Id = "painting"' Count = 2 }'                  new CategorizedByTag { Id = "ukiyo-e"' Count = 1 }'                  new CategorizedByTag { Id = "woodblock"' Count = 1 }'                  new CategorizedByTag { Id = "Surrealism"' Count = 1 }'                  new CategorizedByTag { Id = "woodcut"' Count = 1 }'                  new CategorizedByTag { Id = "oil"' Count = 1 }'                  new CategorizedByTag { Id = "satire"' Count = 1 }'                  new CategorizedByTag { Id = "caricature"' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_2_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYears.WithComparer(new CategorizedByYearComparer()).Should().BeEquivalentTo(                  new CategorizedByYear { Id = 1900' Count = 1 }'                  new CategorizedByYear { Id = 1920' Count = 2 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_2_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYears.WithComparer(new CategorizedByYearComparer()).Should().BeEquivalentTo(                  new CategorizedByYear { Id = 1900' Count = 1 }'                  new CategorizedByYear { Id = 1920' Count = 2 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_2_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYears.WithComparer(new CategorizedByYearComparer()).Should().BeEquivalentTo(                  new CategorizedByYear { Id = 1900' Count = 1 }'                  new CategorizedByYear { Id = 1920' Count = 2 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByTags.WithComparer(new CategorizedByTagComparer()).Should().BeEquivalentTo(                  new CategorizedByTag { Id = "Expressionism"' Count = 2 }'                  new CategorizedByTag { Id = "painting"' Count = 2 }'                  new CategorizedByTag { Id = "ukiyo-e"' Count = 1 }'                  new CategorizedByTag { Id = "woodblock"' Count = 1 }'                  new CategorizedByTag { Id = "Surrealism"' Count = 1 }'                  new CategorizedByTag { Id = "woodcut"' Count = 1 }'                  new CategorizedByTag { Id = "oil"' Count = 1 }'                  new CategorizedByTag { Id = "satire"' Count = 1 }'                  new CategorizedByTag { Id = "caricature"' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByTags.WithComparer(new CategorizedByTagComparer()).Should().BeEquivalentTo(                  new CategorizedByTag { Id = "Expressionism"' Count = 2 }'                  new CategorizedByTag { Id = "painting"' Count = 2 }'                  new CategorizedByTag { Id = "ukiyo-e"' Count = 1 }'                  new CategorizedByTag { Id = "woodblock"' Count = 1 }'                  new CategorizedByTag { Id = "Surrealism"' Count = 1 }'                  new CategorizedByTag { Id = "woodcut"' Count = 1 }'                  new CategorizedByTag { Id = "oil"' Count = 1 }'                  new CategorizedByTag { Id = "satire"' Count = 1 }'                  new CategorizedByTag { Id = "caricature"' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYears.WithComparer(new CategorizedByYearComparer()).Should().BeEquivalentTo(                  new CategorizedByYear { Id = 1900' Count = 1 }'                  new CategorizedByYear { Id = 1920' Count = 2 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYears.WithComparer(new CategorizedByYearComparer()).Should().BeEquivalentTo(                  new CategorizedByYear { Id = 1900' Count = 1 }'                  new CategorizedByYear { Id = 1920' Count = 2 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYears.WithComparer(new CategorizedByYearComparer()).Should().BeEquivalentTo(                  new CategorizedByYear { Id = 1900' Count = 1 }'                  new CategorizedByYear { Id = 1920' Count = 2 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYearsAuto.WithComparer(new CategorizedByYearAutoComparer()).Should().BeEquivalentTo(                  new CategorizedByYearAuto { Id = new MinMax { Min = null' Max = 1902 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1902' Max = 1925 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1925' Max = 1926 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1926' Max = 1926 }' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYearsAuto.WithComparer(new CategorizedByYearAutoComparer()).Should().BeEquivalentTo(                  new CategorizedByYearAuto { Id = new MinMax { Min = null' Max = 1902 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1902' Max = 1925 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1925' Max = 1926 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1926' Max = 1926 }' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYearsAuto.WithComparer(new CategorizedByYearAutoComparer()).Should().BeEquivalentTo(                  new CategorizedByYearAuto { Id = new MinMax { Min = null' Max = 1902 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1902' Max = 1925 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1925' Max = 1926 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1926' Max = 1926 }' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYearsAuto.WithComparer(new CategorizedByYearAutoComparer()).Should().BeEquivalentTo(                  new CategorizedByYearAuto { Id = new MinMax { Min = null' Max = 1902 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1902' Max = 1925 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1925' Max = 1926 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1926' Max = 1926 }' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYearsAuto.WithComparer(new CategorizedByYearAutoComparer()).Should().BeEquivalentTo(                  new CategorizedByYearAuto { Id = new MinMax { Min = null' Max = 1902 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1902' Max = 1925 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1925' Max = 1926 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1926' Max = 1926 }' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYearsAuto.WithComparer(new CategorizedByYearAutoComparer()).Should().BeEquivalentTo(                  new CategorizedByYearAuto { Id = new MinMax { Min = null' Max = 1902 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1902' Max = 1925 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1925' Max = 1926 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1926' Max = 1926 }' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentFacetTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentFacetTests.cs,Facet_typed_with_3_facets_should_return_expected_result,The following statement contains a magic number: result.CategorizedByYearsAuto.WithComparer(new CategorizedByYearAutoComparer()).Should().BeEquivalentTo(                  new CategorizedByYearAuto { Id = new MinMax { Min = null' Max = 1902 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1902' Max = 1925 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1925' Max = 1926 }' Count = 1 }'                  new CategorizedByYearAuto { Id = new MinMax { Min = 1926' Max = 1926 }' Count = 1 });
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,CreateTestData,The following statement contains a magic number: __ord = new Airport { Id = 2' Name = "ORD"' Connects = new[] { "JFK" } };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,CreateTestData,The following statement contains a magic number: __pwm = new Airport { Id = 3' Name = "PWM"' Connects = new[] { "BOS"' "LHR" } };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,CreateTestData,The following statement contains a magic number: __lhr = new Airport { Id = 4' Name = "LHR"' Connects = new[] { "PWM" } };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,CreateTestData,The following statement contains a magic number: __eliot = new Traveler { Id = 2' Name = "Eliot"' NearestAirport = "JFK" };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,CreateTestData,The following statement contains a magic number: __jeff = new Traveler { Id = 3' Name = "Jeff"' NearestAirport = "BOS" };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_should_add_expected_stage,The following statement contains a magic number: var options = new AggregateGraphLookupOptions<Airport' Destination' TravelerDestinations>              {                  MaxDepth = 2              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_should_return_expected_result,The following statement contains a magic number: var options = new AggregateGraphLookupOptions<Airport' Destination' TravelerDestinations>              {                  MaxDepth = 2              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_should_add_expected_stage,The following statement contains a magic number: var options = new AggregateGraphLookupOptions<Airport' Destination' TravelerDestinations>              {                  MaxDepth = 2              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_should_return_expected_result,The following statement contains a magic number: var options = new AggregateGraphLookupOptions<Airport' Destination' TravelerDestinations>              {                  MaxDepth = 2              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_should_return_expected_result,The following statement contains a magic number: result.WithComparer(comparer).Should().Equal(                  new TravelerDestinations(__dev' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__eliot' new[]                  {                      new Destination(__pwm' 2)'                      new Destination(__ord' 1)'                      new Destination(__bos' 1)'                      new Destination(__jfk' 0)                  })'                  new TravelerDestinations(__jeff' new[]                  {                      new Destination(__ord' 2)'                      new Destination(__pwm' 1)'                      new Destination(__lhr' 2)'                      new Destination(__jfk' 1)'                      new Destination(__bos' 0)                  }));
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_with_array_valued_start_with_should_add_expected_stage,The following statement contains a magic number: var options = new AggregateGraphLookupOptions<Airport' Airport' AirportDestinationsIncludingStops>              {                  MaxDepth = 2              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithAirportCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithAirportsCollectionTests.cs,GraphLookup_typed_with_array_valued_start_with_should_return_expected_result,The following statement contains a magic number: var options = new AggregateGraphLookupOptions<Airport' Airport' AirportDestinationsIncludingStops>              {                  MaxDepth = 2              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithEmployeeCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithEmployeeCollectionTests.cs,CreateTestData,The following statement contains a magic number: __eliot = new Employee { Id = 2' Name = "Eliot"' ReportsTo = "Dev" };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithEmployeeCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithEmployeeCollectionTests.cs,CreateTestData,The following statement contains a magic number: __ron = new Employee { Id = 3' Name = "Ron"' ReportsTo = "Eliot" };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithEmployeeCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithEmployeeCollectionTests.cs,CreateTestData,The following statement contains a magic number: __andrew = new Employee { Id = 4' Name = "Andrew"' ReportsTo = "Eliot" };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithEmployeeCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithEmployeeCollectionTests.cs,CreateTestData,The following statement contains a magic number: __asya = new Employee { Id = 5' Name = "Asya"' ReportsTo = "Ron" };
Magic Number,MongoDB.Driver.Tests,AggregateFluentGraphLookupWithEmployeeCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentGraphLookupWithEmployeeCollectionTests.cs,CreateTestData,The following statement contains a magic number: __dan = new Employee { Id = 6' Name = "Dan"' ReportsTo = "Andrew" };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new BsonDocument { { "item"' "almonds" }' { "price"' 12 }' { "ordered"' 2 } }'                  new BsonDocument { { "item"' "pecans" }' { "price"' 20 }' { "ordered"' 1 } }'                  new BsonDocument { { "item"' "cookies" }' { "price"' 10 }' { "ordered"' 60 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new BsonDocument { { "item"' "almonds" }' { "price"' 12 }' { "ordered"' 2 } }'                  new BsonDocument { { "item"' "pecans" }' { "price"' 20 }' { "ordered"' 1 } }'                  new BsonDocument { { "item"' "cookies" }' { "price"' 10 }' { "ordered"' 60 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new BsonDocument { { "item"' "almonds" }' { "price"' 12 }' { "ordered"' 2 } }'                  new BsonDocument { { "item"' "pecans" }' { "price"' 20 }' { "ordered"' 1 } }'                  new BsonDocument { { "item"' "cookies" }' { "price"' 10 }' { "ordered"' 60 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new BsonDocument { { "item"' "almonds" }' { "price"' 12 }' { "ordered"' 2 } }'                  new BsonDocument { { "item"' "pecans" }' { "price"' 20 }' { "ordered"' 1 } }'                  new BsonDocument { { "item"' "cookies" }' { "price"' 10 }' { "ordered"' 60 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new BsonDocument { { "item"' "almonds" }' { "price"' 12 }' { "ordered"' 2 } }'                  new BsonDocument { { "item"' "pecans" }' { "price"' 20 }' { "ordered"' 1 } }'                  new BsonDocument { { "item"' "cookies" }' { "price"' 10 }' { "ordered"' 60 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 120 } }'                  new BsonDocument { { "stock_item"' "pecans" }' { "instock"' 80 } }'                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 60 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 40 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 80 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 120 } }'                  new BsonDocument { { "stock_item"' "pecans" }' { "instock"' 80 } }'                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 60 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 40 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 80 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 120 } }'                  new BsonDocument { { "stock_item"' "pecans" }' { "instock"' 80 } }'                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 60 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 40 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 80 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 120 } }'                  new BsonDocument { { "stock_item"' "pecans" }' { "instock"' 80 } }'                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 60 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 40 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 80 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 120 } }'                  new BsonDocument { { "stock_item"' "pecans" }' { "instock"' 80 } }'                  new BsonDocument { { "stock_item"' "almonds" }' { "instock"' 60 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 40 } }'                  new BsonDocument { { "stock_item"' "cookies" }' { "instock"' 80 } }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: result.Count.Should().Be(3);
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_bsondocuments_params_should_return_the_expected_result,The following statement contains a magic number: result[2].Should().Be("{ 'item' : 'cookies'' 'price' : 10' 'ordered' : 60' 'stockdata' : [{ 'instock' : 80 }] }");
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: result.Count.Should().Be(3);
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_should_return_the_expected_result,The following statement contains a magic number: result[2].Should().Be("{ 'item' : 'cookies'' 'price' : 10' 'ordered' : 60' 'stockdata' : [{ 'instock' : 80 }] }");
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: result.Count.Should().Be(3);
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_with_let_and_mismatched_pipeline_condition_should_return_the_expected_result,The following statement contains a magic number: result[2].Should().Be("{ 'item' : 'cookies'' 'price' : 10' 'ordered' : 60' 'stockdata' : [] }");
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var orderDocuments = new[]              {                  new Order { Item = "almonds"' Price = 12' Ordered = 2 }'                  new Order { Item = "pecans"' Price = 20' Ordered = 1 }'                  new Order { Item = "cookies"' Price = 10' Ordered = 60 }              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: var warehouseDocuments = new[]              {                  new Warehouse { StockItem = "almonds"' Instock = 120 }'                  new Warehouse { StockItem = "pecans"' Instock = 80 }'                  new Warehouse { StockItem = "almonds"' Instock = 60 }'                  new Warehouse { StockItem = "cookies"' Instock = 40 }'                  new Warehouse { StockItem = "cookies"' Instock = 80 }'              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: result.Count.Should().Be(3);
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Lookup_without_let_should_return_the_expected_result,The following statement contains a magic number: result[2].Should().Be("{ 'item' : 'cookies'' 'price' : 10' 'ordered' : 60' 'stockdata' : [{ 'instock' : 120 }' { 'instock' : 80 }' { 'instock' : 60 }' { 'instock' : 40 }' { 'instock' : 80 }] }");
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Merge_should_add_the_expected_stage_and_call_Aggregate,The following statement contains a magic number: Predicate<PipelineDefinition<C' C>> isExpectedPipeline = pipeline =>              {                  var renderedPipeline = RenderPipeline(pipeline);                  return                      renderedPipeline.Documents.Count == 2 &&                      renderedPipeline.Documents[0] == BsonDocument.Parse("{ $match : { X : 1 } }") &&                      renderedPipeline.Documents[1] == BsonDocument.Parse("{ $merge : { into : { db : 'test'' coll : 'collection' } } }") &&                      renderedPipeline.OutputSerializer.ValueType == typeof(C);              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,OfType_should_add_the_expected_stage,The following statement contains a magic number: var result = subject                  .SortBy(c => c.X)                  .OfType<D>()                  .Match(d => d.Y == 2);
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,OfType_should_add_the_expected_stage,The following statement contains a magic number: Predicate<PipelineDefinition<C' D>> isExpectedPipeline = pipeline =>              {                  var renderedPipeline = RenderPipeline(pipeline);                  return                      renderedPipeline.Documents.Count == 3 &&                      renderedPipeline.Documents[0] == BsonDocument.Parse("{ $sort : { X : 1 } }") &&                      renderedPipeline.Documents[1] == BsonDocument.Parse("{ $match : { _t : \"D\" } }") &&                      renderedPipeline.Documents[2] == BsonDocument.Parse("{ $match : { Y : 2 } }") &&                      renderedPipeline.OutputSerializer.ValueType == typeof(D);              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,OfType_should_add_the_expected_stage,The following statement contains a magic number: Predicate<PipelineDefinition<C' D>> isExpectedPipeline = pipeline =>              {                  var renderedPipeline = RenderPipeline(pipeline);                  return                      renderedPipeline.Documents.Count == 3 &&                      renderedPipeline.Documents[0] == BsonDocument.Parse("{ $sort : { X : 1 } }") &&                      renderedPipeline.Documents[1] == BsonDocument.Parse("{ $match : { _t : \"D\" } }") &&                      renderedPipeline.Documents[2] == BsonDocument.Parse("{ $match : { Y : 2 } }") &&                      renderedPipeline.OutputSerializer.ValueType == typeof(D);              };
Magic Number,MongoDB.Driver.Tests,AggregateFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AggregateFluentTests.cs,Out_should_add_the_expected_stage_and_call_Aggregate,The following statement contains a magic number: Predicate<PipelineDefinition<C' C>> isExpectedPipeline = pipeline =>              {                  var renderedPipeline = RenderPipeline(pipeline);                  return                      renderedPipeline.Documents.Count == 2 &&                      renderedPipeline.Documents[0] == BsonDocument.Parse("{ $match : { X : 1 } }") &&                      renderedPipeline.Documents[1] == BsonDocument.Parse("{ $out : \"test\" }") &&                      renderedPipeline.OutputSerializer.ValueType == typeof(C);              };
Magic Number,MongoDB.Driver.Tests,AsyncCursorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AsyncCursorTests.cs,KillCursor_should_actually_work,The following statement contains a magic number: i < 1000
Magic Number,MongoDB.Driver.Tests,AsyncCursorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AsyncCursorTests.cs,Tailable_cursor_should_be_able_to_be_cancelled_from_a_different_thread_with_expected_result,The following statement contains a magic number: var createCollectionOptions = new CreateCollectionOptions()              {                  Capped = true'                  MaxSize = 1000              };
Magic Number,MongoDB.Driver.Tests,AuthenticationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AuthenticationTests.cs,Authentication_fails_when_user_has_Scram_Sha_1_mechanism_and_mechanism_is_Scram_Sha_256,The following statement contains a magic number: settings.ServerSelectionTimeout = TimeSpan.FromSeconds(5);
Magic Number,MongoDB.Driver.Tests,AuthenticationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AuthenticationTests.cs,Authentication_fails_when_user_has_Scram_Sha_256_mechanism_and_mechanism_is_Scram_Sha_1,The following statement contains a magic number: settings.ServerSelectionTimeout = TimeSpan.FromSeconds(5);
Magic Number,MongoDB.Driver.Tests,AuthenticationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\AuthenticationTests.cs,Authentication_fails_when_user_is_non_extant_and_mechanism_is_not_specified,The following statement contains a magic number: settings.ServerSelectionTimeout = TimeSpan.FromSeconds(5);
Magic Number,MongoDB.Driver.Tests,BulkWriteResultTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\BulkWriteResultTests.cs,Should_convert_from_core_acknowledged_result_when_original_models_exists,The following statement contains a magic number: var core = new BulkWriteOperationResult.Acknowledged(                  requestCount: 1'                  matchedCount: 2'                  deletedCount: 3'                  insertedCount: 4'                  modifiedCount: modifiedCount'                  processedRequests: new[] { new InsertRequest(new BsonDocument("b"' 1)) }'                  upserts: new List<BulkWriteOperationUpsert>());
Magic Number,MongoDB.Driver.Tests,BulkWriteResultTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\BulkWriteResultTests.cs,Should_convert_from_core_acknowledged_result_when_original_models_exists,The following statement contains a magic number: var core = new BulkWriteOperationResult.Acknowledged(                  requestCount: 1'                  matchedCount: 2'                  deletedCount: 3'                  insertedCount: 4'                  modifiedCount: modifiedCount'                  processedRequests: new[] { new InsertRequest(new BsonDocument("b"' 1)) }'                  upserts: new List<BulkWriteOperationUpsert>());
Magic Number,MongoDB.Driver.Tests,BulkWriteResultTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\BulkWriteResultTests.cs,Should_convert_from_core_acknowledged_result_when_original_models_exists,The following statement contains a magic number: var core = new BulkWriteOperationResult.Acknowledged(                  requestCount: 1'                  matchedCount: 2'                  deletedCount: 3'                  insertedCount: 4'                  modifiedCount: modifiedCount'                  processedRequests: new[] { new InsertRequest(new BsonDocument("b"' 1)) }'                  upserts: new List<BulkWriteOperationUpsert>());
Magic Number,MongoDB.Driver.Tests,BulkWriteResultTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\BulkWriteResultTests.cs,Should_convert_from_core_acknowledged_result_when_original_models_do_not_exist,The following statement contains a magic number: var core = new BulkWriteOperationResult.Acknowledged(                  requestCount: 1'                  matchedCount: 2'                  deletedCount: 3'                  insertedCount: 4'                  modifiedCount: modifiedCount'                  processedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("b"' 1))) }'                  upserts: new List<BulkWriteOperationUpsert>());
Magic Number,MongoDB.Driver.Tests,BulkWriteResultTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\BulkWriteResultTests.cs,Should_convert_from_core_acknowledged_result_when_original_models_do_not_exist,The following statement contains a magic number: var core = new BulkWriteOperationResult.Acknowledged(                  requestCount: 1'                  matchedCount: 2'                  deletedCount: 3'                  insertedCount: 4'                  modifiedCount: modifiedCount'                  processedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("b"' 1))) }'                  upserts: new List<BulkWriteOperationUpsert>());
Magic Number,MongoDB.Driver.Tests,BulkWriteResultTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\BulkWriteResultTests.cs,Should_convert_from_core_acknowledged_result_when_original_models_do_not_exist,The following statement contains a magic number: var core = new BulkWriteOperationResult.Acknowledged(                  requestCount: 1'                  matchedCount: 2'                  deletedCount: 3'                  insertedCount: 4'                  modifiedCount: modifiedCount'                  processedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("b"' 1))) }'                  upserts: new List<BulkWriteOperationUpsert>());
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_client_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_client_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_client_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_database_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_database_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_database_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_collection_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_collection_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ChangeStreamHelperTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ChangeStreamHelperTests.cs,CreateChangeStreamOperation_for_collection_returns_expected_result,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,Fork_should_return_expected_result,The following statement contains a magic number: coreSessionHandle.ReferenceCount().Should().Be(2);
Magic Number,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,CalculateTime,The following statement contains a magic number: return (int)TransactionExecutorReflector.__transactionTimeout().TotalSeconds + (timeout ? 10 : -10);
Magic Number,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,CalculateTime,The following statement contains a magic number: return (int)TransactionExecutorReflector.__transactionTimeout().TotalSeconds + (timeout ? 10 : -10);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var heartbeatInterval = TimeSpan.FromSeconds(7);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var heartbeatTimeout = TimeSpan.FromSeconds(8);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var localThreshold = TimeSpan.FromMilliseconds(20);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var maxConnectionIdleTime = TimeSpan.FromSeconds(2);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var maxConnectionLifeTime = TimeSpan.FromSeconds(3);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var maxConnectionPoolSize = 50;
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var minConnectionPoolSize = 5;
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var serverSelectionTimeout = TimeSpan.FromSeconds(6);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var socketTimeout = TimeSpan.FromSeconds(4);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var waitQueueSize = 20;
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: var waitQueueTimeout = TimeSpan.FromSeconds(5);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubject,The following statement contains a magic number: switch (notEqualFieldName)                  {                      case "AllowInsecureTls": allowInsecureTls = !allowInsecureTls; break;                      case "ApplicationName": applicationName = "app2"; break;                      case "ClusterConfigurator": clusterConfigurator = new Action<ClusterBuilder>(b => { }); break;                      case "Compressors": compressors = new[] { new CompressorConfiguration(CompressorType.Zlib) }; break;                      case "ConnectionMode": connectionMode = ConnectionMode.ReplicaSet; break;                      case "ConnectTimeout": connectTimeout = TimeSpan.FromSeconds(99); break;  #pragma warning disable 618                      case "Credentials": credentials = new List<MongoCredential> { MongoCredential.CreateMongoCRCredential("different"' "different"' "different") }; break;  #pragma warning restore 618                      case "HeartbeatInterval": heartbeatInterval = TimeSpan.FromSeconds(99); break;                      case "HeartbeatTimeout": heartbeatTimeout = TimeSpan.FromSeconds(99); break;                      case "IPv6": ipv6 = !ipv6; break;                      case "KmsProviders": kmsProviders.Add("local"' new Dictionary<string' object>() { { "key"' "test" } }); break;                      case "LocalThreshold": localThreshold = TimeSpan.FromMilliseconds(99); break;                      case "MaxConnectionIdleTime": maxConnectionIdleTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionLifeTime": maxConnectionLifeTime = TimeSpan.FromSeconds(99); break;                      case "MaxConnectionPoolSize": maxConnectionPoolSize = 99; break;                      case "MinConnectionPoolSize": minConnectionPoolSize = 99; break;                      case "ReceiveBufferSize": receiveBufferSize = 2; break;                      case "ReplicaSetName": replicaSetName = "different"; break;                      case "SchemaMap": schemaMap.Add("db.coll"' new BsonDocument()); break;                      case "Scheme": scheme = ConnectionStringScheme.MongoDBPlusSrv; break;                      case "SdamLogFileName": sdamLogFileName = "different"; break;                      case "SendBufferSize": sendBufferSize = 2; break;                      case "Servers": servers = new[] { new MongoServerAddress("different") }; break;                      case "ServerSelectionTimeout": serverSelectionTimeout = TimeSpan.FromSeconds(98); break;                      case "SocketTimeout": socketTimeout = TimeSpan.FromSeconds(99); break;                      case "SslSettings": sslSettings.CheckCertificateRevocation = !sslSettings.CheckCertificateRevocation; break;                      case "UseTls": useTls = !useTls; break;                      case "WaitQueueSize": waitQueueSize = 99; break;                      case "WaitQueueTimeout": waitQueueTimeout = TimeSpan.FromSeconds(99); break;                      default: throw new ArgumentException($"Invalid field name: \"{notEqualFieldName}\"."' nameof(notEqualFieldName));                  }
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var heartbeatInterval = TimeSpan.FromSeconds(7);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var heartbeatTimeout = TimeSpan.FromSeconds(8);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var localThreshold = TimeSpan.FromMilliseconds(20);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var maxConnectionIdleTime = TimeSpan.FromSeconds(2);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var maxConnectionLifeTime = TimeSpan.FromSeconds(3);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var maxConnectionPoolSize = 50;
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var minConnectionPoolSize = 5;
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var serverSelectionTimeout = TimeSpan.FromSeconds(6);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var socketTimeout = TimeSpan.FromSeconds(4);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var waitQueueSize = 20;
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,CreateSubjectWith,The following statement contains a magic number: var waitQueueTimeout = TimeSpan.FromSeconds(5);
Magic Number,MongoDB.Driver.Tests,ClusterKeyTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterKeyTests.cs,GetSchemaMaps,The following statement contains a magic number: options.Add("key2"' new BsonDocument("b"' 2));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var servers = new[] { new MongoServerAddress("localhost")' new MongoServerAddress("127.0.0.1"' 30000)' new MongoServerAddress("[::1]"' 27018) };
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var servers = new[] { new MongoServerAddress("localhost")' new MongoServerAddress("127.0.0.1"' 30000)' new MongoServerAddress("[::1]"' 27018) };
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var clusterKey = new ClusterKey(                  allowInsecureTls: false'                  applicationName: "app1"'                  clusterConfigurator: clusterConfigurator'                  compressors: new[] { new CompressorConfiguration(CompressorType.Zlib) }'                  connectionMode: ConnectionMode.ReplicaSet'                  connectTimeout: TimeSpan.FromSeconds(1)'                  credentials: credentials'                  heartbeatInterval: TimeSpan.FromSeconds(2)'                  heartbeatTimeout: TimeSpan.FromSeconds(3)'                  ipv6: true'                  kmsProviders: kmsProviders'                  localThreshold: TimeSpan.FromSeconds(4)'                  maxConnectionIdleTime: TimeSpan.FromSeconds(5)'                  maxConnectionLifeTime: TimeSpan.FromSeconds(6)'                  maxConnectionPoolSize: 7'                  minConnectionPoolSize: 8'                  receiveBufferSize: 9'                  replicaSetName: "rs"'                  schemaMap: schemaMap'                  scheme: ConnectionStringScheme.MongoDB'                  sdamLogFilename: "sdam.log"'                  sendBufferSize: 10'                  servers: servers'                  serverSelectionTimeout: TimeSpan.FromSeconds(11)'                  socketTimeout: TimeSpan.FromSeconds(12)'                  sslSettings: sslSettings'                  useTls: true'                  waitQueueSize: 13'                  waitQueueTimeout: TimeSpan.FromSeconds(14));
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var expectedEndPoints = new EndPoint[]                  {                      new DnsEndPoint("localhost"' 27017)'                      new IPEndPoint(IPAddress.Parse("127.0.0.1")' 30000)'                      new IPEndPoint(IPAddress.Parse("[::1]")' 27018)                  };
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var expectedEndPoints = new EndPoint[]                  {                      new DnsEndPoint("localhost"' 27017)'                      new IPEndPoint(IPAddress.Parse("127.0.0.1")' 30000)'                      new IPEndPoint(IPAddress.Parse("[::1]")' 27018)                  };
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,GetOrCreateCluster_should_return_a_cluster_with_the_correct_settings,The following statement contains a magic number: var expectedEndPoints = new EndPoint[]                  {                      new DnsEndPoint("localhost"' 27017)'                      new IPEndPoint(IPAddress.Parse("127.0.0.1")' 30000)'                      new IPEndPoint(IPAddress.Parse("[::1]")' 27018)                  };
Magic Number,MongoDB.Driver.Tests,ClusterRegistryTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClusterRegistryTests.cs,UnregisterAndDisposeCluster_should_unregister_and_dispose_the_cluster,The following statement contains a magic number: cluster._state().Should().Be(2);
Magic Number,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The following statement contains a magic number: collection.InsertMany(                      new[]                      {                          new BsonDocument("x"' 1)'                          new BsonDocument("x"' 2)'                          new BsonDocument("x"' 3)'                          new BsonDocument("x"' 4)'                          new BsonDocument("x"' 5)'                      });
Magic Number,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The following statement contains a magic number: collection.InsertMany(                      new[]                      {                          new BsonDocument("x"' 1)'                          new BsonDocument("x"' 2)'                          new BsonDocument("x"' 3)'                          new BsonDocument("x"' 4)'                          new BsonDocument("x"' 5)'                      });
Magic Number,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The following statement contains a magic number: collection.InsertMany(                      new[]                      {                          new BsonDocument("x"' 1)'                          new BsonDocument("x"' 2)'                          new BsonDocument("x"' 3)'                          new BsonDocument("x"' 4)'                          new BsonDocument("x"' 5)'                      });
Magic Number,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The following statement contains a magic number: collection.InsertMany(                      new[]                      {                          new BsonDocument("x"' 1)'                          new BsonDocument("x"' 2)'                          new BsonDocument("x"' 3)'                          new BsonDocument("x"' 4)'                          new BsonDocument("x"' 5)'                      });
Magic Number,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_not_be_cleared_when_replSetStepDown_and_GetMore,The following statement contains a magic number: var cursor = collection.FindSync(FilterDefinition<BsonDocument>.Empty' new FindOptions<BsonDocument> { BatchSize = 2 });
Magic Number,MongoDB.Driver.Tests,ConnectionsSurvivePrimaryStepDownTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ConnectionsSurvivePrimaryStepDownTests.cs,Connection_pool_should_work_as_expected_when_NonMaster_exception,The following statement contains a magic number: e.Code.Should().Be(10107);
Magic Number,MongoDB.Driver.Tests,CreateManyIndexesOptionsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\CreateManyIndexOptionsTest.cs,MaxTime_get_should_return_expected_result,The following statement contains a magic number: var subject = new CreateManyIndexesOptions() { MaxTime = TimeSpan.FromSeconds(123) };
Magic Number,MongoDB.Driver.Tests,CreateManyIndexesOptionsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\CreateManyIndexOptionsTest.cs,MaxTime_get_should_return_expected_result,The following statement contains a magic number: result.Should().Be(TimeSpan.FromSeconds(123));
Magic Number,MongoDB.Driver.Tests,CreateOneIndexOptionsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\CreateOneIndexOptionsTest.cs,MaxTime_get_should_return_expected_result,The following statement contains a magic number: var subject = new CreateOneIndexOptions { MaxTime = TimeSpan.FromSeconds(123) };
Magic Number,MongoDB.Driver.Tests,CreateOneIndexOptionsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\CreateOneIndexOptionsTest.cs,MaxTime_get_should_return_expected_result,The following statement contains a magic number: result.Should().Be(TimeSpan.FromSeconds(123));
Magic Number,MongoDB.Driver.Tests,DropIndexOptionsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\DropIndexOptionsTest.cs,MaxTime_get_should_return_expected_result,The following statement contains a magic number: var subject = new DropIndexOptions { MaxTime = TimeSpan.FromSeconds(123) };
Magic Number,MongoDB.Driver.Tests,DropIndexOptionsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\DropIndexOptionsTest.cs,MaxTime_get_should_return_expected_result,The following statement contains a magic number: result.Should().Be(TimeSpan.FromSeconds(123));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,All,The following statement contains a magic number: Assert(subject.All("x"' new[] { 10' 20 })' "{x: {$all: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,All,The following statement contains a magic number: Assert(subject.All("x"' new[] { 10' 20 })' "{x: {$all: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And,The following statement contains a magic number: var filter = subject.And(                  subject.Eq("a"' 1)'                  subject.Eq("b"' 2));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_clashing_keys_should_get_promoted_to_dollar_form,The following statement contains a magic number: var filter = subject.And(                  subject.Eq("a"' 1)'                  subject.Eq("a"' 2));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_clashing_keys_but_different_operators_should_get_merged,The following statement contains a magic number: var filter = subject.And(                  subject.Gt("a"' 1)'                  subject.Lt("a"' 10));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_an_empty_filter,The following statement contains a magic number: var filter = subject.And(                  "{}"'                  subject.Eq("a"' 10));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_a_nested_and_should_get_flattened,The following statement contains a magic number: var filter = subject.And(                  subject.And("{a: 1}"' new BsonDocument("b"' 2))'                  subject.Eq("c"' 3));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_a_nested_and_should_get_flattened,The following statement contains a magic number: var filter = subject.And(                  subject.And("{a: 1}"' new BsonDocument("b"' 2))'                  subject.Eq("c"' 3));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_a_nested_and_and_clashing_keys,The following statement contains a magic number: var filter = subject.And(                  subject.And(subject.Eq("a"' 1)' subject.Eq("a"' 2))'                  subject.Eq("c"' 3));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_a_nested_and_and_clashing_keys,The following statement contains a magic number: var filter = subject.And(                  subject.And(subject.Eq("a"' 1)' subject.Eq("a"' 2))'                  subject.Eq("c"' 3));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_a_nested_and_and_clashing_operators_on_the_same_key,The following statement contains a magic number: var filter = subject.Lt("a"' 1) & subject.Lt("a"' 2);
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,And_with_a_nested_and_and_clashing_keys_using_ampersand,The following statement contains a magic number: var filter = subject.Eq("a"' 1) & "{a: 2}" & new BsonDocument("c"' 3);
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAllClear,The following statement contains a magic number: Assert(subject.BitsAllClear("a"' 43)' "{a: {$bitsAllClear: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAllClear_Typed,The following statement contains a magic number: Assert(subject.BitsAllClear(x => x.Age' 43)' "{age: {$bitsAllClear: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAllSet,The following statement contains a magic number: Assert(subject.BitsAllSet("a"' 43)' "{a: {$bitsAllSet: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAllSet_Typed,The following statement contains a magic number: Assert(subject.BitsAllSet(x => x.Age' 43)' "{age: {$bitsAllSet: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAnyClear,The following statement contains a magic number: Assert(subject.BitsAnyClear("a"' 43)' "{a: {$bitsAnyClear: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAnyClear_Typed,The following statement contains a magic number: Assert(subject.BitsAnyClear(x => x.Age' 43)' "{age: {$bitsAnyClear: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAnySet,The following statement contains a magic number: Assert(subject.BitsAnySet("a"' 43)' "{a: {$bitsAnySet: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,BitsAnySet_Typed,The following statement contains a magic number: Assert(subject.BitsAnySet(x => x.Age' 43)' "{age: {$bitsAnySet: 43}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Eq,The following statement contains a magic number: Assert(subject.Eq("x"' 10)' "{x: 10}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Eq,The following statement contains a magic number: Assert(subject.AnyEq("x"' 10)' "{x: 10}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Expression,The following statement contains a magic number: Assert(subject.Where(x => x.FirstName == "Jack" && x.Age > 10)' "{fn: 'Jack'' age: {$gt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoIntersects_Typed_with_GeoJson,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithin_Typed,The following statement contains a magic number: var poly = GeoJson.Polygon(                  GeoJson.Geographic(40' 18)'                  GeoJson.Geographic(40' 19)'                  GeoJson.Geographic(41' 19)'                  GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox,The following statement contains a magic number: Assert(subject.GeoWithinBox("x"' 10' 20' 30' 40)' "{x: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox,The following statement contains a magic number: Assert(subject.GeoWithinBox("x"' 10' 20' 30' 40)' "{x: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox,The following statement contains a magic number: Assert(subject.GeoWithinBox("x"' 10' 20' 30' 40)' "{x: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox,The following statement contains a magic number: Assert(subject.GeoWithinBox("x"' 10' 20' 30' 40)' "{x: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox(x => x.Location' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox(x => x.Location' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox(x => x.Location' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox(x => x.Location' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox("Location"' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox("Location"' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox("Location"' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinBox_Typed,The following statement contains a magic number: Assert(subject.GeoWithinBox("Location"' 10' 20' 30' 40)' "{loc: {$geoWithin: {$box: [[10.0' 20.0]' [30.0' 40.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter,The following statement contains a magic number: Assert(subject.GeoWithinCenter("x"' 10' 20' 30)' "{x: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter,The following statement contains a magic number: Assert(subject.GeoWithinCenter("x"' 10' 20' 30)' "{x: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter,The following statement contains a magic number: Assert(subject.GeoWithinCenter("x"' 10' 20' 30)' "{x: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenter(x => x.Location' 10' 20' 30)' "{loc: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenter(x => x.Location' 10' 20' 30)' "{loc: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenter(x => x.Location' 10' 20' 30)' "{loc: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenter("Location"' 10' 20' 30)' "{loc: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenter("Location"' 10' 20' 30)' "{loc: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenter_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenter("Location"' 10' 20' 30)' "{loc: {$geoWithin: {$center: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere("x"' 10' 20' 30)' "{x: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere("x"' 10' 20' 30)' "{x: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere("x"' 10' 20' 30)' "{x: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere(x => x.Location' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere(x => x.Location' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere(x => x.Location' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere("Location"' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere("Location"' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinCenterSphere_Typed,The following statement contains a magic number: Assert(subject.GeoWithinCenterSphere("Location"' 10' 20' 30)' "{loc: {$geoWithin: {$centerSphere: [[10.0' 20.0]' 30.0]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon,The following statement contains a magic number: Assert(subject.GeoWithinPolygon("x"' new['] { { 1d' 2d }' { 3d' 4d } })' "{x: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon,The following statement contains a magic number: Assert(subject.GeoWithinPolygon("x"' new['] { { 1d' 2d }' { 3d' 4d } })' "{x: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon,The following statement contains a magic number: Assert(subject.GeoWithinPolygon("x"' new['] { { 1d' 2d }' { 3d' 4d } })' "{x: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The following statement contains a magic number: Assert(subject.GeoWithinPolygon(x => x.Location' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The following statement contains a magic number: Assert(subject.GeoWithinPolygon(x => x.Location' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The following statement contains a magic number: Assert(subject.GeoWithinPolygon(x => x.Location' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The following statement contains a magic number: Assert(subject.GeoWithinPolygon("Location"' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The following statement contains a magic number: Assert(subject.GeoWithinPolygon("Location"' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GeoWithinPolygon_Typed,The following statement contains a magic number: Assert(subject.GeoWithinPolygon("Location"' new['] { { 1d' 2d }' { 3d' 4d } })' "{loc: {$geoWithin: {$polygon: [[1.0' 2.0]' [3.0' 4.0]]}}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThan,The following statement contains a magic number: Assert(subject.Gt("x"' 10)' "{x: {$gt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThan,The following statement contains a magic number: Assert(subject.AnyGt("x"' 10)' "{x: {$gt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThan_Typed,The following statement contains a magic number: Assert(subject.Gt(x => x.Age' 10)' "{age: {$gt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThan_Typed,The following statement contains a magic number: Assert(subject.Gt("Age"' 10)' "{age: {$gt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThanOrEqual,The following statement contains a magic number: Assert(subject.Gte("x"' 10)' "{x: {$gte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThanOrEqual,The following statement contains a magic number: Assert(subject.AnyGte("x"' 10)' "{x: {$gte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThanOrEqual_Typed,The following statement contains a magic number: Assert(subject.Gte(x => x.Age' 10)' "{age: {$gte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,GreaterThanOrEqual_Typed,The following statement contains a magic number: Assert(subject.Gte("Age"' 10)' "{age: {$gte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In,The following statement contains a magic number: Assert(subject.In("x"' new[] { 10' 20 })' "{x: {$in: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In,The following statement contains a magic number: Assert(subject.In("x"' new[] { 10' 20 })' "{x: {$in: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In,The following statement contains a magic number: Assert(subject.AnyIn("x"' new[] { 10' 20 })' "{x: {$in: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In,The following statement contains a magic number: Assert(subject.AnyIn("x"' new[] { 10' 20 })' "{x: {$in: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In_Typed,The following statement contains a magic number: Assert(subject.In(x => x.Age' new[] { 10' 20 })' "{age: {$in: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In_Typed,The following statement contains a magic number: Assert(subject.In(x => x.Age' new[] { 10' 20 })' "{age: {$in: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In_Typed,The following statement contains a magic number: Assert(subject.In("Age"' new[] { 10' 20 })' "{age: {$in: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,In_Typed,The following statement contains a magic number: Assert(subject.In("Age"' new[] { 10' 20 })' "{age: {$in: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,JsonSchema,The following statement contains a magic number: Assert(subject.JsonSchema(new BsonDocument                  {                      { "bsonType"' "object" }'                      { "properties"' new BsonDocument("x"' new BsonDocument                          {                              { "type" ' "number" }'                              { "minimum"' 2 }                          })                      }                  })'                  "{ $jsonSchema : { bsonType : \"object\"' properties : { x : { type : \"number\"' minimum : 2 } } } }");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lt,The following statement contains a magic number: Assert(subject.Lt("x"' 10)' "{x: {$lt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lt,The following statement contains a magic number: Assert(subject.AnyLt("x"' 10)' "{x: {$lt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lt_Typed,The following statement contains a magic number: Assert(subject.Lt(x => x.Age' 10)' "{age: {$lt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lt_Typed,The following statement contains a magic number: Assert(subject.Lt("Age"' 10)' "{age: {$lt: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lte,The following statement contains a magic number: Assert(subject.Lte("x"' 10)' "{x: {$lte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lte,The following statement contains a magic number: Assert(subject.AnyLte("x"' 10)' "{x: {$lte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lte_Typed,The following statement contains a magic number: Assert(subject.Lte(x => x.Age' 10)' "{age: {$lte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Lte_Typed,The following statement contains a magic number: Assert(subject.Lte("Age"' 10)' "{age: {$lte: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod,The following statement contains a magic number: Assert(subject.Mod("x"' 10' 4)' "{x: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod,The following statement contains a magic number: Assert(subject.Mod("x"' 10' 4)' "{x: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod(x => x.Age' 10' 4)' "{age: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod(x => x.Age' 10' 4)' "{age: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod("Age"' 10' 4)' "{age: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod("Age"' 10' 4)' "{age: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod(x => x.FavoriteColors' 10' 4)' "{colors: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod(x => x.FavoriteColors' 10' 4)' "{colors: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod("FavoriteColors"' 10' 4)' "{colors: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Mod_Typed,The following statement contains a magic number: Assert(subject.Mod("FavoriteColors"' 10' 4)' "{colors: {$mod: [NumberLong(10)' NumberLong(4)]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Ne,The following statement contains a magic number: Assert(subject.Ne("x"' 10)' "{x: {$ne: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Ne,The following statement contains a magic number: Assert(subject.AnyNe("x"' 10)' "{x: {$ne: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Ne_Typed,The following statement contains a magic number: Assert(subject.Ne(x => x.Age' 10)' "{age: {$ne: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Ne_Typed,The following statement contains a magic number: Assert(subject.Ne("Age"' 10)' "{age: {$ne: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Near,The following statement contains a magic number: var filter = subject.Near("x"' 40' 18' maxDistance' minDistance);
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Near,The following statement contains a magic number: var filter = subject.Near("x"' 40' 18' maxDistance' minDistance);
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Near_with_GeoJson,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Near_with_GeoJson,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,NearSphere,The following statement contains a magic number: var filter = subject.NearSphere("x"' 40' 18' maxDistance' minDistance);
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,NearSphere,The following statement contains a magic number: var filter = subject.NearSphere("x"' 40' 18' maxDistance' minDistance);
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,NearSphere_with_GeoJson,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,NearSphere_with_GeoJson,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Geographic(40' 18));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin,The following statement contains a magic number: Assert(subject.Nin("x"' new[] { 10' 20 })' "{x: {$nin: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin,The following statement contains a magic number: Assert(subject.Nin("x"' new[] { 10' 20 })' "{x: {$nin: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin,The following statement contains a magic number: Assert(subject.AnyNin("x"' new[] { 10' 20 })' "{x: {$nin: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin,The following statement contains a magic number: Assert(subject.AnyNin("x"' new[] { 10' 20 })' "{x: {$nin: [10'20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin_Typed,The following statement contains a magic number: Assert(subject.Nin(x => x.Age' new[] { 10' 20 })' "{age: {$nin: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin_Typed,The following statement contains a magic number: Assert(subject.Nin(x => x.Age' new[] { 10' 20 })' "{age: {$nin: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin_Typed,The following statement contains a magic number: Assert(subject.Nin("Age"' new[] { 10' 20 })' "{age: {$nin: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Nin_Typed,The following statement contains a magic number: Assert(subject.Nin("Age"' new[] { 10' 20 })' "{age: {$nin: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Not_with_in,The following statement contains a magic number: var filter = subject.Not(subject.In("a"' new[] { 10' 20 }));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Not_with_in,The following statement contains a magic number: var filter = subject.Not(subject.In("a"' new[] { 10' 20 }));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Not_with_not_in,The following statement contains a magic number: var filter = subject.Not(subject.AnyNin("a"' new[] { 10' 20 }));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Not_with_not_in,The following statement contains a magic number: var filter = subject.Not(subject.AnyNin("a"' new[] { 10' 20 }));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The following statement contains a magic number: Assert(subject.OfType<Animal' Cat>("favoritePet"' Builders<Cat>.Filter.Eq(c => c.LivesLeft' 9))' "{ \"favoritePet._t\" : \"Cat\"' \"favoritePet.livesLeft\" : 9 }");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The following statement contains a magic number: Assert(subject.OfType<Animal' Cat>(p => p.FavoritePet' c => c.LivesLeft == 9)' "{ \"favoritePet._t\" : \"Cat\"' \"favoritePet.livesLeft\" : 9 }");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,OfType_Typed,The following statement contains a magic number: var animalFilter = Builders<Person>.Filter.Or(                  subject.OfType<Animal' Cat>(p => p.FavoritePet' c => c.LivesLeft == 9)'                  subject.OfType<Animal' Dog>(p => p.FavoritePet' d => d.IsLapDog));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Or,The following statement contains a magic number: var filter = subject.Or(                  "{a: 1}"'                  new BsonDocument("b"' 2));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Or_should_flatten_nested_ors,The following statement contains a magic number: var filter = subject.Or(                  "{$or: [{a: 1}' {b: 2}]}"'                  new BsonDocument("c"' 3));
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Or_should_flatten_nested_ors_with_a_pipe,The following statement contains a magic number: var filter = subject.Eq("a"' 1) | "{b: 2}" | new BsonDocument("c"' 3);
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Size,The following statement contains a magic number: Assert(subject.Size("x"' 10)' "{x: {$size: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Size_Typed,The following statement contains a magic number: Assert(subject.Size(x => x.FavoriteColors' 10)' "{colors: {$size: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Size_Typed,The following statement contains a magic number: Assert(subject.Size("FavoriteColors"' 10)' "{colors: {$size: 10}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,SizeGt,The following statement contains a magic number: Assert(subject.SizeGt("x"' 10)' "{'x.10': {$exists: true}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,SizeGt_Typed,The following statement contains a magic number: Assert(subject.SizeGt(x => x.FavoriteColors' 10)' "{'colors.10': {$exists: true}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,SizeGt_Typed,The following statement contains a magic number: Assert(subject.SizeGt("FavoriteColors"' 10)' "{'colors.10': {$exists: true}}");
Magic Number,MongoDB.Driver.Tests,FilterDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,Generic_type_constraint_causing_base_class_conversion,The following statement contains a magic number: var filter = TypeConstrainedFilter<Twin>(21);
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt32Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt32Field { Id = 1' X = 0U }'                  new DocumentWithUInt32Field { Id = 2' X = 1U }'                  new DocumentWithUInt32Field { Id = 3' X = 0x7fffffffU }'                  new DocumentWithUInt32Field { Id = 4' X = 0x80000000U }'                  new DocumentWithUInt32Field { Id = 5' X = 0x80000001U }'                  new DocumentWithUInt32Field { Id = 6' X = 0xfffffffeU }'                  new DocumentWithUInt32Field { Id = 7' X = 0xffffffffU }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt32Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt32Field { Id = 1' X = 0U }'                  new DocumentWithUInt32Field { Id = 2' X = 1U }'                  new DocumentWithUInt32Field { Id = 3' X = 0x7fffffffU }'                  new DocumentWithUInt32Field { Id = 4' X = 0x80000000U }'                  new DocumentWithUInt32Field { Id = 5' X = 0x80000001U }'                  new DocumentWithUInt32Field { Id = 6' X = 0xfffffffeU }'                  new DocumentWithUInt32Field { Id = 7' X = 0xffffffffU }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt32Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt32Field { Id = 1' X = 0U }'                  new DocumentWithUInt32Field { Id = 2' X = 1U }'                  new DocumentWithUInt32Field { Id = 3' X = 0x7fffffffU }'                  new DocumentWithUInt32Field { Id = 4' X = 0x80000000U }'                  new DocumentWithUInt32Field { Id = 5' X = 0x80000001U }'                  new DocumentWithUInt32Field { Id = 6' X = 0xfffffffeU }'                  new DocumentWithUInt32Field { Id = 7' X = 0xffffffffU }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt32Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt32Field { Id = 1' X = 0U }'                  new DocumentWithUInt32Field { Id = 2' X = 1U }'                  new DocumentWithUInt32Field { Id = 3' X = 0x7fffffffU }'                  new DocumentWithUInt32Field { Id = 4' X = 0x80000000U }'                  new DocumentWithUInt32Field { Id = 5' X = 0x80000001U }'                  new DocumentWithUInt32Field { Id = 6' X = 0xfffffffeU }'                  new DocumentWithUInt32Field { Id = 7' X = 0xffffffffU }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt32Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt32Field { Id = 1' X = 0U }'                  new DocumentWithUInt32Field { Id = 2' X = 1U }'                  new DocumentWithUInt32Field { Id = 3' X = 0x7fffffffU }'                  new DocumentWithUInt32Field { Id = 4' X = 0x80000000U }'                  new DocumentWithUInt32Field { Id = 5' X = 0x80000001U }'                  new DocumentWithUInt32Field { Id = 6' X = 0xfffffffeU }'                  new DocumentWithUInt32Field { Id = 7' X = 0xffffffffU }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt32Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt32Field { Id = 1' X = 0U }'                  new DocumentWithUInt32Field { Id = 2' X = 1U }'                  new DocumentWithUInt32Field { Id = 3' X = 0x7fffffffU }'                  new DocumentWithUInt32Field { Id = 4' X = 0x80000000U }'                  new DocumentWithUInt32Field { Id = 5' X = 0x80000001U }'                  new DocumentWithUInt32Field { Id = 6' X = 0xfffffffeU }'                  new DocumentWithUInt32Field { Id = 7' X = 0xffffffffU }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt64Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt64Field { Id = 1' X = 0UL }'                  new DocumentWithUInt64Field { Id = 2' X = 1UL }'                  new DocumentWithUInt64Field { Id = 3' X = 0x7fffffffffffffffUL }'                  new DocumentWithUInt64Field { Id = 4' X = 0x8000000000000000UL }'                  new DocumentWithUInt64Field { Id = 5' X = 0x8000000000000001UL }'                  new DocumentWithUInt64Field { Id = 6' X = 0xfffffffffffffffeUL }'                  new DocumentWithUInt64Field { Id = 7' X = 0xffffffffffffffffUL }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt64Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt64Field { Id = 1' X = 0UL }'                  new DocumentWithUInt64Field { Id = 2' X = 1UL }'                  new DocumentWithUInt64Field { Id = 3' X = 0x7fffffffffffffffUL }'                  new DocumentWithUInt64Field { Id = 4' X = 0x8000000000000000UL }'                  new DocumentWithUInt64Field { Id = 5' X = 0x8000000000000001UL }'                  new DocumentWithUInt64Field { Id = 6' X = 0xfffffffffffffffeUL }'                  new DocumentWithUInt64Field { Id = 7' X = 0xffffffffffffffffUL }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt64Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt64Field { Id = 1' X = 0UL }'                  new DocumentWithUInt64Field { Id = 2' X = 1UL }'                  new DocumentWithUInt64Field { Id = 3' X = 0x7fffffffffffffffUL }'                  new DocumentWithUInt64Field { Id = 4' X = 0x8000000000000000UL }'                  new DocumentWithUInt64Field { Id = 5' X = 0x8000000000000001UL }'                  new DocumentWithUInt64Field { Id = 6' X = 0xfffffffffffffffeUL }'                  new DocumentWithUInt64Field { Id = 7' X = 0xffffffffffffffffUL }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt64Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt64Field { Id = 1' X = 0UL }'                  new DocumentWithUInt64Field { Id = 2' X = 1UL }'                  new DocumentWithUInt64Field { Id = 3' X = 0x7fffffffffffffffUL }'                  new DocumentWithUInt64Field { Id = 4' X = 0x8000000000000000UL }'                  new DocumentWithUInt64Field { Id = 5' X = 0x8000000000000001UL }'                  new DocumentWithUInt64Field { Id = 6' X = 0xfffffffffffffffeUL }'                  new DocumentWithUInt64Field { Id = 7' X = 0xffffffffffffffffUL }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt64Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt64Field { Id = 1' X = 0UL }'                  new DocumentWithUInt64Field { Id = 2' X = 1UL }'                  new DocumentWithUInt64Field { Id = 3' X = 0x7fffffffffffffffUL }'                  new DocumentWithUInt64Field { Id = 4' X = 0x8000000000000000UL }'                  new DocumentWithUInt64Field { Id = 5' X = 0x8000000000000001UL }'                  new DocumentWithUInt64Field { Id = 6' X = 0xfffffffffffffffeUL }'                  new DocumentWithUInt64Field { Id = 7' X = 0xffffffffffffffffUL }              });
Magic Number,MongoDB.Driver.Tests,FieldDefinitionBuilderUInt64Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FilterDefinitionBuilderTests.cs,CreateTestData,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new DocumentWithUInt64Field { Id = 1' X = 0UL }'                  new DocumentWithUInt64Field { Id = 2' X = 1UL }'                  new DocumentWithUInt64Field { Id = 3' X = 0x7fffffffffffffffUL }'                  new DocumentWithUInt64Field { Id = 4' X = 0x8000000000000000UL }'                  new DocumentWithUInt64Field { Id = 5' X = 0x8000000000000001UL }'                  new DocumentWithUInt64Field { Id = 6' X = 0xfffffffffffffffeUL }'                  new DocumentWithUInt64Field { Id = 7' X = 0xffffffffffffffffUL }              });
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,Count_should_call_collection_Count,The following statement contains a magic number: var findOptions = new FindOptions<Person>              {                  Collation = new Collation("en-us")'                  Limit = 1'                  MaxTime = TimeSpan.FromSeconds(2)'  #pragma warning disable 618                  Modifiers = new BsonDocument("$hint"' hint)'  #pragma warning restore 618                  Skip = 3              };
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,Count_should_call_collection_Count,The following statement contains a magic number: var findOptions = new FindOptions<Person>              {                  Collation = new Collation("en-us")'                  Limit = 1'                  MaxTime = TimeSpan.FromSeconds(2)'  #pragma warning disable 618                  Modifiers = new BsonDocument("$hint"' hint)'  #pragma warning restore 618                  Skip = 3              };
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,CountDocuments_should_call_collection_CountDocuments,The following statement contains a magic number: var findOptions = new FindOptions<Person>              {                  Collation = new Collation("en-us")'                  Limit = 1'                  MaxTime = TimeSpan.FromSeconds(2)'  #pragma warning disable 618                  Modifiers = new BsonDocument("$hint"' hint)'  #pragma warning restore 618                  Skip = 3              };
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,CountDocuments_should_call_collection_CountDocuments,The following statement contains a magic number: var findOptions = new FindOptions<Person>              {                  Collation = new Collation("en-us")'                  Limit = 1'                  MaxTime = TimeSpan.FromSeconds(2)'  #pragma warning disable 618                  Modifiers = new BsonDocument("$hint"' hint)'  #pragma warning restore 618                  Skip = 3              };
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,ToString_should_return_the_correct_string,The following statement contains a magic number: subject.Filter = new BsonDocument("Age"' 20);
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,ToString_should_return_the_correct_string,The following statement contains a magic number: subject.Options.Max = new BsonDocument("max"' 5);
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,ToString_should_return_the_correct_string,The following statement contains a magic number: subject.Options.MaxTime = TimeSpan.FromSeconds(2);
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,ToString_should_return_the_correct_string,The following statement contains a magic number: subject.Options.Min = new BsonDocument("min"' 2);
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,ToString_should_return_the_correct_string,The following statement contains a magic number: var find = subject                  .SortBy(x => x.LastName)                  .ThenByDescending(x => x.FirstName)                  .Skip(2)                  .Limit(10)                  .Project(x => x.FirstName + " " + x.LastName);
Magic Number,MongoDB.Driver.Tests,FindFluentTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\FindFluentTests.cs,ToString_should_return_the_correct_string,The following statement contains a magic number: var find = subject                  .SortBy(x => x.LastName)                  .ThenByDescending(x => x.FirstName)                  .Skip(2)                  .Limit(10)                  .Project(x => x.FirstName + " " + x.LastName);
Magic Number,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Match_should_generate_the_correct_match,The following statement contains a magic number: var subject = CreateSubject()                  .Match(x => x.Age > 20);
Magic Number,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,Single_should_add_limit_and_call_ToCursor,The following statement contains a magic number: mockSubject1.Setup(s => s.Limit(2)).Returns(mockSubject2.Object);
Magic Number,MongoDB.Driver.Tests,IAggregateFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IAggregateFluentExtensionsTests.cs,SingleOrDefault_should_add_limit_and_call_ToCursor,The following statement contains a magic number: mockSubject1.Setup(s => s.Limit(2)).Returns(mockSubject2.Object);
Magic Number,MongoDB.Driver.Tests,IFindFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IFindFluentExtensionsTests.cs,Single_should_add_limit_and_call_ToCursor,The following statement contains a magic number: mockSubject1.Setup(s => s.Limit(2)).Returns(mockSubject2.Object);
Magic Number,MongoDB.Driver.Tests,IFindFluentExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IFindFluentExtensionsTests.cs,SingleOrDefault_should_add_limit_and_call_ToCursor,The following statement contains a magic number: mockSubject1.Setup(s => s.Limit(2)).Returns(mockSubject2.Object);
Magic Number,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Find_should_return_expected_result,The following statement contains a magic number: var options = new FindOptions              {                  AllowPartialResults = true'                  BatchSize = 123'                  Collation = new Collation("en-us")'                  Comment = "comment"'                  CursorType = CursorType.Tailable'                  MaxAwaitTime = TimeSpan.FromSeconds(1)'                  MaxTime = TimeSpan.FromSeconds(2)'  #pragma warning disable 618                  Modifiers = new BsonDocument("modifier"' 1)'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true              };
Magic Number,MongoDB.Driver.Tests,IMongoCollectionExtensionsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\IMongoCollectionExtensionsTests.cs,Find_should_return_expected_result,The following statement contains a magic number: var options = new FindOptions              {                  AllowPartialResults = true'                  BatchSize = 123'                  Collation = new Collation("en-us")'                  Comment = "comment"'                  CursorType = CursorType.Tailable'                  MaxAwaitTime = TimeSpan.FromSeconds(1)'                  MaxTime = TimeSpan.FromSeconds(2)'  #pragma warning disable 618                  Modifiers = new BsonDocument("modifier"' 1)'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true              };
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,OneTimeSetup,The following statement contains a magic number: __connectionId = new ConnectionId(new ServerId(new ClusterId(1)' new DnsEndPoint("localhost"' 27017))' 2);
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,OneTimeSetup,The following statement contains a magic number: __connectionId = new ConnectionId(new ServerId(new ClusterId(1)' new DnsEndPoint("localhost"' 27017))' 2);
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,OneTimeSetup,The following statement contains a magic number: __writeConcernError = new WriteConcernError(11' null' "funny"' new BsonDocument("c"' 1));
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,OneTimeSetup,The following statement contains a magic number: __writeErrors = new[] { new BulkWriteError(10' ServerErrorCategory.Uncategorized' 1' "blah"' new BsonDocument("a"' 1)) };
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,FromCore_should_convert_from_core_exception_with_a_write_concern_error_when_original_models_exists,The following statement contains a magic number: var exception = new MongoBulkWriteOperationException(                  __connectionId'                  result: new BulkWriteOperationResult.Acknowledged(                      requestCount: 1'                      matchedCount: 1'                      deletedCount: 0'                      insertedCount: 0'                      modifiedCount: 0'                      processedRequests: new[] { new InsertRequest(new BsonDocument("b"' 1)) { CorrelationId = 1 } }'                      upserts: new List<BulkWriteOperationUpsert>())'                  writeErrors: new[] { new BulkWriteOperationError(10' 1' "blah"' new BsonDocument("a"' 1)) }'                  writeConcernError: new BulkWriteConcernError(11' "funny"' new BsonDocument("c"' 1))'                  unprocessedRequests: new[] { new InsertRequest(new BsonDocument("a"' 1)) { CorrelationId = 0 } });
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,FromCore_should_convert_from_core_exception_with_a_write_concern_error_when_original_models_exists,The following statement contains a magic number: var exception = new MongoBulkWriteOperationException(                  __connectionId'                  result: new BulkWriteOperationResult.Acknowledged(                      requestCount: 1'                      matchedCount: 1'                      deletedCount: 0'                      insertedCount: 0'                      modifiedCount: 0'                      processedRequests: new[] { new InsertRequest(new BsonDocument("b"' 1)) { CorrelationId = 1 } }'                      upserts: new List<BulkWriteOperationUpsert>())'                  writeErrors: new[] { new BulkWriteOperationError(10' 1' "blah"' new BsonDocument("a"' 1)) }'                  writeConcernError: new BulkWriteConcernError(11' "funny"' new BsonDocument("c"' 1))'                  unprocessedRequests: new[] { new InsertRequest(new BsonDocument("a"' 1)) { CorrelationId = 0 } });
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,FromCore_should_convert_from_core_exception_with_a_write_concern_error_when_original_models_do_not_exist,The following statement contains a magic number: var exception = new MongoBulkWriteOperationException(                  __connectionId'                  result: new BulkWriteOperationResult.Acknowledged(                      requestCount: 1'                      matchedCount: 1'                      deletedCount: 0'                      insertedCount: 0'                      modifiedCount: 0'                      processedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("b"' 1))) { CorrelationId = 1 } }'                      upserts: new List<BulkWriteOperationUpsert>())'                  writeErrors: new[] { new BulkWriteOperationError(10' 1' "blah"' new BsonDocument("a"' 1)) }'                  writeConcernError: new BulkWriteConcernError(11' "funny"' new BsonDocument("c"' 1))'                  unprocessedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("a"' 1))) { CorrelationId = 0 } });
Magic Number,MongoDB.Driver.Tests,MongoBulkWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoBulkWriteExceptionTests.cs,FromCore_should_convert_from_core_exception_with_a_write_concern_error_when_original_models_do_not_exist,The following statement contains a magic number: var exception = new MongoBulkWriteOperationException(                  __connectionId'                  result: new BulkWriteOperationResult.Acknowledged(                      requestCount: 1'                      matchedCount: 1'                      deletedCount: 0'                      insertedCount: 0'                      modifiedCount: 0'                      processedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("b"' 1))) { CorrelationId = 1 } }'                      upserts: new List<BulkWriteOperationUpsert>())'                  writeErrors: new[] { new BulkWriteOperationError(10' 1' "blah"' new BsonDocument("a"' 1)) }'                  writeConcernError: new BulkWriteConcernError(11' "funny"' new BsonDocument("c"' 1))'                  unprocessedRequests: new[] { new InsertRequest(new BsonDocumentWrapper(new BsonDocument("a"' 1))) { CorrelationId = 0 } });
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestApplicationName_too_long,The following statement contains a magic number: var value = new string('x'' 129);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestConnectTimeout,The following statement contains a magic number: var connectTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestConnectTimeout,The following statement contains a magic number: var connectTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.ConnectTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.ConnectTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.HeartbeatInterval = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.HeartbeatInterval = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.HeartbeatTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.HeartbeatTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.LocalThreshold = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.LocalThreshold = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.MaxConnectionIdleTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.MaxConnectionIdleTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.MaxConnectionLifeTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.MaxConnectionLifeTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.ServerSelectionTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.ServerSelectionTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.SocketTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.SocketTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.WaitQueueTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestEquals,The following statement contains a magic number: clone.WaitQueueTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestHeartbeatInterval,The following statement contains a magic number: var heartbeatInterval = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestHeartbeatInterval,The following statement contains a magic number: var heartbeatInterval = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestHeartbeatTimeout,The following statement contains a magic number: var heartbeatTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestHeartbeatTimeout,The following statement contains a magic number: var heartbeatTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestLocalThreshold,The following statement contains a magic number: var localThreshold = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestLocalThreshold,The following statement contains a magic number: var localThreshold = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestMaxConnectionIdleTime,The following statement contains a magic number: var maxConnectionIdleTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestMaxConnectionIdleTime,The following statement contains a magic number: var maxConnectionIdleTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestMaxConnectionLifeTime,The following statement contains a magic number: var maxConnectionLifeTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestMaxConnectionLifeTime,The following statement contains a magic number: var maxConnectionLifeTime = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestMaxConnectionPoolSize,The following statement contains a magic number: var maxConnectionPoolSize = 123;
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestMinConnectionPoolSize,The following statement contains a magic number: var minConnectionPoolSize = 123;
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestSocketConfigurator,The following statement contains a magic number: SpinWait.SpinUntil(() => subject.Cluster.Description.State == ClusterState.Connected' TimeSpan.FromSeconds(5)).Should().BeTrue();
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestServerSelectionTimeout,The following statement contains a magic number: var serverSelectionTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestServerSelectionTimeout,The following statement contains a magic number: var serverSelectionTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestSocketTimeout,The following statement contains a magic number: var socketTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestSocketTimeout,The following statement contains a magic number: var socketTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestWaitQueueSize,The following statement contains a magic number: var waitQueueSize = 123;
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestWaitQueueTimeout,The following statement contains a magic number: var waitQueueTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,TestWaitQueueTimeout,The following statement contains a magic number: var waitQueueTimeout = new TimeSpan(1' 2' 3);
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientSettingsTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientSettingsTests.cs,ToClusterKey_should_copy_relevant_values,The following statement contains a magic number: var subject = new MongoClientSettings              {                  AllowInsecureTls = false'                  ApplicationName = "app"'                  ClusterConfigurator = clusterConfigurator'                  ConnectionMode = ConnectionMode.Direct'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  Credential = credential'                  GuidRepresentation = GuidRepresentation.Standard'                  HeartbeatInterval = TimeSpan.FromSeconds(7)'                  HeartbeatTimeout = TimeSpan.FromSeconds(8)'                  IPv6 = true'                  LocalThreshold = TimeSpan.FromMilliseconds(20)'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 10'                  MinConnectionPoolSize = 5'                  ReplicaSetName = "rs"'                  Scheme = ConnectionStringScheme.MongoDB'                  SdamLogFilename = "pokédex"'                  Servers = servers'                  ServerSelectionTimeout = TimeSpan.FromSeconds(6)'                  SocketTimeout = TimeSpan.FromSeconds(4)'                  SslSettings = sslSettings'                  UseTls = true'  #pragma warning disable 618                  WaitQueueSize = 20'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(5)              };
Magic Number,MongoDB.Driver.Tests,MongoClientTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,Watch_should_invoke_the_correct_operation,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,MongoClientTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,Watch_should_invoke_the_correct_operation,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,MongoClientTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,Watch_should_invoke_the_correct_operation,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver.Tests,MongoClientTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,WithWriteConcern_should_return_expected_result,The following statement contains a magic number: var originalWriteConcern = new WriteConcern(2);
Magic Number,MongoDB.Driver.Tests,MongoClientTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoClientTests.cs,WithWriteConcern_should_return_expected_result,The following statement contains a magic number: var newWriteConcern = new WriteConcern(3);
Magic Number,MongoDB.Driver.Tests,MongoCredentialTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCredentialTests.cs,TestMechanismProperty,The following statement contains a magic number: var withProperties = credential                  .WithMechanismProperty("SPN"' "awesome")                  .WithMechanismProperty("OTHER"' 10);
Magic Number,MongoDB.Driver.Tests,MongoCredentialTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCredentialTests.cs,TestMechanismProperty,The following statement contains a magic number: Assert.Equal(10' withProperties.GetMechanismProperty<int>("OTHER"' 0));
Magic Number,MongoDB.Driver.Tests,MongoDBRefTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDBRefTests.cs,TestDocumentRefId,The following statement contains a magic number: var refId = new BsonDocument { { "x"' 1 }' { "y"' 2 } };
Magic Number,MongoDB.Driver.Tests,MongoDBRefTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDBRefTests.cs,TestEqualsWithDatabase,The following statement contains a magic number: var d = new MongoDBRef("d"' "c"' 2);
Magic Number,MongoDB.Driver.Tests,MongoDBRefTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDBRefTests.cs,TestEqualsWithoutDatabase,The following statement contains a magic number: var c = new MongoDBRef("c"' 2);
Magic Number,MongoDB.Driver.Tests,MongoDBRefTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDBRefTests.cs,TestInt64RefId,The following statement contains a magic number: var dbRef = new MongoDBRef("collection"' 123456789012345L);
Magic Number,MongoDB.Driver.Tests,MongoServerAddressTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoServerAddressTests.cs,TestConstructor_with_host,The following statement contains a magic number: Assert.Equal(27017' address.Port);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var readPreference = new ReadPreference(ReadPreferenceMode.Secondary' new[] { new TagSet(new[] { new Tag("dc"' "1") }) }' TimeSpan.FromSeconds(11));
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: zlibCompressor.Properties.Add("Level"' 4);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromMinutes(1)'                  HeartbeatTimeout = TimeSpan.FromMinutes(2)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'  #pragma warning disable 618                  UseSsl = true'  #pragma warning restore 618                  UseTls = true'  #pragma warning disable 618                  VerifySslCertificate = false'  #pragma warning restore 618                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(123' builder.ComputedWaitQueueSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Contains(                      builder.Compressors'                      x => x.Type == CompressorType.Zlib && x.Properties.ContainsKey("Level") && (int)x.Properties["Level"] == 4);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMinutes(2)' builder.HeartbeatTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(2)' builder.MaxConnectionIdleTime);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(3)' builder.MaxConnectionLifeTime);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(4' builder.MaxConnectionPoolSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(5' builder.MinConnectionPoolSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(6)' builder.LocalThreshold);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(new MongoServerAddress("host"' 27017)' builder.Server);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(10)' builder.ServerSelectionTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(7)' builder.SocketTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(2' ((WriteConcern.WCount)builder.W).Value);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(123' builder.WaitQueueSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(8)' builder.WaitQueueTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(9)' builder.WTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestApplicationName_too_long,The following statement contains a magic number: var value = new string('x'' 129);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingMultiple,The following statement contains a magic number: var built = new MongoUrlBuilder { Server = _localhost' MaxConnectionPoolSize = 123' WaitQueueMultiple = 2.0 };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingMultiple,The following statement contains a magic number: var built = new MongoUrlBuilder { Server = _localhost' MaxConnectionPoolSize = 123' WaitQueueMultiple = 2.0 };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingMultiple,The following statement contains a magic number: Assert.Equal(123' builder.MaxConnectionPoolSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingMultiple,The following statement contains a magic number: Assert.Equal(2.0' builder.WaitQueueMultiple);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingMultiple,The following statement contains a magic number: Assert.Equal(246' builder.ComputedWaitQueueSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingSize,The following statement contains a magic number: var built = new MongoUrlBuilder { Server = _localhost' WaitQueueSize = 123 };
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingSize,The following statement contains a magic number: Assert.Equal(123' builder.WaitQueueSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestComputedWaitQueueSize_UsingSize,The following statement contains a magic number: Assert.Equal(123' builder.ComputedWaitQueueSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestCompressors,The following statement contains a magic number: subject.Compressors = compressors                      .Select(x =>                      {                          var compression = new CompressorConfiguration(x);                          if (!string.IsNullOrWhiteSpace(compressionProperty))                          {                              var @params = compressionProperty.Split(';');                              compression.Properties.Add(@params[0]' @params[2]);                          }                          return compression;                      })                      .ToList();
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestCompressors,The following statement contains a magic number: expectedValues += $";{@params[1]}={@params[2]}";
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestHeartbeatTimeout_Range,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { builder.HeartbeatTimeout = TimeSpan.FromMilliseconds(-2); });
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestReadPreference_SecondaryWithOneTagSet,The following statement contains a magic number: Assert.Equal(2' builderTagSet1Tags.Length);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestReadPreference_SecondaryWithTwoTagSets,The following statement contains a magic number: Assert.Equal(2' builderTagSets.Length);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestReadPreference_SecondaryWithTwoTagSets,The following statement contains a magic number: Assert.Equal(2' builderTagSet1Tags.Length);
Magic Number,MongoDB.Driver.Tests,MongoUrlBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlBuilderTests.cs,TestW_Range,The following statement contains a magic number: builder.W = 2;
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var readPreference = new ReadPreference(ReadPreferenceMode.Secondary' new[] { new TagSet(new[] { new Tag("dc"' "1") }) }' TimeSpan.FromSeconds(11));
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: zlibCompressor.Properties.Add("Level"' 4);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: var built = new MongoUrlBuilder()              {                  AllowInsecureTls = true'                  ApplicationName = "app"'                  AuthenticationMechanism = "GSSAPI"'                  AuthenticationMechanismProperties = authMechanismProperties'                  AuthenticationSource = "db"'                  Compressors = new[] { zlibCompressor }'                  ConnectionMode = ConnectionMode.ReplicaSet'                  ConnectTimeout = TimeSpan.FromSeconds(1)'                  DatabaseName = "database"'                  FSync = true'                  GuidRepresentation = GuidRepresentation.PythonLegacy'                  HeartbeatInterval = TimeSpan.FromSeconds(11)'                  HeartbeatTimeout = TimeSpan.FromSeconds(12)'                  IPv6 = true'                  Journal = true'                  MaxConnectionIdleTime = TimeSpan.FromSeconds(2)'                  MaxConnectionLifeTime = TimeSpan.FromSeconds(3)'                  MaxConnectionPoolSize = 4'                  MinConnectionPoolSize = 5'                  Password = "password"'                  ReadConcernLevel = ReadConcernLevel.Majority'                  ReadPreference = readPreference'                  ReplicaSetName = "name"'                  RetryReads = false'                  RetryWrites = true'                  LocalThreshold = TimeSpan.FromSeconds(6)'                  Server = new MongoServerAddress("host")'                  ServerSelectionTimeout = TimeSpan.FromSeconds(10)'                  SocketTimeout = TimeSpan.FromSeconds(7)'                  Username = "username"'                  UseTls = true'                  W = 2'  #pragma warning disable 618                  WaitQueueSize = 123'  #pragma warning restore 618                  WaitQueueTimeout = TimeSpan.FromSeconds(8)'                  WTimeout = TimeSpan.FromSeconds(9)              };
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(123' url.ComputedWaitQueueSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(11)' url.HeartbeatInterval);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(12)' url.HeartbeatTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(2)' url.MaxConnectionIdleTime);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(3)' url.MaxConnectionLifeTime);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(4' url.MaxConnectionPoolSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(5' url.MinConnectionPoolSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(6)' url.LocalThreshold);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(new MongoServerAddress("host"' 27017)' url.Server);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(10)' url.ServerSelectionTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(7)' url.SocketTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(2' ((WriteConcern.WCount)url.W).Value);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(123' url.WaitQueueSize);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(8)' url.WaitQueueTimeout);
Magic Number,MongoDB.Driver.Tests,MongoUrlTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoUrlTests.cs,TestAll,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(9)' url.WTimeout);
Magic Number,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,OneTimeSetup,The following statement contains a magic number: __connectionId = new ConnectionId(new ServerId(new ClusterId(1)' new DnsEndPoint("localhost"' 27017))' 2);
Magic Number,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,OneTimeSetup,The following statement contains a magic number: __connectionId = new ConnectionId(new ServerId(new ClusterId(1)' new DnsEndPoint("localhost"' 27017))' 2);
Magic Number,MongoDB.Driver.Tests,MongoWriteExceptionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoWriteExceptionTests.cs,FromBulkWriteException_should_return_expected_result,The following statement contains a magic number: var writeErrors = new[] { new BulkWriteError(1' ServerErrorCategory.Uncategorized' 2' "message"' new BsonDocument("details"' 1)) };
Magic Number,MongoDB.Driver.Tests,OfTypeMongoCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeMongoCollectionTests,The following statement contains a magic number: _providedFilter = new BsonDocument("PropB"' 4);
Magic Number,MongoDB.Driver.Tests,OfTypeMongoCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeMongoCollectionTests,The following statement contains a magic number: _expectedFilter = new BsonDocument("_t"' "B").Add("PropB"' 4);
Magic Number,MongoDB.Driver.Tests,OfTypeMongoCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,Aggregate_should_add_match_to_beginning_of_pipeline,The following statement contains a magic number: subject.AggregateAsync<B>(new[] { new BsonDocument("$skip"' 10) }' options' CancellationToken.None);
Magic Number,MongoDB.Driver.Tests,OfTypeMongoCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,FindOneAndUpdate_should_include_the_filter,The following statement contains a magic number: var update = new BsonDocument("$set"' new BsonDocument("x"' 5));
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new A { PropA = 2 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new A { PropA = 3 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new B { PropA = 4' PropB = 1 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new B { PropA = 5' PropB = 2 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new B { PropA = 5' PropB = 2 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new B { PropA = 6' PropB = 3 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new B { PropA = 6' PropB = 3 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 7' PropB = 4' PropC = 1 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 7' PropB = 4' PropC = 1 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 8' PropB = 5' PropC = 2 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 8' PropB = 5' PropC = 2 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 8' PropB = 5' PropC = 2 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 9' PropB = 6' PropC = 3 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 9' PropB = 6' PropC = 3 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,OfTypeCollectionIntegrationTests,The following statement contains a magic number: docs.Add(new C { PropA = 9' PropB = 6' PropC = 3 });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,Count_should_only_count_derived_types,The following statement contains a magic number: result1.Should().Be(6);
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,Count_should_only_count_derived_types,The following statement contains a magic number: result2.Should().Be(3);
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,Count_should_only_count_derived_types_with_a_filter,The following statement contains a magic number: result = subject.CountAsync(x => x.PropB > 2).GetAwaiter().GetResult();
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,Count_should_only_count_derived_types_with_a_filter,The following statement contains a magic number: result.Should().Be(4);
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,InsertOne_should_include_discriminator_when_document_is_of_type_B,The following statement contains a magic number: var document = new B { PropA = 10' PropB = 7 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,InsertOne_should_include_discriminator_when_document_is_of_type_B,The following statement contains a magic number: var document = new B { PropA = 10' PropB = 7 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,InsertOne_should_include_discriminator_when_document_is_of_type_C,The following statement contains a magic number: var document = new C { PropA = 11' PropB = 8' PropC = 4 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,InsertOne_should_include_discriminator_when_document_is_of_type_C,The following statement contains a magic number: var document = new C { PropA = 11' PropB = 8' PropC = 4 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,InsertOne_should_include_discriminator_when_document_is_of_type_C,The following statement contains a magic number: var document = new C { PropA = 11' PropB = 8' PropC = 4 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,ReplaceOne_should_not_match_document_of_wrong_type,The following statement contains a magic number: var repacement = new B { PropA = 10' PropB = 7 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,ReplaceOne_should_not_match_document_of_wrong_type,The following statement contains a magic number: var repacement = new B { PropA = 10' PropB = 7 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,ReplaceOne_should_match_document_of_right_type,The following statement contains a magic number: var replacement = new B { PropA = 10' PropB = 7 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,ReplaceOne_should_match_document_of_right_type,The following statement contains a magic number: var replacement = new B { PropA = 10' PropB = 7 };
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,ReplaceOne_should_match_document_of_right_type,The following statement contains a magic number: replacedB.Should().Be(new BsonDocument              {                  { "_id"' originalDocument["_id"] }'                  { "_t"' new BsonArray { "A"' "B" } }'                  { "PropA"' 10 }'                  { "PropB"' 7 }              });
Magic Number,MongoDB.Driver.Tests,OfTypeCollectionIntegrationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\OfTypeMongoCollectionTests.cs,ReplaceOne_should_match_document_of_right_type,The following statement contains a magic number: replacedB.Should().Be(new BsonDocument              {                  { "_id"' originalDocument["_id"] }'                  { "_t"' new BsonArray { "A"' "B" } }'                  { "PropA"' 10 }'                  { "PropB"' 7 }              });
Magic Number,MongoDB.Driver.Tests,PinnedShardRouterTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PinnedShardRouterTests.cs,CreateDisposableClient,The following statement contains a magic number: var client = DriverTestConfiguration.CreateDisposableClient((MongoClientSettings settings) =>                  {                      settings.ClusterConfigurator = c => c.Subscribe(eventCapturer);                      settings.LocalThreshold = TimeSpan.FromMilliseconds(1000);                  }'                   useMultipleShardRouters);
Magic Number,MongoDB.Driver.Tests,PinnedShardRouterTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PinnedShardRouterTests.cs,CreateDisposableClient,The following statement contains a magic number: var timeOut = TimeSpan.FromSeconds(60);
Magic Number,MongoDB.Driver.Tests,PinnedShardRouterTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\PinnedShardRouterTests.cs,RequireMultipleShardRouters,The following statement contains a magic number: numberOfShardRouters < 2
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice,The following statement contains a magic number: Assert(subject.Slice("a"' 10)' "{a: {$slice: 10}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_Typed,The following statement contains a magic number: Assert(subject.Slice(x => x.Pets' 10)' "{pets: {$slice: 10}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_Typed,The following statement contains a magic number: Assert(subject.Slice("Pets"' 10)' "{pets: {$slice: 10}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_with_limit,The following statement contains a magic number: Assert(subject.Slice("a"' 10' 20)' "{a: {$slice: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_with_limit,The following statement contains a magic number: Assert(subject.Slice("a"' 10' 20)' "{a: {$slice: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_Typed_with_limit,The following statement contains a magic number: Assert(subject.Slice(x => x.Pets' 10' 20)' "{pets: {$slice: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_Typed_with_limit,The following statement contains a magic number: Assert(subject.Slice(x => x.Pets' 10' 20)' "{pets: {$slice: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_Typed_with_limit,The following statement contains a magic number: Assert(subject.Slice("Pets"' 10' 20)' "{pets: {$slice: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,ProjectionDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ProjectionDefinitionBuilderTests.cs,Slice_Typed_with_limit,The following statement contains a magic number: Assert(subject.Slice("Pets"' 10' 20)' "{pets: {$slice: [10' 20]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSet,The following statement contains a magic number: Assert(subject.AddToSet("a"' new[] { 1' 2 })' "{$addToSet: {a: [1' 2]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSetEach,The following statement contains a magic number: Assert(subject.AddToSetEach("a"' new[] { 1' 2 })' "{$addToSet: {a: {$each: [1' 2]}}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSetEach,The following statement contains a magic number: Assert(subject.AddToSetEach("a"' new[] { new[] { 1' 2 }' new[] { 3' 4 } })' "{$addToSet: {a: {$each: [[1' 2]' [3' 4]]}}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSetEach,The following statement contains a magic number: Assert(subject.AddToSetEach("a"' new[] { new[] { 1' 2 }' new[] { 3' 4 } })' "{$addToSet: {a: {$each: [[1' 2]' [3' 4]]}}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,AddToSetEach,The following statement contains a magic number: Assert(subject.AddToSetEach("a"' new[] { new[] { 1' 2 }' new[] { 3' 4 } })' "{$addToSet: {a: {$each: [[1' 2]' [3' 4]]}}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Combine_with_overlapping_operators_and_duplicate_elements_using_extension_methods,The following statement contains a magic number: var update = subject.Set("a"' 1).Set("b"' 2).Set("a"' 4);
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Combine_with_overlapping_operators_and_duplicate_elements_using_extension_methods,The following statement contains a magic number: var update = subject.Set("a"' 1).Set("b"' 2).Set("a"' 4);
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Incorrect_index_should_throw_expected_exception_with_set,The following statement contains a magic number: AssertThrow<Person' IndexOutOfRangeException>(subject.Set(x => x.FavoriteColors[-2]' "yellow")' expectedErrorMessage);
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Incorrect_index_should_throw_expected_exception_with_set,The following statement contains a magic number: AssertThrow<Person' IndexOutOfRangeException>(subject.Set(x => x.Pets[-2].Name' "Fluffencutters")' expectedErrorMessage);
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Incorrect_index_should_throw_expected_exception_with_set,The following statement contains a magic number: AssertThrow<Person' IndexOutOfRangeException>(subject.Set(x => x.Pets.ElementAt(-2).Name' "Fluffencutters")' expectedErrorMessage);
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Indexed_Typed,The following statement contains a magic number: Assert(subject.Set(x => x.FavoriteColors[2]' "yellow")' "{$set: {'colors.2': 'yellow'}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Indexed_Typed,The following statement contains a magic number: Assert(subject.Set(x => x.Pets[2].Name' "Fluffencutters")' "{$set: {'pets.2.name': 'Fluffencutters'}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Indexed_Typed,The following statement contains a magic number: Assert(subject.Set(x => x.Pets.ElementAt(2).Name' "Fluffencutters")' "{$set: {'pets.2.name': 'Fluffencutters'}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Indexed_Typed,The following statement contains a magic number: var index = 2;
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Mul,The following statement contains a magic number: Assert(subject.Mul("a"' 2)' "{$mul: {a: 2}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Mul_Typed,The following statement contains a magic number: Assert(subject.Mul(x => x.Age' 2)' "{$mul: {age: 2}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Mul_Typed,The following statement contains a magic number: Assert(subject.Mul("Age"' 2)' "{$mul: {age: 2}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Pull,The following statement contains a magic number: Assert(subject.Pull("a"' new[] { 1' 2 })' "{$pull: {a: [1' 2]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,PullAll,The following statement contains a magic number: Assert(subject.PullAll("a"' new[] { 1' 2 })' "{$pullAll: {a: [1' 2]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,PullAll,The following statement contains a magic number: Assert(subject.PullAll("a"' new[] { new[] { 1' 2 }' new[] { 3' 4 } })' "{$pullAll: {a: [[1' 2]' [3' 4]]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,PullAll,The following statement contains a magic number: Assert(subject.PullAll("a"' new[] { new[] { 1' 2 }' new[] { 3' 4 } })' "{$pullAll: {a: [[1' 2]' [3' 4]]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,PullAll,The following statement contains a magic number: Assert(subject.PullAll("a"' new[] { new[] { 1' 2 }' new[] { 3' 4 } })' "{$pullAll: {a: [[1' 2]' [3' 4]]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,Push,The following statement contains a magic number: Assert(subject.Push("a"' new[] { 1' 2 })' "{$push: {a: [1' 2]}}");
Magic Number,MongoDB.Driver.Tests,UpdateDefinitionBuilderTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\UpdateDefinitionBuilderTests.cs,PushEach,The following statement contains a magic number: Assert(subject.PushEach("a"' new[] { 1' 2 }' slice' position' sort)' expectedPush);
Magic Number,MongoDB.Driver.Tests,WriteModelTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\WriteModelTests.cs,Should_convert_from_UpdateRequest_to_ReplaceOne_with_Class,The following statement contains a magic number: var replacement = new TestClass { a = 2 };
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson2DCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson2DCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Y);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson2DCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson2DCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Y);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson2DGeographicCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson2DGeographicCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Latitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson2DGeographicCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson2DGeographicCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Latitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson2DProjectedCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson2DProjectedCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Northing);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson2DProjectedCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson2DProjectedCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Northing);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Y);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(3.0' coordinates.Z);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Y);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(3.0' coordinates.Z);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DGeographicCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DGeographicCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Latitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DGeographicCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DGeographicCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(3.0' coordinates.Altitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DGeographicCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DGeographicCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Latitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DGeographicCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DGeographicCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(3.0' coordinates.Altitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DProjectedCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DProjectedCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Northing);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DProjectedCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DProjectedCoordinatesTests.cs,TestDeserializeDoubles,The following statement contains a magic number: Assert.Equal(3.0' coordinates.Altitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DProjectedCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DProjectedCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(2.0' coordinates.Northing);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJson3DProjectedCoordinatesTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJson3DProjectedCoordinatesTests.cs,TestDeserializeInts,The following statement contains a magic number: Assert.Equal(3.0' coordinates.Altitude);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var featureCollection = GeoJson.FeatureCollection(                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" } } }'                      GeoJson.Point(GeoJson.Position(102.0' 0.5)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' 0.0 } } }'                      GeoJson.LineString(GeoJson.Position(102.0' 0.0)' GeoJson.Position(103.0' 1.0)' GeoJson.Position(104.0' 0)' GeoJson.Position(105.0' 1.0)))'                  GeoJson.Feature(                      new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument { { "prop0"' "value0" }' { "prop1"' new BsonDocument("this"' "that") } } }'                      GeoJson.Polygon(                          GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 0.0)' GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)' GeoJson.Position(100.0' 0.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestFeatureCollectionWithExtraMembers,The following statement contains a magic number: var collection = GeoJson.FeatureCollection(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Feature(GeoJson.Point(GeoJson.Position(1.0' 2.0)))'                  GeoJson.Feature(GeoJson.Point(GeoJson.Position(3.0' 4.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestFeatureCollectionWithExtraMembers,The following statement contains a magic number: var collection = GeoJson.FeatureCollection(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Feature(GeoJson.Point(GeoJson.Position(1.0' 2.0)))'                  GeoJson.Feature(GeoJson.Point(GeoJson.Position(3.0' 4.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureCollectionTests.cs,TestFeatureCollectionWithExtraMembers,The following statement contains a magic number: var collection = GeoJson.FeatureCollection(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Feature(GeoJson.Point(GeoJson.Position(1.0' 2.0)))'                  GeoJson.Feature(GeoJson.Point(GeoJson.Position(3.0' 4.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestExampleFromSpec,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(-180.0' -90.0)' GeoJson.Position(180.0' 90.0)) }'                  GeoJson.Polygon(                      GeoJson.Position(-180.0' 10.0)'                      GeoJson.Position(20.0' 90.0)'                      GeoJson.Position(180.0' -5.0)'                      GeoJson.Position(-30.0' -90.0)'                      GeoJson.Position(-180.0' 10.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestFeatureWithId,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Id = 1 }'                  GeoJson.Point(GeoJson.Position(1.0' 2.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonFeatureTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonFeatureTests.cs,TestFeatureWithProperties,The following statement contains a magic number: var feature = GeoJson.Feature(                  new GeoJsonFeatureArgs<GeoJson2DCoordinates> { Properties = new BsonDocument("x"' 1) }'                  GeoJson.Point(GeoJson.Position(1.0' 2.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var geometryCollection = GeoJson.GeometryCollection(                  GeoJson.Point(GeoJson.Position(100.0' 0.0))'                  GeoJson.LineString(GeoJson.Position(101.0' 0.0)' GeoJson.Position(102.0' 1.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var geometryCollection = GeoJson.GeometryCollection(                  GeoJson.Point(GeoJson.Position(100.0' 0.0))'                  GeoJson.LineString(GeoJson.Position(101.0' 0.0)' GeoJson.Position(102.0' 1.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestExampleFromSpec,The following statement contains a magic number: var geometryCollection = GeoJson.GeometryCollection(                  GeoJson.Point(GeoJson.Position(100.0' 0.0))'                  GeoJson.LineString(GeoJson.Position(101.0' 0.0)' GeoJson.Position(102.0' 1.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestGeometryCollectionWithExtraMembers,The following statement contains a magic number: var geometryCollection = GeoJson.GeometryCollection(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Point(GeoJson.Position(1.0' 2.0))'                  GeoJson.Point(GeoJson.Position(3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestGeometryCollectionWithExtraMembers,The following statement contains a magic number: var geometryCollection = GeoJson.GeometryCollection(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Point(GeoJson.Position(1.0' 2.0))'                  GeoJson.Point(GeoJson.Position(3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonGeometryCollectionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonGeometryCollectionTests.cs,TestGeometryCollectionWithExtraMembers,The following statement contains a magic number: var geometryCollection = GeoJson.GeometryCollection(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Point(GeoJson.Position(1.0' 2.0))'                  GeoJson.Point(GeoJson.Position(3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 1.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 1.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson. LineString(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson. LineString(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson. LineString(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test2DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineString,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringGeographic,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringProjected,The following statement contains a magic number: var lineString = GeoJson.LineString(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonLineStringTests.cs,Test3DLineStringWithExtraMembers,The following statement contains a magic number: var lineString = GeoJson.LineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 1.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 1.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 1.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 1.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 1.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(100.0' 0.0)' GeoJson.Position(101.0' 1.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString2DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(5.0' 6.0)' GeoJson.Position(7.0' 8.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3D,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DGeographic,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DProjected,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  GeoJson.LineStringCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiLineStringTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiLineStringTests.cs,TestMultiLineString3DWithExtraMembers,The following statement contains a magic number: var multiLineString = GeoJson.MultiLineString(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.LineStringCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0))'                  GeoJson.LineStringCoordinates(GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(10.0' 11.0' 12.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 1.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 1.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint2DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3D,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DGeographic,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DProjected,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPointTests.cs,TestMultiPoint3DWithExtraMembers,The following statement contains a magic number: var multiPoint = GeoJson.MultiPoint(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestExampleFromSpec,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon<GeoJson2DCoordinates>(                  GeoJson.PolygonCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))'                      GeoJson.LinearRingCoordinates(GeoJson.Position(102.0' 2.0)' GeoJson.Position(103.0' 2.0)' GeoJson.Position(103.0' 3.0)' GeoJson.Position(102.0' 3.0)' GeoJson.Position(102.0' 2.0))));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0)' GeoJson.Geographic(3.0' 4.0)' GeoJson.Geographic(5.0' 6.0)' GeoJson.Geographic(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0)' GeoJson.Geographic(4.0' 5.0)' GeoJson.Geographic(6.0' 7.0)' GeoJson.Geographic(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0)' GeoJson.Projected(3.0' 4.0)' GeoJson.Projected(5.0' 6.0)' GeoJson.Projected(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0)' GeoJson.Projected(4.0' 5.0)' GeoJson.Projected(6.0' 7.0)' GeoJson.Projected(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon2DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)' GeoJson.Position(5.0' 6.0)' GeoJson.Position(1.0' 2.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0)' GeoJson.Position(4.0' 5.0)' GeoJson.Position(6.0' 7.0)' GeoJson.Position(2.0' 3.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3D,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DGeographic,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Geographic(1.0' 2.0' 3.0)' GeoJson.Geographic(4.0' 5.0' 6.0)' GeoJson.Geographic(7.0' 8.0' 9.0)' GeoJson.Geographic(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Geographic(2.0' 3.0' 4.0)' GeoJson.Geographic(5.0' 6.0' 7.0)' GeoJson.Geographic(8.0' 9.0' 10.0)' GeoJson.Geographic(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DProjected,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  GeoJson.PolygonCoordinates(GeoJson.Projected(1.0' 2.0' 3.0)' GeoJson.Projected(4.0' 5.0' 6.0)' GeoJson.Projected(7.0' 8.0' 9.0)' GeoJson.Projected(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Projected(2.0' 3.0' 4.0)' GeoJson.Projected(5.0' 6.0' 7.0)' GeoJson.Projected(8.0' 9.0' 10.0)' GeoJson.Projected(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonMultiPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonMultiPolygonTests.cs,TestMultiPolygon3DWithExtraMembers,The following statement contains a magic number: var multiPolygon = GeoJson.MultiPolygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.PolygonCoordinates(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)' GeoJson.Position(7.0' 8.0' 9.0)' GeoJson.Position(1.0' 2.0' 3.0))'                  GeoJson.PolygonCoordinates(GeoJson.Position(2.0' 3.0' 4.0)' GeoJson.Position(5.0' 6.0' 7.0)' GeoJson.Position(8.0' 9.0' 10.0)' GeoJson.Position(2.0' 3.0' 4.0)));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestExampleFromSpec,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestExampleFromSpec,The following statement contains a magic number: Assert.Equal(100.0' point.Coordinates.X);
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestExampleFromSpec,The following statement contains a magic number: Assert.True(new[] { 100.0' 0.0 }.SequenceEqual(point.Coordinates.Values));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2D,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DGeographic,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Geographic(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DProjected,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Projected(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)) }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)) }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)) }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0)' GeoJson.Position(3.0' 4.0)) }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithExtraMembers,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument { { "x"' 1 }' { "y"' 2 } } }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithExtraMembers,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument { { "x"' 1 }' { "y"' 2 } } }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithLinkedCoordinateReferenceSystem,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { CoordinateReferenceSystem = new GeoJsonLinkedCoordinateReferenceSystem("abc") }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithLinkedCoordinateReferenceSystemWithType,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { CoordinateReferenceSystem = new GeoJsonLinkedCoordinateReferenceSystem("abc"' "def") }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint2DWithNamedCoordinateReferenceSystem,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { CoordinateReferenceSystem = new GeoJsonNamedCoordinateReferenceSystem("abc") }'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3D,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3D,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DGeographic,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DGeographic,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DProjected,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DProjected,The following statement contains a magic number: var point = GeoJson.Point(GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPointTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPointTests.cs,TestPoint3DWithBoundingBox,The following statement contains a magic number: var point = GeoJson.Point(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { BoundingBox = GeoJson.BoundingBox(GeoJson.Position(1.0' 2.0' 3.0)' GeoJson.Position(4.0' 5.0' 6.0)) }'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecNoHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 0.0)'                  GeoJson.Position(101.0' 1.0)'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecNoHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 0.0)'                  GeoJson.Position(101.0' 1.0)'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecNoHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 0.0)'                  GeoJson.Position(101.0' 1.0)'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecNoHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(100.0' 0.0)'                  GeoJson.Position(101.0' 0.0)'                  GeoJson.Position(101.0' 1.0)'                  GeoJson.Position(100.0' 0.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestExampleFromSpecWithHoles,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.PolygonCoordinates<GeoJson2DCoordinates>(                      // exterior                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.0' 0.0)'                          GeoJson.Position(101.0' 0.0)'                          GeoJson.Position(101.0' 1.0)'                          GeoJson.Position(100.0' 1.0)'                          GeoJson.Position(100.0' 0.0)                      )'                      // holes                      GeoJson.LinearRingCoordinates(                          GeoJson.Position(100.25' 0.25)'                          GeoJson.Position(100.75' 0.25)'                          GeoJson.Position(100.75' 0.75)'                          GeoJson.Position(100.25' 0.75)'                          GeoJson.Position(100.25' 0.25)                      )                  )              );
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0)'                  GeoJson.Geographic(5.0' 6.0)'                  GeoJson.Geographic(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0)'                  GeoJson.Geographic(5.0' 6.0)'                  GeoJson.Geographic(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0)'                  GeoJson.Geographic(5.0' 6.0)'                  GeoJson.Geographic(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0)'                  GeoJson.Geographic(5.0' 6.0)'                  GeoJson.Geographic(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0)'                  GeoJson.Geographic(5.0' 6.0)'                  GeoJson.Geographic(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0)'                  GeoJson.Geographic(3.0' 4.0)'                  GeoJson.Geographic(5.0' 6.0)'                  GeoJson.Geographic(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0)'                  GeoJson.Projected(5.0' 6.0)'                  GeoJson.Projected(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0)'                  GeoJson.Projected(5.0' 6.0)'                  GeoJson.Projected(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0)'                  GeoJson.Projected(5.0' 6.0)'                  GeoJson.Projected(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0)'                  GeoJson.Projected(5.0' 6.0)'                  GeoJson.Projected(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0)'                  GeoJson.Projected(5.0' 6.0)'                  GeoJson.Projected(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0)'                  GeoJson.Projected(3.0' 4.0)'                  GeoJson.Projected(5.0' 6.0)'                  GeoJson.Projected(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon2DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson2DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0)'                  GeoJson.Position(3.0' 4.0)'                  GeoJson.Position(5.0' 6.0)'                  GeoJson.Position(1.0' 2.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3D,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DGeographic,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Geographic(1.0' 2.0' 3.0)'                  GeoJson.Geographic(4.0' 5.0' 6.0)'                  GeoJson.Geographic(7.0' 8.0' 9.0)'                  GeoJson.Geographic(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DProjected,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  GeoJson.Projected(1.0' 2.0' 3.0)'                  GeoJson.Projected(4.0' 5.0' 6.0)'                  GeoJson.Projected(7.0' 8.0' 9.0)'                  GeoJson.Projected(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.GeoJsonObjectModel,GeoJsonPolygonTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\GeoJsonObjectModel\GeoJsonPolygonTests.cs,TestPolygon3DWithExtraMembers,The following statement contains a magic number: var polygon = GeoJson.Polygon(                  new GeoJsonObjectArgs<GeoJson3DCoordinates> { ExtraMembers = new BsonDocument("x"' 1) }'                  GeoJson.Position(1.0' 2.0' 3.0)'                  GeoJson.Position(4.0' 5.0' 6.0)'                  GeoJson.Position(7.0' 8.0' 9.0)'                  GeoJson.Position(1.0' 2.0' 3.0));
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestValidKeys,The following statement contains a magic number: var c = new C { Id = 1' D = new Hashtable { { key' 2 } }' G = new Dictionary<object' int> { { key' 3 } } };
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestValidKeys,The following statement contains a magic number: var c = new C { Id = 1' D = new Hashtable { { key' 2 } }' G = new Dictionary<object' int> { { key' 3 } } };
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestValidKeys,The following statement contains a magic number: Assert.Equal(2' rehydrated.D[key]);
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestValidKeys,The following statement contains a magic number: Assert.Equal(3' rehydrated.G[key]);
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestInvalidKeys,The following statement contains a magic number: var c = new C { Id = 1' D = new Hashtable { { key' 2 } }' G = new Dictionary<object' int> { { key' 3 } } };
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestInvalidKeys,The following statement contains a magic number: var c = new C { Id = 1' D = new Hashtable { { key' 2 } }' G = new Dictionary<object' int> { { key' 3 } } };
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestKeyIsNotAString,The following statement contains a magic number: var c = new C { Id = 1' D = new Hashtable { { key' 2 } }' G = new Dictionary<object' int> { { key' 3 } } };
Magic Number,MongoDB.Driver.Tests.Jira.CSharp624,CSharp624Tests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Jira\CSharp624Tests.cs,TestKeyIsNotAString,The following statement contains a magic number: var c = new C { Id = 1' D = new Hashtable { { key' 2 } }' G = new Dictionary<object' int> { { key' 3 } } };
Magic Number,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenAssertDifferentLsidOnLastTwoCommandsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenAssertDifferentLsidOnLastTwoCommandsTest.cs,Assert,The following statement contains a magic number: var lastTwoCommands = _eventCapturer                  .Events                  .Skip(_eventCapturer.Events.Count - 2)                  .Select(commandStartedEvent => ((CommandStartedEvent)commandStartedEvent).Command)                  .ToList();
Magic Number,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenAssertSameLsidOnLastTwoCommandsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenAssertSameLsidOnLastTwoCommandsTest.cs,Assert,The following statement contains a magic number: var lastTwoCommands = _eventCapturer                  .Events                  .Skip(_eventCapturer.Events.Count - 2)                  .Select(commandStartedEvent => ((CommandStartedEvent)commandStartedEvent).Command)                  .ToList();
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertFirst,The following statement contains a magic number: var root = new Root              {                  ObjectId = ObjectId.Parse("555925bfb69aa7d5be29126b")'                  A = "Awesome"'                  B = "Balloon"'                  C = new C                  {                      D = "Dexter"'                      E = new V                      {                          F = 11'                          H = 22'                          I = new[] { "it"' "icky" }'                          W = 1111                      }'                      X = new List<E> { new E { F = 10 }' new V { W = 12 } }                  }'                  G = new[] {                          new C                          {                              D = "Don't"'                              E = new E                              {                                  F = 33'                                  H = 44'                                  I = new [] { "ignanimous"}                              }'                              S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E()                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                              }                                          }                                      }                              }'                              Ids = new [] { new ObjectId("111111111111111111111111") }'                              Y = new C                              {                                  D = "Don't"'                                  E = new E                                  {                                      F = 33'                                      H = 44'                                      I = new [] { "ignanimous"}                                  }'                                  S = new [] {                                      new C                                      {                                          D = "Delilah"'                                          Z = new []                                          {                                              new E                                              {                                                  F = 1'                                                  I = new [] { "I1"' "I2" }'                                                  C = new C                                                  {                                                      D = "D"'                                                      E = new E                                                      {                                                          C = new C                                                          {                                                              X = new []                                                              {                                                                  new E                                                                  {                                                                      F = 2                                                                  }                                                              }                                                          }                                                      }'                                                      X = new []                                                      {                                                          new E                                                          {                                                              F = 4                                                          }                                                      }                                                  }                                              }                                          }                                      }                                  }'                                  Ids = new [] { new ObjectId("111111111111111111111111") }                              }                          }'                          new C                          {                              D = "Dolphin"'                              E = new E                              {                                  F = 55'                                  H = 66'                                  I = new [] { "insecure"}                              }                          }                  }'                  Id = 10'                  J = new DateTime(2012' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = true'                  L = new HashSet<int>(new[] { 1' 3' 5 })'                  M = new[] { 2' 4' 5 }'                  O = new List<long> { 10' 20' 30 }'                  Q = Q.One'                  R = new DateTime(2013' 1' 2' 3' 4' 5' 6' DateTimeKind.Utc)'                  T = new Dictionary<string' int> { { "one"' 1 }' { "two"' 2 } }'                  U = 1.23456571661743267789m'                  V = "2017-02-08T12:10:40.787"'                  W = 8'                  X = 9'                  Y = 10'                  Z = 11              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertSecond,The following statement contains a magic number: var root = new RootDescended              {                  A = "Amazing"'                  B = "Baby"'                  C = new C                  {                      D = "Donkey Kong"'                      E = new E                      {                          F = 111'                          H = 222'                          I = new[] { "itchy" }                      }                  }'                  G = new[] {                          new C                          {                              D = "Donald"'                              E = new E                              {                                  F = 333'                                  H = 444'                                  I = new [] { "igloo" }                              }'                              X = new E[]                              {                                  new E()                                  {                                      S = "value 1"'                                      C = new C()                                      {                                          D = "value 2"'                                          Ids = new [] { new ObjectId("222222222222222222222222") }                                      }'                                      I = new [] { "value 3" }                                  }                              }                          }'                          new C                          {                              D = "Durango"'                              E = new E                              {                                  F = 555'                                  H = 666'                                  I = new [] { "icy" }                              }                          }                  }'                  Id = 20'                  J = new DateTime(2011' 12' 1' 13' 14' 15' 16' DateTimeKind.Utc)'                  K = false'                  L = new HashSet<int>(new[] { 2' 3' 4 })'                  M = new[] { 3' 5' 6 }'                  O = new List<long> { 100' 200' 300 }'                  P = 1.1'                  U = -1.234565723762724332233489m'                  Z = 10              };
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertJoin,The following statement contains a magic number: __otherCollection.InsertOne(new Other              {                  Id = 10' // will join with first                  CEF = 111 // will join with second              });
Magic Number,MongoDB.Driver.Tests.Linq,IntegrationTestBase,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\IntegrationTestBase.cs,InsertJoin,The following statement contains a magic number: __otherCollection.InsertOne(new Other              {                  Id = 10' // will join with first                  CEF = 111 // will join with second              });
Magic Number,MongoDB.Driver.Tests.Linq,MongoQueryableWithDotNotationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableWithDotNotationTests.cs,Where_with_ExtraInfo_Type_with_Value_should_render_correctly,The following statement contains a magic number: var result = subject.Where(c => c.ExtraInfo.Type.Value == 2);
Magic Number,MongoDB.Driver.Tests.Linq,MongoQueryableWithDotNotationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableWithDotNotationTests.cs,Where_with_ExtraInfo_Type_with_Value_and_nullable_variable_should_render_correctly,The following statement contains a magic number: int? infoType = 3;
Magic Number,MongoDB.Driver.Tests.Linq,MongoQueryableWithDotNotationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableWithDotNotationTests.cs,Where_with_Contains_should_render_correctly,The following statement contains a magic number: var list = new List<int>              {                  4' 5              };
Magic Number,MongoDB.Driver.Tests.Linq,MongoQueryableWithDotNotationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableWithDotNotationTests.cs,Where_with_Contains_should_render_correctly,The following statement contains a magic number: var list = new List<int>              {                  4' 5              };
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Any_with_predicate,The following statement contains a magic number: var result = CreateQuery().Any(x => x.C.E.F == 234124);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Any_with_predicate,The following statement contains a magic number: result = CreateQuery().Any(x => x.C.E.F == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,AnyAsync_with_predicate,The following statement contains a magic number: var result = await CreateQuery().AnyAsync(x => x.C.E.F == 234124);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,AnyAsync_with_predicate,The following statement contains a magic number: result = await CreateQuery().AnyAsync(x => x.C.E.F == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Average,The following statement contains a magic number: result.Should().Be(62);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Average_with_select_and_where,The following statement contains a magic number: var result = CreateQuery()                  .Select(x => x.C.E.F)                  .Where(x => x > 20)                  .Average();
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Average_with_select_and_where,The following statement contains a magic number: result.Should().Be(111);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Average_with_selector,The following statement contains a magic number: result.Should().Be(62);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,AverageAsync,The following statement contains a magic number: result.Should().Be(61);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,AverageAsync_with_selector,The following statement contains a magic number: result.Should().Be(61);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Count,The following statement contains a magic number: result.Should().Be(2);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Count_with_predicate,The following statement contains a magic number: var result = CreateQuery().Count(x => x.C.E.F == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Count_with_no_matches,The following statement contains a magic number: var result = CreateQuery().Count(x => x.C.E.F == 13151235);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,CountAsync,The following statement contains a magic number: result.Should().Be(2);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,CountAsync_with_predicate,The following statement contains a magic number: var result = await CreateQuery().CountAsync(x => x.C.E.F == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,CountAsync_with_no_matches,The following statement contains a magic number: var result = await CreateQuery().CountAsync(x => x.C.E.F == 123412523);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,First,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,First_with_predicate,The following statement contains a magic number: var result = CreateQuery().Select(x => x.C.E.F).First(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,First_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstAsync,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstAsync_with_predicate,The following statement contains a magic number: var result = await CreateQuery().Select(x => x.C.E.F).FirstAsync(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstAsync_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstOrDefault,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstOrDefault_with_predicate,The following statement contains a magic number: var result = CreateQuery().Select(x => x.C.E.F).FirstOrDefault(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstOrDefault_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstOrDefaultAsync,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstOrDefaultAsync_with_predicate,The following statement contains a magic number: var result = await CreateQuery().Select(x => x.C.E.F).FirstOrDefaultAsync(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,FirstOrDefaultAsync_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Enumerable_foreach,The following statement contains a magic number: sum.Should().Be(50);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupBy_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $group: { _id: '$A' } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Group_method_using_select,The following statement contains a magic number: Assert(query'                  2'                  "{ $group: { _id: '$A'' __agg0: { $sum: 1 }' __agg1: { $min: '$U' } } }"'                  "{ $project: { A: '$_id'' Count: '$__agg0'' Min: '$__agg1'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupBy_groupby_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $group: { _id: '$A'' __agg0: { $first: '$B'} } }"'                  "{ $group: { _id: '$__agg0' } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupBy_select_anonymous_type_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $group: { _id: '$A'' __agg0: { $first: '$B'} } }"'                  "{ $project: { Key: '$_id'' FirstB: '$__agg0'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupBy_select_anonymous_type_syntax,The following statement contains a magic number: Assert(query'                  2'                  "{ $group: { _id: '$A'' __agg0: { $first: '$B'} } }"'                  "{ $project: { Key: '$_id'' FirstB: '$__agg0'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupBy_with_resultSelector_anonymous_type_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $group: { _id: '$A'' FirstB: { $first: '$B'} } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupJoin_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $lookup: { from: 'testcollection_other'' localField: '_id'' foreignField: '_id'' as: 'o' } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupJoinForeignField_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $lookup: { from: 'testcollection_other'' localField: '_id'' foreignField: 'CEF'' as: 'o' } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupJoin_syntax,The following statement contains a magic number: Assert(query'                  2'                  "{ $lookup: { from: 'testcollection_other'' localField: '_id'' foreignField: '_id'' as: 'joined' } }"'                  "{ $project: { A: '$A'' SumCEF: { $sum: '$joined.CEF' }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupJoin_syntax_with_a_transparent_identifier,The following statement contains a magic number: Assert(query'                  2'                  "{ $lookup: { from: 'testcollection_other'' localField: '_id'' foreignField: '_id'' as: 'joined' } }"'                  "{ $sort: { B: 1 } }"'                  "{ $project: { A: '$A'' Joined: '$joined'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,GroupJoin_syntax_with_select_many_and_DefaultIfEmpty,The following statement contains a magic number: Assert(query'                  2'                  "{ $lookup: { from: 'testcollection_other'' localField: '_id'' foreignField: '_id'' as: 'joined' } }"'                  "{ $unwind: { path: '$joined'' preserveNullAndEmptyArrays: true } }"'                  "{ $project: { A: '$A'' CEF: { $ifNull: ['$joined.CEF'' null] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,LongCount,The following statement contains a magic number: result.Should().Be(2);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,LongCount_with_predicate,The following statement contains a magic number: var result = CreateQuery().LongCount(x => x.C.E.F == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,LongCount_with_no_results,The following statement contains a magic number: var result = CreateQuery().LongCount(x => x.C.E.F == 123452135);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,LongCountAsync,The following statement contains a magic number: result.Should().Be(2);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,LongCountAsync_with_predicate,The following statement contains a magic number: var result = await CreateQuery().LongCountAsync(x => x.C.E.F == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,LongCountAsync_with_no_results,The following statement contains a magic number: var result = await CreateQuery().LongCountAsync(x => x.C.E.F == 12351235);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Max,The following statement contains a magic number: result.Should().Be(111);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Max_with_selector,The following statement contains a magic number: result.Should().Be(111);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,MaxAsync,The following statement contains a magic number: result.Should().Be(111);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,MaxAsync_with_selector,The following statement contains a magic number: result.Should().Be(111);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Min,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Min_with_selector,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,MinAsync,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,MinAsync_with_selector,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,OfType_with_a_field,The following statement contains a magic number: var query = CreateQuery()                  .Select(x => x.C.E)                  .OfType<V>()                  .Where(v => v.W == 1111);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,OrderBy_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $sort: { A: 1 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,OrderBy_syntax,The following statement contains a magic number: Assert(query'                  2'                  "{ $sort: { A: 1 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,OrderByDescending_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $sort: { A: -1 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,OrderByDescending_syntax,The following statement contains a magic number: Assert(query'                  2'                  "{ $sort: { A: -1 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,OrderBy_ThenBy_ThenByDescending_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $sort: { A: 1' B: 1' C: -1 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,OrderBy_ThenBy_ThenByDescending_syntax,The following statement contains a magic number: Assert(query'                  2'                  "{ $sort: { A: 1' B: 1' C: -1 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Sample,The following statement contains a magic number: var query = CreateQuery().Sample(100);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Sample,The following statement contains a magic number: Assert(query'                  2'                  "{ $sample: { size: 100 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Sample_after_another_function,The following statement contains a magic number: var query = CreateQuery().Select(x => x.A).Sample(100);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Sample_after_another_function,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { A: '$A'' _id: 0 } }"'                  "{ $sample: { size: 100 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_identity,The following statement contains a magic number: Assert(query' 2);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_new_of_same,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { Id: '$_id'' A: '$A'' _id: 0} }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_with_predicated_any,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $anyElementTrue: { $map: { input: '$G'' as: 'g'' 'in': { $eq: ['$$g.D'' \"Don't\"] } } } }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_anonymous_type_method,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { Yeah: '$A'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_anonymous_type_syntax,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { Yeah: '$A'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_scalar,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { A: '$A'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_syntax_scalar,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { A: '$A'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_computed_scalar,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $concat: ['$A'' ' '' '$B'] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_syntax_computed_scalar,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $concat: ['$A'' ' '' '$B'] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_array,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { M: '$M'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_syntax_array,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { M: '$M'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_array_index,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $arrayElemAt: ['$M'' 0] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_syntax_array_index,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $arrayElemAt: ['$M'' 0] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_embedded_pipeline,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $arrayElemAt: ['$M'' 0] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_method_computed_array,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $map: { input: '$M'' as: 'i'' in: { $add: ['$$i'' 1] } } }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_syntax_computed_array,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { __fld0: { $map: { input: '$M'' as: 'i'' in: { $add: ['$$i'' 1] } } }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Select_followed_by_group,The following statement contains a magic number: Assert(query'                  2'                  "{ $project: { Id: '$_id'' First: '$A'' Second: '$B'' _id: 0 } }"'                  "{ $group: { _id: '$First'' Stuff: { $push: { Id: '$Id'' Second: '$Second' } } } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_only_resultSelector,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { G: '$G'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_result_selector_which_has_subobjects,The following statement contains a magic number: Assert(query'                  2'                  "{ $unwind : '$C.X' }"'                  "{ $project : { X : '$C.X'' _id : 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_result_selector_which_called_from_where,The following statement contains a magic number: Assert(query'                  2'                  "{ $match : { 'K' : true } }"'                  "{ $unwind : '$G' }"'                  "{ $project : { G : '$G'' _id : 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_collection_selector_method_simple_scalar,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { G: '$G'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_collection_selector_syntax_simple_scalar,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { G: '$G'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_collection_selector_method_computed_scalar,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { __fld0: { $add: ['$C.E.F'' '$G.E.F'' '$G.E.H'] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_collection_selector_syntax_computed_scalar,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { __fld0: { $add: ['$C.E.F'' '$G.E.F'' '$G.E.H'] }' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_collection_selector_method_anonymous_type,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { F: '$C.E.F'' Other: '$G.D'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_with_collection_selector_syntax_anonymous_type,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { F: '$C.E.F'' Other: '$G.D'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SelectMany_followed_by_a_group,The following statement contains a magic number: Assert(query'                  4'                  "{ $unwind: '$G' }"'                  "{ $project: { G: '$G'' _id: 0 } }"'                  "{ $group: { _id: '$G.D'' __agg0: { $sum : '$G.E.F' } } }"'                  "{ $project: { Key: '$_id'' SumF: '$__agg0'' _id: 0 } }");
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Single,The following statement contains a magic number: var result = CreateQuery().Where(x => x.Id == 10).Select(x => x.C.E.F).Single();
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Single,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Single_with_predicate,The following statement contains a magic number: var result = CreateQuery().Select(x => x.C.E.F).Single(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Single_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleAsync,The following statement contains a magic number: var result = await CreateQuery().Where(x => x.Id == 10).Select(x => x.C.E.F).SingleAsync();
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleAsync,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleAsync_with_predicate,The following statement contains a magic number: var result = await CreateQuery().Select(x => x.C.E.F).SingleAsync(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleAsync_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefault,The following statement contains a magic number: var result = CreateQuery().Where(x => x.Id == 10).Select(x => x.C.E.F).SingleOrDefault();
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefault,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefault_with_predicate,The following statement contains a magic number: var result = CreateQuery().Select(x => x.C.E.F).SingleOrDefault(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefault_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefaultAsync,The following statement contains a magic number: var result = await CreateQuery().Where(x => x.Id == 10).Select(x => x.C.E.F).SingleOrDefaultAsync();
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefaultAsync,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefaultAsync_with_predicate,The following statement contains a magic number: var result = await CreateQuery().Select(x => x.C.E.F).SingleOrDefaultAsync(x => x == 11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SingleOrDefaultAsync_with_predicate,The following statement contains a magic number: result.Should().Be(11);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Skip,The following statement contains a magic number: var query = CreateQuery().Skip(10);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationPopulation,The following statement contains a magic number: result.Should().Be(50);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationPopulation_with_selector,The following statement contains a magic number: result.Should().Be(50);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationPopulationAsync,The following statement contains a magic number: result.Should().Be(50);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationPopulationAsync_with_selector,The following statement contains a magic number: result.Should().Be(50);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSample,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSample,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSample_with_selector,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSample_with_selector,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSampleAsync,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSampleAsync,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSampleAsync_with_selector,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,StandardDeviationSampleAsync_with_selector,The following statement contains a magic number: result.Should().BeApproximately(70.7106781186548' .0001);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Sum,The following statement contains a magic number: result.Should().Be(122);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Sum_with_selector,The following statement contains a magic number: result.Should().Be(122);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,Sum_with_no_results,The following statement contains a magic number: var result = CreateQuery().Where(x => x.C.E.F == 12341235).Sum(x => x.C.E.F);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SumAsync,The following statement contains a magic number: result.Should().Be(122);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SumAsync_with_selector,The following statement contains a magic number: result.Should().Be(122);
Magic Number,Tests.MongoDB.Driver.Linq,MongoQueryableTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\MongoQueryableTests.cs,SumAsync_with_no_results,The following statement contains a magic number: var result = await CreateQuery().Where(x => x.C.E.F == 21341235).SumAsync(x => x.C.E.F);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_addToSet,The following statement contains a magic number: result.Value.Result.Should().Equal(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_addToSet_using_Distinct,The following statement contains a magic number: result.Value.Result.Should().Equal(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_average_with_embedded_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_average_with_selected_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_max_with_embedded_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_max_with_selected_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_min_with_embedded_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_min_with_selected_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_push_with_just_a_select,The following statement contains a magic number: result.Value.Result.Should().Equal(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_push_with_ToArray,The following statement contains a magic number: result.Value.Result.Should().Equal(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_push_with_new_list,The following statement contains a magic number: result.Value.Result.Should().Equal(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_push_with_ToList,The following statement contains a magic number: result.Value.Result.Should().Equal(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_stdDevPop_with_embedded_projector,The following statement contains a magic number: result.Value.Result.Should().Be(50);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_stdDevPop_with_selected_projector,The following statement contains a magic number: result.Value.Result.Should().Be(50);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_stdDevSamp_with_embedded_projector,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(70.7106781156545' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_stdDevSamp_with_embedded_projector,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(70.7106781156545' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_stdDevSamp_with_selected_projector,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(70.7106781156545' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_stdDevSamp_with_selected_projector,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(70.7106781156545' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_sum_with_embedded_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_sum_with_selected_projector,The following statement contains a magic number: result.Value.Result.Should().Be(111);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_complex_selector,The following statement contains a magic number: result.Value.Sum.Should().Be(333);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_complex_selector,The following statement contains a magic number: result.Value.Min.Should().Be(333);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_complex_selector,The following statement contains a magic number: result.Value.Max.Should().Be(333);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateGroupTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateGroupTranslatorTests.cs,Should_translate_aggregate_expressions_with_user_provided_serializer_if_possible,The following statement contains a magic number: result.Value.Sum.Should().Be(-0.00000000714529169165701m);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_abs,The following statement contains a magic number: result.Value.Result.Should().Be(11);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_add,The following statement contains a magic number: result.Value.Result.Should().Be(33);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_add_flattened,The following statement contains a magic number: result.Value.Result.Should().Be(43);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_allElementsTrue,The following statement contains a magic number: var result = Project(x => new { Result = x.G.All(g => g.E.F > 30) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_with_predicate,The following statement contains a magic number: var result = Project(x => new { Result = x.G.Any(g => g.E.F > 40) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_using_Contains,The following statement contains a magic number: var result = Project(x => new { Result = x.L.Contains(5) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_using_Contains_on_a_local_collection,The following statement contains a magic number: var local = new[] { 11' 33' 55 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_using_Contains_on_a_local_collection,The following statement contains a magic number: var local = new[] { 11' 33' 55 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_anyElementTrue_using_Contains_on_a_local_collection,The following statement contains a magic number: var local = new[] { 11' 33' 55 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_constant_ElementAt,The following statement contains a magic number: result.Value.Result.Should().Be(4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_constant_indexer,The following statement contains a magic number: result.Value.Result.Should().Be(4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_constant_get_Item,The following statement contains a magic number: result.Value.Result.Should().Be(20);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_variable_ElementAt,The following statement contains a magic number: result.Value.Result.Should().Be(4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_variable_indexer,The following statement contains a magic number: result.Value.Result.Should().Be(4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_a_variable_get_Item,The following statement contains a magic number: result.Value.Result.Should().Be(20);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_First,The following statement contains a magic number: result.Value.Result.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_arrayElemAt_using_Last,The following statement contains a magic number: result.Value.Result.Should().Be(5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_avg,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(3.66666667' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_avg,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(3.66666667' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_avg_with_selector,The following statement contains a magic number: result.Value.Result.Should().Be(44);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_ceil,The following statement contains a magic number: result.Value.Result.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_concatArrays,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(2' 4' 5' 1' 3' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_concatArrays,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(2' 4' 5' 1' 3' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_concatArrays,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(2' 4' 5' 1' 3' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_concatArrays,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(2' 4' 5' 1' 3' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_concatArrays,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(2' 4' 5' 1' 3' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_day_of_year,The following statement contains a magic number: result.Value.Result.Should().Be(336);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_divide,The following statement contains a magic number: result.Value.Result.Should().Be(0.5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_divide_3_numbers,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(0.04' .01);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_divide_3_numbers,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(0.04' .01);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_equals,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F == 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_equals_as_a_method_call,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F.Equals(5) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_exp,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(59874.1417151978' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_exp,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(59874.1417151978' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_greater_than,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F > 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_greater_than_or_equal,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F >= 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_hour,The following statement contains a magic number: result.Value.Result.Should().Be(13);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result.Value.Result.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result.Value.Result.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf('e'' 4) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result.Value.Result.Should().Be(6);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf("e"' 4) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result.Value.Result.Should().Be(6);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf('e'' 4' 2) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf('e'' 4' 2) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf("e"' 4' 2) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfBytes,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf("e"' 4' 2) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result.Value.Result.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result.Value.Result.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf('e'' 4) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result.Value.Result.Should().Be(6);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf("e"' 4) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result.Value.Result.Should().Be(6);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf('e'' 4' 2) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf('e'' 4' 2) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf("e"' 4' 2) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_indexOfCP,The following statement contains a magic number: result = Project(x => new { Result = x.A.IndexOf("e"' 4' 2) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_less_than,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F < 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_less_than_or_equal,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F <= 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_ln,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(2.39789527279837' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_ln,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(2.39789527279837' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_log,The following statement contains a magic number: var result = Project(x => new { Result = Math.Log(x.C.E.F' 11) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_log10,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(1.0413928515823' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_log10,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(1.0413928515823' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_max,The following statement contains a magic number: result.Value.Result.Should().Be(5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_max_with_selector,The following statement contains a magic number: result.Value.Result.Should().Be(55);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_millisecond,The following statement contains a magic number: result.Value.Result.Should().Be(16);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_min,The following statement contains a magic number: result.Value.Result.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_min_with_selector,The following statement contains a magic number: result.Value.Result.Should().Be(33);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_minute,The following statement contains a magic number: result.Value.Result.Should().Be(14);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_modulo,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F % 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_month,The following statement contains a magic number: result.Value.Result.Should().Be(12);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_multiply,The following statement contains a magic number: result.Value.Result.Should().Be(242);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_multiply_flattened,The following statement contains a magic number: result.Value.Result.Should().Be(2420);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: var result = Project(x => new { Result = new DateTime(x.Id' 11' 12) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: var result = Project(x => new { Result = new DateTime(x.Id' 11' 12) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3' 4) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3' 4) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3' 4) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3' 4) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result = Project(x => new { Result = new DateTime(x.Id' 11' 12' 1' 2' 3' 4) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3' 4));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3' 4));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3' 4));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3' 4));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3' 4));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_new_DateTime,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(10' 11' 12' 1' 2' 3' 4));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_not_with_comparison,The following statement contains a magic number: var result = Project(x => new { Result = !(x.C.E.F < 3) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_not_equals,The following statement contains a magic number: var result = Project(x => new { Result = x.C.E.F != 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_DateTime_parse,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(2017' 2' 8' 12' 10' 40' 787' DateTimeKind.Utc));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_DateTime_parse,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(2017' 2' 8' 12' 10' 40' 787' DateTimeKind.Utc));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_DateTime_parse,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(2017' 2' 8' 12' 10' 40' 787' DateTimeKind.Utc));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_DateTime_parse,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(2017' 2' 8' 12' 10' 40' 787' DateTimeKind.Utc));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_DateTime_parse,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(2017' 2' 8' 12' 10' 40' 787' DateTimeKind.Utc));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_DateTime_parse,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(2017' 2' 8' 12' 10' 40' 787' DateTimeKind.Utc));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_DateTime_parse,The following statement contains a magic number: result.Value.Result.Should().Be(new DateTime(2017' 2' 8' 12' 10' 40' 787' DateTimeKind.Utc));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_pow,The following statement contains a magic number: var result = Project(x => new { Result = Math.Pow(x.C.E.F' 5) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_pow,The following statement contains a magic number: result.Value.Result.Should().Be(161051);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_range,The following statement contains a magic number: var result = Project(x => new { Result = Enumerable.Range(x.C.E.F' 3) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_range,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(11' 12' 13);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_range,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(11' 12' 13);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_range,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(11' 12' 13);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The following statement contains a magic number: result.Value.Result.Should().Be(11);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The following statement contains a magic number: arrayResult.Value.Result.Should().BeEquivalentTo(6' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The following statement contains a magic number: arrayResult.Value.Result.Should().BeEquivalentTo(6' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The following statement contains a magic number: arrayResultWithSelector.Value.Result.x.Should().Be(6);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The following statement contains a magic number: arrayResultWithSelector.Value.Result.y.Should().Be(5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The following statement contains a magic number: typeResult.Value.Result.x.Should().Be(6);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reduce,The following statement contains a magic number: typeResult.Value.Result.y.Should().Be(5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reverse,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(5' 4' 2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reverse,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(5' 4' 2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_reverse,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(5' 4' 2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_second,The following statement contains a magic number: result.Value.Result.Should().Be(15);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_size_from_an_array,The following statement contains a magic number: result.Value.Result.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_size_from_Count_extension_method,The following statement contains a magic number: result.Value.Result.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_size_from_LongCount_extension_method,The following statement contains a magic number: result.Value.Result.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_size_from_Count_property_on_Generic_ICollection,The following statement contains a magic number: result.Value.Result.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_equals,The following statement contains a magic number: var result = Project(x => new { Result = x.L.SetEquals(new[] { 1' 3' 5 }) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_equals,The following statement contains a magic number: var result = Project(x => new { Result = x.L.SetEquals(new[] { 1' 3' 5 }) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_equals_reversed,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 3' 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_equals_reversed,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 3' 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_is_subset,The following statement contains a magic number: var result = Project(x => new { Result = x.L.IsSubsetOf(new[] { 1' 3' 5 }) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_is_subset,The following statement contains a magic number: var result = Project(x => new { Result = x.L.IsSubsetOf(new[] { 1' 3' 5 }) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_is_subset_reversed,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 3' 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_set_is_subset_reversed,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 3' 5 });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_sqrt,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(3.31662479' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_sqrt,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(3.31662479' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_where_to_filter,The following statement contains a magic number: var result = Project(x => new { Result = x.G.Where(c => c.E.F == 33) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_where_then_select_to_filter_then_map,The following statement contains a magic number: var result = Project(x => new { Result = x.G.Where(c => c.E.F == 33).Select(c => c.D) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_select_with_an_anonymous_type_then_where_to_map_then_filter,The following statement contains a magic number: var result = Project(x => new { Result = x.G.Select(c => new { c.D' c.E.F }).Where(c => c.F == 33) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_select_with_an_anonymous_type_then_where_to_map_then_filter,The following statement contains a magic number: result.Value.Result.Single().F.Should().Be(33);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_strLenBytes,The following statement contains a magic number: result.Value.Result.Should().Be(7);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_strLenCP,The following statement contains a magic number: result.Value.Result.Should().Be(7);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_stdDevPop,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(1.247219128924647' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_stdDevPop,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(1.247219128924647' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_stdDevPop_with_selector,The following statement contains a magic number: result.Value.Result.Should().Be(11);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_stdDevSamp,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(1.5275252316519468' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_stdDevSamp,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(1.5275252316519468' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_stdDevSamp_with_selector,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(15.556349186104045' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_stdDevSamp_with_selector,The following statement contains a magic number: result.Value.Result.Should().BeApproximately(15.556349186104045' .0001);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_substr,The following statement contains a magic number: var result = Project(x => new { Result = x.B.Substring(3' 20) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_substr,The following statement contains a magic number: var result = Project(x => new { Result = x.B.Substring(3' 20) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_substrCP,The following statement contains a magic number: var result = Project(x => new { Result = x.B.Substring(3' 20) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_substrCP,The following statement contains a magic number: var result = Project(x => new { Result = x.B.Substring(3' 20) }' __codePointTranslationOptions);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_subtract,The following statement contains a magic number: result.Value.Result.Should().Be(-11);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_subtract_3_numbers,The following statement contains a magic number: result.Value.Result.Should().Be(-23);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_slice_with_2_arguments,The following statement contains a magic number: var result = Project(x => new { Result = x.M.Take(2) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_slice_with_2_arguments,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(2' 4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_slice_with_2_arguments,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(2' 4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_slice_with_3_arguments,The following statement contains a magic number: var result = Project(x => new { Result = x.M.Skip(1).Take(2) });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_slice_with_3_arguments,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(4' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_slice_with_3_arguments,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(4' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_sum,The following statement contains a magic number: result.Value.Result.Should().Be(11);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_sum_with_selector,The following statement contains a magic number: result.Value.Result.Should().Be(88);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_year,The following statement contains a magic number: result.Value.Result.Should().Be(2012);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_operation,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(12L' 24L' 35L);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_operation,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(12L' 24L' 35L);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_operation,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(12L' 24L' 35L);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_anonymous_type,The following statement contains a magic number: aResults.Should().BeEquivalentTo(2' 4' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_anonymous_type,The following statement contains a magic number: aResults.Should().BeEquivalentTo(2' 4' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_anonymous_type,The following statement contains a magic number: aResults.Should().BeEquivalentTo(2' 4' 5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_anonymous_type,The following statement contains a magic number: bResults.Should().BeEquivalentTo(10L' 20L' 30L);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_anonymous_type,The following statement contains a magic number: bResults.Should().BeEquivalentTo(10L' 20L' 30L);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_zip_with_anonymous_type,The following statement contains a magic number: bResults.Should().BeEquivalentTo(10L' 20L' 30L);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_array_projection,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(33' 55);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_array_projection,The following statement contains a magic number: result.Value.Result.Should().BeEquivalentTo(33' 55);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_array_projection_complex,The following statement contains a magic number: result.Value.Result.First().F.Should().Be(33);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_array_projection_complex,The following statement contains a magic number: result.Value.Result.First().H.Should().Be(44);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_array_projection_complex,The following statement contains a magic number: result.Value.Result.Last().F.Should().Be(55);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,AggregateProjectTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\AggregateProjectTranslatorTests.cs,Should_translate_array_projection_complex,The following statement contains a magic number: result.Value.Result.Last().H.Should().Be(66);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_a_new_expression_where_one_field_starts_with_another_field,The following statement contains a magic number: result.Value.E.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_a_new_expression_where_one_field_starts_with_another_field,The following statement contains a magic number: result.Value.E.H.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_a_new_expression_where_one_field_starts_with_another_field,The following statement contains a magic number: result.Value.E1.F.Should().Be(4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_a_new_expression_where_one_field_starts_with_another_field,The following statement contains a magic number: result.Value.E1.H.Should().Be(5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_single_nested_field,The following statement contains a magic number: result.Value.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_single_computed_nested_field,The following statement contains a magic number: var result = Project(p => p.C.E.F + 10' "{ C: { E: { F: 2 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_single_computed_nested_field,The following statement contains a magic number: result.Value.Should().Be(12);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_a_non_top_level_projection,The following statement contains a magic number: result.Value.E.H.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_a_non_top_level_projection,The following statement contains a magic number: result.Value.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_a_non_top_level_projection,The following statement contains a magic number: result.Value.E.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_a_top_level_projection,The following statement contains a magic number: result.Value.C.E.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_a_top_level_projection,The following statement contains a magic number: result.Value.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_when_one_field_doesnt_start_with_another,The following statement contains a magic number: result.Value.E.H.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_when_one_field_doesnt_start_with_another,The following statement contains a magic number: result.Value.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_when_one_field_starts_with_another,The following statement contains a magic number: result.Value.E.E1.H.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_when_one_field_starts_with_another,The following statement contains a magic number: result.Value.E.E1.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_with_a_hierarchical_redundancy_and_when_one_field_starts_with_another,The following statement contains a magic number: result.Value.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_a_single_top_level_array,The following statement contains a magic number: result.Value.Count().Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_a_single_top_level_array,The following statement contains a magic number: result.Value.ElementAt(1).E.F.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_using_Select,The following statement contains a magic number: result.Value.Count().Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_using_SelectMany,The following statement contains a magic number: result.Value.Count().Should().Be(4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_to_a_binary_operation,The following statement contains a magic number: result.Value.Count().Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_to_a_binary_operation,The following statement contains a magic number: result.Value.ElementAt(0).Should().Be(5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_to_a_binary_operation,The following statement contains a magic number: result.Value.ElementAt(1).Should().Be(13);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_when_array_identity_is_present,The following statement contains a magic number: result.Value.Sums.Count().Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_when_array_identity_is_present,The following statement contains a magic number: result.Value.Sums.ElementAt(0).Should().Be(5);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,FindProjectionTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\FindProjectionTranslatorTests.cs,Should_translate_through_a_single_top_level_array_when_array_identity_is_present,The following statement contains a magic number: result.Value.Sums.ElementAt(1).Should().Be(13);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new C { Id = _id2' X = 2' LX = 2' Y = 11' Date = new DateTime(2000' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 22 }' NullableDouble = 2' A = new[] { 2' 3' 4 }' DA = new List<D> { new D { Y = 11' Z = 111 }' new D { Z = 222 } }' L = new List<int> { 2' 3' 4 } }'                  new C { Id = _id1' X = 1' LX = 1' Y = 11' Date = new DateTime(2000' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 11 }' NullableDouble = 2' S = "abc"' SA = new string[] { "Tom"' "Dick"' "Harry" } }'                  new C { Id = _id3' X = 3' LX = 3' Y = 33' Date = new DateTime(2001' 1' 1' 1' 1' 1' 1' DateTimeKind.Utc)' D = new D { Z = 33 }' NullableDouble = 5' B = true' BA = new bool[] { true }' E = E.A' ENullable = E.A' EA = new E[] { E.A' E.B } }'                  new C { Id = _id5' X = 5' LX = 5' Y = 44' Date = new DateTime(2001' 2' 2' 2' 2' 2' 2' DateTimeKind.Utc)' D = new D { Z = 55 }' DBRef = new MongoDBRef("db"' "c"' 1)' F = new F { G = new G { H = 10 } } }'                  new C { Id = _id4' X = 4' LX = 4' Y = 44' Date = new DateTime(2001' 3' 3' 3' 3' 3' 3' DateTimeKind.Utc)' D = new D { Z = 44 }' S = "   xyz   "' DA = new List<D> { new D { Y = 33' Z = 333 }' new D { Y = 44' Z = 444 } } }              });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalIListContainsX,The following statement contains a magic number: IList<int> local = new[] { 1' 2' 3 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalIListContainsX,The following statement contains a magic number: IList<int> local = new[] { 1' 2' 3 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalIListContainsX,The following statement contains a magic number: Assert<C>(c => local.Contains(c.X)' 3' "{ \"x\" : { \"$in\" : [1' 2' 3] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalListContainsX,The following statement contains a magic number: var local = new List<int> { 1' 2' 3 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalListContainsX,The following statement contains a magic number: var local = new List<int> { 1' 2' 3 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalListContainsX,The following statement contains a magic number: Assert<C>(c => local.Contains(c.X)' 3' "{ \"x\" : { \"$in\" : [1' 2' 3] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalArrayContainsX,The following statement contains a magic number: var local = new[] { 1' 2' 3 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalArrayContainsX,The following statement contains a magic number: var local = new[] { 1' 2' 3 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLocalArrayContainsX,The following statement contains a magic number: Assert<C>(c => local.Contains(c.X)' 3' "{ \"x\" : { \"$in\" : [1' 2' 3] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereAContains2,The following statement contains a magic number: Assert<C>(c => c.A.Contains(2)' 1' "{ \"a\" : 2 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereAContains2Not,The following statement contains a magic number: Assert<C>(c => !c.A.Contains(2)' 4' "{ \"a\" : { \"$ne\" : 2 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereAContains2Not,The following statement contains a magic number: Assert<C>(c => !c.A.Contains(2)' 4' "{ \"a\" : { \"$ne\" : 2 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereALengthEquals3,The following statement contains a magic number: Assert<C>(c => c.A.Length == 3' 1' "{ \"a\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereALengthEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.A.Length == 3)' 4' "{ \"a\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereALengthEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.A.Length == 3)' 4' "{ \"a\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereALengthEquals3Reversed,The following statement contains a magic number: Assert<C>(c => 3 == c.A.Length' 1' "{ \"a\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereALengthNotEquals3,The following statement contains a magic number: Assert<C>(c => c.A.Length != 3' 4' "{ \"a\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereALengthNotEquals3,The following statement contains a magic number: Assert<C>(c => c.A.Length != 3' 4' "{ \"a\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereALengthNotEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.A.Length != 3)' 1' "{ \"a\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1Equals3,The following statement contains a magic number: Assert<C>(c => c.A[1] == 3' 1' "{ \"a.1\" : 3 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1Equals3Not,The following statement contains a magic number: Assert<C>(c => !(c.A[1] == 3)' 4' "{ \"a.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1Equals3Not,The following statement contains a magic number: Assert<C>(c => !(c.A[1] == 3)' 4' "{ \"a.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1ModTwoEquals1,The following statement contains a magic number: Assert<C>(c => c.A[1] % 2 == 1' 1' "{ \"a.1\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1ModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.A[1] % 2 == 1)' 4' "{ \"a.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1ModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.A[1] % 2 == 1)' 4' "{ \"a.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1ModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.A[1] % 2 != 1' 4' "{ \"a.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1ModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.A[1] % 2 != 1' 4' "{ \"a.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1ModTwoNotEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.A[1] % 2 != 1)' 1' "{ \"a.1\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1NotEquals3,The following statement contains a magic number: Assert<C>(c => c.A[1] != 3' 4' "{ \"a.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1NotEquals3,The following statement contains a magic number: Assert<C>(c => c.A[1] != 3' 4' "{ \"a.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereASub1NotEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.A[1] != 3)' 1' "{ \"a.1\" : 3 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereBASub0EqualsFalseNot,The following statement contains a magic number: Assert<C>(c => !(c.BA[0] == false)' 5' "{ \"ba.0\" : { \"$ne\" : false } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereBASub0EqualsTrueNot,The following statement contains a magic number: Assert<C>(c => !(c.BA[0] == true)' 4' "{ \"ba.0\" : { \"$ne\" : true } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereBASub0Not,The following statement contains a magic number: Assert<C>(c => !c.BA[0]' 4' "{ \"ba.0\" : { \"$ne\" : true } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereBEqualsFalse,The following statement contains a magic number: Assert<C>(c => c.B == false' 4' "{ \"b\" : false }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereBEqualsTrueNot,The following statement contains a magic number: Assert<C>(c => !(c.B == true)' 4' "{ \"b\" : { \"$ne\" : true } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereBNot,The following statement contains a magic number: Assert<C>(c => !c.B' 4' "{ \"b\" : { \"$ne\" : true } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDEquals11,The following statement contains a magic number: Assert<C>(c => c.D == new D { Z = 11 }' 1' "{ \"d\" : { \"z\" : 11 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDEquals11Not,The following statement contains a magic number: Assert<C>(c => !(c.D == new D { Z = 11 })' 4' "{ \"d\" : { \"$ne\" : { \"z\" : 11 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDEquals11Not,The following statement contains a magic number: Assert<C>(c => !(c.D == new D { Z = 11 })' 4' "{ \"d\" : { \"$ne\" : { \"z\" : 11 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDNotEquals11,The following statement contains a magic number: Assert<C>(c => c.D != new D { Z = 11 }' 4' "{ \"d\" : { \"$ne\" : { \"z\" : 11 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDNotEquals11,The following statement contains a magic number: Assert<C>(c => c.D != new D { Z = 11 }' 4' "{ \"d\" : { \"$ne\" : { \"z\" : 11 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDNotEquals11Not,The following statement contains a magic number: Assert<C>(c => !(c.D != new D { Z = 11 })' 1' "{ \"d\" : { \"z\" : 11 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDAAnyWithPredicate,The following statement contains a magic number: Assert<C>(c => c.DA.Any(d => d.Z == 333)' 1' "{ \"da\" : { \"$elemMatch\" : { \"z\" : 333 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDAAnyWithPredicate,The following statement contains a magic number: Assert<C>(c => c.DA.Any(d => d.Z >= 222 && d.Z <= 444)' 2' "{ \"da\" : { \"$elemMatch\" : { \"z\" : { \"$gte\" : 222' \"$lte\" : 444 } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDAAnyWithPredicate,The following statement contains a magic number: Assert<C>(c => c.DA.Any(d => d.Z >= 222 && d.Z <= 444)' 2' "{ \"da\" : { \"$elemMatch\" : { \"z\" : { \"$gte\" : 222' \"$lte\" : 444 } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereDAAnyWithPredicate,The following statement contains a magic number: Assert<C>(c => c.DA.Any(d => d.Z >= 222 && d.Z <= 444)' 2' "{ \"da\" : { \"$elemMatch\" : { \"z\" : { \"$gte\" : 222' \"$lte\" : 444 } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereEAContainsBNot,The following statement contains a magic number: Assert<C>(c => !c.EA.Contains(E.B)' 4' "{ \"ea\" : { \"$ne\" : 2 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereEASub0EqualsANot,The following statement contains a magic number: Assert<C>(c => !(c.EA[0] == E.A)' 4' "{ \"ea.0\" : { \"$ne\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereEASub0NotEqualsA,The following statement contains a magic number: Assert<C>(c => c.EA[0] != E.A' 4' "{ \"ea.0\" : { \"$ne\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereEEqualsANot,The following statement contains a magic number: Assert<C>(c => !(c.E == E.A)' 4' "{ \"e\" : { \"$ne\" : \"A\" } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereENotEqualsA,The following statement contains a magic number: Assert<C>(c => c.E != E.A' 4' "{ \"e\" : { \"$ne\" : \"A\" } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereENullableEqualsNull,The following statement contains a magic number: Assert<C>(c => c.ENullable == null' 4' "{ \"en\" : null }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereENullabeEqualsNullReversed,The following statement contains a magic number: Assert<C>(c => null == c.ENullable' 4' "{ \"en\" : null }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLContains2,The following statement contains a magic number: Assert<C>(c => c.L.Contains(2)' 1' "{ \"l\" : 2 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLContains2Not,The following statement contains a magic number: Assert<C>(c => !c.L.Contains(2)' 4' "{ \"l\" : { \"$ne\" : 2 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLContains2Not,The following statement contains a magic number: Assert<C>(c => !c.L.Contains(2)' 4' "{ \"l\" : { \"$ne\" : 2 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountMethodEquals3,The following statement contains a magic number: Assert<C>(c => c.L.Count() == 3' 1' "{ \"l\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountMethodEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L.Count() == 3)' 4' "{ \"l\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountMethodEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L.Count() == 3)' 4' "{ \"l\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountMethodEquals3Reversed,The following statement contains a magic number: Assert<C>(c => 3 == c.L.Count()' 1' "{ \"l\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountPropertyEquals3,The following statement contains a magic number: Assert<C>(c => c.L.Count == 3' 1' "{ \"l\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountPropertyEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L.Count == 3)' 4' "{ \"l\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountPropertyEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L.Count == 3)' 4' "{ \"l\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountPropertyEquals3Reversed,The following statement contains a magic number: Assert<C>(c => 3 == c.L.Count' 1' "{ \"l\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountPropertyNotEquals3,The following statement contains a magic number: Assert<C>(c => c.L.Count != 3' 4' "{ \"l\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountPropertyNotEquals3,The following statement contains a magic number: Assert<C>(c => c.L.Count != 3' 4' "{ \"l\" : { \"$not\" : { \"$size\" : 3 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLCountPropertyNotEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L.Count != 3)' 1' "{ \"l\" : { \"$size\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1Equals3,The following statement contains a magic number: Assert<C>(c => c.L[1] == 3' 1' "{ \"l.1\" : 3 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1Equals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L[1] == 3)' 4' "{ \"l.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1Equals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L[1] == 3)' 4' "{ \"l.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1ModTwoEquals1,The following statement contains a magic number: Assert<C>(c => c.L[1] % 2 == 1' 1' "{ \"l.1\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1ModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.L[1] % 2 == 1)' 4' "{ \"l.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1ModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.L[1] % 2 == 1)' 4' "{ \"l.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1ModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.L[1] % 2 != 1' 4' "{ \"l.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1ModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.L[1] % 2 != 1' 4' "{ \"l.1\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1ModTwoNotEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.L[1] % 2 != 1)' 1' "{ \"l.1\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1NotEquals3,The following statement contains a magic number: Assert<C>(c => c.L[1] != 3' 4' "{ \"l.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1NotEquals3,The following statement contains a magic number: Assert<C>(c => c.L[1] != 3' 4' "{ \"l.1\" : { \"$ne\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLSub1NotEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.L[1] != 3)' 1' "{ \"l.1\" : 3 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoEquals1,The following statement contains a magic number: Assert<C>(c => c.LX % 2 == 1' 3' "{ \"lx\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoEquals1,The following statement contains a magic number: Assert<C>(c => c.LX % 2 == 1' 3' "{ \"lx\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.LX % 2 == 1)' 2' "{ \"lx\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.LX % 2 == 1)' 2' "{ \"lx\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoEquals1Reversed,The following statement contains a magic number: Assert<C>(c => 1 == c.LX % 2' 3' "{ \"lx\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoEquals1Reversed,The following statement contains a magic number: Assert<C>(c => 1 == c.LX % 2' 3' "{ \"lx\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.LX % 2 != 1' 2' "{ \"lx\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.LX % 2 != 1' 2' "{ \"lx\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoNotEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.LX % 2 != 1)' 3' "{ \"lx\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereLXModTwoNotEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.LX % 2 != 1)' 3' "{ \"lx\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSASub0ContainsONot,The following statement contains a magic number: Assert<C>(c => !c.SA[0].Contains("o")' 4' "{ \"sa.0\" : { \"$not\" : /o/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSASub0EndsWithMNot,The following statement contains a magic number: Assert<C>(c => !c.SA[0].EndsWith("m")' 4' "{ \"sa.0\" : { \"$not\" : /m$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSASub0IsMatchNot,The following statement contains a magic number: Assert<C>(c => !regex.IsMatch(c.SA[0])' 4' "{ \"sa.0\" : { \"$not\" : /^T/ } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSASub0IsMatchStaticNot,The following statement contains a magic number: Assert<C>(c => !Regex.IsMatch(c.SA[0]' "^T")' 4' "{ \"sa.0\" : { \"$not\" : /^T/ } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSASub0StartsWithTNot,The following statement contains a magic number: Assert<C>(c => !c.SA[0].StartsWith("T")' 4' "{ \"sa.0\" : { \"$not\" : /^T/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSContainsAbcNot,The following statement contains a magic number: Assert<C>(c => !c.S.Contains("abc")' 4' "{ \"s\" : { \"$not\" : /abc/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSCountEquals3,The following statement contains a magic number: Assert<C>(c => c.S.Count() == 3' 1' "{ \"s\" : /^.{3}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSEqualsAbcNot,The following statement contains a magic number: Assert<C>(c => !(c.S == "abc")' 4' "{ \"s\" : { \"$ne\" : \"abc\" } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSEqualsMethodAbcNot,The following statement contains a magic number: Assert<C>(c => !(c.S.Equals("abc"))' 4' "{ \"s\" : { \"$ne\" : \"abc\" } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSEqualsStaticMethodAbcNot,The following statement contains a magic number: Assert<C>(c => !string.Equals(c.S' "abc")' 4' "{ \"s\" : { \"$ne\" : \"abc\" } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSEndsWithAbcNot,The following statement contains a magic number: Assert<C>(c => !c.S.EndsWith("abc")' 4' "{ \"s\" : { \"$not\" : /abc$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIndexOfAnyBCStartIndex1Count2Equals1,The following statement contains a magic number: Assert<C>(c => c.S.IndexOfAny(new char[] { 'b'' '-'' 'c' }' 1' 2) == 1' 1' "{ \"s\" : /^.{1}(?=.{2})[^b\\-c]{0}[b\\-c]/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIndexOfBStartIndex1Count2Equals1,The following statement contains a magic number: Assert<C>(c => c.S.IndexOf('b'' 1' 2) == 1' 1' "{ \"s\" : /^.{1}(?=.{2})[^b]{0}b/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIndexOfXyzEquals3,The following statement contains a magic number: Assert<C>(c => c.S.IndexOf("xyz") == 3' 1' "{ \"s\" : /^(?!.{0'2}xyz).{3}xyz/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIndexOfXyzStartIndex1Equals3,The following statement contains a magic number: Assert<C>(c => c.S.IndexOf("xyz"' 1) == 3' 1' "{ \"s\" : /^.{1}(?!.{0'1}xyz).{2}xyz/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIndexOfXyzStartIndex1Count5Equals3,The following statement contains a magic number: Assert<C>(c => c.S.IndexOf("xyz"' 1' 5) == 3' 1' "{ \"s\" : /^.{1}(?=.{5})(?!.{0'1}xyz).{2}xyz/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIndexOfXyzStartIndex1Count5Equals3,The following statement contains a magic number: Assert<C>(c => c.S.IndexOf("xyz"' 1' 5) == 3' 1' "{ \"s\" : /^.{1}(?=.{5})(?!.{0'1}xyz).{2}xyz/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIsMatchNot,The following statement contains a magic number: Assert<C>(c => !regex.IsMatch(c.S)' 4' "{ \"s\" : { \"$not\" : /^abc/ } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSIsMatchStaticNot,The following statement contains a magic number: Assert<C>(c => !Regex.IsMatch(c.S' "^abc")' 4' "{ \"s\" : { \"$not\" : /^abc/ } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthEquals3,The following statement contains a magic number: Assert<C>(c => c.S.Length == 3' 1' "{ \"s\" : /^.{3}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.S.Length == 3)' 4' "{ \"s\" : { \"$not\" : /^.{3}$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.S.Length == 3)' 4' "{ \"s\" : { \"$not\" : /^.{3}$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthGreaterThan3,The following statement contains a magic number: Assert<C>(c => c.S.Length > 3' 1' "{ \"s\" : /^.{4'}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthGreaterThanOrEquals3,The following statement contains a magic number: Assert<C>(c => c.S.Length >= 3' 2' "{ \"s\" : /^.{3'}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthGreaterThanOrEquals3,The following statement contains a magic number: Assert<C>(c => c.S.Length >= 3' 2' "{ \"s\" : /^.{3'}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthLessThan3,The following statement contains a magic number: Assert<C>(c => c.S.Length < 3' 0' "{ \"s\" : /^.{0'2}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthLessThanOrEquals3,The following statement contains a magic number: Assert<C>(c => c.S.Length <= 3' 1' "{ \"s\" : /^.{0'3}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthNotEquals3,The following statement contains a magic number: Assert<C>(c => c.S.Length != 3' 4' "{ \"s\" : { \"$not\" : /^.{3}$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthNotEquals3,The following statement contains a magic number: Assert<C>(c => c.S.Length != 3' 4' "{ \"s\" : { \"$not\" : /^.{3}$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSLengthNotEquals3Not,The following statement contains a magic number: Assert<C>(c => !(c.S.Length != 3)' 1' "{ \"s\" : /^.{3}$/s }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSNotEqualsAbc,The following statement contains a magic number: Assert<C>(c => c.S != "abc"' 4' "{ \"s\" : { \"$ne\" : \"abc\" } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSStartsWithAbcNot,The following statement contains a magic number: Assert<C>(c => !c.S.StartsWith("abc")' 4' "{ \"s\" : { \"$not\" : /^abc/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSSub1EqualsBNot,The following statement contains a magic number: Assert<C>(c => !(c.S[1] == 'b')' 4' "{ \"s\" : { \"$not\" : /^.{1}b/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSSub1NotEqualsBNot,The following statement contains a magic number: Assert<C>(c => !(c.S[1] != 'b')' 4' "{ \"s\" : { \"$not\" : /^.{1}[^b]/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSTrimContainsXyzNot,The following statement contains a magic number: Assert<C>(c => !c.S.Trim().Contains("xyz")' 4' "{ \"s\" : { \"$not\" : /^\\s*.*xyz.*\\s*$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSTrimEndsWithXyzNot,The following statement contains a magic number: Assert<C>(c => !c.S.Trim().EndsWith("xyz")' 4' "{ \"s\" : { \"$not\" : /^\\s*.*xyz\\s*$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSTrimStartsWithXyzNot,The following statement contains a magic number: Assert<C>(c => !c.S.Trim().StartsWith("xyz")' 4' "{ \"s\" : { \"$not\" : /^\\s*xyz.*\\s*$/s } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToLowerDoesNotEqualConstantLowerCaseValue,The following statement contains a magic number: Assert<C>(c => c.S.ToLower() != "abc"' 4' "{ \"s\" : { \"$not\" : /^abc$/i } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToLowerDoesNotEqualConstantMixedCaseValue,The following statement contains a magic number: Assert<C>(c => c.S.ToLower() != "Abc"' 5' "{ }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToLowerEqualsNullValue,The following statement contains a magic number: Assert<C>(c => c.S.ToLower() == null' 3' "{ \"s\" : null }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToLowerDoesNotEqualNullValue,The following statement contains a magic number: Assert<C>(c => c.S.ToLower() != null' 2' "{ \"s\" : { \"$ne\" : null } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToUpperDoesNotEqualConstantLowerCaseValue,The following statement contains a magic number: Assert<C>(c => c.S.ToUpper() != "abc"' 5' "{ }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToUpperDoesNotEqualConstantMixedCaseValue,The following statement contains a magic number: Assert<C>(c => c.S.ToUpper() != "Abc"' 5' "{ }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToUpperEqualsNullValue,The following statement contains a magic number: Assert<C>(c => c.S.ToUpper() == null' 3' "{ \"s\" : null }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereSToUpperDoesNotEqualNullValue,The following statement contains a magic number: Assert<C>(c => c.S.ToUpper() != null' 2' "{ \"s\" : { \"$ne\" : null } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereTripleAnd,The following statement contains a magic number: Assert<C>(c => c.X >= 0 && c.X >= 1 && c.Y == 11' 2' "{ \"$and\" : [{ \"x\" : { \"$gte\" : 0 } }' { \"x\" : { \"$gte\" : 1 } }' { \"y\" : 11 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereTripleAnd,The following statement contains a magic number: Assert<C>(c => c.X >= 0 && c.X >= 1 && c.Y == 11' 2' "{ \"$and\" : [{ \"x\" : { \"$gte\" : 0 } }' { \"x\" : { \"$gte\" : 1 } }' { \"y\" : 11 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereTripleOr,The following statement contains a magic number: Assert<C>(c => c.X == 1 || c.Y == 33 || c.S == "x is 1"' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }' { \"s\" : \"x is 1\" }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereTripleOr,The following statement contains a magic number: Assert<C>(c => c.X == 1 || c.Y == 33 || c.S == "x is 1"' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }' { \"s\" : \"x is 1\" }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1AndYEquals11,The following statement contains a magic number: Assert<C>(c => c.X == 1 & c.Y == 11' 1' "{ \"x\" : 1' \"y\" : 11 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1AndAlsoYEquals11,The following statement contains a magic number: Assert<C>(c => c.X == 1 && c.Y == 11' 1' "{ \"x\" : 1' \"y\" : 11 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1AndYEquals11Not,The following statement contains a magic number: Assert<C>(c => !(c.X == 1 && c.Y == 11)' 4' "{ \"$nor\" : [{ \"x\" : 1' \"y\" : 11 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1AndYEquals11Not,The following statement contains a magic number: Assert<C>(c => !(c.X == 1 && c.Y == 11)' 4' "{ \"$nor\" : [{ \"x\" : 1' \"y\" : 11 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1AndYEquals11AndZEquals11,The following statement contains a magic number: Assert<C>(c => c.X == 1 && c.Y == 11 && c.D.Z == 11' 1' "{ \"x\" : 1' \"y\" : 11' \"d.z\" : 11 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1AndYEquals11AndZEquals11,The following statement contains a magic number: Assert<C>(c => c.X == 1 && c.Y == 11 && c.D.Z == 11' 1' "{ \"x\" : 1' \"y\" : 11' \"d.z\" : 11 }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.X == 1)' 4' "{ \"x\" : { \"$ne\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrYEquals33,The following statement contains a magic number: Assert<C>(c => c.X == 1 | c.Y == 33' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrYEquals33,The following statement contains a magic number: Assert<C>(c => c.X == 1 | c.Y == 33' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrElseYEquals33,The following statement contains a magic number: Assert<C>(c => c.X == 1 || c.Y == 33' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrElseYEquals33,The following statement contains a magic number: Assert<C>(c => c.X == 1 || c.Y == 33' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrYEquals33Not,The following statement contains a magic number: Assert<C>(c => !(c.X == 1 || c.Y == 33)' 3' "{ \"$nor\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrYEquals33Not,The following statement contains a magic number: Assert<C>(c => !(c.X == 1 || c.Y == 33)' 3' "{ \"$nor\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrYEquals33NotNot,The following statement contains a magic number: Assert<C>(c => !!(c.X == 1 || c.Y == 33)' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXEquals1OrYEquals33NotNot,The following statement contains a magic number: Assert<C>(c => !!(c.X == 1 || c.Y == 33)' 2' "{ \"$or\" : [{ \"x\" : 1 }' { \"y\" : 33 }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXGreaterThan1,The following statement contains a magic number: Assert<C>(c => c.X > 1' 4' "{ \"x\" : { \"$gt\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXGreaterThan1AndLessThan3,The following statement contains a magic number: Assert<C>(c => c.X > 1 && c.X < 3' 1' "{ \"x\" : { \"$gt\" : 1' \"$lt\" : 3 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXGreaterThan1AndLessThan3Not,The following statement contains a magic number: Assert<C>(c => !(c.X > 1 && c.X < 3)' 4' "{ \"$nor\" : [{ \"x\" : { \"$gt\" : 1' \"$lt\" : 3 } }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXGreaterThan1AndLessThan3Not,The following statement contains a magic number: Assert<C>(c => !(c.X > 1 && c.X < 3)' 4' "{ \"$nor\" : [{ \"x\" : { \"$gt\" : 1' \"$lt\" : 3 } }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXGreaterThan1Reversed,The following statement contains a magic number: Assert<C>(c => 1 < c.X' 4' "{ \"x\" : { \"$gt\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXGreaterThanOrEquals1,The following statement contains a magic number: Assert<C>(c => c.X >= 1' 5' "{ \"x\" : { \"$gte\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXGreaterThanOrEquals1Reversed,The following statement contains a magic number: Assert<C>(c => 1 <= c.X' 5' "{ \"x\" : { \"$gte\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXLessThan1Not,The following statement contains a magic number: Assert<C>(c => !(c.X < 1)' 5' "{ \"x\" : { \"$not\" : { \"$lt\" : 1 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXLessThanOrEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.X <= 1)' 4' "{ \"x\" : { \"$not\" : { \"$lte\" : 1 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0,The following statement contains a magic number: Assert<C>(c => (c.X % 1 == 0) && (c.X % 2 == 0)' 2' "{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0,The following statement contains a magic number: Assert<C>(c => (c.X % 1 == 0) && (c.X % 2 == 0)' 2' "{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0Not,The following statement contains a magic number: Assert<C>(c => !((c.X % 1 == 0) && (c.X % 2 == 0))' 3' "{ \"$nor\" : [{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0Not,The following statement contains a magic number: Assert<C>(c => !((c.X % 1 == 0) && (c.X % 2 == 0))' 3' "{ \"$nor\" : [{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0NotNot,The following statement contains a magic number: Assert<C>(c => !!((c.X % 1 == 0) && (c.X % 2 == 0))' 2' "{ \"$or\" : [{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModOneEquals0AndXModTwoEquals0NotNot,The following statement contains a magic number: Assert<C>(c => !!((c.X % 1 == 0) && (c.X % 2 == 0))' 2' "{ \"$or\" : [{ \"$and\" : [{ \"x\" : { \"$mod\" : [NumberLong(1)' NumberLong(0)] } }' { \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(0)] } }] }] }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoEquals1,The following statement contains a magic number: Assert<C>(c => c.X % 2 == 1' 3' "{ \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoEquals1,The following statement contains a magic number: Assert<C>(c => c.X % 2 == 1' 3' "{ \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.X % 2 == 1)' 2' "{ \"x\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.X % 2 == 1)' 2' "{ \"x\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoEquals1Reversed,The following statement contains a magic number: Assert<C>(c => 1 == c.X % 2' 3' "{ \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoEquals1Reversed,The following statement contains a magic number: Assert<C>(c => 1 == c.X % 2' 3' "{ \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.X % 2 != 1' 2' "{ \"x\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoNotEquals1,The following statement contains a magic number: Assert<C>(c => c.X % 2 != 1' 2' "{ \"x\" : { \"$not\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoNotEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.X % 2 != 1)' 3' "{ \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXModTwoNotEquals1Not,The following statement contains a magic number: Assert<C>(c => !(c.X % 2 != 1)' 3' "{ \"x\" : { \"$mod\" : [NumberLong(2)' NumberLong(1)] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,LegacyPredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\LegacyPredicateTranslatorTests.cs,TestWhereXNotEquals1,The following statement contains a magic number: Assert<C>(c => c.X != 1' 4' "{ \"x\" : { \"$ne\" : 1 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_without_a_predicate,The following statement contains a magic number: Assert(                  x => x.G.Any()'                  2'                  "{G: {$ne: null' $not: {$size: 0}}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_without_a_predicate_equals_true,The following statement contains a magic number: Assert(                  x => x.G.Any() == true'                  2'                  "{G: {$ne: null' $not: {$size: 0}}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_without_a_predicate_not_equals_false,The following statement contains a magic number: Assert(                  x => x.G.Any() != false'                  2'                  "{G: {$ne: null' $not: {$size: 0}}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_documents,The following statement contains a magic number: Assert(                  x => x.G.Any(g => g.D == "Don't" && g.E.F == 33)'                  1'                  "{ G : { $elemMatch : { D : \"Don't\"' 'E.F' : 33 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_document_itself,The following statement contains a magic number: Assert(                  x => x.G.Any(g => g != null)'                  2'                  "{ 'G' : { '$elemMatch' : { '$ne' : null } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_document_itself,The following statement contains a magic number: Assert(                  x => x.G.Any(g => null != g)'                  2'                  "{ 'G' : { '$elemMatch' : { '$ne' : null } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_documents_itself_and_ClassEquals,The following statement contains a magic number: var c1 = new C()              {                  D = "Dolphin"'                  E = new E()                  {                      F = 55'                      H = 66'                      I = new List<string>()                      {                          "insecure"                      }                  }              };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_documents_itself_and_ClassEquals,The following statement contains a magic number: var c1 = new C()              {                  D = "Dolphin"'                  E = new E()                  {                      F = 55'                      H = 66'                      I = new List<string>()                      {                          "insecure"                      }                  }              };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_gte_predicate_on_documents,The following statement contains a magic number: Assert(                  x => x.G.Any(g => g.E.F >= 100)'                  1'                  "{ \"G\" : { \"$elemMatch\" : { \"E.F\" : { \"$gte\" : 100 } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_ne_and_Equal_predicate_on_documents,The following statement contains a magic number: Assert(                  x => x.G.Any(g => !g.D.Equals("Don't"))'                  2'                  "{ \"G\" : { \"$elemMatch\" : { \"D\" : { \"$ne\" : \"Don't\" } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_multi_conditions_predicate_on_documents,The following statement contains a magic number: Assert(                  x => x.G.Any(g => g.D != "Don't" && g.E.F == 333)'                  1'                  "{ \"G\" : { \"$elemMatch\" : { \"D\" : { \"$ne\" : \"Don't\" }' \"E.F\" : 333 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_multi_conditions_predicate_on_documents,The following statement contains a magic number: Assert(                  x => x.G.Any(g => g.D == "Don't" || g.E.F != 32)'                  2'                  "{ \"G\" : { \"$elemMatch\" : { \"$or\" : [{ \"D\" : \"Don't\" }' { \"E.F\" : { \"$ne\" : 32 } }] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_multi_conditions_predicate_on_documents,The following statement contains a magic number: Assert(                  x => x.G.Any(g => g.D == "Don't" || g.E.F != 32)'                  2'                  "{ \"G\" : { \"$elemMatch\" : { \"$or\" : [{ \"D\" : \"Don't\" }' { \"E.F\" : { \"$ne\" : 32 } }] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The following statement contains a magic number: Assert(                  i => i.G.Any(g => g.Y.S.Any(s => s.Z.Any(z => z.C.X.Any(x => x.F == 4))))'                  1'                  "{ \"G.Y.S.Z.C.X\" : { $elemMatch : { \"F\" : 4 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The following statement contains a magic number: Assert(                  i => i.G.Any(g => g.D == "Don't" && g.Y.S.Any(s => s.E == null && s.Z.Any(z => z.C.X.Any(x => x.F == 4))))'                  1'                  "{ G:  { $elemMatch : { \"D\" : \"Don't\"' \"Y.S\" : { $elemMatch : { \"E\" : null' \"Z.C.X\" : { $elemMatch : { \"F\" : 4 } } } } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The following statement contains a magic number: Assert(                  i => i.G.Any(g => g.D == "Don't" && g.Y.S.Any(s => s.E == null && s.Z.Any(z => z.C.X.Any(x => x.F == 4 && x.H == 0))))'                  1'                  "{ G : { $elemMatch : { \"D\" : \"Don't\"' \"Y.S\" : { $elemMatch : { \"E\" : null' \"Z.C.X\" : { $elemMatch : { \"F\" : 4' \"H\" : 0 } } } } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The following statement contains a magic number: Assert(                  i => i.G.Any(g => g.D == "Don't" && g.Y.S.Any(s => s.E == null && s.Z.Any(z => z.F == 1 && z.C.X.Any(x => x.F == 4 && x.H == 0))))'                  1'                  "{ G : { $elemMatch : { \"D\" : \"Don't\"' \"Y.S\" : { $elemMatch : { \"E\" : null' \"Z\" : { $elemMatch : { \"F\" : 1' \"C.X\" : { $elemMatch : { \"F\" : 4' \"H\" : 0 } } } } } } } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The following statement contains a magic number: Assert(                  i => i.G.Any(                      g => g.D == "Don't" &&                           g.Y.S.Any(s => s.Z.Any(z => z.C.X.Any(x => x.F == 4))) &&                           g.S.Any(s => s.D == "Delilah" && s.Z.Any(z => z.F == 1 && z.H == 0)))'                  1'                  @"{ G : { $elemMatch : {                      ""D"" : ""Don't""'                      ""Y.S.Z.C.X"" : { $elemMatch : { ""F"" : 4 } }'                      ""S"" : { $elemMatch : { ""D"" : ""Delilah""' ""Z"" : { $elemMatch : { ""F"" : 1' ""H"" : 0 } } } }                  } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_advanced_nested_Anys,The following statement contains a magic number: Assert(                  i => i.G.Any(                      g => g.D == "Don't" &&                           g.Y.S.Any(s => s.E == null && s.Z.Any(z => z.F == 1 && z.C.X.Any(x => x.F == 4 && x.H == 0))) &&                           g.S.Any(s => s.D == "Delilah" && s.Z.Any(z => z.F == 1 && z.H == 0)))'                  1'                  @"{ G : { $elemMatch : {                      ""D"" : ""Don't""'                      ""Y.S"" : { $elemMatch : { ""E"" : null' ""Z"" : { $elemMatch : { ""F"" : 1' ""C.X"" : { $elemMatch : { ""F"" : 4' ""H"" : 0 } } } } } }'                      ""S"" : { $elemMatch : { ""D"" : ""Delilah""' ""Z"" : { $elemMatch : { ""F"" : 1' ""H"" : 0 } } } }                  } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_not_and_a_predicate_with_not_contains,The following statement contains a magic number: var x = new[] { 1' 2 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_not_and_a_predicate_with_contains,The following statement contains a magic number: var x = new[] { 1' 2 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_with_contains,The following statement contains a magic number: var x = new[] { 1' 2 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_with_not_contains,The following statement contains a magic number: var x = new[] { 1' 2 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_not,The following statement contains a magic number: Assert(                  x => x.G.Any(g => !g.S.Any())'                  2'                  "{ G : { $elemMatch : { $nor : [{ S : { $ne : null' $not : { $size : 0 } } }] } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_scalars_legacy,The following statement contains a magic number: Assert(                  x => x.M.Any(m => m > 5)'                  1'                  "{ M : { $elemMatch : { $gt : 5 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_scalars_legacy,The following statement contains a magic number: Assert(                  x => x.M.Any(m => m > 2 && m < 6)'                  2'                  "{ M : { $elemMatch : { $gt : 2' $lt : 6 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_scalars_legacy,The following statement contains a magic number: Assert(                  x => x.M.Any(m => m > 2 && m < 6)'                  2'                  "{ M : { $elemMatch : { $gt : 2' $lt : 6 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Any_with_a_predicate_on_scalars_legacy,The following statement contains a magic number: Assert(                  x => x.M.Any(m => m > 2 && m < 6)'                  2'                  "{ M : { $elemMatch : { $gt : 2' $lt : 6 } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,BitsAllClear_with_bitwise_operators,The following statement contains a magic number: Assert(                  x => (x.C.E.F & 20) == 0'                  1'                  "{'C.E.F': { $bitsAllClear: 20 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,BitsAllSet_with_bitwise_operators,The following statement contains a magic number: Assert(                  x => (x.C.E.F & 7) == 7'                  1'                  "{'C.E.F': { $bitsAllSet: 7 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,BitsAllSet_with_bitwise_operators,The following statement contains a magic number: Assert(                  x => (x.C.E.F & 7) == 7'                  1'                  "{'C.E.F': { $bitsAllSet: 7 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,BitsAnyClear_with_bitwise_operators,The following statement contains a magic number: Assert(                  x => (x.C.E.F & 7) != 7'                  1'                  "{'C.E.F': { $bitsAnyClear: 7 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,BitsAnyClear_with_bitwise_operators,The following statement contains a magic number: Assert(                  x => (x.C.E.F & 7) != 7'                  1'                  "{'C.E.F': { $bitsAnyClear: 7 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,BitsAnySet_with_bitwise_operators,The following statement contains a magic number: Assert(                  x => (x.C.E.F & 20) != 0'                  1'                  "{'C.E.F': { $bitsAnySet: 20 } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalIListContains,The following statement contains a magic number: IList<int> local = new[] { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalIListContains,The following statement contains a magic number: IList<int> local = new[] { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalIListContains,The following statement contains a magic number: IList<int> local = new[] { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalIListContains,The following statement contains a magic number: Assert(                  x => local.Contains(x.Id)'                  2'                  "{_id: {$in: [10' 20' 30]}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalListContains,The following statement contains a magic number: var local = new List<int> { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalListContains,The following statement contains a magic number: var local = new List<int> { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalListContains,The following statement contains a magic number: var local = new List<int> { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalListContains,The following statement contains a magic number: Assert(                  x => local.Contains(x.Id)'                  2'                  "{_id: {$in: [10' 20' 30]}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalArrayContains,The following statement contains a magic number: var local = new[] { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalArrayContains,The following statement contains a magic number: var local = new[] { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalArrayContains,The following statement contains a magic number: var local = new[] { 10' 20' 30 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,LocalArrayContains,The following statement contains a magic number: Assert(                  x => local.Contains(x.Id)'                  2'                  "{_id: {$in: [10' 20' 30]}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayLengthEquals,The following statement contains a magic number: Assert(                  x => x.M.Length == 3'                  2'                  "{M: {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayLengthEquals,The following statement contains a magic number: Assert(                  x => x.M.Length == 3'                  2'                  "{M: {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayLengthEquals,The following statement contains a magic number: Assert(                  x => 3 == x.M.Length'                  2'                  "{M: {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayLengthEquals,The following statement contains a magic number: Assert(                  x => 3 == x.M.Length'                  2'                  "{M: {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayLengthNotEquals,The following statement contains a magic number: Assert(                  x => x.M.Length != 3'                  0'                  "{M: {$not: {$size: 3}}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,NotArrayLengthEquals,The following statement contains a magic number: Assert(                  x => !(x.M.Length == 3)'                  0'                  "{M: {$not: {$size: 3}}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,NotArrayLengthNotEquals,The following statement contains a magic number: Assert(                  x => !(x.M.Length != 3)'                  2'                  "{M: {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,NotArrayLengthNotEquals,The following statement contains a magic number: Assert(                  x => !(x.M.Length != 3)'                  2'                  "{M: {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayPositionEquals,The following statement contains a magic number: Assert(                  x => x.M[1] == 4'                  1'                  "{'M.1': 4}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayPositionNotEquals,The following statement contains a magic number: Assert(                  x => x.M[1] != 4'                  1'                  "{'M.1': {$ne: 4}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayPositionModEqual,The following statement contains a magic number: Assert(                  x => x.M[1] % 2 == 0'                  1'                  "{'M.1': {$mod: [NumberLong(2)' NumberLong(0)]}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayPositionModNotEqual,The following statement contains a magic number: Assert(                  x => x.M[1] % 3 != 2'                  1'                  "{'M.1': {$not: {$mod: [NumberLong(3)' NumberLong(2)]}}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ArrayPositionModNotEqual,The following statement contains a magic number: Assert(                  x => x.M[1] % 3 != 2'                  1'                  "{'M.1': {$not: {$mod: [NumberLong(3)' NumberLong(2)]}}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ClassNotEquals,The following statement contains a magic number: Assert(                  x => x.C != new C { D = "Dexter" }'                  2'                  "{ C : { $ne : { Ids : null' D : 'Dexter'' E : null' S : null' X : null' Y : null' Z : null } } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,EnumerableCount,The following statement contains a magic number: Assert(                  x => x.G.Count() == 2'                  2'                  "{'G': {$size: 2}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,EnumerableCount,The following statement contains a magic number: Assert(                  x => x.G.Count() == 2'                  2'                  "{'G': {$size: 2}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,HashSetCount,The following statement contains a magic number: Assert(                  x => x.L.Count == 3'                  2'                  "{'L': {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,HashSetCount,The following statement contains a magic number: Assert(                  x => x.L.Count == 3'                  2'                  "{'L': {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ListCount,The following statement contains a magic number: Assert(                  x => x.O.Count == 3'                  2'                  "{'O': {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ListCount,The following statement contains a magic number: Assert(                  x => x.O.Count == 3'                  2'                  "{'O': {$size: 3}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ListSubEquals,The following statement contains a magic number: Assert(                  x => x.O[2] == 30'                  1'                  "{'O.2': NumberLong(30)}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,ListSubEquals,The following statement contains a magic number: Assert(                  x => x.O[2] == 30'                  1'                  "{'O.2': NumberLong(30)}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,OfType,The following statement contains a magic number: Assert(__otherCollection'                  x => x.Children.OfType<OtherChild2>().Any(y => y.Z == 10)'                  0'                  "{Children: {$elemMatch: { _t: 'OtherChild2'' Z: 10 }}}");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Not_String_IsNullOrEmpty,The following statement contains a magic number: Assert(                  x => !string.IsNullOrEmpty(x.A)'                  2'                  "{A: { $nin: [null' ''] } }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Binding_through_a_necessary_conversion,The following statement contains a magic number: long id = 10;
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Binding_through_an_unnecessary_conversion,The following statement contains a magic number: var root = FindFirstOrDefault(__collection' 10);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,Binding_through_an_unnecessary_conversion_with_a_builder,The following statement contains a magic number: var root = FindFirstOrDefaultWithBuilder(__collection' 10);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorTests.cs,FillCustomDocuments,The following statement contains a magic number: customDocuments.AddRange(                  new[]                  {                      new Root { Id = 1' M = new int[0] }'                      new Root { Id = 2' M = new [] { 1 } }'                      new Root { Id = 3' M = new [] { 2 } }'                      new Root { Id = 4' M = new [] { 3 } }'                      new Root { Id = 5' M = new [] { 4 } }'                      new Root { Id = 6' M = new [] { 1' 2 } }'                      new Root { Id = 7' M = new [] { 1' 3 } }'                      new Root { Id = 8' M = new [] { 1' 4 } }'                      new Root { Id = 9' M = new [] { 2' 3 } }'                      new Root { Id = 10' M = new [] { 3' 4} }'                      new Root { Id = 11' M = new [] { 1' 2' 3 } }'                      new Root { Id = 12' M = new [] { 1' 2 '4 } }'                      new Root { Id = 13' M = new [] { 1' 3' 4 } }'                      new Root { Id = 14' M = new [] { 1' 2' 3' 4 } }                  });
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_a_child_expression_is_called_from_locals,The following statement contains a magic number: var local = new List<int> { 1' 2 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_a_child_expression_is_called_from_nested_locals,The following statement contains a magic number: var local = new List<int> { 1' 2 };
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_a_child_expression_is_called_from_nested_locals,The following statement contains a magic number: expr = (a) => a.Collection1.Any(                  b =>                      b.Collection1 != null && b.Collection1.Any(                          c =>                              c.Collection1.Any(d => d.Value1 == 2) &&                              local2.Any(e => c.Collection3.Contains(e))                          ));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_there_are_no_parent_parameters_in_child_expressions,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr =                  (a) =>                      a.Collection1                          .Where(b => b.Collection1.Any(d => d.Value1 != 2))                          .Any(c => c.Value1 == 3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_there_are_no_parent_parameters_in_child_expressions,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr =                  (a) =>                      a.Collection1                          .Where(b => b.Collection1.Any(d => d.Value1 != 2))                          .Any(c => c.Value1 == 3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_there_are_several_conditions_and_there_are_no_parent_parameters_in_children,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr =                  (a) =>                      a.Collection1.Any(c => c.Value1 == 3) &&                      a.Collection1.Any(d => d.Value1 != 4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_there_are_several_conditions_and_there_are_no_parent_parameters_in_children,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr =                  (a) =>                      a.Collection1.Any(c => c.Value1 == 3) &&                      a.Collection1.Any(d => d.Value1 != 4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_there_are_several_conditions_and_there_are_no_parent_parameters_in_children,The following statement contains a magic number: expr =                  (a) => a.Collection1                      .Any(                          c => c.Value1 != 3 && c.Collection1.Any(d => d.Value1 != 5));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_not_throw_the_exception_when_there_are_several_conditions_and_there_are_no_parent_parameters_in_children,The following statement contains a magic number: expr =                  (a) => a.Collection1                      .Any(                          c => c.Value1 != 3 && c.Collection1.Any(d => d.Value1 != 5));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_grandparents,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr = (a) => a.Collection1.Any(b => b.Collection1.Any(c => a.Value1 == 2));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr = (a) => a.Collection1.Any(b => a.Value1 == 2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The following statement contains a magic number: expr = (a) => a.Collection1.Any(b => b.Value1 == 2 && a.Value1 == 3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The following statement contains a magic number: expr = (a) => a.Collection1.Any(b => b.Value1 == 2 && a.Value1 == 3);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_a_child_expression_uses_parameters_from_parents,The following statement contains a magic number: expr = (a) => a.Collection1.Where(b => a.Value1 == 2).Any();
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_there_is_the_parent_parameter_in_the_child_expression_and_there_are_several_conditions,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr =                  (a) =>                      a.Collection1.Any(c => c.Value1 == 3) &&                      a.Collection1.Any(d => a.Value1 != 4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_there_is_the_parent_parameter_in_the_child_expression_and_there_are_several_conditions,The following statement contains a magic number: Expression<Func<TestObject' bool>> expr =                  (a) =>                      a.Collection1.Any(c => c.Value1 == 3) &&                      a.Collection1.Any(d => a.Value1 != 4);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_there_is_the_parent_parameter_in_the_child_expression_and_there_are_several_conditions,The following statement contains a magic number: expr =                  (a) => a.Collection1                      .Any(                          c => c.Value1 != 3 && c.Collection1.Any(d => a.Value1 != 5));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateTranslatorValidationTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateTranslatorValidationTests.cs,Should_throw_the_exception_when_there_is_the_parent_parameter_in_the_child_expression_and_there_are_several_conditions,The following statement contains a magic number: expr =                  (a) => a.Collection1                      .Any(                          c => c.Value1 != 3 && c.Collection1.Any(d => a.Value1 != 5));
Magic Number,MongoDB.Driver.Tests.Linq.Translators,PredicateValueConversionTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\PredicateValueConversionTests.cs,Value_conversion_with_primitive_types,The following statement contains a magic number: Assert(                  x => x.B == (object)10'                  0'                  "{ B : '10' }");
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectDeserializerTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectDeserializerTests.cs,Should_deserialize_top_level_fields,The following statement contains a magic number: result.GetValue<int>("b"' null).Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectDeserializerTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectDeserializerTests.cs,Should_deserialize_unspecified_documents,The following statement contains a magic number: result.GetValue<int>("a.c"' null).Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectDeserializerTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectDeserializerTests.cs,Should_deserialize_unspecified_arrays,The following statement contains a magic number: var list = result.GetValue<IEnumerable<object>>("a"' null)                  .Cast<ProjectedObject>()                  .Select(x => x.GetValue<int>("b"' 10)).ToList();
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectDeserializerTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectDeserializerTests.cs,Should_deserialize_unspecified_arrays,The following statement contains a magic number: list.Should().BeEquivalentTo(1' 2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,Should_retrieve_scalar_value_from_top_level,The following statement contains a magic number: var a = subject.GetValue<int>("a"' 10);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,Should_retrieve_dotted_value_from_top_level,The following statement contains a magic number: var c = subject.GetValue<int>("b.c"' 10);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,Should_retrieve_dotted_value_from_top_level,The following statement contains a magic number: c.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,Should_retrieve_dotted_value_from_nested_level,The following statement contains a magic number: var g = subject.GetValue<int>("d.f.g"' 20);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,Should_retrieve_dotted_value_from_nested_level,The following statement contains a magic number: g.Should().Be(10);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,Should_retrieve_dotted_value_from_dotted_nested_level,The following statement contains a magic number: var g = subject.GetValue<int>("h.i.j.k"' 10);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,Should_retrieve_dotted_value_from_dotted_nested_level,The following statement contains a magic number: g.Should().Be(30);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,CreateSubject,The following statement contains a magic number: root.Add("b.c"' 2);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,CreateSubject,The following statement contains a magic number: d.Add("f.g"' 10);
Magic Number,MongoDB.Driver.Tests.Linq.Translators,ProjectedObjectTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Linq\Translators\ProjectedObjectTests.cs,CreateSubject,The following statement contains a magic number: h.Add("j.k"' 30);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Aggregate_should_execute_an_AggregateOperation_when_out_is_not_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Aggregate_should_execute_an_AggregateOperation_when_out_is_not_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Aggregate_should_execute_an_AggregateOperation_when_out_is_not_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Aggregate_should_execute_an_AggregateToCollectionOperation_and_a_FindOperation_when_out_is_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  BypassDocumentValidation = true'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false'              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Aggregate_should_execute_an_AggregateToCollectionOperation_and_a_FindOperation_when_out_is_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  BypassDocumentValidation = true'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false'              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var operationResult = new BulkWriteOperationResult.Unacknowledged(9' new[] { new InsertRequest(new BsonDocument("b"' 1)) });
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: operation.Requests.Count().Should().Be(9);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[2].Should().BeOfType<DeleteRequest>();
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[2].CorrelationId.Should().Be(2);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[2].CorrelationId.Should().Be(2);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var convertedRequest2 = (DeleteRequest)convertedRequests[2];
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[3].Should().BeOfType<UpdateRequest>();
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[3].CorrelationId.Should().Be(3);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[3].CorrelationId.Should().Be(3);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var convertedRequest3 = (UpdateRequest)convertedRequests[3];
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[4].Should().BeOfType<UpdateRequest>();
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[4].CorrelationId.Should().Be(4);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[4].CorrelationId.Should().Be(4);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var convertedRequest4 = (UpdateRequest)convertedRequests[4];
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[5].Should().BeOfType<UpdateRequest>();
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[5].CorrelationId.Should().Be(5);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[5].CorrelationId.Should().Be(5);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var convertedRequest5 = (UpdateRequest)convertedRequests[5];
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[6].Should().BeOfType<UpdateRequest>();
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[6].CorrelationId.Should().Be(6);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[6].CorrelationId.Should().Be(6);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var convertedRequest6 = (UpdateRequest)convertedRequests[6];
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[7].Should().BeOfType<UpdateRequest>();
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[7].CorrelationId.Should().Be(7);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[7].CorrelationId.Should().Be(7);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var convertedRequest7 = (UpdateRequest)convertedRequests[7];
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[8].Should().BeOfType<UpdateRequest>();
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[8].CorrelationId.Should().Be(8);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: convertedRequests[8].CorrelationId.Should().Be(8);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: var convertedRequest8 = (UpdateRequest)convertedRequests[8];
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_execute_a_BulkMixedWriteOperation,The following statement contains a magic number: result.RequestCount.Should().Be(9);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,BulkWrite_should_throw_if_model_is_invalid,The following statement contains a magic number: var models = new WriteModel<BsonDocument>[]              {                  new UpdateOneModel<BsonDocument>(new BsonDocument("n"' 1)' update)                  {                      ArrayFilters = arrayFilters                  }'                  new UpdateManyModel<BsonDocument>(new BsonDocument("n"' 2)' update)                  {                      ArrayFilters = arrayFilters                  }              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Count_should_execute_a_CountOperation,The following statement contains a magic number: var options = new CountOptions              {                  Collation = new Collation("en_US")'                  Hint = "funny"'                  Limit = 10'                  MaxTime = TimeSpan.FromSeconds(20)'                  Skip = 30              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Count_should_execute_a_CountOperation,The following statement contains a magic number: var options = new CountOptions              {                  Collation = new Collation("en_US")'                  Hint = "funny"'                  Limit = 10'                  MaxTime = TimeSpan.FromSeconds(20)'                  Skip = 30              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Count_should_execute_a_CountOperation,The following statement contains a magic number: var options = new CountOptions              {                  Collation = new Collation("en_US")'                  Hint = "funny"'                  Limit = 10'                  MaxTime = TimeSpan.FromSeconds(20)'                  Skip = 30              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,CountDocuments_should_execute_a_CountDocumentsOperation,The following statement contains a magic number: var options = new CountOptions              {                  Collation = new Collation("en_US")'                  Hint = "funny"'                  Limit = 10'                  MaxTime = TimeSpan.FromSeconds(20)'                  Skip = 30              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,CountDocuments_should_execute_a_CountDocumentsOperation,The following statement contains a magic number: var options = new CountOptions              {                  Collation = new Collation("en_US")'                  Hint = "funny"'                  Limit = 10'                  MaxTime = TimeSpan.FromSeconds(20)'                  Skip = 30              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,CountDocuments_should_execute_a_CountDocumentsOperation,The following statement contains a magic number: var options = new CountOptions              {                  Collation = new Collation("en_US")'                  Hint = "funny"'                  Limit = 10'                  MaxTime = TimeSpan.FromSeconds(20)'                  Skip = 30              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,DeleteMany_should_execute_a_BulkMixedOperation,The following statement contains a magic number: var operationResult = new BulkWriteOperationResult.Unacknowledged(9' new[] { processedRequest });
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,DeleteMany_should_throw_a_WriteException_when_an_error_occurs,The following statement contains a magic number: var operationException = new MongoBulkWriteOperationException(                  _connectionId'                  new BulkWriteOperationResult.Acknowledged(                      requestCount: 1'                      matchedCount: 1'                      deletedCount: 0'                      insertedCount: 0'                      modifiedCount: 0'                      processedRequests: new[] { processedRequest }'                      upserts: new List<BulkWriteOperationUpsert>())'                  new[] { new BulkWriteOperationError(10' 1' "blah"' new BsonDocument()) }'                  null'                  new List<WriteRequest>());
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,DeleteOne_should_execute_a_BulkMixedOperation,The following statement contains a magic number: var operationResult = new BulkWriteOperationResult.Unacknowledged(9' new[] { processedRequest });
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Distinct_should_execute_a_DistinctOperation,The following statement contains a magic number: var options = new DistinctOptions              {                  Collation = new Collation("en_US")'                  MaxTime = TimeSpan.FromSeconds(20)              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Distinct_should_execute_a_DistinctOperation_when_type_parameter_is_array_field_item_type,The following statement contains a magic number: var options = new DistinctOptions              {                  Collation = new Collation("en_US")'                  MaxTime = TimeSpan.FromSeconds(20)              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Distinct_should_execute_a_DistinctOperation_when_type_parameter_is_string_instead_of_enum,The following statement contains a magic number: var options = new DistinctOptions              {                  Collation = new Collation("en_US")'                  MaxTime = TimeSpan.FromSeconds(20)              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,EstimatedDocumentCount_should_execute_a_CountOperation,The following statement contains a magic number: var options = new EstimatedDocumentCountOptions              {                  MaxTime = TimeSpan.FromSeconds(20)              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_should_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_should_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_should_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_should_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_should_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_with_an_expression_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_with_an_expression_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_with_an_expression_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_with_an_expression_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Find_with_an_expression_execute_a_FindOperation,The following statement contains a magic number: var options = new FindOptions<BsonDocument' BsonDocument>              {                  AllowPartialResults = true'                  BatchSize = 20'                  Collation = new Collation("en_US")'                  Comment = "funny"'                  CursorType = CursorType.TailableAwait'                  Limit = 30'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'  #pragma warning disable 618                  Modifiers = BsonDocument.Parse("{ $snapshot : true }")'  #pragma warning restore 618                  NoCursorTimeout = true'                  OplogReplay = true'                  Projection = projectionDefinition'                  Skip = 40'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndDelete_should_execute_a_FindOneAndDeleteOperation,The following statement contains a magic number: var options = new FindOneAndDeleteOptions<BsonDocument' BsonDocument>              {                  Collation = new Collation("en_US")'                  Projection = projectionDefinition'                  Sort = sortDefinition'                  MaxTime = TimeSpan.FromSeconds(2)              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndReplace_should_execute_a_FindOneAndReplaceOperation,The following statement contains a magic number: var options = new FindOneAndReplaceOptions<BsonDocument' BsonDocument>()              {                  BypassDocumentValidation = bypassDocumentValidation'                  Collation = new Collation("en_US")'                  IsUpsert = isUpsert'                  MaxTime = TimeSpan.FromSeconds(2)'                  Projection = projectionDefinition'                  ReturnDocument = returnDocument'                  Sort = sortDefinition              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,FindOneAndUpdate_should_execute_a_FindOneAndUpdateOperation,The following statement contains a magic number: var options = new FindOneAndUpdateOptions<BsonDocument' BsonDocument>()              {                  ArrayFilters = new[] { arrayFilterDefinition }'                  BypassDocumentValidation = bypassDocumentValidation'                  Collation = new Collation("en_US")'                  IsUpsert = isUpsert'                  MaxTime = TimeSpan.FromSeconds(2)'                  Projection = projectionDefinition'                  ReturnDocument = returnDocument'                  Sort = sortDefinition'              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateOne_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: var options = new CreateIndexOptions<BsonDocument>              {                  Background = true'                  Bits = 10'                  BucketSize = 20'                  Collation = new Collation("en_US")'                  DefaultLanguage = "en"'                  ExpireAfter = TimeSpan.FromSeconds(20)'                  LanguageOverride = "es"'                  Max = 30'                  Min = 40'                  Name = "awesome"'                  PartialFilterExpression = partialFilterDefinition'                  Sparse = false'                  SphereIndexVersion = 50'                  StorageEngine = storageEngine'                  TextIndexVersion = 60'                  Unique = true'                  Version = 70'                  Weights = weights              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_CreateMany_should_execute_a_CreateIndexesOperation,The following statement contains a magic number: operation.Requests.Count().Should().Be(2);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_DropAll_should_execute_a_DropIndexOperation,The following statement contains a magic number: var maxTime = TimeSpan.FromMilliseconds(42);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Indexes_DropOne_should_execute_a_DropIndexOperation,The following statement contains a magic number: var maxTime = TimeSpan.FromMilliseconds(42);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,InsertMany_should_execute_a_BulkMixedOperation,The following statement contains a magic number: var operationResult = new BulkWriteOperationResult.Unacknowledged(2' processedRequests);
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,MapReduce_with_inline_output_mode_should_execute_a_MapReduceOperation,The following statement contains a magic number: var options = new MapReduceOptions<BsonDocument' BsonDocument>              {                  Collation = new Collation("en_US")'                  Filter = filterDefinition'                  Finalize = new BsonJavaScript("finalizer")'                  JavaScriptMode = true'                  Limit = 10'                  MaxTime = TimeSpan.FromMinutes(2)'                  OutputOptions = MapReduceOutputOptions.Inline'                  Scope = new BsonDocument("test"' 3)'                  Sort = sortDefinition'                  Verbose = true              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,MapReduce_with_inline_output_mode_should_execute_a_MapReduceOperation,The following statement contains a magic number: var options = new MapReduceOptions<BsonDocument' BsonDocument>              {                  Collation = new Collation("en_US")'                  Filter = filterDefinition'                  Finalize = new BsonJavaScript("finalizer")'                  JavaScriptMode = true'                  Limit = 10'                  MaxTime = TimeSpan.FromMinutes(2)'                  OutputOptions = MapReduceOutputOptions.Inline'                  Scope = new BsonDocument("test"' 3)'                  Sort = sortDefinition'                  Verbose = true              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,MapReduce_with_inline_output_mode_should_execute_a_MapReduceOperation,The following statement contains a magic number: var options = new MapReduceOptions<BsonDocument' BsonDocument>              {                  Collation = new Collation("en_US")'                  Filter = filterDefinition'                  Finalize = new BsonJavaScript("finalizer")'                  JavaScriptMode = true'                  Limit = 10'                  MaxTime = TimeSpan.FromMinutes(2)'                  OutputOptions = MapReduceOutputOptions.Inline'                  Scope = new BsonDocument("test"' 3)'                  Sort = sortDefinition'                  Verbose = true              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,MapReduce_with_collection_output_mode_should_execute_a_MapReduceOutputToCollectionOperation,The following statement contains a magic number: var options = new MapReduceOptions<BsonDocument' BsonDocument>              {                  BypassDocumentValidation = true'                  Collation = new Collation("en_US")'                  Filter = filterDefinition'                  Finalize = new BsonJavaScript("finalizer")'                  JavaScriptMode = true'                  Limit = 10'                  MaxTime = TimeSpan.FromMinutes(2)'                  OutputOptions = MapReduceOutputOptions.Replace("awesome"' "otherDB"' true)'                  Scope = new BsonDocument("test"' 3)'                  Sort = sortDefinition'                  Verbose = true              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,MapReduce_with_collection_output_mode_should_execute_a_MapReduceOutputToCollectionOperation,The following statement contains a magic number: var options = new MapReduceOptions<BsonDocument' BsonDocument>              {                  BypassDocumentValidation = true'                  Collation = new Collation("en_US")'                  Filter = filterDefinition'                  Finalize = new BsonJavaScript("finalizer")'                  JavaScriptMode = true'                  Limit = 10'                  MaxTime = TimeSpan.FromMinutes(2)'                  OutputOptions = MapReduceOutputOptions.Replace("awesome"' "otherDB"' true)'                  Scope = new BsonDocument("test"' 3)'                  Sort = sortDefinition'                  Verbose = true              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,MapReduce_with_collection_output_mode_should_execute_a_MapReduceOutputToCollectionOperation,The following statement contains a magic number: var options = new MapReduceOptions<BsonDocument' BsonDocument>              {                  BypassDocumentValidation = true'                  Collation = new Collation("en_US")'                  Filter = filterDefinition'                  Finalize = new BsonJavaScript("finalizer")'                  JavaScriptMode = true'                  Limit = 10'                  MaxTime = TimeSpan.FromMinutes(2)'                  OutputOptions = MapReduceOutputOptions.Replace("awesome"' "otherDB"' true)'                  Scope = new BsonDocument("test"' 3)'                  Sort = sortDefinition'                  Verbose = true              };
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,ReplaceOne_should_execute_a_BulkMixedOperation,The following statement contains a magic number: var operationResult = new BulkWriteOperationResult.Unacknowledged(9' new[] { processedRequest });
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateMany_should_execute_a_BulkMixedOperation,The following statement contains a magic number: var operationResult = new BulkWriteOperationResult.Unacknowledged(9' new[] { processedRequest });
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,UpdateOne_should_execute_a_BulkMixedOperation,The following statement contains a magic number: var operationResult = new BulkWriteOperationResult.Unacknowledged(9' new[] { processedRequest });
Magic Number,MongoDB.Driver,MongoCollectionImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoCollectionImplTests.cs,Watch_should_execute_a_ChangeStreamOperation,The following statement contains a magic number: var startAtOperationTime = new BsonTimestamp(1' 2);
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Aggregate_should_execute_an_AggregateOperation_when_out_is_not_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Aggregate_should_execute_an_AggregateOperation_when_out_is_not_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Aggregate_should_execute_an_AggregateOperation_when_out_is_not_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxAwaitTime = TimeSpan.FromSeconds(4)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Aggregate_should_execute_an_AggregateToCollectionOperation_and_a_FindOperation_when_out_is_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  BypassDocumentValidation = true'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false'              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Aggregate_should_execute_an_AggregateToCollectionOperation_and_a_FindOperation_when_out_is_specified,The following statement contains a magic number: var options = new AggregateOptions()              {                  AllowDiskUse = true'                  BatchSize = 10'                  BypassDocumentValidation = true'                  Collation = new Collation("en_US")'                  Comment = "test"'                  Hint = new BsonDocument("x"' 1)'                  MaxTime = TimeSpan.FromSeconds(3)'                  UseCursor = false'              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,CreateCollection_should_execute_a_CreateCollectionOperation_when_options_is_generic,The following statement contains a magic number: var options = new CreateCollectionOptions<BsonDocument>              {                  AutoIndexId = false'                  Capped = true'                  Collation = new Collation("en_US")'                  IndexOptionDefaults = new IndexOptionDefaults { StorageEngine = new BsonDocument("x"' 1) }'                  MaxDocuments = 10'                  MaxSize = 11'                  NoPadding = true'                  StorageEngine = storageEngine'                  UsePowerOf2Sizes = true'                  ValidationAction = DocumentValidationAction.Warn'                  ValidationLevel = DocumentValidationLevel.Off'                  Validator = validatorDefinition              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,CreateCollection_should_execute_a_CreateCollectionOperation_when_options_is_generic,The following statement contains a magic number: var options = new CreateCollectionOptions<BsonDocument>              {                  AutoIndexId = false'                  Capped = true'                  Collation = new Collation("en_US")'                  IndexOptionDefaults = new IndexOptionDefaults { StorageEngine = new BsonDocument("x"' 1) }'                  MaxDocuments = 10'                  MaxSize = 11'                  NoPadding = true'                  StorageEngine = storageEngine'                  UsePowerOf2Sizes = true'                  ValidationAction = DocumentValidationAction.Warn'                  ValidationLevel = DocumentValidationLevel.Off'                  Validator = validatorDefinition              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,CreateCollection_should_execute_a_CreateCollectionOperation_when_options_is_not_generic,The following statement contains a magic number: var options = new CreateCollectionOptions              {                  AutoIndexId = false'                  Capped = true'                  Collation = new Collation("en_US")'                  IndexOptionDefaults = new IndexOptionDefaults { StorageEngine = new BsonDocument("x"' 1) }'                  MaxDocuments = 10'                  MaxSize = 11'                  NoPadding = true'                  StorageEngine = storageEngine'                  UsePowerOf2Sizes = true'                  ValidationAction = DocumentValidationAction.Warn'                  ValidationLevel = DocumentValidationLevel.Off              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,CreateCollection_should_execute_a_CreateCollectionOperation_when_options_is_not_generic,The following statement contains a magic number: var options = new CreateCollectionOptions              {                  AutoIndexId = false'                  Capped = true'                  Collation = new Collation("en_US")'                  IndexOptionDefaults = new IndexOptionDefaults { StorageEngine = new BsonDocument("x"' 1) }'                  MaxDocuments = 10'                  MaxSize = 11'                  NoPadding = true'                  StorageEngine = storageEngine'                  UsePowerOf2Sizes = true'                  ValidationAction = DocumentValidationAction.Warn'                  ValidationLevel = DocumentValidationLevel.Off              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Watch_should_invoke_the_correct_operation,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Watch_should_invoke_the_correct_operation,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,Watch_should_invoke_the_correct_operation,The following statement contains a magic number: var options = new ChangeStreamOptions              {                  BatchSize = 123'                  Collation = new Collation("en-us")'                  FullDocument = ChangeStreamFullDocumentOption.UpdateLookup'                  MaxAwaitTime = TimeSpan.FromSeconds(123)'                  ResumeAfter = new BsonDocument()'                  StartAfter = new BsonDocument()'                  StartAtOperationTime = new BsonTimestamp(1' 2)              };
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,WithWriteConcern_should_return_expected_result,The following statement contains a magic number: var originalWriteConcern = new WriteConcern(2);
Magic Number,MongoDB.Driver,MongoDatabaseImplTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\MongoDatabaseImplTests.cs,WithWriteConcern_should_return_expected_result,The following statement contains a magic number: var newWriteConcern = new WriteConcern(3);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,OneTimeSetup,The following statement contains a magic number: __collection.InsertMany(new[]              {                  new ZipEntry { Zip = "01053"' City = "LEEDS"' State = "MA"' Population = 1350 }'                  new ZipEntry { Zip = "01054"' City = "LEVERETT"' State = "MA"' Population = 1748 }'                  new ZipEntry { Zip = "01056"' City = "LUDLOW"' State = "MA"' Population = 18820 }'                  new ZipEntry { Zip = "01057"' City = "MONSON"' State = "MA"' Population = 8194 }'                  new ZipEntry { Zip = "36779"' City = "SPROTT"' State = "AL"' Population = 1191 }'                  new ZipEntry { Zip = "36782"' City = "SWEET WATER"' State = "AL"' Population = 2444 }'                  new ZipEntry { Zip = "36783"' City = "THOMASTON"' State = "AL"' Population = 1527 }'                  new ZipEntry { Zip = "36784"' City = "THOMASVILLE"' State = "AL"' Population = 6229 }'              });
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,States_with_pops_over_20000,The following statement contains a magic number: var pipeline = __collection.Aggregate()                  .Group(x => x.State' g => new { State = g.Key' TotalPopulation = g.Sum(x => x.Population) })                  .Match(x => x.TotalPopulation > 20000);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,States_with_pops_over_20000_queryable_method,The following statement contains a magic number: var pipeline = __collection.AsQueryable()                  .GroupBy(x => x.State' (k' s) => new { State = k' TotalPopulation = s.Sum(x => x.Population) })                  .Where(x => x.TotalPopulation > 20000);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,States_with_pops_over_20000_queryable_syntax,The following statement contains a magic number: var pipeline = from z in __collection.AsQueryable()                             group z by z.State into g                             where g.Sum(x => x.Population) > 20000                             select new { State = g.Key' TotalPopulation = g.Sum(x => x.Population) };
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Average_city_population_by_state,The following statement contains a magic number: result[0].AverageCityPopulation.Should().Be(2847.75);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Average_city_population_by_state,The following statement contains a magic number: result[1].AverageCityPopulation.Should().Be(7528);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The following statement contains a magic number: result[0].BiggestCity.Population.Should().Be(6229);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The following statement contains a magic number: result[0].SmallestCity.Population.Should().Be(1191);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The following statement contains a magic number: result[1].BiggestCity.Population.Should().Be(18820);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state,The following statement contains a magic number: result[1].SmallestCity.Population.Should().Be(1350);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state_queryable_syntax,The following statement contains a magic number: result[0].BiggestCity.Population.Should().Be(6229);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state_queryable_syntax,The following statement contains a magic number: result[0].SmallestCity.Population.Should().Be(1191);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state_queryable_syntax,The following statement contains a magic number: result[1].BiggestCity.Population.Should().Be(18820);
Magic Number,MongoDB.Driver.Tests.Samples,AggregationSample,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Samples\AggregationSample.cs,Largest_and_smallest_cities_by_state_queryable_syntax,The following statement contains a magic number: result[1].SmallestCity.Population.Should().Be(1350);
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: var exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "over_2mib_under_16mib" }'                              { "unencrypted"' new string('a'' 2097152) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc.AddRange(                      new BsonDocument                      {                          {"_id"' "encryption_exceeds_2mib"}'                          {"unencrypted"' new string('a'' 2097152 - 2000)}                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc.AddRange(                      new BsonDocument                      {                          {"_id"' "encryption_exceeds_2mib"}'                          {"unencrypted"' new string('a'' 2097152 - 2000)}                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "over_2mib_1" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "over_2mib_2" }'                              { "unencrypted"' new string('a'' 2097152) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "over_2mib_1" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "over_2mib_2" }'                              { "unencrypted"' new string('a'' 2097152) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: eventCapturer.Count.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc1.AddRange(                      new BsonDocument                      {                          { "_id"' "encryption_exceeds_2mib_1" }'                          { "unencrypted"' new string('a'' 2097152 - 2000) }                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc1.AddRange(                      new BsonDocument                      {                          { "_id"' "encryption_exceeds_2mib_1" }'                          { "unencrypted"' new string('a'' 2097152 - 2000) }                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc2.AddRange(                      new BsonDocument                      {                          { "_id"' "encryption_exceeds_2mib_2" }'                          { "unencrypted"' new string('a'' 2097152 - 2000) }                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc2.AddRange(                      new BsonDocument                      {                          { "_id"' "encryption_exceeds_2mib_2" }'                          { "unencrypted"' new string('a'' 2097152 - 2000) }                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: eventCapturer.Count.Should().Be(2);
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "under_16mib" }'                              { "unencrypted"' new string('a'' 16777216 - 2000) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "under_16mib" }'                              { "unencrypted"' new string('a'' 16777216 - 2000) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc.AddRange(                      new BsonDocument                      {                          {"_id"' "encryption_exceeds_16mib"}'                          {"unencrypted"' new string('a'' 16777216 - 2000)}                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: limitsDoc.AddRange(                      new BsonDocument                      {                          {"_id"' "encryption_exceeds_16mib"}'                          {"unencrypted"' new string('a'' 16777216 - 2000)}                      });
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_1" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_2" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_3" }'                              { "unencrypted"' new string('a'' 2097152) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_1" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_2" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_3" }'                              { "unencrypted"' new string('a'' 2097152) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: exception = Record.Exception(                      () => Insert(                          coll'                          async'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_1" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_2" }'                              { "unencrypted"' new string('a'' 2097152) }                          }'                          new BsonDocument                          {                              { "_id"' "advanced_over_2mib_3" }'                              { "unencrypted"' new string('a'' 2097152) }                          }));
Magic Number,MongoDB.Driver.Tests.Specifications.client_side_encryption.prose_tests,ClientEncryptionProseTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\client-side-encryption\prose-tests\ClientEncryptionProseTests.cs,BsonSizeLimitAndBatchSizeSplittingTest,The following statement contains a magic number: eventCapturer.Count.Should().Be(3);
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The following statement contains a magic number: CoreTestConfiguration.ServerVersion >= new SemanticVersion(4' 1' 5' "")
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The following statement contains a magic number: CoreTestConfiguration.ServerVersion >= new SemanticVersion(4' 1' 5' "")
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The following statement contains a magic number: !SpinWait.SpinUntil(() => __capturedEvents.Count == expectations.Count' TimeSpan.FromSeconds(5))
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,MassageCommand,The following statement contains a magic number: switch (commandName)              {                  case "delete":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      break;                  case "getMore":                      massagedCommand["getMore"] = 42L;                      break;                  case "insert":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      break;                  case "killCursors":                      massagedCommand["cursors"][0] = 42L;                      break;                  case "update":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      foreach (BsonDocument update in (BsonArray)massagedCommand["updates"])                      {                          update["multi"] = update.GetValue("multi"' false);                          update["upsert"] = update.GetValue("upsert"' false);                      }                        break;              }
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,MassageCommand,The following statement contains a magic number: switch (commandName)              {                  case "delete":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      break;                  case "getMore":                      massagedCommand["getMore"] = 42L;                      break;                  case "insert":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      break;                  case "killCursors":                      massagedCommand["cursors"][0] = 42L;                      break;                  case "update":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      foreach (BsonDocument update in (BsonArray)massagedCommand["updates"])                      {                          update["multi"] = update.GetValue("multi"' false);                          update["upsert"] = update.GetValue("upsert"' false);                      }                        break;              }
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,MassageReply,The following statement contains a magic number: switch (commandName)              {                  case "find":                  case "getMore":                      if (massagedReply.Contains("cursor") && massagedReply["cursor"]["id"] != 0L)                      {                          massagedReply["cursor"]["id"] = 42L;                      }                      break;                  case "killCursors":                      massagedReply["cursorsUnknown"][0] = 42L;                      break;                  case "delete":                  case "insert":                  case "update":                      if (massagedReply.Contains("writeErrors"))                      {                          foreach (BsonDocument writeError in (BsonArray)massagedReply["writeErrors"])                          {                              writeError["code"] = 42;                              writeError["errmsg"] = "";                              writeError.Remove("codeName");                          }                      }                      break;              }
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,MassageReply,The following statement contains a magic number: switch (commandName)              {                  case "find":                  case "getMore":                      if (massagedReply.Contains("cursor") && massagedReply["cursor"]["id"] != 0L)                      {                          massagedReply["cursor"]["id"] = 42L;                      }                      break;                  case "killCursors":                      massagedReply["cursorsUnknown"][0] = 42L;                      break;                  case "delete":                  case "insert":                  case "update":                      if (massagedReply.Contains("writeErrors"))                      {                          foreach (BsonDocument writeError in (BsonArray)massagedReply["writeErrors"])                          {                              writeError["code"] = 42;                              writeError["errmsg"] = "";                              writeError.Remove("codeName");                          }                      }                      break;              }
Magic Number,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,MassageReply,The following statement contains a magic number: switch (commandName)              {                  case "find":                  case "getMore":                      if (massagedReply.Contains("cursor") && massagedReply["cursor"]["id"] != 0L)                      {                          massagedReply["cursor"]["id"] = 42L;                      }                      break;                  case "killCursors":                      massagedReply["cursorsUnknown"][0] = 42L;                      break;                  case "delete":                  case "insert":                  case "update":                      if (massagedReply.Contains("writeErrors"))                      {                          foreach (BsonDocument writeError in (BsonArray)massagedReply["writeErrors"])                          {                              writeError["code"] = 42;                              writeError["errmsg"] = "";                              writeError.Remove("codeName");                          }                      }                      break;              }
Magic Number,MongoDB.Driver.Tests.Specifications.crud,FindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\FindOneAndReplaceTest.cs,VerifyCollection,The following statement contains a magic number: ClusterDescription.Servers[0].Version < new SemanticVersion(2' 6' 0) && _options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.crud,FindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\FindOneAndReplaceTest.cs,VerifyCollection,The following statement contains a magic number: ClusterDescription.Servers[0].Version < new SemanticVersion(2' 6' 0) && _options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.crud,ReplaceOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\ReplaceOneTest.cs,VerifyResult,The following statement contains a magic number: ClusterDescription.Servers[0].Version >= new SemanticVersion(2' 6' 0) || !_options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.crud,ReplaceOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\ReplaceOneTest.cs,VerifyResult,The following statement contains a magic number: ClusterDescription.Servers[0].Version >= new SemanticVersion(2' 6' 0) || !_options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.crud,ReplaceOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\ReplaceOneTest.cs,VerifyCollection,The following statement contains a magic number: ClusterDescription.Servers[0].Version < new SemanticVersion(2' 6' 0) && _options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.crud,ReplaceOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\ReplaceOneTest.cs,VerifyCollection,The following statement contains a magic number: ClusterDescription.Servers[0].Version < new SemanticVersion(2' 6' 0) && _options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.retryable_writes,FindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-writes\FindOneAndReplaceTest.cs,VerifyCollectionContents,The following statement contains a magic number: _serverVersion < new SemanticVersion(2' 6' 0) && _options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.retryable_writes,FindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\retryable-writes\FindOneAndReplaceTest.cs,VerifyCollectionContents,The following statement contains a magic number: _serverVersion < new SemanticVersion(2' 6' 0) && _options.IsUpsert
Magic Number,MongoDB.Driver.Tests.Specifications.transactions,TransactionTestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\transactions\TransactionTestRunner.cs,ConfigureFailPointOnPrimaryOrShardRoutersIfNeeded,The following statement contains a magic number: var timeOut = TimeSpan.FromSeconds(60);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestDictionaryBasedWith2,The following statement contains a magic number: map = map.Add(1' 3);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestDictionaryBasedWith2,The following statement contains a magic number: Assert.Equal(3' map.Map(1));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestDictionaryBasedWith2,The following statement contains a magic number: Assert.Throws<KeyNotFoundException>(() => map.Map(2));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith1Then1,The following statement contains a magic number: map = map.Add(1' 3);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith1Then1,The following statement contains a magic number: Assert.Equal(3' map.Map(1));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith1Then1,The following statement contains a magic number: Assert.Throws<KeyNotFoundException>(() => map.Map(2));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith2Then1,The following statement contains a magic number: map = map.Add(1' 2);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith2Then1,The following statement contains a magic number: map = map.Add(2' 4);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith2Then1,The following statement contains a magic number: map = map.Add(2' 4);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith2Then1,The following statement contains a magic number: Assert.Equal(2' map.Map(1));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith2Then1,The following statement contains a magic number: Assert.Equal(4' map.Map(2));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith2Then1,The following statement contains a magic number: Assert.Equal(4' map.Map(2));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestMixedWith2Then1,The following statement contains a magic number: Assert.Throws<KeyNotFoundException>(() => map.Map(3));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestRangeBasedAdd2,The following statement contains a magic number: map = map.Add(1' 2);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestRangeBasedAdd2,The following statement contains a magic number: Assert.Equal(2' map.Map(1));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestRangeBasedAdd2,The following statement contains a magic number: Assert.Throws<KeyNotFoundException>(() => map.Map(2));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestRangeBasedWith2,The following statement contains a magic number: var map = new IndexMap.RangeBased(0' 1' 2);
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestRangeBasedWith2,The following statement contains a magic number: Assert.Equal(2' map.Map(1));
Magic Number,MongoDB.Driver.Tests.Support,IndexMapTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Support\IndexMapTests.cs,TestRangeBasedWith2,The following statement contains a magic number: Assert.Throws<KeyNotFoundException>(() => map.Map(2));
Missing Default,MongoDB.Driver.Tests,ClientSessionHandleTests,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\ClientSessionHandleTests.cs,PrepareException,The following switch statement is missing a default case: switch (state)              {                  case WithTransactionErrorState.TransientTransactionError:                      {                          mongoException.AddErrorLabel(TransientTransactionErrorLabel);                          return mongoException;                      }                  case WithTransactionErrorState.UnknownTransactionCommitResult:                      {                          mongoException.AddErrorLabel(UnknownTransactionCommitResultLabel);                          return mongoException;                      }                  case WithTransactionErrorState.NoError:                      return null;                  case WithTransactionErrorState.ErrorWithoutLabel:                      {                          return mongoException;                      }              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenAggregateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenAggregateTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "batchSize":                      _options.BatchSize = value.ToInt32();                      return;                    case "pipeline":                      _pipeline = new BsonDocumentStagePipelineDefinition<BsonDocument' BsonDocument>(value.AsBsonArray.Cast<BsonDocument>());                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "maxTimeMS":                      _options.MaxTime = TimeSpan.FromMilliseconds(value.ToInt32());                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenBulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenBulkWriteTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "options":                      SetArguments(value.AsBsonDocument);                      return;                    case "ordered":                      _options.IsOrdered = value.ToBoolean();                      return;                    case "requests":                      _requests = ParseWriteModels(value.AsBsonArray.Cast<BsonDocument>());                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenClientWatchTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenClientWatchTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCollectionWatchTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCollectionWatchTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCountDocumentsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCountDocumentsTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenCountTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenCountTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDatabaseAggregateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDatabaseAggregateTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "batchSize":                      _options.BatchSize = value.ToInt32();                      return;                    case "pipeline":                      _pipeline = new BsonDocumentStagePipelineDefinition<NoPipelineInput' BsonDocument>(value.AsBsonArray.Cast<BsonDocument>());                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDatabaseWatchTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDatabaseWatchTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDeleteManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDeleteManyTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDeleteOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDeleteOneTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenDistinctTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenDistinctTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "fieldName":                      _field = new StringFieldDefinition<BsonDocument' BsonValue>(value.AsString);                      return;                    case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindOneAndDeleteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindOneAndDeleteTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindOneAndReplaceTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "replacement":                      _replacement = value.AsBsonDocument;                      return;                    case "returnDocument":                      _options.ReturnDocument = (ReturnDocument)Enum.Parse(typeof(ReturnDocument)' value.AsString);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindOneAndUpdateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindOneAndUpdateTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "returnDocument":                      _options.ReturnDocument = (ReturnDocument)Enum.Parse(typeof(ReturnDocument)' value.AsString);                      return;                    case "update":                      _udpate = new BsonDocumentUpdateDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenFindTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenFindTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "batchSize":                      _options.BatchSize = value.ToInt32();                      return;                    case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                                    case "limit":                      _options.Limit = value.ToInt32();                      return;                    case "result":                      ParseExpectedResult(value.IsBsonArray ? value.AsBsonArray : new BsonArray(new[] { value }));                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                                    case "sort":                      _options.Sort = (SortDefinition<BsonDocument>)value;                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenGridFSDownloadByNameTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenGridFSDownloadByNameTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "filename":                      _fileName = value.AsString;                      return;               }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenGridFSDownloadTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenGridFSDownloadTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "id":                      _id = value.AsObjectId;                      return;               }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenInsertManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenInsertManyTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "documents":                      _documents = value.AsBsonArray.Cast<BsonDocument>().ToList();                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenInsertOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenInsertOneTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "bypassDocumentValidation":                      _options.BypassDocumentValidation = value.ToBoolean();                      return;                    case "document":                      _document = value.AsBsonDocument;                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenListCollectionNamesTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenListCollectionNamesTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenListCollectionsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenListCollectionsTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenListDatabaseNamesTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenListDatabaseNamesTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenListDatabasesTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenListDatabasesTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenListIndexesTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenListIndexesTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenMapReduceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenMapReduceTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "map":                      _map = BsonJavaScript.Create(value);                      return;                    case "reduce":                      _reduce =  BsonJavaScript.Create(value);                      return;                                    case "out":                      _options.OutputOptions = value is BsonString                          ? new MapReduceOutputOptions.CollectionOutput(value.AsString' MapReduceOutputMode.Replace)                          : MapReduceOutputOptions.Inline; // TODO: Clean this up.                      return;                     case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenReplaceOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenReplaceOneTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "replacement":                      _replacement = value.AsBsonDocument;                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenRunCommandTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenRunCommandTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "command":                      _command = value.AsBsonDocument;                      return;                                    case "databaseOptions":                      if (value.AsBsonDocument.TryGetValue("readConcern"' out var readConcernValue))                      {                          _readConcern = ReadConcern.FromBsonDocument(readConcernValue.AsBsonDocument);                      }                      return;                    case "readPreference":                      _readPreference = ReadPreference.FromBsonDocument(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenSessionTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenSessionTest.cs,Arrange,The following switch statement is missing a default case: switch (receiver)              {                  case "session0":                  case "session1":                      _session = (IClientSessionHandle)_objectMap[receiver];                      break;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenStartTransactionTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenStartTransactionTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "options":                      _options = ParseOptions(value.AsBsonDocument);                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTargetedFailPointTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTargetedFailPoint.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "failPoint":                      _failCommand = (BsonDocument)value;                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenTestRunnerTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenTestRunnerTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenUpdateManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenUpdateManyTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "update":                      _update = new BsonDocumentUpdateDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenUpdateOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenUpdateOneTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "arrayFilters":                      _options.ArrayFilters = ParseArrayFilters(value.AsBsonArray);                      return;                    case "filter":                      _filter = new BsonDocumentFilterDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "session":                      _session = (IClientSessionHandle)_objectMap[value.AsString];                      return;                    case "update":                      _update = new BsonDocumentUpdateDefinition<BsonDocument>(value.AsBsonDocument);                      return;                    case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return;              }
Missing Default,MongoDB.Driver.Tests.JsonDrivenTests,JsonDrivenWithTransactionTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\JsonDrivenTests\JsonDrivenWithTransactionTest.cs,SetArgument,The following switch statement is missing a default case: switch (name)              {                  case "options":                      _transactionOptions = ParseTransactionOptions(value.AsBsonDocument);                      return;                  case "callback":                      {                          var valueDocument = value.AsBsonDocument;                          JsonDrivenHelper.EnsureAllFieldsAreValid(valueDocument' "operations");                          var operations = valueDocument["operations"].AsBsonArray;                          _callback = ParseCallback(operations);                          _callbackAsync = ParseCallbackAsync(operations);                      }                      return;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\BulkWriteTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "requests":                      _requests = ParseRequests((BsonArray)value).ToList();                      return true;                  case "ordered":                      _options.IsOrdered = value.ToBoolean();                      return true;                  case "writeConcern":                      _writeConcern = WriteConcern.FromBsonDocument((BsonDocument)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\BulkWriteTest.cs,ParseRequests,The following switch statement is missing a default case: switch (element.Name)                  {                      case "deleteOne":                          yield return ParseDeleteOne((BsonDocument)element.Value);                          break;                      case "insertOne":                          yield return ParseInsertOne((BsonDocument)element.Value);                          break;                      case "updateOne":                          yield return ParseUpdateOne((BsonDocument)element.Value);                          break;                  }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,CountTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\CountTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "skip":                      _options.Skip = value.ToInt64();                      return true;                  case "limit":                      _options.Limit = value.ToInt64();                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,DeleteManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\DeleteManyTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "writeConcern":                      _writeConcern = WriteConcern.FromBsonDocument((BsonDocument)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,DeleteOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\DeleteOneTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "writeConcern":                      _writeConcern = WriteConcern.FromBsonDocument((BsonDocument)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,FindTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\FindTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "sort":                      _options.Sort = value.ToBsonDocument();                      return true;                  case "limit":                      _options.Limit = value.ToInt32();                      return true;                  case "skip":                      _options.Skip = value.ToInt32();                      return true;                  case "batchSize":                      _options.BatchSize = value.ToInt32();                      return true;                  case "modifiers":  #pragma warning disable 618                      _options.Modifiers = (BsonDocument)value;  #pragma warning restore 618                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,InsertManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\InsertManyTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "documents":                      _documents = ((BsonArray)value).OfType<BsonDocument>();                      return true;                  case "ordered":                      _options.IsOrdered = value.ToBoolean();                      return true;                  case "writeConcern":                      _writeConcern = WriteConcern.FromBsonDocument((BsonDocument)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,InsertOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\InsertOneTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "document":                      _document = (BsonDocument)value;                      return true;                  case "writeConcern":                      _writeConcern = WriteConcern.FromBsonDocument((BsonDocument)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,RunTestDefinition,The following switch statement is missing a default case: switch (definition["description"].AsString)                  {                      case "A successful insert one command with write errors":                      case "A successful insert many command with write errors":                          throw new SkipException("Test ignored because of CSHARP-2444");                  }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,MassageCommand,The following switch statement is missing a default case: switch (commandName)              {                  case "delete":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      break;                  case "getMore":                      massagedCommand["getMore"] = 42L;                      break;                  case "insert":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      break;                  case "killCursors":                      massagedCommand["cursors"][0] = 42L;                      break;                  case "update":                      massagedCommand["ordered"] = massagedCommand.GetValue("ordered"' true);                      foreach (BsonDocument update in (BsonArray)massagedCommand["updates"])                      {                          update["multi"] = update.GetValue("multi"' false);                          update["upsert"] = update.GetValue("upsert"' false);                      }                        break;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,TestRunner,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\TestRunner.cs,MassageReply,The following switch statement is missing a default case: switch (commandName)              {                  case "find":                  case "getMore":                      if (massagedReply.Contains("cursor") && massagedReply["cursor"]["id"] != 0L)                      {                          massagedReply["cursor"]["id"] = 42L;                      }                      break;                  case "killCursors":                      massagedReply["cursorsUnknown"][0] = 42L;                      break;                  case "delete":                  case "insert":                  case "update":                      if (massagedReply.Contains("writeErrors"))                      {                          foreach (BsonDocument writeError in (BsonArray)massagedReply["writeErrors"])                          {                              writeError["code"] = 42;                              writeError["errmsg"] = "";                              writeError.Remove("codeName");                          }                      }                      break;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,UpdateManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\UpdateManyTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "update":                      _update = (BsonDocument)value;                      return true;                  case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return true;                  case "writeConcern":                      _writeConcern = WriteConcern.FromBsonDocument((BsonDocument)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.command_monitoring,UpdateOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\command-monitoring\UpdateOneTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "update":                      _update = (BsonDocument)value;                      return true;                  case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return true;                  case "writeConcern":                      _writeConcern = WriteConcern.FromBsonDocument((BsonDocument)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,AggregateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\AggregateTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "pipeline":                      _stages = ((BsonArray)value).Cast<BsonDocument>().ToList();                      return true;                  case "allowDiskUse":                      _options.AllowDiskUse = value.ToBoolean();                      return true;                  case "batchSize":                      _options.BatchSize = (int)value;                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,BulkWriteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\BulkWriteTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "options":                      ParseOptions((BsonDocument)value);                      return true;                  case "requests":                      ParseRequests((BsonArray)value);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,CountDocumentsTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CountDocumentsTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "limit":                      _options.Limit = value.ToInt64();                      return true;                  case "skip":                      _options.Skip = value.ToInt64();                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,CountTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\CountTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "skip":                      _options.Skip = value.ToInt64();                      return true;                  case "limit":                      _options.Limit = value.ToInt64();                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,DeleteManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\DeleteManyTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,DeleteOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\DeleteOneTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,DistinctTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\DistinctTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "fieldName":                      _fieldName = value.ToString();                      return true;                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,EstimatedDocumentCountTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\EstimatedDocumentCountTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "limit":                      _options.MaxTime = new TimeSpan(value.ToInt64());                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,FindOneAndDeleteTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\FindOneAndDeleteTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "projection":                      _options.Projection = (BsonDocument)value;                      return true;                  case "sort":                      _options.Sort = (BsonDocument)value;                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,FindOneAndReplaceTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\FindOneAndReplaceTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "replacement":                      _replacement = (BsonDocument)value;                      return true;                  case "projection":                      _options.Projection = (BsonDocument)value;                      return true;                  case "sort":                      _options.Sort = (BsonDocument)value;                      return true;                  case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return true;                  case "returnDocument":                      _options.ReturnDocument = (ReturnDocument)Enum.Parse(typeof(ReturnDocument)' value.ToString());                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,FindOneAndUpdateTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\FindOneAndUpdateTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "update":                      _update = value;                      return true;                  case "projection":                      _options.Projection = (BsonDocument)value;                      return true;                  case "sort":                      _options.Sort = (BsonDocument)value;                      return true;                  case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return true;                  case "returnDocument":                      _options.ReturnDocument = (ReturnDocument)Enum.Parse(typeof(ReturnDocument)' value.ToString());                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;                  case "arrayFilters":                      var arrayFilters = new List<ArrayFilterDefinition>();                      foreach (BsonDocument arrayFilterDocument in value.AsBsonArray)                      {                          var arrayFilter = new BsonDocumentArrayFilterDefinition<BsonDocument>(arrayFilterDocument);                          arrayFilters.Add(arrayFilter);                      }                      _options.ArrayFilters = arrayFilters;                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,FindTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\FindTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "sort":                      _options.Sort = value.ToBsonDocument();                      return true;                  case "limit":                      _options.Limit = value.ToInt32();                      return true;                  case "skip":                      _options.Skip = value.ToInt32();                      return true;                  case "batchSize":                      _options.BatchSize = value.ToInt32();                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,InsertManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\InsertManyTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "documents":                      _documents = ((BsonArray)value).Select(x => (BsonDocument)x).ToList();                      return true;                  case "options":                      _options = ParseOptions(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,InsertOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\InsertOneTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "document":                      _document = (BsonDocument)value;                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,RenameCollectionTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\RenameCollectionTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "to":                      _to = value.AsString;                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,ReplaceOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\ReplaceOneTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "replacement":                      _replacement = (BsonDocument)value;                      return true;                  case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,UpdateManyTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\UpdateManyTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "update":                      _update = value;                      return true;                  case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;                  case "arrayFilters":                      var arrayFilters = new List<ArrayFilterDefinition>();                      foreach (BsonDocument arrayFilterDocument in value.AsBsonArray)                      {                          var arrayFilter = new BsonDocumentArrayFilterDefinition<BsonDocument>(arrayFilterDocument);                          arrayFilters.Add(arrayFilter);                      }                      _options.ArrayFilters = arrayFilters;                      return true;              }
Missing Default,MongoDB.Driver.Tests.Specifications.crud,UpdateOneTest,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Tests\Specifications\crud\UpdateOneTest.cs,TrySetArgument,The following switch statement is missing a default case: switch (name)              {                  case "filter":                      _filter = (BsonDocument)value;                      return true;                  case "update":                      _update = value;                      return true;                  case "upsert":                      _options.IsUpsert = value.ToBoolean();                      return true;                  case "collation":                      _options.Collation = Collation.FromBsonDocument(value.AsBsonDocument);                      return true;                  case "arrayFilters":                      var arrayFilters = new List<ArrayFilterDefinition>();                      foreach (BsonDocument arrayFilterDocument in value.AsBsonArray)                      {                          var arrayFilter = new BsonDocumentArrayFilterDefinition<BsonDocument>(arrayFilterDocument);                          arrayFilters.Add(arrayFilter);                      }                      _options.ArrayFilters = arrayFilters;                      return true;              }
