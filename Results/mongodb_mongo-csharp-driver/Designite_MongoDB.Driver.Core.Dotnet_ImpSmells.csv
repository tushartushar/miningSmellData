Implementation smell,Namespace,Class,File,Method,Description
Long Method,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseOption,The method has 180 lines of code.
Complex Method,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,ProcessReplicaSetChange,Cyclomatic complexity of the method is 12
Complex Method,MongoDB.Driver.Core.Clusters,SingleServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\SingleServerCluster.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,MongoDB.Driver.Core.Configuration,ClusterBuilderExtensions,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterBuilderExtensions.cs,ConfigureWithConnectionString,Cyclomatic complexity of the method is 18
Complex Method,MongoDB.Driver.Core.Misc,EndPointHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\EndPointHelper.cs,TryParse,Cyclomatic complexity of the method is 10
Long Parameter List,MongoDB.Driver,ChangeStreamDocument<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\ChangeStreamDocument.cs,ChangeStreamDocument,The method has 6 parameters. Parameters: resumeToken' operationType' collectionNamespace' documentKey' updateDescription' fullDocument
Long Parameter List,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,Collation,The method has 9 parameters. Parameters: locale' caseLevel' caseFirst' strength' numericOrdering' alternate' maxVariable' normalization' backwards
Long Parameter List,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,With,The method has 9 parameters. Parameters: locale' caseLevel' caseFirst' strength' numericOrdering' alternate' maxVariable' normalization' backwards
Long Parameter List,MongoDB.Driver.Core.Authentication,GssapiMechanism,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,GssapiMechanism,The method has 5 parameters. Parameters: serviceName' canonicalizeHostName' realm' username' password
Long Parameter List,MongoDB.Driver.Core.Authentication,FirstStep,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,FirstStep,The method has 5 parameters. Parameters: serviceName' hostName' realm' username' password
Long Parameter List,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,AcquireCredentialsHandle,The method has 9 parameters. Parameters: principal' package' credentialUsage' logonId' identity' keyCallback' keyArgument' credentialHandle' timestamp
Long Parameter List,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,AcquireCredentialsHandle,The method has 9 parameters. Parameters: principal' package' credentialUsage' logonId' identity' keyCallback' keyArgument' credentialHandle' timestamp
Long Parameter List,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,InitializeSecurityContext,The method has 12 parameters. Parameters: credentialHandle' inContextPtr' targetName' flags' reserved1' dataRepresentation' inputBuffer' reserved2' outContextHandle' outputBuffer' outAttributes' timestamp
Long Parameter List,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,InitializeSecurityContext,The method has 12 parameters. Parameters: credentialHandle' inContextHandle' targetName' flags' reserved1' dataRepresentation' inputBuffer' reserved2' outContext' outputBuffer' outAttributes' timestamp
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,Command,The method has 8 parameters. Parameters: databaseNamespace' command' commandValidator' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,Command,The method has 11 parameters. Parameters: session' readPreference' databaseNamespace' command' commandValidator' additionalOptions' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,CommandAsync,The method has 8 parameters. Parameters: databaseNamespace' command' commandValidator' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,CommandAsync,The method has 11 parameters. Parameters: session' readPreference' databaseNamespace' command' commandValidator' additionalOptions' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,Delete,The method has 6 parameters. Parameters: collectionNamespace' query' isMulti' messageEncoderSettings' writeConcern' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,DeleteAsync,The method has 6 parameters. Parameters: collectionNamespace' query' isMulti' messageEncoderSettings' writeConcern' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,GetMore,The method has 7 parameters. Parameters: collectionNamespace' query' cursorId' batchSize' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,GetMoreAsync,The method has 7 parameters. Parameters: collectionNamespace' query' cursorId' batchSize' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,Insert,The method has 10 parameters. Parameters: collectionNamespace' writeConcern' serializer' messageEncoderSettings' documentSource' maxBatchCount' maxMessageSize' continueOnError' shouldSendGetLastError' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,InsertAsync,The method has 10 parameters. Parameters: collectionNamespace' writeConcern' serializer' messageEncoderSettings' documentSource' maxBatchCount' maxMessageSize' continueOnError' shouldSendGetLastError' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,Query,The method has 15 parameters. Parameters: collectionNamespace' query' fields' queryValidator' skip' batchSize' slaveOk' partialOk' noCursorTimeout' oplogReplay' tailableCursor' awaitData' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,QueryAsync,The method has 15 parameters. Parameters: collectionNamespace' query' fields' queryValidator' skip' batchSize' slaveOk' partialOk' noCursorTimeout' oplogReplay' tailableCursor' awaitData' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,Update,The method has 9 parameters. Parameters: collectionNamespace' messageEncoderSettings' writeConcern' query' update' updateValidator' isMulti' isUpsert' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Bindings,IChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\IChannel.cs,UpdateAsync,The method has 9 parameters. Parameters: collectionNamespace' messageEncoderSettings' writeConcern' query' update' updateValidator' isMulti' isUpsert' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,WaitForDescriptionChanged,The method has 5 parameters. Parameters: selector' description' descriptionChangedTask' timeout' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,WaitForDescriptionChangedAsync,The method has 5 parameters. Parameters: selector' description' descriptionChangedTask' timeout' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Clusters,WaitForDescriptionChangedHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,WaitForDescriptionChangedHelper,The method has 6 parameters. Parameters: cluster' selector' description' descriptionChangedTask' timeout' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Configuration,ClusterSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterSettings.cs,ClusterSettings,The method has 7 parameters. Parameters: connectionMode' endPoints' maxServerSelectionWaitQueueSize' replicaSetName' serverSelectionTimeout' preServerSelector' postServerSelector
Long Parameter List,MongoDB.Driver.Core.Configuration,ClusterSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterSettings.cs,With,The method has 7 parameters. Parameters: connectionMode' endPoints' maxServerSelectionWaitQueueSize' replicaSetName' serverSelectionTimeout' preServerSelector' postServerSelector
Long Parameter List,MongoDB.Driver.Core.Configuration,ConnectionPoolSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionPoolSettings.cs,ConnectionPoolSettings,The method has 5 parameters. Parameters: maintenanceInterval' maxConnections' minConnections' waitQueueSize' waitQueueTimeout
Long Parameter List,MongoDB.Driver.Core.Configuration,ConnectionPoolSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionPoolSettings.cs,With,The method has 5 parameters. Parameters: maintenanceInterval' maxConnections' minConnections' waitQueueSize' waitQueueTimeout
Long Parameter List,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,SslStreamSettings,The method has 5 parameters. Parameters: checkCertificateRevocation' clientCertificates' clientCertificateSelectionCallback' enabledProtocols' serverCertificateValidationCallback
Long Parameter List,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,With,The method has 5 parameters. Parameters: checkCertificateRevocation' clientCertificates' clientCertificateSelectionCallback' enabledProtocols' serverCertificateValidationCallback
Long Parameter List,MongoDB.Driver.Core.Configuration,TcpStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\TcpStreamSettings.cs,TcpStreamSettings,The method has 7 parameters. Parameters: addressFamily' connectTimeout' readTimeout' receiveBufferSize' sendBufferSize' socketConfigurator' writeTimeout
Long Parameter List,MongoDB.Driver.Core.Configuration,TcpStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\TcpStreamSettings.cs,With,The method has 7 parameters. Parameters: addressFamily' connectTimeout' readTimeout' receiveBufferSize' sendBufferSize' socketConfigurator' writeTimeout
Long Parameter List,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,ExclusiveConnectionPool,The method has 5 parameters. Parameters: serverId' endPoint' settings' connectionFactory' eventSubscriber
Long Parameter List,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,BinaryConnection,The method has 6 parameters. Parameters: serverId' endPoint' settings' streamFactory' connectionInitializer' eventSubscriber
Long Parameter List,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,BeforeSending,The method has 5 parameters. Parameters: messages' connectionId' buffer' encoderSettings' stopwatch
Long Parameter List,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessRequestMessages,The method has 5 parameters. Parameters: messageQueue' connectionId' stream' encoderSettings' stopwatch
Long Parameter List,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessDeleteMessage,The method has 5 parameters. Parameters: originalMessage' messageQueue' connectionId' encoder' stopwatch
Long Parameter List,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessInsertMessage,The method has 5 parameters. Parameters: message' messageQueue' connectionId' encoder' stopwatch
Long Parameter List,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessReplyMessage,The method has 5 parameters. Parameters: state' message' buffer' connectionId' encoderSettings
Long Parameter List,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessUpdateMessage,The method has 5 parameters. Parameters: originalMessage' messageQueue' connectionId' encoder' stopwatch
Long Parameter List,MongoDB.Driver.Core.Events,ClusterSelectedServerEvent,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\ClusterSelectedServerEvent.cs,ClusterSelectedServerEvent,The method has 5 parameters. Parameters: clusterDescription' serverSelector' selectedServer' duration' operationId
Long Parameter List,MongoDB.Driver.Core.Events,CommandFailedEvent,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\CommandFailedEvent.cs,CommandFailedEvent,The method has 6 parameters. Parameters: commandName' exception' operationId' requestId' connectionId' duration
Long Parameter List,MongoDB.Driver.Core.Events,CommandStartedEvent,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\CommandStartedEvent.cs,CommandStartedEvent,The method has 6 parameters. Parameters: commandName' command' databaseNamespace' operationId' requestId' connectionId
Long Parameter List,MongoDB.Driver.Core.Events,CommandSucceededEvent,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\CommandSucceededEvent.cs,CommandSucceededEvent,The method has 6 parameters. Parameters: commandName' reply' operationId' requestId' connectionId' duration
Long Parameter List,MongoDB.Driver.Core.Events,ConnectionReceivedMessageEvent,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\ConnectionReceivedMessageEvent.cs,ConnectionReceivedMessageEvent,The method has 6 parameters. Parameters: connectionId' responseTo' length' networkDuration' deserializationDuration' operationId
Long Parameter List,MongoDB.Driver.Core.Events,ConnectionSentMessagesEvent,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\ConnectionSentMessagesEvent.cs,ConnectionSentMessagesEvent,The method has 6 parameters. Parameters: connectionId' requestIds' length' networkDuration' serializationDuration' operationId
Long Parameter List,MongoDB.Driver.Core.Misc,SizeLimitingBatchableSourceSerializer<TItem>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\SizeLimitingBatchableSourceSerializer.cs,SizeLimitingBatchableSourceSerializer,The method has 5 parameters. Parameters: itemSerializer' itemElementNameValidator' maxBatchCount' maxItemSize' maxBatchSize
Long Parameter List,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,ReadBytes,The method has 5 parameters. Parameters: stream' buffer' offset' count' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,ReadBytes,The method has 5 parameters. Parameters: stream' buffer' offset' count' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,ReadBytesAsync,The method has 5 parameters. Parameters: stream' buffer' offset' count' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,ReadBytesAsync,The method has 5 parameters. Parameters: stream' buffer' offset' count' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,WriteBytes,The method has 5 parameters. Parameters: stream' buffer' offset' count' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,WriteBytesAsync,The method has 5 parameters. Parameters: stream' buffer' offset' count' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Operations,AsyncCursor<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AsyncCursor.cs,AsyncCursor,The method has 10 parameters. Parameters: channelSource' collectionNamespace' query' firstBatch' cursorId' batchSize' limit' serializer' messageEncoderSettings' maxTime
Long Parameter List,MongoDB.Driver.Core.Operations,BulkWriteBatchResult,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResult.cs,BulkWriteBatchResult,The method has 11 parameters. Parameters: batchCount' processedRequests' unprocessedRequests' matchedCount' deletedCount' insertedCount' modifiedCount' upserts' writeErrors' writeConcernError' indexMap
Long Parameter List,MongoDB.Driver.Core.Operations,Acknowledged,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteOperationResult.cs,Acknowledged,The method has 7 parameters. Parameters: requestCount' matchedCount' deletedCount' insertedCount' modifiedCount' processedRequests' upserts
Long Parameter List,MongoDB.Driver.Core.Operations,CreateViewOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CreateViewOperation.cs,CreateViewOperation,The method has 5 parameters. Parameters: databaseNamespace' viewName' viewOn' pipeline' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.Operations,FindOneAndReplaceOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOneAndReplaceOperation.cs,FindOneAndReplaceOperation,The method has 5 parameters. Parameters: collectionNamespace' filter' replacement' resultSerializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.Operations,FindOneAndUpdateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOneAndUpdateOperation.cs,FindOneAndUpdateOperation,The method has 5 parameters. Parameters: collectionNamespace' filter' update' resultSerializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.Operations,GroupOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GroupOperation.cs,GroupOperation,The method has 6 parameters. Parameters: collectionNamespace' key' initial' reduceFunction' filter' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.Operations,GroupOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GroupOperation.cs,GroupOperation,The method has 6 parameters. Parameters: collectionNamespace' keyFunction' initial' reduceFunction' filter' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.Operations,MapReduceOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOperation.cs,MapReduceOperation,The method has 5 parameters. Parameters: collectionNamespace' mapFunction' reduceFunction' resultSerializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.Operations,MapReduceOutputToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOutputToCollectionOperation.cs,MapReduceOutputToCollectionOperation,The method has 5 parameters. Parameters: collectionNamespace' outputCollectionNamespace' mapFunction' reduceFunction' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.Operations,MongoBulkWriteOperationException,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MongoBulkWriteOperationException.cs,MongoBulkWriteOperationException,The method has 5 parameters. Parameters: connectionId' result' writeErrors' writeConcernError' unprocessedRequests
Long Parameter List,MongoDB.Driver.Core.Operations,OperationExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\OperationExtensionMethods.cs,Execute,The method has 5 parameters. Parameters: operation' channelSource' readPreference' session' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Operations,OperationExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\OperationExtensionMethods.cs,ExecuteAsync,The method has 5 parameters. Parameters: operation' channelSource' readPreference' session' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,Server,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,Server,The method has 8 parameters. Parameters: clusterId' clusterClock' clusterConnectionMode' settings' endPoint' connectionPoolFactory' serverMonitorFactory' eventSubscriber
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,Command,The method has 8 parameters. Parameters: databaseNamespace' command' commandValidator' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,Command,The method has 11 parameters. Parameters: session' readPreference' databaseNamespace' command' commandValidator' additionalOptions' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,CommandAsync,The method has 8 parameters. Parameters: databaseNamespace' command' commandValidator' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,CommandAsync,The method has 11 parameters. Parameters: session' readPreference' databaseNamespace' command' commandValidator' additionalOptions' responseHandling' slaveOk' resultSerializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,Delete,The method has 6 parameters. Parameters: collectionNamespace' query' isMulti' messageEncoderSettings' writeConcern' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,DeleteAsync,The method has 6 parameters. Parameters: collectionNamespace' query' isMulti' messageEncoderSettings' writeConcern' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,GetMore,The method has 7 parameters. Parameters: collectionNamespace' query' cursorId' batchSize' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,GetMoreAsync,The method has 7 parameters. Parameters: collectionNamespace' query' cursorId' batchSize' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,Insert,The method has 10 parameters. Parameters: collectionNamespace' writeConcern' serializer' messageEncoderSettings' documentSource' maxBatchCount' maxMessageSize' continueOnError' shouldSendGetLastError' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,InsertAsync,The method has 10 parameters. Parameters: collectionNamespace' writeConcern' serializer' messageEncoderSettings' documentSource' maxBatchCount' maxMessageSize' continueOnError' shouldSendGetLastError' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,Query,The method has 15 parameters. Parameters: collectionNamespace' query' fields' queryValidator' skip' batchSize' slaveOk' partialOk' noCursorTimeout' oplogReplay' tailableCursor' awaitData' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,QueryAsync,The method has 15 parameters. Parameters: collectionNamespace' query' fields' queryValidator' skip' batchSize' slaveOk' partialOk' noCursorTimeout' oplogReplay' tailableCursor' awaitData' serializer' messageEncoderSettings' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,Update,The method has 9 parameters. Parameters: collectionNamespace' messageEncoderSettings' writeConcern' query' update' updateValidator' isMulti' isUpsert' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,UpdateAsync,The method has 9 parameters. Parameters: collectionNamespace' messageEncoderSettings' writeConcern' query' update' updateValidator' isMulti' isUpsert' cancellationToken
Long Parameter List,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The method has 20 parameters. Parameters: serverId' endPoint' averageRoundTripTime' canonicalEndPoint' electionId' heartbeatException' heartbeatInterval' lastUpdateTimestamp' lastWriteTimestamp' logicalSessionTimeout' maxBatchCount' maxDocumentSize' maxMessageSize' maxWireDocumentSize' replicaSetConfig' state' tags' type' version' wireVersionRange
Long Parameter List,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,With,The method has 18 parameters. Parameters: averageRoundTripTime' canonicalEndPoint' electionId' heartbeatException' heartbeatInterval' lastUpdateTimestamp' lastWriteTimestamp' logicalSessionTimeout' maxBatchCount' maxDocumentSize' maxMessageSize' maxWireDocumentSize' replicaSetConfig' state' tags' type' version' wireVersionRange
Long Parameter List,MongoDB.Driver.Core.Servers,ServerFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerFactory.cs,ServerFactory,The method has 5 parameters. Parameters: clusterConnectionMode' settings' connectionPoolFactory' serverMonitoryFactory' eventSubscriber
Long Parameter List,MongoDB.Driver.Core.Servers,ServerMonitor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerMonitor.cs,ServerMonitor,The method has 6 parameters. Parameters: serverId' endPoint' connectionFactory' heartbeatInterval' timeout' eventSubscriber
Long Parameter List,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,CommandWireProtocol,The method has 5 parameters. Parameters: databaseNamespace' command' slaveOk' resultSerializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,CommandWireProtocol,The method has 7 parameters. Parameters: databaseNamespace' command' commandValidator' responseHandling' slaveOk' resultSerializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,CommandWireProtocol,The method has 10 parameters. Parameters: session' readPreference' databaseNamespace' command' commandValidator' additionalOptions' responseHandling' slaveOk' resultSerializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.WireProtocol,DeleteWireProtocol,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\DeleteWireProtocol.cs,DeleteWireProtocol,The method has 5 parameters. Parameters: collectionNamespace' query' isMulti' messageEncoderSettings' writeConcern
Long Parameter List,MongoDB.Driver.Core.WireProtocol,GetMoreWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\GetMoreWireProtocol.cs,GetMoreWireProtocol,The method has 6 parameters. Parameters: collectionNamespace' query' cursorId' batchSize' serializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.WireProtocol,InsertWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\InsertWireProtocol.cs,InsertWireProtocol,The method has 9 parameters. Parameters: collectionNamespace' writeConcern' serializer' messageEncoderSettings' documentSource' maxBatchCount' maxMessageSize' continueOnError' shouldSendGetLastError
Long Parameter List,MongoDB.Driver.Core.WireProtocol,QueryWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\QueryWireProtocol.cs,QueryWireProtocol,The method has 14 parameters. Parameters: collectionNamespace' query' fields' queryValidator' skip' batchSize' slaveOk' partialOk' noCursorTimeout' oplogReplay' tailableCursor' awaitData' serializer' messageEncoderSettings
Long Parameter List,MongoDB.Driver.Core.WireProtocol,UpdateWireProtocol,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\UpdateWireProtocol.cs,UpdateWireProtocol,The method has 8 parameters. Parameters: collectionNamespace' messageEncoderSettings' writeConcern' query' update' updateValidator' isMulti' isUpsert
Long Parameter List,MongoDB.Driver.Core.WireProtocol.Messages,InsertMessage<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\InsertMessage.cs,InsertMessage,The method has 7 parameters. Parameters: requestId' collectionNamespace' serializer' documentSource' maxBatchCount' maxMessageSize' continueOnError
Long Parameter List,MongoDB.Driver.Core.WireProtocol.Messages,QueryMessage,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\QueryMessage.cs,QueryMessage,The method has 14 parameters. Parameters: requestId' collectionNamespace' query' fields' queryValidator' skip' batchSize' slaveOk' partialOk' noCursorTimeout' oplogReplay' tailableCursor' awaitData' shouldBeSent
Long Parameter List,MongoDB.Driver.Core.WireProtocol.Messages,ReplyMessage<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\ReplyMessage.cs,ReplyMessage,The method has 11 parameters. Parameters: awaitCapable' cursorId' cursorNotFound' documents' numberReturned' queryFailure' queryFailureDocument' requestId' responseTo' serializer' startingFrom
Long Parameter List,MongoDB.Driver.Core.WireProtocol.Messages,UpdateMessage,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\UpdateMessage.cs,UpdateMessage,The method has 7 parameters. Parameters: requestId' collectionNamespace' query' update' updateValidator' isMulti' isUpsert
Long Identifier,MongoDB.Driver.Core.Authentication,GssapiAuthenticator,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,,The length of the parameter __canonicalizeHostNamePropertyName is 34.
Long Identifier,MongoDB.Driver.Core.Authentication,ClientFirst,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\ScramSha1Authenticator.cs,Transition,The length of the parameter clientFinalMessageWithoutProof is 30.
Long Identifier,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,,The length of the parameter SEC_E_NO_AUTHENTICATING_AUTHORITY is 33.
Long Identifier,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,UpdateClusterDescription,The length of the parameter oldDescriptionChangedTaskCompletionSource is 41.
Long Identifier,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,,The length of the parameter _descriptionChangedTaskCompletionSource is 39.
Long Identifier,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,,The length of the parameter _descriptionChangedEventHandler is 31.
Long Identifier,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,,The length of the parameter _selectingServerFailedEventHandler is 34.
Long Identifier,MongoDB.Driver.Core.Clusters,SelectServerHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,HandleException,The length of the parameter selectingServerFailedEventHandler is 33.
Long Identifier,MongoDB.Driver.Core.Clusters,SelectServerHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,,The length of the parameter _serverSelectionWaitQueueEntered is 32.
Long Identifier,MongoDB.Driver.Core.Clusters,WaitForDescriptionChangedHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,,The length of the parameter _cancellationTaskCompletionSource is 33.
Long Identifier,MongoDB.Driver.Core.Clusters,WaitForDescriptionChangedHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,,The length of the parameter _cancellationTokenRegistration is 30.
Long Identifier,MongoDB.Driver.Core.Clusters,WaitForDescriptionChangedHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,,The length of the parameter _timeoutCancellationTokenSource is 31.
Long Identifier,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,MonitorServersAsync,The length of the parameter monitorServersCancellationToken is 31.
Long Identifier,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,,The length of the parameter _monitorServersCancellationTokenSource is 38.
Long Identifier,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,,The length of the parameter _serverDescriptionChangedQueue is 30.
Long Identifier,MongoDB.Driver.Core.Configuration,ClusterSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterSettings.cs,ClusterSettings,The length of the parameter maxServerSelectionWaitQueueSize is 31.
Long Identifier,MongoDB.Driver.Core.Configuration,ClusterSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterSettings.cs,With,The length of the parameter maxServerSelectionWaitQueueSize is 31.
Long Identifier,MongoDB.Driver.Core.Configuration,ClusterSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterSettings.cs,,The length of the parameter _maxServerSelectionWaitQueueSize is 32.
Long Identifier,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,SslStreamSettings,The length of the parameter clientCertificateSelectionCallback is 34.
Long Identifier,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,SslStreamSettings,The length of the parameter serverCertificateValidationCallback is 35.
Long Identifier,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,With,The length of the parameter clientCertificateSelectionCallback is 34.
Long Identifier,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,With,The length of the parameter serverCertificateValidationCallback is 35.
Long Identifier,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,,The length of the parameter _clientCertificateSelectionCallback is 35.
Long Identifier,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,,The length of the parameter _serverCertificateValidationCallback is 36.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _maintenanceCancellationTokenSource is 35.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _checkingOutConnectionEventHandler is 34.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _checkedOutConnectionEventHandler is 33.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _checkingOutConnectionFailedEventHandler is 40.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _checkingInConnectionEventHandler is 33.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _checkedInConnectionEventHandler is 32.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ListConnectionHolder,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _removingConnectionEventHandler is 31.
Long Identifier,MongoDB.Driver.Core.ConnectionPools,ListConnectionHolder,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,,The length of the parameter _removedConnectionEventHandler is 30.
Long Identifier,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,,The length of the parameter _backgroundTaskCancellationToken is 32.
Long Identifier,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,,The length of the parameter _backgroundTaskCancellationTokenSource is 38.
Long Identifier,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,,The length of the parameter _failedReceivingMessageEventHandler is 35.
Long Identifier,MongoDB.Driver.Core.Events,EventContext,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\EventContext.cs,,The length of the parameter __killCursorsCollectionNamespace is 32.
Long Identifier,MongoDB.Driver.Core.Misc,Feature,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\Feature.cs,,The length of the parameter __commandsThatWriteAcceptWriteConcern is 37.
Long Identifier,MongoDB.Driver.Core.Misc,Feature,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\Feature.cs,,The length of the parameter __serverExtractsUsernameFromX509Certificate is 43.
Long Identifier,MongoDB.Driver.Core.Misc,SemaphoreSlimRequest,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\SemaphoreSlimRequest.cs,,The length of the parameter _disposeCancellationTokenSource is 31.
Long Identifier,MongoDB.Driver.Core.Misc,SemaphoreSlimRequest,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\SemaphoreSlimRequest.cs,,The length of the parameter _linkedCancellationTokenSource is 30.
Long Identifier,MongoDB.Driver.Core.Operations,AsyncCursor<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AsyncCursor.cs,,The length of the parameter __getMoreCommandResultSerializer is 32.
Long Identifier,MongoDB.Driver.Core.Servers,HeartbeatDelay,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\HeartbeatDelay.cs,,The length of the parameter _earlyHeartbeatHasBeenRequested is 31.
Long Identifier,MongoDB.Driver.Core.Servers,Server,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,,The length of the parameter _descriptionChangedEventHandler is 31.
Long Identifier,MongoDB.Driver.Core.Servers,ServerMonitor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerMonitor.cs,,The length of the parameter _averageRoundTripTimeCalculator is 31.
Long Identifier,MongoDB.Driver.Core.Servers,ServerMonitor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerMonitor.cs,,The length of the parameter _heartbeatSucceededEventHandler is 31.
Long Identifier,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,ProcessReply,The length of the parameter notPrimaryOrNodeIsRecoveringException is 37.
Long Identifier,MongoDB.Driver.Core.WireProtocol,QueryWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\QueryWireProtocol.cs,ProcessReply,The length of the parameter notPrimaryOrNodeIsRecoveringException is 37.
Long Identifier,MongoDB.Driver.Core.WireProtocol,WriteWireProtocolBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\WriteWireProtocolBase.cs,ProcessReply,The length of the parameter notPrimaryOrNodeIsRecoveringException is 37.
Long Statement,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,FromBsonDocument,The length of the statement  "                        throw new ArgumentException($"Unrecognized element '{element.Name}' when constructing a Collation object from a BsonDocument."); " is 128.
Long Statement,MongoDB.Driver,MongoIncompatibleDriverException,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\MongoIncompatibleDriverException.cs,FormatMessage,The length of the statement  "                return $"Server at {EndPointHelper.ToString(incompatibleServer.EndPoint)} reports wire version {incompatibleServer.WireVersionRange.Max}'" " is 138.
Long Statement,MongoDB.Driver,MongoIncompatibleDriverException,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\MongoIncompatibleDriverException.cs,FormatMessage,The length of the statement  "                    + $" but this version of the driver requires at least {Cluster.SupportedWireVersionRange.Min} (MongoDB {Cluster.MinSupportedServerVersion})."; " is 142.
Long Statement,MongoDB.Driver,MongoIncompatibleDriverException,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\MongoIncompatibleDriverException.cs,FormatMessage,The length of the statement  "            return $"Server at {EndPointHelper.ToString(incompatibleServer.EndPoint)} requires wire version {incompatibleServer.WireVersionRange.Min}'" " is 139.
Long Statement,MongoDB.Driver.Core.Authentication,GssapiMechanism,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,Initialize,The length of the statement  "                    throw new MongoAuthenticationException(connection.ConnectionId' "Only DnsEndPoint and IPEndPoint are supported for GSSAPI authentication."); " is 140.
Long Statement,MongoDB.Driver.Core.Authentication,FirstStep,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,Transition,The length of the statement  "                    context = Sspi.SecurityContext.Initialize(securityCredential' _servicePrincipalName' bytesReceivedFromServer' out bytesToSendToServer); " is 135.
Long Statement,MongoDB.Driver.Core.Authentication,FirstStep,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,Transition,The length of the statement  "                        throw new MongoAuthenticationException(conversation.ConnectionId' "Unable to initialize security context. Ensure the username and password are correct."' ex); " is 158.
Long Statement,MongoDB.Driver.Core.Authentication,MongoDBCRAuthenticator,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\MongoDBCRAuthenticator.cs,CreateException,The length of the statement  "            var message = string.Format("Unable to authenticate username '{0}' on database '{1}'."' _credential.Username' _credential.Source); " is 130.
Long Statement,MongoDB.Driver.Core.Authentication,ScramSha1Mechanism,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\ScramSha1Authenticator.cs,GenerateRandomString,The length of the statement  "                const string legalCharacters = "!\"#$%&'()*+-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"; " is 129.
Long Statement,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,CreateException,The length of the statement  "                    message = "The input token is malformed . Possible causes include a token corrupted in transit' a token of incorrect size' and a token passed into the wrong security package. This last condition can happen if the client and server did not negotiate the proper security package."; " is 279.
Long Statement,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,CreateException,The length of the statement  "                    message = "No authority could be contacted for authentication. The domain name of the authenticating party could be wrong' the domain could be unreachable' or there might have been a trust relationship failure."; " is 212.
Long Statement,MongoDB.Driver.Core.Bindings,WritableServerBinding,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\WritableServerBinding.cs,GetReadChannelSourceAsync,The length of the statement  "            var server = await _cluster.SelectServerAsync(WritableServerSelector.Instance' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,MongoDB.Driver.Core.Bindings,WritableServerBinding,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Bindings\WritableServerBinding.cs,GetWriteChannelSourceAsync,The length of the statement  "            var server = await _cluster.SelectServerAsync(WritableServerSelector.Instance' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,SelectServer,The length of the statement  "                        WaitForDescriptionChanged(helper.Selector' helper.Description' helper.DescriptionChangedTask' helper.TimeoutRemaining' cancellationToken); " is 138.
Long Statement,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,SelectServerAsync,The length of the statement  "                        await WaitForDescriptionChangedAsync(helper.Selector' helper.Description' helper.DescriptionChangedTask' helper.TimeoutRemaining' cancellationToken).ConfigureAwait(false); " is 171.
Long Statement,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,WaitForDescriptionChanged,The length of the statement  "            using (var helper = new WaitForDescriptionChangedHelper(this' selector' description' descriptionChangedTask' timeout' cancellationToken)) " is 137.
Long Statement,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,WaitForDescriptionChangedAsync,The length of the statement  "            using (var helper = new WaitForDescriptionChangedHelper(this' selector' description' descriptionChangedTask' timeout' cancellationToken)) " is 137.
Long Statement,MongoDB.Driver.Core.Clusters,ClusterFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ClusterFactory.cs,CreateCluster,The length of the statement  "                    return settings.EndPoints.Count == 1 ? (ICluster)CreateSingleServerCluster(settings) : CreateMultiServerCluster(settings); " is 122.
Long Statement,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,MonitorServersAsync,The length of the statement  "                    var eventArgs = await _serverDescriptionChangedQueue.DequeueAsync(monitorServersCancellationToken).ConfigureAwait(false); // TODO: add timeout and cancellationToken to DequeueAsync " is 180.
Long Statement,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,ProcessReplicaSetChange,The length of the statement  "                return RemoveServer(clusterDescription' args.NewServerDescription.EndPoint' string.Format("Server is a {0}' not a replica set member."' args.NewServerDescription.Type)); " is 169.
Long Statement,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,ProcessReplicaSetChange,The length of the statement  "                return RemoveServer(clusterDescription' args.NewServerDescription.EndPoint' string.Format("Server was a member of the '{0}' replica set' but should be '{1}'."' args.NewServerDescription.ReplicaSetConfig.Name' _replicaSetName)); " is 227.
Long Statement,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,ProcessReplicaSetChange,The length of the statement  "                return RemoveServer(clusterDescription' args.NewServerDescription.EndPoint' "CanonicalEndPoint is different than seed list EndPoint."); " is 135.
Long Statement,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,ProcessReplicaSetChange,The length of the statement  "                        isCurrentPrimaryStale = _maxElectionInfo.IsStale(args.NewServerDescription.ReplicaSetConfig.Version.Value' args.NewServerDescription.ElectionId); " is 145.
Long Statement,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,EnsureServers,The length of the statement  "                var extraEndPoints = clusterDescription.Servers.Where(x => !EndPointHelper.Contains(requiredEndPoints' x.EndPoint)).Select(x => x.EndPoint); " is 140.
Long Statement,MongoDB.Driver.Core.Clusters.ServerSelectors,CompositeServerSelector,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ServerSelectors\CompositeServerSelector.cs,ToString,The length of the statement  "            return string.Format("CompositeServerSelector{{ Selectors = {0} }}"' string.Join("' "' _selectors.Select(x => x.ToString()))); " is 126.
Long Statement,MongoDB.Driver.Core.Clusters.ServerSelectors,ReadPreferenceServerSelector,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ServerSelectors\ReadPreferenceServerSelector.cs,SelectForStandaloneCluster,The length of the statement  "            return servers.Where(n => n.Type == ServerType.Standalone); // standalone servers match any ReadPreference (to facilitate testing) " is 130.
Long Statement,MongoDB.Driver.Core.Clusters.ServerSelectors,ReadPreferenceServerSelector,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ServerSelectors\ReadPreferenceServerSelector.cs,SelectPrimary,The length of the statement  "                throw new MongoClientException($"More than one primary found: [{string.Join("' "' servers.Select(s => s.ToString()))}]."); " is 122.
Long Statement,MongoDB.Driver.Core.Clusters.ServerSelectors,ReadPreferenceServerSelector,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ServerSelectors\ReadPreferenceServerSelector.cs,SelectFreshSecondariesWithPrimary,The length of the statement  "                    var estimatedStaleness = (s.LastUpdateTimestamp - s.LastWriteTimestamp.Value) - (p.LastUpdateTimestamp - p.LastWriteTimestamp.Value) + s.HeartbeatInterval; " is 155.
Long Statement,MongoDB.Driver.Core.Clusters.ServerSelectors,ReadPreferenceServerSelector,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ServerSelectors\ReadPreferenceServerSelector.cs,EnsureMaxStalenessIsValid,The length of the statement  "                        "Max staleness ({0} seconds) must greater than or equal to heartbeat interval ({1} seconds) plus idle write period ({2} seconds)."' " is 131.
Long Statement,MongoDB.Driver.Core.Configuration,ClusterBuilderExtensions,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterBuilderExtensions.cs,GetDefaultSource,The length of the statement  "            if (connectionString.AuthMechanism != null && connectionString.AuthMechanism.Equals("GSSAPI"' StringComparison.OrdinalIgnoreCase)) " is 130.
Long Statement,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseEnum,The length of the statement  "                throw new MongoConfigurationException(string.Format("{0} has an invalid {1} value of {2}."' name' typeof(TEnum)' value)' ex); " is 125.
Long Statement,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,With,The length of the statement  "                clientCertificateSelectionCallback: clientCertificateSelectionCallback.WithDefault(_clientCertificateSelectionCallback)' " is 120.
Long Statement,MongoDB.Driver.Core.Configuration,SslStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\SslStreamSettings.cs,With,The length of the statement  "                serverCertificateValidationCallback: serverCertificateValidationCallback.WithDefault(_serverCertificateValidationCallback)); " is 124.
Long Statement,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,EnsureMinSizeAsync,The length of the statement  "                        _addedConnectionEventHandler(new ConnectionPoolAddedConnectionEvent(connection.ConnectionId' stopwatch.Elapsed' EventContext.OperationId)); " is 139.
Long Statement,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,ReleaseConnection,The length of the statement  "                _checkingInConnectionEventHandler(new ConnectionPoolCheckingInConnectionEvent(connection.ConnectionId' EventContext.OperationId)); " is 130.
Long Statement,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,ReleaseConnection,The length of the statement  "                _checkedInConnectionEventHandler(new ConnectionPoolCheckedInConnectionEvent(connection.ConnectionId' stopwatch.Elapsed' EventContext.OperationId)); " is 147.
Long Statement,MongoDB.Driver.Core.ConnectionPools,AcquireConnectionHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,EnteredPool,The length of the statement  "                        handler(new ConnectionPoolCheckedOutConnectionEvent(acquired.ConnectionId' _stopwatch.Elapsed' EventContext.OperationId)); " is 122.
Long Statement,MongoDB.Driver.Core.ConnectionPools,AcquireConnectionHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,AcquireOrCreateConnection,The length of the statement  "                        addedConnectionEventHandler(new ConnectionPoolAddedConnectionEvent(connection.ConnectionId' stopwatch.Elapsed' EventContext.OperationId)); " is 138.
Long Statement,MongoDB.Driver.Core.ConnectionPools,ListConnectionHolder,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,RemoveConnection,The length of the statement  "                    _removingConnectionEventHandler(new ConnectionPoolRemovingConnectionEvent(connection.ConnectionId' EventContext.OperationId)); " is 126.
Long Statement,MongoDB.Driver.Core.ConnectionPools,ListConnectionHolder,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,RemoveConnection,The length of the statement  "                    _removedConnectionEventHandler(new ConnectionPoolRemovedConnectionEvent(connection.ConnectionId' stopwatch.Elapsed' EventContext.OperationId)); " is 143.
Long Statement,MongoDB.Driver.Core.Connections,OpenConnectionHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,FailedOpeningConnection,The length of the statement  "                if (!_connection._state.TryChange(State.Connecting' State.Failed) && !_connection._state.TryChange(State.Initializing' State.Failed)) " is 133.
Long Statement,MongoDB.Driver.Core.Connections,OpenConnectionHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,FailedOpeningConnection,The length of the statement  "                    handler(new ConnectionOpeningFailedEvent(_connection.ConnectionId' _connection._settings' wrappedException' EventContext.OperationId)); " is 135.
Long Statement,MongoDB.Driver.Core.Connections,OpenConnectionHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,OpenedConnection,The length of the statement  "                    handler(new ConnectionOpenedEvent(_connection.ConnectionId' _connection._settings' _stopwatch.Elapsed' EventContext.OperationId)); " is 130.
Long Statement,MongoDB.Driver.Core.Connections,ReceiveMessageHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,FailedReceivingMessage,The length of the statement  "                    handler(new ConnectionReceivingMessageFailedEvent(_connection.ConnectionId' _responseTo' exception' EventContext.OperationId)); " is 127.
Long Statement,MongoDB.Driver.Core.Connections,ReceiveMessageHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceivedMessage,The length of the statement  "                    handler(new ConnectionReceivedMessageEvent(_connection.ConnectionId' _responseTo' buffer.Length' _networkDuration' _deserializationDuration' EventContext.OperationId)); " is 168.
Long Statement,MongoDB.Driver.Core.Connections,SendMessagesHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,FailedSendingMessages,The length of the statement  "                    handler(new ConnectionSendingMessagesFailedEvent(_connection.ConnectionId' _requestIds.Value' ex' EventContext.OperationId)); " is 125.
Long Statement,MongoDB.Driver.Core.Connections,SendMessagesHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,SendingMessages,The length of the statement  "                    _connection._commandEventHelper.BeforeSending(_messages' _connection.ConnectionId' buffer' _messageEncoderSettings' _commandStopwatch); " is 135.
Long Statement,MongoDB.Driver.Core.Connections,SendMessagesHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,SentMessages,The length of the statement  "                    handler(new ConnectionSentMessagesEvent(_connection.ConnectionId' _requestIds.Value' bufferLength' networkDuration' _serializationDuration' EventContext.OperationId)); " is 167.
Long Statement,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessRequestMessages,The length of the statement  "                    ProcessDeleteMessage((DeleteMessage)message' messageQueue' connectionId' new DeleteMessageBinaryEncoder(stream' encoderSettings)' stopwatch); " is 141.
Long Statement,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessRequestMessages,The length of the statement  "                    ProcessInsertMessage(message' messageQueue' connectionId' new InsertMessageBinaryEncoder<RawBsonDocument>(stream' encoderSettings' RawBsonDocumentSerializer.Instance)' stopwatch); " is 179.
Long Statement,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessRequestMessages,The length of the statement  "                    ProcessQueryMessage((QueryMessage)message' connectionId' new QueryMessageBinaryEncoder(stream' encoderSettings)' stopwatch); " is 124.
Long Statement,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessRequestMessages,The length of the statement  "                    ProcessUpdateMessage((UpdateMessage)message' messageQueue' connectionId' new UpdateMessageBinaryEncoder(stream' encoderSettings)' stopwatch); " is 141.
Long Statement,MongoDB.Driver.Core.Connections,ConnectionDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\ConnectionDescription.cs,WithConnectionId,The length of the statement  "            return _connectionId.StructurallyEquals(value) ? this : new ConnectionDescription(value' _isMasterResult' _buildInfoResult); " is 124.
Long Statement,MongoDB.Driver.Core.Connections,ConnectionId,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\ConnectionId.cs,ToString,The length of the statement  "                return string.Format("{{ ServerId : {0}' LocalValue : {1}' ServerValue : \"{2}\" }}"' _serverId' _localValue' _serverValue); " is 124.
Long Statement,MongoDB.Driver.Core.Connections,ConnectionInitializer,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\ConnectionInitializer.cs,InitializeConnectionAsync,The length of the statement  "            var isMasterResult = new IsMasterResult(await isMasterProtocol.ExecuteAsync(connection' cancellationToken).ConfigureAwait(false)); " is 130.
Long Statement,MongoDB.Driver.Core.Connections,ConnectionInitializer,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\ConnectionInitializer.cs,InitializeConnectionAsync,The length of the statement  "            var buildInfoResult = new BuildInfoResult(await buildInfoProtocol.ExecuteAsync(connection' cancellationToken).ConfigureAwait(false)); " is 133.
Long Statement,MongoDB.Driver.Core.Connections,SslStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\SslStreamFactory.cs,CreateStream,The length of the statement  "                sslStream.AuthenticateAsClientAsync(targetHost' clientCertificates' _settings.EnabledSslProtocols' _settings.CheckCertificateRevocation).GetAwaiter().GetResult(); " is 162.
Long Statement,MongoDB.Driver.Core.Connections,SslStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\SslStreamFactory.cs,CreateStream,The length of the statement  "                sslStream.AuthenticateAsClient(targetHost' clientCertificates' _settings.EnabledSslProtocols' _settings.CheckCertificateRevocation); " is 132.
Long Statement,MongoDB.Driver.Core.Connections,SslStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\SslStreamFactory.cs,CreateStreamAsync,The length of the statement  "                await sslStream.AuthenticateAsClientAsync(targetHost' clientCertificates' _settings.EnabledSslProtocols' _settings.CheckCertificateRevocation).ConfigureAwait(false); " is 165.
Long Statement,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,Connect,The length of the statement  "            using (var registration = cancellationToken.Register(() => { if (!connected) { cancelled = true; try { socket.Dispose(); } catch { } } })) " is 138.
Long Statement,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,Connect,The length of the statement  "            using (var timer = new Timer(_ => { if (!connected) { timedOut = true; try { socket.Dispose(); } catch { } } }' null' _settings.ConnectTimeout' Timeout.InfiniteTimeSpan)) " is 170.
Long Statement,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,ConnectAsync,The length of the statement  "            using (var registration = cancellationToken.Register(() => { if (!connected) { cancelled = true; try { socket.Dispose(); } catch { } } })) " is 138.
Long Statement,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,ConnectAsync,The length of the statement  "            using (var timer = new Timer(_ => { if (!connected) { timedOut = true; try { socket.Dispose(); } catch { } } }' null' _settings.ConnectTimeout' Timeout.InfiniteTimeSpan)) " is 170.
Long Statement,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,ConnectAsync,The length of the statement  "                        await Task.Factory.FromAsync(socket.BeginConnect(dnsEndPoint.Host' dnsEndPoint.Port' null' null)' socket.EndConnect).ConfigureAwait(false); " is 139.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceCommandEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceCommandEventSubscriber.cs,Handle,The length of the statement  "                Debug(TraceSourceEventHelper.CommandIdBase' "{0}-{1}: sending {2}."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.RequestId' @event.Command); " is 154.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceCommandEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceCommandEventSubscriber.cs,Handle,The length of the statement  "                Info(TraceSourceEventHelper.CommandIdBase' "{0}-{1}: sending {2}."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.RequestId' @event.CommandName); " is 157.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceCommandEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceCommandEventSubscriber.cs,Handle,The length of the statement  "                Debug(TraceSourceEventHelper.CommandIdBase + 1' "{0}-{1}: {2} succeeded: {3}."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.RequestId' @event.CommandName' @event.Reply); " is 183.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceCommandEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceCommandEventSubscriber.cs,Handle,The length of the statement  "                Info(TraceSourceEventHelper.CommandIdBase + 1' "{0}-{1}: {2} succeeded."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.RequestId' @event.CommandName); " is 163.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceCommandEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceCommandEventSubscriber.cs,Handle,The length of the statement  "            Error(TraceSourceEventHelper.CommandIdBase + 2' @event.Failure' "{0}-{1}: {2} failed."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.RequestId' @event.CommandName); " is 177.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventHelper.cs,Label,The length of the statement  "            return string.Format("connection[{0}:{1}:{2}]"' id.ServerId.ClusterId.Value.ToString()' Format(id.ServerId.EndPoint)' Format(id)); " is 130.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ClusterIdBase + 1' "{0}: opened in {1}ms."' TraceSourceEventHelper.Label(@event.ClusterId)' @event.Duration.TotalMilliseconds); " is 156.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Info(TraceSourceEventHelper.ClusterIdBase + 3' "{0}: closed in {1}ms."' TraceSourceEventHelper.Label(@event.ClusterId)' @event.Duration.TotalMilliseconds); " is 155.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Info(TraceSourceEventHelper.ClusterIdBase + 4' "{0}: adding server at endpoint {1}."' TraceSourceEventHelper.Label(@event.ClusterId)' TraceSourceEventHelper.Format(@event.EndPoint)); " is 182.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ClusterIdBase + 5' "{0}: added server {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ServerId.ClusterId)' TraceSourceEventHelper.Format(@event.ServerId)' @event.Duration.TotalMilliseconds); " is 223.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ClusterIdBase + 6' "{0}: removing server {1}. Reason: {2}"' TraceSourceEventHelper.Label(@event.ServerId.ClusterId)' TraceSourceEventHelper.Format(@event.ServerId)' @event.Reason); " is 209.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Info(TraceSourceEventHelper.ClusterIdBase + 7' "{0}: removed server {1} in {2}ms. Reason: {3}"' TraceSourceEventHelper.Label(@event.ServerId.ClusterId)' TraceSourceEventHelper.Format(@event.ServerId)' @event.Duration.TotalMilliseconds' @event.Reason); " is 251.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Info(TraceSourceEventHelper.ClusterIdBase + 8' "{0}: {1}"' TraceSourceEventHelper.Label(@event.OldDescription.ClusterId)' @event.NewDescription); " is 145.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ServerIdBase + 1' "{0}: opened in {1}ms."' TraceSourceEventHelper.Label(@event.ServerId)' @event.Duration.TotalMilliseconds); " is 154.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Info(TraceSourceEventHelper.ServerIdBase + 3' "{0}: closed in {1}ms."' TraceSourceEventHelper.Label(@event.ServerId)' @event.Duration.TotalMilliseconds); " is 153.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ServerIdBase + 4' "{0}: sending heartbeat."' TraceSourceEventHelper.Label(@event.ConnectionId)); " is 125.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ServerIdBase + 5' "{0}: sent heartbeat in {1}ms."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.Duration.TotalMilliseconds); " is 166.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Error(TraceSourceEventHelper.ServerIdBase + 6' @event.Exception' "{0}: error sending heartbeat."' TraceSourceEventHelper.Label(@event.ConnectionId)); " is 149.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ServerIdBase + 7' "{0}: {1}"' TraceSourceEventHelper.Label(@event.OldDescription.ServerId)' @event.NewDescription); " is 144.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase' "{0}-pool: opening."' TraceSourceEventHelper.Label(@event.ServerId)); " is 120.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 1' "{0}-pool: opened."' TraceSourceEventHelper.Label(@event.ServerId)); " is 123.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 2' "{0}-pool: closing."' TraceSourceEventHelper.Label(@event.ServerId)); " is 124.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 3' "{0}-pool: closed."' TraceSourceEventHelper.Label(@event.ServerId)); " is 123.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 4' "{0}-pool: adding connection."' TraceSourceEventHelper.Label(@event.ServerId)); " is 134.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 5' "{0}-pool: added connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds); " is 246.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 6' "{0}-pool: removing connection {1}."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)); " is 205.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 7' "{0}-pool: removed connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds); " is 248.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 8' "{0}-pool: checking out a connection."' TraceSourceEventHelper.Label(@event.ServerId)); " is 142.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 9' "{0}-pool: checked out connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds); " is 252.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Error(TraceSourceEventHelper.ConnectionPoolIdBase + 10' @event.Exception' "{0}-pool: error checking out a connection."' TraceSourceEventHelper.Label(@event.ServerId)); " is 167.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 11' "{0}-pool: checking in connection {1}."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)); " is 209.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 12' "{0}-pool: checked in connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds); " is 252.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionIdBase + 1' "{0}: opened in {1}ms."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.Duration.TotalMilliseconds); " is 162.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Error(TraceSourceEventHelper.ConnectionIdBase + 2' @event.Exception' "{0}: unable to open."' TraceSourceEventHelper.Label(@event.ConnectionId)); " is 144.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Error(TraceSourceEventHelper.ConnectionIdBase + 5' @event.Exception' "{0}: failed."' TraceSourceEventHelper.Label(@event.ConnectionId)); " is 136.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionIdBase + 6' "{0}: receiving message in response to {1}."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.ResponseTo); " is 167.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionIdBase + 7' "{0}: received message in response to {1} of length {2} bytes in {3}ms."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.ResponseTo' @event.Length' @event.Duration.TotalMilliseconds); " is 245.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Error(TraceSourceEventHelper.ConnectionIdBase + 8' @event.Exception' "{0}: error receiving message in response to {1}."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.ResponseTo); " is 191.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionIdBase + 9' "{0}: sending messages [{1}]."' TraceSourceEventHelper.Label(@event.ConnectionId)' string.Join("'"' @event.RequestIds)); " is 171.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Debug(TraceSourceEventHelper.ConnectionIdBase + 10' "{0}: sent messages [{1}] of length {2} bytes in {3}ms."' TraceSourceEventHelper.Label(@event.ConnectionId)' string.Join("'"' @event.RequestIds)' @event.Length' @event.Duration.TotalMilliseconds); " is 248.
Long Statement,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The length of the statement  "            Error(TraceSourceEventHelper.ConnectionIdBase + 11' @event.Exception' "{0}: error sending messages [{1}]."' TraceSourceEventHelper.Label(@event.ConnectionId)' string.Join("'"' @event.RequestIds)); " is 196.
Long Statement,MongoDB.Driver.Core.Misc,Ensure,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\Ensure.cs,IsInfiniteOrGreaterThanOrEqualToZero,The length of the statement  "                var message = string.Format("Value is not infinite or greater than or equal to zero: {0}."' TimeSpanParser.ToString(value)); " is 124.
Long Statement,MongoDB.Driver.Core.Misc,Ensure,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\Ensure.cs,IsNullOrInfiniteOrGreaterThanOrEqualToZero,The length of the statement  "                var message = string.Format("Value is not null or infinite or greater than or equal to zero: {0}."' TimeSpanParser.ToString(value.Value)); " is 138.
Long Statement,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,GetCode,The length of the statement  "                if (response.TryGetValue("err"' out err) && response.TryGetValue("errObjects"' out errObjects) && errObjects.IsBsonArray) " is 121.
Long Statement,MongoDB.Driver.Core.Misc,SizeLimitingBatchableSourceSerializer<TItem>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\SizeLimitingBatchableSourceSerializer.cs,Serialize,The length of the statement  "            writer.PushSettings(s => { var bs = s as BsonBinaryWriterSettings; if (bs != null) { bs.MaxDocumentSize = _maxItemSize; } }); " is 125.
Long Statement,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,ReadBytesAsync,The length of the statement  "                var bytesRead = await stream.ReadAsync(backingBytes.Array' backingBytes.Offset' bytesToRead' cancellationToken).ConfigureAwait(false); " is 134.
Long Statement,MongoDB.Driver.Core.Misc,StreamExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\StreamExtensionMethods.cs,WriteBytesAsync,The length of the statement  "                await stream.WriteAsync(backingBytes.Array' backingBytes.Offset' bytesToWrite' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,MongoDB.Driver.Core.Operations,AggregateExplainOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateExplainOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,AggregateExplainOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateExplainOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,AggregateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,AggregateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,AggregateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateOperation.cs,CreateCommand,The length of the statement  "                var useCursor = _useCursor.GetValueOrDefault(true) || connectionDescription.ServerVersion >= new SemanticVersion(3' 5' 0); " is 122.
Long Statement,MongoDB.Driver.Core.Operations,AggregateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<AggregateResult>(CollectionNamespace.DatabaseNamespace' command' serializer' MessageEncoderSettings); " is 133.
Long Statement,MongoDB.Driver.Core.Operations,AggregateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateOperation.cs,EnsureIsReadOnlyPipeline,The length of the statement  "                throw new ArgumentException("The pipeline for an AggregateOperation contains a $out operator. Use AggregateOutputToCollectionOperation instead."' "pipeline"); " is 158.
Long Statement,MongoDB.Driver.Core.Operations,AggregateToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateToCollectionOperation.cs,CreateCommand,The length of the statement  "                { "bypassDocumentValidation"' () => _bypassDocumentValidation.Value' _bypassDocumentValidation.HasValue && Feature.BypassDocumentValidation.IsSupported(serverVersion) }' " is 169.
Long Statement,MongoDB.Driver.Core.Operations,AggregateToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateToCollectionOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) }' " is 155.
Long Statement,MongoDB.Driver.Core.Operations,AggregateToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateToCollectionOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(CollectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' MessageEncoderSettings); " is 152.
Long Statement,MongoDB.Driver.Core.Operations,AggregateToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateToCollectionOperation.cs,EnsureIsOutputToCollectionPipeline,The length of the statement  "                throw new ArgumentException("The last stage of the pipeline for an AggregateOutputToCollectionOperation must have a $out operator."' "pipeline"); " is 145.
Long Statement,MongoDB.Driver.Core.Operations,BulkInsertOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkInsertOperation.cs,CreateBatchOperation,The length of the statement  "            return new RetryableInsertCommandOperation<InsertRequest>(CollectionNamespace' batch.Requests' InsertRequestSerializer.Instance' MessageEncoderSettings) " is 152.
Long Statement,MongoDB.Driver.Core.Operations,BulkMixedWriteOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkMixedWriteOperation.cs,ExecuteAsync,The length of the statement  "            using (var context = await RetryableWriteContext.CreateAsync(binding' _retryRequested' cancellationToken).ConfigureAwait(false)) " is 128.
Long Statement,MongoDB.Driver.Core.Operations,BulkUnmixedWriteOperationBase<TWriteRequest>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkUnmixedWriteOperationBase.cs,ExecuteAsync,The length of the statement  "            using (var context = await RetryableWriteContext.CreateAsync(binding' _retryRequested' cancellationToken).ConfigureAwait(false)) " is 128.
Long Statement,MongoDB.Driver.Core.Operations,BulkUnmixedWriteOperationBase<TWriteRequest>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkUnmixedWriteOperationBase.cs,ExecuteBatchAsync,The length of the statement  "            var operationResult = await RetryableWriteOperationExecutor.ExecuteAsync(operation' context' cancellationToken).ConfigureAwait(false); " is 134.
Long Statement,MongoDB.Driver.Core.Operations,BulkUnmixedWriteOperationEmulatorBase<TWriteRequest>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkUnmixedWriteOperationEmulatorBase.cs,ExecuteAsync,The length of the statement  "                batch.Result = await EmulateSingleRequestAsync(context.Channel' batch.Request' batch.OriginalIndex' cancellationToken).ConfigureAwait(false); " is 141.
Long Statement,MongoDB.Driver.Core.Operations,BulkWriteBatchResultCombiner,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResultCombiner.cs,CombineUpserts,The length of the statement  "                return _batchResults.SelectMany(r => r.Upserts.Select(u => u.WithMappedIndex(r.IndexMap))).OrderBy(u => u.Index).ToList(); " is 122.
Long Statement,MongoDB.Driver.Core.Operations,BulkWriteBatchResultCombiner,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResultCombiner.cs,CombineWriteErrors,The length of the statement  "                return _batchResults.SelectMany(r => r.WriteErrors.Select(e => e.WithMappedIndex(r.IndexMap))).OrderBy(e => e.Index).ToList(); " is 126.
Long Statement,MongoDB.Driver.Core.Operations,ChangeStreamOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ChangeStreamOperation.cs,Execute,The length of the statement  "                throw new ArgumentException("The binding value passed to ChangeStreamOperation.Execute must implement IReadBindingHandle."' nameof(binding)); " is 141.
Long Statement,MongoDB.Driver.Core.Operations,ChangeStreamOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ChangeStreamOperation.cs,ExecuteAsync,The length of the statement  "                throw new ArgumentException("The binding value passed to ChangeStreamOperation.ExecuteAsync must implement IReadBindingHandle."' nameof(binding)); " is 146.
Long Statement,MongoDB.Driver.Core.Operations,ChangeStreamOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ChangeStreamOperation.cs,CreateAggregateOperation,The length of the statement  "            return new AggregateOperation<RawBsonDocument>(_collectionNamespace' combinedPipeline' RawBsonDocumentSerializer.Instance' _messageEncoderSettings) " is 147.
Long Statement,MongoDB.Driver.Core.Operations,CountOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CountOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,CountOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CountOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,CountOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CountOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<BsonDocument>(_collectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 153.
Long Statement,MongoDB.Driver.Core.Operations,CreateCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CreateCollectionOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) } " is 154.
Long Statement,MongoDB.Driver.Core.Operations,CreateCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CreateCollectionOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(_collectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 154.
Long Statement,MongoDB.Driver.Core.Operations,CreateIndexesUsingCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CreateIndexesUsingCommandOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) } " is 154.
Long Statement,MongoDB.Driver.Core.Operations,CreateViewOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CreateViewOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) } " is 154.
Long Statement,MongoDB.Driver.Core.Operations,CreateViewOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CreateViewOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(_databaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 134.
Long Statement,MongoDB.Driver.Core.Operations,CursorBatchDeserializationHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CursorBatchDeserializationHelper.cs,DeserializeBatch,The length of the statement  "                readerSettings.Encoding = messageEncoderSettings.GetOrDefault(MessageEncoderSettingsName.ReadEncoding' Utf8Encodings.Strict); " is 125.
Long Statement,MongoDB.Driver.Core.Operations,CursorBatchDeserializationHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CursorBatchDeserializationHelper.cs,DeserializeBatch,The length of the statement  "                readerSettings.GuidRepresentation = messageEncoderSettings.GetOrDefault(MessageEncoderSettingsName.GuidRepresentation' GuidRepresentation.CSharpLegacy); " is 152.
Long Statement,MongoDB.Driver.Core.Operations,CursorBatchDeserializationHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\CursorBatchDeserializationHelper.cs,DeserializeBatch,The length of the statement  "                // BSON requires that the top level object be a document' but an array looks close enough to a document that we can pretend it is one " is 133.
Long Statement,MongoDB.Driver.Core.Operations,DeleteOpcodeOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DeleteOpcodeOperation.cs,Execute,The length of the statement  "            if (Feature.WriteCommands.IsSupported(context.Channel.ConnectionDescription.ServerVersion) && _writeConcern.IsAcknowledged) " is 123.
Long Statement,MongoDB.Driver.Core.Operations,DeleteOpcodeOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DeleteOpcodeOperation.cs,ExecuteAsync,The length of the statement  "            if (Feature.WriteCommands.IsSupported(context.Channel.ConnectionDescription.ServerVersion) && _writeConcern.IsAcknowledged) " is 123.
Long Statement,MongoDB.Driver.Core.Operations,DistinctOperation<TValue>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DistinctOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,DistinctOperation<TValue>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DistinctOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,DistinctOperation<TValue>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DistinctOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<TValue[]>(_collectionNamespace.DatabaseNamespace' command' resultSerializer' _messageEncoderSettings); " is 134.
Long Statement,MongoDB.Driver.Core.Operations,DropCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DropCollectionOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) } " is 154.
Long Statement,MongoDB.Driver.Core.Operations,DropCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DropCollectionOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(_collectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 154.
Long Statement,MongoDB.Driver.Core.Operations,DropDatabaseOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DropDatabaseOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) } " is 154.
Long Statement,MongoDB.Driver.Core.Operations,DropDatabaseOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DropDatabaseOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(_databaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 134.
Long Statement,MongoDB.Driver.Core.Operations,DropIndexOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DropIndexOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) } " is 154.
Long Statement,MongoDB.Driver.Core.Operations,DropIndexOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\DropIndexOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(_collectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 154.
Long Statement,MongoDB.Driver.Core.Operations,EvalOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\EvalOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(_databaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 134.
Long Statement,MongoDB.Driver.Core.Operations,FindAndModifyOperationBase<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindAndModifyOperationBase.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<RawBsonDocument>(_collectionNamespace.DatabaseNamespace' command' RawBsonDocumentSerializer.Instance' _messageEncoderSettings) " is 159.
Long Statement,MongoDB.Driver.Core.Operations,FindAndModifyOperationBase<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindAndModifyOperationBase.cs,ProcessCommandResult,The length of the statement  "                Encoding = _messageEncoderSettings.GetOrDefault<UTF8Encoding>(MessageEncoderSettingsName.ReadEncoding' Utf8Encodings.Strict)' " is 125.
Long Statement,MongoDB.Driver.Core.Operations,FindAndModifyOperationBase<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindAndModifyOperationBase.cs,ProcessCommandResult,The length of the statement  "                GuidRepresentation = _messageEncoderSettings.GetOrDefault<GuidRepresentation>(MessageEncoderSettingsName.GuidRepresentation' GuidRepresentation.CSharpLegacy) " is 157.
Long Statement,MongoDB.Driver.Core.Operations,FindCommandOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindCommandOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,FindCommandOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindCommandOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,FindOneAndDeleteOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOneAndDeleteOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => WriteConcern.ToBsonDocument()' WriteConcern != null && !WriteConcern.IsServerDefault && Feature.FindAndModifyWriteConcern.IsSupported(serverVersion) }' " is 175.
Long Statement,MongoDB.Driver.Core.Operations,FindOneAndReplaceOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOneAndReplaceOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => WriteConcern.ToBsonDocument()' WriteConcern != null && !WriteConcern.IsServerDefault && Feature.FindAndModifyWriteConcern.IsSupported(serverVersion) }' " is 175.
Long Statement,MongoDB.Driver.Core.Operations,FindOneAndReplaceOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOneAndReplaceOperation.cs,CreateCommand,The length of the statement  "                { "bypassDocumentValidation"' () => _bypassDocumentValidation.Value' _bypassDocumentValidation.HasValue && Feature.BypassDocumentValidation.IsSupported(serverVersion) }' " is 169.
Long Statement,MongoDB.Driver.Core.Operations,FindOneAndUpdateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOneAndUpdateOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => WriteConcern.ToBsonDocument()' WriteConcern != null && !WriteConcern.IsServerDefault && Feature.FindAndModifyWriteConcern.IsSupported(serverVersion) }' " is 175.
Long Statement,MongoDB.Driver.Core.Operations,FindOneAndUpdateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOneAndUpdateOperation.cs,CreateCommand,The length of the statement  "                { "bypassDocumentValidation"' () => _bypassDocumentValidation.Value' _bypassDocumentValidation.HasValue && Feature.BypassDocumentValidation.IsSupported(serverVersion) }' " is 169.
Long Statement,MongoDB.Driver.Core.Operations,FindOpcodeOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOpcodeOperation.cs,ToExplainOperation,The length of the statement  "            var operation = new FindOpcodeOperation<BsonDocument>(_collectionNamespace' BsonDocumentSerializer.Instance' _messageEncoderSettings) " is 133.
Long Statement,MongoDB.Driver.Core.Operations,FindOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,FindOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\FindOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,GeoNearOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GeoNearOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,GeoNearOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GeoNearOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,GeoSearchOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GeoSearchOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,GeoSearchOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GeoSearchOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,GroupOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GroupOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,GroupOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GroupOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,GroupOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\GroupOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<TResult[]>(_collectionNamespace.DatabaseNamespace' command' commandResultSerializer' _messageEncoderSettings); " is 142.
Long Statement,MongoDB.Driver.Core.Operations,InsertOpcodeOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\InsertOpcodeOperation.cs,Execute,The length of the statement  "                if (Feature.WriteCommands.IsSupported(context.Channel.ConnectionDescription.ServerVersion) && _writeConcern.IsAcknowledged) " is 123.
Long Statement,MongoDB.Driver.Core.Operations,InsertOpcodeOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\InsertOpcodeOperation.cs,ExecuteAsync,The length of the statement  "                if (Feature.WriteCommands.IsSupported(context.Channel.ConnectionDescription.ServerVersion) && _writeConcern.IsAcknowledged) " is 123.
Long Statement,MongoDB.Driver.Core.Operations,InsertOpcodeOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\InsertOpcodeOperation.cs,CreateEmulator,The length of the statement  "            return new InsertOpcodeOperationEmulator<TDocument>(_collectionNamespace' _serializer' _documentSource' _messageEncoderSettings) " is 128.
Long Statement,MongoDB.Driver.Core.Operations,ListCollectionsOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListCollectionsOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,ListCollectionsOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListCollectionsOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,ListCollectionsUsingCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListCollectionsUsingCommandOperation.cs,ExecuteAsync,The length of the statement  "                var result = await operation.ExecuteAsync(channelSource' binding.ReadPreference' binding.Session' cancellationToken).ConfigureAwait(false); " is 139.
Long Statement,MongoDB.Driver.Core.Operations,ListCollectionsUsingCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListCollectionsUsingCommandOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<BsonDocument>(_databaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 133.
Long Statement,MongoDB.Driver.Core.Operations,ListCollectionsUsingQueryOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListCollectionsUsingQueryOperation.cs,CreateOperation,The length of the statement  "                    throw new NotSupportedException("Name filter must be a plain string when connected to a server version less than 2.8."); " is 120.
Long Statement,MongoDB.Driver.Core.Operations,ListCollectionsUsingQueryOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListCollectionsUsingQueryOperation.cs,CreateOperation,The length of the statement  "            return new FindOperation<BsonDocument>(_databaseNamespace.SystemNamespacesCollection' BsonDocumentSerializer.Instance' _messageEncoderSettings) " is 143.
Long Statement,MongoDB.Driver.Core.Operations,ListDatabasesOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListDatabasesOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<BsonDocument>(DatabaseNamespace.Admin' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 138.
Long Statement,MongoDB.Driver.Core.Operations,ListIndexesOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListIndexesOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,ListIndexesOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListIndexesOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,ListIndexesUsingCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListIndexesUsingCommandOperation.cs,ExecuteAsync,The length of the statement  "                    var result = await operation.ExecuteAsync(channelSource' binding.ReadPreference' binding.Session' cancellationToken).ConfigureAwait(false); " is 139.
Long Statement,MongoDB.Driver.Core.Operations,ListIndexesUsingCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListIndexesUsingCommandOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<BsonDocument>(databaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 132.
Long Statement,MongoDB.Driver.Core.Operations,ListIndexesUsingQueryOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListIndexesUsingQueryOperation.cs,CreateOperation,The length of the statement  "            return new FindOperation<BsonDocument>(systemIndexesCollection' BsonDocumentSerializer.Instance' _messageEncoderSettings) " is 121.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceLegacyOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceLegacyOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceLegacyOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceLegacyOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceLegacyOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceLegacyOperation.cs,CreateOperation,The length of the statement  "            var operation = new ReadCommandOperation<BsonDocument>(CollectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' MessageEncoderSettings); " is 160.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<TResult[]>(CollectionNamespace.DatabaseNamespace' command' resultSerializer' MessageEncoderSettings); " is 133.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceOutputToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOutputToCollectionOperation.cs,CreateCommand,The length of the statement  "            if (_bypassDocumentValidation.HasValue && Feature.BypassDocumentValidation.IsSupported(connectionDescription.ServerVersion)) " is 124.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceOutputToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOutputToCollectionOperation.cs,CreateCommand,The length of the statement  "            if (Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(connectionDescription.ServerVersion' _writeConcern)) " is 123.
Long Statement,MongoDB.Driver.Core.Operations,MapReduceOutputToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\MapReduceOutputToCollectionOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(CollectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' MessageEncoderSettings); " is 152.
Long Statement,MongoDB.Driver.Core.Operations,OperationExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\OperationExtensionMethods.cs,Execute,The length of the statement  "            using (var writeBinding = new ChannelSourceReadWriteBinding(channelSource.Fork()' ReadPreference.Primary' session.Fork())) " is 122.
Long Statement,MongoDB.Driver.Core.Operations,OperationExtensionMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\OperationExtensionMethods.cs,ExecuteAsync,The length of the statement  "            using (var writeBinding = new ChannelSourceReadWriteBinding(channelSource.Fork()' ReadPreference.Primary' session.Fork())) " is 122.
Long Statement,MongoDB.Driver.Core.Operations,ParallelScanOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ParallelScanOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<BsonDocument>(_collectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 153.
Long Statement,MongoDB.Driver.Core.Operations,ParallelScanOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ParallelScanOperation.cs,CreateCursors,The length of the statement  "            using (var getMoreChannelSource = new ChannelSourceHandle(new ServerChannelSource(channelSource.Server' channelSource.Session.Fork()))) " is 135.
Long Statement,MongoDB.Driver.Core.Operations,ParallelScanOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ParallelScanOperation.cs,Execute,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,ParallelScanOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ParallelScanOperation.cs,ExecuteAsync,The length of the statement  "            using (var channelBinding = new ChannelReadBinding(channelSource.Server' channel' binding.ReadPreference' binding.Session.Fork())) " is 130.
Long Statement,MongoDB.Driver.Core.Operations,PingOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\PingOperation.cs,CreateOperation,The length of the statement  "            return new ReadCommandOperation<BsonDocument>(DatabaseNamespace.Admin' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 138.
Long Statement,MongoDB.Driver.Core.Operations,QueryHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\QueryHelper.cs,CreateReadPreferenceDocument,The length of the statement  "                tagSets = new BsonArray(readPreference.TagSets.Select(ts => new BsonDocument(ts.Tags.Select(t => new BsonElement(t.Name' t.Value))))); " is 134.
Long Statement,MongoDB.Driver.Core.Operations,QueryHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\QueryHelper.cs,CreateReadPreferenceDocument,The length of the statement  "            if (readPreference.ReadPreferenceMode == ReadPreferenceMode.Primary || readPreference.ReadPreferenceMode == ReadPreferenceMode.SecondaryPreferred) " is 146.
Long Statement,MongoDB.Driver.Core.Operations,QueryHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\QueryHelper.cs,CreateReadPreferenceDocument,The length of the statement  "                { "maxStalenessSeconds"' () => (int)readPreference.MaxStaleness.Value.TotalSeconds' readPreference.MaxStaleness.HasValue } " is 122.
Long Statement,MongoDB.Driver.Core.Operations,ReadCommandOperation<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ReadCommandOperation.cs,ExecuteAsync,The length of the statement  "                return await ExecuteProtocolAsync(channelSource' binding.Session' binding.ReadPreference' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,MongoDB.Driver.Core.Operations,ReadConcernHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ReadConcernHelper.cs,AppendReadConcern,The length of the statement  "            var shouldAppendAfterClusterTime = session.IsCausallyConsistent && session.OperationTime != null && sessionsAreSupported; " is 121.
Long Statement,MongoDB.Driver.Core.Operations,ReIndexOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ReIndexOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(_collectionNamespace.DatabaseNamespace' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 154.
Long Statement,MongoDB.Driver.Core.Operations,RenameCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RenameCollectionOperation.cs,CreateCommand,The length of the statement  "                { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) } " is 154.
Long Statement,MongoDB.Driver.Core.Operations,RenameCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RenameCollectionOperation.cs,CreateOperation,The length of the statement  "            return new WriteCommandOperation<BsonDocument>(DatabaseNamespace.Admin' command' BsonDocumentSerializer.Instance' _messageEncoderSettings); " is 139.
Long Statement,MongoDB.Driver.Core.Operations,RetryableDeleteCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableDeleteCommandOperation.cs,CreateBatchSerializer,The length of the statement  "                return new SizeLimitingBatchableSourceSerializer<DeleteRequest>(DeleteRequestSerializer.Instance' NoOpElementNameValidator.Instance' maxBatchCount' maxItemSize' maxBatchSize); " is 175.
Long Statement,MongoDB.Driver.Core.Operations,RetryableDeleteCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableDeleteCommandOperation.cs,CreateBatchSerializer,The length of the statement  "                return new FixedCountBatchableSourceSerializer<DeleteRequest>(DeleteRequestSerializer.Instance' NoOpElementNameValidator.Instance' count); " is 138.
Long Statement,MongoDB.Driver.Core.Operations,RetryableInsertCommandOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableInsertCommandOperation.cs,CreateBatchSerializer,The length of the statement  "            var isSystemIndexesCollection = _collectionNamespace.Equals(CollectionNamespace.DatabaseNamespace.SystemIndexesCollection); " is 123.
Long Statement,MongoDB.Driver.Core.Operations,RetryableInsertCommandOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableInsertCommandOperation.cs,CreateBatchSerializer,The length of the statement  "            var elementNameValidator = isSystemIndexesCollection ? (IElementNameValidator)NoOpElementNameValidator.Instance : CollectionElementNameValidator.Instance; " is 154.
Long Statement,MongoDB.Driver.Core.Operations,RetryableInsertCommandOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableInsertCommandOperation.cs,CreateBatchSerializer,The length of the statement  "                return new SizeLimitingBatchableSourceSerializer<TDocument>(itemSerializer' elementNameValidator' maxBatchCount' maxItemSize' maxBatchSize); " is 140.
Long Statement,MongoDB.Driver.Core.Operations,RetryableUpdateCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableUpdateCommandOperation.cs,CreateBatchSerializer,The length of the statement  "                return new SizeLimitingBatchableSourceSerializer<UpdateRequest>(UpdateRequestSerializer.Instance' NoOpElementNameValidator.Instance' maxBatchCount' maxItemSize' maxBatchSize); " is 175.
Long Statement,MongoDB.Driver.Core.Operations,RetryableUpdateCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableUpdateCommandOperation.cs,CreateBatchSerializer,The length of the statement  "                return new FixedCountBatchableSourceSerializer<UpdateRequest>(UpdateRequestSerializer.Instance' NoOpElementNameValidator.Instance' count); " is 138.
Long Statement,MongoDB.Driver.Core.Operations,RetryableWriteCommandOperationBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableWriteCommandOperationBase.cs,ExecuteAsync,The length of the statement  "            using (var context = await RetryableWriteContext.CreateAsync(binding' _retryRequested' cancellationToken).ConfigureAwait(false)) " is 128.
Long Statement,MongoDB.Driver.Core.Operations,RetryableWriteOperationExecutor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableWriteOperationExecutor.cs,ExecuteAsync,The length of the statement  "            using (var context = await RetryableWriteContext.CreateAsync(binding' retryRequested' cancellationToken).ConfigureAwait(false)) " is 127.
Long Statement,MongoDB.Driver.Core.Operations,RetryableWriteOperationExecutor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableWriteOperationExecutor.cs,ExecuteAsync,The length of the statement  "                context.ReplaceChannelSource(await context.Binding.GetWriteChannelSourceAsync(cancellationToken).ConfigureAwait(false)); " is 120.
Long Statement,MongoDB.Driver.Core.Operations,UpdateOpcodeOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\UpdateOpcodeOperation.cs,Execute,The length of the statement  "            if (Feature.WriteCommands.IsSupported(context.Channel.ConnectionDescription.ServerVersion) && _writeConcern.IsAcknowledged) " is 123.
Long Statement,MongoDB.Driver.Core.Operations,UpdateOpcodeOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\UpdateOpcodeOperation.cs,ExecuteAsync,The length of the statement  "            if (Feature.WriteCommands.IsSupported(context.Channel.ConnectionDescription.ServerVersion) && _writeConcern.IsAcknowledged) " is 123.
Long Statement,MongoDB.Driver.Core.Operations,WriteCommandOperation<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\WriteCommandOperation.cs,ExecuteAsync,The length of the statement  "                return await ExecuteProtocolAsync(channelSource' binding.Session' ReadPreference.Primary' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,MongoDB.Driver.Core.Servers,ServerChannel,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,GetEffectiveSlaveOk,The length of the statement  "                if (_server._clusterConnectionMode == ClusterConnectionMode.Direct && _server.Description.Type != ServerType.ShardRouter) " is 121.
Long Statement,MongoDB.Driver.Core.Servers,ServerFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerFactory.cs,CreateServer,The length of the statement  "            return new Server(clusterId' clusterClock' _clusterConnectionMode' _settings' endPoint' _connectionPoolFactory' _serverMonitorFactory' _eventSubscriber); " is 153.
Long Statement,MongoDB.Driver.Core.Servers,ServerMonitorFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerMonitorFactory.cs,Create,The length of the statement  "            return new ServerMonitor(serverId' endPoint' _connectionFactory' _settings.HeartbeatInterval' _settings.HeartbeatTimeout' _eventSubscriber); " is 140.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,ExecuteAsync,The length of the statement  "                    var reply = await connection.ReceiveMessageAsync(message.RequestId' encoderSelector' _messageEncoderSettings' cancellationToken).ConfigureAwait(false); " is 151.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,IgnoreResponse,The length of the statement  "            connection.ReceiveMessageAsync(message.RequestId' encoderSelector' _messageEncoderSettings' cancellationToken).IgnoreExceptions(); " is 130.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,ProcessReply,The length of the statement  "                throw ExceptionMapper.Map(connectionId' failureDocument) ?? new MongoCommandException(connectionId' "Command failed."' _command' failureDocument); " is 146.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,ProcessReply,The length of the statement  "                    binaryReaderSettings.Encoding = _messageEncoderSettings.GetOrDefault<UTF8Encoding>(MessageEncoderSettingsName.ReadEncoding' Utf8Encodings.Strict); " is 146.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,ProcessReply,The length of the statement  "                    binaryReaderSettings.GuidRepresentation = _messageEncoderSettings.GetOrDefault<GuidRepresentation>(MessageEncoderSettingsName.GuidRepresentation' GuidRepresentation.CSharpLegacy); " is 179.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,ProcessReply,The length of the statement  "                    var notPrimaryOrNodeIsRecoveringException = ExceptionMapper.MapNotPrimaryOrNodeIsRecovering(connectionId' materializedDocument' "errmsg"); " is 138.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,ProcessReply,The length of the statement  "                    var encoder = (ReplyMessageBinaryEncoder<TCommandResult>)encoderFactory.GetReplyMessageEncoder<TCommandResult>(_resultSerializer); " is 130.
Long Statement,MongoDB.Driver.Core.WireProtocol,CommandWireProtocol<TCommandResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\CommandWireProtocol.cs,WrapCommandForQueryMessage,The length of the statement  "            var appendExtraElementsSerializer = new ElementAppendingSerializer<BsonDocument>(BsonDocumentSerializer.Instance' extraElements); " is 129.
Long Statement,MongoDB.Driver.Core.WireProtocol,GetMoreWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\GetMoreWireProtocol.cs,ExecuteAsync,The length of the statement  "            var reply = await connection.ReceiveMessageAsync(message.RequestId' encoderSelector' _messageEncoderSettings' cancellationToken).ConfigureAwait(false); " is 151.
Long Statement,MongoDB.Driver.Core.WireProtocol,GetMoreWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\GetMoreWireProtocol.cs,ProcessReply,The length of the statement  "                throw ExceptionMapper.Map(connectionId' failureDocument) ?? new MongoQueryException(connectionId' errorMessage' _query' failureDocument); " is 137.
Long Statement,MongoDB.Driver.Core.WireProtocol,QueryWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\QueryWireProtocol.cs,ExecuteAsync,The length of the statement  "            var reply = await connection.ReceiveMessageAsync(message.RequestId' encoderSelector' _messageEncoderSettings' cancellationToken).ConfigureAwait(false); " is 151.
Long Statement,MongoDB.Driver.Core.WireProtocol,QueryWireProtocol<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\QueryWireProtocol.cs,ProcessReply,The length of the statement  "                var notPrimaryOrNodeIsRecoveringException = ExceptionMapper.MapNotPrimaryOrNodeIsRecovering(connectionId' response' "$err"); " is 124.
Long Statement,MongoDB.Driver.Core.WireProtocol,WriteWireProtocolBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\WriteWireProtocolBase.cs,Execute,The length of the statement  "                var reply = connection.ReceiveMessage(getLastErrorMessage.RequestId' encoderSelector' _messageEncoderSettings' cancellationToken); " is 130.
Long Statement,MongoDB.Driver.Core.WireProtocol,WriteWireProtocolBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\WriteWireProtocolBase.cs,ExecuteAsync,The length of the statement  "                var reply = await connection.ReceiveMessageAsync(getLastErrorMessage.RequestId' encoderSelector' _messageEncoderSettings' cancellationToken).ConfigureAwait(false); " is 163.
Long Statement,MongoDB.Driver.Core.WireProtocol,WriteWireProtocolBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\WriteWireProtocolBase.cs,ProcessReply,The length of the statement  "                throw new MongoCommandException(connectionId' "GetLastError reply had QueryFailure flag set."' getLastErrorCommand' reply.QueryFailureDocument); " is 144.
Long Statement,MongoDB.Driver.Core.WireProtocol,WriteWireProtocolBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\WriteWireProtocolBase.cs,ProcessReply,The length of the statement  "            var notPrimaryOrNodeIsRecoveringException = ExceptionMapper.MapNotPrimaryOrNodeIsRecovering(connectionId' response' "err"); " is 123.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,InsertMessageBinaryEncoder<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\InsertMessageBinaryEncoder.cs,WriteDocuments,The length of the statement  "            var isSystemIndexesCollection = collectionNamespace.Equals(collectionNamespace.DatabaseNamespace.SystemIndexesCollection); " is 122.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,InsertMessageBinaryEncoder<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\InsertMessageBinaryEncoder.cs,WriteDocuments,The length of the statement  "            var elementNameValidator = isSystemIndexesCollection ? (IElementNameValidator)NoOpElementNameValidator.Instance : CollectionElementNameValidator.Instance; " is 154.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryReader,The length of the statement  "                readerSettings.Encoding = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.ReadEncoding' readerSettings.Encoding); " is 122.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryReader,The length of the statement  "                readerSettings.FixOldBinarySubTypeOnInput = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.FixOldBinarySubTypeOnInput' readerSettings.FixOldBinarySubTypeOnInput); " is 172.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryReader,The length of the statement  "                readerSettings.FixOldDateTimeMaxValueOnInput = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.FixOldBinarySubTypeOnOutput' readerSettings.FixOldDateTimeMaxValueOnInput); " is 179.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryReader,The length of the statement  "                readerSettings.GuidRepresentation = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.GuidRepresentation' readerSettings.GuidRepresentation); " is 148.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryReader,The length of the statement  "                readerSettings.MaxDocumentSize = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.MaxDocumentSize' readerSettings.MaxDocumentSize); " is 139.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryWriter,The length of the statement  "                writerSettings.Encoding = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.WriteEncoding' writerSettings.Encoding); " is 123.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryWriter,The length of the statement  "                writerSettings.FixOldBinarySubTypeOnOutput = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.FixOldBinarySubTypeOnOutput' writerSettings.FixOldBinarySubTypeOnOutput); " is 175.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryWriter,The length of the statement  "                writerSettings.GuidRepresentation = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.GuidRepresentation' writerSettings.GuidRepresentation); " is 148.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryWriter,The length of the statement  "                writerSettings.MaxDocumentSize = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.MaxDocumentSize' writerSettings.MaxDocumentSize); " is 139.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,MessageBinaryEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\MessageBinaryEncoderBase.cs,CreateBinaryWriter,The length of the statement  "                writerSettings.MaxSerializationDepth = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.MaxSerializationDepth' writerSettings.MaxSerializationDepth); " is 157.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders,MessageJsonEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\JsonEncoders\MessageJsonEncoderBase.cs,CreateJsonReader,The length of the statement  "                readerSettings.GuidRepresentation = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.GuidRepresentation' GuidRepresentation.CSharpLegacy); " is 146.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders,MessageJsonEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\JsonEncoders\MessageJsonEncoderBase.cs,CreateJsonWriter,The length of the statement  "                writerSettings.GuidRepresentation = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.GuidRepresentation' GuidRepresentation.CSharpLegacy); " is 146.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders,MessageJsonEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\JsonEncoders\MessageJsonEncoderBase.cs,CreateJsonWriter,The length of the statement  "                writerSettings.MaxSerializationDepth = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.MaxSerializationDepth' BsonDefaults.MaxSerializationDepth); " is 155.
Long Statement,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders,MessageJsonEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\JsonEncoders\MessageJsonEncoderBase.cs,CreateJsonWriter,The length of the statement  "                writerSettings.ShellVersion = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.ShellVersion' new Version(2' 6' 0)); " is 123.
Complex Conditional,MongoDB.Driver,WriteConcern,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\WriteConcern.cs,With,The conditional expression  "w.Replaces(_w) ||                  wTimeout.Replaces(_wTimeout) ||                  fsync.Replaces(_fsync) ||                  journal.Replaces(_journal)"  is complex.
Complex Conditional,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessReplyMessage,The conditional expression  "replyMessage.CursorNotFound ||                      replyMessage.QueryFailure ||                      (state.ExpectedResponseType != ExpectedResponseType.Query && replyMessage.Documents.Count == 0)"  is complex.
Complex Conditional,MongoDB.Driver.Core.Operations,BulkWriteBatchResult,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResult.cs,Create,The conditional expression  "upsertId == null &&                      documentsAffected == 1 &&                      updateRequest != null &&                      updateRequest.IsUpsert &&                      !writeConcernResult.UpdatedExisting"  is complex.
Complex Conditional,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,With,The conditional expression  "averageRoundTripTime.Replaces(_averageRoundTripTime) ||                  canonicalEndPoint.Replaces(_canonicalEndPoint) ||                  electionId.Replaces(_electionId) ||                  heartbeatException.Replaces(_heartbeatException) ||                  heartbeatInterval.Replaces(_heartbeatInterval) ||                  lastUpdateTimestamp.Replaces(_lastUpdateTimestamp) ||                  lastWriteTimestamp.Replaces(_lastWriteTimestamp) ||                  logicalSessionTimeout.Replaces(_logicalSessionTimeout) ||                  maxBatchCount.Replaces(_maxBatchCount) ||                  maxDocumentSize.Replaces(_maxDocumentSize) ||                  maxMessageSize.Replaces(_maxMessageSize) ||                  maxWireDocumentSize.Replaces(_maxWireDocumentSize) ||                  replicaSetConfig.Replaces(_replicaSetConfig) ||                  state.Replaces(_state) ||                  tags.Replaces(_tags) ||                  type.Replaces(_type) ||                  version.Replaces(_version) ||                  wireVersionRange.Replaces(_wireVersionRange)"  is complex.
Empty Catch Block,MongoDB.Driver.Core.Authentication.Sspi,SecurityContext,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\SecurityContext.cs,GetMaxTokenSize,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Clusters,Cluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\Cluster.cs,RapidHeartbeatTimerCallback,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,RequestHeartbeat,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Clusters,MultiServerCluster,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\MultiServerCluster.cs,MonitorServersAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,MaintainSizeAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,PrunePoolAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,EnsureMinSizeAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.ConnectionPools,AcquireConnectionHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,Finally,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.ConnectionPools,AcquireConnectionHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,HandleException,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,Dispose,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,ConnectionInitializer,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\ConnectionInitializer.cs,InitializeConnection,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,ConnectionInitializer,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\ConnectionInitializer.cs,InitializeConnectionAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,SslStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\SslStreamFactory.cs,DisposeStreamIgnoringExceptions,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,Connect,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,Connect,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,Connect,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,Connect,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,ConnectAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,ConnectAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,ConnectAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Connections,TcpStreamFactory,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\TcpStreamFactory.cs,ConnectAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Misc,SemaphoreSlimRequest,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\SemaphoreSlimRequest.cs,Dispose,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Operations,AsyncCursor<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AsyncCursor.cs,Dispose,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Operations,AsyncCursor<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AsyncCursor.cs,KillCursor,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Servers,Server,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\Server.cs,OnDescriptionChanged,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Servers,ServerMonitor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerMonitor.cs,MonitorServerAsync,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.Servers,ServerMonitor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerMonitor.cs,OnDescriptionChanged,The method has an empty catch block.
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToCollationStrength,The following statement contains a magic number: switch (value)              {                  case 1: return CollationStrength.Primary;                  case 2: return CollationStrength.Secondary;                  case 3: return CollationStrength.Tertiary;                  case 4: return CollationStrength.Quaternary;                  case 5: return CollationStrength.Identical;                  default: throw new ArgumentOutOfRangeException($"Invalid CollationStrength value: {value}.");              }
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToCollationStrength,The following statement contains a magic number: switch (value)              {                  case 1: return CollationStrength.Primary;                  case 2: return CollationStrength.Secondary;                  case 3: return CollationStrength.Tertiary;                  case 4: return CollationStrength.Quaternary;                  case 5: return CollationStrength.Identical;                  default: throw new ArgumentOutOfRangeException($"Invalid CollationStrength value: {value}.");              }
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToCollationStrength,The following statement contains a magic number: switch (value)              {                  case 1: return CollationStrength.Primary;                  case 2: return CollationStrength.Secondary;                  case 3: return CollationStrength.Tertiary;                  case 4: return CollationStrength.Quaternary;                  case 5: return CollationStrength.Identical;                  default: throw new ArgumentOutOfRangeException($"Invalid CollationStrength value: {value}.");              }
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToCollationStrength,The following statement contains a magic number: switch (value)              {                  case 1: return CollationStrength.Primary;                  case 2: return CollationStrength.Secondary;                  case 3: return CollationStrength.Tertiary;                  case 4: return CollationStrength.Quaternary;                  case 5: return CollationStrength.Identical;                  default: throw new ArgumentOutOfRangeException($"Invalid CollationStrength value: {value}.");              }
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToInt32,The following statement contains a magic number: switch (strength)              {                  case CollationStrength.Primary: return 1;                  case CollationStrength.Secondary: return 2;                  case CollationStrength.Tertiary: return 3;                  case CollationStrength.Quaternary: return 4;                  case CollationStrength.Identical: return 5;                  default: throw new ArgumentException($"Invalid strength: {strength}."' nameof(strength));              }
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToInt32,The following statement contains a magic number: switch (strength)              {                  case CollationStrength.Primary: return 1;                  case CollationStrength.Secondary: return 2;                  case CollationStrength.Tertiary: return 3;                  case CollationStrength.Quaternary: return 4;                  case CollationStrength.Identical: return 5;                  default: throw new ArgumentException($"Invalid strength: {strength}."' nameof(strength));              }
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToInt32,The following statement contains a magic number: switch (strength)              {                  case CollationStrength.Primary: return 1;                  case CollationStrength.Secondary: return 2;                  case CollationStrength.Tertiary: return 3;                  case CollationStrength.Quaternary: return 4;                  case CollationStrength.Identical: return 5;                  default: throw new ArgumentException($"Invalid strength: {strength}."' nameof(strength));              }
Magic Number,MongoDB.Driver,Collation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Collation.cs,ToInt32,The following statement contains a magic number: switch (strength)              {                  case CollationStrength.Primary: return 1;                  case CollationStrength.Secondary: return 2;                  case CollationStrength.Tertiary: return 3;                  case CollationStrength.Quaternary: return 4;                  case CollationStrength.Identical: return 5;                  default: throw new ArgumentException($"Invalid strength: {strength}."' nameof(strength));              }
Magic Number,MongoDB.Driver.Core.Authentication,NegotiateStep,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,Transition,The following statement contains a magic number: int length = 4;
Magic Number,MongoDB.Driver.Core.Authentication,NegotiateStep,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,Transition,The following statement contains a magic number: bytesReceivedFromServer[2] = 0x0;
Magic Number,MongoDB.Driver.Core.Authentication,NegotiateStep,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,Transition,The following statement contains a magic number: bytesReceivedFromServer[3] = 0x0;
Magic Number,MongoDB.Driver.Core.Authentication,NegotiateStep,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\GssapiAuthenticator.cs,Transition,The following statement contains a magic number: if (_authorizationId != null)                  {                      var authorizationIdBytes = Encoding.UTF8.GetBytes(_authorizationId);                      authorizationIdBytes.CopyTo(bytesReceivedFromServer' 4);                  }
Magic Number,MongoDB.Driver.Core.Authentication,ScramSha1Mechanism,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\ScramSha1Authenticator.cs,GenerateRandomString,The following statement contains a magic number: return _randomStringGenerator.Generate(20' legalCharacters);
Magic Number,MongoDB.Driver.Core.Authentication,ClientFirst,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\ScramSha1Authenticator.cs,Hi,The following statement contains a magic number: return new Rfc2898DeriveBytes(                      password'                      salt'                      iterations).GetBytes(20);
Magic Number,MongoDB.Driver.Core.Clusters.ServerSelectors,ReadPreferenceServerSelector,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ServerSelectors\ReadPreferenceServerSelector.cs,EnsureMaxStalenessIsValid,The following statement contains a magic number: if (_maxStaleness.HasValue)              {                  if (_maxStaleness.Value < TimeSpan.FromSeconds(90))                  {                      var message = string.Format(                          "Max staleness ({0} seconds) must greater than or equal to 90 seconds."'                          (int)_maxStaleness.Value.TotalSeconds);                      throw new Exception(message);                  }                    var anyServer = cluster.Servers.FirstOrDefault();                  if (anyServer == null)                  {                      return;                  }                    var heartbeatInterval = anyServer.HeartbeatInterval; // all servers have the same HeartbeatInterval                  var idleWritePeriod = TimeSpan.FromSeconds(10);                    if (_maxStaleness.Value < heartbeatInterval + idleWritePeriod)                  {                      var message = string.Format(                          "Max staleness ({0} seconds) must greater than or equal to heartbeat interval ({1} seconds) plus idle write period ({2} seconds)."'                          (int)_maxStaleness.Value.TotalSeconds'                          (int)heartbeatInterval.TotalSeconds'                          (int)idleWritePeriod.TotalSeconds);                      throw new Exception(message);                  }              }
Magic Number,MongoDB.Driver.Core.Clusters.ServerSelectors,ReadPreferenceServerSelector,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Clusters\ServerSelectors\ReadPreferenceServerSelector.cs,EnsureMaxStalenessIsValid,The following statement contains a magic number: if (_maxStaleness.HasValue)              {                  if (_maxStaleness.Value < TimeSpan.FromSeconds(90))                  {                      var message = string.Format(                          "Max staleness ({0} seconds) must greater than or equal to 90 seconds."'                          (int)_maxStaleness.Value.TotalSeconds);                      throw new Exception(message);                  }                    var anyServer = cluster.Servers.FirstOrDefault();                  if (anyServer == null)                  {                      return;                  }                    var heartbeatInterval = anyServer.HeartbeatInterval; // all servers have the same HeartbeatInterval                  var idleWritePeriod = TimeSpan.FromSeconds(10);                    if (_maxStaleness.Value < heartbeatInterval + idleWritePeriod)                  {                      var message = string.Format(                          "Max staleness ({0} seconds) must greater than or equal to heartbeat interval ({1} seconds) plus idle write period ({2} seconds)."'                          (int)_maxStaleness.Value.TotalSeconds'                          (int)heartbeatInterval.TotalSeconds'                          (int)idleWritePeriod.TotalSeconds);                      throw new Exception(message);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ClusterSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterSettings.cs,ClusterSettings,The following statement contains a magic number: _maxServerSelectionWaitQueueSize = Ensure.IsGreaterThanOrEqualToZero(maxServerSelectionWaitQueueSize.WithDefault(500)' "maxServerSelectionWaitQueueSize");
Magic Number,MongoDB.Driver.Core.Configuration,ClusterSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ClusterSettings.cs,ClusterSettings,The following statement contains a magic number: _serverSelectionTimeout = Ensure.IsGreaterThanOrEqualToZero(serverSelectionTimeout.WithDefault(TimeSpan.FromSeconds(30))' "serverSelectionTimeout");
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionPoolSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionPoolSettings.cs,ConnectionPoolSettings,The following statement contains a magic number: _maxConnections = Ensure.IsGreaterThanZero(maxConnections.WithDefault(100)' "maxConnections");
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionPoolSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionPoolSettings.cs,ConnectionPoolSettings,The following statement contains a magic number: _waitQueueSize = Ensure.IsGreaterThanOrEqualToZero(waitQueueSize.WithDefault(_maxConnections * 5)' "waitQueueSize");
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionPoolSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionPoolSettings.cs,ConnectionPoolSettings,The following statement contains a magic number: _waitQueueTimeout = Ensure.IsInfiniteOrGreaterThanOrEqualToZero(waitQueueTimeout.WithDefault(TimeSpan.FromMinutes(2))' "waitQueueTimeout");
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionSettings.cs,ConnectionSettings,The following statement contains a magic number: _maxIdleTime = Ensure.IsGreaterThanZero(maxIdleTime.WithDefault(TimeSpan.FromMinutes(10))' "maxIdleTime");
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionSettings.cs,ConnectionSettings,The following statement contains a magic number: _maxLifeTime = Ensure.IsGreaterThanZero(maxLifeTime.WithDefault(TimeSpan.FromMinutes(30))' "maxLifeTime");
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,GetAuthMechanismProperties,The following statement contains a magic number: foreach (var property in value.Split('''))              {                  var parts = property.Split(':');                  if (parts.Length != 2)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid value of {1}."' name' value));                  }                  yield return new KeyValuePair<string' string>(parts[0]' parts[1]);              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseReadPreferenceTagSets,The following statement contains a magic number: foreach (var tagString in value.Split('''))              {                  var parts = tagString.Split(':');                  if (parts.Length != 2)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid value of {1}."' name' value));                  }                  var tag = new Tag(parts[0].Trim()' parts[1].Trim());                  tags.Add(tag);              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: var multiplier = 1000;
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,ConnectionString,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\ConnectionString.cs,ParseTimeSpan,The following statement contains a magic number: if (lowerName.EndsWith("ms"' StringComparison.Ordinal))              {                  multiplier = 1;              }              else if (lowerName.EndsWith("seconds"' StringComparison.Ordinal))              {                  multiplier = 1000;              }              else if (lowerValue.EndsWith("ms"' StringComparison.Ordinal))              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 2);                  multiplier = 1;              }              else if (lowerValue[end] == 's')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 1000;              }              else if (lowerValue[end] == 'm')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 1000;              }              else if (lowerValue[end] == 'h')              {                  lowerValue = lowerValue.Substring(0' lowerValue.Length - 1);                  multiplier = 60 * 60 * 1000;              }              else if (lowerValue.IndexOf(':') != -1)              {                  try                  {                      return TimeSpan.Parse(lowerValue);                  }                  catch (Exception ex)                  {                      throw new MongoConfigurationException(string.Format("{0} has an invalid TimeSpan value of {1}."' name' value)' ex);                  }              }
Magic Number,MongoDB.Driver.Core.Configuration,TcpStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\TcpStreamSettings.cs,TcpStreamSettings,The following statement contains a magic number: _receiveBufferSize = Ensure.IsGreaterThanZero(receiveBufferSize.WithDefault(64 * 1024)' "receiveBufferSize");
Magic Number,MongoDB.Driver.Core.Configuration,TcpStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\TcpStreamSettings.cs,TcpStreamSettings,The following statement contains a magic number: _receiveBufferSize = Ensure.IsGreaterThanZero(receiveBufferSize.WithDefault(64 * 1024)' "receiveBufferSize");
Magic Number,MongoDB.Driver.Core.Configuration,TcpStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\TcpStreamSettings.cs,TcpStreamSettings,The following statement contains a magic number: _sendBufferSize = Ensure.IsGreaterThanZero(sendBufferSize.WithDefault(64 * 1024)' "sendBufferSize");
Magic Number,MongoDB.Driver.Core.Configuration,TcpStreamSettings,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Configuration\TcpStreamSettings.cs,TcpStreamSettings,The following statement contains a magic number: _sendBufferSize = Ensure.IsGreaterThanZero(sendBufferSize.WithDefault(64 * 1024)' "sendBufferSize");
Magic Number,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,PrunePoolAsync,The following statement contains a magic number: try              {                  // if it takes too long to enter the pool' then the pool is fully utilized                  // and we don't want to mess with it.                  enteredPool = await _poolQueue.WaitAsync(TimeSpan.FromMilliseconds(20)' cancellationToken).ConfigureAwait(false);                  if (!enteredPool)                  {                      return;                  }                    _connectionHolder.Prune();              }              finally              {                  if (enteredPool)                  {                      try                      {                          _poolQueue.Release();                      }                      catch                      {                          // log this... it's a bug                      }                  }              }
Magic Number,MongoDB.Driver.Core.ConnectionPools,ExclusiveConnectionPool,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\ConnectionPools\ExclusiveConnectionPool.cs,EnsureMinSizeAsync,The following statement contains a magic number: while (CreatedCount < _settings.MinConnections)              {                  bool enteredPool = false;                  try                  {                      enteredPool = await _poolQueue.WaitAsync(TimeSpan.FromMilliseconds(20)' cancellationToken).ConfigureAwait(false);                      if (!enteredPool)                      {                          return;                      }                        if (_addingConnectionEventHandler != null)                      {                          _addingConnectionEventHandler(new ConnectionPoolAddingConnectionEvent(_serverId' EventContext.OperationId));                      }                        var stopwatch = Stopwatch.StartNew();                      var connection = CreateNewConnection();                      // when adding in a connection' we need to open it because                       // the whole point of having a min pool size is to have                      // them available and ready...                      await connection.OpenAsync(cancellationToken).ConfigureAwait(false);                      _connectionHolder.Return(connection);                      stopwatch.Stop();                        if (_addedConnectionEventHandler != null)                      {                          _addedConnectionEventHandler(new ConnectionPoolAddedConnectionEvent(connection.ConnectionId' stopwatch.Elapsed' EventContext.OperationId));                      }                  }                  finally                  {                      if (enteredPool)                      {                          try                          {                              _poolQueue.Release();                          }                          catch                          {                              // log this... it's a bug                          }                      }                  }              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBuffer,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  _stream.ReadBytes(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  _stream.ReadBytes(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBuffer,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  _stream.ReadBytes(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  _stream.ReadBytes(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBuffer,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  _stream.ReadBytes(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  _stream.ReadBytes(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBuffer,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  _stream.ReadBytes(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  _stream.ReadBytes(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBuffer,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  _stream.ReadBytes(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  _stream.ReadBytes(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBufferAsync,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  await _stream.ReadBytesAsync(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  await _stream.ReadBytesAsync(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBufferAsync,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  await _stream.ReadBytesAsync(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  await _stream.ReadBytesAsync(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBufferAsync,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  await _stream.ReadBytesAsync(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  await _stream.ReadBytesAsync(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBufferAsync,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  await _stream.ReadBytesAsync(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  await _stream.ReadBytesAsync(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,BinaryConnection,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,ReceiveBufferAsync,The following statement contains a magic number: try              {                  var messageSizeBytes = new byte[4];                  await _stream.ReadBytesAsync(messageSizeBytes' 0' 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  var messageSize = BitConverter.ToInt32(messageSizeBytes' 0);                  var inputBufferChunkSource = new InputBufferChunkSource(BsonChunkPool.Default);                  var buffer = ByteBufferFactory.Create(inputBufferChunkSource' messageSize);                  buffer.Length = messageSize;                  buffer.SetBytes(0' messageSizeBytes' 0' 4);                  await _stream.ReadBytesAsync(buffer' 4' messageSize - 4' _backgroundTaskCancellationToken).ConfigureAwait(false);                  _lastUsedAtUtc = DateTime.UtcNow;                  buffer.MakeReadOnly();                  return buffer;              }              catch (Exception ex)              {                  var wrappedException = WrapException(ex' "receiving a message from the server");                  ConnectionFailed(wrappedException);                  throw wrappedException;              }
Magic Number,MongoDB.Driver.Core.Connections,Dropbox,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\BinaryConnection.cs,GetResponseTo,The following statement contains a magic number: var backingBytes = message.AccessBackingBytes(8);
Magic Number,MongoDB.Driver.Core.Connections,ClientDocumentHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\ClientDocumentHelper.cs,RemoveOptionalFieldsUntilDocumentIsLessThan512Bytes,The following statement contains a magic number: while (clientDocument != null && clientDocument.ToBson().Length > 512)              {                  clientDocument = RemoveOneOptionalField(clientDocument);              }
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceCommandEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceCommandEventSubscriber.cs,Handle,The following statement contains a magic number: Error(TraceSourceEventHelper.CommandIdBase + 2' @event.Failure' "{0}-{1}: {2} failed."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.RequestId' @event.CommandName);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ClusterIdBase + 2' "{0}: closing."' TraceSourceEventHelper.Label(@event.ClusterId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Info(TraceSourceEventHelper.ClusterIdBase + 3' "{0}: closed in {1}ms."' TraceSourceEventHelper.Label(@event.ClusterId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Info(TraceSourceEventHelper.ClusterIdBase + 4' "{0}: adding server at endpoint {1}."' TraceSourceEventHelper.Label(@event.ClusterId)' TraceSourceEventHelper.Format(@event.EndPoint));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ClusterIdBase + 5' "{0}: added server {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ServerId.ClusterId)' TraceSourceEventHelper.Format(@event.ServerId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ClusterIdBase + 6' "{0}: removing server {1}. Reason: {2}"' TraceSourceEventHelper.Label(@event.ServerId.ClusterId)' TraceSourceEventHelper.Format(@event.ServerId)' @event.Reason);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Info(TraceSourceEventHelper.ClusterIdBase + 7' "{0}: removed server {1} in {2}ms. Reason: {3}"' TraceSourceEventHelper.Label(@event.ServerId.ClusterId)' TraceSourceEventHelper.Format(@event.ServerId)' @event.Duration.TotalMilliseconds' @event.Reason);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Info(TraceSourceEventHelper.ClusterIdBase + 8' "{0}: {1}"' TraceSourceEventHelper.Label(@event.OldDescription.ClusterId)' @event.NewDescription);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ServerIdBase + 2' "{0}: closing."' TraceSourceEventHelper.Label(@event.ServerId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Info(TraceSourceEventHelper.ServerIdBase + 3' "{0}: closed in {1}ms."' TraceSourceEventHelper.Label(@event.ServerId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ServerIdBase + 4' "{0}: sending heartbeat."' TraceSourceEventHelper.Label(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ServerIdBase + 5' "{0}: sent heartbeat in {1}ms."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Error(TraceSourceEventHelper.ServerIdBase + 6' @event.Exception' "{0}: error sending heartbeat."' TraceSourceEventHelper.Label(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ServerIdBase + 7' "{0}: {1}"' TraceSourceEventHelper.Label(@event.OldDescription.ServerId)' @event.NewDescription);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 2' "{0}-pool: closing."' TraceSourceEventHelper.Label(@event.ServerId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 3' "{0}-pool: closed."' TraceSourceEventHelper.Label(@event.ServerId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 4' "{0}-pool: adding connection."' TraceSourceEventHelper.Label(@event.ServerId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 5' "{0}-pool: added connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 6' "{0}-pool: removing connection {1}."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 7' "{0}-pool: removed connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 8' "{0}-pool: checking out a connection."' TraceSourceEventHelper.Label(@event.ServerId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 9' "{0}-pool: checked out connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Error(TraceSourceEventHelper.ConnectionPoolIdBase + 10' @event.Exception' "{0}-pool: error checking out a connection."' TraceSourceEventHelper.Label(@event.ServerId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 11' "{0}-pool: checking in connection {1}."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionPoolIdBase + 12' "{0}-pool: checked in connection {1} in {2}ms."' TraceSourceEventHelper.Label(@event.ConnectionId.ServerId)' TraceSourceEventHelper.Format(@event.ConnectionId)' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Error(TraceSourceEventHelper.ConnectionIdBase + 2' @event.Exception' "{0}: unable to open."' TraceSourceEventHelper.Label(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionIdBase + 3' "{0}: closing."' TraceSourceEventHelper.Label(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionIdBase + 4' "{0}: closed."' TraceSourceEventHelper.Label(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Error(TraceSourceEventHelper.ConnectionIdBase + 5' @event.Exception' "{0}: failed."' TraceSourceEventHelper.Label(@event.ConnectionId));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionIdBase + 6' "{0}: receiving message in response to {1}."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.ResponseTo);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionIdBase + 7' "{0}: received message in response to {1} of length {2} bytes in {3}ms."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.ResponseTo' @event.Length' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Error(TraceSourceEventHelper.ConnectionIdBase + 8' @event.Exception' "{0}: error receiving message in response to {1}."' TraceSourceEventHelper.Label(@event.ConnectionId)' @event.ResponseTo);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionIdBase + 9' "{0}: sending messages [{1}]."' TraceSourceEventHelper.Label(@event.ConnectionId)' string.Join("'"' @event.RequestIds));
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Debug(TraceSourceEventHelper.ConnectionIdBase + 10' "{0}: sent messages [{1}] of length {2} bytes in {3}ms."' TraceSourceEventHelper.Label(@event.ConnectionId)' string.Join("'"' @event.RequestIds)' @event.Length' @event.Duration.TotalMilliseconds);
Magic Number,MongoDB.Driver.Core.Events.Diagnostics,TraceSourceEventSubscriber,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Events\Diagnostics\TraceSourceEventSubscriber.cs,Handle,The following statement contains a magic number: Error(TraceSourceEventHelper.ConnectionIdBase + 11' @event.Exception' "{0}: error sending messages [{1}]."' TraceSourceEventHelper.Label(@event.ConnectionId)' string.Join("'"' @event.RequestIds));
Magic Number,MongoDB.Driver.Core.Misc,EndPointHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\EndPointHelper.cs,FromObjectData,The following statement contains a magic number: switch (type)              {                  case "DnsEndPoint": return new DnsEndPoint((string)info[1]' (int)info[2]' (AddressFamily)(int)info[3]);                  case "IPEndPoint": return new IPEndPoint((IPAddress)info[1]' (int)info[2]);                  default: throw new MongoInternalException("Unexpected EndPoint type.");              }
Magic Number,MongoDB.Driver.Core.Misc,EndPointHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\EndPointHelper.cs,FromObjectData,The following statement contains a magic number: switch (type)              {                  case "DnsEndPoint": return new DnsEndPoint((string)info[1]' (int)info[2]' (AddressFamily)(int)info[3]);                  case "IPEndPoint": return new IPEndPoint((IPAddress)info[1]' (int)info[2]);                  default: throw new MongoInternalException("Unexpected EndPoint type.");              }
Magic Number,MongoDB.Driver.Core.Misc,EndPointHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\EndPointHelper.cs,FromObjectData,The following statement contains a magic number: switch (type)              {                  case "DnsEndPoint": return new DnsEndPoint((string)info[1]' (int)info[2]' (AddressFamily)(int)info[3]);                  case "IPEndPoint": return new IPEndPoint((IPAddress)info[1]' (int)info[2]);                  default: throw new MongoInternalException("Unexpected EndPoint type.");              }
Magic Number,MongoDB.Driver.Core.Misc,EndPointHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\EndPointHelper.cs,TryParse,The following statement contains a magic number: return TryParse(value' 27017' out result);
Magic Number,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following statement contains a magic number: if (response.TryGetValue("code"' out code) && code.IsNumeric)              {                  switch (code.ToInt32())                  {                      case 50:                      case 13475:                      case 16986:                      case 16712:                          return new MongoExecutionTimeoutException(connectionId' message: "Operation exceeded time limit.");                  }              }
Magic Number,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following statement contains a magic number: if (response.TryGetValue("code"' out code) && code.IsNumeric)              {                  switch (code.ToInt32())                  {                      case 50:                      case 13475:                      case 16986:                      case 16712:                          return new MongoExecutionTimeoutException(connectionId' message: "Operation exceeded time limit.");                  }              }
Magic Number,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following statement contains a magic number: if (response.TryGetValue("code"' out code) && code.IsNumeric)              {                  switch (code.ToInt32())                  {                      case 50:                      case 13475:                      case 16986:                      case 16712:                          return new MongoExecutionTimeoutException(connectionId' message: "Operation exceeded time limit.");                  }              }
Magic Number,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following statement contains a magic number: if (response.TryGetValue("code"' out code) && code.IsNumeric)              {                  switch (code.ToInt32())                  {                      case 50:                      case 13475:                      case 16986:                      case 16712:                          return new MongoExecutionTimeoutException(connectionId' message: "Operation exceeded time limit.");                  }              }
Magic Number,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following statement contains a magic number: if (code.HasValue)              {                  switch (code.Value)                  {                      case 11000:                      case 11001:                      case 12582:                          var errorMessage = string.Format(                              "WriteConcern detected an error '{0}'. (Response was {1})."'                              writeConcernResult.LastErrorMessage' writeConcernResult.Response.ToJson());                          return new MongoDuplicateKeyException(connectionId' errorMessage' writeConcernResult);                  }              }
Magic Number,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following statement contains a magic number: if (code.HasValue)              {                  switch (code.Value)                  {                      case 11000:                      case 11001:                      case 12582:                          var errorMessage = string.Format(                              "WriteConcern detected an error '{0}'. (Response was {1})."'                              writeConcernResult.LastErrorMessage' writeConcernResult.Response.ToJson());                          return new MongoDuplicateKeyException(connectionId' errorMessage' writeConcernResult);                  }              }
Magic Number,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following statement contains a magic number: if (code.HasValue)              {                  switch (code.Value)                  {                      case 11000:                      case 11001:                      case 12582:                          var errorMessage = string.Format(                              "WriteConcern detected an error '{0}'. (Response was {1})."'                              writeConcernResult.LastErrorMessage' writeConcernResult.Response.ToJson());                          return new MongoDuplicateKeyException(connectionId' errorMessage' writeConcernResult);                  }              }
Magic Number,MongoDB.Driver.Core.Misc,Feature,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\Feature.cs,VersionBefore,The following statement contains a magic number: if (version.Patch > 0)              {                  return new SemanticVersion(version.Major' version.Minor' version.Patch - 1);              }              else if (version.Minor > 0)              {                  return new SemanticVersion(version.Major' version.Minor - 1' 99);              }              else if (version.Major > 0)              {                  return new SemanticVersion(version.Major - 1' 99' 99);              }              else              {                  throw new ArgumentException("There is no version before 0.0.0."' nameof(version));              }
Magic Number,MongoDB.Driver.Core.Misc,Feature,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\Feature.cs,VersionBefore,The following statement contains a magic number: if (version.Patch > 0)              {                  return new SemanticVersion(version.Major' version.Minor' version.Patch - 1);              }              else if (version.Minor > 0)              {                  return new SemanticVersion(version.Major' version.Minor - 1' 99);              }              else if (version.Major > 0)              {                  return new SemanticVersion(version.Major - 1' 99' 99);              }              else              {                  throw new ArgumentException("There is no version before 0.0.0."' nameof(version));              }
Magic Number,MongoDB.Driver.Core.Misc,Feature,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\Feature.cs,VersionBefore,The following statement contains a magic number: if (version.Patch > 0)              {                  return new SemanticVersion(version.Major' version.Minor' version.Patch - 1);              }              else if (version.Minor > 0)              {                  return new SemanticVersion(version.Major' version.Minor - 1' 99);              }              else if (version.Major > 0)              {                  return new SemanticVersion(version.Major - 1' 99' 99);              }              else              {                  throw new ArgumentException("There is no version before 0.0.0."' nameof(version));              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,ToString,The following statement contains a magic number: const int msInOneSecond = 1000;
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,ToString,The following statement contains a magic number: const int msInOneMinute = 60 * msInOneSecond;
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,ToString,The following statement contains a magic number: const int msInOneHour = 60 * msInOneMinute;
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,ToString,The following statement contains a magic number: if ((ms % msInOneHour) == 0)              {                  return string.Format("{0}h"' ms / msInOneHour);              }              else if ((ms % msInOneMinute) == 0 && ms < msInOneHour)              {                  return string.Format("{0}m"' ms / msInOneMinute);              }              else if ((ms % msInOneSecond) == 0 && ms < msInOneMinute)              {                  return string.Format("{0}s"' ms / msInOneSecond);              }              else if (ms < 1000)              {                  return string.Format("{0}ms"' ms);              }              else              {                  return value.ToString();              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Misc,TimeSpanParser,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\TimeSpanParser.cs,TryParse,The following statement contains a magic number: if (!string.IsNullOrEmpty(value))              {                  value = value.ToLowerInvariant();                  var end = value.Length - 1;                    var multiplier = 1000; // default units are seconds                  if (value[end] == 's')                  {                      if (value[end - 1] == 'm')                      {                          value = value.Substring(0' value.Length - 2);                          multiplier = 1;                      }                      else                      {                          value = value.Substring(0' value.Length - 1);                          multiplier = 1000;                      }                  }                  else if (value[end] == 'm')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 1000;                  }                  else if (value[end] == 'h')                  {                      value = value.Substring(0' value.Length - 1);                      multiplier = 60 * 60 * 1000;                  }                  else if (value.IndexOf(':') != -1)                  {                      return TimeSpan.TryParse(value' out result);                  }                    double multiplicand;                  var numberStyles = NumberStyles.None;                  if (double.TryParse(value' numberStyles' CultureInfo.InvariantCulture' out multiplicand))                  {                      result = TimeSpan.FromMilliseconds(multiplicand * multiplier);                      return true;                  }              }
Magic Number,MongoDB.Driver.Core.Operations,AggregateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateOperation.cs,CreateCommand,The following statement contains a magic number: if (Feature.AggregateCursorResult.IsSupported(connectionDescription.ServerVersion))              {                  var useCursor = _useCursor.GetValueOrDefault(true) || connectionDescription.ServerVersion >= new SemanticVersion(3' 5' 0);                  if (useCursor)                  {                      command["cursor"] = new BsonDocument                      {                          { "batchSize"' () => _batchSize.Value' _batchSize.HasValue }                      };                  }              }
Magic Number,MongoDB.Driver.Core.Operations,AggregateOperation<TResult>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateOperation.cs,CreateCommand,The following statement contains a magic number: if (Feature.AggregateCursorResult.IsSupported(connectionDescription.ServerVersion))              {                  var useCursor = _useCursor.GetValueOrDefault(true) || connectionDescription.ServerVersion >= new SemanticVersion(3' 5' 0);                  if (useCursor)                  {                      command["cursor"] = new BsonDocument                      {                          { "batchSize"' () => _batchSize.Value' _batchSize.HasValue }                      };                  }              }
Magic Number,MongoDB.Driver.Core.Operations,AggregateToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateToCollectionOperation.cs,CreateCommand,The following statement contains a magic number: return new BsonDocument              {                  { "aggregate"' _collectionNamespace.CollectionName }'                  { "pipeline"' new BsonArray(_pipeline) }'                  { "allowDiskUse"' () => _allowDiskUse.Value' _allowDiskUse.HasValue }'                  { "bypassDocumentValidation"' () => _bypassDocumentValidation.Value' _bypassDocumentValidation.HasValue && Feature.BypassDocumentValidation.IsSupported(serverVersion) }'                  { "maxTimeMS"' () => _maxTime.Value.TotalMilliseconds' _maxTime.HasValue }'                  { "collation"' () => _collation.ToBsonDocument()' _collation != null }'                  { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) }'                  { "cursor"' new BsonDocument()' serverVersion >= new SemanticVersion(3' 5' 0) }'                  { "hint"' () => _hint' _hint != null }'                  { "comment"' () => _comment' _comment != null }              };
Magic Number,MongoDB.Driver.Core.Operations,AggregateToCollectionOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AggregateToCollectionOperation.cs,CreateCommand,The following statement contains a magic number: return new BsonDocument              {                  { "aggregate"' _collectionNamespace.CollectionName }'                  { "pipeline"' new BsonArray(_pipeline) }'                  { "allowDiskUse"' () => _allowDiskUse.Value' _allowDiskUse.HasValue }'                  { "bypassDocumentValidation"' () => _bypassDocumentValidation.Value' _bypassDocumentValidation.HasValue && Feature.BypassDocumentValidation.IsSupported(serverVersion) }'                  { "maxTimeMS"' () => _maxTime.Value.TotalMilliseconds' _maxTime.HasValue }'                  { "collation"' () => _collation.ToBsonDocument()' _collation != null }'                  { "writeConcern"' () => _writeConcern.ToBsonDocument()' Feature.CommandsThatWriteAcceptWriteConcern.ShouldSendWriteConcern(serverVersion' _writeConcern) }'                  { "cursor"' new BsonDocument()' serverVersion >= new SemanticVersion(3' 5' 0) }'                  { "hint"' () => _hint' _hint != null }'                  { "comment"' () => _comment' _comment != null }              };
Magic Number,MongoDB.Driver.Core.Operations,AsyncCursor<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AsyncCursor.cs,Dispose,The following statement contains a magic number: if (disposing)              {                  if (!_disposed)                  {                      try                      {                          if (_cursorId != 0)                          {                              using (var source = new CancellationTokenSource(TimeSpan.FromSeconds(10)))                              {                                  KillCursor(_cursorId' source.Token);                              }                          }                      }                      catch                      {                          // ignore exceptions                      }                      if (_channelSource != null)                      {                          _channelSource.Dispose();                      }                  }              }
Magic Number,MongoDB.Driver.Core.Operations,AsyncCursor<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\AsyncCursor.cs,KillCursor,The following statement contains a magic number: try              {                  using (EventContext.BeginOperation(_operationId))                  using (EventContext.BeginKillCursors(_collectionNamespace))                  using (var cancellationTokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(10)))                  using (var channel = _channelSource.GetChannel(cancellationTokenSource.Token))                  {                      ExecuteKillCursorsProtocol(channel' cancellationToken);                  }              }              catch              {                  // ignore exceptions              }
Magic Number,MongoDB.Driver.Core.Operations,BulkWriteBatchResult,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResult.cs,CreateWriteConcernErrorFromGetLastErrorResponse,The following statement contains a magic number: var code = getLastErrorResponse.GetValue("code"' 64).ToInt32();
Magic Number,MongoDB.Driver.Core.Operations,BulkWriteBatchResult,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResult.cs,CreateWriteErrorFromGetLastErrorResponse,The following statement contains a magic number: var code = getLastErrorResponse.GetValue("code"' 8).ToInt32();
Magic Number,MongoDB.Driver.Core.Operations,BulkWriteOperationResultConverter,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteOperationResultConverter.cs,ToWriteConcernResult,The following statement contains a magic number: if (bulkWriteException != null)              {                  var lastWriteError = bulkWriteException.WriteErrors.LastOrDefault();                  var writeConcernError = bulkWriteException.WriteConcernError;                    code = 8; // UnknownError                  if (lastWriteError != null)                  {                      code = lastWriteError.Code;                      message = lastWriteError.Message;                      details = lastWriteError.Details;                  }                  else if (writeConcernError != null)                  {                      code = writeConcernError.Code;                      message = writeConcernError.Message;                      details = writeConcernError.Details;                  }              }
Magic Number,MongoDB.Driver.Core.Operations,ListIndexesUsingCommandOperation,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ListIndexesUsingCommandOperation.cs,IsCollectionNotFoundException,The following statement contains a magic number: return ex.Code == 26;
Magic Number,MongoDB.Driver.Core.Operations,ParallelScanOperation<TDocument>,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\ParallelScanOperation.cs,ParallelScanOperation,The following statement contains a magic number: _numberOfCursors = Ensure.IsBetween(numberOfCursors' 0' 10000' nameof(numberOfCursors));
Magic Number,MongoDB.Driver.Core.Operations,UpdateRequestSerializer,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableUpdateCommandOperation.cs,SerializeUpdate,The following statement contains a magic number: try                  {                      var position = writer.Position;                      BsonDocumentSerializer.Instance.Serialize(context' request.Update);                      if (request.UpdateType == UpdateType.Update && writer.Position == position + 8)                      {                          throw new BsonSerializationException("Update documents cannot be empty.");                      }                  }                  finally                  {                      writer.PopElementNameValidator();                  }
Magic Number,MongoDB.Driver.Core.Operations,RetryableWriteOperationExecutor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableWriteOperationExecutor.cs,Execute,The following statement contains a magic number: try              {                  return operation.ExecuteAttempt(context' 2' transactionNumber' cancellationToken);              }              catch (Exception ex) when (ShouldThrowOriginalException(ex))              {                  throw originalException;              }
Magic Number,MongoDB.Driver.Core.Operations,RetryableWriteOperationExecutor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\RetryableWriteOperationExecutor.cs,ExecuteAsync,The following statement contains a magic number: try              {                  return await operation.ExecuteAttemptAsync(context' 2' transactionNumber' cancellationToken).ConfigureAwait(false);              }              catch (Exception ex) when (ShouldThrowOriginalException(ex))              {                  throw originalException;              }
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxBatchCount = maxBatchCount.WithDefault(1000);
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxDocumentSize = maxDocumentSize.WithDefault(4 * 1024 * 1024);
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxDocumentSize = maxDocumentSize.WithDefault(4 * 1024 * 1024);
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxDocumentSize = maxDocumentSize.WithDefault(4 * 1024 * 1024);
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxMessageSize = maxMessageSize.WithDefault(Math.Max(_maxDocumentSize + 1024' 16000000));
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxMessageSize = maxMessageSize.WithDefault(Math.Max(_maxDocumentSize + 1024' 16000000));
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxWireDocumentSize = maxWireDocumentSize.WithDefault(_maxDocumentSize + 16 * 1024);
Magic Number,MongoDB.Driver.Core.Servers,ServerDescription,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerDescription.cs,ServerDescription,The following statement contains a magic number: _maxWireDocumentSize = maxWireDocumentSize.WithDefault(_maxDocumentSize + 16 * 1024);
Magic Number,MongoDB.Driver.Core.Servers,ServerMonitor,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Servers\ServerMonitor.cs,HeartbeatAsync,The following statement contains a magic number: const int maxRetryCount = 2;
Magic Number,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders,UpdateMessageBinaryEncoder,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\BinaryEncoders\UpdateMessageBinaryEncoder.cs,WriteUpdate,The following statement contains a magic number: try              {                  var position = binaryWriter.BaseStream.Position;                  var context = BsonSerializationContext.CreateRoot(binaryWriter);                  BsonDocumentSerializer.Instance.Serialize(context' update);                  if (updateValidator is UpdateElementNameValidator && binaryWriter.BaseStream.Position == position + 5)                  {                      throw new BsonSerializationException("Update documents cannot be empty.");                  }              }              finally              {                  binaryWriter.PopElementNameValidator();              }
Magic Number,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders,MessageJsonEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\JsonEncoders\MessageJsonEncoderBase.cs,CreateJsonWriter,The following statement contains a magic number: if (_encoderSettings != null)              {                  writerSettings.GuidRepresentation = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.GuidRepresentation' GuidRepresentation.CSharpLegacy);                  writerSettings.Indent = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.Indent' false);                  writerSettings.IndentChars = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.IndentChars' "");                  writerSettings.MaxSerializationDepth = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.MaxSerializationDepth' BsonDefaults.MaxSerializationDepth);                  writerSettings.NewLineChars = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.NewLineChars' "");                  writerSettings.OutputMode = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.OutputMode' JsonOutputMode.Shell);                  writerSettings.ShellVersion = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.ShellVersion' new Version(2' 6' 0));              }
Magic Number,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders,MessageJsonEncoderBase,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\WireProtocol\Messages\Encoders\JsonEncoders\MessageJsonEncoderBase.cs,CreateJsonWriter,The following statement contains a magic number: if (_encoderSettings != null)              {                  writerSettings.GuidRepresentation = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.GuidRepresentation' GuidRepresentation.CSharpLegacy);                  writerSettings.Indent = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.Indent' false);                  writerSettings.IndentChars = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.IndentChars' "");                  writerSettings.MaxSerializationDepth = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.MaxSerializationDepth' BsonDefaults.MaxSerializationDepth);                  writerSettings.NewLineChars = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.NewLineChars' "");                  writerSettings.OutputMode = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.OutputMode' JsonOutputMode.Shell);                  writerSettings.ShellVersion = _encoderSettings.GetOrDefault(MessageEncoderSettingsName.ShellVersion' new Version(2' 6' 0));              }
Magic Number,MongoDB.Shared,ApplicationNameHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\ApplicationNameHelper.cs,IsApplicationNameValid,The following statement contains a magic number: if (applicationName != null)              {                  var utf8 = Utf8Encodings.Strict.GetBytes(applicationName);                  if (utf8.Length > 128)                  {                      message = "Application name exceeds 128 bytes after encoding to UTF8.";                      return false;                  }              }
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,Hasher,The following statement contains a magic number: _hashCode = 17;
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,Hash,The following statement contains a magic number: _hashCode = 37 * _hashCode + obj.GetHashCode();
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,Hash,The following statement contains a magic number: _hashCode = 37 * _hashCode + obj.GetHashCode();
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,Hash,The following statement contains a magic number: _hashCode = 37 * _hashCode + obj.GetHashCode();
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,Hash,The following statement contains a magic number: _hashCode = 37 * _hashCode + ((obj == null) ? -1 : obj.Value.GetHashCode());
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,Hash,The following statement contains a magic number: _hashCode = 37 * _hashCode + ((obj == null) ? -1 : obj.GetHashCode());
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,HashElements,The following statement contains a magic number: if (sequence == null)              {                  _hashCode = 37 * _hashCode + -1;              }              else              {                  foreach (var value in sequence)                  {                      _hashCode = 37 * _hashCode + ((value == null) ? -1 : value.GetHashCode());                  }              }
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,HashElements,The following statement contains a magic number: if (sequence == null)              {                  _hashCode = 37 * _hashCode + -1;              }              else              {                  foreach (var value in sequence)                  {                      _hashCode = 37 * _hashCode + ((value == null) ? -1 : value.GetHashCode());                  }              }
Magic Number,MongoDB.Shared,Hasher,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Shared\Hasher.cs,HashStructElements,The following statement contains a magic number: foreach (var value in sequence)              {                  _hashCode = 37 * _hashCode + value.GetHashCode();              }
Duplicate Code,MongoDB.Driver.Core.Authentication.Sspi,SecurityContext,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\SecurityContext.cs,EncryptMessage,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 27)' (49' 70))
Missing Default,MongoDB.Driver,ReadConcern,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\ReadConcern.cs,ToBsonDocument,The following switch statement is missing a default case: switch (_level.Value)                  {                      case ReadConcernLevel.Linearizable:                          level = "linearizable";                          break;                      case ReadConcernLevel.Local:                          level = "local";                          break;                      case ReadConcernLevel.Majority:                          level = "majority";                          break;                  }
Missing Default,MongoDB.Driver.Core.Authentication.Sspi,NativeMethods,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Authentication\Sspi\NativeMethods.cs,CreateException,The following switch statement is missing a default case: switch (errorCode)              {                  case SEC_E_BUFFER_TOO_SMALL:                      message = "The message buffer is too small. Used with the Digest SSP.";                      break;                  case SEC_E_CONTEXT_EXPIRED:                      message = "The application is referencing a context that has already been closed.";                      break;                  case SEC_E_CRYPTO_SYSTEM_INVALID:                      message = "The cipher chosen for the security context is not supported. Used with the Digest SSP.";                      break;                  case SEC_E_INCOMPLETE_MESSAGE:                      message = "The data in the input buffer is incomplete.";                      break;                  case SEC_E_INSUFFICENT_MEMORY:                      message = "There is not enough memory available to complete the requested action.";                      break;                  case SEC_E_INTERNAL_ERROR:                      message = "An error occurred that did not map to an SSPI error code.";                      break;                  case SEC_E_INVALID_HANDLE:                      message = "The handle passed to the function is not valid.";                      break;                  case SEC_E_INVALID_TOKEN:                      message = "The input token is malformed . Possible causes include a token corrupted in transit' a token of incorrect size' and a token passed into the wrong security package. This last condition can happen if the client and server did not negotiate the proper security package.";                      break;                  case SEC_E_LOGON_DENIED:                      message = "The logon failed.";                      break;                  case SEC_E_MESSAGE_ALTERED:                      message = "The message has been altered. Used with the Digest and Schannel SSPs.";                      break;                  case SEC_E_NO_AUTHENTICATING_AUTHORITY:                      message = "No authority could be contacted for authentication. The domain name of the authenticating party could be wrong' the domain could be unreachable' or there might have been a trust relationship failure.";                      break;                  case SEC_E_NO_CREDENTIALS:                      message = "No credentials are available in the security package.";                      break;                  case SEC_E_OUT_OF_SEQUENCE:                      message = "The message was not received in the correct sequence.";                      break;                  case SEC_E_QOP_NOT_SUPPORTED:                      message = "Neither confidentiality nor integrity are supported by the security context. Used with the Digest SSP.";                      break;                  case SEC_E_SECPKG_NOT_FOUND:                      message = "The requested security package does not exist.";                      break;                  case SEC_E_TARGET_UNKNOWN:                      message = "The target was not recognized.";                      break;                  case SEC_E_UNKNOWN_CREDENTIALS:                      message = "The credentials supplied to the package were not recognized.";                      break;                  case SEC_I_CONTEXT_EXPIRED:                      message = "The message sender has finished using the connection and has initiated a shutdown.";                      break;                  case SEC_I_RENEGOTIATE:                      message = "The remote party requires a new handshake sequence or the application has just initiated a shutdown.";                      break;              }
Missing Default,MongoDB.Driver.Core.Connections,CommandEventHelper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Connections\CommandEventHelper.cs,ProcessReplyMessage,The following switch statement is missing a default case: switch (state.ExpectedResponseType)                      {                          case ExpectedResponseType.Command:                              ProcessCommandReplyMessage(state' replyMessage' connectionId);                              break;                          case ExpectedResponseType.GLE:                              ProcessGLEReplyMessage(state' replyMessage' connectionId);                              break;                          case ExpectedResponseType.Query:                              ProcessQueryReplyMessage(state' replyMessage' connectionId);                              break;                      }
Missing Default,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following switch statement is missing a default case: switch (code.ToInt32())                  {                      case 50:                      case 13475:                      case 16986:                      case 16712:                          return new MongoExecutionTimeoutException(connectionId' message: "Operation exceeded time limit.");                  }
Missing Default,MongoDB.Driver.Core.Misc,ExceptionMapper,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Misc\ExceptionMapper.cs,Map,The following switch statement is missing a default case: switch (code.Value)                  {                      case 11000:                      case 11001:                      case 12582:                          var errorMessage = string.Format(                              "WriteConcern detected an error '{0}'. (Response was {1})."'                              writeConcernResult.LastErrorMessage' writeConcernResult.Response.ToJson());                          return new MongoDuplicateKeyException(connectionId' errorMessage' writeConcernResult);                  }
Missing Default,MongoDB.Driver.Core.Operations,BulkWriteBatchResult,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResult.cs,Create,The following switch statement is missing a default case: switch (firstRequest.RequestType)                  {                      case WriteRequestType.Delete:                          deletedCount = n;                          break;                      case WriteRequestType.Insert:                          insertedCount = n;                          break;                      case WriteRequestType.Update:                          matchedCount = n - upserts.Count();                          BsonValue nModified;                          if (writeCommandResponse.TryGetValue("nModified"' out nModified))                          {                              modifiedCount = nModified.ToInt64();                          }                          else                          {                              modifiedCount = null;                          }                          break;                  }
Missing Default,MongoDB.Driver.Core.Operations,BulkWriteBatchResult,C:\repos\mongodb_mongo-csharp-driver\src\MongoDB.Driver.Core\Core\Operations\BulkWriteBatchResult.cs,Create,The following switch statement is missing a default case: switch (request.RequestType)              {                  case WriteRequestType.Delete:                      deletedCount = documentsAffected;                      break;                  case WriteRequestType.Insert:                      insertedCount = documentsAffected;                      break;                  case WriteRequestType.Update:                      matchedCount = documentsAffected - upserts.Count();                      modifiedCount = null; // getLasterror does not report this value                      break;              }
