Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,Cyclomatic complexity of the method is 10
Long Identifier,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,,The length of the parameter __connectionStringWithMultipleShardRouters is 42.
Long Identifier,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The length of the parameter namesToUseOrderInsensitiveComparisonWith is 40.
Long Statement,MongoDB.Driver.Core.TestHelpers,ClusterDescriptionParser,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\ClusterDescriptionParser.cs,Parse,The length of the statement  "            var connectionMode = (ClusterConnectionMode)Enum.Parse(typeof(ClusterConnectionMode)' args.GetValue("connectionMode"' "Automatic").AsString); " is 141.
Long Statement,MongoDB.Driver.Core.TestHelpers,ICoreSessionHandleExtensions,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\ICoreSessionHandleExtensions.cs,_referenceCount,The length of the statement  "            var fieldInfo = typeof(ReferenceCountedCoreSession).GetField("_referenceCount"' BindingFlags.NonPublic | BindingFlags.Instance); " is 128.
Long Statement,MongoDB.Driver.Core.TestHelpers,ServerDescriptionParser,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\ServerDescriptionParser.cs,Parse,The length of the statement  "            var logicalSessionTimeout = logicalSessionTimeoutMinutes.IsBsonNull ? (TimeSpan?)null : TimeSpan.FromMinutes(logicalSessionTimeoutMinutes.ToInt32()); " is 149.
Long Statement,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,ConfigureCluster,The length of the statement  "                .ConfigureCluster(c => c.With(serverSelectionTimeout: TimeSpan.FromMilliseconds(int.Parse(serverSelectionTimeoutString)))); " is 123.
Long Statement,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,CreateCluster,The length of the statement  "                    __traceSource.TraceEvent(TraceEventType.Information' 0' $"CreateCluster: new description: {e.NewClusterDescription.ToString()}."); " is 130.
Long Statement,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,GetConnectionStringWithMultipleShardRouters,The length of the statement  "            var uri = Environment.GetEnvironmentVariable("MONGODB_URI_WITH_MULTIPLE_MONGOSES") ?? "mongodb://localhost'localhost:27018"; " is 124.
Long Statement,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,GetModules,The length of the statement  "                var operation = new ReadCommandOperation<BsonDocument>(DatabaseNamespace.Admin' command' BsonDocumentSerializer.Instance' __messageEncoderSettings); " is 148.
Long Statement,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,GetStorageEngine,The length of the statement  "                var operation = new ReadCommandOperation<BsonDocument>(DatabaseNamespace.Admin' command' BsonDocumentSerializer.Instance' __messageEncoderSettings); " is 148.
Long Statement,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,AreSessionsSupported,The length of the statement  "            SpinWait.SpinUntil(() => cluster.Description.Servers.Any(s => s.State == ServerState.Connected)' TimeSpan.FromSeconds(30)); " is 123.
Long Statement,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The length of the statement  "                AdaptExpectedUpdateModels(actualValue.AsBsonArray.Cast<BsonDocument>().ToList()' expectedValue.AsBsonArray.Cast<BsonDocument>().ToList()); " is 138.
Long Statement,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The length of the statement  "            if (!(useOrderInsensitiveComparison ? BsonValueEquivalencyComparer.Compare(actualValue' expectedValue) : actualValue.Equals(expectedValue))) " is 140.
Long Statement,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The length of the statement  "                throw new AssertionFailedException($"Expected field '{name}' in command '{commandName}' to be {expectedValue.ToJson()} but found {actualValue.ToJson()}."); " is 155.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,ClusterTypes,The length of the statement  "            throw new SkipException($"Test skipped because cluster type is {actualClusterType} and not one of ({clusterTypesString})."); " is 124.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,Supports,The length of the statement  "            throw new SkipException($"Test skipped because server version {_serverVersion} does not support the {feature.Name} feature."); " is 126.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,DoesNotSupport,The length of the statement  "            throw new SkipException($"Test skipped because server version {_serverVersion} does support the {feature.Name} feature."); " is 122.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,StorageEngine,The length of the statement  "            throw new SkipException($"Test skipped because storage engine is \"{actualStorageEngine}\" and not \"{storageEngine}\"."); " is 122.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,StorageEngines,The length of the statement  "            throw new SkipException($"Test skipped because storage engine is \"{actualStorageEngine}\" and not one of ({storageEnginesString})."); " is 134.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,VersionGreaterThanOrEqualTo,The length of the statement  "            throw new SkipException($"Test skipped because server version {actualVersion} is not greater than or equal to {version}."); " is 123.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,VersionLessThanOrEqualTo,The length of the statement  "            throw new SkipException($"Test skipped because server version {actualVersion} is not less than or equal to {version}."); " is 120.
Long Statement,MongoDB.Driver.Core.TestHelpers.XunitExtensions,RequireServer,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\XunitExtensions\RequireServer.cs,CanRunOn,The length of the statement  "                var runOnClusterTypes = topologyBsonValue.AsBsonArray.Select(topology => MapTopologyToClusterType(topology.AsString)).ToList(); " is 127.
Complex Conditional,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The conditional expression  "expectedValue is BsonString &&                                  actualValue.IsBsonDocument &&                                  actualValue.AsBsonDocument.Contains("replace") &&                                  actualValue["replace"] == expectedValue.AsString"  is complex.
Empty Catch Block,MongoDB.Driver.Core.TestHelpers,FailPoint,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\FailPoint.cs,Configure,The method has an empty catch block.
Empty Catch Block,MongoDB.Driver.Core.TestHelpers,FailPoint,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\FailPoint.cs,Dispose,The method has an empty catch block.
Magic Number,MongoDB.Driver.Core.TestHelpers,ClusterDescriptionParser,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\ClusterDescriptionParser.cs,Parse,The following statement contains a magic number: var port = 27017 + index;
Magic Number,MongoDB.Driver.Core.TestHelpers,CoreExceptionHelper,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreExceptionHelper.cs,CreateException,The following statement contains a magic number: switch (exceptionType.Name)              {                  case "IOException":                      return new IOException("Fake IOException.");                    case "MongoConnectionException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var message = "Fake MongoConnectionException";                          var innerException = new Exception();                          return new MongoConnectionException(connectionId' message' innerException);                      }                    case "MongoCursorNotFoundException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var cursorId = 1L;                          var query = new BsonDocument();                          return new MongoCursorNotFoundException(connectionId' cursorId' query);                      }                    case "MongoNodeIsRecoveringException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNodeIsRecoveringException(connectionId' null' result);                      }                    case "MongoNotPrimaryException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNotPrimaryException(connectionId' null' result);                      }                    default:                      throw new ArgumentException($"Unexpected exception type: {exceptionType.Name}."' nameof(exceptionType));              }
Magic Number,MongoDB.Driver.Core.TestHelpers,CoreExceptionHelper,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreExceptionHelper.cs,CreateException,The following statement contains a magic number: switch (exceptionType.Name)              {                  case "IOException":                      return new IOException("Fake IOException.");                    case "MongoConnectionException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var message = "Fake MongoConnectionException";                          var innerException = new Exception();                          return new MongoConnectionException(connectionId' message' innerException);                      }                    case "MongoCursorNotFoundException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var cursorId = 1L;                          var query = new BsonDocument();                          return new MongoCursorNotFoundException(connectionId' cursorId' query);                      }                    case "MongoNodeIsRecoveringException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNodeIsRecoveringException(connectionId' null' result);                      }                    case "MongoNotPrimaryException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNotPrimaryException(connectionId' null' result);                      }                    default:                      throw new ArgumentException($"Unexpected exception type: {exceptionType.Name}."' nameof(exceptionType));              }
Magic Number,MongoDB.Driver.Core.TestHelpers,CoreExceptionHelper,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreExceptionHelper.cs,CreateException,The following statement contains a magic number: switch (exceptionType.Name)              {                  case "IOException":                      return new IOException("Fake IOException.");                    case "MongoConnectionException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var message = "Fake MongoConnectionException";                          var innerException = new Exception();                          return new MongoConnectionException(connectionId' message' innerException);                      }                    case "MongoCursorNotFoundException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var cursorId = 1L;                          var query = new BsonDocument();                          return new MongoCursorNotFoundException(connectionId' cursorId' query);                      }                    case "MongoNodeIsRecoveringException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNodeIsRecoveringException(connectionId' null' result);                      }                    case "MongoNotPrimaryException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNotPrimaryException(connectionId' null' result);                      }                    default:                      throw new ArgumentException($"Unexpected exception type: {exceptionType.Name}."' nameof(exceptionType));              }
Magic Number,MongoDB.Driver.Core.TestHelpers,CoreExceptionHelper,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreExceptionHelper.cs,CreateException,The following statement contains a magic number: switch (exceptionType.Name)              {                  case "IOException":                      return new IOException("Fake IOException.");                    case "MongoConnectionException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var message = "Fake MongoConnectionException";                          var innerException = new Exception();                          return new MongoConnectionException(connectionId' message' innerException);                      }                    case "MongoCursorNotFoundException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var cursorId = 1L;                          var query = new BsonDocument();                          return new MongoCursorNotFoundException(connectionId' cursorId' query);                      }                    case "MongoNodeIsRecoveringException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNodeIsRecoveringException(connectionId' null' result);                      }                    case "MongoNotPrimaryException":                      {                          var clusterId = new ClusterId(1);                          var serverId = new ServerId(clusterId' new DnsEndPoint("localhost"' 27017));                          var connectionId = new ConnectionId(serverId' 1);                          var result = new BsonDocument();                          return new MongoNotPrimaryException(connectionId' null' result);                      }                    default:                      throw new ArgumentException($"Unexpected exception type: {exceptionType.Name}."' nameof(exceptionType));              }
Magic Number,MongoDB.Driver.Core.TestHelpers,CoreExceptionHelper,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreExceptionHelper.cs,CreateMongoCommandException,The following statement contains a magic number: var endPoint = new DnsEndPoint("localhost"' 27017);
Magic Number,MongoDB.Driver.Core.TestHelpers,ServerDescriptionParser,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\ServerDescriptionParser.cs,ParseEndPoint,The following statement contains a magic number: return new DnsEndPoint(value' 27017);
Magic Number,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,CreateCluster,The following statement contains a magic number: SpinWait.SpinUntil(() => Interlocked.CompareExchange(ref hasWritableServer' 0' 0) != 0' TimeSpan.FromSeconds(30));
Magic Number,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,GetDatabaseNamespaceForTestClass,The following statement contains a magic number: databaseName = databaseName.Substring(0' 63);
Magic Number,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,GetDatabaseNamespaceForTestClass,The following statement contains a magic number: databaseName.Length >= 64
Magic Number,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,TruncateCollectionNameIfTooLong,The following statement contains a magic number: fullNameLength <= 120
Magic Number,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,TruncateDatabaseNameIfTooLong,The following statement contains a magic number: databaseName.Length < 64
Magic Number,MongoDB.Driver,CoreTestConfiguration,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\CoreTestConfiguration.cs,AreSessionsSupported,The following statement contains a magic number: SpinWait.SpinUntil(() => cluster.Description.Servers.Any(s => s.State == ServerState.Connected)' TimeSpan.FromSeconds(30));
Missing Default,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The following switch statement is missing a default case: switch (name)                  {                      case "autocommit":                      case "readConcern":                      case "recoveryToken":                      case "startTransaction":                      case "txnNumber":                      case "writeConcern":                      case "maxTimeMS":                          if (actualCommand.Contains(name))                          {                              throw new AssertionFailedException($"Did not expect field '{name}' in command: {actualCommand.ToJson()}.");                          }                          return;                  }
Missing Default,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The following switch statement is missing a default case: switch (name)                  {                      case "new":                          if (commandName == "findAndModify" && expectedValue == false)                          {                              return;                          }                          break;                      case "cursor" when commandName == "listCollections":                          return;                  }
Missing Default,MongoDB.Driver.Core.TestHelpers.JsonDrivenTests,CommandStartedEventAsserter,D:\research\architectureSmells\repos\mongodb_mongo-csharp-driver\tests\MongoDB.Driver.Core.TestHelpers\JsonDrivenTests\CommandStartedEventAsserter.cs,AssertCommandAspect,The following switch statement is missing a default case: switch (name)                  {                      case "out":                          if (commandName == "mapReduce")                          {                              if (expectedValue is BsonString &&                                  actualValue.IsBsonDocument &&                                  actualValue.AsBsonDocument.Contains("replace") &&                                  actualValue["replace"] == expectedValue.AsString)                              {                                  // allow short form for "out" to be equivalent to the long form                                  // Assumes that the driver is correctly generating the following                                  // fields: db' sharded' nonAtomic                                  return;                              }                          }                          break;                  }
