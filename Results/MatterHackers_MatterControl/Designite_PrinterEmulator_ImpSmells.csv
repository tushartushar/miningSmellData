Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,GetPosition,The length of the statement  "			return $"X:{XPosition:0.00} Y:{YPosition:0.00} Z:{ZPosition:0.00} E:{EPosition:0.00} Count X: 0.00 Y:0.00 Z:0.00\nok\n"; " is 120.
Long Statement,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,reportMarlinFirmware,The length of the statement  "			return "FIRMWARE_NAME:Marlin V1; Sprinter/grbl mashup for gen6 FIRMWARE_URL:https://github.com/MarlinFirmware/Marlin PROTOCOL_VERSION:1.0 MACHINE_TYPE:Framelis v1 EXTRUDER_COUNT:1 UUID:155f84b5-d4d7-46f4-9432-667e6876f37a\nok\n"; " is 229.
Empty Catch Block,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,Startup,The method has an empty catch block.
Empty Catch Block,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,Startup,The method has an empty catch block.
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,GetCorrectResponse,The following statement contains a magic number: try  			{  				// Remove line returns  				command = command.Split('\n')[0]; // strip of the trailing cr (\n)  				command = ParseChecksumLine(command);  				var commandKey = getCommandKey(command);  				if (responses.ContainsKey(commandKey))  				{  					if (RunSlow)  					{  						// do the right amount of time for the given command  						Thread.Sleep(20);  					}  					return responses[commandKey](command);  				}  				else  				{  					Console.WriteLine($"Command {command} not found");  				}  			}  			catch (Exception e)  			{  				Console.WriteLine(e);  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,RandomTemp,The following statement contains a magic number: if (BedGoalTemperature == -1)  			{  				return $"ok T:{(ExtruderGoalTemperature + random.Next(-2' 2))}\n";  			}  			else  			{  				return $"ok T:{ExtruderGoalTemperature + random.Next(-2' 2)} B:{BedGoalTemperature + random.Next(-2' 2) }\n";  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,RandomTemp,The following statement contains a magic number: if (BedGoalTemperature == -1)  			{  				return $"ok T:{(ExtruderGoalTemperature + random.Next(-2' 2))}\n";  			}  			else  			{  				return $"ok T:{ExtruderGoalTemperature + random.Next(-2' 2)} B:{BedGoalTemperature + random.Next(-2' 2) }\n";  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,RandomTemp,The following statement contains a magic number: if (BedGoalTemperature == -1)  			{  				return $"ok T:{(ExtruderGoalTemperature + random.Next(-2' 2))}\n";  			}  			else  			{  				return $"ok T:{ExtruderGoalTemperature + random.Next(-2' 2)} B:{BedGoalTemperature + random.Next(-2' 2) }\n";  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,RandomTemp,The following statement contains a magic number: if (BedGoalTemperature == -1)  			{  				return $"ok T:{(ExtruderGoalTemperature + random.Next(-2' 2))}\n";  			}  			else  			{  				return $"ok T:{ExtruderGoalTemperature + random.Next(-2' 2)} B:{BedGoalTemperature + random.Next(-2' 2) }\n";  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,RandomTemp,The following statement contains a magic number: if (BedGoalTemperature == -1)  			{  				return $"ok T:{(ExtruderGoalTemperature + random.Next(-2' 2))}\n";  			}  			else  			{  				return $"ok T:{ExtruderGoalTemperature + random.Next(-2' 2)} B:{BedGoalTemperature + random.Next(-2' 2) }\n";  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,RandomTemp,The following statement contains a magic number: if (BedGoalTemperature == -1)  			{  				return $"ok T:{(ExtruderGoalTemperature + random.Next(-2' 2))}\n";  			}  			else  			{  				return $"ok T:{ExtruderGoalTemperature + random.Next(-2' 2)} B:{BedGoalTemperature + random.Next(-2' 2) }\n";  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,Startup,The following statement contains a magic number: serialPort.ReadTimeout = 500;
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,Startup,The following statement contains a magic number: serialPort.WriteTimeout = 500;
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,Startup,The following statement contains a magic number: Task.Run(() =>  			{  				while (!shutDown)  				{  					if (serialPort.CDHolding != CDState)  					{  						CDState = serialPort.CDHolding;  						CDChangeCount++;  					}  					if (serialPort.CtsHolding != CtsState)  					{  						CtsState = serialPort.CtsHolding;  						CtsChangeCount++;  					}  					if (serialPort.DsrHolding != DsrState)  					{  						DsrState = serialPort.DsrHolding;  						DsrChangeCount++;  					}    					Thread.Sleep(10);  				}  			});
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,Wait,The following statement contains a magic number: try  			{  				// M140 S210 or M190 S[temp]  				double timeToWait = 0;  				if (!GetFirstNumberAfter("S"' command' ref timeToWait))  				{  					if (GetFirstNumberAfter("P"' command' ref timeToWait))  					{  						timeToWait /= 1000;  					}  				}    				Thread.Sleep((int)(timeToWait * 1000));  			}  			catch (Exception e)  			{  				Console.WriteLine(e);  			}
Magic Number,MatterHackers.PrinterEmulator,Emulator,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Emulator.cs,Wait,The following statement contains a magic number: try  			{  				// M140 S210 or M190 S[temp]  				double timeToWait = 0;  				if (!GetFirstNumberAfter("S"' command' ref timeToWait))  				{  					if (GetFirstNumberAfter("P"' command' ref timeToWait))  					{  						timeToWait /= 1000;  					}  				}    				Thread.Sleep((int)(timeToWait * 1000));  			}  			catch (Exception e)  			{  				Console.WriteLine(e);  			}
Magic Number,MatterHackers.PrinterEmulator,Program,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Program.cs,Main,The following statement contains a magic number: while(true)  			{  				// do the right amount of time for the given command  				Thread.Sleep(200);  			}
Missing Default,MatterHackers.PrinterEmulator,Program,C:\repos\MatterHackers_MatterControl\PrinterEmulator\Program.cs,Main,The following switch statement is missing a default case: switch (args[currentCommandIndex])  				{  					case "slow":  						emulator.RunSlow = true;  						break;  				}
