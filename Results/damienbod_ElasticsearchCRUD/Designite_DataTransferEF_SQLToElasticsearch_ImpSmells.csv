Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DataTransferSQLToEl,Repo,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\Repo.cs,SaveToElasticsearchStateProvince,The length of the statement  "            using ( var elasticSearchContext = new ElasticsearchContext("http://localhost:9200/"' new ElasticsearchSerializerConfiguration(elasticsearchMappingResolver'true'true))) " is 168.
Long Statement,DataTransferSQLToEl,Repo,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\Repo.cs,SaveToElasticsearchStateProvince,The length of the statement  "                        var collection = databaseEfModel.StateProvince.OrderBy(t => t.StateProvinceID).Skip(pointer).Take(interval).ToList<StateProvince>(); " is 132.
Long Statement,DataTransferSQLToEl,StateProvinceReindexConfiguration,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\ExampleReindexChildDocuments\StateProvinceReindexConfiguration.cs,BuildSearchRange,The length of the statement  "			buildJson.AppendLine("\"range\": {  \"" + updatePropertyName + "\": { \"" + lessThanOrGreaterThan + "\":   \"" + isoDateTime + "\"  } }"); " is 138.
Magic Number,DataTransferSQLToEl,Repo,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\Repo.cs,SaveToElasticsearchStateProvince,The following statement contains a magic number: using ( var elasticSearchContext = new ElasticsearchContext("http://localhost:9200/"' new ElasticsearchSerializerConfiguration(elasticsearchMappingResolver'true'true)))              {                  //elasticSearchContext.TraceProvider = new ConsoleTraceProvider();                  elasticSearchContext.IndexCreate<StateProvince>();                  using (var databaseEfModel = new SQLDataModel())                  {                      int pointer = 0;                      const int interval = 20;                      int length = databaseEfModel.StateProvince.Count();                        while (pointer < length)                      {                          stopwatch.Start();                          var collection = databaseEfModel.StateProvince.OrderBy(t => t.StateProvinceID).Skip(pointer).Take(interval).ToList<StateProvince>();                          stopwatch.Stop();                          Console.WriteLine("Time taken for select {0} Address: {1}"' interval' stopwatch.Elapsed);                          stopwatch.Reset();                            stopwatch.Start();                          foreach (var item in collection)                          {                              var ee = item.CountryRegion.Name;                              var t = item.Address.ToList();                              elasticSearchContext.AddUpdateDocument(item' item.StateProvinceID);                          }                            elasticSearchContext.SaveChanges();                                                                            stopwatch.Stop();                          Console.WriteLine("Time taken to insert {0} Address documents: {1}"' interval' stopwatch.Elapsed);                          stopwatch.Reset();                          pointer = pointer + interval;                          Console.WriteLine("Transferred: {0} items"' pointer);                      }                  }              }
Magic Number,DataTransferSQLToEl,Repo,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\Repo.cs,SaveToElasticsearchPerson,The following statement contains a magic number: using (var elasticSearchContext = new ElasticsearchContext("http://localhost:9200/"' elasticsearchMappingResolver))              {                  if (elasticSearchContext.IndexExists<Person>())                  {                      elasticSearchContext.DeleteIndex<Person>();                      Thread.Sleep(1200);                  }                    elasticSearchContext.IndexCreate<Person>(new IndexDefinition                  {                      IndexSettings = new IndexSettings                      {                          NumberOfReplicas = 1                      }                  });                    //elasticSearchContext.TraceProvider = new ConsoleTraceProvider();                  using (var databaseEfModel = new SQLDataModel())                  {                      int pointer = 0;                      const int interval = 1000;                      int length = databaseEfModel.Person.Count();                        while (pointer < length)                      {                          stopwatch.Start();                          var collection = databaseEfModel.Person.OrderBy(t => t.BusinessEntityID).Skip(pointer).Take(interval).ToList<Person>();                          stopwatch.Stop();                          Console.WriteLine("Time taken for select {0} persons: {1}"' interval'stopwatch.Elapsed);                          stopwatch.Reset();                            stopwatch.Start();                          foreach (var item in collection)                          {                              elasticSearchContext.AddUpdateDocument(item' item.BusinessEntityID);                          }                          elasticSearchContext.SaveChanges();                          stopwatch.Stop();                          Console.WriteLine("Time taken to insert {0} person documents: {1}"' interval' stopwatch.Elapsed);                          stopwatch.Reset();                          pointer = pointer + interval;                          Console.WriteLine("Transferred: {0} items"' pointer);                      }                  }              }
Magic Number,DataTransferSQLToEl,Repo,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\Repo.cs,SaveToElasticsearchPerson,The following statement contains a magic number: using (var elasticSearchContext = new ElasticsearchContext("http://localhost:9200/"' elasticsearchMappingResolver))              {                  if (elasticSearchContext.IndexExists<Person>())                  {                      elasticSearchContext.DeleteIndex<Person>();                      Thread.Sleep(1200);                  }                    elasticSearchContext.IndexCreate<Person>(new IndexDefinition                  {                      IndexSettings = new IndexSettings                      {                          NumberOfReplicas = 1                      }                  });                    //elasticSearchContext.TraceProvider = new ConsoleTraceProvider();                  using (var databaseEfModel = new SQLDataModel())                  {                      int pointer = 0;                      const int interval = 1000;                      int length = databaseEfModel.Person.Count();                        while (pointer < length)                      {                          stopwatch.Start();                          var collection = databaseEfModel.Person.OrderBy(t => t.BusinessEntityID).Skip(pointer).Take(interval).ToList<Person>();                          stopwatch.Stop();                          Console.WriteLine("Time taken for select {0} persons: {1}"' interval'stopwatch.Elapsed);                          stopwatch.Reset();                            stopwatch.Start();                          foreach (var item in collection)                          {                              elasticSearchContext.AddUpdateDocument(item' item.BusinessEntityID);                          }                          elasticSearchContext.SaveChanges();                          stopwatch.Stop();                          Console.WriteLine("Time taken to insert {0} person documents: {1}"' interval' stopwatch.Elapsed);                          stopwatch.Reset();                          pointer = pointer + interval;                          Console.WriteLine("Transferred: {0} items"' pointer);                      }                  }              }
Magic Number,DataTransferSQLToEl.ExampleReindexChildDocuments,Reindexer,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\ExampleReindexChildDocuments\Reindexer.cs,ReindexStateProvince,The following statement contains a magic number: reindex.ScanAndScrollConfiguration = new ScanAndScrollConfiguration(new TimeUnitSecond(5)' 1000);
Magic Number,DataTransferSQLToEl.ExampleReindexChildDocuments,Reindexer,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\ExampleReindexChildDocuments\Reindexer.cs,ReindexStateProvince,The following statement contains a magic number: reindex.ScanAndScrollConfiguration = new ScanAndScrollConfiguration(new TimeUnitSecond(5)' 1000);
Magic Number,DataTransferSQLToEl.ExampleReindexChildDocuments,Reindexer,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\ExampleReindexChildDocuments\Reindexer.cs,ReindexStateProvinceAddress,The following statement contains a magic number: reindexAddress.ScanAndScrollConfiguration = new ScanAndScrollConfiguration(new TimeUnitSecond(5)' 1000);
Magic Number,DataTransferSQLToEl.ExampleReindexChildDocuments,Reindexer,C:\repos\damienbod_ElasticsearchCRUD\samples\DataTransferEF_SQLToElasticsearch\ExampleReindexChildDocuments\Reindexer.cs,ReindexStateProvinceAddress,The following statement contains a magic number: reindexAddress.ScanAndScrollConfiguration = new ScanAndScrollConfiguration(new TimeUnitSecond(5)' 1000);
