Implementation smell,Namespace,Class,File,Method,Description
Long Method,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,AddTheLayer,The method has 117 lines of code.
Long Method,com.esri.gpt.wmc,WMCDocument,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\WMCDocument.cs,LoadFromFile,The method has 147 lines of code.
Complex Method,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,AddTheLayer,Cyclomatic complexity of the method is 8
Complex Method,com.esri.gpt.wmc,WMCDocument,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\WMCDocument.cs,LoadFromFile,Cyclomatic complexity of the method is 9
Long Statement,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,AddTheLayer,The length of the statement  "                    logger.writeLog(StringResources.DontNeedToAddService + strServer + StringResources.Colon + strLayerName + StringResources.Colon + theLayer.SecretName); " is 151.
Long Statement,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,AddTheLayer,The length of the statement  "                    logger.writeLog(StringResources.DontNeedToAddService + strServer + StringResources.Colon + strLayerName + StringResources.Colon + theLayer.SecretName); " is 151.
Long Statement,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,AddTheLayer,The length of the statement  "                    logger.writeLog(StringResources.DontNeedToAddService + strServer + StringResources.Colon + strLayerName + StringResources.Colon + theLayer.SecretName); " is 151.
Long Statement,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(OpenWMC)); " is 127.
Long Statement,com.esri.gpt.wmc,WMCDocument,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\WMCDocument.cs,LoadFromFile,The length of the statement  "            XmlNode theGeneral = theWMC.SelectNodes("/context:ViewContext/context:General/context:BoundingBox"'xmlnsManager).Item(0); " is 121.
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,AddTheLayer,The following statement contains a magic number: foreach (string lyr in colServiceList)              {                  layer = lyr;                  string[] s = DecodeServiceList(layer);                  strServer = s[0];                  strLayerName = s[1];                  strSecretName = s[2];                    if (strServer == strThisServerID)                  {                      bIsLoaded = true;                      break;                  }                  else if ((strServer + strLayerName) == strThisServerID)                  {                      bIsLoaded = true;                      break;                  }                  else if ((strServer + ":" + strLayerName) == strThisServerID)                  {                      bIsLoaded = true;                      break;                  }              }
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,AddTheLayer,The following statement contains a magic number: if (!bIsLoaded)              {                  //add it to map (and service list)                  if (bIsArcIMS)                  {                      // arcims - .name is the group layername in arcmap.  .title is the sublayer display name                      bAddedToList = addLayerArcIMS(ipMxDoc' theLayer.Server.OnlineResource.Href' theLayer.Name' theLayer.SecretName);                  }                  else if (bIsAGS)                  {                      bAddedToList = addLayerAGS(ipMxDoc' theLayer.Server.OnlineResource.Href' theLayer.Server.Title' theLayer.SecretName);                  }                  else                  {                      //  wms wants the .Title to be displayed as layername in arcmap.  thelayer.name is the WMSLayername - internal                      // wms group layer name comes from servicedescription                      bAddedToList = addLayerWMS(ipMxDoc' theLayer.Server.OnlineResource.Href' theLayer.Title' theLayer.SecretName);                  }              }              else              {                  //  get the service that matches                  string[] s = DecodeServiceList(layer);                  strServer = s[0];                  strLayerName = s[1];                  strSecretName = s[2];                    if (bIsArcIMS)                  {                      //  use layer.title for arcims                      logger.writeLog(StringResources.DontNeedToAddService + strServer + StringResources.Colon + strLayerName + StringResources.Colon + theLayer.SecretName);                      colServiceList.Add(EncodeServiceList(strServer' strLayerName' theLayer.SecretName));                  }                  else if (bIsAGS)                  {                      //  use layer.title for ags                      logger.writeLog(StringResources.DontNeedToAddService + strServer + StringResources.Colon + strLayerName + StringResources.Colon + theLayer.SecretName);                      colServiceList.Add(EncodeServiceList(strServer' strLayerName' theLayer.SecretName));                  }                  else                  {                      // create a NEW entry using the new layers internal Name                      logger.writeLog(StringResources.DontNeedToAddService + strServer + StringResources.Colon + strLayerName + StringResources.Colon + theLayer.SecretName);                      colServiceList.Add(EncodeServiceList(strServer' strLayerName' theLayer.SecretName));                  }                  bAddedToList = true;              }
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,SetLayerVisibility,The following statement contains a magic number: foreach (string layer in colVisibleLayers)              {                  string[] s = DecodeServiceList(layer);                  if (s.Length == 3)                  {                      strServer = s[0];                      strLayerName = s[1];                      strSecretName = s[2];                  }                  else if (s.Length == 2)                  {                      strServer = s[0];                      strLayerName = s[1];                      strSecretName = "";                  }                  else if (s.Length == 1)                  {                      strServer = "";                      strLayerName = s[0];                      strSecretName = "";                  }                  ipEnumLayer.Reset();                  ipLayer = ipEnumLayer.Next();                  do                  {                      if (ipLayer.Name == strLayerName)                      {                          SetLayerVisible(ipLayer' strLayerName' strSecretName);                          break;                      }                      ipLayer = ipEnumLayer.Next();                  } while (ipLayer != null);              }
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,SetLayerVisibility,The following statement contains a magic number: foreach (string layer in colVisibleLayers)              {                  string[] s = DecodeServiceList(layer);                  if (s.Length == 3)                  {                      strServer = s[0];                      strLayerName = s[1];                      strSecretName = s[2];                  }                  else if (s.Length == 2)                  {                      strServer = s[0];                      strLayerName = s[1];                      strSecretName = "";                  }                  else if (s.Length == 1)                  {                      strServer = "";                      strLayerName = s[0];                      strSecretName = "";                  }                  ipEnumLayer.Reset();                  ipLayer = ipEnumLayer.Next();                  do                  {                      if (ipLayer.Name == strLayerName)                      {                          SetLayerVisible(ipLayer' strLayerName' strSecretName);                          break;                      }                      ipLayer = ipEnumLayer.Next();                  } while (ipLayer != null);              }
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,SetLayerVisibility,The following statement contains a magic number: foreach (string layer in colVisibleLayers)              {                  string[] s = DecodeServiceList(layer);                  if (s.Length == 3)                  {                      strServer = s[0];                      strLayerName = s[1];                      strSecretName = s[2];                  }                  else if (s.Length == 2)                  {                      strServer = s[0];                      strLayerName = s[1];                      strSecretName = "";                  }                  else if (s.Length == 1)                  {                      strServer = "";                      strLayerName = s[0];                      strSecretName = "";                  }                  ipEnumLayer.Reset();                  ipLayer = ipEnumLayer.Next();                  do                  {                      if (ipLayer.Name == strLayerName)                      {                          SetLayerVisible(ipLayer' strLayerName' strSecretName);                          break;                      }                      ipLayer = ipEnumLayer.Next();                  } while (ipLayer != null);              }
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,GetAGSServiceUrl,The following statement contains a magic number: return (tokens[0] + "//" + tokens[2] + "/" + tokens[3] + "/" + tokens[4]);
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,GetAGSServiceUrl,The following statement contains a magic number: return (tokens[0] + "//" + tokens[2] + "/" + tokens[3] + "/" + tokens[4]);
Magic Number,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,GetAGSServiceUrl,The following statement contains a magic number: return (tokens[0] + "//" + tokens[2] + "/" + tokens[3] + "/" + tokens[4]);
Missing Default,com.esri.gpt.wmc,OpenWMC,C:\repos\Esri_geoportal-server\components\desktop\WMCOpener\branches\10.3\src\UI\OpenWMC.cs,browseBtn_Click,The following switch statement is missing a default case: switch (userResponse)              {                  case DialogResult.OK:                      this.openBtn.Enabled = true;                      break;                  case DialogResult.Cancel:                      this.openBtn.Enabled = false;                      break;              }
