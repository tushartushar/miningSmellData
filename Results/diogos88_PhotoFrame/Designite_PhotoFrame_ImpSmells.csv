Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PhotoFrame,Wunderground,C:\repos\diogos88_PhotoFrame\PhotoFrame\Wunderground.cs,getWeather,Cyclomatic complexity of the method is 17
Long Statement,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,updateDisplayInfo,The length of the statement  "			weatherLabel2.Text = TemperatureString.getString (m_culture.TwoLetterISOLanguageName) + ": " + temperature.Trim ().Replace (" "' "Â°") + " " + HumidityString.getString (m_culture.TwoLetterISOLanguageName) + ": " + m_weather.relative_humidity; " is 241.
Long Statement,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The length of the statement  "		throw new ApplicationException (string.Format ("destWidth:{0}' destX:{1}' destHeight:{2}' desxtY:{3}' Width:{4}' Height:{5}"' destWidth' destX' destHeight' destY' Width' Height)' ex); " is 183.
Complex Conditional,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,loadNextImage,The conditional expression  "(m_settings.showHorizontalImages && isHorizontal) || (m_settings.showVerticalImages && isVertical)"  is complex.
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,MainForm,The following statement contains a magic number: timer.Interval = 1000;  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,imageThreadHandler,The following statement contains a magic number: while (true) {  	if (m_allImages.Count == 0)  		loadImages ();  	loadNextImage ();  	var sleepDuration = m_settings.durationInSeconds * 1000;  	Thread.Sleep (sleepDuration);  }  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,weatherThreadHandler,The following statement contains a magic number: while (true) {  	updateWeather ();  	updateDisplayInfo ();  	var sleepDuration = ((m_weather != null) ? /*3600*/1 : 5) * 1000;  	Thread.Sleep (sleepDuration);  }  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,weatherThreadHandler,The following statement contains a magic number: while (true) {  	updateWeather ();  	updateDisplayInfo ();  	var sleepDuration = ((m_weather != null) ? /*3600*/1 : 5) * 1000;  	Thread.Sleep (sleepDuration);  }  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: if (!needToFill) {  	nScale = Math.Min (nScaleH' nScaleW);  }  else {  	nScale = Math.Max (nScaleH' nScaleW);  	destY = (Height - sourceHeight * nScale) / 2;  	destX = (Width - sourceWidth * nScale) / 2;  }  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: if (!needToFill) {  	nScale = Math.Min (nScaleH' nScaleW);  }  else {  	nScale = Math.Max (nScaleH' nScaleW);  	destY = (Height - sourceHeight * nScale) / 2;  	destX = (Width - sourceWidth * nScale) / 2;  }  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: destY = (Height - sourceHeight * nScale) / 2;  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: destX = (Width - sourceWidth * nScale) / 2;  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: try {  	bmp = new Bitmap (destWidth + (int)Math.Round (2 * destX)' destHeight + (int)Math.Round (2 * destY));  }  catch (Exception ex) {  	throw new ApplicationException (string.Format ("destWidth:{0}' destX:{1}' destHeight:{2}' desxtY:{3}' Width:{4}' Height:{5}"' destWidth' destX' destHeight' destY' Width' Height)' ex);  }  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: try {  	bmp = new Bitmap (destWidth + (int)Math.Round (2 * destX)' destHeight + (int)Math.Round (2 * destY));  }  catch (Exception ex) {  	throw new ApplicationException (string.Format ("destWidth:{0}' destX:{1}' destHeight:{2}' desxtY:{3}' Width:{4}' Height:{5}"' destWidth' destX' destHeight' destY' Width' Height)' ex);  }  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: bmp = new Bitmap (destWidth + (int)Math.Round (2 * destX)' destHeight + (int)Math.Round (2 * destY));  
Magic Number,PhotoFrame,MainForm,C:\repos\diogos88_PhotoFrame\PhotoFrame\Form1.cs,FixedSize,The following statement contains a magic number: bmp = new Bitmap (destWidth + (int)Math.Round (2 * destX)' destHeight + (int)Math.Round (2 * destY));  
Magic Number,PhotoFrame,PhotoFrameSettings,C:\repos\diogos88_PhotoFrame\PhotoFrame\PhotoFrameSettings.cs,PhotoFrameSettings,The following statement contains a magic number: durationInSeconds = 5;  
Missing Default,PhotoFrame,Wunderground,C:\repos\diogos88_PhotoFrame\PhotoFrame\Wunderground.cs,getWeather,The following switch statement is missing a default case: switch (reader.NodeType) {  case XmlNodeType.Element:  	if (reader.Name.Equals ("full")) {  		reader.Read ();  		wunderground.place = reader.Value;  	}  	else if (reader.Name.Equals ("observation_time")) {  		reader.Read ();  		wunderground.obs_time = reader.Value;  	}  	else if (reader.Name.Equals ("weather")) {  		reader.Read ();  		wunderground.weather1 = reader.Value;  	}  	else if (reader.Name.Equals ("temperature_string")) {  		reader.Read ();  		wunderground.temperature_string = reader.Value;  	}  	else if (reader.Name.Equals ("relative_humidity")) {  		reader.Read ();  		wunderground.relative_humidity = reader.Value;  	}  	else if (reader.Name.Equals ("wind_string")) {  		reader.Read ();  		wunderground.wind_string = reader.Value;  	}  	else if (reader.Name.Equals ("pressure_mb")) {  		reader.Read ();  		wunderground.pressure_mb = reader.Value;  	}  	else if (reader.Name.Equals ("dewpoint_string")) {  		reader.Read ();  		wunderground.dewpoint_string = reader.Value;  	}  	else if (reader.Name.Equals ("visibility_km")) {  		reader.Read ();  		wunderground.visibility_km = reader.Value;  	}  	else if (reader.Name.Equals ("latitude")) {  		reader.Read ();  		wunderground.latitude = reader.Value;  	}  	else if (reader.Name.Equals ("longitude")) {  		reader.Read ();  		wunderground.longitude = reader.Value;  	}  	break;  }  
