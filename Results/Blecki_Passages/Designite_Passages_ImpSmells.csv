Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,Cyclomatic complexity of the method is 9
Complex Method,Passages,CommandLine,C:\repos\Blecki_Passages\Passages\CommandLine.cs,ParseArguments,Cyclomatic complexity of the method is 17
Complex Method,Passages,Program,C:\repos\Blecki_Passages\Passages\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Parameter List,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,SetupScriptEngine,The method has 9 parameters.
Complex Conditional,Passages,CommandLine,C:\repos\Blecki_Passages\Passages\CommandLine.cs,ParseArguments,The conditional expression  "args [i] == "-i" || args [i] == "-in" || args [i] == "-input" || args [i] == "-infile""  is complex.
Complex Conditional,Passages,CommandLine,C:\repos\Blecki_Passages\Passages\CommandLine.cs,ParseArguments,The conditional expression  "args [i] == "-o" || args [i] == "-out" || args [i] == "-output" || args [i] == "-outfile""  is complex.
Complex Conditional,Passages,CommandLine,C:\repos\Blecki_Passages\Passages\CommandLine.cs,PrintHelpTopic,The conditional expression  "topic == "-mode" || topic == "mode" || topic == "-m" || topic == "modes""  is complex.
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,UnescapeString,The following statement contains a magic number: while (place < s.Length) {  	if (s [place] == '\\') {  		if (place < s.Length - 1) {  			if (s [place + 1] == 'n')  				r += '\n';  			else if (s [place + 1] == 't')  				r += '\t';  			else if (s [place + 1] == 'r')  				r += '\r';  			else  				r += s [place + 1];  		}  		place += 2;  	}  	else {  		r += s [place];  		++place;  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,UnescapeString,The following statement contains a magic number: if (s [place] == '\\') {  	if (place < s.Length - 1) {  		if (s [place + 1] == 'n')  			r += '\n';  		else if (s [place + 1] == 't')  			r += '\t';  		else if (s [place + 1] == 'r')  			r += '\r';  		else  			r += s [place + 1];  	}  	place += 2;  }  else {  	r += s [place];  	++place;  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,UnescapeString,The following statement contains a magic number: place += 2;  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: while (!state.AtEnd ()) {  	while (!state.AtEnd () && !state.MatchNext ("<<")) {  		if (state.MatchNext ("\\<<"))//Skip escaped open brackets  		 {  			output.Append ("<<");  			state.Advance (3);  		}  		else {  			output.Append (state.Next ());  			state.Advance ();  		}  	}  	if (!state.AtEnd ()) {  		state.Advance (2);  		//skip <<  		var script = new StringBuilder ();  		while (!state.AtEnd () && !state.MatchNext (">>")) {  			if (state.MatchNext ("\\>>")) {  				script.Append (">>");  				state.Advance (3);  			}  			else {  				script.Append (state.Next ());  				state.Advance ();  			}  		}  		if (!state.AtEnd ())  			state.Advance (2);  		//skip >>  		var scriptContext = ScriptEngine.CompileScript (script.ToString ());  		scriptContext.Tag = preprocessContext;  		ScriptEngine.RunScript (scriptContext);  		if (scriptContext.ExecutionState == MISP.ExecutionState.Error) {  			Console.WriteLine ("Error in preprocessing");  			Console.WriteLine (scriptContext.ErrorMessage);  		}  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: while (!state.AtEnd ()) {  	while (!state.AtEnd () && !state.MatchNext ("<<")) {  		if (state.MatchNext ("\\<<"))//Skip escaped open brackets  		 {  			output.Append ("<<");  			state.Advance (3);  		}  		else {  			output.Append (state.Next ());  			state.Advance ();  		}  	}  	if (!state.AtEnd ()) {  		state.Advance (2);  		//skip <<  		var script = new StringBuilder ();  		while (!state.AtEnd () && !state.MatchNext (">>")) {  			if (state.MatchNext ("\\>>")) {  				script.Append (">>");  				state.Advance (3);  			}  			else {  				script.Append (state.Next ());  				state.Advance ();  			}  		}  		if (!state.AtEnd ())  			state.Advance (2);  		//skip >>  		var scriptContext = ScriptEngine.CompileScript (script.ToString ());  		scriptContext.Tag = preprocessContext;  		ScriptEngine.RunScript (scriptContext);  		if (scriptContext.ExecutionState == MISP.ExecutionState.Error) {  			Console.WriteLine ("Error in preprocessing");  			Console.WriteLine (scriptContext.ErrorMessage);  		}  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: while (!state.AtEnd ()) {  	while (!state.AtEnd () && !state.MatchNext ("<<")) {  		if (state.MatchNext ("\\<<"))//Skip escaped open brackets  		 {  			output.Append ("<<");  			state.Advance (3);  		}  		else {  			output.Append (state.Next ());  			state.Advance ();  		}  	}  	if (!state.AtEnd ()) {  		state.Advance (2);  		//skip <<  		var script = new StringBuilder ();  		while (!state.AtEnd () && !state.MatchNext (">>")) {  			if (state.MatchNext ("\\>>")) {  				script.Append (">>");  				state.Advance (3);  			}  			else {  				script.Append (state.Next ());  				state.Advance ();  			}  		}  		if (!state.AtEnd ())  			state.Advance (2);  		//skip >>  		var scriptContext = ScriptEngine.CompileScript (script.ToString ());  		scriptContext.Tag = preprocessContext;  		ScriptEngine.RunScript (scriptContext);  		if (scriptContext.ExecutionState == MISP.ExecutionState.Error) {  			Console.WriteLine ("Error in preprocessing");  			Console.WriteLine (scriptContext.ErrorMessage);  		}  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: while (!state.AtEnd ()) {  	while (!state.AtEnd () && !state.MatchNext ("<<")) {  		if (state.MatchNext ("\\<<"))//Skip escaped open brackets  		 {  			output.Append ("<<");  			state.Advance (3);  		}  		else {  			output.Append (state.Next ());  			state.Advance ();  		}  	}  	if (!state.AtEnd ()) {  		state.Advance (2);  		//skip <<  		var script = new StringBuilder ();  		while (!state.AtEnd () && !state.MatchNext (">>")) {  			if (state.MatchNext ("\\>>")) {  				script.Append (">>");  				state.Advance (3);  			}  			else {  				script.Append (state.Next ());  				state.Advance ();  			}  		}  		if (!state.AtEnd ())  			state.Advance (2);  		//skip >>  		var scriptContext = ScriptEngine.CompileScript (script.ToString ());  		scriptContext.Tag = preprocessContext;  		ScriptEngine.RunScript (scriptContext);  		if (scriptContext.ExecutionState == MISP.ExecutionState.Error) {  			Console.WriteLine ("Error in preprocessing");  			Console.WriteLine (scriptContext.ErrorMessage);  		}  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: while (!state.AtEnd () && !state.MatchNext ("<<")) {  	if (state.MatchNext ("\\<<"))//Skip escaped open brackets  	 {  		output.Append ("<<");  		state.Advance (3);  	}  	else {  		output.Append (state.Next ());  		state.Advance ();  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: if (state.MatchNext ("\\<<"))//Skip escaped open brackets   {  	output.Append ("<<");  	state.Advance (3);  }  else {  	output.Append (state.Next ());  	state.Advance ();  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: state.Advance (3);  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: if (!state.AtEnd ()) {  	state.Advance (2);  	//skip <<  	var script = new StringBuilder ();  	while (!state.AtEnd () && !state.MatchNext (">>")) {  		if (state.MatchNext ("\\>>")) {  			script.Append (">>");  			state.Advance (3);  		}  		else {  			script.Append (state.Next ());  			state.Advance ();  		}  	}  	if (!state.AtEnd ())  		state.Advance (2);  	//skip >>  	var scriptContext = ScriptEngine.CompileScript (script.ToString ());  	scriptContext.Tag = preprocessContext;  	ScriptEngine.RunScript (scriptContext);  	if (scriptContext.ExecutionState == MISP.ExecutionState.Error) {  		Console.WriteLine ("Error in preprocessing");  		Console.WriteLine (scriptContext.ErrorMessage);  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: if (!state.AtEnd ()) {  	state.Advance (2);  	//skip <<  	var script = new StringBuilder ();  	while (!state.AtEnd () && !state.MatchNext (">>")) {  		if (state.MatchNext ("\\>>")) {  			script.Append (">>");  			state.Advance (3);  		}  		else {  			script.Append (state.Next ());  			state.Advance ();  		}  	}  	if (!state.AtEnd ())  		state.Advance (2);  	//skip >>  	var scriptContext = ScriptEngine.CompileScript (script.ToString ());  	scriptContext.Tag = preprocessContext;  	ScriptEngine.RunScript (scriptContext);  	if (scriptContext.ExecutionState == MISP.ExecutionState.Error) {  		Console.WriteLine ("Error in preprocessing");  		Console.WriteLine (scriptContext.ErrorMessage);  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: if (!state.AtEnd ()) {  	state.Advance (2);  	//skip <<  	var script = new StringBuilder ();  	while (!state.AtEnd () && !state.MatchNext (">>")) {  		if (state.MatchNext ("\\>>")) {  			script.Append (">>");  			state.Advance (3);  		}  		else {  			script.Append (state.Next ());  			state.Advance ();  		}  	}  	if (!state.AtEnd ())  		state.Advance (2);  	//skip >>  	var scriptContext = ScriptEngine.CompileScript (script.ToString ());  	scriptContext.Tag = preprocessContext;  	ScriptEngine.RunScript (scriptContext);  	if (scriptContext.ExecutionState == MISP.ExecutionState.Error) {  		Console.WriteLine ("Error in preprocessing");  		Console.WriteLine (scriptContext.ErrorMessage);  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: state.Advance (2);  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: while (!state.AtEnd () && !state.MatchNext (">>")) {  	if (state.MatchNext ("\\>>")) {  		script.Append (">>");  		state.Advance (3);  	}  	else {  		script.Append (state.Next ());  		state.Advance ();  	}  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: if (state.MatchNext ("\\>>")) {  	script.Append (">>");  	state.Advance (3);  }  else {  	script.Append (state.Next ());  	state.Advance ();  }  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: state.Advance (3);  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: if (!state.AtEnd ())  	state.Advance (2);  
Magic Number,Passages,Preprocessor,C:\repos\Blecki_Passages\Passages\Preprocessor.cs,Preprocess,The following statement contains a magic number: state.Advance (2);  
