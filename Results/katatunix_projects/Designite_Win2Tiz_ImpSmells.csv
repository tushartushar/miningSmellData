Implementation smell,Namespace,Class,File,Method,Description
Long Method,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,compileProject,The method has 263 lines of code.
Long Method,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,makeCompileCommand,The method has 121 lines of code.
Complex Method,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,Cyclomatic complexity of the method is 10
Complex Method,Win2Tiz,Program,C:\repos\katatunix_projects\Tools\Win2Tiz\Program.cs,Main,Cyclomatic complexity of the method is 17
Complex Method,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,Cyclomatic complexity of the method is 14
Complex Method,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,compileProject,Cyclomatic complexity of the method is 37
Complex Method,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,Cyclomatic complexity of the method is 8
Complex Method,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,makeCompileCommand,Cyclomatic complexity of the method is 23
Long Parameter List,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The method has 6 parameters.
Long Statement,Win2Tiz,Program,C:\repos\katatunix_projects\Tools\Win2Tiz\Program.cs,Main,The length of the statement  "	win2Tiz.process (Path.GetFullPath (inputFile)' projectToBuild' typeOfBuild == "release"' gccConfig' isVerbose' jobsNum); " is 120.
Long Statement,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The length of the statement  "	String solutionPath = PathUtils.combinePath (m_workingDir' m_win2TizXmlDoc.GetElementsByTagName ("Solution") [0].Attributes ["Path"].Value.Replace ('/'' '\\')); " is 160.
Long Statement,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The length of the statement  "			m_projectsDict.Add (matchProjInfo.Groups [2].Value' PathUtils.combinePath (solutionFolder' matchProjInfo.Groups [3].Value)); " is 124.
Long Statement,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,compileProject,The length of the statement  "			string command = getMacroValue ("DYNAMIC_LINK_COMMAND_LINE").Replace ("\r\n"' " ").Replace ("\t"' " ").Replace (";"' " "); " is 122.
Long Statement,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,compileProject,The length of the statement  "			string command_Strip = getMacroValue ("STRIP_COMMAND_LINE").Replace ("\r\n"' " ").Replace ("\t"' " ").Replace (";"' " "); " is 121.
Long Statement,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,makeCompileCommand,The length of the statement  "	string command = t.Replace ("\r\n"' " ").Replace ("\t"' " ").Replace (";"' " ") + " -MMD -MP -MF" + depFile + " -MT" + depFile; " is 127.
Long Statement,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,checkAndPrintResult,The length of the statement  "	if (result.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase) != -1 || result.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase) != -1) { " is 175.
Complex Conditional,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,makeCompileCommand,The conditional expression  "ext == ".cpp" || ext == ".cc" || ext == ".cxx" || ext == "C""  is complex.
Empty Catch Block,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,onCompleted,The method has an empty catch block.
Empty Catch Block,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,compileProject,The method has an empty catch block.
Empty Catch Block,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,compileProject,The method has an empty catch block.
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: while (true) {  	int[] a = new int[10];  	a [0] = s.IndexOf ("error:"' StringComparison.CurrentCultureIgnoreCase);  	a [1] = s.IndexOf ("warning:"' StringComparison.CurrentCultureIgnoreCase);  	a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  	a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  	const int len = 4;  	for (int i = 0; i < len; i++) {  		if (a [i] == -1)  			a [i] = int.MaxValue;  	}  	int k = a [0];  	for (int i = 1; i < len; i++) {  		if (a [i] < k)  			k = a [i];  	}  	if (k == int.MaxValue) {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.WriteLine (s);  		break;  	}  	else {  		Console.ForegroundColor = ConsoleColor.Gray;  		Console.Write (s.Substring (0' k));  		if (k == a [0]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("error:");  			s = s.Substring (k + 6);  		}  		else if (k == a [1]) {  			Console.ForegroundColor = ConsoleColor.Yellow;  			Console.Write ("warning:");  			s = s.Substring (k + 8);  		}  		else if (k == a [2]) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("undefined reference to");  			s = s.Substring (k + 22);  		}  		else {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.Write ("multiple definition of");  			s = s.Substring (k + 22);  		}  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: a [2] = s.IndexOf ("undefined reference to"' StringComparison.CurrentCultureIgnoreCase);  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: a [3] = s.IndexOf ("multiple definition of"' StringComparison.CurrentCultureIgnoreCase);  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == int.MaxValue) {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.WriteLine (s);  	break;  }  else {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.Write (s.Substring (0' k));  	if (k == a [0]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("error:");  		s = s.Substring (k + 6);  	}  	else if (k == a [1]) {  		Console.ForegroundColor = ConsoleColor.Yellow;  		Console.Write ("warning:");  		s = s.Substring (k + 8);  	}  	else if (k == a [2]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("undefined reference to");  		s = s.Substring (k + 22);  	}  	else {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("multiple definition of");  		s = s.Substring (k + 22);  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == int.MaxValue) {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.WriteLine (s);  	break;  }  else {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.Write (s.Substring (0' k));  	if (k == a [0]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("error:");  		s = s.Substring (k + 6);  	}  	else if (k == a [1]) {  		Console.ForegroundColor = ConsoleColor.Yellow;  		Console.Write ("warning:");  		s = s.Substring (k + 8);  	}  	else if (k == a [2]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("undefined reference to");  		s = s.Substring (k + 22);  	}  	else {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("multiple definition of");  		s = s.Substring (k + 22);  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == int.MaxValue) {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.WriteLine (s);  	break;  }  else {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.Write (s.Substring (0' k));  	if (k == a [0]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("error:");  		s = s.Substring (k + 6);  	}  	else if (k == a [1]) {  		Console.ForegroundColor = ConsoleColor.Yellow;  		Console.Write ("warning:");  		s = s.Substring (k + 8);  	}  	else if (k == a [2]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("undefined reference to");  		s = s.Substring (k + 22);  	}  	else {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("multiple definition of");  		s = s.Substring (k + 22);  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == int.MaxValue) {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.WriteLine (s);  	break;  }  else {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.Write (s.Substring (0' k));  	if (k == a [0]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("error:");  		s = s.Substring (k + 6);  	}  	else if (k == a [1]) {  		Console.ForegroundColor = ConsoleColor.Yellow;  		Console.Write ("warning:");  		s = s.Substring (k + 8);  	}  	else if (k == a [2]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("undefined reference to");  		s = s.Substring (k + 22);  	}  	else {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("multiple definition of");  		s = s.Substring (k + 22);  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == int.MaxValue) {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.WriteLine (s);  	break;  }  else {  	Console.ForegroundColor = ConsoleColor.Gray;  	Console.Write (s.Substring (0' k));  	if (k == a [0]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("error:");  		s = s.Substring (k + 6);  	}  	else if (k == a [1]) {  		Console.ForegroundColor = ConsoleColor.Yellow;  		Console.Write ("warning:");  		s = s.Substring (k + 8);  	}  	else if (k == a [2]) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("undefined reference to");  		s = s.Substring (k + 22);  	}  	else {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.Write ("multiple definition of");  		s = s.Substring (k + 22);  	}  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [0]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("error:");  	s = s.Substring (k + 6);  }  else if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [0]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("error:");  	s = s.Substring (k + 6);  }  else if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [0]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("error:");  	s = s.Substring (k + 6);  }  else if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [0]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("error:");  	s = s.Substring (k + 6);  }  else if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [0]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("error:");  	s = s.Substring (k + 6);  }  else if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: s = s.Substring (k + 6);  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [1]) {  	Console.ForegroundColor = ConsoleColor.Yellow;  	Console.Write ("warning:");  	s = s.Substring (k + 8);  }  else if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: s = s.Substring (k + 8);  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: if (k == a [2]) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("undefined reference to");  	s = s.Substring (k + 22);  }  else {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.Write ("multiple definition of");  	s = s.Substring (k + 22);  }  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: s = s.Substring (k + 22);  
Magic Number,Win2Tiz,MyConsole,C:\repos\katatunix_projects\Tools\Win2Tiz\MyConsole.cs,writeLineResult,The following statement contains a magic number: s = s.Substring (k + 22);  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The following statement contains a magic number: while ((line = reader.ReadLine ()) != null) {  	matchProjInfo = m_projectRegex.Match (line);  	if (matchProjInfo.Success) {  		string solutionFolder = Path.GetDirectoryName (solutionPath);  		m_projectsDict.Add (matchProjInfo.Groups [2].Value' PathUtils.combinePath (solutionFolder' matchProjInfo.Groups [3].Value));  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The following statement contains a magic number: while ((line = reader.ReadLine ()) != null) {  	matchProjInfo = m_projectRegex.Match (line);  	if (matchProjInfo.Success) {  		string solutionFolder = Path.GetDirectoryName (solutionPath);  		m_projectsDict.Add (matchProjInfo.Groups [2].Value' PathUtils.combinePath (solutionFolder' matchProjInfo.Groups [3].Value));  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The following statement contains a magic number: if (matchProjInfo.Success) {  	string solutionFolder = Path.GetDirectoryName (solutionPath);  	m_projectsDict.Add (matchProjInfo.Groups [2].Value' PathUtils.combinePath (solutionFolder' matchProjInfo.Groups [3].Value));  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The following statement contains a magic number: if (matchProjInfo.Success) {  	string solutionFolder = Path.GetDirectoryName (solutionPath);  	m_projectsDict.Add (matchProjInfo.Groups [2].Value' PathUtils.combinePath (solutionFolder' matchProjInfo.Groups [3].Value));  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The following statement contains a magic number: m_projectsDict.Add (matchProjInfo.Groups [2].Value' PathUtils.combinePath (solutionFolder' matchProjInfo.Groups [3].Value));  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,process,The following statement contains a magic number: m_projectsDict.Add (matchProjInfo.Groups [2].Value' PathUtils.combinePath (solutionFolder' matchProjInfo.Groups [3].Value));  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '$' && i + 1 < value.Length && value [i + 1] == '(') {  		for (int j = i + 2; j < value.Length; j++) {  			if (value [j] == ')') {  				string macro = value.Substring (i + 2' j - i - 2);  				result += getMacroValue (macro);  				i = j;  				break;  			}  		}  	}  	else {  		result += value [i];  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '$' && i + 1 < value.Length && value [i + 1] == '(') {  		for (int j = i + 2; j < value.Length; j++) {  			if (value [j] == ')') {  				string macro = value.Substring (i + 2' j - i - 2);  				result += getMacroValue (macro);  				i = j;  				break;  			}  		}  	}  	else {  		result += value [i];  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: for (int i = 0; i < value.Length; i++) {  	if (value [i] == '$' && i + 1 < value.Length && value [i + 1] == '(') {  		for (int j = i + 2; j < value.Length; j++) {  			if (value [j] == ')') {  				string macro = value.Substring (i + 2' j - i - 2);  				result += getMacroValue (macro);  				i = j;  				break;  			}  		}  	}  	else {  		result += value [i];  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: if (value [i] == '$' && i + 1 < value.Length && value [i + 1] == '(') {  	for (int j = i + 2; j < value.Length; j++) {  		if (value [j] == ')') {  			string macro = value.Substring (i + 2' j - i - 2);  			result += getMacroValue (macro);  			i = j;  			break;  		}  	}  }  else {  	result += value [i];  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: if (value [i] == '$' && i + 1 < value.Length && value [i + 1] == '(') {  	for (int j = i + 2; j < value.Length; j++) {  		if (value [j] == ')') {  			string macro = value.Substring (i + 2' j - i - 2);  			result += getMacroValue (macro);  			i = j;  			break;  		}  	}  }  else {  	result += value [i];  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: if (value [i] == '$' && i + 1 < value.Length && value [i + 1] == '(') {  	for (int j = i + 2; j < value.Length; j++) {  		if (value [j] == ')') {  			string macro = value.Substring (i + 2' j - i - 2);  			result += getMacroValue (macro);  			i = j;  			break;  		}  	}  }  else {  	result += value [i];  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: for (int j = i + 2; j < value.Length; j++) {  	if (value [j] == ')') {  		string macro = value.Substring (i + 2' j - i - 2);  		result += getMacroValue (macro);  		i = j;  		break;  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: for (int j = i + 2; j < value.Length; j++) {  	if (value [j] == ')') {  		string macro = value.Substring (i + 2' j - i - 2);  		result += getMacroValue (macro);  		i = j;  		break;  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: for (int j = i + 2; j < value.Length; j++) {  	if (value [j] == ')') {  		string macro = value.Substring (i + 2' j - i - 2);  		result += getMacroValue (macro);  		i = j;  		break;  	}  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: if (value [j] == ')') {  	string macro = value.Substring (i + 2' j - i - 2);  	result += getMacroValue (macro);  	i = j;  	break;  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,espaceMacro,The following statement contains a magic number: if (value [j] == ')') {  	string macro = value.Substring (i + 2' j - i - 2);  	result += getMacroValue (macro);  	i = j;  	break;  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,waitForFreeThread,The following statement contains a magic number: while (true) {  	for (int i = 0; i < m_jobs; i++) {  		if (!m_threads [i].IsRunning)  			return i;  	}  	Thread.Sleep (100);  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,waitForFreeThread,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,waitUntilAllThreadsFinish,The following statement contains a magic number: while (true) {  	bool finish = true;  	for (int i = 0; i < m_jobs; i++) {  		if (m_threads [i].IsRunning) {  			finish = false;  			break;  		}  	}  	if (finish)  		return;  	Thread.Sleep (200);  }  
Magic Number,Win2Tiz,Win2Tiz,C:\repos\katatunix_projects\Tools\Win2Tiz\Win2Tiz.cs,waitUntilAllThreadsFinish,The following statement contains a magic number: Thread.Sleep (200);  
