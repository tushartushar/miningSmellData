Implementation smell,Namespace,Class,File,Method,Description
Long Method,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,BeginFadeArea,The method has 102 lines of code.
Long Method,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,The method has 139 lines of code.
Long Method,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The method has 211 lines of code.
Complex Method,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,BeginFadeArea,Cyclomatic complexity of the method is 13
Complex Method,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,Cyclomatic complexity of the method is 11
Complex Method,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,Cyclomatic complexity of the method is 10
Complex Method,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,ObjectField,Cyclomatic complexity of the method is 15
Complex Method,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,Cyclomatic complexity of the method is 47
Complex Method,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,Cyclomatic complexity of the method is 8
Complex Method,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,Cyclomatic complexity of the method is 13
Long Parameter List,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,BeginFadeArea,The method has 5 parameters.
Long Parameter List,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The method has 5 parameters.
Long Statement,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The length of the statement  "	//ScriptableObject.CreateInstance<AstarUpdateWindow>();//new AstarUpdateWindow();//(AstarUpdateWindow)EditorWindow.GetWindow (typeof (AstarUpdateWindow)); " is 154.
Long Statement,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The length of the statement  "	window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400); " is 138.
Long Statement,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnDestroy,The length of the statement  "		EditorPrefs.SetString ("AstarRemindUpdateDate"' System.DateTime.UtcNow.AddDays (1).ToString (System.Globalization.CultureInfo.InvariantCulture)); " is 145.
Long Statement,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The length of the statement  "	GUILayout.Label ("There is a new version of the <b>A* Pathfinding Project</b> available for download.\n" + "The new version is <b>" + version.ToString () + "</b> you have <b>" + AstarPath.Version.ToString () + "</b>\n\n" + "<i>Summary:</i>\n" + summary' normalStyle); " is 267.
Long Statement,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The length of the statement  "		EditorPrefs.SetString ("AstarRemindUpdateDate"' System.DateTime.UtcNow.AddDays (7).ToString (System.Globalization.CultureInfo.InvariantCulture)); " is 145.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,BeginFadeArea,The length of the statement  "	//GUILayout.Label ("Alpha : "+fadeArea.value);GUILayout.Label ("Alpha : "+fadeArea.value);GUILayout.Label ("Alpha : "+fadeArea.value);GUILayout.Label ("Alpha : "+fadeArea.value); " is 178.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SetTagField,The length of the statement  "		menu.AddItem (new GUIContent ("Everything")' value.tagsChange == ~0' value.SetValues' new Pathfinding.TagMask (~0' value.tagsSet)); " is 131.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SetTagField,The length of the statement  "		menu.AddItem (new GUIContent ("Nothing")' value.tagsChange == 0' value.SetValues' new Pathfinding.TagMask (0' value.tagsSet)); " is 126.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SetTagField,The length of the statement  "			Pathfinding.TagMask result = new Pathfinding.TagMask (on ? value.tagsChange & ~(1 << i) : value.tagsChange | 1 << i' value.tagsSet); " is 132.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The length of the statement  "		menu.AddItem (new GUIContent ("Everything")' value.tagsChange == ~0' value.SetValues' new Pathfinding.TagMask (~0' value.tagsSet)); " is 131.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The length of the statement  "		menu.AddItem (new GUIContent ("Nothing")' value.tagsChange == 0' value.SetValues' new Pathfinding.TagMask (0' value.tagsSet)); " is 126.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The length of the statement  "			Pathfinding.TagMask result = new Pathfinding.TagMask (on ? value.tagsChange & ~(1 << i) : value.tagsChange | 1 << i' value.tagsSet); " is 132.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The length of the statement  "			menu.AddItem (new GUIContent ("Everything")' value.tagsSet == ~0' value.SetValues' new Pathfinding.TagMask (value.tagsChange' ~0)); " is 131.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The length of the statement  "		menu.AddItem (new GUIContent ("Nothing")' value.tagsSet == 0' value.SetValues' new Pathfinding.TagMask (value.tagsChange' 0)); " is 126.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The length of the statement  "			Pathfinding.TagMask result = new Pathfinding.TagMask (value.tagsChange' on ? value.tagsSet & ~(1 << i) : value.tagsSet | 1 << i); " is 129.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,The length of the statement  "	if (layers == null || (System.DateTime.UtcNow.Ticks - lastUpdateTick > 10000000L && Event.current.type == EventType.Layout)) { " is 126.
Long Statement,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,Berp,The length of the statement  "	value = (Mathf.Sin (value * Mathf.PI * (0.2f + 2.5f * value * value * value)) * Mathf.Pow (1f - value' 2.2f) + value) * (1f + (1.2f * (1f - value))); " is 149.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,OnBaseInspectorGUI,The length of the statement  "	int penalty = EditorGUILayout.IntField (new GUIContent ("Initial Penalty"' "Initial Penalty for nodes in this graph. Set during Scan.")' (int)target.initialPenalty); " is 165.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "	collision.use2D = EditorGUILayout.Toggle (new GUIContent ("Use 2D Physics"' "Use the Physics2D API for collision checking")' collision.use2D); " is 142.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "				if ( collision.use2D ) EditorGUILayout.HelpBox ("2D Physics is only supported from Unity 4.3 and up"' MessageType.Error);" is 121.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "	collision.diameter = EditorGUILayout.FloatField (new GUIContent ("Diameter"' "Diameter of the capsule or sphere. 1 equals one node width")' collision.diameter); " is 160.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "	collision.height = EditorGUILayout.FloatField (new GUIContent ("Height/Length"' "Height of cylinder or length of ray in world units")' collision.height); " is 153.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "	collision.collisionOffset = EditorGUILayout.FloatField (new GUIContent ("Offset"' "Offset upwards from the node. Can be used so that obstacles can be used as ground and at the same time as obstacles for lower positioned nodes")' collision.collisionOffset); " is 256.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "			GUILayout.EndHorizontal ();*/collision.fromHeight = EditorGUILayout.FloatField (new GUIContent ("Ray length"' "The height from which to check for ground")' collision.fromHeight); " is 178.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "	//collision.heightMask = 1 << EditorGUILayout.LayerField ("Mask"'Mathf.Clamp ((int)Mathf.Log (collision.heightMask'2)'0'31)); " is 125.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "	collision.thickRaycast = EditorGUILayout.Toggle (new GUIContent ("Thick Raycast"' "Use a thick line instead of a thin line")' collision.thickRaycast); " is 150.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "		collision.thickRaycastDiameter = EditorGUILayout.FloatField (new GUIContent ("Diameter"' "Diameter of the thick raycast")' collision.thickRaycastDiameter); " is 155.
Long Statement,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The length of the statement  "	collision.unwalkableWhenNoGround = EditorGUILayout.Toggle (new GUIContent ("Unwalkable when no ground"' "Make nodes unwalkable when no ground was found with the height raycast. If height raycast is turned off' this doesn't affect anything")' collision.unwalkableWhenNoGround); " is 276.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	int newDepth = EditorGUILayout.IntField (new GUIContent ("Depth (nodes)"' "Depth (or height you might also call it) of the graph in nodes")' graph.depth); " is 154.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			int newWidth = IntField (new GUIContent ("Width (nodes)"'"Width of the graph in nodes")'graph.width'100'0' out lockRect' out sizeSelected1);" is 140.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			int newDepth = IntField (new GUIContent ("Depth (nodes)"'"Depth (or height you might also call it) of the graph in nodes")'graph.depth'100'0' out tmpLockRect' out sizeSelected2);" is 178.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			int newWidth = IntField (new GUIContent ("Width (nodes)"'"Width of the graph in nodes")'graph.width'50'0' out lockRect' out sizeSelected1);" is 139.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			int newDepth = IntField (new GUIContent ("Depth (nodes)"'"Depth (or height you might also call it) of the graph in nodes")'graph.depth'50'0' out tmpLockRect' out sizeSelected2);" is 177.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	locked = GUI.Toggle (lockRect' locked' new GUIContent (""' "If the width and depth values are locked' changing the node size will scale the grid which keeping the number of nodes consistent instead of keeping the size the same and changing the number of nodes in the graph")' lockStyle); " is 287.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	newNodeSize = EditorGUILayout.FloatField (new GUIContent ("Node size"' "The size of a single node. The size is the side of the node square in world units")' graph.nodeSize); " is 173.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.aspectRatio = EditorGUILayout.FloatField (new GUIContent ("Aspect Ratio"' "Scaling of the nodes width/depth ratio. Good for isometric games")' graph.aspectRatio); " is 168.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	if (GUILayout.Button (new GUIContent ("Snap Size"' "Snap the size to exactly fit nodes")' GUILayout.MaxWidth (100)' GUILayout.MaxHeight (16))) { " is 144.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.cutCorners = EditorGUILayout.Toggle (new GUIContent ("Cut Corners"' "Enables or disables cutting corners. See docs for image example")' graph.cutCorners); " is 160.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.neighbours = (NumNeighbours)EditorGUILayout.EnumPopup (new GUIContent ("Connections"' "Sets how many connections a node should have to it's neighbour nodes.")' graph.neighbours); " is 184.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.maxClimb = EditorGUILayout.FloatField (new GUIContent ("Max Climb"' "How high' relative to the graph' should a climbable level be. A zero (0) indicates infinity")' graph.maxClimb); " is 186.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.maxClimbAxis = EditorGUILayout.IntPopup (new GUIContent ("Climb Axis"' "Determines which axis the above setting should test on")' graph.maxClimbAxis' new GUIContent[3] { " is 175.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	if (graph.maxClimb > 0 && Mathf.Abs ((Quaternion.Euler (graph.rotation) * new Vector3 (graph.nodeSize' 0' graph.nodeSize)) [graph.maxClimbAxis]) > graph.maxClimb) { " is 164.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "		EditorGUILayout.HelpBox ("Nodes are spaced further apart than this in the grid. You might want to increase this value or change the axis"' MessageType.Warning); " is 160.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.maxSlope = EditorGUILayout.Slider (new GUIContent ("Max Slope"' "Sets the max slope in degrees for a point to be walkable. Only enabled if Height Testing is enabled.")' graph.maxSlope' 0' 90F); " is 199.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.erodeIterations = EditorGUILayout.IntField (new GUIContent ("Erosion iterations"' "Sets how many times the graph should be eroded. This adds extra margin to objects. This will not work when using Graph Updates' so if you can' use the Diameter setting in collision settings instead")' graph.erodeIterations); " is 313.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "		graph.erosionUseTags = EditorGUILayout.Toggle (new GUIContent ("Erosion Uses Tags"' "Instead of making nodes unwalkable' " + "nodes will have their tag set to a value corresponding to their erosion level' " + "which is a quite good measurement of their distance to the closest wall.\nSee online documentation for more info.")' graph.erosionUseTags); " is 349.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			EditorGUILayout.HelpBox ("When using 2D it is recommended to rotate the graph so that it aligns with the 2D plane."' MessageType.Warning); " is 138.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "		graph.penaltyAngle = ToggleGroup (new GUIContent ("Angle Penalty"' "Adds a penalty based on the slope of the node")' graph.penaltyAngle); " is 137.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			graph.penaltyAngleFactor = EditorGUILayout.FloatField (new GUIContent ("Factor"' "Scale of the penalty. A negative value should not be used")' graph.penaltyAngleFactor); " is 169.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			HelpBox ("Applies penalty to nodes based on their Y coordinate\nSampled in Int3 space' i.e it is multiplied with Int3.Precision first (" + Int3.Precision + ")\n" + "Be very careful when using negative values since a negative penalty will underflow and instead get really high"); " is 278.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The length of the statement  "	if (GUI.Toggle (new Rect (r.x + 12' r.y' 7' 7)' pivot == GridPivot.TopRight' ""' skin.FindStyle ("GridPivotSelectButton"))) " is 123.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The length of the statement  "	if (GUI.Toggle (new Rect (r.x + 12' r.y + 12' 7' 7)' pivot == GridPivot.BottomRight' ""' skin.FindStyle ("GridPivotSelectButton"))) " is 131.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The length of the statement  "	if (GUI.Toggle (new Rect (r.x' r.y + 12' 7' 7)' pivot == GridPivot.BottomLeft' ""' skin.FindStyle ("GridPivotSelectButton"))) " is 125.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The length of the statement  "	if (GUI.Toggle (new Rect (r.x + 6' r.y + 6' 7' 7)' pivot == GridPivot.Center' ""' skin.FindStyle ("GridPivotSelectButton"))) " is 124.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,The length of the statement  "	if ((graph.GetType () == typeof(GridGraph) && graph.nodes == null) || (graph.uniformWidthDepthGrid && graph.depth * graph.width != graph.nodes.Length) || graph.matrix != matrixPre) { " is 182.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,The length of the statement  "		Vector3 p1 = Handles.Slider (center + new Vector3 (extents.x' 0' 0)' Vector3.right' 0.1F * HandleUtility.GetHandleSize (center + new Vector3 (extents.x' 0' 0))' cap' 0); " is 169.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,The length of the statement  "		Vector3 p2 = Handles.Slider (center + new Vector3 (0' 0' extents.y)' Vector3.forward' 0.1F * HandleUtility.GetHandleSize (center + new Vector3 (0' 0' extents.y))' cap' 0); " is 171.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,The length of the statement  "		//Vector3 p3 = Handles.Slider (center+new Vector3 (0'extents.y'0)'	Vector3.up'			0.1F*HandleUtility.GetHandleSize (center+new Vector3 (0'extents.y'0))'cap'0); " is 158.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,The length of the statement  "		Vector3 p4 = Handles.Slider (center + new Vector3 (-extents.x' 0' 0)' -Vector3.right' 0.1F * HandleUtility.GetHandleSize (center + new Vector3 (-extents.x' 0' 0))' cap' 0); " is 172.
Long Statement,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,The length of the statement  "		Vector3 p5 = Handles.Slider (center + new Vector3 (0' 0' -extents.y)' -Vector3.forward' 0.1F * HandleUtility.GetHandleSize (center + new Vector3 (0' 0' -extents.y))' cap' 0); " is 174.
Long Statement,Pathfinding,NavMeshGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\NavMeshGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.accurateNearestNode = EditorGUILayout.Toggle (new GUIContent ("Accurate Nearest Node Queries"' "More accurate nearest node queries. See docs for more info")' graph.accurateNearestNode); " is 191.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			graph.root = (Transform)EditorGUILayout.ObjectField (new GUIContent ("Root"'"All childs of this object will be used as nodes' if it is not set' a tag search will be used instead (see below)")'graph.root'typeof(Transform));" is 222.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			graph.root = (Transform)EditorGUILayout.ObjectField (new GUIContent ("Root"'"All childs of this object will be used as nodes' if it is not set' a tag search will be used instead (see below)")'graph.root'typeof(Transform)'true);" is 227.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.root = ObjectField (new GUIContent ("Root"' "All childs of this object will be used as nodes' if it is not set' a tag search will be used instead (see below)")' graph.root' typeof(Transform)' true) as Transform; " is 217.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.recursive = EditorGUILayout.Toggle (new GUIContent ("Recursive"' "Should childs of the childs in the root GameObject be searched")' graph.recursive); " is 155.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.searchTag = EditorGUILayout.TagField (new GUIContent ("Tag"' "If root is not set' all objects with this tag will be used as nodes")' graph.searchTag); " is 156.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "		EditorGUILayout.HelpBox ("All childs " + (graph.recursive ? "and sub-childs " : "") + "of 'root' will be used as nodes\nSet root to null to use a tag search instead"' MessageType.None); " is 185.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "		EditorGUILayout.HelpBox ("All object with the tag '" + graph.searchTag + "' will be used as nodes" + (graph.searchTag == "Untagged" ? "\nNote: the tag 'Untagged' cannot be used" : "")' MessageType.None); " is 203.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "				GUILayout.Label ("All childs "+(graph.recursive ? "and sub-childs ":"") +"of 'root' will be used as nodes\nSet root to null to use a tag search instead"'AstarPathEditor.helpBox);" is 178.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "				GUILayout.Label ("All object with the tag '"+graph.searchTag+"' will be used as nodes"+(graph.searchTag == "Untagged" ? "\nNote: the tag 'Untagged' cannot be used" : "")'AstarPathEditor.helpBox);" is 195.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.maxDistance = EditorGUILayout.FloatField (new GUIContent ("Max Distance"' "The max distance in world space for a connection to be valid. A zero counts as infinity")' graph.maxDistance); " is 191.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "	graph.raycast = EditorGUILayout.Toggle (new GUIContent ("Raycast"' "Use raycasting to check if connections are valid between each pair of nodes")' graph.raycast); " is 162.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "		graph.thickRaycast = EditorGUILayout.Toggle (new GUIContent ("Thick Raycast"' "A thick raycast checks along a thick line with radius instead of just along a line")' graph.thickRaycast); " is 185.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "			graph.thickRaycastRadius = EditorGUILayout.FloatField (new GUIContent ("Raycast Radius"' "The radius in world units for the thick raycast")' graph.thickRaycastRadius); " is 167.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnInspectorGUI,The length of the statement  "		graph.mask = EditorGUILayoutx.LayerMaskField (/*new GUIContent (*/"Mask"/*'"Used to mask which layers should be checked")*/' graph.mask); " is 137.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,OnDrawGizmos,The length of the statement  "			Gizmos.DrawCube (gos [i].transform.position' Vector3.one * HandleUtility.GetHandleSize (gos [i].transform.position) * 0.1F); " is 124.
Long Statement,Pathfinding,PointGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\PointGeneratorEditor.cs,DrawChildren,The length of the statement  "		//Handles.CubeCap (-1'graph.nodes[i].position'Quaternion.identity'HandleUtility.GetHandleSize(graph.nodes[i].position)*0.1F); " is 125.
Complex Conditional,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnSceneGUI,The conditional expression  "(graph.GetType () == typeof(GridGraph) && graph.nodes == null) || (graph.uniformWidthDepthGrid && graph.depth * graph.width != graph.nodes.Length) || graph.matrix != matrixPre"  is complex.
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The following statement contains a magic number: window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400);  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The following statement contains a magic number: window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400);  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The following statement contains a magic number: window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400);  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The following statement contains a magic number: window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400);  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The following statement contains a magic number: window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400);  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The following statement contains a magic number: window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400);  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,Init,The following statement contains a magic number: window.position = new Rect (Screen.currentResolution.width / 2 - 300' Mathf.Max (5' Screen.currentResolution.height / 3 - 150)' 600' 400);  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: if (largeStyle == null) {  	largeStyle = EditorStyles.largeLabel;  	largeStyle.fontSize = 32;  	largeStyle.alignment = TextAnchor.UpperCenter;  	largeStyle.richText = true;  	normalStyle = EditorStyles.label;  	normalStyle.wordWrap = true;  	normalStyle.richText = true;  }  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: largeStyle.fontSize = 32;  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: if (GUILayout.Button ("Take me to the download page!"' GUILayout.Height (30)' GUILayout.MaxWidth (300))) {  	Application.OpenURL (downloadURL);  }  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: if (GUILayout.Button ("Take me to the download page!"' GUILayout.Height (30)' GUILayout.MaxWidth (300))) {  	Application.OpenURL (downloadURL);  }  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: if (GUILayout.Button ("Skip this version"' GUILayout.MaxWidth (100))) {  	EditorPrefs.SetString ("AstarSkipUpToVersion"' version.ToString ());  	setReminder = true;  	Close ();  }  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: if (GUILayout.Button ("Remind me later ( 1 week )"' GUILayout.MaxWidth (200))) {  	EditorPrefs.SetString ("AstarRemindUpdateDate"' System.DateTime.UtcNow.AddDays (7).ToString (System.Globalization.CultureInfo.InvariantCulture));  	EditorPrefs.SetString ("AstarRemindUpdateVersion"' version.ToString ());  	setReminder = true;  	Close ();  }  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: if (GUILayout.Button ("Remind me later ( 1 week )"' GUILayout.MaxWidth (200))) {  	EditorPrefs.SetString ("AstarRemindUpdateDate"' System.DateTime.UtcNow.AddDays (7).ToString (System.Globalization.CultureInfo.InvariantCulture));  	EditorPrefs.SetString ("AstarRemindUpdateVersion"' version.ToString ());  	setReminder = true;  	Close ();  }  
Magic Number,Pathfinding,AstarUpdateWindow,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\AstarUpdateWindow.cs,OnGUI,The following statement contains a magic number: EditorPrefs.SetString ("AstarRemindUpdateDate"' System.DateTime.UtcNow.AddDays (7).ToString (System.Globalization.CultureInfo.InvariantCulture));  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,IndentWidth,The following statement contains a magic number: return 15 * EditorGUI.indentLevel - (EditorGUI.indentLevel > 1 ? 2 : 0);  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,IndentWidth,The following statement contains a magic number: return 15 * EditorGUI.indentLevel - (EditorGUI.indentLevel > 1 ? 2 : 0);  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SingleTagField,The following statement contains a magic number: value = EditorGUILayout.IntPopup (label' value' tagNames' new int[] {  	0'  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24'  	25'  	26'  	27'  	28'  	29'  	30'  	31  });  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SetTagField,The following statement contains a magic number: if (value.tagsChange == 0)  	text = "Nothing";  else if (value.tagsChange == ~0)  	text = "Everything";  else {  	text = System.Convert.ToString (value.tagsChange' 2);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SetTagField,The following statement contains a magic number: if (value.tagsChange == ~0)  	text = "Everything";  else {  	text = System.Convert.ToString (value.tagsChange' 2);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,SetTagField,The following statement contains a magic number: text = System.Convert.ToString (value.tagsChange' 2);  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: if (value.tagsChange == 0)  	text = "Nothing";  else if (value.tagsChange == ~0)  	text = "Everything";  else {  	text = System.Convert.ToString (value.tagsChange' 2);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: if (value.tagsChange == ~0)  	text = "Everything";  else {  	text = System.Convert.ToString (value.tagsChange' 2);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: text = System.Convert.ToString (value.tagsChange' 2);  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: if (GUILayout.Button (text' EditorStyles.layerMaskField' GUILayout.ExpandWidth (true))) {  	//Debug.Log ("pre");  	GenericMenu menu = new GenericMenu ();  	menu.AddItem (new GUIContent ("Everything")' value.tagsChange == ~0' value.SetValues' new Pathfinding.TagMask (~0' value.tagsSet));  	menu.AddItem (new GUIContent ("Nothing")' value.tagsChange == 0' value.SetValues' new Pathfinding.TagMask (0' value.tagsSet));  	for (int i = 0; i < 32; i++) {  		bool on = (value.tagsChange >> i & 0x1) != 0;  		Pathfinding.TagMask result = new Pathfinding.TagMask (on ? value.tagsChange & ~(1 << i) : value.tagsChange | 1 << i' value.tagsSet);  		menu.AddItem (new GUIContent ("" + i)' on' value.SetValues' result);  		//value.SetValues (result);  	}  	menu.ShowAsContext ();  	Event.current.Use ();  	//Debug.Log ("Post");  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	bool on = (value.tagsChange >> i & 0x1) != 0;  	Pathfinding.TagMask result = new Pathfinding.TagMask (on ? value.tagsChange & ~(1 << i) : value.tagsChange | 1 << i' value.tagsSet);  	menu.AddItem (new GUIContent ("" + i)' on' value.SetValues' result);  	//value.SetValues (result);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: if (value.tagsSet == 0)  	text = "Nothing";  else if (value.tagsSet == ~0)  	text = "Everything";  else {  	text = System.Convert.ToString (value.tagsSet' 2);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: if (value.tagsSet == ~0)  	text = "Everything";  else {  	text = System.Convert.ToString (value.tagsSet' 2);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: text = System.Convert.ToString (value.tagsSet' 2);  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: if (GUILayout.Button (text' EditorStyles.layerMaskField' GUILayout.ExpandWidth (true))) {  	//Debug.Log ("pre");  	GenericMenu menu = new GenericMenu ();  	if (value.tagsChange != 0)  		menu.AddItem (new GUIContent ("Everything")' value.tagsSet == ~0' value.SetValues' new Pathfinding.TagMask (value.tagsChange' ~0));  	else  		menu.AddDisabledItem (new GUIContent ("Everything"));  	menu.AddItem (new GUIContent ("Nothing")' value.tagsSet == 0' value.SetValues' new Pathfinding.TagMask (value.tagsChange' 0));  	for (int i = 0; i < 32; i++) {  		bool enabled = (value.tagsChange >> i & 0x1) != 0;  		bool on = (value.tagsSet >> i & 0x1) != 0;  		Pathfinding.TagMask result = new Pathfinding.TagMask (value.tagsChange' on ? value.tagsSet & ~(1 << i) : value.tagsSet | 1 << i);  		if (enabled)  			menu.AddItem (new GUIContent ("" + i)' on' value.SetValues' result);  		else  			menu.AddDisabledItem (new GUIContent ("" + i));  		//value.SetValues (result);  	}  	menu.ShowAsContext ();  	Event.current.Use ();  	//Debug.Log ("Post");  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,TagsMaskField,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	bool enabled = (value.tagsChange >> i & 0x1) != 0;  	bool on = (value.tagsSet >> i & 0x1) != 0;  	Pathfinding.TagMask result = new Pathfinding.TagMask (value.tagsChange' on ? value.tagsSet & ~(1 << i) : value.tagsSet | 1 << i);  	if (enabled)  		menu.AddItem (new GUIContent ("" + i)' on' value.SetValues' result);  	else  		menu.AddDisabledItem (new GUIContent ("" + i));  	//value.SetValues (result);  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The following statement contains a magic number: GUILayout.Space (EditorGUI.indentLevel * 10);  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The following statement contains a magic number: GUILayout.Label (label' labelStyle' GUILayout.Width (170));  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The following statement contains a magic number: if (GUILayout.Button (""' upArrow' GUILayout.Width (16)' GUILayout.Height (12))) {  	value++;  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The following statement contains a magic number: if (GUILayout.Button (""' upArrow' GUILayout.Width (16)' GUILayout.Height (12))) {  	value++;  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The following statement contains a magic number: if (GUILayout.Button (""' downArrow' GUILayout.Width (16)' GUILayout.Height (12))) {  	value--;  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The following statement contains a magic number: if (GUILayout.Button (""' downArrow' GUILayout.Width (16)' GUILayout.Height (12))) {  	value--;  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,UpDownArrows,The following statement contains a magic number: GUILayout.Space (100);  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,The following statement contains a magic number: if (layers == null || (System.DateTime.UtcNow.Ticks - lastUpdateTick > 10000000L && Event.current.type == EventType.Layout)) {  	lastUpdateTick = System.DateTime.UtcNow.Ticks;  	if (layers == null) {  		layers = new List<string> ();  		layerNumbers = new List<int> ();  		layerNames = new string[4];  	}  	else {  		layers.Clear ();  		layerNumbers.Clear ();  	}  	int emptyLayers = 0;  	for (int i = 0; i < 32; i++) {  		string layerName = LayerMask.LayerToName (i);  		if (layerName != "") {  			for (; emptyLayers > 0; emptyLayers--)  				layers.Add ("Layer " + (i - emptyLayers));  			layerNumbers.Add (i);  			layers.Add (layerName);  		}  		else {  			emptyLayers++;  		}  	}  	if (layerNames.Length != layers.Count) {  		layerNames = new string[layers.Count];  	}  	for (int i = 0; i < layerNames.Length; i++)  		layerNames [i] = layers [i];  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,The following statement contains a magic number: if (layers == null || (System.DateTime.UtcNow.Ticks - lastUpdateTick > 10000000L && Event.current.type == EventType.Layout)) {  	lastUpdateTick = System.DateTime.UtcNow.Ticks;  	if (layers == null) {  		layers = new List<string> ();  		layerNumbers = new List<int> ();  		layerNames = new string[4];  	}  	else {  		layers.Clear ();  		layerNumbers.Clear ();  	}  	int emptyLayers = 0;  	for (int i = 0; i < 32; i++) {  		string layerName = LayerMask.LayerToName (i);  		if (layerName != "") {  			for (; emptyLayers > 0; emptyLayers--)  				layers.Add ("Layer " + (i - emptyLayers));  			layerNumbers.Add (i);  			layers.Add (layerName);  		}  		else {  			emptyLayers++;  		}  	}  	if (layerNames.Length != layers.Count) {  		layerNames = new string[layers.Count];  	}  	for (int i = 0; i < layerNames.Length; i++)  		layerNames [i] = layers [i];  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,The following statement contains a magic number: if (layers == null) {  	layers = new List<string> ();  	layerNumbers = new List<int> ();  	layerNames = new string[4];  }  else {  	layers.Clear ();  	layerNumbers.Clear ();  }  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,The following statement contains a magic number: layerNames = new string[4];  
Magic Number,Pathfinding,EditorGUILayoutx,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\EditorGUIx.cs,LayerMaskField,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	string layerName = LayerMask.LayerToName (i);  	if (layerName != "") {  		for (; emptyLayers > 0; emptyLayers--)  			layers.Add ("Layer " + (i - emptyLayers));  		layerNumbers.Add (i);  		layers.Add (layerName);  	}  	else {  		emptyLayers++;  	}  }  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,FixLabel,The following statement contains a magic number: GUILayout.Space (14 * EditorGUI.indentLevel);  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,HelpBox,The following statement contains a magic number: GUILayout.Space (14 * EditorGUI.indentLevel);  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,ToggleGroup,The following statement contains a magic number: GUILayout.Space (13 * EditorGUI.indentLevel);  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,ToggleGroup,The following statement contains a magic number: value = GUILayout.Toggle (value' ""' GUILayout.Width (10));  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,ToggleGroup,The following statement contains a magic number: if (GUILayout.Button (label' boxHeader' GUILayout.Width (100))) {  	value = !value;  }  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawCollisionEditor,The following statement contains a magic number: GUILayout.Space (2);  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawAALine,The following statement contains a magic number: if (lineTex == null) {  	lineTex = new Texture2D (1' 4);  	lineTex.SetPixels (new Color[4] {  		Color.clear'  		Color.black'  		Color.black'  		Color.clear'  	});  	lineTex.Apply ();  }  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawAALine,The following statement contains a magic number: if (lineTex == null) {  	lineTex = new Texture2D (1' 4);  	lineTex.SetPixels (new Color[4] {  		Color.clear'  		Color.black'  		Color.black'  		Color.clear'  	});  	lineTex.Apply ();  }  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawAALine,The following statement contains a magic number: lineTex = new Texture2D (1' 4);  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawAALine,The following statement contains a magic number: lineTex.SetPixels (new Color[4] {  	Color.clear'  	Color.black'  	Color.black'  	Color.clear'  });  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawAALine,The following statement contains a magic number: Handles.DrawAAPolyLine (lineTex' new Vector3[3] {  	a'  	b'  	b + tangent1 * 10  });  
Magic Number,Pathfinding,GraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GraphEditor.cs,DrawAALine,The following statement contains a magic number: Handles.DrawAAPolyLine (lineTex' new Vector3[3] {  	a'  	b'  	b + tangent1 * 10  });  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: lockRect.y += 3;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: GUILayout.Space (2);  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: if (GUILayout.Button (new GUIContent ("Snap Size"' "Snap the size to exactly fit nodes")' GUILayout.MaxWidth (100)' GUILayout.MaxHeight (16))) {  	SnapSizeToNodes (newWidth' newDepth' graph);  }  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: if (GUILayout.Button (new GUIContent ("Snap Size"' "Snap the size to exactly fit nodes")' GUILayout.MaxWidth (100)' GUILayout.MaxHeight (16))) {  	SnapSizeToNodes (newWidth' newDepth' graph);  }  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: graph.maxClimbAxis = EditorGUILayout.IntPopup (new GUIContent ("Climb Axis"' "Determines which axis the above setting should test on")' graph.maxClimbAxis' new GUIContent[3] {  	new GUIContent ("X")'  	new GUIContent ("Y")'  	new GUIContent ("Z")  }' new int[3] {  	0'  	1'  	2  });  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: graph.maxClimbAxis = EditorGUILayout.IntPopup (new GUIContent ("Climb Axis"' "Determines which axis the above setting should test on")' graph.maxClimbAxis' new GUIContent[3] {  	new GUIContent ("X")'  	new GUIContent ("Y")'  	new GUIContent ("Z")  }' new int[3] {  	0'  	1'  	2  });  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: graph.maxClimbAxis = EditorGUILayout.IntPopup (new GUIContent ("Climb Axis"' "Determines which axis the above setting should test on")' graph.maxClimbAxis' new GUIContent[3] {  	new GUIContent ("X")'  	new GUIContent ("Y")'  	new GUIContent ("Z")  }' new int[3] {  	0'  	1'  	2  });  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: graph.erodeIterations = graph.erodeIterations < 0 ? 0 : (graph.erodeIterations > 16 ? 16 : graph.erodeIterations);  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: graph.erodeIterations = graph.erodeIterations < 0 ? 0 : (graph.erodeIterations > 16 ? 16 : graph.erodeIterations);  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: if (showExtra) {  	EditorGUI.indentLevel += 2;  	graph.penaltyAngle = ToggleGroup (new GUIContent ("Angle Penalty"' "Adds a penalty based on the slope of the node")' graph.penaltyAngle);  	//bool preGUI = GUI.enabled;  	//GUI.enabled = graph.penaltyAngle && GUI.enabled;  	if (graph.penaltyAngle) {  		EditorGUI.indentLevel++;  		graph.penaltyAngleFactor = EditorGUILayout.FloatField (new GUIContent ("Factor"' "Scale of the penalty. A negative value should not be used")' graph.penaltyAngleFactor);  		//GUI.enabled = preGUI;  		HelpBox ("Applies penalty to nodes based on the angle of the hit surface during the Height Testing");  		EditorGUI.indentLevel--;  	}  	graph.penaltyPosition = ToggleGroup ("Position Penalty"' graph.penaltyPosition);  	//EditorGUILayout.Toggle ("Position Penalty"'graph.penaltyPosition);  	//preGUI = GUI.enabled;  	//GUI.enabled = graph.penaltyPosition && GUI.enabled;  	if (graph.penaltyPosition) {  		EditorGUI.indentLevel++;  		graph.penaltyPositionOffset = EditorGUILayout.FloatField ("Offset"' graph.penaltyPositionOffset);  		graph.penaltyPositionFactor = EditorGUILayout.FloatField ("Factor"' graph.penaltyPositionFactor);  		HelpBox ("Applies penalty to nodes based on their Y coordinate\nSampled in Int3 space' i.e it is multiplied with Int3.Precision first (" + Int3.Precision + ")\n" + "Be very careful when using negative values since a negative penalty will underflow and instead get really high");  		//GUI.enabled = preGUI;  		EditorGUI.indentLevel--;  	}  	GUI.enabled = false;  	ToggleGroup (new GUIContent ("Use Texture"' AstarPathEditor.AstarProTooltip)' false);  	GUI.enabled = true;  	EditorGUI.indentLevel -= 2;  }  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: if (showExtra) {  	EditorGUI.indentLevel += 2;  	graph.penaltyAngle = ToggleGroup (new GUIContent ("Angle Penalty"' "Adds a penalty based on the slope of the node")' graph.penaltyAngle);  	//bool preGUI = GUI.enabled;  	//GUI.enabled = graph.penaltyAngle && GUI.enabled;  	if (graph.penaltyAngle) {  		EditorGUI.indentLevel++;  		graph.penaltyAngleFactor = EditorGUILayout.FloatField (new GUIContent ("Factor"' "Scale of the penalty. A negative value should not be used")' graph.penaltyAngleFactor);  		//GUI.enabled = preGUI;  		HelpBox ("Applies penalty to nodes based on the angle of the hit surface during the Height Testing");  		EditorGUI.indentLevel--;  	}  	graph.penaltyPosition = ToggleGroup ("Position Penalty"' graph.penaltyPosition);  	//EditorGUILayout.Toggle ("Position Penalty"'graph.penaltyPosition);  	//preGUI = GUI.enabled;  	//GUI.enabled = graph.penaltyPosition && GUI.enabled;  	if (graph.penaltyPosition) {  		EditorGUI.indentLevel++;  		graph.penaltyPositionOffset = EditorGUILayout.FloatField ("Offset"' graph.penaltyPositionOffset);  		graph.penaltyPositionFactor = EditorGUILayout.FloatField ("Factor"' graph.penaltyPositionFactor);  		HelpBox ("Applies penalty to nodes based on their Y coordinate\nSampled in Int3 space' i.e it is multiplied with Int3.Precision first (" + Int3.Precision + ")\n" + "Be very careful when using negative values since a negative penalty will underflow and instead get really high");  		//GUI.enabled = preGUI;  		EditorGUI.indentLevel--;  	}  	GUI.enabled = false;  	ToggleGroup (new GUIContent ("Use Texture"' AstarPathEditor.AstarProTooltip)' false);  	GUI.enabled = true;  	EditorGUI.indentLevel -= 2;  }  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: EditorGUI.indentLevel += 2;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following statement contains a magic number: EditorGUI.indentLevel -= 2;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: r.y -= 14;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: r.width = 19;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: r.height = 19;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x' r.y' 7' 7)' pivot == GridPivot.TopLeft' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.TopLeft;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x' r.y' 7' 7)' pivot == GridPivot.TopLeft' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.TopLeft;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 12' r.y' 7' 7)' pivot == GridPivot.TopRight' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.TopRight;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 12' r.y' 7' 7)' pivot == GridPivot.TopRight' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.TopRight;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 12' r.y' 7' 7)' pivot == GridPivot.TopRight' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.TopRight;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 12' r.y + 12' 7' 7)' pivot == GridPivot.BottomRight' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.BottomRight;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 12' r.y + 12' 7' 7)' pivot == GridPivot.BottomRight' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.BottomRight;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 12' r.y + 12' 7' 7)' pivot == GridPivot.BottomRight' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.BottomRight;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 12' r.y + 12' 7' 7)' pivot == GridPivot.BottomRight' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.BottomRight;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x' r.y + 12' 7' 7)' pivot == GridPivot.BottomLeft' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.BottomLeft;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x' r.y + 12' 7' 7)' pivot == GridPivot.BottomLeft' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.BottomLeft;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x' r.y + 12' 7' 7)' pivot == GridPivot.BottomLeft' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.BottomLeft;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 6' r.y + 6' 7' 7)' pivot == GridPivot.Center' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.Center;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 6' r.y + 6' 7' 7)' pivot == GridPivot.Center' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.Center;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 6' r.y + 6' 7' 7)' pivot == GridPivot.Center' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.Center;  
Magic Number,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,PivotPointSelector,The following statement contains a magic number: if (GUI.Toggle (new Rect (r.x + 6' r.y + 6' 7' 7)' pivot == GridPivot.Center' ""' skin.FindStyle ("GridPivotSelectButton")))  	pivot = GridPivot.Center;  
Missing Default,Pathfinding,GridGraphEditor,C:\repos\pwypeanut_isometricdefense\Assets\AstarPathfindingEditor\Editor\GraphEditors\GridGeneratorEditor.cs,OnInspectorGUI,The following switch statement is missing a default case: switch (pivot) {  case GridPivot.Center:  	graph.center = RoundVector3 (graph.center);  	graph.center = EditorGUILayout.Vector3Field ("Center"' graph.center);  	break;  case GridPivot.TopLeft:  	pivotPoint = graph.matrix.MultiplyPoint3x4 (new Vector3 (0' 0' graph.depth));  	pivotPoint = RoundVector3 (pivotPoint);  	diff = pivotPoint - graph.center;  	pivotPoint = EditorGUILayout.Vector3Field ("Top-Left"' pivotPoint);  	graph.center = pivotPoint - diff;  	break;  case GridPivot.TopRight:  	pivotPoint = graph.matrix.MultiplyPoint3x4 (new Vector3 (graph.width' 0' graph.depth));  	pivotPoint = RoundVector3 (pivotPoint);  	diff = pivotPoint - graph.center;  	pivotPoint = EditorGUILayout.Vector3Field ("Top-Right"' pivotPoint);  	graph.center = pivotPoint - diff;  	break;  case GridPivot.BottomLeft:  	pivotPoint = graph.matrix.MultiplyPoint3x4 (new Vector3 (0' 0' 0));  	pivotPoint = RoundVector3 (pivotPoint);  	diff = pivotPoint - graph.center;  	pivotPoint = EditorGUILayout.Vector3Field ("Bottom-Left"' pivotPoint);  	graph.center = pivotPoint - diff;  	break;  case GridPivot.BottomRight:  	pivotPoint = graph.matrix.MultiplyPoint3x4 (new Vector3 (graph.width' 0' 0));  	pivotPoint = RoundVector3 (pivotPoint);  	diff = pivotPoint - graph.center;  	pivotPoint = EditorGUILayout.Vector3Field ("Bottom-Right"' pivotPoint);  	graph.center = pivotPoint - diff;  	break;  }  
