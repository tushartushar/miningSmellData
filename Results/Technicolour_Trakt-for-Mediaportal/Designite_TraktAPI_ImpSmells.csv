Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetFromTrakt,Cyclomatic complexity of the method is 8
Complex Method,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,PostToTrakt,Cyclomatic complexity of the method is 9
Long Parameter List,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetUsersComments,The method has 6 parameters. Parameters: username' commentType' type' extendedInfoParams' page' maxItems
Long Parameter List,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetHiddenItems,The method has 5 parameters. Parameters: section' type' extendedInfoParams' page' maxItems
Long Parameter List,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetEpisodeComments,The method has 5 parameters. Parameters: id' season' episode' page' maxItems
Long Parameter List,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,PostToTrakt,The method has 5 parameters. Parameters: address' postData' logRequest' method' contentType
Long Identifier,TraktAPI,TraktURIs,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktURIs.cs,,The length of the parameter CalendarMySeasonPremieresShows is 30.
Long Identifier,TraktAPI,TraktURIs,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktURIs.cs,,The length of the parameter CalendarAllSeasonPremieresShows is 31.
Long Statement,TraktAPI.DataStructures,TraktLike,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\DataStructures\TraktLike.cs,Equals,The length of the statement  "            if (other == null || (other.Comment == null && other.Type == "comment") || (other.List == null && other.Type == "list")) " is 120.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetUsersComments,The length of the statement  "            var response = GetFromTrakt(string.Format(TraktURIs.UserComments' username' commentType' type' extendedInfoParams' page' maxItems)' out headers); " is 145.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetHiddenItems,The length of the statement  "            var response = GetFromTrakt(string.Format(TraktURIs.UserHiddenItems' section' type' extendedInfoParams' page' maxItems)' out headers); " is 134.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetLikedItems,The length of the statement  "            var response = GetFromTrakt(string.Format(TraktURIs.UserLikedItems' type' extendedInfoParams' page' maxItems)' out headers); " is 124.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,Search,The length of the statement  "            string response = GetFromTrakt(string.Format(TraktURIs.SearchAll' joinedTypes' HttpUtility.UrlEncode(searchTerm)' 1' maxResults)); " is 130.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchMovies,The length of the statement  "            string response = GetFromTrakt(string.Format(TraktURIs.SearchMovies' HttpUtility.UrlEncode(searchTerm)' 1' maxResults)); " is 120.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchEpisodes,The length of the statement  "            string response = GetFromTrakt(string.Format(TraktURIs.SearchEpisodes' HttpUtility.UrlEncode(searchTerm)' 1' maxResults)); " is 122.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchPeople,The length of the statement  "            string response = GetFromTrakt(string.Format(TraktURIs.SearchPeople' HttpUtility.UrlEncode(searchTerm)' 1' maxResults)); " is 120.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetFromTrakt,The length of the statement  "                    errorMessage = string.Format("Protocol Error' Code = '{0}'' Description = '{1}'' Url = '{2}'' Headers = '{3}'"' (int)response.StatusCode' response.StatusDescription' address' headers.TrimEnd(new char[] { '''' ' ' })); " is 217.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetFromTrakt,The length of the statement  "                string errorMessage = string.Format("Request failed due to an IO error' Description = '{0}'' Url = '{1}'' Method = '{2}'"' ioe.Message' address' method); " is 153.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,PostToTrakt,The length of the statement  "                    OnLatency(watch.Elapsed.TotalMilliseconds' response' postData.Length * sizeof(Char)' strResponse.Length * sizeof(Char)); " is 120.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,PostToTrakt,The length of the statement  "                    errorMessage = string.Format("Protocol Error' Code = '{0}'' Description = '{1}'' Url = '{2}'' Headers = '{3}'"' (int)response.StatusCode' response.StatusDescription' address' headers.TrimEnd(new char[] { '''' ' ' })); " is 217.
Long Statement,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,PostToTrakt,The length of the statement  "                string errorMessage = string.Format("Request failed due to an IO error' Description = '{0}'' Url = '{1}'' Method = '{2}'"' ioe.Message' address' method); " is 153.
Complex Conditional,TraktAPI.DataStructures,TraktLike,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\DataStructures\TraktLike.cs,Equals,The conditional expression  "other == null || (other.Comment == null && other.Type == "comment") || (other.List == null && other.Type == "list")"  is complex.
Magic Number,TraktAPI.Extensions,DateTimeExtensions,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\Extensions\DateTimeExtensions.cs,ToEpoch,The following statement contains a magic number: return (long)(dt - new DateTime(1970' 1' 1)).TotalSeconds;
Magic Number,TraktAPI.Extensions,DateTimeExtensions,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\Extensions\DateTimeExtensions.cs,FromEpoch,The following statement contains a magic number: return new DateTime(1970' 1' 1).AddSeconds(unixTime);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetAuthenticationToken,The following statement contains a magic number: do              {                  if (AuthorisationCancelled) return null;                    var response = PostToTrakt(TraktURIs.AccessToken' clientCode.ToJSON()).FromJSON<TraktAuthenticationToken>();                    if (response == null || AuthorisationCancelled) return null;                    // check the return code on the request to see if we should contine polling                  // http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/generate-new-device-codes                                                  // 400 : Pending                  // 404 : Not Found                  // 409 : Already Used                  // 410 : Expired                  // 418 : Denied                  // 429 : Slow Down                  if (response.Code != 0 && response.Code != 200)                  {                      switch (response.Code)                      {                          case 404:                          case 409:                          case 410:                          case 418:                              // fatal' we can't continue                              return null;                          default:                              break;                      }                  }                  else if (response.AccessToken != null)                  {                      UserAccessToken = response.AccessToken;                      return response;                  }                    // sleep the required time (interval) before checking again                  // otherwise will return a 429 (slow down) error                  Thread.Sleep(1000 * code.Interval);              }              while ((++pollCounter * code.Interval) < code.ExpiresIn);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetAuthenticationToken,The following statement contains a magic number: do              {                  if (AuthorisationCancelled) return null;                    var response = PostToTrakt(TraktURIs.AccessToken' clientCode.ToJSON()).FromJSON<TraktAuthenticationToken>();                    if (response == null || AuthorisationCancelled) return null;                    // check the return code on the request to see if we should contine polling                  // http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/generate-new-device-codes                                                  // 400 : Pending                  // 404 : Not Found                  // 409 : Already Used                  // 410 : Expired                  // 418 : Denied                  // 429 : Slow Down                  if (response.Code != 0 && response.Code != 200)                  {                      switch (response.Code)                      {                          case 404:                          case 409:                          case 410:                          case 418:                              // fatal' we can't continue                              return null;                          default:                              break;                      }                  }                  else if (response.AccessToken != null)                  {                      UserAccessToken = response.AccessToken;                      return response;                  }                    // sleep the required time (interval) before checking again                  // otherwise will return a 429 (slow down) error                  Thread.Sleep(1000 * code.Interval);              }              while ((++pollCounter * code.Interval) < code.ExpiresIn);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetAuthenticationToken,The following statement contains a magic number: do              {                  if (AuthorisationCancelled) return null;                    var response = PostToTrakt(TraktURIs.AccessToken' clientCode.ToJSON()).FromJSON<TraktAuthenticationToken>();                    if (response == null || AuthorisationCancelled) return null;                    // check the return code on the request to see if we should contine polling                  // http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/generate-new-device-codes                                                  // 400 : Pending                  // 404 : Not Found                  // 409 : Already Used                  // 410 : Expired                  // 418 : Denied                  // 429 : Slow Down                  if (response.Code != 0 && response.Code != 200)                  {                      switch (response.Code)                      {                          case 404:                          case 409:                          case 410:                          case 418:                              // fatal' we can't continue                              return null;                          default:                              break;                      }                  }                  else if (response.AccessToken != null)                  {                      UserAccessToken = response.AccessToken;                      return response;                  }                    // sleep the required time (interval) before checking again                  // otherwise will return a 429 (slow down) error                  Thread.Sleep(1000 * code.Interval);              }              while ((++pollCounter * code.Interval) < code.ExpiresIn);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetAuthenticationToken,The following statement contains a magic number: do              {                  if (AuthorisationCancelled) return null;                    var response = PostToTrakt(TraktURIs.AccessToken' clientCode.ToJSON()).FromJSON<TraktAuthenticationToken>();                    if (response == null || AuthorisationCancelled) return null;                    // check the return code on the request to see if we should contine polling                  // http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/generate-new-device-codes                                                  // 400 : Pending                  // 404 : Not Found                  // 409 : Already Used                  // 410 : Expired                  // 418 : Denied                  // 429 : Slow Down                  if (response.Code != 0 && response.Code != 200)                  {                      switch (response.Code)                      {                          case 404:                          case 409:                          case 410:                          case 418:                              // fatal' we can't continue                              return null;                          default:                              break;                      }                  }                  else if (response.AccessToken != null)                  {                      UserAccessToken = response.AccessToken;                      return response;                  }                    // sleep the required time (interval) before checking again                  // otherwise will return a 429 (slow down) error                  Thread.Sleep(1000 * code.Interval);              }              while ((++pollCounter * code.Interval) < code.ExpiresIn);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetAuthenticationToken,The following statement contains a magic number: do              {                  if (AuthorisationCancelled) return null;                    var response = PostToTrakt(TraktURIs.AccessToken' clientCode.ToJSON()).FromJSON<TraktAuthenticationToken>();                    if (response == null || AuthorisationCancelled) return null;                    // check the return code on the request to see if we should contine polling                  // http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/generate-new-device-codes                                                  // 400 : Pending                  // 404 : Not Found                  // 409 : Already Used                  // 410 : Expired                  // 418 : Denied                  // 429 : Slow Down                  if (response.Code != 0 && response.Code != 200)                  {                      switch (response.Code)                      {                          case 404:                          case 409:                          case 410:                          case 418:                              // fatal' we can't continue                              return null;                          default:                              break;                      }                  }                  else if (response.AccessToken != null)                  {                      UserAccessToken = response.AccessToken;                      return response;                  }                    // sleep the required time (interval) before checking again                  // otherwise will return a 429 (slow down) error                  Thread.Sleep(1000 * code.Interval);              }              while ((++pollCounter * code.Interval) < code.ExpiresIn);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetAuthenticationToken,The following statement contains a magic number: do              {                  if (AuthorisationCancelled) return null;                    var response = PostToTrakt(TraktURIs.AccessToken' clientCode.ToJSON()).FromJSON<TraktAuthenticationToken>();                    if (response == null || AuthorisationCancelled) return null;                    // check the return code on the request to see if we should contine polling                  // http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/generate-new-device-codes                                                  // 400 : Pending                  // 404 : Not Found                  // 409 : Already Used                  // 410 : Expired                  // 418 : Denied                  // 429 : Slow Down                  if (response.Code != 0 && response.Code != 200)                  {                      switch (response.Code)                      {                          case 404:                          case 409:                          case 410:                          case 418:                              // fatal' we can't continue                              return null;                          default:                              break;                      }                  }                  else if (response.AccessToken != null)                  {                      UserAccessToken = response.AccessToken;                      return response;                  }                    // sleep the required time (interval) before checking again                  // otherwise will return a 429 (slow down) error                  Thread.Sleep(1000 * code.Interval);              }              while ((++pollCounter * code.Interval) < code.ExpiresIn);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchForUsers,The following statement contains a magic number: return SearchUsers(searchTerm' 30);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchMovies,The following statement contains a magic number: return SearchMovies(searchTerm' 30);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchShows,The following statement contains a magic number: return SearchShows(searchTerm' 30);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchEpisodes,The following statement contains a magic number: return SearchEpisodes(searchTerm' 30);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchPeople,The following statement contains a magic number: return SearchPeople(searchTerm' 30);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,SearchLists,The following statement contains a magic number: return SearchLists(searchTerm' 30);
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,GetFromTrakt,The following statement contains a magic number: request.Timeout = 120000;
Magic Number,TraktAPI,TraktAPI,C:\repos\Technicolour_Trakt-for-Mediaportal\TraktAPI\TraktAPI.cs,PostToTrakt,The following statement contains a magic number: request.Timeout = 120000;
