Implementation smell,Namespace,Class,File,Method,Description
Long Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,GetValues,The method has 146 lines of code.
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ParseFormat,Cyclomatic complexity of the method is 21
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,Cyclomatic complexity of the method is 20
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoCounter,Cyclomatic complexity of the method is 12
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoIf,Cyclomatic complexity of the method is 28
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoSwitch,Cyclomatic complexity of the method is 15
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoTriple,Cyclomatic complexity of the method is 11
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,GetValues,Cyclomatic complexity of the method is 40
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,AddNamespaceFromNode,Cyclomatic complexity of the method is 10
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,Modifier,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\Modifier.cs,GetModifierMethod,Cyclomatic complexity of the method is 13
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,Program,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\Program.cs,GetAndCheckArgs,Cyclomatic complexity of the method is 61
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,Program,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\Program.cs,GetSplitConfig,Cyclomatic complexity of the method is 14
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithType,Cyclomatic complexity of the method is 10
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,Dispose,Cyclomatic complexity of the method is 13
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,GetFilePathBasedOnFormat,Cyclomatic complexity of the method is 18
Complex Method,JoshanMahmud.SemanticWeb.RdfConversion,XmlSplitter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\XmlSplitter.cs,ExecXpath,Cyclomatic complexity of the method is 29
Long Parameter List,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,RDFer,The method has 5 parameters.
Long Parameter List,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,GetValues,The method has 6 parameters.
Long Parameter List,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndObject,The method has 7 parameters.
Long Parameter List,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithType,The method has 5 parameters.
Long Parameter List,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithLanguage,The method has 5 parameters.
Long Parameter List,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithType,The method has 5 parameters.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoError,The length of the statement  "		throw new Exception ("Error in config: Missing attribute @message in <error> element.  Please specify the message for the error."); " is 131.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoError,The length of the statement  "			throw new Exception ("Error in config: Unknown value for attribute @exit in <error> element.  Please specify either true or false."); " is 133.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoError,The length of the statement  "		throw new Exception ("User specified error has occured at: " + resourceNode.xmlResouceNode.InnerXml + "'\nDue to error statement in config: " + message); " is 153.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoError,The length of the statement  "		Console.WriteLine ("User specified error has occured at: " + resourceNode.xmlResouceNode.InnerXml + "'\nDue to error statement in config: " + message); " is 151.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoCounter,The length of the statement  "		throw new Exception ("Error in config: Missing attribut @name in <counter> element.  Please specify a name of the counter variable."); " is 134.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoUniqueidentifier,The length of the statement  "		throw new Exception ("Error in config: Missing attribut @name in <uniqueidentifier> element.  Please specify a name of the unique identifier variable."); " is 153.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoUsenamedmapping,The length of the statement  "		throw new Exception ("Error in config: Missing attribut @name in <usenamedmapping> element.  Please specify a name of a namedmapping."); " is 136.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoUsenamedmapping,The length of the statement  "		throw new Exception ("Error in config: no named mapping was found for: " + namedMappingName + ".  Please ensure that a <namedmapping> element is used and defined directly under <config>"); " is 188.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoMapping,The length of the statement  "		Console.WriteLine ("Error in Mapping tag: " + mapping.OuterXml + " " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : "")); " is 135.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoResource,The length of the statement  "		Console.WriteLine ("Error in Resource tag: " + resourceMapping.OuterXml + " " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : "")); " is 144.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoIf,The length of the statement  "		Console.WriteLine ("Error in If tag: " + ifNode.OuterXml + " " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : "")); " is 129.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoSwitch,The length of the statement  "		Console.WriteLine ("Error in Switch tag: " + switchNode.OuterXml + " " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : "")); " is 137.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoTriple,The length of the statement  "				_output.AddPredicateAndObject (resourceNode.xmlResouceNode' predNs' predName' "rdf"' "resource"' valuePrefix' valueUri); " is 120.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoTriple,The length of the statement  "		Console.WriteLine ("Error in Triple tag: " + triple.OuterXml + " " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : "")); " is 133.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoType,The length of the statement  "		Console.WriteLine ("Error in Type tag: " + type.OuterXml + " " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : "")); " is 129.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DoBnode,The length of the statement  "		Console.WriteLine ("Error in BNode tag: " + bNode.OuterXml + " " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : "")); " is 131.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,GetValues,The length of the statement  "	//We'll add the internalFuncCalls first so their are computed first (really we want to create a parse tree but will mean a v2) " is 126.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,GetValues,The length of the statement  "                    Therefore we have just a normal bracketed xpath.  If so' before we continue' we need to rule out any sub calls to internal functions such as:" is 141.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,Modifier,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\Modifier.cs,GetCustomModifier,The length of the statement  "	throw new Exception ("Error in config: modifier function modifier=" + methodName + " does not exist.  If it is custom' please verify that you use the IModifier Interface from the ModifierLibrary.dll"); " is 201.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,Program,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\Program.cs,Usage,The length of the statement  "	Console.Write ("\n\n\t RDFer -c[/c /config] configfile.xml -i[/i /input] inputfile.xml> -o[/o /output]\nOPTIONAL\n\t-f[/f to specify format: rdf'ttl'n3'trig'nt'nq]\n\t-s[/s /split]\n\t-p[/p to pause]\n\t-n[/n output noise]\n\nYou must specify a config file as XML' an input file and a path to where to output the RDF files.\nUse the split flag to initiate the splitting of the XML file."); " is 389.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithType,The length of the statement  "	XmlNode node = _output.CreateNode (XmlNodeType.Element' predicatePrefix' predicateValue' _namespaces [predicatePrefix]); " is 120.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithLanguage,The length of the statement  "	XmlNode node = _output.CreateNode (XmlNodeType.Element' predicatePrefix' predicateValue' _namespaces [predicatePrefix]); " is 120.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithType,The length of the statement  "	XmlNode node = _output.CreateNode (XmlNodeType.Element' predicatePrefix' predicateValue' _namespaces [predicatePrefix]); " is 120.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,GetFilePathBasedOnFormat,The length of the statement  "		return Path.Combine (new FileInfo (_outputPath).DirectoryName' Path.GetFileNameWithoutExtension (_outputPath) + extension); " is 123.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,XmlSplitter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\XmlSplitter.cs,Split,The length of the statement  "		if ((splitType == ESplitType.ElementCount && elementCounter >= splitSize) || (splitType == ESplitType.Filesize && (_outputBuilder.Length - header.Length) >= splitSize * 1000)) { " is 177.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,XmlSplitter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\XmlSplitter.cs,ExecXpath,The length of the statement  "		if (xpaths.Count > 1 || xPathExpression.Substring (0' 1) != "{" || xPathExpression.Substring (xPathExpression.Length - 1' 1) != "}") { " is 134.
Long Statement,JoshanMahmud.SemanticWeb.RdfConversion,XmlSplitter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\XmlSplitter.cs,IgnorableNodeType,The length of the statement  "	return (nodeType == XmlNodeType.Whitespace || nodeType == XmlNodeType.SignificantWhitespace || nodeType == XmlNodeType.EndEntity || nodeType == XmlNodeType.EndElement); " is 168.
Complex Conditional,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,RemoveClosingBrackets,The conditional expression  "(matchNew.StartsWith ("{") && matchNew.EndsWith ("}")) || (matchNew.StartsWith ("^") && matchNew.EndsWith ("~"))"  is complex.
Complex Conditional,JoshanMahmud.SemanticWeb.RdfConversion,XmlSplitter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\XmlSplitter.cs,Split,The conditional expression  "(splitType == ESplitType.ElementCount && elementCounter >= splitSize) || (splitType == ESplitType.Filesize && (_outputBuilder.Length - header.Length) >= splitSize * 1000)"  is complex.
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,CharacterConversionHelper,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\CharacterConversionHelper.cs,EntitiesToAccents,The following statement contains a magic number: if (newValue.Contains ('&')) {  	//  reduce everything to single ampersands  	var ampersands = new string[10] {  		"&amp;amp;"'  		"&#x0026;"'  		"&amp;#38;"'  		"&#38;"'  		"&amp;;"'  		"&amp;"'  		"&Amp;"'  		"&AMP;"'  		"&mp;"'  		"\\&"  	};  	newValue = ReplaceAll (ampersands' "&"' newValue);  	newValue = newValue.Replace ("&&"' "&");  	//  try to detect missing ampersands  	var ampersandMatches = Regex.Matches (newValue' "(.)([#]{0'1}[A-Za-z0-9]+);");  	//TODO: regex  	//  carefully inspect any remaining ampersands  	//var matches = Regex.Matches(newValue'"([^&#]*)&([#]{0'1}[^#<\"&;'\-'\(\) ]*)([;\"<]{0'1})");  	//foreach(Match match in matches)  	//{  	//}  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,The following statement contains a magic number: try {  	foreach (XmlNode node in config.ChildNodes) {  		string elementFunc = node.Name.Substring (0' 1).ToUpper () + node.Name.Substring (1).ToLower ();  		string func = "Do" + elementFunc;  		object[] parameters = new object[3] {  			resourceNode'  			node'  			data  		};  		switch (func) {  		//ignore these ones  		case "Do#text":  		case "Do#comment":  		case "DoPartition":  		case "DoNamespaces":  		case "DoSplit":  		case "DoNamedmapping":  			continue;  		case "DoForeach":  			func = "DoMapping";  			break;  		case "DoResource":  			parameters = new object[2] {  				node'  				data  			};  			break;  		case "DoIdentifier":  			//check to see if we have already found the identifier for the current resource - if not' then process  			if (resourceNode.HasIdentifier)  				continue;  			break;  		}  		Type thisType = this.GetType ();  		MethodInfo theMethod = thisType.GetMethod (func' BindingFlags.NonPublic | BindingFlags.Instance);  		if (theMethod != null) {  			theMethod.Invoke (this' parameters);  		}  		else  			throw new Exception ("Cannot process: " + node.OuterXml + ". Cannot identify tag: <" + elementFunc + ">");  	}  }  catch (Exception ex) {  	Console.WriteLine ("Error in ExecConfig(): " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : ""));  	if (ex.InnerException != null)  		Console.WriteLine (ex.InnerException.Message + (_includeStackTraceInOutput ? ex.InnerException.StackTrace : ""));  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,The following statement contains a magic number: try {  	foreach (XmlNode node in config.ChildNodes) {  		string elementFunc = node.Name.Substring (0' 1).ToUpper () + node.Name.Substring (1).ToLower ();  		string func = "Do" + elementFunc;  		object[] parameters = new object[3] {  			resourceNode'  			node'  			data  		};  		switch (func) {  		//ignore these ones  		case "Do#text":  		case "Do#comment":  		case "DoPartition":  		case "DoNamespaces":  		case "DoSplit":  		case "DoNamedmapping":  			continue;  		case "DoForeach":  			func = "DoMapping";  			break;  		case "DoResource":  			parameters = new object[2] {  				node'  				data  			};  			break;  		case "DoIdentifier":  			//check to see if we have already found the identifier for the current resource - if not' then process  			if (resourceNode.HasIdentifier)  				continue;  			break;  		}  		Type thisType = this.GetType ();  		MethodInfo theMethod = thisType.GetMethod (func' BindingFlags.NonPublic | BindingFlags.Instance);  		if (theMethod != null) {  			theMethod.Invoke (this' parameters);  		}  		else  			throw new Exception ("Cannot process: " + node.OuterXml + ". Cannot identify tag: <" + elementFunc + ">");  	}  }  catch (Exception ex) {  	Console.WriteLine ("Error in ExecConfig(): " + ex.Message + (_includeStackTraceInOutput ? ex.StackTrace : ""));  	if (ex.InnerException != null)  		Console.WriteLine (ex.InnerException.Message + (_includeStackTraceInOutput ? ex.InnerException.StackTrace : ""));  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,The following statement contains a magic number: foreach (XmlNode node in config.ChildNodes) {  	string elementFunc = node.Name.Substring (0' 1).ToUpper () + node.Name.Substring (1).ToLower ();  	string func = "Do" + elementFunc;  	object[] parameters = new object[3] {  		resourceNode'  		node'  		data  	};  	switch (func) {  	//ignore these ones  	case "Do#text":  	case "Do#comment":  	case "DoPartition":  	case "DoNamespaces":  	case "DoSplit":  	case "DoNamedmapping":  		continue;  	case "DoForeach":  		func = "DoMapping";  		break;  	case "DoResource":  		parameters = new object[2] {  			node'  			data  		};  		break;  	case "DoIdentifier":  		//check to see if we have already found the identifier for the current resource - if not' then process  		if (resourceNode.HasIdentifier)  			continue;  		break;  	}  	Type thisType = this.GetType ();  	MethodInfo theMethod = thisType.GetMethod (func' BindingFlags.NonPublic | BindingFlags.Instance);  	if (theMethod != null) {  		theMethod.Invoke (this' parameters);  	}  	else  		throw new Exception ("Cannot process: " + node.OuterXml + ". Cannot identify tag: <" + elementFunc + ">");  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,The following statement contains a magic number: foreach (XmlNode node in config.ChildNodes) {  	string elementFunc = node.Name.Substring (0' 1).ToUpper () + node.Name.Substring (1).ToLower ();  	string func = "Do" + elementFunc;  	object[] parameters = new object[3] {  		resourceNode'  		node'  		data  	};  	switch (func) {  	//ignore these ones  	case "Do#text":  	case "Do#comment":  	case "DoPartition":  	case "DoNamespaces":  	case "DoSplit":  	case "DoNamedmapping":  		continue;  	case "DoForeach":  		func = "DoMapping";  		break;  	case "DoResource":  		parameters = new object[2] {  			node'  			data  		};  		break;  	case "DoIdentifier":  		//check to see if we have already found the identifier for the current resource - if not' then process  		if (resourceNode.HasIdentifier)  			continue;  		break;  	}  	Type thisType = this.GetType ();  	MethodInfo theMethod = thisType.GetMethod (func' BindingFlags.NonPublic | BindingFlags.Instance);  	if (theMethod != null) {  		theMethod.Invoke (this' parameters);  	}  	else  		throw new Exception ("Cannot process: " + node.OuterXml + ". Cannot identify tag: <" + elementFunc + ">");  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,The following statement contains a magic number: switch (func) {  //ignore these ones  case "Do#text":  case "Do#comment":  case "DoPartition":  case "DoNamespaces":  case "DoSplit":  case "DoNamedmapping":  	continue;  case "DoForeach":  	func = "DoMapping";  	break;  case "DoResource":  	parameters = new object[2] {  		node'  		data  	};  	break;  case "DoIdentifier":  	//check to see if we have already found the identifier for the current resource - if not' then process  	if (resourceNode.HasIdentifier)  		continue;  	break;  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,The following statement contains a magic number: parameters = new object[2] {  	node'  	data  };  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,TryInternalFunction,The following statement contains a magic number: if (funcCall.StartsWith ("counter_")) {  	//get name of counter  	var counterName = funcCall.Substring (8);  	if (!_counters.ContainsKey (counterName))  		throw new Exception ("No counter named:" + counterName + "exists and can be used.");  	var counter = _counters [counterName];  	result = counter.CounterValue.ToString ();  	return true;  }  else if (funcCall.StartsWith ("uniqueidentifier_")) {  	var uniqueIdentifierName = funcCall.Substring (17);  	if (!_uniqueIdentifiers.ContainsKey (uniqueIdentifierName))  		throw new Exception ("No unique identifier named:" + uniqueIdentifierName + "exists and can be used.");  	var uniqueIdentifer = _uniqueIdentifiers [uniqueIdentifierName];  	result = uniqueIdentifer.UniqueId;  	return true;  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,TryInternalFunction,The following statement contains a magic number: if (funcCall.StartsWith ("counter_")) {  	//get name of counter  	var counterName = funcCall.Substring (8);  	if (!_counters.ContainsKey (counterName))  		throw new Exception ("No counter named:" + counterName + "exists and can be used.");  	var counter = _counters [counterName];  	result = counter.CounterValue.ToString ();  	return true;  }  else if (funcCall.StartsWith ("uniqueidentifier_")) {  	var uniqueIdentifierName = funcCall.Substring (17);  	if (!_uniqueIdentifiers.ContainsKey (uniqueIdentifierName))  		throw new Exception ("No unique identifier named:" + uniqueIdentifierName + "exists and can be used.");  	var uniqueIdentifer = _uniqueIdentifiers [uniqueIdentifierName];  	result = uniqueIdentifer.UniqueId;  	return true;  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,TryInternalFunction,The following statement contains a magic number: if (funcCall.StartsWith ("uniqueidentifier_")) {  	var uniqueIdentifierName = funcCall.Substring (17);  	if (!_uniqueIdentifiers.ContainsKey (uniqueIdentifierName))  		throw new Exception ("No unique identifier named:" + uniqueIdentifierName + "exists and can be used.");  	var uniqueIdentifer = _uniqueIdentifiers [uniqueIdentifierName];  	result = uniqueIdentifer.UniqueId;  	return true;  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Length == 11 && dateCpy [2] == ' ' && dateCpy [6] == ' ') {  	return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Length == 11 && dateCpy [2] == ' ' && dateCpy [6] == ' ') {  	return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Length == 11 && dateCpy [2] == ' ' && dateCpy [6] == ' ') {  	return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Length == 11 && dateCpy [2] == ' ' && dateCpy [6] == ' ') {  	return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Length == 11 && dateCpy [2] == ' ' && dateCpy [6] == ' ') {  	return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Length == 11 && dateCpy [2] == ' ' && dateCpy [6] == ' ') {  	return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Length == 11 && dateCpy [2] == ' ' && dateCpy [6] == ' ') {  	return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: return dateCpy.Substring (dateCpy.Length - 4) + _months [dateCpy.Substring (3' 3)] + dateCpy.Substring (0' 2);  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Substring (dateCpy.Length - 3) == " BC") {  	return "-" + dateCpy.Substring (0' dateCpy.Length - 3);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: if (dateCpy.Substring (dateCpy.Length - 3) == " BC") {  	return "-" + dateCpy.Substring (0' dateCpy.Length - 3);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,DateToInt,The following statement contains a magic number: return "-" + dateCpy.Substring (0' dateCpy.Length - 3);  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,SanitiseUri,The following statement contains a magic number: if (!VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri (newValue)) {  	//  delete these characters  	newValue = value.Replace ("<"' "").Replace (">"' "");  	//  replace anything else wacky with a -  	newValue = Regex.Replace (newValue' "[^a-zA-Z0-9_#\\-/:\\.]"' "-");  	//  remove leading' ending or double hyphens  	while (newValue.Contains ("--")) {  		newValue = newValue.Replace ("--"' "-");  	}  	if (newValue.StartsWith ("-"))  		newValue = newValue.Substring (1);  	if (newValue.EndsWith ("-"))  		newValue = newValue.Substring (0' newValue.Length - 1);  	//  remove double slashes' presuming not preceeded by http:  	newValue = Regex.Replace (newValue' "([^:])//"' "\\1/");  	//  if there is a trailing slash remove it' unless just http://domain.com/  	//  ie greater than three /  	if (newValue.EndsWith ("/") && CountStringOccurrences (newValue' "/") > 3)  		newValue = newValue.Substring (0' newValue.Length - 1);  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,SanitiseUri,The following statement contains a magic number: if (newValue.EndsWith ("/") && CountStringOccurrences (newValue' "/") > 3)  	newValue = newValue.Substring (0' newValue.Length - 1);  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,Program,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\Program.cs,Abort,The following statement contains a magic number: Environment.Exit (-2);  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddBnode,The following statement contains a magic number: if (bNodeNameParts.Length != 2)  	throw new Exception ("Blank Node must be in form: 'ns:Type'");  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,XmlSplitter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\XmlSplitter.cs,Split,The following statement contains a magic number: while (!_data.EOF) {  	//Only count the nodes that interest us...  	if (!IgnorableNodeType (_data.NodeType))  		elementCounter++;  	else  		emptyDocument = false;  	//copy everything from the reader  	_output.WriteNode (_data' true);  	if ((splitType == ESplitType.ElementCount && elementCounter >= splitSize) || (splitType == ESplitType.Filesize && (_outputBuilder.Length - header.Length) >= splitSize * 1000)) {  		////construct the final XML string  		ExportXmlFile (footer' writer' outputFileName' splitCount);  		//reset counters  		splitCount++;  		elementCounter = 0;  		//reset string builder  		_outputBuilder.Length = 0;  		_outputBuilder.Append (header);  		emptyDocument = true;  	}  }  
Magic Number,JoshanMahmud.SemanticWeb.RdfConversion,XmlSplitter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\XmlSplitter.cs,Split,The following statement contains a magic number: if ((splitType == ESplitType.ElementCount && elementCounter >= splitSize) || (splitType == ESplitType.Filesize && (_outputBuilder.Length - header.Length) >= splitSize * 1000)) {  	////construct the final XML string  	ExportXmlFile (footer' writer' outputFileName' splitCount);  	//reset counters  	splitCount++;  	elementCounter = 0;  	//reset string builder  	_outputBuilder.Length = 0;  	_outputBuilder.Append (header);  	emptyDocument = true;  }  
Missing Default,JoshanMahmud.SemanticWeb.RdfConversion,Counter,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\Counter.cs,IterateCounter,The following switch statement is missing a default case: switch (Iteration) {  case eCounterIteration.Increment:  	CounterValue++;  	break;  case eCounterIteration.Decrement:  	CounterValue--;  	break;  }  
Missing Default,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ParseFormat,The following switch statement is missing a default case: switch (format.Trim ().ToLower ()) {  case "rdf":  	eRdfFormat = ERdfFormat.RdfXml;  	break;  case "ttl":  case "turtle":  	eRdfFormat = ERdfFormat.Turtle;  	break;  case "n3":  case "notation3":  	eRdfFormat = ERdfFormat.N3;  	break;  case "trig":  	eRdfFormat = ERdfFormat.TriG;  	break;  case "nt":  case "ntriples":  	eRdfFormat = ERdfFormat.NTriples;  	break;  case "nq":  	eRdfFormat = ERdfFormat.NQuads;  	break;  }  
Missing Default,JoshanMahmud.SemanticWeb.RdfConversion,RDFer,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RDFer.cs,ExecConfig,The following switch statement is missing a default case: switch (func) {  //ignore these ones  case "Do#text":  case "Do#comment":  case "DoPartition":  case "DoNamespaces":  case "DoSplit":  case "DoNamedmapping":  	continue;  case "DoForeach":  	func = "DoMapping";  	break;  case "DoResource":  	parameters = new object[2] {  		node'  		data  	};  	break;  case "DoIdentifier":  	//check to see if we have already found the identifier for the current resource - if not' then process  	if (resourceNode.HasIdentifier)  		continue;  	break;  }  
Missing Default,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,AddPredicateAndLiteralWithType,The following switch statement is missing a default case: switch (literalType) {  case ELiteralType.XsdInteger:  	attribute = _output.CreateAttribute ("xsd"' "integer"' _namespaces ["xsd"]);  	break;  case ELiteralType.XsdBoolean:  	attribute = _output.CreateAttribute ("xsd"' "boolean"' _namespaces ["xsd"]);  	break;  case ELiteralType.XsdDateTime:  	attribute = _output.CreateAttribute ("xsd"' "dateTime"' _namespaces ["xsd"]);  	break;  }  
Missing Default,JoshanMahmud.SemanticWeb.RdfConversion,RdfOutput,C:\repos\jmahmud_RDFer\RDFerSolution\RDFer\RdfOutput.cs,GetFilePathBasedOnFormat,The following switch statement is missing a default case: switch (_outputFormat) {  case ERdfFormat.N3:  	extension = ".n3";  	break;  case ERdfFormat.NTriples:  	extension = ".nt";  	break;  case ERdfFormat.RdfXml:  	extension = ".rdf";  	break;  case ERdfFormat.TriG:  	extension = ".trig";  	break;  case ERdfFormat.Turtle:  	extension = ".ttl";  	break;  case ERdfFormat.NQuads:  	extension = ".nq";  	break;  }  
