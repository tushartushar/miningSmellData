Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,,The length of the parameter _streamSubscriberIntervalMonitorMock is 36.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_every_subscriberId_with_correct_values,The length of the statement  "            stats.Single(x => x.StreamName == StreamName && x.SubscriberId == SubscriberId + "1").IsStreamBehind.Should().BeFalse(); " is 120.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithCorrectStreamName,The length of the statement  "            _subscriptionTimerManagerMock.Verify(x => x.Add(StreamName' SubscriberId' It.IsAny<TimeSpan>()' It.IsAny<Func<Task>>()' It.IsAny<Action>())); " is 141.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithSuppliedPeriodIfPassed,The length of the statement  "            _subscriptionTimerManagerMock.Verify(x => x.Add(It.IsAny<string>()' It.IsAny<string>()' TimeSpan.FromDays(123)' It.IsAny<Func<Task>>()' It.IsAny<Action>())); " is 157.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithDefaultPeriodIfNoneIsPassed,The length of the statement  "            var builder = new EventStreamSubscriberSettingsBuilder(_eventStoreHttpConnectionMock.Object' _eventHandlerResolverMock.Object' _streamPositionRepositoryMock.Object).WithDefaultPollingInterval(TimeSpan.FromDays(456)).WithCustomEventTypeResolver(_eventTypeResolverMock.Object).WithCustomSubscriptionTimerManager(_subscriptionTimerManagerMock.Object); " is 348.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithDefaultPeriodIfNoneIsPassed,The length of the statement  "            _subscriptionTimerManagerMock.Verify(x => x.Add(It.IsAny<string>()' It.IsAny<string>()' TimeSpan.FromDays(456)' It.IsAny<Func<Task>>()' It.IsAny<Action>())); " is 157.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,GetMethodFromHandler_ShouldBeAbleToFindImplementedInterfaceMethodsForMetadataHandler,The length of the statement  "            var method = _subscriber.GetMethodFromHandler(typeof(SomeImplicitMetadataHandler)' typeof(EventANoBaseOrInterface)' "Handle"); " is 126.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_ShouldPauseTheEventTimerDuringPolling,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => result); " is 170.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfNoEvents_ShouldImmediatelyResumeTheEventTimerDuringPolling,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => result); " is 170.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventsFound_ShouldImmediatelyRepoll,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback( " is 190.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventsFound_ShouldImmediatelyRepoll,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(StreamName' It.IsAny<int>())).Returns(async () => new EventReadResult(EventReadStatus.Success' new EventInfo { EventType = typeof(EventANoBaseOrInterface).FullName })); " is 226.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldKeepRetryingUntilItsFound,The length of the statement  "                Entries = new List<BasicEventInfo> { new BasicEventInfo { Title = "1@Stream"' Links = new List<Link> { new Link { Relation = "edit" } }} } " is 138.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldKeepRetryingUntilItsFound,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback( " is 190.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldKeepRetryingUntilItsFound,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(StreamName' It.IsAny<int>())).Returns(async () => new EventReadResult(EventReadStatus.Success' new EventInfo { EventType = typeof(EventANoBaseOrInterface).FullName })); " is 226.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldKeepRetryingUntilItsFound,The length of the statement  "            _eventHandlerResolverMock.Setup(x => x.GetHandlersOf(It.IsAny<Type>())).Returns(new List<object> { new SomeImplicitHandler() }); " is 128.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldKeepRetryingUntilItsFound,The length of the statement  "            _eventStoreHttpConnectionMock.Verify(x => x.ReadEventBodyAsync(It.IsAny<Type>()' It.IsAny<string>())' Times.Exactly(4)); " is 120.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldStopRetryingWhenItReachesMaxRetryCount,The length of the statement  "                Entries = new List<BasicEventInfo> { new BasicEventInfo { Title = "1@Stream"' Links = new List<Link> { new Link { Relation = "edit" } } } } " is 139.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldStopRetryingWhenItReachesMaxRetryCount,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback( " is 190.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldStopRetryingWhenItReachesMaxRetryCount,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(StreamName' It.IsAny<int>())).Returns(async () => new EventReadResult(EventReadStatus.Success' new EventInfo { EventType = typeof(EventANoBaseOrInterface).FullName })); " is 226.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldStopRetryingWhenItReachesMaxRetryCount,The length of the statement  "            _eventHandlerResolverMock.Setup(x => x.GetHandlersOf(It.IsAny<Type>())).Returns(new List<object> { new SomeImplicitHandler() }); " is 128.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldStopRetryingWhenItReachesMaxRetryCount,The length of the statement  "            _eventStoreHttpConnectionMock.Verify(x => x.ReadEventBodyAsync(It.IsAny<Type>()' It.IsAny<string>())' Times.Exactly(EventNotFoundRetryCount)); " is 142.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfUnsubscribed_ShouldNotRepoll,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback( " is 190.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfUnsubscribed_ShouldNotRepoll,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(StreamName' It.IsAny<int>())).Returns(async () => new EventReadResult(EventReadStatus.Success' new EventInfo { EventType = typeof(EventANoBaseOrInterface).FullName })); " is 226.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfUnsubscribed_ShouldStopProcessingBatch,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult); " is 181.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfUnsubscribed_ShouldStopProcessingBatch,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(StreamName' It.IsAny<int>())).Returns(async () => new EventReadResult(EventReadStatus.Success' new EventInfo { EventType = typeof(EventANoBaseOrInterface).FullName })); " is 226.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfUnsuccessful_ShouldNotTryToProcessResults,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => result); " is 170.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_ShouldStoreStreamPositionAfterHandlersInvoked_EvenIfNoneWereFound,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => await Task.FromResult(streamSliceResult)).Callback( " is 213.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,GetEventHandlersFor_ShouldRequestCorrectHandlers,The length of the statement  "            _eventTypeResolverMock.Setup(x => x.Resolve(typeof(EventANoBaseOrInterface).FullName)).Returns(typeof(EventANoBaseOrInterface)); " is 128.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,GetHandlersFor_ShouldRequestCorrectMetadataHandlers,The length of the statement  "            _eventTypeResolverMock.Setup(x => x.Resolve(typeof(EventANoBaseOrInterface).FullName)).Returns(typeof(EventANoBaseOrInterface)); " is 128.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeFoundHandlers,The length of the statement  "            await _subscriber.InvokeMessageHandlersForEventMessageAsync(StreamName' typeof(EventANoBaseOrInterface)' handlers' new EventANoBaseOrInterface()' EventInfo); " is 157.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeFoundHandlersForInterfaceType,The length of the statement  "            await _subscriber.InvokeMessageHandlersForEventMessageAsync(StreamName' typeof(EventAWithInterface)' handlers' new EventAWithInterface()' EventInfo); " is 149.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_WhenNoEventHandlersFound_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "                Entries = new List<BasicEventInfo> { new BasicEventInfo { Title = "1@Stream"' EventType = "SomeType"' Updated = EventDate } } " is 125.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_WhenNoEventHandlersFound_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback( " is 190.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_WhenNoEventHandlersFound_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "            var builder = new EventStreamSubscriberSettingsBuilder(_eventStoreHttpConnectionMock.Object' _eventHandlerResolverMock.Object' _streamPositionRepositoryMock.Object).WithCustomEventTypeResolver(_eventTypeResolverMock.Object).AddPerformanceMonitor(performanceMonitor.Object); " is 273.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_WhenNoEventHandlersFound_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "            performanceMonitor.Verify(x => x.Accept(StreamName' "SomeType"' EventDate' 0' It.IsAny<IEnumerable<KeyValuePair<Type' Exception>>>())); " is 135.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "            var builder = new EventStreamSubscriberSettingsBuilder(_eventStoreHttpConnectionMock.Object' _eventHandlerResolverMock.Object' _streamPositionRepositoryMock.Object).WithCustomEventTypeResolver(_eventTypeResolverMock.Object).AddPerformanceMonitor(performanceMonitor1.Object' performanceMonitor2.Object); " is 302.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "            await _subscriber.InvokeMessageHandlersForEventMessageAsync(StreamName' typeof(object)' handlers' new object()' EventInfo); " is 123.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "            performanceMonitor1.Verify(x => x.Accept(StreamName' typeof(object).FullName' EventDate' 2' It.IsAny<IEnumerable<KeyValuePair<Type' Exception>>>())); " is 149.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The length of the statement  "            performanceMonitor2.Verify(x => x.Accept(StreamName' typeof(object).FullName' EventDate' 2' It.IsAny<IEnumerable<KeyValuePair<Type' Exception>>>())); " is 149.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateErrorInfoWhenAHandlerBlows,The length of the statement  "            performanceMonitor.Setup(x => x.Accept(StreamName' typeof(object).FullName' EventDate' 1' It.IsAny<IEnumerable<KeyValuePair<Type' Exception>>>())).Callback<string' string' DateTime' int' IEnumerable<KeyValuePair<Type' Exception>>>( " is 231.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateErrorInfoWhenAHandlerBlows,The length of the statement  "                    exceptions.Should().BeEquivalentTo(new[] { new KeyValuePair<Type' Exception>(handler.Object.GetType()' expectedException) }); " is 125.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateErrorInfoWhenAHandlerBlows,The length of the statement  "            var builder = new EventStreamSubscriberSettingsBuilder(_eventStoreHttpConnectionMock.Object' _eventHandlerResolverMock.Object' _streamPositionRepositoryMock.Object).WithCustomEventTypeResolver(_eventTypeResolverMock.Object).AddPerformanceMonitor(performanceMonitor.Object); " is 273.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateErrorInfoWhenAHandlerBlows,The length of the statement  "            await _subscriber.InvokeMessageHandlersForEventMessageAsync(StreamName' typeof(object)' new[] { handler.Object }' new object()' EventInfo); " is 139.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeCorrectHandlerOverloadForType,The length of the statement  "            await _subscriber.InvokeMessageHandlersForEventMessageAsync(StreamName' eventType' handlers' Activator.CreateInstance(eventType)' EventInfo); " is 141.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_ShouldAttemptToRetrieveCorrectEvent,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(It.IsAny<string>()' It.IsAny<int>())).Returns(async () => result); " is 124.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventCannotBeRead_ReturnAppropriateResult,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(It.IsAny<string>()' It.IsAny<int>())).Returns(async () => result); " is 124.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasNoHandlers_ReturnAppropriateResult,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(It.IsAny<string>()' It.IsAny<int>())).Returns(async () => result); " is 124.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_ReturnAppropriateResult,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(It.IsAny<string>()' It.IsAny<int>())).Returns(async () => result); " is 124.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_AndHandlerThrowsAnException_Return_AppropriateResult,The length of the statement  "            _eventHandlerResolverMock.Setup(x => x.GetHandlersOf(It.IsAny<Type>())).Returns(new[] { new HandlerThatThrowsAnException() }); " is 126.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_AndHandlerThrowsAnException_Return_AppropriateResult,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(It.IsAny<string>()' It.IsAny<int>())).Returns(async () => result); " is 124.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_AndHandlerThrowsAnException_ExceptionShouldBeRecorded,The length of the statement  "            _eventHandlerResolverMock.Setup(x => x.GetHandlersOf(It.IsAny<Type>())).Returns(new[] { new HandlerThatThrowsAnException() }); " is 126.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_AndHandlerThrowsAnException_ExceptionShouldBeRecorded,The length of the statement  "            _eventStoreHttpConnectionMock.Setup(x => x.ReadEventAsync(It.IsAny<string>()' It.IsAny<int>())).Returns(async () => result); " is 124.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_AndHandlerThrowsAnException_ExceptionShouldBeRecorded,The length of the statement  "            invocationResult.Errors[typeof(HandlerThatThrowsAnException)].Message.Should().Be(HandlerThatThrowsAnException.SomeException.Message); " is 134.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,Setup,The length of the statement  "            _builder = new EventStreamSubscriberSettingsBuilder(_connectionMock.Object' _eventHandlerResolverMock.Object' _streamPositionRepositoryMock.Object).WithCustomEventTypeResolver(_eventTypeResolverMock.Object); " is 207.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WhenANullPerformanceMonitorsAreAdded_PerformanceMonitorsShouldContainSaidPerformanceMonitors,The length of the statement  "            ((EventStreamSubscriberSettings)_builder).PerformanceMonitors.Should().Contain(new[]{firstExpected' secondExpected' thirdExpected}); " is 132.
Long Statement,JG.EventStore.Http.SubscriberHost.Tests,Yeah,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Yeah.cs,Test,The length of the statement  "            var subscriber = EventStreamSubscriber.Create(new EventStreamSubscriberSettingsBuilder(connection' resolver.Object ' new MemoryBackedStreamPositionRepositoryForDebugging())); " is 174.
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,UpdateMonitor_stream_should_be_behind_when_0_interval,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5)' SubscriberId);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,UpdateMonitor_any_stream_should_be_behind_when_some_stream_has_0_interval,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5)' SubscriberId);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_a_stream,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5)' SubscriberId);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_null_when_stream_not_present,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5)' SubscriberId);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_every_stream,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5)' SubscriberId);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_every_stream,The following statement contains a magic number: _monitor.GetStreamsIntervalStats().Should().HaveCount(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_every_stream_with_correct_values,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5)' SubscriberId);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_every_stream_with_correct_values,The following statement contains a magic number: stats.Should().HaveCount(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_every_subscriberId_with_correct_values,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5)' SubscriberId);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTestsWithExplicitSubscriberId.cs,Monitor_stats_should_return_stats_for_every_subscriberId_with_correct_values,The following statement contains a magic number: stats.Should().HaveCount(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,UpdateMonitor_strem_should_be_behind_when_0_interval,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,UpdateMonitor_any_stream_should_be_behind_when_some_stream_has_0_interval,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,Monitor_stats_should_return_stats_for_a_stream,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,Monitor_stats_should_return_null_when_stream_not_present,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,Monitor_stats_should_return_stats_for_every_stream,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,Monitor_stats_should_return_stats_for_every_stream,The following statement contains a magic number: _monitor.GetStreamsIntervalStats().Should().HaveCount(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,Monitor_stats_should_return_stats_for_every_stream_with_correct_values,The following statement contains a magic number: _monitor.UpdateEventStreamSubscriberIntervalMonitor(StreamName' TimeSpan.FromMilliseconds(-5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,StreamSubscriberIntervalMonitorTest,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\StreamSubscriberIntervalMonitorTests.cs,Monitor_stats_should_return_stats_for_every_stream_with_correct_values,The following statement contains a magic number: stats.Should().HaveCount(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithSuppliedPeriodIfPassed,The following statement contains a magic number: _subscriber.SubscribeTo(It.IsAny<string>()' It.IsAny<string>()' TimeSpan.FromDays(123));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithSuppliedPeriodIfPassed,The following statement contains a magic number: _subscriptionTimerManagerMock.Verify(x => x.Add(It.IsAny<string>()' It.IsAny<string>()' TimeSpan.FromDays(123)' It.IsAny<Func<Task>>()' It.IsAny<Action>()));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithDefaultPeriodIfNoneIsPassed,The following statement contains a magic number: var builder = new EventStreamSubscriberSettingsBuilder(_eventStoreHttpConnectionMock.Object' _eventHandlerResolverMock.Object' _streamPositionRepositoryMock.Object).WithDefaultPollingInterval(TimeSpan.FromDays(456)).WithCustomEventTypeResolver(_eventTypeResolverMock.Object).WithCustomSubscriptionTimerManager(_subscriptionTimerManagerMock.Object);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,SubscribeTo_ShouldInvokeSubscriptionManagerWithDefaultPeriodIfNoneIsPassed,The following statement contains a magic number: _subscriptionTimerManagerMock.Verify(x => x.Add(It.IsAny<string>()' It.IsAny<string>()' TimeSpan.FromDays(456)' It.IsAny<Func<Task>>()' It.IsAny<Action>()));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventsFound_ShouldImmediatelyRepoll,The following statement contains a magic number: _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback(                  () =>                  {                      if (count++ == 3000)                      {                          streamSliceResult.Entries.Clear();                      }                  });
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldKeepRetryingUntilItsFound,The following statement contains a magic number: _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback(                  () =>                  {                      if (count++ == 3000)                      {                          streamSliceResult.Entries.Clear();                      }                  });
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldKeepRetryingUntilItsFound,The following statement contains a magic number: _eventStoreHttpConnectionMock.Verify(x => x.ReadEventBodyAsync(It.IsAny<Type>()' It.IsAny<string>())' Times.Exactly(4));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfEventBodyNotFound_ShouldStopRetryingWhenItReachesMaxRetryCount,The following statement contains a magic number: _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback(                  () =>                  {                      if (count++ == 3000)                      {                          streamSliceResult.Entries.Clear();                      }                  });
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_IfUnsubscribed_ShouldNotRepoll,The following statement contains a magic number: _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback(                  () =>                  {                      if (count++ == 2)                      {                          streamSliceResult.Entries.Clear();                      }                  });
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_ShouldStoreStreamPositionAfterHandlersInvoked_EvenIfNoneWereFound,The following statement contains a magic number: var streamSliceResult = new StreamEventsSlice              {                  Entries = new List<BasicEventInfo> { new BasicEventInfo { PositionEventNumber = 123 } }              };
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_ShouldStoreStreamPositionAfterHandlersInvoked_EvenIfNoneWereFound,The following statement contains a magic number: _streamPositionRepositoryMock.Verify(x => x.SetPositionForAsync(StreamName' SubscriberId' 123));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,PollAsync_WhenNoEventHandlersFound_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The following statement contains a magic number: _eventStoreHttpConnectionMock.Setup(x => x.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>())).Returns(async () => streamSliceResult).Callback(                  () =>                  {                      if (count++ == 2)                      {                          streamSliceResult.Entries.Clear();                      }                  });
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The following statement contains a magic number: performanceMonitor1.Verify(x => x.Accept(StreamName' typeof(object).FullName' EventDate' 2' It.IsAny<IEnumerable<KeyValuePair<Type' Exception>>>()));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,InvokeMessageHandlersForEventMessageAsync_ShouldInvokeAllRegisteredPerformanceMonitorsWithAppropriateInfo,The following statement contains a magic number: performanceMonitor2.Verify(x => x.Accept(StreamName' typeof(object).FullName' EventDate' 2' It.IsAny<IEnumerable<KeyValuePair<Type' Exception>>>()));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_ShouldAttemptToRetrieveCorrectEvent,The following statement contains a magic number: await _subscriber.AdHocInvokeAsync(StreamName' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_ShouldAttemptToRetrieveCorrectEvent,The following statement contains a magic number: _eventStoreHttpConnectionMock.Verify(x=>x.ReadEventAsync(It.Is<string>(s=>s==StreamName)' It.Is<int>(i=>i==123)));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventCannotBeRead_ReturnAppropriateResult,The following statement contains a magic number: var invocationResult = await _subscriber.AdHocInvokeAsync(StreamName' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasNoHandlers_ReturnAppropriateResult,The following statement contains a magic number: var invocationResult = await _subscriber.AdHocInvokeAsync(StreamName' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_ReturnAppropriateResult,The following statement contains a magic number: var invocationResult = await _subscriber.AdHocInvokeAsync(StreamName' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_AndHandlerThrowsAnException_Return_AppropriateResult,The following statement contains a magic number: var invocationResult = await _subscriber.AdHocInvokeAsync(StreamName' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberTests.cs,AdHocInvokeAsync_IfEventHasHandlers_AndHandlerThrowsAnException_ExceptionShouldBeRecorded,The following statement contains a magic number: var invocationResult = await _subscriber.AdHocInvokeAsync(StreamName' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,GetPositionFor_ShouldReturnStoredValueWhenNoStreamCanBeFound,The following statement contains a magic number: await sut.SetPositionForAsync(StreamName' SubscriberId' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,GetPositionFor_ShouldReturnStoredValueWhenNoStreamCanBeFound,The following statement contains a magic number: result.Should().Be(123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleStreams,The following statement contains a magic number: await sut.SetPositionForAsync(StreamName' SubscriberId' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleStreams,The following statement contains a magic number: await sut.SetPositionForAsync("def"' SubscriberId' 456);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleStreams,The following statement contains a magic number: result.Should().Be(123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleStreams,The following statement contains a magic number: result.Should().Be(456);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleSubscriberIds,The following statement contains a magic number: await sut.SetPositionForAsync(StreamName' SubscriberId' 123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleSubscriberIds,The following statement contains a magic number: await sut.SetPositionForAsync(StreamName' "XYZ"' 456);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleSubscriberIds,The following statement contains a magic number: result.Should().Be(123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,MemoryBackedStreamPositionRepositoryForDebuggingTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\MemoryBackedStreamPositionRepositoryForDebuggingTests.cs,ShouldWorkForMultipleSubscriberIds,The following statement contains a magic number: result.Should().Be(456);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WithDefaultPollingInterval_ShouldStoreSpecifiedPollingInterval,The following statement contains a magic number: var expected = TimeSpan.FromDays(123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WhenDefaultPollingIntervalNotSet_ShouldStore30SecondsPollingInterval,The following statement contains a magic number: ((EventStreamSubscriberSettings)_builder).DefaultPollingInterval.Should().Be(TimeSpan.FromSeconds(30));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WithSliceSizeOf_ShouldStoreRequiredSliceSize,The following statement contains a magic number: var expectedSliceSize = 123;
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WhenSliceSizeNotSet_ShouldDefaultTo100,The following statement contains a magic number: ((EventStreamSubscriberSettings)_builder).SliceSize.Should().Be(100);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WhenMessageProcessingStatsWindowPeriodNotSet_ShouldDefaultToTheStandardMessageProcessingStatsWindowPeriod,The following statement contains a magic number: ((EventStreamSubscriberSettings)_builder).MessageProcessingStatsWindowPeriod.Should().Be(TimeSpan.FromSeconds(30));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WithMessageProcessingStatsWindowCountOf_ShouldStoreRequiredStatsWindowCount,The following statement contains a magic number: var expected = 123;
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WhenMessageProcessingStatsWindowCountNotSet_ShouldDefaultToTheStandardMessageProcessingStatsWindowPeriod,The following statement contains a magic number: ((EventStreamSubscriberSettings)_builder).MessageProcessingStatsWindowPeriod.Should().Be(TimeSpan.FromSeconds(30));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WithLongPollingTimeoutOf_ShouldStoreRequiredLongPollingTimeout,The following statement contains a magic number: var expected = TimeSpan.FromSeconds(123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WithEventNotFoundRetryCountOf_ShouldStoreEventNotFoundRetryCount,The following statement contains a magic number: var expected = 123;
Magic Number,JG.EventStore.Http.SubscriberHost.Tests,EventStreamSubscriberSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\EventStreamSubscriberSettingsBuilderTests.cs,WithEventNotFoundRetryDelayOf_ShouldStoreEventNotFoundRetryDelay,The following statement contains a magic number: var expected = TimeSpan.FromSeconds(123);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,QueueStats_AfterThreeItemsAdded_ShouldYieldCorectCountsThree,The following statement contains a magic number: sut.QueueStats().Should().BeEquivalentTo(new Dictionary<string' long>{{"A"'2}'{"B"'1}});
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,TotalProcessedEventCount_AfterItemsAdded_ShouldYieldCorrectCount,The following statement contains a magic number: sut.TotalProcessedEventCount.Should().Be(3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,GetProcessedEventsFor_AfterItemsAdded_ShouldYieldCorrectCounts,The following statement contains a magic number: sut.GetProcessedEventsFor("A").Should().Be(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,StartTime_ShouldBeCalculatedAccordingToCurrentTimeWhenNotSpecified,The following statement contains a magic number: sut.StartTime.Should().BeWithin(TimeSpan.FromMilliseconds(50)).Before(DateTime.Now);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,StartTime_ShouldBeSetAccordinglyWhenSpecified,The following statement contains a magic number: var expected = new DateTime(1234' 5' 6);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,StartTime_ShouldBeSetAccordinglyWhenSpecified,The following statement contains a magic number: var expected = new DateTime(1234' 5' 6);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,StartTime_ShouldBeSetAccordinglyWhenSpecified,The following statement contains a magic number: var expected = new DateTime(1234' 5' 6);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceRecordTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerofmanceRecordTests.cs,EndTime_ShouldBeCalculatedCorrectlyAccordingToRecordPeriod,The following statement contains a magic number: var recordPeriod = TimeSpan.FromMinutes(5);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,Records_ForEmptyCounter_YieldsEmptySingleResultSetForCurrentPeriod,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMinutes(5)' It.IsAny<int>());
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,Records_ForEmptyCounter_YieldsEmptySingleResultSetForCurrentPeriod,The following statement contains a magic number: item.StartTime.Should().BeWithin(TimeSpan.FromMilliseconds(50)).Before(DateTime.Now);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,Records_ForEmptyCounter_YieldsEmptySingleResultSetForCurrentPeriod,The following statement contains a magic number: item.EndTime.Should().BeWithin(TimeSpan.FromMilliseconds(50)).Before(DateTime.Now.AddMinutes(5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,Records_ForEmptyCounter_YieldsEmptySingleResultSetForCurrentPeriod,The following statement contains a magic number: item.EndTime.Should().BeWithin(TimeSpan.FromMilliseconds(50)).Before(DateTime.Now.AddMinutes(5));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldNotGrowQueueIfNewEventIsWithinTheLatestTimePeriod,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromHours(1)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldNotGrowQueueIfNewEventIsWithinTheLatestTimePeriod,The following statement contains a magic number: await Task.Delay(5);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldNotGrowQueueIfNewEventIsWithinTheLatestTimePeriod,The following statement contains a magic number: await Task.Delay(5);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldNotGrowQueueIfNewEventIsWithinTheLatestTimePeriod,The following statement contains a magic number: await Task.Delay(5);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldGrowQueueIfNewEventIsLaterThanLatestTimePeriod,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(50)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldGrowQueueIfNewEventIsLaterThanLatestTimePeriod,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(50)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldGrowQueueIfNewEventIsLaterThanLatestTimePeriod,The following statement contains a magic number: await Task.Delay(60);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldGrowQueueIfNewEventIsLaterThanLatestTimePeriod,The following statement contains a magic number: sut.Records.Should().HaveCount(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldGrowQueueIfNewEventIsLaterThanLatestTimePeriod,The following statement contains a magic number: await Task.Delay(60);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,MessageProcessed_ShouldGrowQueueIfNewEventIsLaterThanLatestTimePeriod,The following statement contains a magic number: sut.Records.Should().HaveCount(3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldGrowUpToMaximumSize,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(50)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldGrowUpToMaximumSize,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(50)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldGrowUpToMaximumSize,The following statement contains a magic number: await Task.Delay(60);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldGrowUpToMaximumSize,The following statement contains a magic number: sut.Records.Should().HaveCount(2);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldGrowUpToMaximumSize,The following statement contains a magic number: await Task.Delay(60);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldGrowUpToMaximumSize,The following statement contains a magic number: sut.Records.Should().HaveCount(3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldGrowUpToMaximumSize,The following statement contains a magic number: sut.Records.Should().HaveCount(3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldNotOverflowMaxRecordCount,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(30)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldNotOverflowMaxRecordCount,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(30)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldNotOverflowMaxRecordCount,The following statement contains a magic number: await Task.Delay(150);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldNotOverflowMaxRecordCount,The following statement contains a magic number: records.Count.Should().Be(3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldFillInGapsInBuketsIfNecessary,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(30)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldFillInGapsInBuketsIfNecessary,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(30)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldFillInGapsInBuketsIfNecessary,The following statement contains a magic number: await Task.Delay(150);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldFillInGapsInBuketsIfNecessary,The following statement contains a magic number: var last = records.Skip(2).First();
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldFillInGapsInBuketsIfNecessary,The following statement contains a magic number: last.EndTime.Should().BeWithin(TimeSpan.FromMilliseconds(50)).After(now);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,TidyRecords_WhenAddingRecords_ShouldFillInGapsInBuketsIfNecessary,The following statement contains a magic number: last.EndTime.Should().BeWithin(TimeSpan.FromMilliseconds(50)).Before(now);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,RecordsAfter_ShouldReturnAllRecordsStartingAfterTheSuppliedDate,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(30)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,RecordsAfter_ShouldReturnAllRecordsStartingAfterTheSuppliedDate,The following statement contains a magic number: var sut = new PerformanceStats(TimeSpan.FromMilliseconds(30)' 3);
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,RecordsAfter_ShouldReturnAllRecordsStartingAfterTheSuppliedDate,The following statement contains a magic number: var first = new PerformanceRecord(It.IsAny<TimeSpan>()' new DateTime(1' 2' 3));
Magic Number,JG.EventStore.Http.SubscriberHost.Tests.Monitoring,PerformanceStatsTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.SubscriberHost.Tests\Monitoring\PerformanceStatsTests.cs,RecordsAfter_ShouldReturnAllRecordsStartingAfterTheSuppliedDate,The following statement contains a magic number: var first = new PerformanceRecord(It.IsAny<TimeSpan>()' new DateTime(1' 2' 3));
