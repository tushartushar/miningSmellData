Implementation smell,Namespace,Class,File,Method,Description
Long Statement,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,AppendToStreamAsync_MediaTypeShouldBeUTF8VendorSpecificJson,The length of the statement  "                request.Content.Headers.GetValues("Content-Type").ShouldBeEquivalentTo(new[] { "application/vnd.eventstore.events+json; charset=utf-8" }); " is 138.
Long Statement,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadStreamEventsForwardAsync_Http404ShouldYieldANotFoundResult,The length of the statement  "            var result = await _connection.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>()); " is 129.
Long Statement,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadStreamEventsForwardAsync_Http410ShouldYieldANotFoundResult,The length of the statement  "            var result = await _connection.ReadStreamEventsForwardAsync(StreamName' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<TimeSpan?>()); " is 129.
Magic Number,JustGiving.EventStore.Http.Client.Tests,ConnectionSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\ConnectionSettingsBuilderTests.cs,WithConnectionTimeoutOf_ShouldStoreRequiredTimeout,The following statement contains a magic number: var expectedTimeout = TimeSpan.FromSeconds(30);
Magic Number,JustGiving.EventStore.Http.Client.Tests,ConnectionSettingsBuilderTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\ConnectionSettingsBuilderTests.cs,WhenConnectionNameNotSet_ShouldDefaultToAUniqueConnectionName,The following statement contains a magic number: var expectedGuid = connectionName.Substring(3);
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,GetClient_WhenNoDefaultTimeoutIsConfigured_TheClientShouldBe100Seconds,The following statement contains a magic number: client.Timeout.Should().Be(TimeSpan.FromSeconds(100));
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,GetClient_WhenADefaultTimeoutIsConfigured_TheClientShouldHaveTheSpecifiedTimeout,The following statement contains a magic number: client.Timeout.Should().Be(TimeSpan.FromSeconds(30));
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,DeleteStreamAsync_ShouldContainExpectedVersionHeader,The following statement contains a magic number: await DeleteTest(123' It.IsAny<bool>()' (client' request) =>              {                  request.Headers.GetValues("ES-ExpectedVersion").ShouldBeEquivalentTo(new[] { "123" });              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,AppendToStreamAsync_ShouldContainExpectedVersionHeader,The following statement contains a magic number: await AppendToStreamTest(123' It.IsAny<NewEventData>()' (client' request) =>              {                  request.Headers.GetValues("ES-ExpectedVersion").ShouldBeEquivalentTo(new[] { "123" });              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadEventAsync_KnownEventURIShouldBeCorrect,The following statement contains a magic number: await ReadEventTest(123' (client' request) =>              {                  request.RequestUri.AbsoluteUri.Should().Be(string.Format("{0}/streams/{1}/123"' Endpoint' StreamName));              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadEventBodyAsync_KnownEventURIShouldBeCorrect,The following statement contains a magic number: await ReadEventBodyTest(123' (client' request) =>              {                  request.RequestUri.AbsoluteUri.Should().Be(string.Format("{0}/streams/{1}/123"' Endpoint' StreamName));              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,TypedReadEventBodyAsync_AValidStatusCodeShouldReturnATypedObject,The following statement contains a magic number: result.Id.Should().Be(123);
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,UntypedReadEventBodyAsync_AValidStatusCodeShouldReturnATypedObject,The following statement contains a magic number: ((SomeClass)result).Id.Should().Be(123);
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadStreamEventsForwardAsync_UsesEmbedRichQueryToFetchEventTypeInfo,The following statement contains a magic number: await ReadStreamEventsForwardTest(123' 15' It.IsAny<TimeSpan?>()' (client' request) =>              {                  request.RequestUri.AbsoluteUri.Should().Contain("?embed=rich");              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadStreamEventsForwardAsync_UsesEmbedRichQueryToFetchEventTypeInfo,The following statement contains a magic number: await ReadStreamEventsForwardTest(123' 15' It.IsAny<TimeSpan?>()' (client' request) =>              {                  request.RequestUri.AbsoluteUri.Should().Contain("?embed=rich");              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadStreamEventsForwardAsync_KnownEventURIShouldBeCorrect,The following statement contains a magic number: await ReadStreamEventsForwardTest(123' 15' It.IsAny<TimeSpan?>()' (client' request) =>              {                  request.RequestUri.AbsoluteUri.Should().Contain(string.Format("{0}/streams/{1}/123/forward/15"' Endpoint' StreamName));              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadStreamEventsForwardAsync_KnownEventURIShouldBeCorrect,The following statement contains a magic number: await ReadStreamEventsForwardTest(123' 15' It.IsAny<TimeSpan?>()' (client' request) =>              {                  request.RequestUri.AbsoluteUri.Should().Contain(string.Format("{0}/streams/{1}/123/forward/15"' Endpoint' StreamName));              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,ReadStreamEventsForwardAsync_ESLongPollingShouldBetSentInHeaderIfRequested,The following statement contains a magic number: await ReadStreamEventsForwardTest(It.IsAny<int>()' It.IsAny<int>()' TimeSpan.FromSeconds(30)' (client' request) =>              {                  IEnumerable<string> headers;                  var found = request.Headers.TryGetValues("ES-LongPoll"' out headers);                  found.Should().BeTrue();                  headers.Count().Should().Be(1);                  headers.First().Should().Be("30");              });
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,GetCanonicalURIFor_ShouldCreate_Correct_URIs,The following statement contains a magic number: _connection.GetCanonicalURIFor("abc"' 123).Should().Be("http://some-endpoint/streams/abc/123");
Magic Number,JustGiving.EventStore.Http.Client.Tests,EventStoreHttpConnectionTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\EventStoreHttpConnectionTests.cs,GetConnectionSettings,The following statement contains a magic number: var cs = new ConnectionSettingsBuilder()                  .SetDefaultUserCredentials(new UserCredentials(Username' Password))                  .WithConnectionTimeoutOf(TimeSpan.FromSeconds(30))                  .WithHttpClientProxy(_httpClientProxyMock.Object);
Magic Number,JustGiving.EventStore.Http.Client.Tests,NewEventDataTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\NewEventDataTests.cs,WhenCreating_ShouldSetDataCorrectly,The following statement contains a magic number: var expectedData = new { Id = 123' Foo = "bar" };
Magic Number,JustGiving.EventStore.Http.Client.Tests,NewEventDataTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\NewEventDataTests.cs,WhenCreating_ShouldSetMetadataCorrectly,The following statement contains a magic number: var metadata = new { Id = 123' Foo = "bar" };
Magic Number,JustGiving.EventStore.Http.Client.Tests,NewEventDataTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\NewEventDataTests.cs,WhenCreatingWithoutSpecifyingEventId_ShouldCreateAnEventId,The following statement contains a magic number: var expectedData = new { Id = 123' Foo = "bar" };
Magic Number,JustGiving.EventStore.Http.Client.Tests,NewEventDataTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\NewEventDataTests.cs,WhenCreatingAndSpecifyingEventId_ShouldUsedPassedEventId,The following statement contains a magic number: var expectedData = new { Id = 123' Foo = "bar" };
Magic Number,JustGiving.EventStore.Http.Client.Tests,RecordedEventTests,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\RecordedEventTests.cs,WhenJsonContainsADataField_GetObjectShouldReturnARehydratedObject,The following statement contains a magic number: result.Id.Should().Be(456);
Magic Number,JustGiving.EventStore.Http.Client.Tests,TestHarness,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\Yeah.cs,Load,The following statement contains a magic number: await Insert(2);
Magic Number,JustGiving.EventStore.Http.Client.Tests,TestHarness,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\Yeah.cs,Retrieve,The following statement contains a magic number: await Insert(7);
Magic Number,JustGiving.EventStore.Http.Client.Tests,TestHarness,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\Yeah.cs,Retrieve,The following statement contains a magic number: var event1 = await _connection.ReadEventAsync(StreamName' 4);
Magic Number,JustGiving.EventStore.Http.Client.Tests,TestHarness,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\Yeah.cs,Retrieve,The following statement contains a magic number: var event2 = await _connection.ReadEventAsync(StreamName' 6);
Magic Number,JustGiving.EventStore.Http.Client.Tests,TestHarness,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\Yeah.cs,ListForwards,The following statement contains a magic number: await Insert(20);
Magic Number,JustGiving.EventStore.Http.Client.Tests,TestHarness,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\Yeah.cs,ListForwards,The following statement contains a magic number: var @event = await _connection.ReadStreamEventsForwardAsync(StreamName' 10' 5' null);
Magic Number,JustGiving.EventStore.Http.Client.Tests,TestHarness,D:\research\architectureSmells\repos\JustGiving_JustGiving.EventStore.Http\src\JustGiving.EventStore.Http.Client.Tests\Yeah.cs,ListForwards,The following statement contains a magic number: var @event = await _connection.ReadStreamEventsForwardAsync(StreamName' 10' 5' null);
