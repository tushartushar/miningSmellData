Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,KansasState.Ssw.ScilabCore,ScilabUnixInterop,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabUnixInterop.cs,createNamedMatrixOfDouble,The method has 5 parameters.
Long Parameter List,KansasState.Ssw.ScilabCore,ScilabUnixInterop,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabUnixInterop.cs,readNamedMatrixOfDouble,The method has 5 parameters.
Long Parameter List,KansasState.Ssw.ScilabCore,ScilabWinInterop,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabWinInterop.cs,createNamedMatrixOfDouble,The method has 5 parameters.
Long Parameter List,KansasState.Ssw.ScilabCore,ScilabWinInterop,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabWinInterop.cs,readNamedMatrixOfDouble,The method has 5 parameters.
Long Statement,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,GetSetTimeCommand,The length of the statement  "	return variableName + " = [" + dt.Year + "'" + dt.Month + "'" + dt.Day + "'" + dt.Hour + "'" + dt.Minute + "'" + dt.Second + "'" + dt.Millisecond + "];"; " is 153.
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: foreach (IExchangeItem item in inputs) {  	if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  		throw new Exception ("Input item " + item.Quantity.ID + " name is too long (limit to 20)");  	}  	_scilab.SendScilabJob ("global " + GetIdArrayName (item) + ";");  	_scilab.SendScilabJob ("global " + GetValueArrayName (item) + ";");  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: foreach (IExchangeItem item in inputs) {  	if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  		throw new Exception ("Input item " + item.Quantity.ID + " name is too long (limit to 20)");  	}  	_scilab.SendScilabJob ("global " + GetIdArrayName (item) + ";");  	_scilab.SendScilabJob ("global " + GetValueArrayName (item) + ";");  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  	throw new Exception ("Input item " + item.Quantity.ID + " name is too long (limit to 20)");  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  	throw new Exception ("Input item " + item.Quantity.ID + " name is too long (limit to 20)");  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: foreach (IExchangeItem item in outputs) {  	if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  		throw new Exception ("Output item " + item.Quantity.ID + " name is too long (limit to 20)");  	}  	// declare the globals for the outputs  	_scilab.SendScilabJob ("global " + GetIdArrayName (item) + ";");  	_scilab.SendScilabJob ("global " + GetValueArrayName (item) + ";");  	// declare the ids array for the item  	SetIdArray (item);  	// initialize the output values  	InitializeValuesArray (item);  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: foreach (IExchangeItem item in outputs) {  	if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  		throw new Exception ("Output item " + item.Quantity.ID + " name is too long (limit to 20)");  	}  	// declare the globals for the outputs  	_scilab.SendScilabJob ("global " + GetIdArrayName (item) + ";");  	_scilab.SendScilabJob ("global " + GetValueArrayName (item) + ";");  	// declare the ids array for the item  	SetIdArray (item);  	// initialize the output values  	InitializeValuesArray (item);  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  	throw new Exception ("Output item " + item.Quantity.ID + " name is too long (limit to 20)");  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,Start,The following statement contains a magic number: if (GetIdArrayName (item).Length > 24 || GetValueArrayName (item).Length > 24) {  	throw new Exception ("Output item " + item.Quantity.ID + " name is too long (limit to 20)");  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,RandomPrefix,The following statement contains a magic number: for (var i = 0; i < 2; i++) {  	ch = (char)Random.Next ('A'' 'Z' + 1);  	builder.Append (ch);  }  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,InitializeValuesArray,The following statement contains a magic number: for (var i = 0; i < item.ElementSet.ElementCount; i++)  	values [i] = -999;  
Magic Number,KansasState.Ssw.ScilabCore,ScilabAdapter,C:\repos\CNH-Hyper-Extractive_simple-script-wrapper\Source\ScilabCore\ScilabAdapter.cs,InitializeValuesArray,The following statement contains a magic number: values [i] = -999;  
