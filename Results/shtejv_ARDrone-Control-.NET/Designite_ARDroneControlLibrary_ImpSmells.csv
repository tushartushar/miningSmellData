Implementation smell,Namespace,Class,File,Method,Description
Long Method,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The method has 133 lines of code.
Complex Method,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DetermineGeneralConfiguration,Cyclomatic complexity of the method is 8
Complex Method,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,IsCommandPossible,Cyclomatic complexity of the method is 9
Complex Method,ARDrone.Control.Utils,TelnetConnection,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\TelnetInterface.cs,ParseTelnet,Cyclomatic complexity of the method is 9
Complex Method,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadHeader,Cyclomatic complexity of the method is 8
Complex Method,NativeWifi,WlanClient,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,OnWlanNotification,Cyclomatic complexity of the method is 10
Long Parameter List,ARDrone.Control.Workers,CommandSender,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\CommandSender.cs,CommandSender,The method has 5 parameters. Parameters: networkConnector' remoteIpAddress' port' timeoutValue' defaultCameraMode
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanQueryInterface,The method has 7 parameters. Parameters: clientHandle' interfaceGuid' opCode' pReserved' dataSize' ppData' wlanOpcodeValueType
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanSetInterface,The method has 6 parameters. Parameters: clientHandle' interfaceGuid' opCode' dataSize' pData' pReserved
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanScan,The method has 5 parameters. Parameters: clientHandle' interfaceGuid' pDot11Ssid' pIeData' pReserved
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanGetAvailableNetworkList,The method has 5 parameters. Parameters: clientHandle' interfaceGuid' flags' reservedPtr' availableNetworkListPtr
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanSetProfile,The method has 8 parameters. Parameters: clientHandle' interfaceGuid' flags' profileXml' allUserProfileSecurity' overwrite' pReserved' reasonCode
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanGetProfile,The method has 7 parameters. Parameters: clientHandle' interfaceGuid' profileName' pReserved' profileXml' flags' grantedAccess
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanRegisterNotification,The method has 7 parameters. Parameters: clientHandle' notifSource' ignoreDuplicate' funcCallback' callbackContext' reserved' prevNotifSource
Long Parameter List,NativeWifi,Wlan,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,WlanGetNetworkBssList,The method has 7 parameters. Parameters: clientHandle' interfaceGuid' dot11SsidInt' dot11BssType' securityEnabled' reservedPtr' wlanBssList
Long Parameter List,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,ConnectSynchronously,The method has 5 parameters. Parameters: connectionMode' bssType' ssid' flags' connectTimeout
Long Identifier,ARDrone.Control,DroneConfig,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneConfig.cs,,The length of the parameter DefaultSupportedFirmwareVersion is 31.
Long Identifier,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,,The length of the parameter thresholdBetweenSettingCommands is 31.
Long Identifier,ARDrone.Control.Workers,NetworkConnector,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NetworkConnector.cs,,The length of the parameter notificationCodeScanSuccessful is 30.
Long Identifier,ARDrone.Control.Workers,NetworkConnector,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NetworkConnector.cs,,The length of the parameter currentlyScannedNetworkInterfaceNumber is 38.
Long Identifier,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,,The length of the parameter currentNavigationDataHeaderStruct is 33.
Long Statement,ARDrone.Control.Commands,FlightMoveCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\FlightMoveCommand.cs,CreateCommand,The length of the statement  "            return String.Format("AT*PCMD={0}'{1}'{2}'{3}'{4}'{5}\r"' sequenceNumber' 1' NormalizeValue(roll)' NormalizeValue(pitch)' NormalizeValue(gaz)' NormalizeValue(yaw)); " is 164.
Long Statement,ARDrone.Control.Commands,HoverModeCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\HoverModeCommand.cs,CreateCommand,The length of the statement  "            return String.Format("AT*PCMD={0}'{1}'{2}'{3}'{4}'{5}\r"' sequenceNumber' (mode == DroneHoverMode.Hover) ? 0 : 1' 0' 0' 0' 0); " is 126.
Long Statement,ARDrone.Control.Commands,PlayLedAnimationCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\PlayLedAnimationCommand.cs,CreateCommand,The length of the statement  "            return String.Format("AT*LED={0}'{1}'{2}'{3}\r"' sequenceNumber' (int)ledAnimation' NormalizeValue(frequency)' duration); " is 121.
Long Statement,ARDrone.Control.Data,DroneFirmwareVersion,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\DroneFirmwareVersion.cs,GetVersionRange,The length of the statement  "            MemberInfo memberInfo = typeof(SupportedFirmwareVersion).GetMember(supportedFirmwareVersion.ToString()).FirstOrDefault(); " is 121.
Long Statement,ARDrone.Control.Data,DroneFirmwareVersion,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\DroneFirmwareVersion.cs,GetVersionRange,The length of the statement  "                VersionBetweenAttribute attribute = (VersionBetweenAttribute)memberInfo.GetCustomAttributes(typeof(VersionBetweenAttribute)' false).FirstOrDefault(); " is 149.
Long Statement,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,CreateDroneWorkers,The length of the statement  "            networkConnector = new NetworkConnector(droneConfig.DroneNetworkIdentifierStart' droneConfig.StandardOwnIpAddress' droneConfig.DroneIpAddress); " is 143.
Long Statement,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,CreateDroneWorkers,The length of the statement  "            videoDataRetriever = new VideoDataRetriever(networkConnector' droneConfig.DroneIpAddress' droneConfig.VideoPort' droneConfig.TimeoutValue); " is 139.
Long Statement,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,CreateDroneWorkers,The length of the statement  "            navigationDataRetriever = new NavigationDataRetriever(networkConnector' droneConfig.DroneIpAddress' droneConfig.NavigationPort' droneConfig.TimeoutValue); " is 154.
Long Statement,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,CreateDroneWorkers,The length of the statement  "            commandSender = new CommandSender(networkConnector' droneConfig.DroneIpAddress' droneConfig.CommandPort' droneConfig.TimeoutValue' droneConfig.DefaultCameraMode); " is 162.
Long Statement,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,CreateDroneWorkers,The length of the statement  "            networkSanityChecker = new NetworkSanityChecker(videoDataRetriever' navigationDataRetriever' commandSender' droneConfig.FirmwareVersion); " is 137.
Long Statement,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,ProcessSanityCheckResult,The length of the statement  "                InvokeError(new Exception("Error while connecting to the drone. Have you connected to the drone network?"' e.Exception)); " is 121.
Long Statement,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,GetFirmwareVersionToUse,The length of the statement  "                DroneFirmwareVersion droneVersion = new DroneFirmwareVersion(internalDroneConfiguration.GeneralConfiguration.SoftwareVersion); " is 126.
Long Statement,ARDrone.Control.Utils,ConfigReader,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\ConfigReader.cs,GetSectionName,The length of the statement  "            Regex mainSectionRegex = new Regex(@"^\[(?<section>[a-zA-Z0-9_]+)\]$"' RegexOptions.Compiled);          // Matches [abc_9] " is 122.
Long Statement,ARDrone.Control.Utils,ConfigReader,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\ConfigReader.cs,GetEntryOption,The length of the statement  "            Regex optionRegex = new Regex(@"^(?<key>[a-zA-Z0-9_]+)\s*\=\s*(?<value>.*)$"' RegexOptions.Compiled);   // Matches abc_9 = [ bla ] " is 130.
Long Statement,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,DecodeFieldBytes,The length of the statement  "            streamLength += zeroCount + 1; // - position bit pointer to keep track off how many bits to consume later on the stream. " is 120.
Long Statement,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,DecodeFieldBytes,The length of the statement  "                temp = (int)(streamCode >> (32 - (zeroCount - 1))); // - (2) -> shift right to determine the addtional bits (number of additional bits is zerocount - 1) " is 152.
Long Statement,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,DecodeFieldBytes,The length of the statement  "                streamCode <<= zeroCount - 1; // - shift all of the run bits out of the way so the first bit is points to the first bit of the level field. " is 139.
Long Statement,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,DecodeFieldBytes,The length of the statement  "            streamLength += zeroCount + 1; // - position bit pointer to keep track off how many bits to consume later on the stream. " is 120.
Long Statement,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,DecodeFieldBytes,The length of the statement  "                streamCode >>= (32 - zeroCount);// - (2) -> shift right to determine the addtional bits (number of additional bits is zerocount) " is 128.
Long Statement,ARDrone.Control.Workers,NetworkConnector,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NetworkConnector.cs,TryToConnectToAvailableDroneNetwork,The length of the statement  "            currentWifiInterface.Connect(Wlan.WlanConnectionMode.DiscoveryUnsecure' network.Value.dot11BssType' network.Value.dot11Ssid' 0); " is 128.
Long Statement,ARDrone.Control.Workers,NetworkConnector,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NetworkConnector.cs,InvokeConnectionStateChange,The length of the statement  "                ConnectionStateChanged.Invoke(this' new DroneNetworkConnectionStateChangedEventArgs(currentInterfaceName' state' currentPingRetries' maxPingRetries)); " is 150.
Long Statement,ARDrone.Control.Workers,CommandSender,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\CommandSender.cs,CheckForDataRetriever,The length of the statement  "                throw new InvalidOperationException("The initialization state can only be acquired when Data Retriever has been set and started"); " is 130.
Long Statement,NativeWifi,WlanClient,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,GetStringForReasonCode,The length of the statement  "			StringBuilder sb = new StringBuilder(1024); // the 1024 size here is arbitrary; the WlanReasonCodeToString docs fail to specify a recommended size " is 146.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,GetInterfaceInt,The length of the statement  "					Wlan.WlanQueryInterface(client.clientHandle' info.interfaceGuid' opCode' IntPtr.Zero' out valueSize' out valuePtr' out opcodeValueType)); " is 137.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,ConvertAvailableNetworkListPtr,The length of the statement  "				Wlan.WlanAvailableNetworkListHeader availNetListHeader = (Wlan.WlanAvailableNetworkListHeader)Marshal.PtrToStructure(availNetListPtr' typeof(Wlan.WlanAvailableNetworkListHeader)); " is 179.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,ConvertAvailableNetworkListPtr,The length of the statement  "					availNets[i] = (Wlan.WlanAvailableNetwork)Marshal.PtrToStructure(new IntPtr(availNetListIt)' typeof(Wlan.WlanAvailableNetwork)); " is 128.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,ConvertBssListPtr,The length of the statement  "				Wlan.WlanBssListHeader bssListHeader = (Wlan.WlanBssListHeader)Marshal.PtrToStructure(bssListPtr' typeof(Wlan.WlanBssListHeader)); " is 130.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,GetNetworkBssList,The length of the statement  "					Wlan.WlanGetNetworkBssList(client.clientHandle' info.interfaceGuid' IntPtr.Zero' Wlan.Dot11BssType.Any' false' IntPtr.Zero' out bssListPtr)); " is 141.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,GetNetworkBssList,The length of the statement  "						Wlan.WlanGetNetworkBssList(client.clientHandle' info.interfaceGuid' ssidPtr' bssType' securityEnabled' IntPtr.Zero' out bssListPtr)); " is 133.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,SetProfile,The length of the statement  "						Wlan.WlanSetProfile(client.clientHandle' info.interfaceGuid' flags' profileXml' null' overwrite' IntPtr.Zero' out reasonCode)); " is 127.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,GetProfiles,The length of the statement  "					Wlan.WlanProfileInfoListHeader header = (Wlan.WlanProfileInfoListHeader) Marshal.PtrToStructure(profileListPtr' typeof(Wlan.WlanProfileInfoListHeader)); " is 152.
Long Statement,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,GetProfiles,The length of the statement  "						Wlan.WlanProfileInfo profileInfo = (Wlan.WlanProfileInfo) Marshal.PtrToStructure(new IntPtr(profileListIterator)' typeof(Wlan.WlanProfileInfo)); " is 144.
Complex Conditional,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,CheckFlightMoveCommand,The conditional expression  "Math.Abs(moveCommand.Roll - lastRollValue) >= thresholdBetweenSettingCommands ||                  Math.Abs(moveCommand.Pitch - lastPitchValue) >= thresholdBetweenSettingCommands ||                  Math.Abs(moveCommand.Yaw - lastYawValue) >= thresholdBetweenSettingCommands ||                  Math.Abs(moveCommand.Gaz - lastGazValue) >= thresholdBetweenSettingCommands"  is complex.
Complex Conditional,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,CheckFlightMoveCommand,The conditional expression  "moveCommand.Roll == 0.0f && moveCommand.Pitch == 0.0f &&                       moveCommand.Yaw == 0.0f && moveCommand.Gaz == 0.0f"  is complex.
Complex Conditional,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The conditional expression  "dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0"  is complex.
Empty Catch Block,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DetermineInternalConfiguration,The method has an empty catch block.
Empty Catch Block,ARDrone.Control,DroneConfig,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneConfig.cs,Load,The method has an empty catch block.
Empty Catch Block,ARDrone.Control.Network,NetworkWorker,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Network\NetworkWorker.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,ARDrone.Control.Network,NetworkWorker,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Network\NetworkWorker.cs,ProcessWorkerThreadInternally,The method has an empty catch block.
Empty Catch Block,ARDrone.Control.Network,NetworkWorker,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Network\NetworkWorker.cs,CreateEndpoint,The method has an empty catch block.
Empty Catch Block,ARDrone.Control.Network,TcpWorker,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Network\TcpWorker.cs,DisconnectFromSocket,The method has an empty catch block.
Empty Catch Block,ARDrone.Control.Network,TcpWorker,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Network\TcpWorker.cs,SendMessage,The method has an empty catch block.
Empty Catch Block,ARDrone.Control.Utils,NetworkUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\NetworkUtils.cs,GetIpAddress,The method has an empty catch block.
Empty Catch Block,ARDrone.Control.Workers,NetworkConnector,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NetworkConnector.cs,IsAlreadyConnectedToDroneNetwork,The method has an empty catch block.
Magic Number,ARDrone.Control.Commands,FlightModeCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\FlightModeCommand.cs,GetFlightModeValue,The following statement contains a magic number: int flightModeValue = 290717696;
Magic Number,ARDrone.Control.Commands,FlightModeCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\FlightModeCommand.cs,GetFlightModeValue,The following statement contains a magic number: switch (flightMode)              {                  case DroneFlightMode.TakeOff:                      flightModeValue = 290718208;                      break;                  case DroneFlightMode.Emergency:                      flightModeValue = 290717952;                      break;                  default:                      flightModeValue = 290717696;                      break;              }
Magic Number,ARDrone.Control.Commands,FlightModeCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\FlightModeCommand.cs,GetFlightModeValue,The following statement contains a magic number: switch (flightMode)              {                  case DroneFlightMode.TakeOff:                      flightModeValue = 290718208;                      break;                  case DroneFlightMode.Emergency:                      flightModeValue = 290717952;                      break;                  default:                      flightModeValue = 290717696;                      break;              }
Magic Number,ARDrone.Control.Commands,FlightModeCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\FlightModeCommand.cs,GetFlightModeValue,The following statement contains a magic number: switch (flightMode)              {                  case DroneFlightMode.TakeOff:                      flightModeValue = 290718208;                      break;                  case DroneFlightMode.Emergency:                      flightModeValue = 290717952;                      break;                  default:                      flightModeValue = 290717696;                      break;              }
Magic Number,ARDrone.Control.Data,DroneFirmwareVersion,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\DroneFirmwareVersion.cs,GetHashCode,The following statement contains a magic number: hashValue = (hashValue + versionParts[i]) * 100;
Magic Number,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,GetInternalDroneConfigStates,The following statement contains a magic number: String[] configEntryValues = configEntry.Split(separators' 3);
Magic Number,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,GetInternalDroneConfigStates,The following statement contains a magic number: configEntryValues.Length != 3
Magic Number,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,GetInternalDroneConfigStates,The following statement contains a magic number: configState.Value = configEntryValues[2].Trim();
Magic Number,ARDrone.Control.Data,DroneGeneralConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DroneGeneralConfiguration,The following statement contains a magic number: motorSoftwareVersions = new List<String>(4);
Magic Number,ARDrone.Control.Data,DroneGeneralConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DroneGeneralConfiguration,The following statement contains a magic number: motorHardwareVersions = new List<String>(4);
Magic Number,ARDrone.Control.Data,DroneGeneralConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DroneGeneralConfiguration,The following statement contains a magic number: motorSuppliers = new List<String>(4);
Magic Number,ARDrone.Control.Data,DroneData,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\NavigationData.cs,DroneData,The following statement contains a magic number: phi = navigationDataStruct.Phi / 1000.0;
Magic Number,ARDrone.Control.Data,DroneData,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\NavigationData.cs,DroneData,The following statement contains a magic number: psi = navigationDataStruct.Psi / 1000.0;
Magic Number,ARDrone.Control.Data,DroneData,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\NavigationData.cs,DroneData,The following statement contains a magic number: theta = navigationDataStruct.Theta / 1000.0;
Magic Number,ARDrone.Control,DroneConfig,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneConfig.cs,DroneConfig,The following statement contains a magic number: videoPort = 5555;
Magic Number,ARDrone.Control,DroneConfig,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneConfig.cs,DroneConfig,The following statement contains a magic number: navigationPort = 5554;
Magic Number,ARDrone.Control,DroneConfig,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneConfig.cs,DroneConfig,The following statement contains a magic number: commandPort = 5556;
Magic Number,ARDrone.Control,DroneConfig,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneConfig.cs,DroneConfig,The following statement contains a magic number: controlInfoPort = 5559;
Magic Number,ARDrone.Control,DroneConfig,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneConfig.cs,DroneConfig,The following statement contains a magic number: timeoutValue = 500;
Magic Number,ARDrone.Control.Network,NetworkWorker,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Network\NetworkWorker.cs,IsNormalDisconnectError,The following statement contains a magic number: return e.ErrorCode == 10004 && workerThreadEnded;
Magic Number,ARDrone.Control.Utils,BitmapUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\BitmapUtils.cs,BitmapSourceToBitmap,The following statement contains a magic number: int stride = width * ((imageSource.Format.BitsPerPixel + 7) / 8);
Magic Number,ARDrone.Control.Utils,BitmapUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\BitmapUtils.cs,BitmapSourceToBitmap,The following statement contains a magic number: int stride = width * ((imageSource.Format.BitsPerPixel + 7) / 8);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: streamFieldBitIndex = 32;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: uint acCoefficients = ReadStreamData(8);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: blockY2HasAcComponents = (acCoefficients >> 2 & 1) == 1;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: blockY3HasAcComponents = (acCoefficients >> 3 & 1) == 1;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: blockCbHasAcComponents = (acCoefficients >> 4 & 1) == 1;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: blockCrHasAcComponents = (acCoefficients >> 5 & 1) == 1;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: uint quantizerMode = ReadStreamData(2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: this.quantizerMode = (int)((quantizerMode < 2) ? ~quantizerMode : quantizerMode);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: (acCoefficients >> 6 & 1) == 1
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: InverseTransform(count' 2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: InverseTransform(count' 3);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: InverseTransform(count' 4);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: InverseTransform(count' 5);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: !pictureComplete && streamIndex < (imageStream.Length >> 2)
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ProcessStream,The following statement contains a magic number: CopyMemory(internalImageSource.BackBuffer' pixelDataPtr' this.pixelData.Length * 2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadHeader,The following statement contains a magic number: code = ReadStreamData(22);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadHeader,The following statement contains a magic number: startCode == 32
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,IsPictureFormatVGA,The following statement contains a magic number: return pictureFormat == 2;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,GetBlockBytes,The following statement contains a magic number: uint dcCoefficient = ReadStreamData(10);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ClearDataBuffer,The following statement contains a magic number: fixed (short* destination = dataBlockBuffer)                  {                      IntPtr sourcePtr = (IntPtr)source;                      IntPtr destinationPtr = (IntPtr)destination;                      CopyMemory(destinationPtr' sourcePtr' dataBlockBuffer.Length * 2);                  }
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,DecodeFieldBytes,The following statement contains a magic number: streamCode = PeekStreamData(imageStream' 32);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,DecodeFieldBytes,The following statement contains a magic number: temp = (int)(streamCode >> (32 - (zeroCount - 1)));
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadStreamData,The following statement contains a magic number: data = (data << (int)(32 - streamFieldBitIndex)) | (streamField >> streamFieldBitIndex);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadStreamData,The following statement contains a magic number: count -= 32 - streamFieldBitIndex;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadStreamData,The following statement contains a magic number: streamField = BitConverter.ToUInt32(imageStream' streamIndex * 4);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadStreamData,The following statement contains a magic number: count > (32 - streamFieldBitIndex)
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ReadStreamData,The following statement contains a magic number: data = (data << count) | (streamField >> (32 - count));
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,PeekStreamData,The following statement contains a magic number: data = (data << (int)(32 - streamFieldBitIndex)) | (streamField >> streamFieldBitIndex);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,PeekStreamData,The following statement contains a magic number: count -= 32 - streamFieldBitIndex;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,PeekStreamData,The following statement contains a magic number: streamField = BitConverter.ToUInt32(stream' streamIndex * 4);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,PeekStreamData,The following statement contains a magic number: count > (32 - streamFieldBitIndex) && streamIndex < (imageStream.Length >> 2)
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,PeekStreamData,The following statement contains a magic number: count > (32 - streamFieldBitIndex) && streamIndex < (imageStream.Length >> 2)
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,PeekStreamData,The following statement contains a magic number: data = (data << count) | (streamField >> (32 - count));
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,AlignStreamData,The following statement contains a magic number: alignedLength = (actualLength & ~7);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: int[] cromaQuadrantOffsets = new[] { 0' 4' 32' 36 };
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: int[] cromaQuadrantOffsets = new[] { 0' 4' 32' 36 };
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: int[] cromaQuadrantOffsets = new[] { 0' 4' 32' 36 };
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: int imageDataOffset = (sliceIndex - 1) * width * 16;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: lumaElementIndex1 = verticalStep * blockWidth * 2;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: dataIndex1 = imageDataOffset + (2 * verticalStep * width);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: chromaBlueValue = macroBlock.DataBlocks[4][chromaIndex];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: chromaRedValue = macroBlock.DataBlocks[5][chromaIndex];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: u = chromaBlueValue - 128;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: ug = 88 * u;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: ub = 454 * u;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: v = chromaRedValue - 128;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: vg = 183 * v;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: vr = 359 * v;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: int deltaIndex = 2 * horizontalStep + pixel;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: lumaElementValue1 = macroBlock.DataBlocks[quadrant][lumaElementIndex1 + deltaIndex] << 8;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: lumaElementValue2 = macroBlock.DataBlocks[quadrant][lumaElementIndex2 + deltaIndex] << 8;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: pixel < 2
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: quadrant < 4
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: horizontalStep < blockWidth / 2
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: verticalStep < blockWidth / 2
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,ComposeImageSlice,The following statement contains a magic number: imageDataOffset += 16;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,Saturate5,The following statement contains a magic number: x >>= 11;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,Saturate6,The following statement contains a magic number: x >>= 10;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,MakeRgb,The following statement contains a magic number: return (ushort)((r << 11) | (g << 5) | b);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,MakeRgb,The following statement contains a magic number: return (ushort)((r << 11) | (g << 5) | b);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,CountLeadingZeros,The following statement contains a magic number: accum += clzlut[value >> 24];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,CountLeadingZeros,The following statement contains a magic number: accum += (accum == 8) ? clzlut[(value >> 16) & 0xFF] : 0;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,CountLeadingZeros,The following statement contains a magic number: accum += (accum == 8) ? clzlut[(value >> 16) & 0xFF] : 0;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,CountLeadingZeros,The following statement contains a magic number: accum += (accum == 16) ? clzlut[(value >> 8) & 0xFF] : 0;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,CountLeadingZeros,The following statement contains a magic number: accum += (accum == 16) ? clzlut[(value >> 8) & 0xFF] : 0;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,CountLeadingZeros,The following statement contains a magic number: accum += (accum == 24) ? clzlut[value & 0xFF] : 0;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: int[] workSpace = new int[64];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: short[] data = new short[64];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 8] = dcValue;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 16] = dcValue;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 24] = dcValue;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 32] = dcValue;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 40] = dcValue;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 48] = dcValue;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 56] = dcValue;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: dataBlockBuffer[pointer + 8] == 0 &&                      dataBlockBuffer[pointer + 16] == 0 &&                      dataBlockBuffer[pointer + 24] == 0 &&                      dataBlockBuffer[pointer + 32] == 0 &&                      dataBlockBuffer[pointer + 40] == 0 &&                      dataBlockBuffer[pointer + 48] == 0 &&                      dataBlockBuffer[pointer + 56] == 0
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: z2 = dataBlockBuffer[pointer + 16];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: z3 = dataBlockBuffer[pointer + 48];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: z3 = dataBlockBuffer[pointer + 32];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp0 = dataBlockBuffer[pointer + 56];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp1 = dataBlockBuffer[pointer + 40];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp2 = dataBlockBuffer[pointer + 24];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp3 = dataBlockBuffer[pointer + 8];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 56] = ((tmp10 - tmp3 + (1 << f1)) >> f2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 8] = ((tmp11 + tmp2 + (1 << f1)) >> f2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 48] = ((tmp11 - tmp2 + (1 << f1)) >> f2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 16] = ((tmp12 + tmp1 + (1 << f1)) >> f2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 40] = ((tmp12 - tmp1 + (1 << f1)) >> f2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 24] = ((tmp13 + tmp0 + (1 << f1)) >> f2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: workSpace[pointer + 32] = ((tmp13 - tmp0 + (1 << f1)) >> f2);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: z2 = workSpace[pointer + 2];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: z3 = workSpace[pointer + 6];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp0 = (workSpace[pointer + 0] + workSpace[pointer + 4]) << constBits;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp1 = (workSpace[pointer + 0] - workSpace[pointer + 4]) << constBits;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp0 = workSpace[pointer + 7];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp1 = workSpace[pointer + 5];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: tmp2 = workSpace[pointer + 3];
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: data[pointer + 7] = (short)((tmp10 - tmp3) >> f3);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: data[pointer + 6] = (short)((tmp11 - tmp2) >> f3);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: data[pointer + 2] = (short)((tmp12 + tmp1) >> f3);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: data[pointer + 5] = (short)((tmp12 - tmp1) >> f3);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: data[pointer + 3] = (short)((tmp13 + tmp0) >> f3);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: data[pointer + 4] = (short)((tmp13 - tmp0) >> f3);
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: pointer += 8;
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: index < 8
Magic Number,ARDrone.Control.Utils,VideoUtils,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,InverseTransform,The following statement contains a magic number: fixed (short* destination = imageSlice.MacroBlocks[macroBlockIndex].DataBlocks[dataBlockIndex])                  {                      IntPtr sourcePtr = (IntPtr)source;                      IntPtr destinationPtr = (IntPtr)destination;                      CopyMemory(destinationPtr' sourcePtr' data.Length * 2);                  }
Magic Number,ARDrone.Control.Utils,MacroBlock,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,MacroBlock,The following statement contains a magic number: DataBlocks.Add(new short[64]);
Magic Number,ARDrone.Control.Utils,MacroBlock,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Utils\VideoUtils.cs,MacroBlock,The following statement contains a magic number: index < 6
Magic Number,ARDrone.Control.Workers,NetworkConnector,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NetworkConnector.cs,StartWaitingForNetworkConnection,The following statement contains a magic number: waitForConnectionTimer = new Timer(new TimerCallback(StopWaitingForNetworkConnection)' null' connectionTimeout' 250);
Magic Number,ARDrone.Control.Workers,CommandSender,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\CommandSender.cs,Initialize,The following statement contains a magic number: int maxRetryCount = 10;
Magic Number,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,WaitForFirstMessageToArrive,The following statement contains a magic number: int maxRetries = 20;
Magic Number,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,WaitForFirstMessageToArrive,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,UpdateNavigationData,The following statement contains a magic number: DetermineNavigationData(buffer' (int)(memoryStream.Position - 4));
Magic Number,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,UpdateNavigationData,The following statement contains a magic number: memoryStream.Position += size - 4;
Magic Number,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,CalculateChecksum,The following statement contains a magic number: index < buffer.Length - 8
Magic Number,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,SetStatusFlags,The following statement contains a magic number: uint initializedState = state & 2048;
Magic Number,ARDrone.Control.Workers,NavigationDataRetriever,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Workers\NavigationDataRetriever.cs,SetStatusFlags,The following statement contains a magic number: uint commandModeState = state & 64;
Magic Number,NativeWifi,WlanRateSet,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WifiInterop.cs,GetRateInMbps,The following statement contains a magic number: return (rateSet[rate] & 0x7FFF) * 0.5;
Magic Number,NativeWifi,WlanClient,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,GetStringForReasonCode,The following statement contains a magic number: StringBuilder sb = new StringBuilder(1024);
Missing Default,ARDrone.Control.Commands,FlightModeCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\FlightModeCommand.cs,SetPrerequisitesAndOutcome,The following switch statement is missing a default case: switch (flightMode)              {                  case DroneFlightMode.TakeOff:                      prerequisites.Add(CommandStatusPrerequisite.NotFlying);                      prerequisites.Add(CommandStatusPrerequisite.NotEmergency);                      outcome.Add(CommandStatusOutcome.SetFlying);                      break;                  case DroneFlightMode.Land:                      prerequisites.Add(CommandStatusPrerequisite.Flying);                      prerequisites.Add(CommandStatusPrerequisite.NotEmergency);                      outcome.Add(CommandStatusOutcome.ClearFlying);                      outcome.Add(CommandStatusOutcome.ClearHovering);                      break;                  case DroneFlightMode.Emergency:                      outcome.Add(CommandStatusOutcome.ClearFlying);                      outcome.Add(CommandStatusOutcome.ClearHovering);                      outcome.Add(CommandStatusOutcome.SetEmergency);                      break;                  case DroneFlightMode.Reset:                      outcome.Add(CommandStatusOutcome.ClearEmergency);                      break;              }
Missing Default,ARDrone.Control.Commands,HoverModeCommand,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Commands\HoverModeCommand.cs,SetPrerequisitesAndOutcome,The following switch statement is missing a default case: switch (mode)              {                  case DroneHoverMode.Hover:                      prerequisites.Add(CommandStatusPrerequisite.Flying);                      prerequisites.Add(CommandStatusPrerequisite.NotEmergency);                      prerequisites.Add(CommandStatusPrerequisite.NotHovering);                      outcome.Add(CommandStatusOutcome.SetHovering);                      break;                  case DroneHoverMode.StopHovering:                      prerequisites.Add(CommandStatusPrerequisite.Flying);                      prerequisites.Add(CommandStatusPrerequisite.NotEmergency);                      prerequisites.Add(CommandStatusPrerequisite.Hovering);                      outcome.Add(CommandStatusOutcome.ClearHovering);                      break;              }
Missing Default,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DetermineInternalConfiguration,The following switch statement is missing a default case: switch (configState.MainSection)                      {                          case "general":                              DetermineGeneralConfiguration(configState);                              break;                          case "control":                              DetermineControlConfiguration(configState);                              break;                          case "network":                              DetermineNetworkConfiguration(configState);                              break;                          case "pic":                              DetermineOtherConfiguration(configState);                              break;                        }
Missing Default,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DetermineGeneralConfiguration,The following switch statement is missing a default case: switch (configState.Key)              {                  case "num_version_mb":                      generalConfiguration.MainboardVersionInt = configState.Value;                      break;                  case "num_version_soft":                      generalConfiguration.SoftwareVersionInt = configState.Value;                      break;                  case "soft_build_date":                      generalConfiguration.SoftwareCompilationDateInt = DateTime.ParseExact(configState.Value' "yyyy-MM-dd HH:mm"' null);                      break;                  // Assuming motor values come in in the ordered correctly                  case "motor1_soft":                  case "motor2_soft":                  case "motor3_soft":                  case "motor4_soft":                      generalConfiguration.MotorSoftwareVersionsInt.Add(configState.Value);                      break;                  case "motor1_hard":                  case "motor2_hard":                  case "motor3_hard":                  case "motor4_hard":                      generalConfiguration.MotorHardwareVersionsInt.Add(configState.Value);                      break;                  case "motor1_supplier":                  case "motor2_supplier":                  case "motor3_supplier":                  case "motor4_supplier":                      generalConfiguration.MotorSuppliersInt.Add(configState.Value);                      break;                  case "ardrone_name":                      generalConfiguration.DroneNameInt = configState.Value;                      break;                  case "flying_time":                      generalConfiguration.FlightTimeInt = new TimeSpan(0' 0' Int32.Parse(configState.Value));                      break;              }
Missing Default,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DetermineControlConfiguration,The following switch statement is missing a default case: switch (configState.Key)              {                  case "altitude_max":                      controlConfiguration.MaxAltitudeInt = Int32.Parse(configState.Value);                      break;                  case "altitude_min":                      controlConfiguration.MinAltitudeInt = Int32.Parse(configState.Value);                      break;              }
Missing Default,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DetermineNetworkConfiguration,The following switch statement is missing a default case: switch (configState.Key)              {                  case "ssid_single_player":                      networkConfiguration.SsidInt = configState.Value;                      break;                  case "passkey":                      networkConfiguration.NetworkPasswordInt = configState.Value;                      break;                  case "infrastructure":                      networkConfiguration.InfrastructureInt = Boolean.Parse(configState.Value);                      break;                  case "navdata_port":                      networkConfiguration.NavigationDataPortInt = Int32.Parse(configState.Value);                      break;                  case "video_port":                      networkConfiguration.VideoDataPortInt = Int32.Parse(configState.Value);                      break;                  case "at_port":                      networkConfiguration.CommandDataPortInt = Int32.Parse(configState.Value);                      break;              }
Missing Default,ARDrone.Control.Data,InternalDroneConfiguration,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Data\InternalDroneConfiguration.cs,DetermineOtherConfiguration,The following switch statement is missing a default case: switch (configState.Key)              {                  case "ultrasound_freq":                      otherConfiguration.UltraSoundFrequencyInt = Int32.Parse(configState.Value);                      break;              }
Missing Default,ARDrone.Control,DroneControl,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\DroneControl.cs,UpdateCurrentCamera,The following switch statement is missing a default case: switch (currentCameraMode)                      {                          case DroneCameraMode.FrontCamera:                              cameraMode = DroneCameraMode.BottomCamera;                              break;                          case DroneCameraMode.BottomCamera:                              cameraMode = DroneCameraMode.PictureInPictureFront;                              break;                          case DroneCameraMode.PictureInPictureFront:                              cameraMode = DroneCameraMode.PictureInPictureBottom;                              break;                          case DroneCameraMode.PictureInPictureBottom:                              cameraMode = DroneCameraMode.FrontCamera;                              break;                      }
Missing Default,NativeWifi,WlanClient,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,OnWlanNotification,The following switch statement is missing a default case: switch(notifyData.notificationSource)  			{  				case Wlan.WlanNotificationSource.ACM:  					switch((Wlan.WlanNotificationCodeAcm)notifyData.notificationCode)  					{  						case Wlan.WlanNotificationCodeAcm.ConnectionStart:  						case Wlan.WlanNotificationCodeAcm.ConnectionComplete:  						case Wlan.WlanNotificationCodeAcm.ConnectionAttemptFail:  						case Wlan.WlanNotificationCodeAcm.Disconnecting:  						case Wlan.WlanNotificationCodeAcm.Disconnected:  							Wlan.WlanConnectionNotificationData? connNotifyData = ParseWlanConnectionNotification(ref notifyData);  							if (connNotifyData.HasValue)  								if (wlanIface != null)  									wlanIface.OnWlanConnection(notifyData' connNotifyData.Value);  							break;  						case Wlan.WlanNotificationCodeAcm.ScanFail:  							{  								int expectedSize = Marshal.SizeOf(typeof (Wlan.WlanReasonCode));  								if (notifyData.dataSize >= expectedSize)  								{  									Wlan.WlanReasonCode reasonCode = (Wlan.WlanReasonCode) Marshal.ReadInt32(notifyData.dataPtr);  									if (wlanIface != null)  										wlanIface.OnWlanReason(notifyData' reasonCode);  								}  							}  							break;  					}  					break;  				case Wlan.WlanNotificationSource.MSM:  					switch((Wlan.WlanNotificationCodeMsm)notifyData.notificationCode)  					{  						case Wlan.WlanNotificationCodeMsm.Associating:  						case Wlan.WlanNotificationCodeMsm.Associated:  						case Wlan.WlanNotificationCodeMsm.Authenticating:  						case Wlan.WlanNotificationCodeMsm.Connected:  						case Wlan.WlanNotificationCodeMsm.RoamingStart:  						case Wlan.WlanNotificationCodeMsm.RoamingEnd:  						case Wlan.WlanNotificationCodeMsm.Disassociating:  						case Wlan.WlanNotificationCodeMsm.Disconnected:  						case Wlan.WlanNotificationCodeMsm.PeerJoin:  						case Wlan.WlanNotificationCodeMsm.PeerLeave:  						case Wlan.WlanNotificationCodeMsm.AdapterRemoval:  							Wlan.WlanConnectionNotificationData? connNotifyData = ParseWlanConnectionNotification(ref notifyData);  							if (connNotifyData.HasValue)  								if (wlanIface != null)  									wlanIface.OnWlanConnection(notifyData' connNotifyData.Value);  							break;  					}  					break;  			}
Missing Default,NativeWifi,WlanClient,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,OnWlanNotification,The following switch statement is missing a default case: switch((Wlan.WlanNotificationCodeAcm)notifyData.notificationCode)  					{  						case Wlan.WlanNotificationCodeAcm.ConnectionStart:  						case Wlan.WlanNotificationCodeAcm.ConnectionComplete:  						case Wlan.WlanNotificationCodeAcm.ConnectionAttemptFail:  						case Wlan.WlanNotificationCodeAcm.Disconnecting:  						case Wlan.WlanNotificationCodeAcm.Disconnected:  							Wlan.WlanConnectionNotificationData? connNotifyData = ParseWlanConnectionNotification(ref notifyData);  							if (connNotifyData.HasValue)  								if (wlanIface != null)  									wlanIface.OnWlanConnection(notifyData' connNotifyData.Value);  							break;  						case Wlan.WlanNotificationCodeAcm.ScanFail:  							{  								int expectedSize = Marshal.SizeOf(typeof (Wlan.WlanReasonCode));  								if (notifyData.dataSize >= expectedSize)  								{  									Wlan.WlanReasonCode reasonCode = (Wlan.WlanReasonCode) Marshal.ReadInt32(notifyData.dataPtr);  									if (wlanIface != null)  										wlanIface.OnWlanReason(notifyData' reasonCode);  								}  							}  							break;  					}
Missing Default,NativeWifi,WlanClient,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,OnWlanNotification,The following switch statement is missing a default case: switch((Wlan.WlanNotificationCodeMsm)notifyData.notificationCode)  					{  						case Wlan.WlanNotificationCodeMsm.Associating:  						case Wlan.WlanNotificationCodeMsm.Associated:  						case Wlan.WlanNotificationCodeMsm.Authenticating:  						case Wlan.WlanNotificationCodeMsm.Connected:  						case Wlan.WlanNotificationCodeMsm.RoamingStart:  						case Wlan.WlanNotificationCodeMsm.RoamingEnd:  						case Wlan.WlanNotificationCodeMsm.Disassociating:  						case Wlan.WlanNotificationCodeMsm.Disconnected:  						case Wlan.WlanNotificationCodeMsm.PeerJoin:  						case Wlan.WlanNotificationCodeMsm.PeerLeave:  						case Wlan.WlanNotificationCodeMsm.AdapterRemoval:  							Wlan.WlanConnectionNotificationData? connNotifyData = ParseWlanConnectionNotification(ref notifyData);  							if (connNotifyData.HasValue)  								if (wlanIface != null)  									wlanIface.OnWlanConnection(notifyData' connNotifyData.Value);  							break;  					}
Missing Default,NativeWifi,WlanInterface,D:\research\architectureSmells\repos1\shtejv_ARDrone-Control-.NET\ARDroneControlLibrary\Wifi\WlanApi.cs,ConnectSynchronously,The following switch statement is missing a default case: switch ((Wlan.WlanNotificationCodeAcm)wlanConnectionData.notifyData.notificationCode)                                          {                                              case Wlan.WlanNotificationCodeAcm.ConnectionComplete:                                                  if (wlanConnectionData.connNotifyData.dot11Ssid.SSID.ToString() == ssid.SSID.ToString())                                                      return true;                                                  break;                                          }
