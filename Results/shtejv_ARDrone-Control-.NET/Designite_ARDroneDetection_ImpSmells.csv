Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,GetAdviceForCoordinates,The length of the statement  "            double idealRatio = Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 + angle)) / Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 - angle)); " is 152.
Long Statement,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,GetAdviceForCoordinates,The length of the statement  "            double differenceAngle = Math.Atan(((firstSection - idealFirstSection) / idealFirstSection) * Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 - angle))); " is 160.
Long Statement,ARDrone.Detection,DetectionUtils,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\DetectionUtils.cs,ConvertImageToBitmapSource,The length of the statement  "                BitmapSource bitmapSource = System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap(pointer' IntPtr.Zero' Int32Rect.Empty' BitmapSizeOptions.FromEmptyOptions()); " is 166.
Long Statement,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The length of the statement  "            Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) }; " is 169.
Long Statement,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,DetectStopSign,The length of the statement  "                Contour<Point> contours = filteredImage.FindContours(Emgu.CV.CvEnum.CHAIN_APPROX_METHOD.CV_CHAIN_APPROX_SIMPLE' Emgu.CV.CvEnum.RETR_TYPE.CV_RETR_TREE' storage); " is 160.
Long Statement,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,FindSign,The length of the statement  "                    double ratio = CvInvoke.cvMatchShapes(octagonContour' contours' Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE.CV_CONTOURS_MATCH_I3' 0); " is 124.
Long Statement,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,SetPixelsOutsideContourAreaToZero,The length of the statement  "                mask.Draw(contours' new Gray(255)' new Gray(255)' 0' -1' new Point(-contourBoundingRectangle.X' -contourBoundingRectangle.Y)); " is 126.
Magic Number,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,getMiddle,The following statement contains a magic number: return new Point((rectangle.Right + rectangle.Left) / 2' (rectangle.Bottom + rectangle.Top) / 2);
Magic Number,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,getMiddle,The following statement contains a magic number: return new Point((rectangle.Right + rectangle.Left) / 2' (rectangle.Bottom + rectangle.Top) / 2);
Magic Number,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,GetAdviceForCoordinates,The following statement contains a magic number: double idealRatio = Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 + angle)) / Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 - angle));
Magic Number,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,GetAdviceForCoordinates,The following statement contains a magic number: double idealRatio = Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 + angle)) / Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 - angle));
Magic Number,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,GetAdviceForCoordinates,The following statement contains a magic number: double differenceAngle = Math.Atan(((firstSection - idealFirstSection) / idealFirstSection) * Math.Tan(GetRadianFromAngularDegrees(fieldOfView / 2.0 - angle)));
Magic Number,ARDrone.Detection,CourseAdvisor,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\CourseAdvisor.cs,GetRadianFromAngularDegrees,The following statement contains a magic number: return (Math.PI / 180.0) * angularDegrees;
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateSurfaceTracker,The following statement contains a magic number: surfaceParameters = new SURFDetector(500' false);
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,ApplyMasks,The following statement contains a magic number: channels[1]._ThresholdBinary(new Gray(10)' new Gray(255.0));
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,ApplyMasks,The following statement contains a magic number: channels[1]._ThresholdBinary(new Gray(10)' new Gray(255.0));
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,DisposeChannels,The following statement contains a magic number: channels[2].Dispose();
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,CreateContour,The following statement contains a magic number: Point[] octagon = new Point[] { new Point(1' 0)' new Point(2' 0)' new Point(3' 1)' new Point(3' 2)' new Point(2' 3)' new Point(1' 3)' new Point(0' 2)' new Point(0' 1) };
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Bgr' Byte> smoothedImage = image.SmoothGaussian(5' 5' 1.5' 1.5);
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Bgr' Byte> smoothedImage = image.SmoothGaussian(5' 5' 1.5' 1.5);
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Bgr' Byte> smoothedImage = image.SmoothGaussian(5' 5' 1.5' 1.5);
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Bgr' Byte> smoothedImage = image.SmoothGaussian(5' 5' 1.5' 1.5);
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Gray' Byte> cannyImage = smoothedRedMask.Erode(5).Dilate(5).Canny(new Gray(100)' new Gray(50));
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Gray' Byte> cannyImage = smoothedRedMask.Erode(5).Dilate(5).Canny(new Gray(100)' new Gray(50));
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Gray' Byte> cannyImage = smoothedRedMask.Erode(5).Dilate(5).Canny(new Gray(100)' new Gray(50));
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetFilteredImage,The following statement contains a magic number: Image<Gray' Byte> cannyImage = smoothedRedMask.Erode(5).Dilate(5).Canny(new Gray(100)' new Gray(50));
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,FindSign,The following statement contains a magic number: for (; contours != null; contours = contours.HNext)              {                  contours.ApproxPoly(contours.Perimeter * 0.02' 0' contours.Storage);                    if (contours.Area > 200)                  {                      double ratio = CvInvoke.cvMatchShapes(octagonContour' contours' Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE.CV_CONTOURS_MATCH_I3' 0);                        if (ratio > 0.05) //not a good match of contour shape                      {                          results.AddRange(FindSignInChildren(image' contours));                      }                      else                      {                          SignResult result = DetectSignInCurrentContour(image' contours);                          if (result != null) { results.Add(result); }                      }                  }              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,FindSign,The following statement contains a magic number: for (; contours != null; contours = contours.HNext)              {                  contours.ApproxPoly(contours.Perimeter * 0.02' 0' contours.Storage);                    if (contours.Area > 200)                  {                      double ratio = CvInvoke.cvMatchShapes(octagonContour' contours' Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE.CV_CONTOURS_MATCH_I3' 0);                        if (ratio > 0.05) //not a good match of contour shape                      {                          results.AddRange(FindSignInChildren(image' contours));                      }                      else                      {                          SignResult result = DetectSignInCurrentContour(image' contours);                          if (result != null) { results.Add(result); }                      }                  }              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,FindSign,The following statement contains a magic number: for (; contours != null; contours = contours.HNext)              {                  contours.ApproxPoly(contours.Perimeter * 0.02' 0' contours.Storage);                    if (contours.Area > 200)                  {                      double ratio = CvInvoke.cvMatchShapes(octagonContour' contours' Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE.CV_CONTOURS_MATCH_I3' 0);                        if (ratio > 0.05) //not a good match of contour shape                      {                          results.AddRange(FindSignInChildren(image' contours));                      }                      else                      {                          SignResult result = DetectSignInCurrentContour(image' contours);                          if (result != null) { results.Add(result); }                      }                  }              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,DetectSignInCurrentContour,The following statement contains a magic number: if (matchedFeatureCount >= 3)              {                  result = new SignResult(contourImage' contourBoundingRectangle);              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,SetPixelsOutsideContourAreaToZero,The following statement contains a magic number: using (Image<Gray' Byte> mask = new Image<Gray' byte>(contourBoundingRectangle.Size))              {                  mask.Draw(contours' new Gray(255)' new Gray(255)' 0' -1' new Point(-contourBoundingRectangle.X' -contourBoundingRectangle.Y));                    double mean = CvInvoke.cvAvg(contourImage' mask).v0;                  contourImage._ThresholdBinary(new Gray(mean)' new Gray(255.0));                  contourImage._Not();                  mask._Not();                  contourImage.SetValue(0' mask);              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,SetPixelsOutsideContourAreaToZero,The following statement contains a magic number: using (Image<Gray' Byte> mask = new Image<Gray' byte>(contourBoundingRectangle.Size))              {                  mask.Draw(contours' new Gray(255)' new Gray(255)' 0' -1' new Point(-contourBoundingRectangle.X' -contourBoundingRectangle.Y));                    double mean = CvInvoke.cvAvg(contourImage' mask).v0;                  contourImage._ThresholdBinary(new Gray(mean)' new Gray(255.0));                  contourImage._Not();                  mask._Not();                  contourImage.SetValue(0' mask);              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,SetPixelsOutsideContourAreaToZero,The following statement contains a magic number: using (Image<Gray' Byte> mask = new Image<Gray' byte>(contourBoundingRectangle.Size))              {                  mask.Draw(contours' new Gray(255)' new Gray(255)' 0' -1' new Point(-contourBoundingRectangle.X' -contourBoundingRectangle.Y));                    double mean = CvInvoke.cvAvg(contourImage' mask).v0;                  contourImage._ThresholdBinary(new Gray(mean)' new Gray(255.0));                  contourImage._Not();                  mask._Not();                  contourImage.SetValue(0' mask);              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetMatchedFeatureCount,The following statement contains a magic number: try              {                  //return 20;                  ImageFeature[] features = surfaceParameters.DetectFeatures(contourImage' null);                  matchedFeatures = featureTracker.MatchFeature(features' 2);              }              catch (AccessViolationException)              {                  Console.WriteLine("Access Violation Exception encountered");                  return 0;              }              catch (Exception)              {                  return 0;              }
Magic Number,ARDrone.Detection,SignDetector,C:\repos\shtejv_ARDrone-Control-.NET\ARDroneDetection\SignDetector.cs,GetMatchedFeatureCount,The following statement contains a magic number: foreach (Features2DTracker.MatchedImageFeature feature in matchedFeatures)              {                  if (feature.SimilarFeatures[0].Distance < 0.5)                      matchedFeatureCount++;              }
