Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,W8T.Samples.Data,BusinessAccount,C:\repos\W8T_W8T.Samples\W8T.SplitSample\DataModel\BusinessAccount.cs,BusinessAccount,The method has 5 parameters.
Long Parameter List,W8T.Samples.Data,SampleDataItem,C:\repos\W8T_W8T.Samples\W8T.SplitSample\DataModel\SampleDataItem.cs,SampleDataItem,The method has 6 parameters.
Long Parameter List,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,NavigationHelper,The method has 5 parameters.
Long Statement,W8T.Samples.Data,SampleDataSource,C:\repos\W8T_W8T.Samples\W8T.SplitSample\DataModel\SampleDataSource.cs,GetItemAsync,The length of the statement  "	var matches = _sampleDataSource.Groups.SelectMany (group => group.Items).Where (item => item.UniqueId.Equals (uniqueId)); " is 121.
Long Statement,W8T.Samples.Data,SampleDataSource,C:\repos\W8T_W8T.Samples\W8T.SplitSample\DataModel\SampleDataSource.cs,GetSampleDataAsync,The length of the statement  "		BusinessAccount group = new BusinessAccount (uneAffaire.ID.ToString ()' uneAffaire.Name' uneAffaire.WAC' uneAffaire.Picture' uneAffaire.Description); " is 149.
Long Statement,W8T.Samples.Common,ObservableDictionary,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\ObservableDictionary.cs,Remove,The length of the statement  "	if (this._dictionary.TryGetValue (item.Key' out currentValue) && Object.Equals (item.Value' currentValue) && this._dictionary.Remove (item.Key)) { " is 146.
Long Statement,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 240.
Long Statement,W8T.Samples.Common,SuspensionManager,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,W8T.Samples.Common,SuspensionManager,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\SuspensionManager.cs,RestoreAsync,The length of the statement  "			if (weakFrameReference.TryGetTarget (out frame) && (string)frame.GetValue (FrameSessionBaseKeyProperty) == sessionBaseKey) { " is 124.
Long Statement,W8T.Samples.Common,SuspensionManager,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Complex Conditional,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,W8T.Samples,App,C:\repos\W8T_W8T.Samples\W8T.SplitSample\App.xaml.cs,OnLaunched,The method has an empty catch block.
Magic Number,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,W8T.Samples.Common,NavigationHelper,C:\repos\W8T_W8T.Samples\W8T.SplitSample\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
