Implementation smell,Namespace,Class,File,Method,Description
Complex Method,tIMS.Business,Email,C:\repos\benharrison_tIMS\tIMS.Business\Email.cs,Email,Cyclomatic complexity of the method is 9
Complex Method,tIMS.Business,Email,C:\repos\benharrison_tIMS\tIMS.Business\Email.cs,Send,Cyclomatic complexity of the method is 9
Complex Method,tIMS.Business.Reports,CorporateInventory,C:\repos\benharrison_tIMS\tIMS.Business\Reports\CorporateInventory.cs,GenerateReport,Cyclomatic complexity of the method is 8
Long Parameter List,tIMS.Business,Email,C:\repos\benharrison_tIMS\tIMS.Business\Email.cs,Send,The method has 6 parameters.
Long Statement,tIMS.Business,Category,C:\repos\benharrison_tIMS\tIMS.Business\Category.cs,Insert,The length of the statement  "		DB.ExecuteStoredProcedure ("sp_Category_Insert"' new SqlParameter ("CategoryName"' categoryName)' new SqlParameter ("ParentId"' parentId)); " is 139.
Long Statement,tIMS.Business,Product,C:\repos\benharrison_tIMS\tIMS.Business\Product.cs,Insert,The length of the statement  "		DB.ExecuteStoredProcedure ("sp_Product_Insert"' new SqlParameter ("ProductNumber"' item.ProductNumber)' new SqlParameter ("Category"' item.Category)' new SqlParameter ("Active"' item.Active)' new SqlParameter ("WholesalePrice"' item.WholesalePrice)' new SqlParameter ("RetailPrice"' item.RetailPrice)' new SqlParameter ("Description"' item.Description)' new SqlParameter ("Quantity"' item.Quantity)); " is 400.
Long Statement,tIMS.Business,Product,C:\repos\benharrison_tIMS\tIMS.Business\Product.cs,GetPriceHistory,The length of the statement  "	return DB.ExecuteStoredProcedure ("sp_Product_GetPriceHistory"' new SqlParameter ("ProductNumber"' item.ProductNumber)); " is 120.
Long Statement,tIMS.Business,Product,C:\repos\benharrison_tIMS\tIMS.Business\Product.cs,GetQuantityHistory,The length of the statement  "	return DB.ExecuteStoredProcedure ("sp_Product_GetQuantityHistory"' new SqlParameter ("ProductNumber"' item.ProductNumber)); " is 123.
Long Statement,tIMS.Business,Quantity,C:\repos\benharrison_tIMS\tIMS.Business\Quantity.cs,SetQuantity,The length of the statement  "	DataSet ds = DB.ExecuteStoredProcedure ("sp_Quantity_Insert"' new SqlParameter ("ProductNumber"' productNumber)' new SqlParameter ("Count"' count)); " is 148.
Long Statement,tIMS.Business.Reports,CorporateInventory,C:\repos\benharrison_tIMS\tIMS.Business\Reports\CorporateInventory.cs,GenerateReport,The length of the statement  "		email.Send (to: to' cc: null' bcc: bcc' subject: "Trollbeads Inventory"' body: string.Empty' filePathForAttachment: temporaryFilePath); " is 135.
Empty Catch Block,tIMS.Business,Email,C:\repos\benharrison_tIMS\tIMS.Business\Email.cs,Send,The method has an empty catch block.
Empty Catch Block,tIMS.Business,Price,C:\repos\benharrison_tIMS\tIMS.Business\Price.cs,GetPriceHistory,The method has an empty catch block.
Empty Catch Block,tIMS.Business,Product,C:\repos\benharrison_tIMS\tIMS.Business\Product.cs,Update,The method has an empty catch block.
Empty Catch Block,tIMS.Business,Quantity,C:\repos\benharrison_tIMS\tIMS.Business\Quantity.cs,GetQuantityHistory,The method has an empty catch block.
Empty Catch Block,tIMS.Business.Data,DB,C:\repos\benharrison_tIMS\tIMS.Business\Data\DB.cs,ExecuteStoredProcedure,The method has an empty catch block.
