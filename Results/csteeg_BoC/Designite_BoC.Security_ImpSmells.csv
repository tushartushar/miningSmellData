Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BoC.Security.Model,User,C:\repos\csteeg_BoC\Src\Commons.Security\Model\User.cs,User,The method has 7 parameters. Parameters: login' password' email' name' passwordQuestion' passwordAnswer' isApproved
Long Statement,BoC.Security.Model,User,C:\repos\csteeg_BoC\Src\Commons.Security\Model\User.cs,IsInRole,The length of the statement  "            //TODO: If it's ever decided that a model object can have a reference to the service' we should use the service to perform a single query for this " is 146.
Long Statement,BoC.Security.Model,User,C:\repos\csteeg_BoC\Src\Commons.Security\Model\User.cs,ToMembershipUser,The length of the statement  "                //TODO: Find out a reason why you would ever want to use a different providername then the default one' is it possible to switch provider every now and then ?? " is 159.
Magic Number,BoC.Security.Services,DefaultUserService,C:\repos\csteeg_BoC\Src\Commons.Security\Services\DefaultUserService.cs,DefaultUserService,The following statement contains a magic number: MinRequiredPasswordLength = 5;
Magic Number,BoC.Security.Services,DefaultUserService,C:\repos\csteeg_BoC\Src\Commons.Security\Services\DefaultUserService.cs,DefaultUserService,The following statement contains a magic number: PasswordAttemptWindowMinutes = 10;
Magic Number,BoC.Security.Services,DefaultUserService,C:\repos\csteeg_BoC\Src\Commons.Security\Services\DefaultUserService.cs,DefaultUserService,The following statement contains a magic number: MaxInvalidPasswordAttempts = 10;
Magic Number,BoC.Security.Services,DefaultUserService,C:\repos\csteeg_BoC\Src\Commons.Security\Services\DefaultUserService.cs,DecryptPassword,The following statement contains a magic number: using (SymmetricAlgorithm alg = GetAlg(out decryptionKey))  			{  				alg.Key = decryptionKey;    				using (ICryptoTransform decryptor = alg.CreateDecryptor())  				{  					byte[] buf = decryptor.TransformFinalBlock(encodedPassword' 0' encodedPassword.Length);  					var rv = new byte[buf.Length - SALT_BYTES];    					Array.Copy(buf' 16' rv' 0' buf.Length - 16);  					return rv;  				}  			}
Magic Number,BoC.Security.Services,DefaultUserService,C:\repos\csteeg_BoC\Src\Commons.Security\Services\DefaultUserService.cs,DecryptPassword,The following statement contains a magic number: using (SymmetricAlgorithm alg = GetAlg(out decryptionKey))  			{  				alg.Key = decryptionKey;    				using (ICryptoTransform decryptor = alg.CreateDecryptor())  				{  					byte[] buf = decryptor.TransformFinalBlock(encodedPassword' 0' encodedPassword.Length);  					var rv = new byte[buf.Length - SALT_BYTES];    					Array.Copy(buf' 16' rv' 0' buf.Length - 16);  					return rv;  				}  			}
